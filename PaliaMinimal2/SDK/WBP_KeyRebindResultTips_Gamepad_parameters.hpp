#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_KeyRebindResultTips_Gamepad

#include "Basic.hpp"

#include "KeyRebinding_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function WBP_KeyRebindResultTips_Gamepad.WBP_KeyRebindResultTips_Gamepad_C.ExecuteUbergraph_WBP_KeyRebindResultTips_Gamepad
// 0x00E8 (0x00E8 - 0x0000)
struct WBP_KeyRebindResultTips_Gamepad_C_ExecuteUbergraph_WBP_KeyRebindResultTips_Gamepad final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5098[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKeyRebind_DisplayResult               K2Node_Event_KeyRebindResultInfo;                  // 0x0008(0x00E0)()
};
static_assert(alignof(WBP_KeyRebindResultTips_Gamepad_C_ExecuteUbergraph_WBP_KeyRebindResultTips_Gamepad) == 0x000008, "Wrong alignment on WBP_KeyRebindResultTips_Gamepad_C_ExecuteUbergraph_WBP_KeyRebindResultTips_Gamepad");
static_assert(sizeof(WBP_KeyRebindResultTips_Gamepad_C_ExecuteUbergraph_WBP_KeyRebindResultTips_Gamepad) == 0x0000E8, "Wrong size on WBP_KeyRebindResultTips_Gamepad_C_ExecuteUbergraph_WBP_KeyRebindResultTips_Gamepad");
static_assert(offsetof(WBP_KeyRebindResultTips_Gamepad_C_ExecuteUbergraph_WBP_KeyRebindResultTips_Gamepad, EntryPoint) == 0x000000, "Member 'WBP_KeyRebindResultTips_Gamepad_C_ExecuteUbergraph_WBP_KeyRebindResultTips_Gamepad::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_KeyRebindResultTips_Gamepad_C_ExecuteUbergraph_WBP_KeyRebindResultTips_Gamepad, K2Node_Event_KeyRebindResultInfo) == 0x000008, "Member 'WBP_KeyRebindResultTips_Gamepad_C_ExecuteUbergraph_WBP_KeyRebindResultTips_Gamepad::K2Node_Event_KeyRebindResultInfo' has a wrong offset!");

// Function WBP_KeyRebindResultTips_Gamepad.WBP_KeyRebindResultTips_Gamepad_C.GetGlobalGroupActionName
// 0x01A8 (0x01A8 - 0x0000)
struct WBP_KeyRebindResultTips_Gamepad_C_GetGlobalGroupActionName final
{
public:
	class UInputAction*                           InInputAction;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FText                                   ActionName;                                        // 0x0008(0x0018)(Parm, OutParm)
	bool                                          bHasFound;                                         // 0x0020(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5099[0x7];                                     // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<class UInputAction*, class FText>        InputActionsofGlobalGroup_NS;                      // 0x0028(0x0050)(Edit, BlueprintVisible)
	TMap<class UInputAction*, class FText>        InputActionsofGlobalGroup_PC;                      // 0x0078(0x0050)(Edit, BlueprintVisible)
	TMap<class UInputAction*, class FText>        K2Node_MakeVariable_MakeVariableOutput;            // 0x00C8(0x0050)()
	TMap<class UInputAction*, class FText>        K2Node_MakeVariable_MakeVariableOutput_1;          // 0x0118(0x0050)()
	class FText                                   CallFunc_Map_Find_Value;                           // 0x0168(0x0018)()
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0180(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_509A[0x7];                                     // 0x0181(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Map_Find_Value_1;                         // 0x0188(0x0018)()
	bool                                          CallFunc_Map_Find_ReturnValue_1;                   // 0x01A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsSwitchPlatform_ReturnValue;             // 0x01A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsWindowsPlatform_ReturnValue;            // 0x01A2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_KeyRebindResultTips_Gamepad_C_GetGlobalGroupActionName) == 0x000008, "Wrong alignment on WBP_KeyRebindResultTips_Gamepad_C_GetGlobalGroupActionName");
static_assert(sizeof(WBP_KeyRebindResultTips_Gamepad_C_GetGlobalGroupActionName) == 0x0001A8, "Wrong size on WBP_KeyRebindResultTips_Gamepad_C_GetGlobalGroupActionName");
static_assert(offsetof(WBP_KeyRebindResultTips_Gamepad_C_GetGlobalGroupActionName, InInputAction) == 0x000000, "Member 'WBP_KeyRebindResultTips_Gamepad_C_GetGlobalGroupActionName::InInputAction' has a wrong offset!");
static_assert(offsetof(WBP_KeyRebindResultTips_Gamepad_C_GetGlobalGroupActionName, ActionName) == 0x000008, "Member 'WBP_KeyRebindResultTips_Gamepad_C_GetGlobalGroupActionName::ActionName' has a wrong offset!");
static_assert(offsetof(WBP_KeyRebindResultTips_Gamepad_C_GetGlobalGroupActionName, bHasFound) == 0x000020, "Member 'WBP_KeyRebindResultTips_Gamepad_C_GetGlobalGroupActionName::bHasFound' has a wrong offset!");
static_assert(offsetof(WBP_KeyRebindResultTips_Gamepad_C_GetGlobalGroupActionName, InputActionsofGlobalGroup_NS) == 0x000028, "Member 'WBP_KeyRebindResultTips_Gamepad_C_GetGlobalGroupActionName::InputActionsofGlobalGroup_NS' has a wrong offset!");
static_assert(offsetof(WBP_KeyRebindResultTips_Gamepad_C_GetGlobalGroupActionName, InputActionsofGlobalGroup_PC) == 0x000078, "Member 'WBP_KeyRebindResultTips_Gamepad_C_GetGlobalGroupActionName::InputActionsofGlobalGroup_PC' has a wrong offset!");
static_assert(offsetof(WBP_KeyRebindResultTips_Gamepad_C_GetGlobalGroupActionName, K2Node_MakeVariable_MakeVariableOutput) == 0x0000C8, "Member 'WBP_KeyRebindResultTips_Gamepad_C_GetGlobalGroupActionName::K2Node_MakeVariable_MakeVariableOutput' has a wrong offset!");
static_assert(offsetof(WBP_KeyRebindResultTips_Gamepad_C_GetGlobalGroupActionName, K2Node_MakeVariable_MakeVariableOutput_1) == 0x000118, "Member 'WBP_KeyRebindResultTips_Gamepad_C_GetGlobalGroupActionName::K2Node_MakeVariable_MakeVariableOutput_1' has a wrong offset!");
static_assert(offsetof(WBP_KeyRebindResultTips_Gamepad_C_GetGlobalGroupActionName, CallFunc_Map_Find_Value) == 0x000168, "Member 'WBP_KeyRebindResultTips_Gamepad_C_GetGlobalGroupActionName::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(WBP_KeyRebindResultTips_Gamepad_C_GetGlobalGroupActionName, CallFunc_Map_Find_ReturnValue) == 0x000180, "Member 'WBP_KeyRebindResultTips_Gamepad_C_GetGlobalGroupActionName::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_KeyRebindResultTips_Gamepad_C_GetGlobalGroupActionName, CallFunc_Map_Find_Value_1) == 0x000188, "Member 'WBP_KeyRebindResultTips_Gamepad_C_GetGlobalGroupActionName::CallFunc_Map_Find_Value_1' has a wrong offset!");
static_assert(offsetof(WBP_KeyRebindResultTips_Gamepad_C_GetGlobalGroupActionName, CallFunc_Map_Find_ReturnValue_1) == 0x0001A0, "Member 'WBP_KeyRebindResultTips_Gamepad_C_GetGlobalGroupActionName::CallFunc_Map_Find_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_KeyRebindResultTips_Gamepad_C_GetGlobalGroupActionName, CallFunc_IsSwitchPlatform_ReturnValue) == 0x0001A1, "Member 'WBP_KeyRebindResultTips_Gamepad_C_GetGlobalGroupActionName::CallFunc_IsSwitchPlatform_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_KeyRebindResultTips_Gamepad_C_GetGlobalGroupActionName, CallFunc_IsWindowsPlatform_ReturnValue) == 0x0001A2, "Member 'WBP_KeyRebindResultTips_Gamepad_C_GetGlobalGroupActionName::CallFunc_IsWindowsPlatform_ReturnValue' has a wrong offset!");

// Function WBP_KeyRebindResultTips_Gamepad.WBP_KeyRebindResultTips_Gamepad_C.RefreshCoreActionTipsText
// 0x01D8 (0x01D8 - 0x0000)
struct WBP_KeyRebindResultTips_Gamepad_C_RefreshCoreActionTipsText final
{
public:
	struct FKeyRebind_DisplayResult               ResultInfo;                                        // 0x0000(0x00E0)(BlueprintVisible, BlueprintReadOnly, Parm)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x00E0(0x0050)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x0130(0x0050)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0180(0x0010)(ReferenceParm)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_1;                          // 0x0190(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x01A0(0x0018)()
	class FText                                   CallFunc_Format_ReturnValue_1;                     // 0x01B8(0x0018)()
	bool                                          CallFunc_Array_IsNotEmpty_ReturnValue;             // 0x01D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_KeyRebindResultTips_Gamepad_C_RefreshCoreActionTipsText) == 0x000008, "Wrong alignment on WBP_KeyRebindResultTips_Gamepad_C_RefreshCoreActionTipsText");
static_assert(sizeof(WBP_KeyRebindResultTips_Gamepad_C_RefreshCoreActionTipsText) == 0x0001D8, "Wrong size on WBP_KeyRebindResultTips_Gamepad_C_RefreshCoreActionTipsText");
static_assert(offsetof(WBP_KeyRebindResultTips_Gamepad_C_RefreshCoreActionTipsText, ResultInfo) == 0x000000, "Member 'WBP_KeyRebindResultTips_Gamepad_C_RefreshCoreActionTipsText::ResultInfo' has a wrong offset!");
static_assert(offsetof(WBP_KeyRebindResultTips_Gamepad_C_RefreshCoreActionTipsText, K2Node_MakeStruct_FormatArgumentData) == 0x0000E0, "Member 'WBP_KeyRebindResultTips_Gamepad_C_RefreshCoreActionTipsText::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(WBP_KeyRebindResultTips_Gamepad_C_RefreshCoreActionTipsText, K2Node_MakeStruct_FormatArgumentData_1) == 0x000130, "Member 'WBP_KeyRebindResultTips_Gamepad_C_RefreshCoreActionTipsText::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(WBP_KeyRebindResultTips_Gamepad_C_RefreshCoreActionTipsText, K2Node_MakeArray_Array) == 0x000180, "Member 'WBP_KeyRebindResultTips_Gamepad_C_RefreshCoreActionTipsText::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(WBP_KeyRebindResultTips_Gamepad_C_RefreshCoreActionTipsText, K2Node_MakeArray_Array_1) == 0x000190, "Member 'WBP_KeyRebindResultTips_Gamepad_C_RefreshCoreActionTipsText::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(WBP_KeyRebindResultTips_Gamepad_C_RefreshCoreActionTipsText, CallFunc_Format_ReturnValue) == 0x0001A0, "Member 'WBP_KeyRebindResultTips_Gamepad_C_RefreshCoreActionTipsText::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_KeyRebindResultTips_Gamepad_C_RefreshCoreActionTipsText, CallFunc_Format_ReturnValue_1) == 0x0001B8, "Member 'WBP_KeyRebindResultTips_Gamepad_C_RefreshCoreActionTipsText::CallFunc_Format_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_KeyRebindResultTips_Gamepad_C_RefreshCoreActionTipsText, CallFunc_Array_IsNotEmpty_ReturnValue) == 0x0001D0, "Member 'WBP_KeyRebindResultTips_Gamepad_C_RefreshCoreActionTipsText::CallFunc_Array_IsNotEmpty_ReturnValue' has a wrong offset!");

// Function WBP_KeyRebindResultTips_Gamepad.WBP_KeyRebindResultTips_Gamepad_C.RefreshGlobalConflictTipsText
// 0x0310 (0x0310 - 0x0000)
struct WBP_KeyRebindResultTips_Gamepad_C_RefreshGlobalConflictTipsText final
{
public:
	struct FKeyRebind_DisplayResult               ResultInfo;                                        // 0x0000(0x00E0)(BlueprintVisible, BlueprintReadOnly, Parm)
	class FText                                   Temp_text_Variable;                                // 0x00E0(0x0018)()
	class FText                                   CallFunc_GetGlobalGroupActionName_ActionName;      // 0x00F8(0x0018)()
	bool                                          CallFunc_GetGlobalGroupActionName_bHasFound;       // 0x0110(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_509B[0x7];                                     // 0x0111(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UInputAction*                           CallFunc_Array_Get_Item;                           // 0x0118(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FText                                   Temp_text_Variable_1;                              // 0x0120(0x0018)()
	class FText                                   CallFunc_GetGlobalGroupActionName_ActionName_1;    // 0x0138(0x0018)()
	bool                                          CallFunc_GetGlobalGroupActionName_bHasFound_1;     // 0x0150(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_509C[0x7];                                     // 0x0151(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Temp_text_Variable_2;                              // 0x0158(0x0018)()
	class FText                                   Temp_text_Variable_3;                              // 0x0170(0x0018)()
	class FText                                   Temp_text_Variable_4;                              // 0x0188(0x0018)()
	class FText                                   Temp_text_Variable_5;                              // 0x01A0(0x0018)()
	class FText                                   Temp_text_Variable_6;                              // 0x01B8(0x0018)()
	EKeyRebind_BindingResultType                  Temp_byte_Variable;                                // 0x01D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x01D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x01D2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_509D[0x5];                                     // 0x01D3(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select_Default;                             // 0x01D8(0x0018)()
	class FText                                   K2Node_Select_Default_1;                           // 0x01F0(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0208(0x0050)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x0258(0x0050)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x02A8(0x0010)(ReferenceParm)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_1;                          // 0x02B8(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x02C8(0x0018)()
	class FText                                   CallFunc_Format_ReturnValue_1;                     // 0x02E0(0x0018)()
	class FText                                   K2Node_Select_Default_2;                           // 0x02F8(0x0018)()
};
static_assert(alignof(WBP_KeyRebindResultTips_Gamepad_C_RefreshGlobalConflictTipsText) == 0x000008, "Wrong alignment on WBP_KeyRebindResultTips_Gamepad_C_RefreshGlobalConflictTipsText");
static_assert(sizeof(WBP_KeyRebindResultTips_Gamepad_C_RefreshGlobalConflictTipsText) == 0x000310, "Wrong size on WBP_KeyRebindResultTips_Gamepad_C_RefreshGlobalConflictTipsText");
static_assert(offsetof(WBP_KeyRebindResultTips_Gamepad_C_RefreshGlobalConflictTipsText, ResultInfo) == 0x000000, "Member 'WBP_KeyRebindResultTips_Gamepad_C_RefreshGlobalConflictTipsText::ResultInfo' has a wrong offset!");
static_assert(offsetof(WBP_KeyRebindResultTips_Gamepad_C_RefreshGlobalConflictTipsText, Temp_text_Variable) == 0x0000E0, "Member 'WBP_KeyRebindResultTips_Gamepad_C_RefreshGlobalConflictTipsText::Temp_text_Variable' has a wrong offset!");
static_assert(offsetof(WBP_KeyRebindResultTips_Gamepad_C_RefreshGlobalConflictTipsText, CallFunc_GetGlobalGroupActionName_ActionName) == 0x0000F8, "Member 'WBP_KeyRebindResultTips_Gamepad_C_RefreshGlobalConflictTipsText::CallFunc_GetGlobalGroupActionName_ActionName' has a wrong offset!");
static_assert(offsetof(WBP_KeyRebindResultTips_Gamepad_C_RefreshGlobalConflictTipsText, CallFunc_GetGlobalGroupActionName_bHasFound) == 0x000110, "Member 'WBP_KeyRebindResultTips_Gamepad_C_RefreshGlobalConflictTipsText::CallFunc_GetGlobalGroupActionName_bHasFound' has a wrong offset!");
static_assert(offsetof(WBP_KeyRebindResultTips_Gamepad_C_RefreshGlobalConflictTipsText, CallFunc_Array_Get_Item) == 0x000118, "Member 'WBP_KeyRebindResultTips_Gamepad_C_RefreshGlobalConflictTipsText::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_KeyRebindResultTips_Gamepad_C_RefreshGlobalConflictTipsText, Temp_text_Variable_1) == 0x000120, "Member 'WBP_KeyRebindResultTips_Gamepad_C_RefreshGlobalConflictTipsText::Temp_text_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_KeyRebindResultTips_Gamepad_C_RefreshGlobalConflictTipsText, CallFunc_GetGlobalGroupActionName_ActionName_1) == 0x000138, "Member 'WBP_KeyRebindResultTips_Gamepad_C_RefreshGlobalConflictTipsText::CallFunc_GetGlobalGroupActionName_ActionName_1' has a wrong offset!");
static_assert(offsetof(WBP_KeyRebindResultTips_Gamepad_C_RefreshGlobalConflictTipsText, CallFunc_GetGlobalGroupActionName_bHasFound_1) == 0x000150, "Member 'WBP_KeyRebindResultTips_Gamepad_C_RefreshGlobalConflictTipsText::CallFunc_GetGlobalGroupActionName_bHasFound_1' has a wrong offset!");
static_assert(offsetof(WBP_KeyRebindResultTips_Gamepad_C_RefreshGlobalConflictTipsText, Temp_text_Variable_2) == 0x000158, "Member 'WBP_KeyRebindResultTips_Gamepad_C_RefreshGlobalConflictTipsText::Temp_text_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_KeyRebindResultTips_Gamepad_C_RefreshGlobalConflictTipsText, Temp_text_Variable_3) == 0x000170, "Member 'WBP_KeyRebindResultTips_Gamepad_C_RefreshGlobalConflictTipsText::Temp_text_Variable_3' has a wrong offset!");
static_assert(offsetof(WBP_KeyRebindResultTips_Gamepad_C_RefreshGlobalConflictTipsText, Temp_text_Variable_4) == 0x000188, "Member 'WBP_KeyRebindResultTips_Gamepad_C_RefreshGlobalConflictTipsText::Temp_text_Variable_4' has a wrong offset!");
static_assert(offsetof(WBP_KeyRebindResultTips_Gamepad_C_RefreshGlobalConflictTipsText, Temp_text_Variable_5) == 0x0001A0, "Member 'WBP_KeyRebindResultTips_Gamepad_C_RefreshGlobalConflictTipsText::Temp_text_Variable_5' has a wrong offset!");
static_assert(offsetof(WBP_KeyRebindResultTips_Gamepad_C_RefreshGlobalConflictTipsText, Temp_text_Variable_6) == 0x0001B8, "Member 'WBP_KeyRebindResultTips_Gamepad_C_RefreshGlobalConflictTipsText::Temp_text_Variable_6' has a wrong offset!");
static_assert(offsetof(WBP_KeyRebindResultTips_Gamepad_C_RefreshGlobalConflictTipsText, Temp_byte_Variable) == 0x0001D0, "Member 'WBP_KeyRebindResultTips_Gamepad_C_RefreshGlobalConflictTipsText::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_KeyRebindResultTips_Gamepad_C_RefreshGlobalConflictTipsText, Temp_bool_Variable) == 0x0001D1, "Member 'WBP_KeyRebindResultTips_Gamepad_C_RefreshGlobalConflictTipsText::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_KeyRebindResultTips_Gamepad_C_RefreshGlobalConflictTipsText, Temp_bool_Variable_1) == 0x0001D2, "Member 'WBP_KeyRebindResultTips_Gamepad_C_RefreshGlobalConflictTipsText::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_KeyRebindResultTips_Gamepad_C_RefreshGlobalConflictTipsText, K2Node_Select_Default) == 0x0001D8, "Member 'WBP_KeyRebindResultTips_Gamepad_C_RefreshGlobalConflictTipsText::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_KeyRebindResultTips_Gamepad_C_RefreshGlobalConflictTipsText, K2Node_Select_Default_1) == 0x0001F0, "Member 'WBP_KeyRebindResultTips_Gamepad_C_RefreshGlobalConflictTipsText::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(WBP_KeyRebindResultTips_Gamepad_C_RefreshGlobalConflictTipsText, K2Node_MakeStruct_FormatArgumentData) == 0x000208, "Member 'WBP_KeyRebindResultTips_Gamepad_C_RefreshGlobalConflictTipsText::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(WBP_KeyRebindResultTips_Gamepad_C_RefreshGlobalConflictTipsText, K2Node_MakeStruct_FormatArgumentData_1) == 0x000258, "Member 'WBP_KeyRebindResultTips_Gamepad_C_RefreshGlobalConflictTipsText::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(WBP_KeyRebindResultTips_Gamepad_C_RefreshGlobalConflictTipsText, K2Node_MakeArray_Array) == 0x0002A8, "Member 'WBP_KeyRebindResultTips_Gamepad_C_RefreshGlobalConflictTipsText::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(WBP_KeyRebindResultTips_Gamepad_C_RefreshGlobalConflictTipsText, K2Node_MakeArray_Array_1) == 0x0002B8, "Member 'WBP_KeyRebindResultTips_Gamepad_C_RefreshGlobalConflictTipsText::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(WBP_KeyRebindResultTips_Gamepad_C_RefreshGlobalConflictTipsText, CallFunc_Format_ReturnValue) == 0x0002C8, "Member 'WBP_KeyRebindResultTips_Gamepad_C_RefreshGlobalConflictTipsText::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_KeyRebindResultTips_Gamepad_C_RefreshGlobalConflictTipsText, CallFunc_Format_ReturnValue_1) == 0x0002E0, "Member 'WBP_KeyRebindResultTips_Gamepad_C_RefreshGlobalConflictTipsText::CallFunc_Format_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_KeyRebindResultTips_Gamepad_C_RefreshGlobalConflictTipsText, K2Node_Select_Default_2) == 0x0002F8, "Member 'WBP_KeyRebindResultTips_Gamepad_C_RefreshGlobalConflictTipsText::K2Node_Select_Default_2' has a wrong offset!");

// Function WBP_KeyRebindResultTips_Gamepad.WBP_KeyRebindResultTips_Gamepad_C.RefreshKeyRebindResultTips
// 0x00E8 (0x00E8 - 0x0000)
struct WBP_KeyRebindResultTips_Gamepad_C_RefreshKeyRebindResultTips final
{
public:
	struct FKeyRebind_DisplayResult               KeyRebindResultType;                               // 0x0000(0x00E0)(BlueprintVisible, BlueprintReadOnly, Parm)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_KeyRebindResultTips_Gamepad_C_RefreshKeyRebindResultTips) == 0x000008, "Wrong alignment on WBP_KeyRebindResultTips_Gamepad_C_RefreshKeyRebindResultTips");
static_assert(sizeof(WBP_KeyRebindResultTips_Gamepad_C_RefreshKeyRebindResultTips) == 0x0000E8, "Wrong size on WBP_KeyRebindResultTips_Gamepad_C_RefreshKeyRebindResultTips");
static_assert(offsetof(WBP_KeyRebindResultTips_Gamepad_C_RefreshKeyRebindResultTips, KeyRebindResultType) == 0x000000, "Member 'WBP_KeyRebindResultTips_Gamepad_C_RefreshKeyRebindResultTips::KeyRebindResultType' has a wrong offset!");
static_assert(offsetof(WBP_KeyRebindResultTips_Gamepad_C_RefreshKeyRebindResultTips, K2Node_SwitchEnum_CmpSuccess) == 0x0000E0, "Member 'WBP_KeyRebindResultTips_Gamepad_C_RefreshKeyRebindResultTips::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function WBP_KeyRebindResultTips_Gamepad.WBP_KeyRebindResultTips_Gamepad_C.RefreshKeyRebindTips
// 0x00E0 (0x00E0 - 0x0000)
struct WBP_KeyRebindResultTips_Gamepad_C_RefreshKeyRebindTips final
{
public:
	struct FKeyRebind_DisplayResult               KeyRebindResultInfo;                               // 0x0000(0x00E0)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(WBP_KeyRebindResultTips_Gamepad_C_RefreshKeyRebindTips) == 0x000008, "Wrong alignment on WBP_KeyRebindResultTips_Gamepad_C_RefreshKeyRebindTips");
static_assert(sizeof(WBP_KeyRebindResultTips_Gamepad_C_RefreshKeyRebindTips) == 0x0000E0, "Wrong size on WBP_KeyRebindResultTips_Gamepad_C_RefreshKeyRebindTips");
static_assert(offsetof(WBP_KeyRebindResultTips_Gamepad_C_RefreshKeyRebindTips, KeyRebindResultInfo) == 0x000000, "Member 'WBP_KeyRebindResultTips_Gamepad_C_RefreshKeyRebindTips::KeyRebindResultInfo' has a wrong offset!");

}

