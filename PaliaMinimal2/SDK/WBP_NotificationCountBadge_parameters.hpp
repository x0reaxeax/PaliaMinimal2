#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_NotificationCountBadge

#include "Basic.hpp"


namespace SDK::Params
{

// Function WBP_NotificationCountBadge.WBP_NotificationCountBadge_C.ExecuteUbergraph_WBP_NotificationCountBadge
// 0x0008 (0x0008 - 0x0000)
struct WBP_NotificationCountBadge_C_ExecuteUbergraph_WBP_NotificationCountBadge final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_NotificationCountBadge_C_ExecuteUbergraph_WBP_NotificationCountBadge) == 0x000004, "Wrong alignment on WBP_NotificationCountBadge_C_ExecuteUbergraph_WBP_NotificationCountBadge");
static_assert(sizeof(WBP_NotificationCountBadge_C_ExecuteUbergraph_WBP_NotificationCountBadge) == 0x000008, "Wrong size on WBP_NotificationCountBadge_C_ExecuteUbergraph_WBP_NotificationCountBadge");
static_assert(offsetof(WBP_NotificationCountBadge_C_ExecuteUbergraph_WBP_NotificationCountBadge, EntryPoint) == 0x000000, "Member 'WBP_NotificationCountBadge_C_ExecuteUbergraph_WBP_NotificationCountBadge::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_NotificationCountBadge_C_ExecuteUbergraph_WBP_NotificationCountBadge, K2Node_Event_IsDesignTime) == 0x000004, "Member 'WBP_NotificationCountBadge_C_ExecuteUbergraph_WBP_NotificationCountBadge::K2Node_Event_IsDesignTime' has a wrong offset!");

// Function WBP_NotificationCountBadge.WBP_NotificationCountBadge_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct WBP_NotificationCountBadge_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_NotificationCountBadge_C_PreConstruct) == 0x000001, "Wrong alignment on WBP_NotificationCountBadge_C_PreConstruct");
static_assert(sizeof(WBP_NotificationCountBadge_C_PreConstruct) == 0x000001, "Wrong size on WBP_NotificationCountBadge_C_PreConstruct");
static_assert(offsetof(WBP_NotificationCountBadge_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'WBP_NotificationCountBadge_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function WBP_NotificationCountBadge.WBP_NotificationCountBadge_C.UpdateCount
// 0x0048 (0x0048 - 0x0000)
struct WBP_NotificationCountBadge_C_UpdateCount final
{
public:
	int32                                         Count;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C86[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x0008(0x0018)()
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C87[0x7];                                     // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_MakeLiteralText_ReturnValue;              // 0x0028(0x0018)()
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_NotificationCountBadge_C_UpdateCount) == 0x000008, "Wrong alignment on WBP_NotificationCountBadge_C_UpdateCount");
static_assert(sizeof(WBP_NotificationCountBadge_C_UpdateCount) == 0x000048, "Wrong size on WBP_NotificationCountBadge_C_UpdateCount");
static_assert(offsetof(WBP_NotificationCountBadge_C_UpdateCount, Count) == 0x000000, "Member 'WBP_NotificationCountBadge_C_UpdateCount::Count' has a wrong offset!");
static_assert(offsetof(WBP_NotificationCountBadge_C_UpdateCount, CallFunc_Conv_IntToText_ReturnValue) == 0x000008, "Member 'WBP_NotificationCountBadge_C_UpdateCount::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_NotificationCountBadge_C_UpdateCount, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000020, "Member 'WBP_NotificationCountBadge_C_UpdateCount::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_NotificationCountBadge_C_UpdateCount, CallFunc_MakeLiteralText_ReturnValue) == 0x000028, "Member 'WBP_NotificationCountBadge_C_UpdateCount::CallFunc_MakeLiteralText_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_NotificationCountBadge_C_UpdateCount, CallFunc_Greater_IntInt_ReturnValue) == 0x000040, "Member 'WBP_NotificationCountBadge_C_UpdateCount::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");

}

