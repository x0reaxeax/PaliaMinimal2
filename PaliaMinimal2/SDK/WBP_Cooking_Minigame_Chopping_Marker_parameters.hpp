#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_Cooking_Minigame_Chopping_Marker

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Slate_structs.hpp"


namespace SDK::Params
{

// Function WBP_Cooking_Minigame_Chopping_Marker.WBP_Cooking_Minigame_Chopping_Marker_C._SetPosition
// 0x0130 (0x0130 - 0x0000)
struct WBP_Cooking_Minigame_Chopping_Marker_C__SetPosition final
{
public:
	double                                        In_X_Position;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        In_Y_Position;                                     // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        MarkerRightPosition;                               // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        MarkerLeftPosition;                                // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        StartFadeOut;                                      // 0x0020(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        XMaxBounds;                                        // 0x0028(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        FadeOutRangeDesired;                               // 0x0030(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        FadeInRange;                                       // 0x0038(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        FullWidth;                                         // 0x0040(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        HalfWidth;                                         // 0x0048(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPanelWidget*                           CallFunc_GetParent_ReturnValue;                    // 0x0050(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_GetDesiredSize_ReturnValue;               // 0x0060(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_X;                          // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y;                          // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue;              // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_DoubleDouble_ReturnValue;    // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_46CE[0x7];                                     // 0x0089(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FMax_ReturnValue;                         // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_1;           // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue_1;            // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_DoubleDouble_ReturnValue;       // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x00B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_46CF[0x6];                                     // 0x00BA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x00C8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_2;      // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_1;      // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_GetDesiredSize_ReturnValue_1;             // 0x00E8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_X_1;                        // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y_1;                        // 0x0100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCanvasPanelSlot*                       CallFunc_SlotAsCanvasSlot_ReturnValue;             // 0x0108(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0110(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_46D0[0x7];                                     // 0x0111(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0118(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0120(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetRenderOpacity_InOpacity_ImplicitCast;  // 0x0128(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetRenderOpacity_InOpacity_ImplicitCast_1; // 0x012C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Cooking_Minigame_Chopping_Marker_C__SetPosition) == 0x000008, "Wrong alignment on WBP_Cooking_Minigame_Chopping_Marker_C__SetPosition");
static_assert(sizeof(WBP_Cooking_Minigame_Chopping_Marker_C__SetPosition) == 0x000130, "Wrong size on WBP_Cooking_Minigame_Chopping_Marker_C__SetPosition");
static_assert(offsetof(WBP_Cooking_Minigame_Chopping_Marker_C__SetPosition, In_X_Position) == 0x000000, "Member 'WBP_Cooking_Minigame_Chopping_Marker_C__SetPosition::In_X_Position' has a wrong offset!");
static_assert(offsetof(WBP_Cooking_Minigame_Chopping_Marker_C__SetPosition, In_Y_Position) == 0x000008, "Member 'WBP_Cooking_Minigame_Chopping_Marker_C__SetPosition::In_Y_Position' has a wrong offset!");
static_assert(offsetof(WBP_Cooking_Minigame_Chopping_Marker_C__SetPosition, MarkerRightPosition) == 0x000010, "Member 'WBP_Cooking_Minigame_Chopping_Marker_C__SetPosition::MarkerRightPosition' has a wrong offset!");
static_assert(offsetof(WBP_Cooking_Minigame_Chopping_Marker_C__SetPosition, MarkerLeftPosition) == 0x000018, "Member 'WBP_Cooking_Minigame_Chopping_Marker_C__SetPosition::MarkerLeftPosition' has a wrong offset!");
static_assert(offsetof(WBP_Cooking_Minigame_Chopping_Marker_C__SetPosition, StartFadeOut) == 0x000020, "Member 'WBP_Cooking_Minigame_Chopping_Marker_C__SetPosition::StartFadeOut' has a wrong offset!");
static_assert(offsetof(WBP_Cooking_Minigame_Chopping_Marker_C__SetPosition, XMaxBounds) == 0x000028, "Member 'WBP_Cooking_Minigame_Chopping_Marker_C__SetPosition::XMaxBounds' has a wrong offset!");
static_assert(offsetof(WBP_Cooking_Minigame_Chopping_Marker_C__SetPosition, FadeOutRangeDesired) == 0x000030, "Member 'WBP_Cooking_Minigame_Chopping_Marker_C__SetPosition::FadeOutRangeDesired' has a wrong offset!");
static_assert(offsetof(WBP_Cooking_Minigame_Chopping_Marker_C__SetPosition, FadeInRange) == 0x000038, "Member 'WBP_Cooking_Minigame_Chopping_Marker_C__SetPosition::FadeInRange' has a wrong offset!");
static_assert(offsetof(WBP_Cooking_Minigame_Chopping_Marker_C__SetPosition, FullWidth) == 0x000040, "Member 'WBP_Cooking_Minigame_Chopping_Marker_C__SetPosition::FullWidth' has a wrong offset!");
static_assert(offsetof(WBP_Cooking_Minigame_Chopping_Marker_C__SetPosition, HalfWidth) == 0x000048, "Member 'WBP_Cooking_Minigame_Chopping_Marker_C__SetPosition::HalfWidth' has a wrong offset!");
static_assert(offsetof(WBP_Cooking_Minigame_Chopping_Marker_C__SetPosition, CallFunc_GetParent_ReturnValue) == 0x000050, "Member 'WBP_Cooking_Minigame_Chopping_Marker_C__SetPosition::CallFunc_GetParent_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Cooking_Minigame_Chopping_Marker_C__SetPosition, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000058, "Member 'WBP_Cooking_Minigame_Chopping_Marker_C__SetPosition::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Cooking_Minigame_Chopping_Marker_C__SetPosition, CallFunc_GetDesiredSize_ReturnValue) == 0x000060, "Member 'WBP_Cooking_Minigame_Chopping_Marker_C__SetPosition::CallFunc_GetDesiredSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Cooking_Minigame_Chopping_Marker_C__SetPosition, CallFunc_BreakVector2D_X) == 0x000070, "Member 'WBP_Cooking_Minigame_Chopping_Marker_C__SetPosition::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(WBP_Cooking_Minigame_Chopping_Marker_C__SetPosition, CallFunc_BreakVector2D_Y) == 0x000078, "Member 'WBP_Cooking_Minigame_Chopping_Marker_C__SetPosition::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(WBP_Cooking_Minigame_Chopping_Marker_C__SetPosition, CallFunc_MapRangeClamped_ReturnValue) == 0x000080, "Member 'WBP_Cooking_Minigame_Chopping_Marker_C__SetPosition::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Cooking_Minigame_Chopping_Marker_C__SetPosition, CallFunc_GreaterEqual_DoubleDouble_ReturnValue) == 0x000088, "Member 'WBP_Cooking_Minigame_Chopping_Marker_C__SetPosition::CallFunc_GreaterEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Cooking_Minigame_Chopping_Marker_C__SetPosition, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000090, "Member 'WBP_Cooking_Minigame_Chopping_Marker_C__SetPosition::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Cooking_Minigame_Chopping_Marker_C__SetPosition, CallFunc_FMax_ReturnValue) == 0x000098, "Member 'WBP_Cooking_Minigame_Chopping_Marker_C__SetPosition::CallFunc_FMax_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Cooking_Minigame_Chopping_Marker_C__SetPosition, CallFunc_Add_DoubleDouble_ReturnValue_1) == 0x0000A0, "Member 'WBP_Cooking_Minigame_Chopping_Marker_C__SetPosition::CallFunc_Add_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_Cooking_Minigame_Chopping_Marker_C__SetPosition, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x0000A8, "Member 'WBP_Cooking_Minigame_Chopping_Marker_C__SetPosition::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Cooking_Minigame_Chopping_Marker_C__SetPosition, CallFunc_MapRangeClamped_ReturnValue_1) == 0x0000B0, "Member 'WBP_Cooking_Minigame_Chopping_Marker_C__SetPosition::CallFunc_MapRangeClamped_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_Cooking_Minigame_Chopping_Marker_C__SetPosition, CallFunc_LessEqual_DoubleDouble_ReturnValue) == 0x0000B8, "Member 'WBP_Cooking_Minigame_Chopping_Marker_C__SetPosition::CallFunc_LessEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Cooking_Minigame_Chopping_Marker_C__SetPosition, CallFunc_BooleanAND_ReturnValue) == 0x0000B9, "Member 'WBP_Cooking_Minigame_Chopping_Marker_C__SetPosition::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Cooking_Minigame_Chopping_Marker_C__SetPosition, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x0000C0, "Member 'WBP_Cooking_Minigame_Chopping_Marker_C__SetPosition::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_Cooking_Minigame_Chopping_Marker_C__SetPosition, CallFunc_MakeVector2D_ReturnValue) == 0x0000C8, "Member 'WBP_Cooking_Minigame_Chopping_Marker_C__SetPosition::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Cooking_Minigame_Chopping_Marker_C__SetPosition, CallFunc_Multiply_DoubleDouble_ReturnValue_2) == 0x0000D8, "Member 'WBP_Cooking_Minigame_Chopping_Marker_C__SetPosition::CallFunc_Multiply_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_Cooking_Minigame_Chopping_Marker_C__SetPosition, CallFunc_Subtract_DoubleDouble_ReturnValue_1) == 0x0000E0, "Member 'WBP_Cooking_Minigame_Chopping_Marker_C__SetPosition::CallFunc_Subtract_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_Cooking_Minigame_Chopping_Marker_C__SetPosition, CallFunc_GetDesiredSize_ReturnValue_1) == 0x0000E8, "Member 'WBP_Cooking_Minigame_Chopping_Marker_C__SetPosition::CallFunc_GetDesiredSize_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_Cooking_Minigame_Chopping_Marker_C__SetPosition, CallFunc_BreakVector2D_X_1) == 0x0000F8, "Member 'WBP_Cooking_Minigame_Chopping_Marker_C__SetPosition::CallFunc_BreakVector2D_X_1' has a wrong offset!");
static_assert(offsetof(WBP_Cooking_Minigame_Chopping_Marker_C__SetPosition, CallFunc_BreakVector2D_Y_1) == 0x000100, "Member 'WBP_Cooking_Minigame_Chopping_Marker_C__SetPosition::CallFunc_BreakVector2D_Y_1' has a wrong offset!");
static_assert(offsetof(WBP_Cooking_Minigame_Chopping_Marker_C__SetPosition, CallFunc_SlotAsCanvasSlot_ReturnValue) == 0x000108, "Member 'WBP_Cooking_Minigame_Chopping_Marker_C__SetPosition::CallFunc_SlotAsCanvasSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Cooking_Minigame_Chopping_Marker_C__SetPosition, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000110, "Member 'WBP_Cooking_Minigame_Chopping_Marker_C__SetPosition::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Cooking_Minigame_Chopping_Marker_C__SetPosition, CallFunc_SelectFloat_ReturnValue) == 0x000118, "Member 'WBP_Cooking_Minigame_Chopping_Marker_C__SetPosition::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Cooking_Minigame_Chopping_Marker_C__SetPosition, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000120, "Member 'WBP_Cooking_Minigame_Chopping_Marker_C__SetPosition::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Cooking_Minigame_Chopping_Marker_C__SetPosition, CallFunc_SetRenderOpacity_InOpacity_ImplicitCast) == 0x000128, "Member 'WBP_Cooking_Minigame_Chopping_Marker_C__SetPosition::CallFunc_SetRenderOpacity_InOpacity_ImplicitCast' has a wrong offset!");
static_assert(offsetof(WBP_Cooking_Minigame_Chopping_Marker_C__SetPosition, CallFunc_SetRenderOpacity_InOpacity_ImplicitCast_1) == 0x00012C, "Member 'WBP_Cooking_Minigame_Chopping_Marker_C__SetPosition::CallFunc_SetRenderOpacity_InOpacity_ImplicitCast_1' has a wrong offset!");

// Function WBP_Cooking_Minigame_Chopping_Marker.WBP_Cooking_Minigame_Chopping_Marker_C.ForcePosition
// 0x0018 (0x0018 - 0x0000)
struct WBP_Cooking_Minigame_Chopping_Marker_C_ForcePosition final
{
public:
	double                                        NormalizedTime;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Cooking_Minigame_Chopping_Marker_C_ForcePosition) == 0x000008, "Wrong alignment on WBP_Cooking_Minigame_Chopping_Marker_C_ForcePosition");
static_assert(sizeof(WBP_Cooking_Minigame_Chopping_Marker_C_ForcePosition) == 0x000018, "Wrong size on WBP_Cooking_Minigame_Chopping_Marker_C_ForcePosition");
static_assert(offsetof(WBP_Cooking_Minigame_Chopping_Marker_C_ForcePosition, NormalizedTime) == 0x000000, "Member 'WBP_Cooking_Minigame_Chopping_Marker_C_ForcePosition::NormalizedTime' has a wrong offset!");
static_assert(offsetof(WBP_Cooking_Minigame_Chopping_Marker_C_ForcePosition, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000008, "Member 'WBP_Cooking_Minigame_Chopping_Marker_C_ForcePosition::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Cooking_Minigame_Chopping_Marker_C_ForcePosition, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000010, "Member 'WBP_Cooking_Minigame_Chopping_Marker_C_ForcePosition::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");

// Function WBP_Cooking_Minigame_Chopping_Marker.WBP_Cooking_Minigame_Chopping_Marker_C.SetPositionByTime
// 0x0030 (0x0030 - 0x0000)
struct WBP_Cooking_Minigame_Chopping_Marker_C_SetPositionByTime final
{
public:
	double                                        Time;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_46D1[0x7];                                     // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Cooking_Minigame_Chopping_Marker_C_SetPositionByTime) == 0x000008, "Wrong alignment on WBP_Cooking_Minigame_Chopping_Marker_C_SetPositionByTime");
static_assert(sizeof(WBP_Cooking_Minigame_Chopping_Marker_C_SetPositionByTime) == 0x000030, "Wrong size on WBP_Cooking_Minigame_Chopping_Marker_C_SetPositionByTime");
static_assert(offsetof(WBP_Cooking_Minigame_Chopping_Marker_C_SetPositionByTime, Time) == 0x000000, "Member 'WBP_Cooking_Minigame_Chopping_Marker_C_SetPositionByTime::Time' has a wrong offset!");
static_assert(offsetof(WBP_Cooking_Minigame_Chopping_Marker_C_SetPositionByTime, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000008, "Member 'WBP_Cooking_Minigame_Chopping_Marker_C_SetPositionByTime::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Cooking_Minigame_Chopping_Marker_C_SetPositionByTime, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000010, "Member 'WBP_Cooking_Minigame_Chopping_Marker_C_SetPositionByTime::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Cooking_Minigame_Chopping_Marker_C_SetPositionByTime, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000018, "Member 'WBP_Cooking_Minigame_Chopping_Marker_C_SetPositionByTime::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Cooking_Minigame_Chopping_Marker_C_SetPositionByTime, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000020, "Member 'WBP_Cooking_Minigame_Chopping_Marker_C_SetPositionByTime::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Cooking_Minigame_Chopping_Marker_C_SetPositionByTime, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000028, "Member 'WBP_Cooking_Minigame_Chopping_Marker_C_SetPositionByTime::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");

// Function WBP_Cooking_Minigame_Chopping_Marker.WBP_Cooking_Minigame_Chopping_Marker_C.Start
// 0x0070 (0x0070 - 0x0000)
struct WBP_Cooking_Minigame_Chopping_Marker_C_Start final
{
public:
	double                                        In_StartTime;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        In_TargetTime;                                     // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        In_StartX;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        In_TargetX;                                        // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        In_EndTime;                                        // 0x0020(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        In_PositionY;                                      // 0x0028(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Time;                                              // 0x0030(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FAnchors                               K2Node_MakeStruct_Anchors;                         // 0x0040(0x0020)(NoDestructor)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_1;      // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCanvasPanelSlot*                       CallFunc_SlotAsCanvasSlot_ReturnValue;             // 0x0068(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Cooking_Minigame_Chopping_Marker_C_Start) == 0x000008, "Wrong alignment on WBP_Cooking_Minigame_Chopping_Marker_C_Start");
static_assert(sizeof(WBP_Cooking_Minigame_Chopping_Marker_C_Start) == 0x000070, "Wrong size on WBP_Cooking_Minigame_Chopping_Marker_C_Start");
static_assert(offsetof(WBP_Cooking_Minigame_Chopping_Marker_C_Start, In_StartTime) == 0x000000, "Member 'WBP_Cooking_Minigame_Chopping_Marker_C_Start::In_StartTime' has a wrong offset!");
static_assert(offsetof(WBP_Cooking_Minigame_Chopping_Marker_C_Start, In_TargetTime) == 0x000008, "Member 'WBP_Cooking_Minigame_Chopping_Marker_C_Start::In_TargetTime' has a wrong offset!");
static_assert(offsetof(WBP_Cooking_Minigame_Chopping_Marker_C_Start, In_StartX) == 0x000010, "Member 'WBP_Cooking_Minigame_Chopping_Marker_C_Start::In_StartX' has a wrong offset!");
static_assert(offsetof(WBP_Cooking_Minigame_Chopping_Marker_C_Start, In_TargetX) == 0x000018, "Member 'WBP_Cooking_Minigame_Chopping_Marker_C_Start::In_TargetX' has a wrong offset!");
static_assert(offsetof(WBP_Cooking_Minigame_Chopping_Marker_C_Start, In_EndTime) == 0x000020, "Member 'WBP_Cooking_Minigame_Chopping_Marker_C_Start::In_EndTime' has a wrong offset!");
static_assert(offsetof(WBP_Cooking_Minigame_Chopping_Marker_C_Start, In_PositionY) == 0x000028, "Member 'WBP_Cooking_Minigame_Chopping_Marker_C_Start::In_PositionY' has a wrong offset!");
static_assert(offsetof(WBP_Cooking_Minigame_Chopping_Marker_C_Start, Time) == 0x000030, "Member 'WBP_Cooking_Minigame_Chopping_Marker_C_Start::Time' has a wrong offset!");
static_assert(offsetof(WBP_Cooking_Minigame_Chopping_Marker_C_Start, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000038, "Member 'WBP_Cooking_Minigame_Chopping_Marker_C_Start::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Cooking_Minigame_Chopping_Marker_C_Start, K2Node_MakeStruct_Anchors) == 0x000040, "Member 'WBP_Cooking_Minigame_Chopping_Marker_C_Start::K2Node_MakeStruct_Anchors' has a wrong offset!");
static_assert(offsetof(WBP_Cooking_Minigame_Chopping_Marker_C_Start, CallFunc_Subtract_DoubleDouble_ReturnValue_1) == 0x000060, "Member 'WBP_Cooking_Minigame_Chopping_Marker_C_Start::CallFunc_Subtract_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_Cooking_Minigame_Chopping_Marker_C_Start, CallFunc_SlotAsCanvasSlot_ReturnValue) == 0x000068, "Member 'WBP_Cooking_Minigame_Chopping_Marker_C_Start::CallFunc_SlotAsCanvasSlot_ReturnValue' has a wrong offset!");

}

