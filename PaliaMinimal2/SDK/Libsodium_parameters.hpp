#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Libsodium

#include "Basic.hpp"


namespace SDK::Params
{

// Function Libsodium.LibSd_CryptoLibrary.GenerateKeyPair
// 0x0028 (0x0028 - 0x0000)
struct LibSd_CryptoLibrary_GenerateKeyPair final
{
public:
	TArray<uint8>                                 OutPublicKey;                                      // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<uint8>                                 OutSecretKey;                                      // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0020(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1CFD[0x7];                                     // 0x0021(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(LibSd_CryptoLibrary_GenerateKeyPair) == 0x000008, "Wrong alignment on LibSd_CryptoLibrary_GenerateKeyPair");
static_assert(sizeof(LibSd_CryptoLibrary_GenerateKeyPair) == 0x000028, "Wrong size on LibSd_CryptoLibrary_GenerateKeyPair");
static_assert(offsetof(LibSd_CryptoLibrary_GenerateKeyPair, OutPublicKey) == 0x000000, "Member 'LibSd_CryptoLibrary_GenerateKeyPair::OutPublicKey' has a wrong offset!");
static_assert(offsetof(LibSd_CryptoLibrary_GenerateKeyPair, OutSecretKey) == 0x000010, "Member 'LibSd_CryptoLibrary_GenerateKeyPair::OutSecretKey' has a wrong offset!");
static_assert(offsetof(LibSd_CryptoLibrary_GenerateKeyPair, ReturnValue) == 0x000020, "Member 'LibSd_CryptoLibrary_GenerateKeyPair::ReturnValue' has a wrong offset!");

// Function Libsodium.LibSd_CryptoLibrary.InitSodium
// 0x0001 (0x0001 - 0x0000)
struct LibSd_CryptoLibrary_InitSodium final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(LibSd_CryptoLibrary_InitSodium) == 0x000001, "Wrong alignment on LibSd_CryptoLibrary_InitSodium");
static_assert(sizeof(LibSd_CryptoLibrary_InitSodium) == 0x000001, "Wrong size on LibSd_CryptoLibrary_InitSodium");
static_assert(offsetof(LibSd_CryptoLibrary_InitSodium, ReturnValue) == 0x000000, "Member 'LibSd_CryptoLibrary_InitSodium::ReturnValue' has a wrong offset!");

// Function Libsodium.LibSd_CryptoLibrary.SignMessageWithSecretKey
// 0x0038 (0x0038 - 0x0000)
struct LibSd_CryptoLibrary_SignMessageWithSecretKey final
{
public:
	TArray<uint8>                                 Message;                                           // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	TArray<uint8>                                 SecretKey;                                         // 0x0010(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	TArray<uint8>                                 SignedMessage;                                     // 0x0020(0x0010)(Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0030(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1CFE[0x7];                                     // 0x0031(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(LibSd_CryptoLibrary_SignMessageWithSecretKey) == 0x000008, "Wrong alignment on LibSd_CryptoLibrary_SignMessageWithSecretKey");
static_assert(sizeof(LibSd_CryptoLibrary_SignMessageWithSecretKey) == 0x000038, "Wrong size on LibSd_CryptoLibrary_SignMessageWithSecretKey");
static_assert(offsetof(LibSd_CryptoLibrary_SignMessageWithSecretKey, Message) == 0x000000, "Member 'LibSd_CryptoLibrary_SignMessageWithSecretKey::Message' has a wrong offset!");
static_assert(offsetof(LibSd_CryptoLibrary_SignMessageWithSecretKey, SecretKey) == 0x000010, "Member 'LibSd_CryptoLibrary_SignMessageWithSecretKey::SecretKey' has a wrong offset!");
static_assert(offsetof(LibSd_CryptoLibrary_SignMessageWithSecretKey, SignedMessage) == 0x000020, "Member 'LibSd_CryptoLibrary_SignMessageWithSecretKey::SignedMessage' has a wrong offset!");
static_assert(offsetof(LibSd_CryptoLibrary_SignMessageWithSecretKey, ReturnValue) == 0x000030, "Member 'LibSd_CryptoLibrary_SignMessageWithSecretKey::ReturnValue' has a wrong offset!");

// Function Libsodium.LibSd_CryptoLibrary.SignMessageWithSecretKey_Detached
// 0x0038 (0x0038 - 0x0000)
struct LibSd_CryptoLibrary_SignMessageWithSecretKey_Detached final
{
public:
	TArray<uint8>                                 Message;                                           // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	TArray<uint8>                                 SecretKey;                                         // 0x0010(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	TArray<uint8>                                 Signature;                                         // 0x0020(0x0010)(Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0030(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1CFF[0x7];                                     // 0x0031(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(LibSd_CryptoLibrary_SignMessageWithSecretKey_Detached) == 0x000008, "Wrong alignment on LibSd_CryptoLibrary_SignMessageWithSecretKey_Detached");
static_assert(sizeof(LibSd_CryptoLibrary_SignMessageWithSecretKey_Detached) == 0x000038, "Wrong size on LibSd_CryptoLibrary_SignMessageWithSecretKey_Detached");
static_assert(offsetof(LibSd_CryptoLibrary_SignMessageWithSecretKey_Detached, Message) == 0x000000, "Member 'LibSd_CryptoLibrary_SignMessageWithSecretKey_Detached::Message' has a wrong offset!");
static_assert(offsetof(LibSd_CryptoLibrary_SignMessageWithSecretKey_Detached, SecretKey) == 0x000010, "Member 'LibSd_CryptoLibrary_SignMessageWithSecretKey_Detached::SecretKey' has a wrong offset!");
static_assert(offsetof(LibSd_CryptoLibrary_SignMessageWithSecretKey_Detached, Signature) == 0x000020, "Member 'LibSd_CryptoLibrary_SignMessageWithSecretKey_Detached::Signature' has a wrong offset!");
static_assert(offsetof(LibSd_CryptoLibrary_SignMessageWithSecretKey_Detached, ReturnValue) == 0x000030, "Member 'LibSd_CryptoLibrary_SignMessageWithSecretKey_Detached::ReturnValue' has a wrong offset!");

// Function Libsodium.LibSd_CryptoLibrary.VerifyMessageWithPublicKey
// 0x0038 (0x0038 - 0x0000)
struct LibSd_CryptoLibrary_VerifyMessageWithPublicKey final
{
public:
	TArray<uint8>                                 SignedMessage;                                     // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	TArray<uint8>                                 PublicKey;                                         // 0x0010(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	TArray<uint8>                                 Message;                                           // 0x0020(0x0010)(Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0030(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1D00[0x7];                                     // 0x0031(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(LibSd_CryptoLibrary_VerifyMessageWithPublicKey) == 0x000008, "Wrong alignment on LibSd_CryptoLibrary_VerifyMessageWithPublicKey");
static_assert(sizeof(LibSd_CryptoLibrary_VerifyMessageWithPublicKey) == 0x000038, "Wrong size on LibSd_CryptoLibrary_VerifyMessageWithPublicKey");
static_assert(offsetof(LibSd_CryptoLibrary_VerifyMessageWithPublicKey, SignedMessage) == 0x000000, "Member 'LibSd_CryptoLibrary_VerifyMessageWithPublicKey::SignedMessage' has a wrong offset!");
static_assert(offsetof(LibSd_CryptoLibrary_VerifyMessageWithPublicKey, PublicKey) == 0x000010, "Member 'LibSd_CryptoLibrary_VerifyMessageWithPublicKey::PublicKey' has a wrong offset!");
static_assert(offsetof(LibSd_CryptoLibrary_VerifyMessageWithPublicKey, Message) == 0x000020, "Member 'LibSd_CryptoLibrary_VerifyMessageWithPublicKey::Message' has a wrong offset!");
static_assert(offsetof(LibSd_CryptoLibrary_VerifyMessageWithPublicKey, ReturnValue) == 0x000030, "Member 'LibSd_CryptoLibrary_VerifyMessageWithPublicKey::ReturnValue' has a wrong offset!");

// Function Libsodium.LibSd_CryptoLibrary.VerifyMessageWithPublicKey_Detached
// 0x0038 (0x0038 - 0x0000)
struct LibSd_CryptoLibrary_VerifyMessageWithPublicKey_Detached final
{
public:
	TArray<uint8>                                 Signature;                                         // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	TArray<uint8>                                 Message;                                           // 0x0010(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	TArray<uint8>                                 PublicKey;                                         // 0x0020(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0030(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1D01[0x7];                                     // 0x0031(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(LibSd_CryptoLibrary_VerifyMessageWithPublicKey_Detached) == 0x000008, "Wrong alignment on LibSd_CryptoLibrary_VerifyMessageWithPublicKey_Detached");
static_assert(sizeof(LibSd_CryptoLibrary_VerifyMessageWithPublicKey_Detached) == 0x000038, "Wrong size on LibSd_CryptoLibrary_VerifyMessageWithPublicKey_Detached");
static_assert(offsetof(LibSd_CryptoLibrary_VerifyMessageWithPublicKey_Detached, Signature) == 0x000000, "Member 'LibSd_CryptoLibrary_VerifyMessageWithPublicKey_Detached::Signature' has a wrong offset!");
static_assert(offsetof(LibSd_CryptoLibrary_VerifyMessageWithPublicKey_Detached, Message) == 0x000010, "Member 'LibSd_CryptoLibrary_VerifyMessageWithPublicKey_Detached::Message' has a wrong offset!");
static_assert(offsetof(LibSd_CryptoLibrary_VerifyMessageWithPublicKey_Detached, PublicKey) == 0x000020, "Member 'LibSd_CryptoLibrary_VerifyMessageWithPublicKey_Detached::PublicKey' has a wrong offset!");
static_assert(offsetof(LibSd_CryptoLibrary_VerifyMessageWithPublicKey_Detached, ReturnValue) == 0x000030, "Member 'LibSd_CryptoLibrary_VerifyMessageWithPublicKey_Detached::ReturnValue' has a wrong offset!");

}

