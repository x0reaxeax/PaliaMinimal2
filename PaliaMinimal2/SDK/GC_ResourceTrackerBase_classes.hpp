#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GC_ResourceTrackerBase

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Palia_structs.hpp"
#include "Enum_resourceTrackerType_structs.hpp"
#include "GameplayAbilities_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass GC_ResourceTrackerBase.GC_ResourceTrackerBase_C
// 0x01B8 (0x04D0 - 0x0318)
class AGC_ResourceTrackerBase_C : public AGameplayCueNotify_Actor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0318(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UNiagaraComponent*                      NS_resourceTrackerA;                               // 0x0320(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UArrowComponent*                        Root_vfx;                                          // 0x0328(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Sphere1;                                           // 0x0330(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Sphere;                                            // 0x0338(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        ArrowAnchor;                                       // 0x0340(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x0348(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FTrackedItemInfo                       TmpClosestItemInfo;                                // 0x0350(0x0148)(Edit, BlueprintVisible, DisableEditOnInstance)
	bool                                          FoundTrackedItem;                                  // 0x0498(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_43D0[0x7];                                     // 0x0499(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTrackingComponent*                     TrackingComponent;                                 // 0x04A0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	Enum_resourceTrackerType                      Type_trackThisResource;                            // 0x04A8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	uint8                                         Pad_43D1[0x7];                                     // 0x04A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Detect_hotRange;                                   // 0x04B0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	double                                        Detect_ColdRange;                                  // 0x04B8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	class UAkAudioEvent*                          Ak_Activate;                                       // 0x04C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UAkAudioEvent*                          Ak_Deactivate;                                     // 0x04C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_GC_ResourceTrackerBase(int32 EntryPoint, class APlayerController* CallFunc_GetPlayerController_ReturnValue, class APawn* CallFunc_K2_GetPawn_ReturnValue, bool CallFunc_IsValid_ReturnValue, class AActor* CallFunc_GetOwner_ReturnValue, bool CallFunc_EqualEqual_ObjectObject_ReturnValue, const struct FVector& CallFunc_K2_GetActorLocation_ReturnValue, const struct FRotator& CallFunc_FindLookAtRotation_ReturnValue, double CallFunc_Vector_Distance_ReturnValue, const struct FHitResult& CallFunc_K2_SetWorldRotation_SweepHitResult, double CallFunc_Vector_DistanceSquared_ReturnValue, bool CallFunc_Greater_DoubleDouble_ReturnValue, bool CallFunc_BooleanAND_ReturnValue, float K2Node_Event_DeltaSeconds, const struct FVector& CallFunc_K2_GetActorLocation_ReturnValue_1, class APlayerController* CallFunc_GetPlayerController_ReturnValue_1, const struct FTrackedItemInfo& CallFunc_FindClosestResourceTracked_OutClosestItemInfo, EValeriaFuncResult CallFunc_FindClosestResourceTracked_OutResult, class UTrackingComponent* CallFunc_GetComponentByClass_ReturnValue, bool K2Node_SwitchEnum_CmpSuccess, bool CallFunc_IsValid_ReturnValue_1, bool CallFunc_IsDebuggingOn__IsDebuggingOn, TDelegate<void()> K2Node_CreateDelegate_OutputDelegate, const struct FTimerHandle& CallFunc_K2_SetTimerDelegate_ReturnValue, double CallFunc_Subtract_DoubleDouble_ReturnValue, double CallFunc_Subtract_DoubleDouble_ReturnValue_1, double CallFunc_Divide_DoubleDouble_ReturnValue, double CallFunc_FClamp_ReturnValue, double CallFunc_Subtract_DoubleDouble_ReturnValue_2, float CallFunc_SetFloatParameter_Param_ImplicitCast);
	bool OnActive(class AActor* MyTarget, struct FGameplayCueParameters& Parameters, int32 CallFunc_AkEventActor_ReturnValue);
	bool OnRemove(class AActor* MyTarget, struct FGameplayCueParameters& Parameters, int32 CallFunc_AkEventActor_ReturnValue);
	void ReceiveBeginPlay();
	void ReceiveTick(float DeltaSeconds);
	void UpdateTrackedPosition();
	void UserConstructionScript(int32 CallFunc_Conv_ByteToInt_ReturnValue);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"GC_ResourceTrackerBase_C">();
	}
	static class AGC_ResourceTrackerBase_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AGC_ResourceTrackerBase_C>();
	}
};
static_assert(alignof(AGC_ResourceTrackerBase_C) == 0x000008, "Wrong alignment on AGC_ResourceTrackerBase_C");
static_assert(sizeof(AGC_ResourceTrackerBase_C) == 0x0004D0, "Wrong size on AGC_ResourceTrackerBase_C");
static_assert(offsetof(AGC_ResourceTrackerBase_C, UberGraphFrame) == 0x000318, "Member 'AGC_ResourceTrackerBase_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(AGC_ResourceTrackerBase_C, NS_resourceTrackerA) == 0x000320, "Member 'AGC_ResourceTrackerBase_C::NS_resourceTrackerA' has a wrong offset!");
static_assert(offsetof(AGC_ResourceTrackerBase_C, Root_vfx) == 0x000328, "Member 'AGC_ResourceTrackerBase_C::Root_vfx' has a wrong offset!");
static_assert(offsetof(AGC_ResourceTrackerBase_C, Sphere1) == 0x000330, "Member 'AGC_ResourceTrackerBase_C::Sphere1' has a wrong offset!");
static_assert(offsetof(AGC_ResourceTrackerBase_C, Sphere) == 0x000338, "Member 'AGC_ResourceTrackerBase_C::Sphere' has a wrong offset!");
static_assert(offsetof(AGC_ResourceTrackerBase_C, ArrowAnchor) == 0x000340, "Member 'AGC_ResourceTrackerBase_C::ArrowAnchor' has a wrong offset!");
static_assert(offsetof(AGC_ResourceTrackerBase_C, DefaultSceneRoot) == 0x000348, "Member 'AGC_ResourceTrackerBase_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(AGC_ResourceTrackerBase_C, TmpClosestItemInfo) == 0x000350, "Member 'AGC_ResourceTrackerBase_C::TmpClosestItemInfo' has a wrong offset!");
static_assert(offsetof(AGC_ResourceTrackerBase_C, FoundTrackedItem) == 0x000498, "Member 'AGC_ResourceTrackerBase_C::FoundTrackedItem' has a wrong offset!");
static_assert(offsetof(AGC_ResourceTrackerBase_C, TrackingComponent) == 0x0004A0, "Member 'AGC_ResourceTrackerBase_C::TrackingComponent' has a wrong offset!");
static_assert(offsetof(AGC_ResourceTrackerBase_C, Type_trackThisResource) == 0x0004A8, "Member 'AGC_ResourceTrackerBase_C::Type_trackThisResource' has a wrong offset!");
static_assert(offsetof(AGC_ResourceTrackerBase_C, Detect_hotRange) == 0x0004B0, "Member 'AGC_ResourceTrackerBase_C::Detect_hotRange' has a wrong offset!");
static_assert(offsetof(AGC_ResourceTrackerBase_C, Detect_ColdRange) == 0x0004B8, "Member 'AGC_ResourceTrackerBase_C::Detect_ColdRange' has a wrong offset!");
static_assert(offsetof(AGC_ResourceTrackerBase_C, Ak_Activate) == 0x0004C0, "Member 'AGC_ResourceTrackerBase_C::Ak_Activate' has a wrong offset!");
static_assert(offsetof(AGC_ResourceTrackerBase_C, Ak_Deactivate) == 0x0004C8, "Member 'AGC_ResourceTrackerBase_C::Ak_Deactivate' has a wrong offset!");

}

