#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_HotBarSlot_PF

#include "Basic.hpp"

#include "UMG_structs.hpp"
#include "EnhancedInput_structs.hpp"
#include "SlateCore_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "Palia_structs.hpp"


namespace SDK::Params
{

// Function WBP_HotBarSlot_PF.WBP_HotBarSlot_PF_C.ExecuteUbergraph_WBP_HotBarSlot_PF
// 0x0140 (0x0140 - 0x0000)
struct WBP_HotBarSlot_PF_C_ExecuteUbergraph_WBP_HotBarSlot_PF final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_52F6[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FInputActionValue                      K2Node_EnhancedInputActionEvent_ActionValue;       // 0x0008(0x0020)(NoDestructor)
	float                                         K2Node_EnhancedInputActionEvent_ElapsedTime;       // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_EnhancedInputActionEvent_TriggeredTime;     // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	const class UInputAction*                     K2Node_EnhancedInputActionEvent_SourceAction;      // 0x0030(0x0008)(ConstParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UInputAction*                           Temp_object_Variable;                              // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Conv_InputActionValueToBool_ReturnValue;  // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_52F7[0x7];                                     // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Temp_real_Variable;                                // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_1;                              // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_0;                              // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_1_0;                            // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_52F8[0x7];                                     // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FValeriaItem                           K2Node_CustomEvent_Item;                           // 0x0070(0x0060)()
	bool                                          K2Node_CustomEvent_NewHighlighted;                 // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_IsFilterMode;                   // 0x00D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_52F9[0x6];                                     // 0x00D2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Temp_real_Variable_2;                              // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ItemIsEmpty_ReturnValue;                  // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_52FA[0x7];                                     // 0x00E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Temp_real_Variable_3;                              // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UInputAction*                           Temp_object_Variable_1;                            // 0x00F0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FInputActionValue                      K2Node_EnhancedInputActionEvent_ActionValue_1;     // 0x00F8(0x0020)(NoDestructor)
	float                                         K2Node_EnhancedInputActionEvent_ElapsedTime_1;     // 0x0118(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_EnhancedInputActionEvent_TriggeredTime_1;   // 0x011C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	const class UInputAction*                     K2Node_EnhancedInputActionEvent_SourceAction_1;    // 0x0120(0x0008)(ConstParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_3_0;                            // 0x0128(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_2_0;                            // 0x0130(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Conv_InputActionValueToBool_ReturnValue_1; // 0x0138(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_HotBarSlot_PF_C_ExecuteUbergraph_WBP_HotBarSlot_PF) == 0x000008, "Wrong alignment on WBP_HotBarSlot_PF_C_ExecuteUbergraph_WBP_HotBarSlot_PF");
static_assert(sizeof(WBP_HotBarSlot_PF_C_ExecuteUbergraph_WBP_HotBarSlot_PF) == 0x000140, "Wrong size on WBP_HotBarSlot_PF_C_ExecuteUbergraph_WBP_HotBarSlot_PF");
static_assert(offsetof(WBP_HotBarSlot_PF_C_ExecuteUbergraph_WBP_HotBarSlot_PF, EntryPoint) == 0x000000, "Member 'WBP_HotBarSlot_PF_C_ExecuteUbergraph_WBP_HotBarSlot_PF::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_HotBarSlot_PF_C_ExecuteUbergraph_WBP_HotBarSlot_PF, Temp_bool_Variable) == 0x000004, "Member 'WBP_HotBarSlot_PF_C_ExecuteUbergraph_WBP_HotBarSlot_PF::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_HotBarSlot_PF_C_ExecuteUbergraph_WBP_HotBarSlot_PF, K2Node_EnhancedInputActionEvent_ActionValue) == 0x000008, "Member 'WBP_HotBarSlot_PF_C_ExecuteUbergraph_WBP_HotBarSlot_PF::K2Node_EnhancedInputActionEvent_ActionValue' has a wrong offset!");
static_assert(offsetof(WBP_HotBarSlot_PF_C_ExecuteUbergraph_WBP_HotBarSlot_PF, K2Node_EnhancedInputActionEvent_ElapsedTime) == 0x000028, "Member 'WBP_HotBarSlot_PF_C_ExecuteUbergraph_WBP_HotBarSlot_PF::K2Node_EnhancedInputActionEvent_ElapsedTime' has a wrong offset!");
static_assert(offsetof(WBP_HotBarSlot_PF_C_ExecuteUbergraph_WBP_HotBarSlot_PF, K2Node_EnhancedInputActionEvent_TriggeredTime) == 0x00002C, "Member 'WBP_HotBarSlot_PF_C_ExecuteUbergraph_WBP_HotBarSlot_PF::K2Node_EnhancedInputActionEvent_TriggeredTime' has a wrong offset!");
static_assert(offsetof(WBP_HotBarSlot_PF_C_ExecuteUbergraph_WBP_HotBarSlot_PF, K2Node_EnhancedInputActionEvent_SourceAction) == 0x000030, "Member 'WBP_HotBarSlot_PF_C_ExecuteUbergraph_WBP_HotBarSlot_PF::K2Node_EnhancedInputActionEvent_SourceAction' has a wrong offset!");
static_assert(offsetof(WBP_HotBarSlot_PF_C_ExecuteUbergraph_WBP_HotBarSlot_PF, Temp_object_Variable) == 0x000038, "Member 'WBP_HotBarSlot_PF_C_ExecuteUbergraph_WBP_HotBarSlot_PF::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(WBP_HotBarSlot_PF_C_ExecuteUbergraph_WBP_HotBarSlot_PF, CallFunc_Conv_InputActionValueToBool_ReturnValue) == 0x000040, "Member 'WBP_HotBarSlot_PF_C_ExecuteUbergraph_WBP_HotBarSlot_PF::CallFunc_Conv_InputActionValueToBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_HotBarSlot_PF_C_ExecuteUbergraph_WBP_HotBarSlot_PF, Temp_real_Variable) == 0x000048, "Member 'WBP_HotBarSlot_PF_C_ExecuteUbergraph_WBP_HotBarSlot_PF::Temp_real_Variable' has a wrong offset!");
static_assert(offsetof(WBP_HotBarSlot_PF_C_ExecuteUbergraph_WBP_HotBarSlot_PF, Temp_real_Variable_1) == 0x000050, "Member 'WBP_HotBarSlot_PF_C_ExecuteUbergraph_WBP_HotBarSlot_PF::Temp_real_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_HotBarSlot_PF_C_ExecuteUbergraph_WBP_HotBarSlot_PF, Temp_real_Variable_0) == 0x000058, "Member 'WBP_HotBarSlot_PF_C_ExecuteUbergraph_WBP_HotBarSlot_PF::Temp_real_Variable_0' has a wrong offset!");
static_assert(offsetof(WBP_HotBarSlot_PF_C_ExecuteUbergraph_WBP_HotBarSlot_PF, Temp_real_Variable_1_0) == 0x000060, "Member 'WBP_HotBarSlot_PF_C_ExecuteUbergraph_WBP_HotBarSlot_PF::Temp_real_Variable_1_0' has a wrong offset!");
static_assert(offsetof(WBP_HotBarSlot_PF_C_ExecuteUbergraph_WBP_HotBarSlot_PF, Temp_bool_Variable_1) == 0x000068, "Member 'WBP_HotBarSlot_PF_C_ExecuteUbergraph_WBP_HotBarSlot_PF::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_HotBarSlot_PF_C_ExecuteUbergraph_WBP_HotBarSlot_PF, K2Node_CustomEvent_Item) == 0x000070, "Member 'WBP_HotBarSlot_PF_C_ExecuteUbergraph_WBP_HotBarSlot_PF::K2Node_CustomEvent_Item' has a wrong offset!");
static_assert(offsetof(WBP_HotBarSlot_PF_C_ExecuteUbergraph_WBP_HotBarSlot_PF, K2Node_CustomEvent_NewHighlighted) == 0x0000D0, "Member 'WBP_HotBarSlot_PF_C_ExecuteUbergraph_WBP_HotBarSlot_PF::K2Node_CustomEvent_NewHighlighted' has a wrong offset!");
static_assert(offsetof(WBP_HotBarSlot_PF_C_ExecuteUbergraph_WBP_HotBarSlot_PF, K2Node_CustomEvent_IsFilterMode) == 0x0000D1, "Member 'WBP_HotBarSlot_PF_C_ExecuteUbergraph_WBP_HotBarSlot_PF::K2Node_CustomEvent_IsFilterMode' has a wrong offset!");
static_assert(offsetof(WBP_HotBarSlot_PF_C_ExecuteUbergraph_WBP_HotBarSlot_PF, Temp_real_Variable_2) == 0x0000D8, "Member 'WBP_HotBarSlot_PF_C_ExecuteUbergraph_WBP_HotBarSlot_PF::Temp_real_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_HotBarSlot_PF_C_ExecuteUbergraph_WBP_HotBarSlot_PF, CallFunc_ItemIsEmpty_ReturnValue) == 0x0000E0, "Member 'WBP_HotBarSlot_PF_C_ExecuteUbergraph_WBP_HotBarSlot_PF::CallFunc_ItemIsEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_HotBarSlot_PF_C_ExecuteUbergraph_WBP_HotBarSlot_PF, Temp_real_Variable_3) == 0x0000E8, "Member 'WBP_HotBarSlot_PF_C_ExecuteUbergraph_WBP_HotBarSlot_PF::Temp_real_Variable_3' has a wrong offset!");
static_assert(offsetof(WBP_HotBarSlot_PF_C_ExecuteUbergraph_WBP_HotBarSlot_PF, Temp_object_Variable_1) == 0x0000F0, "Member 'WBP_HotBarSlot_PF_C_ExecuteUbergraph_WBP_HotBarSlot_PF::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_HotBarSlot_PF_C_ExecuteUbergraph_WBP_HotBarSlot_PF, K2Node_EnhancedInputActionEvent_ActionValue_1) == 0x0000F8, "Member 'WBP_HotBarSlot_PF_C_ExecuteUbergraph_WBP_HotBarSlot_PF::K2Node_EnhancedInputActionEvent_ActionValue_1' has a wrong offset!");
static_assert(offsetof(WBP_HotBarSlot_PF_C_ExecuteUbergraph_WBP_HotBarSlot_PF, K2Node_EnhancedInputActionEvent_ElapsedTime_1) == 0x000118, "Member 'WBP_HotBarSlot_PF_C_ExecuteUbergraph_WBP_HotBarSlot_PF::K2Node_EnhancedInputActionEvent_ElapsedTime_1' has a wrong offset!");
static_assert(offsetof(WBP_HotBarSlot_PF_C_ExecuteUbergraph_WBP_HotBarSlot_PF, K2Node_EnhancedInputActionEvent_TriggeredTime_1) == 0x00011C, "Member 'WBP_HotBarSlot_PF_C_ExecuteUbergraph_WBP_HotBarSlot_PF::K2Node_EnhancedInputActionEvent_TriggeredTime_1' has a wrong offset!");
static_assert(offsetof(WBP_HotBarSlot_PF_C_ExecuteUbergraph_WBP_HotBarSlot_PF, K2Node_EnhancedInputActionEvent_SourceAction_1) == 0x000120, "Member 'WBP_HotBarSlot_PF_C_ExecuteUbergraph_WBP_HotBarSlot_PF::K2Node_EnhancedInputActionEvent_SourceAction_1' has a wrong offset!");
static_assert(offsetof(WBP_HotBarSlot_PF_C_ExecuteUbergraph_WBP_HotBarSlot_PF, Temp_real_Variable_3_0) == 0x000128, "Member 'WBP_HotBarSlot_PF_C_ExecuteUbergraph_WBP_HotBarSlot_PF::Temp_real_Variable_3_0' has a wrong offset!");
static_assert(offsetof(WBP_HotBarSlot_PF_C_ExecuteUbergraph_WBP_HotBarSlot_PF, Temp_real_Variable_2_0) == 0x000130, "Member 'WBP_HotBarSlot_PF_C_ExecuteUbergraph_WBP_HotBarSlot_PF::Temp_real_Variable_2_0' has a wrong offset!");
static_assert(offsetof(WBP_HotBarSlot_PF_C_ExecuteUbergraph_WBP_HotBarSlot_PF, CallFunc_Conv_InputActionValueToBool_ReturnValue_1) == 0x000138, "Member 'WBP_HotBarSlot_PF_C_ExecuteUbergraph_WBP_HotBarSlot_PF::CallFunc_Conv_InputActionValueToBool_ReturnValue_1' has a wrong offset!");

// Function WBP_HotBarSlot_PF.WBP_HotBarSlot_PF_C.InpActEvt_IA_CancelUseHotbar_PF_K2Node_EnhancedInputActionEvent_0
// 0x0030 (0x0030 - 0x0000)
struct WBP_HotBarSlot_PF_C_InpActEvt_IA_CancelUseHotbar_PF_K2Node_EnhancedInputActionEvent_0 final
{
public:
	struct FInputActionValue                      ActionValue;                                       // 0x0000(0x0020)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	float                                         ElapsedTime;                                       // 0x0020(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         TriggeredTime;                                     // 0x0024(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	const class UInputAction*                     SourceAction;                                      // 0x0028(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_HotBarSlot_PF_C_InpActEvt_IA_CancelUseHotbar_PF_K2Node_EnhancedInputActionEvent_0) == 0x000008, "Wrong alignment on WBP_HotBarSlot_PF_C_InpActEvt_IA_CancelUseHotbar_PF_K2Node_EnhancedInputActionEvent_0");
static_assert(sizeof(WBP_HotBarSlot_PF_C_InpActEvt_IA_CancelUseHotbar_PF_K2Node_EnhancedInputActionEvent_0) == 0x000030, "Wrong size on WBP_HotBarSlot_PF_C_InpActEvt_IA_CancelUseHotbar_PF_K2Node_EnhancedInputActionEvent_0");
static_assert(offsetof(WBP_HotBarSlot_PF_C_InpActEvt_IA_CancelUseHotbar_PF_K2Node_EnhancedInputActionEvent_0, ActionValue) == 0x000000, "Member 'WBP_HotBarSlot_PF_C_InpActEvt_IA_CancelUseHotbar_PF_K2Node_EnhancedInputActionEvent_0::ActionValue' has a wrong offset!");
static_assert(offsetof(WBP_HotBarSlot_PF_C_InpActEvt_IA_CancelUseHotbar_PF_K2Node_EnhancedInputActionEvent_0, ElapsedTime) == 0x000020, "Member 'WBP_HotBarSlot_PF_C_InpActEvt_IA_CancelUseHotbar_PF_K2Node_EnhancedInputActionEvent_0::ElapsedTime' has a wrong offset!");
static_assert(offsetof(WBP_HotBarSlot_PF_C_InpActEvt_IA_CancelUseHotbar_PF_K2Node_EnhancedInputActionEvent_0, TriggeredTime) == 0x000024, "Member 'WBP_HotBarSlot_PF_C_InpActEvt_IA_CancelUseHotbar_PF_K2Node_EnhancedInputActionEvent_0::TriggeredTime' has a wrong offset!");
static_assert(offsetof(WBP_HotBarSlot_PF_C_InpActEvt_IA_CancelUseHotbar_PF_K2Node_EnhancedInputActionEvent_0, SourceAction) == 0x000028, "Member 'WBP_HotBarSlot_PF_C_InpActEvt_IA_CancelUseHotbar_PF_K2Node_EnhancedInputActionEvent_0::SourceAction' has a wrong offset!");

// Function WBP_HotBarSlot_PF.WBP_HotBarSlot_PF_C.InpActEvt_IA_UseHotbarItem_K2Node_EnhancedInputActionEvent_1
// 0x0030 (0x0030 - 0x0000)
struct WBP_HotBarSlot_PF_C_InpActEvt_IA_UseHotbarItem_K2Node_EnhancedInputActionEvent_1 final
{
public:
	struct FInputActionValue                      ActionValue;                                       // 0x0000(0x0020)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	float                                         ElapsedTime;                                       // 0x0020(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         TriggeredTime;                                     // 0x0024(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	const class UInputAction*                     SourceAction;                                      // 0x0028(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_HotBarSlot_PF_C_InpActEvt_IA_UseHotbarItem_K2Node_EnhancedInputActionEvent_1) == 0x000008, "Wrong alignment on WBP_HotBarSlot_PF_C_InpActEvt_IA_UseHotbarItem_K2Node_EnhancedInputActionEvent_1");
static_assert(sizeof(WBP_HotBarSlot_PF_C_InpActEvt_IA_UseHotbarItem_K2Node_EnhancedInputActionEvent_1) == 0x000030, "Wrong size on WBP_HotBarSlot_PF_C_InpActEvt_IA_UseHotbarItem_K2Node_EnhancedInputActionEvent_1");
static_assert(offsetof(WBP_HotBarSlot_PF_C_InpActEvt_IA_UseHotbarItem_K2Node_EnhancedInputActionEvent_1, ActionValue) == 0x000000, "Member 'WBP_HotBarSlot_PF_C_InpActEvt_IA_UseHotbarItem_K2Node_EnhancedInputActionEvent_1::ActionValue' has a wrong offset!");
static_assert(offsetof(WBP_HotBarSlot_PF_C_InpActEvt_IA_UseHotbarItem_K2Node_EnhancedInputActionEvent_1, ElapsedTime) == 0x000020, "Member 'WBP_HotBarSlot_PF_C_InpActEvt_IA_UseHotbarItem_K2Node_EnhancedInputActionEvent_1::ElapsedTime' has a wrong offset!");
static_assert(offsetof(WBP_HotBarSlot_PF_C_InpActEvt_IA_UseHotbarItem_K2Node_EnhancedInputActionEvent_1, TriggeredTime) == 0x000024, "Member 'WBP_HotBarSlot_PF_C_InpActEvt_IA_UseHotbarItem_K2Node_EnhancedInputActionEvent_1::TriggeredTime' has a wrong offset!");
static_assert(offsetof(WBP_HotBarSlot_PF_C_InpActEvt_IA_UseHotbarItem_K2Node_EnhancedInputActionEvent_1, SourceAction) == 0x000028, "Member 'WBP_HotBarSlot_PF_C_InpActEvt_IA_UseHotbarItem_K2Node_EnhancedInputActionEvent_1::SourceAction' has a wrong offset!");

// Function WBP_HotBarSlot_PF.WBP_HotBarSlot_PF_C.OnHotbarSlotUseItem__DelegateSignature
// 0x0001 (0x0001 - 0x0000)
struct WBP_HotBarSlot_PF_C_OnHotbarSlotUseItem__DelegateSignature final
{
public:
	bool                                          ConfirmUseItem;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_HotBarSlot_PF_C_OnHotbarSlotUseItem__DelegateSignature) == 0x000001, "Wrong alignment on WBP_HotBarSlot_PF_C_OnHotbarSlotUseItem__DelegateSignature");
static_assert(sizeof(WBP_HotBarSlot_PF_C_OnHotbarSlotUseItem__DelegateSignature) == 0x000001, "Wrong size on WBP_HotBarSlot_PF_C_OnHotbarSlotUseItem__DelegateSignature");
static_assert(offsetof(WBP_HotBarSlot_PF_C_OnHotbarSlotUseItem__DelegateSignature, ConfirmUseItem) == 0x000000, "Member 'WBP_HotBarSlot_PF_C_OnHotbarSlotUseItem__DelegateSignature::ConfirmUseItem' has a wrong offset!");

// Function WBP_HotBarSlot_PF.WBP_HotBarSlot_PF_C.OnSlotTouched__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct WBP_HotBarSlot_PF_C_OnSlotTouched__DelegateSignature final
{
public:
	class UWBP_HotBarSlot_PF_C*                   SlotRef;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         Param_SlotNumber;                                  // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_HotBarSlot_PF_C_OnSlotTouched__DelegateSignature) == 0x000008, "Wrong alignment on WBP_HotBarSlot_PF_C_OnSlotTouched__DelegateSignature");
static_assert(sizeof(WBP_HotBarSlot_PF_C_OnSlotTouched__DelegateSignature) == 0x000010, "Wrong size on WBP_HotBarSlot_PF_C_OnSlotTouched__DelegateSignature");
static_assert(offsetof(WBP_HotBarSlot_PF_C_OnSlotTouched__DelegateSignature, SlotRef) == 0x000000, "Member 'WBP_HotBarSlot_PF_C_OnSlotTouched__DelegateSignature::SlotRef' has a wrong offset!");
static_assert(offsetof(WBP_HotBarSlot_PF_C_OnSlotTouched__DelegateSignature, Param_SlotNumber) == 0x000008, "Member 'WBP_HotBarSlot_PF_C_OnSlotTouched__DelegateSignature::Param_SlotNumber' has a wrong offset!");

// Function WBP_HotBarSlot_PF.WBP_HotBarSlot_PF_C.OnTouchEnded
// 0x0220 (0x0220 - 0x0000)
struct WBP_HotBarSlot_PF_C_OnTouchEnded final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FPointerEvent                          InTouchEvent;                                      // 0x0038(0x0078)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	struct FEventReply                            ReturnValue;                                       // 0x00B0(0x00B8)(Parm, OutParm, ReturnParm)
	struct FEventReply                            CallFunc_Handled_ReturnValue;                      // 0x0168(0x00B8)()
};
static_assert(alignof(WBP_HotBarSlot_PF_C_OnTouchEnded) == 0x000008, "Wrong alignment on WBP_HotBarSlot_PF_C_OnTouchEnded");
static_assert(sizeof(WBP_HotBarSlot_PF_C_OnTouchEnded) == 0x000220, "Wrong size on WBP_HotBarSlot_PF_C_OnTouchEnded");
static_assert(offsetof(WBP_HotBarSlot_PF_C_OnTouchEnded, MyGeometry) == 0x000000, "Member 'WBP_HotBarSlot_PF_C_OnTouchEnded::MyGeometry' has a wrong offset!");
static_assert(offsetof(WBP_HotBarSlot_PF_C_OnTouchEnded, InTouchEvent) == 0x000038, "Member 'WBP_HotBarSlot_PF_C_OnTouchEnded::InTouchEvent' has a wrong offset!");
static_assert(offsetof(WBP_HotBarSlot_PF_C_OnTouchEnded, ReturnValue) == 0x0000B0, "Member 'WBP_HotBarSlot_PF_C_OnTouchEnded::ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_HotBarSlot_PF_C_OnTouchEnded, CallFunc_Handled_ReturnValue) == 0x000168, "Member 'WBP_HotBarSlot_PF_C_OnTouchEnded::CallFunc_Handled_ReturnValue' has a wrong offset!");

// Function WBP_HotBarSlot_PF.WBP_HotBarSlot_PF_C.SetSlotNumber
// 0x0020 (0x0020 - 0x0000)
struct WBP_HotBarSlot_PF_C_SetSlotNumber final
{
public:
	int32                                         Param_SlotNumber;                                  // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x0008(0x0018)()
};
static_assert(alignof(WBP_HotBarSlot_PF_C_SetSlotNumber) == 0x000008, "Wrong alignment on WBP_HotBarSlot_PF_C_SetSlotNumber");
static_assert(sizeof(WBP_HotBarSlot_PF_C_SetSlotNumber) == 0x000020, "Wrong size on WBP_HotBarSlot_PF_C_SetSlotNumber");
static_assert(offsetof(WBP_HotBarSlot_PF_C_SetSlotNumber, Param_SlotNumber) == 0x000000, "Member 'WBP_HotBarSlot_PF_C_SetSlotNumber::Param_SlotNumber' has a wrong offset!");
static_assert(offsetof(WBP_HotBarSlot_PF_C_SetSlotNumber, CallFunc_Add_IntInt_ReturnValue) == 0x000004, "Member 'WBP_HotBarSlot_PF_C_SetSlotNumber::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_HotBarSlot_PF_C_SetSlotNumber, CallFunc_Conv_IntToText_ReturnValue) == 0x000008, "Member 'WBP_HotBarSlot_PF_C_SetSlotNumber::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");

// Function WBP_HotBarSlot_PF.WBP_HotBarSlot_PF_C.Toggle Highlight
// 0x0078 (0x0078 - 0x0000)
struct WBP_HotBarSlot_PF_C_Toggle_Highlight final
{
public:
	bool                                          IsHighlighted;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_52FB[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UVALUI_TextBlockStyle*                  Temp_object_Variable;                              // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UVALUI_TextBlockStyle*                  Temp_object_Variable_1;                            // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_52FC[0x7];                                     // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Temp_real_Variable;                                // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_1;                              // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_52FD[0x6];                                     // 0x0032(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UVALUI_TextBlockStyle*                  K2Node_Select_Default;                             // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_BoolBool_ReturnValue;            // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_52FE[0x7];                                     // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_Select_Default_1;                           // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_SelectColor_ReturnValue;                  // 0x0050(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSlateColor                            K2Node_MakeStruct_SlateColor;                      // 0x0060(0x0014)()
};
static_assert(alignof(WBP_HotBarSlot_PF_C_Toggle_Highlight) == 0x000008, "Wrong alignment on WBP_HotBarSlot_PF_C_Toggle_Highlight");
static_assert(sizeof(WBP_HotBarSlot_PF_C_Toggle_Highlight) == 0x000078, "Wrong size on WBP_HotBarSlot_PF_C_Toggle_Highlight");
static_assert(offsetof(WBP_HotBarSlot_PF_C_Toggle_Highlight, IsHighlighted) == 0x000000, "Member 'WBP_HotBarSlot_PF_C_Toggle_Highlight::IsHighlighted' has a wrong offset!");
static_assert(offsetof(WBP_HotBarSlot_PF_C_Toggle_Highlight, Temp_object_Variable) == 0x000008, "Member 'WBP_HotBarSlot_PF_C_Toggle_Highlight::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(WBP_HotBarSlot_PF_C_Toggle_Highlight, Temp_object_Variable_1) == 0x000010, "Member 'WBP_HotBarSlot_PF_C_Toggle_Highlight::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_HotBarSlot_PF_C_Toggle_Highlight, Temp_bool_Variable) == 0x000018, "Member 'WBP_HotBarSlot_PF_C_Toggle_Highlight::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_HotBarSlot_PF_C_Toggle_Highlight, Temp_real_Variable) == 0x000020, "Member 'WBP_HotBarSlot_PF_C_Toggle_Highlight::Temp_real_Variable' has a wrong offset!");
static_assert(offsetof(WBP_HotBarSlot_PF_C_Toggle_Highlight, Temp_real_Variable_1) == 0x000028, "Member 'WBP_HotBarSlot_PF_C_Toggle_Highlight::Temp_real_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_HotBarSlot_PF_C_Toggle_Highlight, Temp_bool_Variable_1) == 0x000030, "Member 'WBP_HotBarSlot_PF_C_Toggle_Highlight::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_HotBarSlot_PF_C_Toggle_Highlight, CallFunc_Not_PreBool_ReturnValue) == 0x000031, "Member 'WBP_HotBarSlot_PF_C_Toggle_Highlight::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_HotBarSlot_PF_C_Toggle_Highlight, K2Node_Select_Default) == 0x000038, "Member 'WBP_HotBarSlot_PF_C_Toggle_Highlight::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_HotBarSlot_PF_C_Toggle_Highlight, CallFunc_NotEqual_BoolBool_ReturnValue) == 0x000040, "Member 'WBP_HotBarSlot_PF_C_Toggle_Highlight::CallFunc_NotEqual_BoolBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_HotBarSlot_PF_C_Toggle_Highlight, K2Node_Select_Default_1) == 0x000048, "Member 'WBP_HotBarSlot_PF_C_Toggle_Highlight::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(WBP_HotBarSlot_PF_C_Toggle_Highlight, CallFunc_SelectColor_ReturnValue) == 0x000050, "Member 'WBP_HotBarSlot_PF_C_Toggle_Highlight::CallFunc_SelectColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_HotBarSlot_PF_C_Toggle_Highlight, K2Node_MakeStruct_SlateColor) == 0x000060, "Member 'WBP_HotBarSlot_PF_C_Toggle_Highlight::K2Node_MakeStruct_SlateColor' has a wrong offset!");

// Function WBP_HotBarSlot_PF.WBP_HotBarSlot_PF_C.UpdateErrorBorder
// 0x0005 (0x0005 - 0x0000)
struct WBP_HotBarSlot_PF_C_UpdateErrorBorder final
{
public:
	bool                                          ShouldBeVisible;                                   // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_HotBarSlot_PF_C_UpdateErrorBorder) == 0x000001, "Wrong alignment on WBP_HotBarSlot_PF_C_UpdateErrorBorder");
static_assert(sizeof(WBP_HotBarSlot_PF_C_UpdateErrorBorder) == 0x000005, "Wrong size on WBP_HotBarSlot_PF_C_UpdateErrorBorder");
static_assert(offsetof(WBP_HotBarSlot_PF_C_UpdateErrorBorder, ShouldBeVisible) == 0x000000, "Member 'WBP_HotBarSlot_PF_C_UpdateErrorBorder::ShouldBeVisible' has a wrong offset!");
static_assert(offsetof(WBP_HotBarSlot_PF_C_UpdateErrorBorder, Temp_bool_Variable) == 0x000001, "Member 'WBP_HotBarSlot_PF_C_UpdateErrorBorder::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_HotBarSlot_PF_C_UpdateErrorBorder, Temp_byte_Variable) == 0x000002, "Member 'WBP_HotBarSlot_PF_C_UpdateErrorBorder::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_HotBarSlot_PF_C_UpdateErrorBorder, Temp_byte_Variable_1) == 0x000003, "Member 'WBP_HotBarSlot_PF_C_UpdateErrorBorder::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_HotBarSlot_PF_C_UpdateErrorBorder, K2Node_Select_Default) == 0x000004, "Member 'WBP_HotBarSlot_PF_C_UpdateErrorBorder::K2Node_Select_Default' has a wrong offset!");

// Function WBP_HotBarSlot_PF.WBP_HotBarSlot_PF_C.UpdateHotBarSlot
// 0x0068 (0x0068 - 0x0000)
struct WBP_HotBarSlot_PF_C_UpdateHotBarSlot final
{
public:
	struct FValeriaItem                           Item;                                              // 0x0000(0x0060)(BlueprintVisible, BlueprintReadOnly, Parm)
	bool                                          NewHighlighted;                                    // 0x0060(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsFilterMode;                                      // 0x0061(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_HotBarSlot_PF_C_UpdateHotBarSlot) == 0x000008, "Wrong alignment on WBP_HotBarSlot_PF_C_UpdateHotBarSlot");
static_assert(sizeof(WBP_HotBarSlot_PF_C_UpdateHotBarSlot) == 0x000068, "Wrong size on WBP_HotBarSlot_PF_C_UpdateHotBarSlot");
static_assert(offsetof(WBP_HotBarSlot_PF_C_UpdateHotBarSlot, Item) == 0x000000, "Member 'WBP_HotBarSlot_PF_C_UpdateHotBarSlot::Item' has a wrong offset!");
static_assert(offsetof(WBP_HotBarSlot_PF_C_UpdateHotBarSlot, NewHighlighted) == 0x000060, "Member 'WBP_HotBarSlot_PF_C_UpdateHotBarSlot::NewHighlighted' has a wrong offset!");
static_assert(offsetof(WBP_HotBarSlot_PF_C_UpdateHotBarSlot, IsFilterMode) == 0x000061, "Member 'WBP_HotBarSlot_PF_C_UpdateHotBarSlot::IsFilterMode' has a wrong offset!");

}

