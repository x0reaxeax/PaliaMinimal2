#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_PrimitiveImage

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "UMG_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_PrimitiveImage.WBP_PrimitiveImage_C
// 0x0048 (0x0308 - 0x02C0)
class UWBP_PrimitiveImage_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02C0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UCommonLazyImage*                       CommonLazyImage;                                   // 0x02C8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	TSoftObjectPtr<class UTexture>                WidgetImage;                                       // 0x02D0(0x0028)(Edit, BlueprintVisible, Transient, ExposeOnSpawn, HasGetValueTypeHash)
	struct FVector2D                              Desired_Size;                                      // 0x02F8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)

public:
	void Construct();
	void ExecuteUbergraph_WBP_PrimitiveImage(int32 EntryPoint);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_PrimitiveImage_C">();
	}
	static class UWBP_PrimitiveImage_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_PrimitiveImage_C>();
	}
};
static_assert(alignof(UWBP_PrimitiveImage_C) == 0x000008, "Wrong alignment on UWBP_PrimitiveImage_C");
static_assert(sizeof(UWBP_PrimitiveImage_C) == 0x000308, "Wrong size on UWBP_PrimitiveImage_C");
static_assert(offsetof(UWBP_PrimitiveImage_C, UberGraphFrame) == 0x0002C0, "Member 'UWBP_PrimitiveImage_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWBP_PrimitiveImage_C, CommonLazyImage) == 0x0002C8, "Member 'UWBP_PrimitiveImage_C::CommonLazyImage' has a wrong offset!");
static_assert(offsetof(UWBP_PrimitiveImage_C, WidgetImage) == 0x0002D0, "Member 'UWBP_PrimitiveImage_C::WidgetImage' has a wrong offset!");
static_assert(offsetof(UWBP_PrimitiveImage_C, Desired_Size) == 0x0002F8, "Member 'UWBP_PrimitiveImage_C::Desired_Size' has a wrong offset!");

}

