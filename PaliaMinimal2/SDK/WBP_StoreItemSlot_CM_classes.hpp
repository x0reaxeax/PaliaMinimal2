#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_StoreItemSlot_CM

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "UMG_classes.hpp"
#include "SlateCore_structs.hpp"
#include "Palia_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_StoreItemSlot_CM.WBP_StoreItemSlot_CM_C
// 0x00C0 (0x0380 - 0x02C0)
class UWBP_StoreItemSlot_CM_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02C0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UBorder*                                Border_Price;                                      // 0x02C8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBorder*                                Border_Requirement;                                // 0x02D0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_checkmark;                                   // 0x02D8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_ListItemButton_CM_C*               ListItemButton;                                    // 0x02E0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UMenuAnchor*                            MenuAnchorTooltip;                                 // 0x02E8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 PriceSticker;                                      // 0x02F0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UVALUI_TextBlock_Styled*                TextBlock_Name;                                    // 0x02F8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UVALUI_TextBlock_Styled*                TextBlock_PriceDisplay;                            // 0x0300(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UVALUI_TextBlock_Styled*                TextBlock_RequirementsMsg;                         // 0x0308(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_Item_CM_C*                         WBP_Item;                                          // 0x0310(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_ItemSlot_CM_C*                     WBP_ItemSlot;                                      // 0x0318(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	int32                                         StoreItemIndex;                                    // 0x0320(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	uint8                                         Pad_435C[0x4];                                     // 0x0324(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	FMulticastInlineDelegateProperty_             OnSelected;                                        // 0x0328(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	class UVALUI_TextBlockStyle*                  TextBlockStyle_PriceDisplay_OnHover;               // 0x0338(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UVALUI_TextBlockStyle*                  TextBlockStyle_PriceDisplay_Normal;                // 0x0340(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UVALUI_TextBlockStyle*                  TextBlockStyle_Name_OnHover;                       // 0x0348(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UVALUI_TextBlockStyle*                  TextBlockStyle_Name_Normal;                        // 0x0350(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UObject*                                List_Item_Object;                                  // 0x0358(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	bool                                          IsCostRed;                                         // 0x0360(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_435D[0x7];                                     // 0x0361(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_StoreItemSlot_ListItem_C*           CurrentBPStoreItemSlot;                            // 0x0368(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	bool                                          Is_Hovering;                                       // 0x0370(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Already_Owned;                                     // 0x0371(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_435E[0x6];                                     // 0x0372(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_ItemTooltip_C*                     ItemTooltip;                                       // 0x0378(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)

public:
	void ApplySlotItemTextStyle();
	void BndEvt__WBP_StoreItemSlot_CM_ListItemButton_K2Node_ComponentBoundEvent_6_OnHovered__DelegateSignature(class UWBP_ListItemButton_CM_C* Param_ListItemButton);
	void BndEvt__WBP_StoreItemSlot_CM_ListItemButton_K2Node_ComponentBoundEvent_7_OnUnhovered__DelegateSignature(class UWBP_ListItemButton_CM_C* Param_ListItemButton);
	void BndEvt__WBP_StoreItemSlot_CM_ListItemButton_K2Node_ComponentBoundEvent_8_OnClicked__DelegateSignature(class UWBP_ListItemButton_CM_C* Param_ListItemButton);
	void BndEvt__WBP_StoreItemSlot_CM_ListItemButton_K2Node_ComponentBoundEvent_9_OnPressed__DelegateSignature(class UWBP_ListItemButton_CM_C* Param_ListItemButton);
	void BndEvt__WBP_StoreItemSlot_CM_WBP_ItemSlot_K2Node_ComponentBoundEvent_5_OnLeftClicked__DelegateSignature(class UWBP_ItemSlot_CM_C* Param_Slot);
	void BP_OnEntryReleased();
	void BP_OnItemExpansionChanged(bool bIsExpanded);
	void BP_OnItemSelectionChanged(bool bIsSelected);
	void CloseTooltip();
	void Deselect();
	void ExecuteUbergraph_WBP_StoreItemSlot_CM(int32 EntryPoint, class FText Temp_text_Variable, bool CallFunc_IsValid_ReturnValue, class UObject* CallFunc_GetOuterObject_ReturnValue, class UWBP_VillagerStore_CM_C* K2Node_DynamicCast_AsWBP_Villager_Store_CM, bool K2Node_DynamicCast_bSuccess, class UObject* K2Node_Event_ListItemObject, bool K2Node_Event_bIsSelected, class UBP_StoreItemSlot_ListItem_C* K2Node_DynamicCast_AsBP_Store_Item_Slot_List_Item, bool K2Node_DynamicCast_bSuccess_1, class UListViewBase* CallFunc_GetOwningListView_ReturnValue, class UObject* CallFunc_GetListItemObject_ReturnValue, class UListView* K2Node_DynamicCast_AsList_View, bool K2Node_DynamicCast_bSuccess_2, bool K2Node_CustomEvent_IsHovering, bool K2Node_Event_IsDesignTime, bool Temp_bool_Variable, bool Temp_bool_Variable_1, class UVALUI_ItemSlotStyle* Temp_object_Variable, class UVALUI_ItemSlotStyle* Temp_object_Variable_1, bool CallFunc_IsSelected_bSelected, bool K2Node_Event_bIsExpanded, bool CallFunc_IsRecipe_IsRecipe, bool CallFunc_IsRecipe_IsRecipe_1, bool Temp_bool_Variable_2, class UVALUI_TextBlockStyle* Temp_object_Variable_2, class UVALUI_ItemSlotStyle* K2Node_Select_Default, class UVALUI_TextBlockStyle* Temp_object_Variable_3, bool Temp_bool_Variable_3, class UVALUI_TextBlockStyle* K2Node_Select_Default_1, class UWBP_ItemSlot_CM_C* K2Node_ComponentBoundEvent_Slot, class UWBP_ListItemButton_CM_C* K2Node_ComponentBoundEvent_ListItemButton_3, class UWBP_ListItemButton_CM_C* K2Node_ComponentBoundEvent_ListItemButton_2, class UWBP_ListItemButton_CM_C* K2Node_ComponentBoundEvent_ListItemButton_1, class UWBP_ListItemButton_CM_C* K2Node_ComponentBoundEvent_ListItemButton, const struct FStoreItem& CallFunc_GetStoreItem_StoreItem, TSoftObjectPtr<class UTexture2D> CallFunc_GetCostIcon_Icon, bool CallFunc_Not_PreBool_ReturnValue, bool CallFunc_EqualEqual_ByteByte_ReturnValue, bool CallFunc_Not_PreBool_ReturnValue_1, bool CallFunc_IsRecipeUnlocked_ReturnValue, class FText CallFunc_Conv_IntToText_ReturnValue, bool CallFunc_EqualEqual_IntInt_ReturnValue, class UObject* CallFunc_LoadAsset_Blocking_ReturnValue, class FText K2Node_Select_Default_2, class UVAL_ItemTypeDefinitionAsset* K2Node_DynamicCast_AsItem_Type_Definition, bool K2Node_DynamicCast_bSuccess_3, bool CallFunc_IsItemOwned_ReturnValue, const struct FFormatArgumentData& K2Node_MakeStruct_FormatArgumentData, bool CallFunc_BooleanAND_ReturnValue, TArray<struct FFormatArgumentData>& K2Node_MakeArray_Array, bool CallFunc_BooleanOR_ReturnValue, class FText CallFunc_Format_ReturnValue, class FText K2Node_Select_Default_3);
	void GetStoreItem(struct FStoreItem* StoreItem, EValeriaFuncResult CallFunc_GetValeriaCharacter_OutResult, class AValeriaCharacter* CallFunc_GetValeriaCharacter_ReturnValue, bool K2Node_SwitchEnum_CmpSuccess, class UVillagerStoreComponent* CallFunc_GetComponentByClass_ReturnValue, const struct FStoreItem& CallFunc_Array_Get_Item);
	class UUserWidget* GetTooltipWidget();
	class UWidget* HandleCustomNavigationRight(EUINavigation Param_Navigation, class UObject* CallFunc_GetOuterObject_ReturnValue, bool CallFunc_IsValid_ReturnValue, class UWBP_VillagerStore_CM_C* K2Node_DynamicCast_AsWBP_Villager_Store_CM, bool K2Node_DynamicCast_bSuccess);
	void HandleHoverStateChanged(bool New_Is_Hovering, bool WasHovering);
	void IsRecipe(bool* Param_IsRecipe, const struct FStoreItem& CallFunc_GetStoreItem_StoreItem, bool CallFunc_NotEqual_IntInt_ReturnValue);
	void OnHoverStateChanged(bool IsHovering);
	void OnListItemObjectSet(class UObject* ListItemObject);
	void OnSelected__DelegateSignature(class UWBP_StoreItemSlot_CM_C* ItemSlot);
	void OpenTooltip(const struct FStoreItem& CallFunc_GetStoreItem_StoreItem);
	void PreConstruct(bool IsDesignTime);
	void SetCustomNavigation(TDelegate<void(EUINavigation Navigation)> K2Node_CreateDelegate_OutputDelegate);
	void UpdatePriceBorder(bool ShouldShowBorder, double CallFunc_SelectFloat_ReturnValue, const struct FLinearColor& K2Node_MakeStruct_LinearColor, const struct FLinearColor& K2Node_MakeStruct_LinearColor_1, const struct FSlateColor& K2Node_MakeStruct_SlateColor, const struct FSlateBrushOutlineSettings& K2Node_MakeStruct_SlateBrushOutlineSettings, const struct FSlateBrush& K2Node_MakeStruct_SlateBrush, float K2Node_MakeStruct_A_ImplicitCast, float K2Node_MakeStruct_A_ImplicitCast_1);
	void UpdateRequirementBorder(bool ShouldBeRed, const struct FLinearColor& RedColor, const struct FLinearColor& BlueColor, const struct FLinearColor& CallFunc_SelectColor_ReturnValue, const struct FSlateColor& K2Node_MakeStruct_SlateColor, const struct FSlateBrushOutlineSettings& K2Node_MakeStruct_SlateBrushOutlineSettings, const struct FSlateBrush& K2Node_MakeStruct_SlateBrush);
	void UpdateTextStyle();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_StoreItemSlot_CM_C">();
	}
	static class UWBP_StoreItemSlot_CM_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_StoreItemSlot_CM_C>();
	}
};
static_assert(alignof(UWBP_StoreItemSlot_CM_C) == 0x000008, "Wrong alignment on UWBP_StoreItemSlot_CM_C");
static_assert(sizeof(UWBP_StoreItemSlot_CM_C) == 0x000380, "Wrong size on UWBP_StoreItemSlot_CM_C");
static_assert(offsetof(UWBP_StoreItemSlot_CM_C, UberGraphFrame) == 0x0002C0, "Member 'UWBP_StoreItemSlot_CM_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWBP_StoreItemSlot_CM_C, Border_Price) == 0x0002C8, "Member 'UWBP_StoreItemSlot_CM_C::Border_Price' has a wrong offset!");
static_assert(offsetof(UWBP_StoreItemSlot_CM_C, Border_Requirement) == 0x0002D0, "Member 'UWBP_StoreItemSlot_CM_C::Border_Requirement' has a wrong offset!");
static_assert(offsetof(UWBP_StoreItemSlot_CM_C, Image_checkmark) == 0x0002D8, "Member 'UWBP_StoreItemSlot_CM_C::Image_checkmark' has a wrong offset!");
static_assert(offsetof(UWBP_StoreItemSlot_CM_C, ListItemButton) == 0x0002E0, "Member 'UWBP_StoreItemSlot_CM_C::ListItemButton' has a wrong offset!");
static_assert(offsetof(UWBP_StoreItemSlot_CM_C, MenuAnchorTooltip) == 0x0002E8, "Member 'UWBP_StoreItemSlot_CM_C::MenuAnchorTooltip' has a wrong offset!");
static_assert(offsetof(UWBP_StoreItemSlot_CM_C, PriceSticker) == 0x0002F0, "Member 'UWBP_StoreItemSlot_CM_C::PriceSticker' has a wrong offset!");
static_assert(offsetof(UWBP_StoreItemSlot_CM_C, TextBlock_Name) == 0x0002F8, "Member 'UWBP_StoreItemSlot_CM_C::TextBlock_Name' has a wrong offset!");
static_assert(offsetof(UWBP_StoreItemSlot_CM_C, TextBlock_PriceDisplay) == 0x000300, "Member 'UWBP_StoreItemSlot_CM_C::TextBlock_PriceDisplay' has a wrong offset!");
static_assert(offsetof(UWBP_StoreItemSlot_CM_C, TextBlock_RequirementsMsg) == 0x000308, "Member 'UWBP_StoreItemSlot_CM_C::TextBlock_RequirementsMsg' has a wrong offset!");
static_assert(offsetof(UWBP_StoreItemSlot_CM_C, WBP_Item) == 0x000310, "Member 'UWBP_StoreItemSlot_CM_C::WBP_Item' has a wrong offset!");
static_assert(offsetof(UWBP_StoreItemSlot_CM_C, WBP_ItemSlot) == 0x000318, "Member 'UWBP_StoreItemSlot_CM_C::WBP_ItemSlot' has a wrong offset!");
static_assert(offsetof(UWBP_StoreItemSlot_CM_C, StoreItemIndex) == 0x000320, "Member 'UWBP_StoreItemSlot_CM_C::StoreItemIndex' has a wrong offset!");
static_assert(offsetof(UWBP_StoreItemSlot_CM_C, OnSelected) == 0x000328, "Member 'UWBP_StoreItemSlot_CM_C::OnSelected' has a wrong offset!");
static_assert(offsetof(UWBP_StoreItemSlot_CM_C, TextBlockStyle_PriceDisplay_OnHover) == 0x000338, "Member 'UWBP_StoreItemSlot_CM_C::TextBlockStyle_PriceDisplay_OnHover' has a wrong offset!");
static_assert(offsetof(UWBP_StoreItemSlot_CM_C, TextBlockStyle_PriceDisplay_Normal) == 0x000340, "Member 'UWBP_StoreItemSlot_CM_C::TextBlockStyle_PriceDisplay_Normal' has a wrong offset!");
static_assert(offsetof(UWBP_StoreItemSlot_CM_C, TextBlockStyle_Name_OnHover) == 0x000348, "Member 'UWBP_StoreItemSlot_CM_C::TextBlockStyle_Name_OnHover' has a wrong offset!");
static_assert(offsetof(UWBP_StoreItemSlot_CM_C, TextBlockStyle_Name_Normal) == 0x000350, "Member 'UWBP_StoreItemSlot_CM_C::TextBlockStyle_Name_Normal' has a wrong offset!");
static_assert(offsetof(UWBP_StoreItemSlot_CM_C, List_Item_Object) == 0x000358, "Member 'UWBP_StoreItemSlot_CM_C::List_Item_Object' has a wrong offset!");
static_assert(offsetof(UWBP_StoreItemSlot_CM_C, IsCostRed) == 0x000360, "Member 'UWBP_StoreItemSlot_CM_C::IsCostRed' has a wrong offset!");
static_assert(offsetof(UWBP_StoreItemSlot_CM_C, CurrentBPStoreItemSlot) == 0x000368, "Member 'UWBP_StoreItemSlot_CM_C::CurrentBPStoreItemSlot' has a wrong offset!");
static_assert(offsetof(UWBP_StoreItemSlot_CM_C, Is_Hovering) == 0x000370, "Member 'UWBP_StoreItemSlot_CM_C::Is_Hovering' has a wrong offset!");
static_assert(offsetof(UWBP_StoreItemSlot_CM_C, Already_Owned) == 0x000371, "Member 'UWBP_StoreItemSlot_CM_C::Already_Owned' has a wrong offset!");
static_assert(offsetof(UWBP_StoreItemSlot_CM_C, ItemTooltip) == 0x000378, "Member 'UWBP_StoreItemSlot_CM_C::ItemTooltip' has a wrong offset!");

}

