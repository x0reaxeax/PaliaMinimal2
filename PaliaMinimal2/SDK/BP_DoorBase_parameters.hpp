#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_DoorBase

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "AkAudio_structs.hpp"


namespace SDK::Params
{

// Function BP_DoorBase.BP_DoorBase_C.BndEvt__Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature
// 0x0108 (0x0108 - 0x0000)
struct BP_DoorBase_C_BndEvt__Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bFromSweep;                                        // 0x001C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4CB5[0x3];                                     // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             SweepResult;                                       // 0x0020(0x00E8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(BP_DoorBase_C_BndEvt__Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature) == 0x000008, "Wrong alignment on BP_DoorBase_C_BndEvt__Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(sizeof(BP_DoorBase_C_BndEvt__Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature) == 0x000108, "Wrong size on BP_DoorBase_C_BndEvt__Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(offsetof(BP_DoorBase_C_BndEvt__Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OverlappedComponent) == 0x000000, "Member 'BP_DoorBase_C_BndEvt__Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(BP_DoorBase_C_BndEvt__Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OtherActor) == 0x000008, "Member 'BP_DoorBase_C_BndEvt__Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(BP_DoorBase_C_BndEvt__Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OtherComp) == 0x000010, "Member 'BP_DoorBase_C_BndEvt__Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(BP_DoorBase_C_BndEvt__Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OtherBodyIndex) == 0x000018, "Member 'BP_DoorBase_C_BndEvt__Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(BP_DoorBase_C_BndEvt__Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, bFromSweep) == 0x00001C, "Member 'BP_DoorBase_C_BndEvt__Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::bFromSweep' has a wrong offset!");
static_assert(offsetof(BP_DoorBase_C_BndEvt__Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, SweepResult) == 0x000020, "Member 'BP_DoorBase_C_BndEvt__Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::SweepResult' has a wrong offset!");

// Function BP_DoorBase.BP_DoorBase_C.BndEvt__Box_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct BP_DoorBase_C_BndEvt__Box_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_DoorBase_C_BndEvt__Box_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature) == 0x000008, "Wrong alignment on BP_DoorBase_C_BndEvt__Box_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature");
static_assert(sizeof(BP_DoorBase_C_BndEvt__Box_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature) == 0x000020, "Wrong size on BP_DoorBase_C_BndEvt__Box_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature");
static_assert(offsetof(BP_DoorBase_C_BndEvt__Box_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature, OverlappedComponent) == 0x000000, "Member 'BP_DoorBase_C_BndEvt__Box_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(BP_DoorBase_C_BndEvt__Box_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature, OtherActor) == 0x000008, "Member 'BP_DoorBase_C_BndEvt__Box_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(BP_DoorBase_C_BndEvt__Box_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature, OtherComp) == 0x000010, "Member 'BP_DoorBase_C_BndEvt__Box_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(BP_DoorBase_C_BndEvt__Box_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature, OtherBodyIndex) == 0x000018, "Member 'BP_DoorBase_C_BndEvt__Box_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature::OtherBodyIndex' has a wrong offset!");

// Function BP_DoorBase.BP_DoorBase_C.CanActorOpenDoor?
// 0x0030 (0x0030 - 0x0000)
struct BP_DoorBase_C_CanActorOpenDoor_ final
{
public:
	class AActor*                                 Actor;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CanOpen;                                           // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4CB6[0x7];                                     // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AValeriaVillagerCharacter*              K2Node_DynamicCast_AsValeria_Villager_Character;   // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4CB7[0x7];                                     // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AValeriaCharacter*                      K2Node_DynamicCast_AsValeria_Character;            // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_DoorBase_C_CanActorOpenDoor_) == 0x000008, "Wrong alignment on BP_DoorBase_C_CanActorOpenDoor_");
static_assert(sizeof(BP_DoorBase_C_CanActorOpenDoor_) == 0x000030, "Wrong size on BP_DoorBase_C_CanActorOpenDoor_");
static_assert(offsetof(BP_DoorBase_C_CanActorOpenDoor_, Actor) == 0x000000, "Member 'BP_DoorBase_C_CanActorOpenDoor_::Actor' has a wrong offset!");
static_assert(offsetof(BP_DoorBase_C_CanActorOpenDoor_, CanOpen) == 0x000008, "Member 'BP_DoorBase_C_CanActorOpenDoor_::CanOpen' has a wrong offset!");
static_assert(offsetof(BP_DoorBase_C_CanActorOpenDoor_, K2Node_DynamicCast_AsValeria_Villager_Character) == 0x000010, "Member 'BP_DoorBase_C_CanActorOpenDoor_::K2Node_DynamicCast_AsValeria_Villager_Character' has a wrong offset!");
static_assert(offsetof(BP_DoorBase_C_CanActorOpenDoor_, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'BP_DoorBase_C_CanActorOpenDoor_::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_DoorBase_C_CanActorOpenDoor_, K2Node_DynamicCast_AsValeria_Character) == 0x000020, "Member 'BP_DoorBase_C_CanActorOpenDoor_::K2Node_DynamicCast_AsValeria_Character' has a wrong offset!");
static_assert(offsetof(BP_DoorBase_C_CanActorOpenDoor_, K2Node_DynamicCast_bSuccess_1) == 0x000028, "Member 'BP_DoorBase_C_CanActorOpenDoor_::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");

// Function BP_DoorBase.BP_DoorBase_C.ExecuteUbergraph_BP_DoorBase
// 0x0560 (0x0560 - 0x0000)
struct BP_DoorBase_C_ExecuteUbergraph_BP_DoorBase final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4CB8[0xC];                                     // 0x0004(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetTransform_ReturnValue;                 // 0x0010(0x0060)(ConstParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OverlappedComponent_1;  // 0x0070(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor_1;           // 0x0078(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp_1;            // 0x0080(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_OtherBodyIndex_1;       // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_bFromSweep;             // 0x008C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4CB9[0x3];                                     // 0x008D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             K2Node_ComponentBoundEvent_SweepResult;            // 0x0090(0x00E8)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_CanActorOpenDoor__CanOpen;                // 0x0178(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4CBA[0x7];                                     // 0x0179(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0180(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_InverseTransformLocation_ReturnValue;     // 0x0198(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OverlappedComponent;    // 0x01B0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor;             // 0x01B8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp;              // 0x01C0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_OtherBodyIndex;         // 0x01C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4CBB[0x4];                                     // 0x01CC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_BreakVector_X;                            // 0x01D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x01D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x01E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CanActorOpenDoor__CanOpen_1;              // 0x01E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x01E9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Set_Remove_ReturnValue;                   // 0x01EA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4CBC[0x1];                                     // 0x01EB(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Set_Length_ReturnValue;                   // 0x01EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x01F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NearlyEqual_FloatFloat_ReturnValue;       // 0x01F1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x01F2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x01F3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NearlyEqual_FloatFloat_ReturnValue_1;     // 0x01F4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x01F5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x01F6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsServer_ReturnValue;                     // 0x01F7(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x01F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4CBD[0x4];                                     // 0x01FC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0200(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MoveTowards_ReturnValue;                  // 0x0208(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NearlyEqual_FloatFloat_ReturnValue_2;     // 0x020C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Has_Been_Initd_Variable;                 // 0x020D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4CBE[0x2];                                     // 0x020E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Temp_real_Variable;                                // 0x0210(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_AkGetComponent_ComponentCreated;          // 0x0218(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4CBF[0x7];                                     // 0x0219(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAkComponent*                           CallFunc_AkGetComponent_AkComponent;               // 0x0220(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_AkEventComponent_ReturnValue;             // 0x0228(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_AkGetComponent_ComponentCreated_1;        // 0x022C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4CC0[0x3];                                     // 0x022D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UAkComponent*                           CallFunc_AkGetComponent_AkComponent_1;             // 0x0230(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_1;                              // 0x0238(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_AkEventComponent_ReturnValue_1;           // 0x0240(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x0244(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue_1;            // 0x0245(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4CC1[0x2];                                     // 0x0246(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Temp_real_Variable_2;                              // 0x0248(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EAkAcousticPortalState                        CallFunc_GetCurrentState_ReturnValue;              // 0x0250(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0251(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0252(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable;                       // 0x0253(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EAkAcousticPortalState                        CallFunc_GetCurrentState_ReturnValue_1;            // 0x0254(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess_1;                    // 0x0255(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_DoubleDouble_ReturnValue;      // 0x0256(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0257(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0258(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue_2;            // 0x0259(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_AkGetComponent_ComponentCreated_2;        // 0x025A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4CC2[0x5];                                     // 0x025B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UAkComponent*                           CallFunc_AkGetComponent_AkComponent_2;             // 0x0260(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_AkGetComponent_ComponentCreated_3;        // 0x0268(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4CC3[0x7];                                     // 0x0269(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAkComponent*                           CallFunc_AkGetComponent_AkComponent_3;             // 0x0270(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_AkEventComponent_ReturnValue_2;           // 0x0278(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x027C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4CC4[0x3];                                     // 0x027D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_AkEventComponent_ReturnValue_3;           // 0x0280(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4CC5[0x4];                                     // 0x0284(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_Select_Default;                             // 0x0288(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0290(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetVectorValue_ReturnValue;               // 0x0298(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_3;                              // 0x02B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X_1;                          // 0x02B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_1;                          // 0x02C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_1;                          // 0x02C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x02D0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	double                                        Temp_real_Variable_4;                              // 0x02E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetRelativeRotation_SweepHitResult;    // 0x02F0(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_PortalPlacementValid_ReturnValue;         // 0x03D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4CC6[0x7];                                     // 0x03D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Abs_ReturnValue;                          // 0x03E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x03E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4CC7[0x7];                                     // 0x03E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_FClamp_ReturnValue;                       // 0x03F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NearlyEqual_FloatFloat_ReturnValue_3;     // 0x03F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4CC8[0x7];                                     // 0x03F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_Select_Default_1;                           // 0x0400(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_2;      // 0x0408(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetVectorValue_ReturnValue_1;             // 0x0410(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetRelativeLocation_SweepHitResult;    // 0x0428(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	double                                        Temp_real_Variable_5;                              // 0x0510(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_Select_Default_2;                           // 0x0518(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MoveTowards_value_ImplicitCast;           // 0x0520(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MoveTowards_target_ImplicitCast;          // 0x0524(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_A_ImplicitCast;     // 0x0528(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MoveTowards_delta_ImplicitCast;           // 0x0530(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4CC9[0x4];                                     // 0x0534(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_VariableSet_CurveProgress_ImplicitCast;     // 0x0538(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetVectorValue_InTime_ImplicitCast;       // 0x0540(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeRotator_Roll_ImplicitCast;            // 0x0544(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeRotator_Pitch_ImplicitCast;           // 0x0548(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeRotator_Yaw_ImplicitCast;             // 0x054C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetVectorValue_InTime_ImplicitCast_1;     // 0x0550(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_DoorBase_C_ExecuteUbergraph_BP_DoorBase) == 0x000010, "Wrong alignment on BP_DoorBase_C_ExecuteUbergraph_BP_DoorBase");
static_assert(sizeof(BP_DoorBase_C_ExecuteUbergraph_BP_DoorBase) == 0x000560, "Wrong size on BP_DoorBase_C_ExecuteUbergraph_BP_DoorBase");
static_assert(offsetof(BP_DoorBase_C_ExecuteUbergraph_BP_DoorBase, EntryPoint) == 0x000000, "Member 'BP_DoorBase_C_ExecuteUbergraph_BP_DoorBase::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_DoorBase_C_ExecuteUbergraph_BP_DoorBase, CallFunc_GetTransform_ReturnValue) == 0x000010, "Member 'BP_DoorBase_C_ExecuteUbergraph_BP_DoorBase::CallFunc_GetTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DoorBase_C_ExecuteUbergraph_BP_DoorBase, K2Node_ComponentBoundEvent_OverlappedComponent_1) == 0x000070, "Member 'BP_DoorBase_C_ExecuteUbergraph_BP_DoorBase::K2Node_ComponentBoundEvent_OverlappedComponent_1' has a wrong offset!");
static_assert(offsetof(BP_DoorBase_C_ExecuteUbergraph_BP_DoorBase, K2Node_ComponentBoundEvent_OtherActor_1) == 0x000078, "Member 'BP_DoorBase_C_ExecuteUbergraph_BP_DoorBase::K2Node_ComponentBoundEvent_OtherActor_1' has a wrong offset!");
static_assert(offsetof(BP_DoorBase_C_ExecuteUbergraph_BP_DoorBase, K2Node_ComponentBoundEvent_OtherComp_1) == 0x000080, "Member 'BP_DoorBase_C_ExecuteUbergraph_BP_DoorBase::K2Node_ComponentBoundEvent_OtherComp_1' has a wrong offset!");
static_assert(offsetof(BP_DoorBase_C_ExecuteUbergraph_BP_DoorBase, K2Node_ComponentBoundEvent_OtherBodyIndex_1) == 0x000088, "Member 'BP_DoorBase_C_ExecuteUbergraph_BP_DoorBase::K2Node_ComponentBoundEvent_OtherBodyIndex_1' has a wrong offset!");
static_assert(offsetof(BP_DoorBase_C_ExecuteUbergraph_BP_DoorBase, K2Node_ComponentBoundEvent_bFromSweep) == 0x00008C, "Member 'BP_DoorBase_C_ExecuteUbergraph_BP_DoorBase::K2Node_ComponentBoundEvent_bFromSweep' has a wrong offset!");
static_assert(offsetof(BP_DoorBase_C_ExecuteUbergraph_BP_DoorBase, K2Node_ComponentBoundEvent_SweepResult) == 0x000090, "Member 'BP_DoorBase_C_ExecuteUbergraph_BP_DoorBase::K2Node_ComponentBoundEvent_SweepResult' has a wrong offset!");
static_assert(offsetof(BP_DoorBase_C_ExecuteUbergraph_BP_DoorBase, CallFunc_CanActorOpenDoor__CanOpen) == 0x000178, "Member 'BP_DoorBase_C_ExecuteUbergraph_BP_DoorBase::CallFunc_CanActorOpenDoor__CanOpen' has a wrong offset!");
static_assert(offsetof(BP_DoorBase_C_ExecuteUbergraph_BP_DoorBase, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000180, "Member 'BP_DoorBase_C_ExecuteUbergraph_BP_DoorBase::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DoorBase_C_ExecuteUbergraph_BP_DoorBase, CallFunc_InverseTransformLocation_ReturnValue) == 0x000198, "Member 'BP_DoorBase_C_ExecuteUbergraph_BP_DoorBase::CallFunc_InverseTransformLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DoorBase_C_ExecuteUbergraph_BP_DoorBase, K2Node_ComponentBoundEvent_OverlappedComponent) == 0x0001B0, "Member 'BP_DoorBase_C_ExecuteUbergraph_BP_DoorBase::K2Node_ComponentBoundEvent_OverlappedComponent' has a wrong offset!");
static_assert(offsetof(BP_DoorBase_C_ExecuteUbergraph_BP_DoorBase, K2Node_ComponentBoundEvent_OtherActor) == 0x0001B8, "Member 'BP_DoorBase_C_ExecuteUbergraph_BP_DoorBase::K2Node_ComponentBoundEvent_OtherActor' has a wrong offset!");
static_assert(offsetof(BP_DoorBase_C_ExecuteUbergraph_BP_DoorBase, K2Node_ComponentBoundEvent_OtherComp) == 0x0001C0, "Member 'BP_DoorBase_C_ExecuteUbergraph_BP_DoorBase::K2Node_ComponentBoundEvent_OtherComp' has a wrong offset!");
static_assert(offsetof(BP_DoorBase_C_ExecuteUbergraph_BP_DoorBase, K2Node_ComponentBoundEvent_OtherBodyIndex) == 0x0001C8, "Member 'BP_DoorBase_C_ExecuteUbergraph_BP_DoorBase::K2Node_ComponentBoundEvent_OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(BP_DoorBase_C_ExecuteUbergraph_BP_DoorBase, CallFunc_BreakVector_X) == 0x0001D0, "Member 'BP_DoorBase_C_ExecuteUbergraph_BP_DoorBase::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BP_DoorBase_C_ExecuteUbergraph_BP_DoorBase, CallFunc_BreakVector_Y) == 0x0001D8, "Member 'BP_DoorBase_C_ExecuteUbergraph_BP_DoorBase::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BP_DoorBase_C_ExecuteUbergraph_BP_DoorBase, CallFunc_BreakVector_Z) == 0x0001E0, "Member 'BP_DoorBase_C_ExecuteUbergraph_BP_DoorBase::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BP_DoorBase_C_ExecuteUbergraph_BP_DoorBase, CallFunc_CanActorOpenDoor__CanOpen_1) == 0x0001E8, "Member 'BP_DoorBase_C_ExecuteUbergraph_BP_DoorBase::CallFunc_CanActorOpenDoor__CanOpen_1' has a wrong offset!");
static_assert(offsetof(BP_DoorBase_C_ExecuteUbergraph_BP_DoorBase, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x0001E9, "Member 'BP_DoorBase_C_ExecuteUbergraph_BP_DoorBase::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DoorBase_C_ExecuteUbergraph_BP_DoorBase, CallFunc_Set_Remove_ReturnValue) == 0x0001EA, "Member 'BP_DoorBase_C_ExecuteUbergraph_BP_DoorBase::CallFunc_Set_Remove_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DoorBase_C_ExecuteUbergraph_BP_DoorBase, CallFunc_Set_Length_ReturnValue) == 0x0001EC, "Member 'BP_DoorBase_C_ExecuteUbergraph_BP_DoorBase::CallFunc_Set_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DoorBase_C_ExecuteUbergraph_BP_DoorBase, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x0001F0, "Member 'BP_DoorBase_C_ExecuteUbergraph_BP_DoorBase::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DoorBase_C_ExecuteUbergraph_BP_DoorBase, CallFunc_NearlyEqual_FloatFloat_ReturnValue) == 0x0001F1, "Member 'BP_DoorBase_C_ExecuteUbergraph_BP_DoorBase::CallFunc_NearlyEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DoorBase_C_ExecuteUbergraph_BP_DoorBase, CallFunc_IsValid_ReturnValue) == 0x0001F2, "Member 'BP_DoorBase_C_ExecuteUbergraph_BP_DoorBase::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DoorBase_C_ExecuteUbergraph_BP_DoorBase, CallFunc_IsValid_ReturnValue_1) == 0x0001F3, "Member 'BP_DoorBase_C_ExecuteUbergraph_BP_DoorBase::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_DoorBase_C_ExecuteUbergraph_BP_DoorBase, CallFunc_NearlyEqual_FloatFloat_ReturnValue_1) == 0x0001F4, "Member 'BP_DoorBase_C_ExecuteUbergraph_BP_DoorBase::CallFunc_NearlyEqual_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_DoorBase_C_ExecuteUbergraph_BP_DoorBase, CallFunc_Not_PreBool_ReturnValue) == 0x0001F5, "Member 'BP_DoorBase_C_ExecuteUbergraph_BP_DoorBase::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DoorBase_C_ExecuteUbergraph_BP_DoorBase, CallFunc_BooleanAND_ReturnValue) == 0x0001F6, "Member 'BP_DoorBase_C_ExecuteUbergraph_BP_DoorBase::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DoorBase_C_ExecuteUbergraph_BP_DoorBase, CallFunc_IsServer_ReturnValue) == 0x0001F7, "Member 'BP_DoorBase_C_ExecuteUbergraph_BP_DoorBase::CallFunc_IsServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DoorBase_C_ExecuteUbergraph_BP_DoorBase, K2Node_Event_DeltaSeconds) == 0x0001F8, "Member 'BP_DoorBase_C_ExecuteUbergraph_BP_DoorBase::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_DoorBase_C_ExecuteUbergraph_BP_DoorBase, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000200, "Member 'BP_DoorBase_C_ExecuteUbergraph_BP_DoorBase::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DoorBase_C_ExecuteUbergraph_BP_DoorBase, CallFunc_MoveTowards_ReturnValue) == 0x000208, "Member 'BP_DoorBase_C_ExecuteUbergraph_BP_DoorBase::CallFunc_MoveTowards_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DoorBase_C_ExecuteUbergraph_BP_DoorBase, CallFunc_NearlyEqual_FloatFloat_ReturnValue_2) == 0x00020C, "Member 'BP_DoorBase_C_ExecuteUbergraph_BP_DoorBase::CallFunc_NearlyEqual_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_DoorBase_C_ExecuteUbergraph_BP_DoorBase, Temp_bool_Has_Been_Initd_Variable) == 0x00020D, "Member 'BP_DoorBase_C_ExecuteUbergraph_BP_DoorBase::Temp_bool_Has_Been_Initd_Variable' has a wrong offset!");
static_assert(offsetof(BP_DoorBase_C_ExecuteUbergraph_BP_DoorBase, Temp_real_Variable) == 0x000210, "Member 'BP_DoorBase_C_ExecuteUbergraph_BP_DoorBase::Temp_real_Variable' has a wrong offset!");
static_assert(offsetof(BP_DoorBase_C_ExecuteUbergraph_BP_DoorBase, CallFunc_AkGetComponent_ComponentCreated) == 0x000218, "Member 'BP_DoorBase_C_ExecuteUbergraph_BP_DoorBase::CallFunc_AkGetComponent_ComponentCreated' has a wrong offset!");
static_assert(offsetof(BP_DoorBase_C_ExecuteUbergraph_BP_DoorBase, CallFunc_AkGetComponent_AkComponent) == 0x000220, "Member 'BP_DoorBase_C_ExecuteUbergraph_BP_DoorBase::CallFunc_AkGetComponent_AkComponent' has a wrong offset!");
static_assert(offsetof(BP_DoorBase_C_ExecuteUbergraph_BP_DoorBase, CallFunc_AkEventComponent_ReturnValue) == 0x000228, "Member 'BP_DoorBase_C_ExecuteUbergraph_BP_DoorBase::CallFunc_AkEventComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DoorBase_C_ExecuteUbergraph_BP_DoorBase, CallFunc_AkGetComponent_ComponentCreated_1) == 0x00022C, "Member 'BP_DoorBase_C_ExecuteUbergraph_BP_DoorBase::CallFunc_AkGetComponent_ComponentCreated_1' has a wrong offset!");
static_assert(offsetof(BP_DoorBase_C_ExecuteUbergraph_BP_DoorBase, CallFunc_AkGetComponent_AkComponent_1) == 0x000230, "Member 'BP_DoorBase_C_ExecuteUbergraph_BP_DoorBase::CallFunc_AkGetComponent_AkComponent_1' has a wrong offset!");
static_assert(offsetof(BP_DoorBase_C_ExecuteUbergraph_BP_DoorBase, Temp_real_Variable_1) == 0x000238, "Member 'BP_DoorBase_C_ExecuteUbergraph_BP_DoorBase::Temp_real_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_DoorBase_C_ExecuteUbergraph_BP_DoorBase, CallFunc_AkEventComponent_ReturnValue_1) == 0x000240, "Member 'BP_DoorBase_C_ExecuteUbergraph_BP_DoorBase::CallFunc_AkEventComponent_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_DoorBase_C_ExecuteUbergraph_BP_DoorBase, CallFunc_NotEqual_IntInt_ReturnValue) == 0x000244, "Member 'BP_DoorBase_C_ExecuteUbergraph_BP_DoorBase::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DoorBase_C_ExecuteUbergraph_BP_DoorBase, CallFunc_NotEqual_IntInt_ReturnValue_1) == 0x000245, "Member 'BP_DoorBase_C_ExecuteUbergraph_BP_DoorBase::CallFunc_NotEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_DoorBase_C_ExecuteUbergraph_BP_DoorBase, Temp_real_Variable_2) == 0x000248, "Member 'BP_DoorBase_C_ExecuteUbergraph_BP_DoorBase::Temp_real_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_DoorBase_C_ExecuteUbergraph_BP_DoorBase, CallFunc_GetCurrentState_ReturnValue) == 0x000250, "Member 'BP_DoorBase_C_ExecuteUbergraph_BP_DoorBase::CallFunc_GetCurrentState_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DoorBase_C_ExecuteUbergraph_BP_DoorBase, Temp_bool_Variable) == 0x000251, "Member 'BP_DoorBase_C_ExecuteUbergraph_BP_DoorBase::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_DoorBase_C_ExecuteUbergraph_BP_DoorBase, K2Node_SwitchEnum_CmpSuccess) == 0x000252, "Member 'BP_DoorBase_C_ExecuteUbergraph_BP_DoorBase::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_DoorBase_C_ExecuteUbergraph_BP_DoorBase, Temp_bool_IsClosed_Variable) == 0x000253, "Member 'BP_DoorBase_C_ExecuteUbergraph_BP_DoorBase::Temp_bool_IsClosed_Variable' has a wrong offset!");
static_assert(offsetof(BP_DoorBase_C_ExecuteUbergraph_BP_DoorBase, CallFunc_GetCurrentState_ReturnValue_1) == 0x000254, "Member 'BP_DoorBase_C_ExecuteUbergraph_BP_DoorBase::CallFunc_GetCurrentState_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_DoorBase_C_ExecuteUbergraph_BP_DoorBase, K2Node_SwitchEnum_CmpSuccess_1) == 0x000255, "Member 'BP_DoorBase_C_ExecuteUbergraph_BP_DoorBase::K2Node_SwitchEnum_CmpSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_DoorBase_C_ExecuteUbergraph_BP_DoorBase, CallFunc_EqualEqual_DoubleDouble_ReturnValue) == 0x000256, "Member 'BP_DoorBase_C_ExecuteUbergraph_BP_DoorBase::CallFunc_EqualEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DoorBase_C_ExecuteUbergraph_BP_DoorBase, Temp_bool_Variable_1) == 0x000257, "Member 'BP_DoorBase_C_ExecuteUbergraph_BP_DoorBase::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_DoorBase_C_ExecuteUbergraph_BP_DoorBase, CallFunc_IsValid_ReturnValue_2) == 0x000258, "Member 'BP_DoorBase_C_ExecuteUbergraph_BP_DoorBase::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_DoorBase_C_ExecuteUbergraph_BP_DoorBase, CallFunc_NotEqual_IntInt_ReturnValue_2) == 0x000259, "Member 'BP_DoorBase_C_ExecuteUbergraph_BP_DoorBase::CallFunc_NotEqual_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_DoorBase_C_ExecuteUbergraph_BP_DoorBase, CallFunc_AkGetComponent_ComponentCreated_2) == 0x00025A, "Member 'BP_DoorBase_C_ExecuteUbergraph_BP_DoorBase::CallFunc_AkGetComponent_ComponentCreated_2' has a wrong offset!");
static_assert(offsetof(BP_DoorBase_C_ExecuteUbergraph_BP_DoorBase, CallFunc_AkGetComponent_AkComponent_2) == 0x000260, "Member 'BP_DoorBase_C_ExecuteUbergraph_BP_DoorBase::CallFunc_AkGetComponent_AkComponent_2' has a wrong offset!");
static_assert(offsetof(BP_DoorBase_C_ExecuteUbergraph_BP_DoorBase, CallFunc_AkGetComponent_ComponentCreated_3) == 0x000268, "Member 'BP_DoorBase_C_ExecuteUbergraph_BP_DoorBase::CallFunc_AkGetComponent_ComponentCreated_3' has a wrong offset!");
static_assert(offsetof(BP_DoorBase_C_ExecuteUbergraph_BP_DoorBase, CallFunc_AkGetComponent_AkComponent_3) == 0x000270, "Member 'BP_DoorBase_C_ExecuteUbergraph_BP_DoorBase::CallFunc_AkGetComponent_AkComponent_3' has a wrong offset!");
static_assert(offsetof(BP_DoorBase_C_ExecuteUbergraph_BP_DoorBase, CallFunc_AkEventComponent_ReturnValue_2) == 0x000278, "Member 'BP_DoorBase_C_ExecuteUbergraph_BP_DoorBase::CallFunc_AkEventComponent_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_DoorBase_C_ExecuteUbergraph_BP_DoorBase, CallFunc_IsValid_ReturnValue_3) == 0x00027C, "Member 'BP_DoorBase_C_ExecuteUbergraph_BP_DoorBase::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_DoorBase_C_ExecuteUbergraph_BP_DoorBase, CallFunc_AkEventComponent_ReturnValue_3) == 0x000280, "Member 'BP_DoorBase_C_ExecuteUbergraph_BP_DoorBase::CallFunc_AkEventComponent_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_DoorBase_C_ExecuteUbergraph_BP_DoorBase, K2Node_Select_Default) == 0x000288, "Member 'BP_DoorBase_C_ExecuteUbergraph_BP_DoorBase::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_DoorBase_C_ExecuteUbergraph_BP_DoorBase, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000290, "Member 'BP_DoorBase_C_ExecuteUbergraph_BP_DoorBase::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_DoorBase_C_ExecuteUbergraph_BP_DoorBase, CallFunc_GetVectorValue_ReturnValue) == 0x000298, "Member 'BP_DoorBase_C_ExecuteUbergraph_BP_DoorBase::CallFunc_GetVectorValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DoorBase_C_ExecuteUbergraph_BP_DoorBase, Temp_real_Variable_3) == 0x0002B0, "Member 'BP_DoorBase_C_ExecuteUbergraph_BP_DoorBase::Temp_real_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_DoorBase_C_ExecuteUbergraph_BP_DoorBase, CallFunc_BreakVector_X_1) == 0x0002B8, "Member 'BP_DoorBase_C_ExecuteUbergraph_BP_DoorBase::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(BP_DoorBase_C_ExecuteUbergraph_BP_DoorBase, CallFunc_BreakVector_Y_1) == 0x0002C0, "Member 'BP_DoorBase_C_ExecuteUbergraph_BP_DoorBase::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(BP_DoorBase_C_ExecuteUbergraph_BP_DoorBase, CallFunc_BreakVector_Z_1) == 0x0002C8, "Member 'BP_DoorBase_C_ExecuteUbergraph_BP_DoorBase::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(BP_DoorBase_C_ExecuteUbergraph_BP_DoorBase, CallFunc_MakeRotator_ReturnValue) == 0x0002D0, "Member 'BP_DoorBase_C_ExecuteUbergraph_BP_DoorBase::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DoorBase_C_ExecuteUbergraph_BP_DoorBase, Temp_real_Variable_4) == 0x0002E8, "Member 'BP_DoorBase_C_ExecuteUbergraph_BP_DoorBase::Temp_real_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_DoorBase_C_ExecuteUbergraph_BP_DoorBase, CallFunc_K2_SetRelativeRotation_SweepHitResult) == 0x0002F0, "Member 'BP_DoorBase_C_ExecuteUbergraph_BP_DoorBase::CallFunc_K2_SetRelativeRotation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_DoorBase_C_ExecuteUbergraph_BP_DoorBase, CallFunc_PortalPlacementValid_ReturnValue) == 0x0003D8, "Member 'BP_DoorBase_C_ExecuteUbergraph_BP_DoorBase::CallFunc_PortalPlacementValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DoorBase_C_ExecuteUbergraph_BP_DoorBase, CallFunc_Abs_ReturnValue) == 0x0003E0, "Member 'BP_DoorBase_C_ExecuteUbergraph_BP_DoorBase::CallFunc_Abs_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DoorBase_C_ExecuteUbergraph_BP_DoorBase, Temp_bool_Variable_2) == 0x0003E8, "Member 'BP_DoorBase_C_ExecuteUbergraph_BP_DoorBase::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_DoorBase_C_ExecuteUbergraph_BP_DoorBase, CallFunc_FClamp_ReturnValue) == 0x0003F0, "Member 'BP_DoorBase_C_ExecuteUbergraph_BP_DoorBase::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DoorBase_C_ExecuteUbergraph_BP_DoorBase, CallFunc_NearlyEqual_FloatFloat_ReturnValue_3) == 0x0003F8, "Member 'BP_DoorBase_C_ExecuteUbergraph_BP_DoorBase::CallFunc_NearlyEqual_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_DoorBase_C_ExecuteUbergraph_BP_DoorBase, K2Node_Select_Default_1) == 0x000400, "Member 'BP_DoorBase_C_ExecuteUbergraph_BP_DoorBase::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(BP_DoorBase_C_ExecuteUbergraph_BP_DoorBase, CallFunc_Multiply_DoubleDouble_ReturnValue_2) == 0x000408, "Member 'BP_DoorBase_C_ExecuteUbergraph_BP_DoorBase::CallFunc_Multiply_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_DoorBase_C_ExecuteUbergraph_BP_DoorBase, CallFunc_GetVectorValue_ReturnValue_1) == 0x000410, "Member 'BP_DoorBase_C_ExecuteUbergraph_BP_DoorBase::CallFunc_GetVectorValue_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_DoorBase_C_ExecuteUbergraph_BP_DoorBase, CallFunc_K2_SetRelativeLocation_SweepHitResult) == 0x000428, "Member 'BP_DoorBase_C_ExecuteUbergraph_BP_DoorBase::CallFunc_K2_SetRelativeLocation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_DoorBase_C_ExecuteUbergraph_BP_DoorBase, Temp_real_Variable_5) == 0x000510, "Member 'BP_DoorBase_C_ExecuteUbergraph_BP_DoorBase::Temp_real_Variable_5' has a wrong offset!");
static_assert(offsetof(BP_DoorBase_C_ExecuteUbergraph_BP_DoorBase, K2Node_Select_Default_2) == 0x000518, "Member 'BP_DoorBase_C_ExecuteUbergraph_BP_DoorBase::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(BP_DoorBase_C_ExecuteUbergraph_BP_DoorBase, CallFunc_MoveTowards_value_ImplicitCast) == 0x000520, "Member 'BP_DoorBase_C_ExecuteUbergraph_BP_DoorBase::CallFunc_MoveTowards_value_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_DoorBase_C_ExecuteUbergraph_BP_DoorBase, CallFunc_MoveTowards_target_ImplicitCast) == 0x000524, "Member 'BP_DoorBase_C_ExecuteUbergraph_BP_DoorBase::CallFunc_MoveTowards_target_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_DoorBase_C_ExecuteUbergraph_BP_DoorBase, CallFunc_Multiply_DoubleDouble_A_ImplicitCast) == 0x000528, "Member 'BP_DoorBase_C_ExecuteUbergraph_BP_DoorBase::CallFunc_Multiply_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_DoorBase_C_ExecuteUbergraph_BP_DoorBase, CallFunc_MoveTowards_delta_ImplicitCast) == 0x000530, "Member 'BP_DoorBase_C_ExecuteUbergraph_BP_DoorBase::CallFunc_MoveTowards_delta_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_DoorBase_C_ExecuteUbergraph_BP_DoorBase, K2Node_VariableSet_CurveProgress_ImplicitCast) == 0x000538, "Member 'BP_DoorBase_C_ExecuteUbergraph_BP_DoorBase::K2Node_VariableSet_CurveProgress_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_DoorBase_C_ExecuteUbergraph_BP_DoorBase, CallFunc_GetVectorValue_InTime_ImplicitCast) == 0x000540, "Member 'BP_DoorBase_C_ExecuteUbergraph_BP_DoorBase::CallFunc_GetVectorValue_InTime_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_DoorBase_C_ExecuteUbergraph_BP_DoorBase, CallFunc_MakeRotator_Roll_ImplicitCast) == 0x000544, "Member 'BP_DoorBase_C_ExecuteUbergraph_BP_DoorBase::CallFunc_MakeRotator_Roll_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_DoorBase_C_ExecuteUbergraph_BP_DoorBase, CallFunc_MakeRotator_Pitch_ImplicitCast) == 0x000548, "Member 'BP_DoorBase_C_ExecuteUbergraph_BP_DoorBase::CallFunc_MakeRotator_Pitch_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_DoorBase_C_ExecuteUbergraph_BP_DoorBase, CallFunc_MakeRotator_Yaw_ImplicitCast) == 0x00054C, "Member 'BP_DoorBase_C_ExecuteUbergraph_BP_DoorBase::CallFunc_MakeRotator_Yaw_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_DoorBase_C_ExecuteUbergraph_BP_DoorBase, CallFunc_GetVectorValue_InTime_ImplicitCast_1) == 0x000550, "Member 'BP_DoorBase_C_ExecuteUbergraph_BP_DoorBase::CallFunc_GetVectorValue_InTime_ImplicitCast_1' has a wrong offset!");

// Function BP_DoorBase.BP_DoorBase_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct BP_DoorBase_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_DoorBase_C_ReceiveTick) == 0x000004, "Wrong alignment on BP_DoorBase_C_ReceiveTick");
static_assert(sizeof(BP_DoorBase_C_ReceiveTick) == 0x000004, "Wrong size on BP_DoorBase_C_ReceiveTick");
static_assert(offsetof(BP_DoorBase_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'BP_DoorBase_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

}

