#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_GardenTile

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "Palia_structs.hpp"


namespace SDK::Params
{

// Function BP_GardenTile.BP_GardenTile_C.BeginSeedingSFX
// 0x0008 (0x0008 - 0x0000)
struct BP_GardenTile_C_BeginSeedingSFX final
{
public:
	class AActor*                                 Param_Instigator;                                  // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GardenTile_C_BeginSeedingSFX) == 0x000008, "Wrong alignment on BP_GardenTile_C_BeginSeedingSFX");
static_assert(sizeof(BP_GardenTile_C_BeginSeedingSFX) == 0x000008, "Wrong size on BP_GardenTile_C_BeginSeedingSFX");
static_assert(offsetof(BP_GardenTile_C_BeginSeedingSFX, Param_Instigator) == 0x000000, "Member 'BP_GardenTile_C_BeginSeedingSFX::Param_Instigator' has a wrong offset!");

// Function BP_GardenTile.BP_GardenTile_C.CanBuffPlateBeVisible
// 0x0006 (0x0006 - 0x0000)
struct BP_GardenTile_C_CanBuffPlateBeVisible final
{
public:
	bool                                          PlateVisible;                                      // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPlanted_ReturnValue;                    // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPlantMaster_ReturnValue;                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasValidGardenData_ReturnValue;           // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GardenTile_C_CanBuffPlateBeVisible) == 0x000001, "Wrong alignment on BP_GardenTile_C_CanBuffPlateBeVisible");
static_assert(sizeof(BP_GardenTile_C_CanBuffPlateBeVisible) == 0x000006, "Wrong size on BP_GardenTile_C_CanBuffPlateBeVisible");
static_assert(offsetof(BP_GardenTile_C_CanBuffPlateBeVisible, PlateVisible) == 0x000000, "Member 'BP_GardenTile_C_CanBuffPlateBeVisible::PlateVisible' has a wrong offset!");
static_assert(offsetof(BP_GardenTile_C_CanBuffPlateBeVisible, CallFunc_IsPlanted_ReturnValue) == 0x000001, "Member 'BP_GardenTile_C_CanBuffPlateBeVisible::CallFunc_IsPlanted_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GardenTile_C_CanBuffPlateBeVisible, CallFunc_IsPlantMaster_ReturnValue) == 0x000002, "Member 'BP_GardenTile_C_CanBuffPlateBeVisible::CallFunc_IsPlantMaster_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GardenTile_C_CanBuffPlateBeVisible, CallFunc_Not_PreBool_ReturnValue) == 0x000003, "Member 'BP_GardenTile_C_CanBuffPlateBeVisible::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GardenTile_C_CanBuffPlateBeVisible, CallFunc_BooleanOR_ReturnValue) == 0x000004, "Member 'BP_GardenTile_C_CanBuffPlateBeVisible::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GardenTile_C_CanBuffPlateBeVisible, CallFunc_HasValidGardenData_ReturnValue) == 0x000005, "Member 'BP_GardenTile_C_CanBuffPlateBeVisible::CallFunc_HasValidGardenData_ReturnValue' has a wrong offset!");

// Function BP_GardenTile.BP_GardenTile_C.Check and Set Plate Offset
// 0x0158 (0x0158 - 0x0000)
struct BP_GardenTile_C_Check_and_Set_Plate_Offset final
{
public:
	struct FVector2D                              CallFunc_GetPlantCenter_OutLocation;               // 0x0000(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0010(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_X;                          // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y;                          // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X;                            // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0058(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetWorldLocation_SweepHitResult;       // 0x0070(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(BP_GardenTile_C_Check_and_Set_Plate_Offset) == 0x000008, "Wrong alignment on BP_GardenTile_C_Check_and_Set_Plate_Offset");
static_assert(sizeof(BP_GardenTile_C_Check_and_Set_Plate_Offset) == 0x000158, "Wrong size on BP_GardenTile_C_Check_and_Set_Plate_Offset");
static_assert(offsetof(BP_GardenTile_C_Check_and_Set_Plate_Offset, CallFunc_GetPlantCenter_OutLocation) == 0x000000, "Member 'BP_GardenTile_C_Check_and_Set_Plate_Offset::CallFunc_GetPlantCenter_OutLocation' has a wrong offset!");
static_assert(offsetof(BP_GardenTile_C_Check_and_Set_Plate_Offset, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000010, "Member 'BP_GardenTile_C_Check_and_Set_Plate_Offset::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GardenTile_C_Check_and_Set_Plate_Offset, CallFunc_BreakVector2D_X) == 0x000028, "Member 'BP_GardenTile_C_Check_and_Set_Plate_Offset::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(BP_GardenTile_C_Check_and_Set_Plate_Offset, CallFunc_BreakVector2D_Y) == 0x000030, "Member 'BP_GardenTile_C_Check_and_Set_Plate_Offset::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(BP_GardenTile_C_Check_and_Set_Plate_Offset, CallFunc_BreakVector_X) == 0x000038, "Member 'BP_GardenTile_C_Check_and_Set_Plate_Offset::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BP_GardenTile_C_Check_and_Set_Plate_Offset, CallFunc_BreakVector_Y) == 0x000040, "Member 'BP_GardenTile_C_Check_and_Set_Plate_Offset::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BP_GardenTile_C_Check_and_Set_Plate_Offset, CallFunc_BreakVector_Z) == 0x000048, "Member 'BP_GardenTile_C_Check_and_Set_Plate_Offset::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BP_GardenTile_C_Check_and_Set_Plate_Offset, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000050, "Member 'BP_GardenTile_C_Check_and_Set_Plate_Offset::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GardenTile_C_Check_and_Set_Plate_Offset, CallFunc_MakeVector_ReturnValue) == 0x000058, "Member 'BP_GardenTile_C_Check_and_Set_Plate_Offset::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GardenTile_C_Check_and_Set_Plate_Offset, CallFunc_K2_SetWorldLocation_SweepHitResult) == 0x000070, "Member 'BP_GardenTile_C_Check_and_Set_Plate_Offset::CallFunc_K2_SetWorldLocation_SweepHitResult' has a wrong offset!");

// Function BP_GardenTile.BP_GardenTile_C.Client_HandleHealthChanged
// 0x0010 (0x0010 - 0x0000)
struct BP_GardenTile_C_Client_HandleHealthChanged final
{
public:
	class AActor*                                 InstigatingPlayer;                                 // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         HealthChange;                                      // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         NewHealth;                                         // 0x000C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GardenTile_C_Client_HandleHealthChanged) == 0x000008, "Wrong alignment on BP_GardenTile_C_Client_HandleHealthChanged");
static_assert(sizeof(BP_GardenTile_C_Client_HandleHealthChanged) == 0x000010, "Wrong size on BP_GardenTile_C_Client_HandleHealthChanged");
static_assert(offsetof(BP_GardenTile_C_Client_HandleHealthChanged, InstigatingPlayer) == 0x000000, "Member 'BP_GardenTile_C_Client_HandleHealthChanged::InstigatingPlayer' has a wrong offset!");
static_assert(offsetof(BP_GardenTile_C_Client_HandleHealthChanged, HealthChange) == 0x000008, "Member 'BP_GardenTile_C_Client_HandleHealthChanged::HealthChange' has a wrong offset!");
static_assert(offsetof(BP_GardenTile_C_Client_HandleHealthChanged, NewHealth) == 0x00000C, "Member 'BP_GardenTile_C_Client_HandleHealthChanged::NewHealth' has a wrong offset!");

// Function BP_GardenTile.BP_GardenTile_C.DebugTick
// 0x0010 (0x0010 - 0x0000)
struct BP_GardenTile_C_DebugTick final
{
public:
	double                                        ChildZOffset;                                      // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          WasChanged;                                        // 0x0008(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BuildIsShipping_ReturnValue;              // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GardenTile_C_DebugTick) == 0x000008, "Wrong alignment on BP_GardenTile_C_DebugTick");
static_assert(sizeof(BP_GardenTile_C_DebugTick) == 0x000010, "Wrong size on BP_GardenTile_C_DebugTick");
static_assert(offsetof(BP_GardenTile_C_DebugTick, ChildZOffset) == 0x000000, "Member 'BP_GardenTile_C_DebugTick::ChildZOffset' has a wrong offset!");
static_assert(offsetof(BP_GardenTile_C_DebugTick, WasChanged) == 0x000008, "Member 'BP_GardenTile_C_DebugTick::WasChanged' has a wrong offset!");
static_assert(offsetof(BP_GardenTile_C_DebugTick, CallFunc_BuildIsShipping_ReturnValue) == 0x000009, "Member 'BP_GardenTile_C_DebugTick::CallFunc_BuildIsShipping_ReturnValue' has a wrong offset!");

// Function BP_GardenTile.BP_GardenTile_C.event_plotSelection_changeState
// 0x0001 (0x0001 - 0x0000)
struct BP_GardenTile_C_Event_plotSelection_changeState final
{
public:
	EPlantingState                                PlantState;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GardenTile_C_Event_plotSelection_changeState) == 0x000001, "Wrong alignment on BP_GardenTile_C_Event_plotSelection_changeState");
static_assert(sizeof(BP_GardenTile_C_Event_plotSelection_changeState) == 0x000001, "Wrong size on BP_GardenTile_C_Event_plotSelection_changeState");
static_assert(offsetof(BP_GardenTile_C_Event_plotSelection_changeState, PlantState) == 0x000000, "Member 'BP_GardenTile_C_Event_plotSelection_changeState::PlantState' has a wrong offset!");

// Function BP_GardenTile.BP_GardenTile_C.EventOnFullyWatered
// 0x0008 (0x0008 - 0x0000)
struct BP_GardenTile_C_EventOnFullyWatered final
{
public:
	class AGardenTile*                            GardenTile;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GardenTile_C_EventOnFullyWatered) == 0x000008, "Wrong alignment on BP_GardenTile_C_EventOnFullyWatered");
static_assert(sizeof(BP_GardenTile_C_EventOnFullyWatered) == 0x000008, "Wrong size on BP_GardenTile_C_EventOnFullyWatered");
static_assert(offsetof(BP_GardenTile_C_EventOnFullyWatered, GardenTile) == 0x000000, "Member 'BP_GardenTile_C_EventOnFullyWatered::GardenTile' has a wrong offset!");

// Function BP_GardenTile.BP_GardenTile_C.EventOnWaterChanged
// 0x0008 (0x0008 - 0x0000)
struct BP_GardenTile_C_EventOnWaterChanged final
{
public:
	class AGardenTile*                            GardenTile;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GardenTile_C_EventOnWaterChanged) == 0x000008, "Wrong alignment on BP_GardenTile_C_EventOnWaterChanged");
static_assert(sizeof(BP_GardenTile_C_EventOnWaterChanged) == 0x000008, "Wrong size on BP_GardenTile_C_EventOnWaterChanged");
static_assert(offsetof(BP_GardenTile_C_EventOnWaterChanged, GardenTile) == 0x000000, "Member 'BP_GardenTile_C_EventOnWaterChanged::GardenTile' has a wrong offset!");

// Function BP_GardenTile.BP_GardenTile_C.ExecuteUbergraph_BP_GardenTile
// 0x05D8 (0x05D8 - 0x0000)
struct BP_GardenTile_C_ExecuteUbergraph_BP_GardenTile final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_51A9[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0008(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UNiagaraComponent*                      CallFunc_SpawnSystemAttached_ReturnValue;          // 0x0020(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	const class AValeriaCharacter*                K2Node_Event_actor_1;                              // 0x0028(0x0008)(ConstParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	const class UVAL_ItemTypeDefinitionAsset*     K2Node_Event_SeedItemType_1;                       // 0x0030(0x0008)(ConstParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UNiagaraComponent*                      CallFunc_SpawnSystemAttached_ReturnValue_1;        // 0x0038(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0040(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X;                            // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue_1;    // 0x0070(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X_1;                          // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_1;                          // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_1;                          // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x00A0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetWorldLocation_SweepHitResult;       // 0x00B8(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class UNiagaraComponent*                      CallFunc_SpawnSystemAttached_ReturnValue_2;        // 0x01A0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	const class AValeriaCharacter*                K2Node_Event_actor;                                // 0x01A8(0x0008)(ConstParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	const class UVAL_ItemTypeDefinitionAsset*     K2Node_Event_FertilizedItemType_1;                 // 0x01B0(0x0008)(ConstParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue_2;    // 0x01B8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetComponentBounds_Origin;                // 0x01D0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetComponentBounds_BoxExtent;             // 0x01E8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetComponentBounds_SphereRadius;          // 0x0200(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_51AA[0x4];                                     // 0x0204(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UNiagaraComponent*                      CallFunc_SpawnSystemAtLocation_ReturnValue;        // 0x0208(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue_3;    // 0x0210(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetComponentBounds_Origin_1;              // 0x0228(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetComponentBounds_BoxExtent_1;           // 0x0240(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetComponentBounds_SphereRadius_1;        // 0x0258(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_51AB[0x4];                                     // 0x025C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UNiagaraComponent*                      CallFunc_SpawnSystemAtLocation_ReturnValue_1;      // 0x0260(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0268(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_51AC[0x7];                                     // 0x0269(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UNiagaraComponent*                      CallFunc_SpawnSystemAttached_ReturnValue_3;        // 0x0270(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0278(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlantingState                                K2Node_CustomEvent_NewState;                       // 0x0279(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SetStaticMesh_ReturnValue;                // 0x027A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_51AD[0x5];                                     // 0x027B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_CustomEvent_instigator;                     // 0x0280(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	EPlantingState                                K2Node_CustomEvent_plantState;                     // 0x0288(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_51AE[0x3];                                     // 0x0289(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_AkEventActor_ReturnValue;                 // 0x028C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0290(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_IsAvailable;                    // 0x0291(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_51AF[0x2];                                     // 0x0292(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_AkEventActor_ReturnValue_1;               // 0x0294(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_AkEventActor_ReturnValue_2;               // 0x0298(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAnyTilling_ReturnValue;                // 0x029C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x029D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x029E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_51B0[0x1];                                     // 0x029F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetWateredPercent_ReturnValue;            // 0x02A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_51B1[0x4];                                     // 0x02A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UNiagaraComponent*                      CallFunc_SpawnSystemAttached_ReturnValue_4;        // 0x02A8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasValidGardenData_ReturnValue;           // 0x02B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SetStaticMesh_ReturnValue_1;              // 0x02B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_51B2[0x2];                                     // 0x02B2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_DeltaSeconds;                         // 0x02B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EMinigameState                                K2Node_CustomEvent_state;                          // 0x02B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_51B3[0x7];                                     // 0x02B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	const class UVAL_ItemTypeDefinitionAsset*     K2Node_Event_FertilizedItemType;                   // 0x02C0(0x0008)(ConstParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	const class UVAL_ItemTypeDefinitionAsset*     K2Node_Event_SeedItemType;                         // 0x02C8(0x0008)(ConstParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AGardenTile*                            K2Node_CustomEvent_gardenTile_1;                   // 0x02D0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UVAL_ItemTypeDefinitionAsset* PlantItemType, bool OutRepeatHarvest)> K2Node_CreateDelegate_OutputDelegate;              // 0x02D8(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class AGardenTile* GardenTile)> K2Node_CreateDelegate_OutputDelegate_1;            // 0x02E8(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	const class UVAL_ItemTypeDefinitionAsset*     K2Node_Event_PlantItemType;                        // 0x02F8(0x0008)(ConstParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_RepeatHarvest;                        // 0x0300(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_51B4[0x7];                                     // 0x0301(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0308(0x0050)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0358(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0368(0x0018)()
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x0380(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_2;            // 0x0390(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x03A0(0x0008)(NoDestructor, HasGetValueTypeHash)
	class AGardenTile*                            K2Node_CustomEvent_gardenTile;                     // 0x03A8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_PlayPersistSoundLoop_ReturnValue;         // 0x03B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_51B5[0x4];                                     // 0x03B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	const class UVAL_ItemTypeDefinitionAsset*     K2Node_CustomEvent_PlantItemType;                  // 0x03B8(0x0008)(ConstParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_outRepeatHarvest;               // 0x03C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_51B6[0x7];                                     // 0x03C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x03C8(0x0050)(HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0418(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_51B7[0x7];                                     // 0x0419(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_1;                          // 0x0420(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue_1;                     // 0x0430(0x0018)()
	class FString                                 CallFunc_Conv_TextToString_ReturnValue_1;          // 0x0448(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	TDelegate<void(class AGardenTile* GardenTile)> K2Node_CreateDelegate_OutputDelegate_3;            // 0x0458(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0468(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_51B8[0x7];                                     // 0x0469(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetComponentBounds_Origin_2;              // 0x0470(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetComponentBounds_BoxExtent_2;           // 0x0488(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetComponentBounds_SphereRadius_2;        // 0x04A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsReadyToHarvest_ReturnValue;             // 0x04A4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x04A5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_51B9[0x2];                                     // 0x04A6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_4;            // 0x04A8(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue_1;        // 0x04B8(0x0008)(NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_Event_InstigatingPlayer;                    // 0x04C0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_HealthChange;                         // 0x04C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_NewHealth;                            // 0x04CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x04D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_51BA[0x7];                                     // 0x04D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAkComponent*                           CallFunc_AkEventLocation_AkComponent;              // 0x04D8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_AkEventLocation_Playing_ID;               // 0x04E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_51BB[0x4];                                     // 0x04E4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVitalsChangeContext                   K2Node_MakeStruct_VitalsChangeContext;             // 0x04E8(0x0030)()
	TDelegate<void(EMinigameState State)>         K2Node_CreateDelegate_OutputDelegate_5;            // 0x0518(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UUserWidget*                            CallFunc_GetUserWidgetObject_ReturnValue;          // 0x0528(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UWBP_GardenPlotActor_WeedStatusPlate_C* K2Node_DynamicCast_AsWBP_Garden_Plot_Actor_Weed_Status_Plate; // 0x0530(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0538(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_51BC[0x3];                                     // 0x0539(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(EPlantingState NewState)>      K2Node_CreateDelegate_OutputDelegate_6;            // 0x053C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsServer_ReturnValue;                     // 0x054C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_51BD[0x3];                                     // 0x054D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0550(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UVitalsComponent*                       CallFunc_GetVitals_ReturnValue;                    // 0x0558(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetVital_ReturnValue;                     // 0x0560(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0564(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVitalsChange                          K2Node_MakeStruct_VitalsChange;                    // 0x0568(0x0040)()
	int32                                         CallFunc_GetVital_ReturnValue_1;                   // 0x05A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_TryVitalChange_ReturnValue;               // 0x05AC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x05AD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsServer_ReturnValue_1;                   // 0x05AE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsServer_ReturnValue_2;                   // 0x05AF(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsServer_ReturnValue_3;                   // 0x05B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_51BE[0x7];                                     // 0x05B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_UpdateMaterialInstanceValue_ParamValue_ImplicitCast; // 0x05B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_UpdateMaterialInstanceValue_ParamValue_ImplicitCast_1; // 0x05C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_ManageHiddenLoot_DeltaTime_ImplicitCast;  // 0x05C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_UpdateMaterialInstanceValue_ParamValue_ImplicitCast_2; // 0x05D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GardenTile_C_ExecuteUbergraph_BP_GardenTile) == 0x000008, "Wrong alignment on BP_GardenTile_C_ExecuteUbergraph_BP_GardenTile");
static_assert(sizeof(BP_GardenTile_C_ExecuteUbergraph_BP_GardenTile) == 0x0005D8, "Wrong size on BP_GardenTile_C_ExecuteUbergraph_BP_GardenTile");
static_assert(offsetof(BP_GardenTile_C_ExecuteUbergraph_BP_GardenTile, EntryPoint) == 0x000000, "Member 'BP_GardenTile_C_ExecuteUbergraph_BP_GardenTile::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_GardenTile_C_ExecuteUbergraph_BP_GardenTile, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000008, "Member 'BP_GardenTile_C_ExecuteUbergraph_BP_GardenTile::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GardenTile_C_ExecuteUbergraph_BP_GardenTile, CallFunc_SpawnSystemAttached_ReturnValue) == 0x000020, "Member 'BP_GardenTile_C_ExecuteUbergraph_BP_GardenTile::CallFunc_SpawnSystemAttached_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GardenTile_C_ExecuteUbergraph_BP_GardenTile, K2Node_Event_actor_1) == 0x000028, "Member 'BP_GardenTile_C_ExecuteUbergraph_BP_GardenTile::K2Node_Event_actor_1' has a wrong offset!");
static_assert(offsetof(BP_GardenTile_C_ExecuteUbergraph_BP_GardenTile, K2Node_Event_SeedItemType_1) == 0x000030, "Member 'BP_GardenTile_C_ExecuteUbergraph_BP_GardenTile::K2Node_Event_SeedItemType_1' has a wrong offset!");
static_assert(offsetof(BP_GardenTile_C_ExecuteUbergraph_BP_GardenTile, CallFunc_SpawnSystemAttached_ReturnValue_1) == 0x000038, "Member 'BP_GardenTile_C_ExecuteUbergraph_BP_GardenTile::CallFunc_SpawnSystemAttached_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GardenTile_C_ExecuteUbergraph_BP_GardenTile, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000040, "Member 'BP_GardenTile_C_ExecuteUbergraph_BP_GardenTile::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GardenTile_C_ExecuteUbergraph_BP_GardenTile, CallFunc_BreakVector_X) == 0x000058, "Member 'BP_GardenTile_C_ExecuteUbergraph_BP_GardenTile::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BP_GardenTile_C_ExecuteUbergraph_BP_GardenTile, CallFunc_BreakVector_Y) == 0x000060, "Member 'BP_GardenTile_C_ExecuteUbergraph_BP_GardenTile::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BP_GardenTile_C_ExecuteUbergraph_BP_GardenTile, CallFunc_BreakVector_Z) == 0x000068, "Member 'BP_GardenTile_C_ExecuteUbergraph_BP_GardenTile::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BP_GardenTile_C_ExecuteUbergraph_BP_GardenTile, CallFunc_K2_GetComponentLocation_ReturnValue_1) == 0x000070, "Member 'BP_GardenTile_C_ExecuteUbergraph_BP_GardenTile::CallFunc_K2_GetComponentLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GardenTile_C_ExecuteUbergraph_BP_GardenTile, CallFunc_BreakVector_X_1) == 0x000088, "Member 'BP_GardenTile_C_ExecuteUbergraph_BP_GardenTile::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(BP_GardenTile_C_ExecuteUbergraph_BP_GardenTile, CallFunc_BreakVector_Y_1) == 0x000090, "Member 'BP_GardenTile_C_ExecuteUbergraph_BP_GardenTile::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(BP_GardenTile_C_ExecuteUbergraph_BP_GardenTile, CallFunc_BreakVector_Z_1) == 0x000098, "Member 'BP_GardenTile_C_ExecuteUbergraph_BP_GardenTile::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(BP_GardenTile_C_ExecuteUbergraph_BP_GardenTile, CallFunc_MakeVector_ReturnValue) == 0x0000A0, "Member 'BP_GardenTile_C_ExecuteUbergraph_BP_GardenTile::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GardenTile_C_ExecuteUbergraph_BP_GardenTile, CallFunc_K2_SetWorldLocation_SweepHitResult) == 0x0000B8, "Member 'BP_GardenTile_C_ExecuteUbergraph_BP_GardenTile::CallFunc_K2_SetWorldLocation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_GardenTile_C_ExecuteUbergraph_BP_GardenTile, CallFunc_SpawnSystemAttached_ReturnValue_2) == 0x0001A0, "Member 'BP_GardenTile_C_ExecuteUbergraph_BP_GardenTile::CallFunc_SpawnSystemAttached_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_GardenTile_C_ExecuteUbergraph_BP_GardenTile, K2Node_Event_actor) == 0x0001A8, "Member 'BP_GardenTile_C_ExecuteUbergraph_BP_GardenTile::K2Node_Event_actor' has a wrong offset!");
static_assert(offsetof(BP_GardenTile_C_ExecuteUbergraph_BP_GardenTile, K2Node_Event_FertilizedItemType_1) == 0x0001B0, "Member 'BP_GardenTile_C_ExecuteUbergraph_BP_GardenTile::K2Node_Event_FertilizedItemType_1' has a wrong offset!");
static_assert(offsetof(BP_GardenTile_C_ExecuteUbergraph_BP_GardenTile, CallFunc_K2_GetComponentLocation_ReturnValue_2) == 0x0001B8, "Member 'BP_GardenTile_C_ExecuteUbergraph_BP_GardenTile::CallFunc_K2_GetComponentLocation_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_GardenTile_C_ExecuteUbergraph_BP_GardenTile, CallFunc_GetComponentBounds_Origin) == 0x0001D0, "Member 'BP_GardenTile_C_ExecuteUbergraph_BP_GardenTile::CallFunc_GetComponentBounds_Origin' has a wrong offset!");
static_assert(offsetof(BP_GardenTile_C_ExecuteUbergraph_BP_GardenTile, CallFunc_GetComponentBounds_BoxExtent) == 0x0001E8, "Member 'BP_GardenTile_C_ExecuteUbergraph_BP_GardenTile::CallFunc_GetComponentBounds_BoxExtent' has a wrong offset!");
static_assert(offsetof(BP_GardenTile_C_ExecuteUbergraph_BP_GardenTile, CallFunc_GetComponentBounds_SphereRadius) == 0x000200, "Member 'BP_GardenTile_C_ExecuteUbergraph_BP_GardenTile::CallFunc_GetComponentBounds_SphereRadius' has a wrong offset!");
static_assert(offsetof(BP_GardenTile_C_ExecuteUbergraph_BP_GardenTile, CallFunc_SpawnSystemAtLocation_ReturnValue) == 0x000208, "Member 'BP_GardenTile_C_ExecuteUbergraph_BP_GardenTile::CallFunc_SpawnSystemAtLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GardenTile_C_ExecuteUbergraph_BP_GardenTile, CallFunc_K2_GetComponentLocation_ReturnValue_3) == 0x000210, "Member 'BP_GardenTile_C_ExecuteUbergraph_BP_GardenTile::CallFunc_K2_GetComponentLocation_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_GardenTile_C_ExecuteUbergraph_BP_GardenTile, CallFunc_GetComponentBounds_Origin_1) == 0x000228, "Member 'BP_GardenTile_C_ExecuteUbergraph_BP_GardenTile::CallFunc_GetComponentBounds_Origin_1' has a wrong offset!");
static_assert(offsetof(BP_GardenTile_C_ExecuteUbergraph_BP_GardenTile, CallFunc_GetComponentBounds_BoxExtent_1) == 0x000240, "Member 'BP_GardenTile_C_ExecuteUbergraph_BP_GardenTile::CallFunc_GetComponentBounds_BoxExtent_1' has a wrong offset!");
static_assert(offsetof(BP_GardenTile_C_ExecuteUbergraph_BP_GardenTile, CallFunc_GetComponentBounds_SphereRadius_1) == 0x000258, "Member 'BP_GardenTile_C_ExecuteUbergraph_BP_GardenTile::CallFunc_GetComponentBounds_SphereRadius_1' has a wrong offset!");
static_assert(offsetof(BP_GardenTile_C_ExecuteUbergraph_BP_GardenTile, CallFunc_SpawnSystemAtLocation_ReturnValue_1) == 0x000260, "Member 'BP_GardenTile_C_ExecuteUbergraph_BP_GardenTile::CallFunc_SpawnSystemAtLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GardenTile_C_ExecuteUbergraph_BP_GardenTile, CallFunc_IsValid_ReturnValue) == 0x000268, "Member 'BP_GardenTile_C_ExecuteUbergraph_BP_GardenTile::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GardenTile_C_ExecuteUbergraph_BP_GardenTile, CallFunc_SpawnSystemAttached_ReturnValue_3) == 0x000270, "Member 'BP_GardenTile_C_ExecuteUbergraph_BP_GardenTile::CallFunc_SpawnSystemAttached_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_GardenTile_C_ExecuteUbergraph_BP_GardenTile, CallFunc_IsValid_ReturnValue_1) == 0x000278, "Member 'BP_GardenTile_C_ExecuteUbergraph_BP_GardenTile::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GardenTile_C_ExecuteUbergraph_BP_GardenTile, K2Node_CustomEvent_NewState) == 0x000279, "Member 'BP_GardenTile_C_ExecuteUbergraph_BP_GardenTile::K2Node_CustomEvent_NewState' has a wrong offset!");
static_assert(offsetof(BP_GardenTile_C_ExecuteUbergraph_BP_GardenTile, CallFunc_SetStaticMesh_ReturnValue) == 0x00027A, "Member 'BP_GardenTile_C_ExecuteUbergraph_BP_GardenTile::CallFunc_SetStaticMesh_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GardenTile_C_ExecuteUbergraph_BP_GardenTile, K2Node_CustomEvent_instigator) == 0x000280, "Member 'BP_GardenTile_C_ExecuteUbergraph_BP_GardenTile::K2Node_CustomEvent_instigator' has a wrong offset!");
static_assert(offsetof(BP_GardenTile_C_ExecuteUbergraph_BP_GardenTile, K2Node_CustomEvent_plantState) == 0x000288, "Member 'BP_GardenTile_C_ExecuteUbergraph_BP_GardenTile::K2Node_CustomEvent_plantState' has a wrong offset!");
static_assert(offsetof(BP_GardenTile_C_ExecuteUbergraph_BP_GardenTile, CallFunc_AkEventActor_ReturnValue) == 0x00028C, "Member 'BP_GardenTile_C_ExecuteUbergraph_BP_GardenTile::CallFunc_AkEventActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GardenTile_C_ExecuteUbergraph_BP_GardenTile, K2Node_SwitchEnum_CmpSuccess) == 0x000290, "Member 'BP_GardenTile_C_ExecuteUbergraph_BP_GardenTile::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_GardenTile_C_ExecuteUbergraph_BP_GardenTile, K2Node_CustomEvent_IsAvailable) == 0x000291, "Member 'BP_GardenTile_C_ExecuteUbergraph_BP_GardenTile::K2Node_CustomEvent_IsAvailable' has a wrong offset!");
static_assert(offsetof(BP_GardenTile_C_ExecuteUbergraph_BP_GardenTile, CallFunc_AkEventActor_ReturnValue_1) == 0x000294, "Member 'BP_GardenTile_C_ExecuteUbergraph_BP_GardenTile::CallFunc_AkEventActor_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GardenTile_C_ExecuteUbergraph_BP_GardenTile, CallFunc_AkEventActor_ReturnValue_2) == 0x000298, "Member 'BP_GardenTile_C_ExecuteUbergraph_BP_GardenTile::CallFunc_AkEventActor_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_GardenTile_C_ExecuteUbergraph_BP_GardenTile, CallFunc_HasAnyTilling_ReturnValue) == 0x00029C, "Member 'BP_GardenTile_C_ExecuteUbergraph_BP_GardenTile::CallFunc_HasAnyTilling_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GardenTile_C_ExecuteUbergraph_BP_GardenTile, CallFunc_Not_PreBool_ReturnValue) == 0x00029D, "Member 'BP_GardenTile_C_ExecuteUbergraph_BP_GardenTile::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GardenTile_C_ExecuteUbergraph_BP_GardenTile, CallFunc_BooleanAND_ReturnValue) == 0x00029E, "Member 'BP_GardenTile_C_ExecuteUbergraph_BP_GardenTile::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GardenTile_C_ExecuteUbergraph_BP_GardenTile, CallFunc_GetWateredPercent_ReturnValue) == 0x0002A0, "Member 'BP_GardenTile_C_ExecuteUbergraph_BP_GardenTile::CallFunc_GetWateredPercent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GardenTile_C_ExecuteUbergraph_BP_GardenTile, CallFunc_SpawnSystemAttached_ReturnValue_4) == 0x0002A8, "Member 'BP_GardenTile_C_ExecuteUbergraph_BP_GardenTile::CallFunc_SpawnSystemAttached_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_GardenTile_C_ExecuteUbergraph_BP_GardenTile, CallFunc_HasValidGardenData_ReturnValue) == 0x0002B0, "Member 'BP_GardenTile_C_ExecuteUbergraph_BP_GardenTile::CallFunc_HasValidGardenData_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GardenTile_C_ExecuteUbergraph_BP_GardenTile, CallFunc_SetStaticMesh_ReturnValue_1) == 0x0002B1, "Member 'BP_GardenTile_C_ExecuteUbergraph_BP_GardenTile::CallFunc_SetStaticMesh_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GardenTile_C_ExecuteUbergraph_BP_GardenTile, K2Node_Event_DeltaSeconds) == 0x0002B4, "Member 'BP_GardenTile_C_ExecuteUbergraph_BP_GardenTile::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_GardenTile_C_ExecuteUbergraph_BP_GardenTile, K2Node_CustomEvent_state) == 0x0002B8, "Member 'BP_GardenTile_C_ExecuteUbergraph_BP_GardenTile::K2Node_CustomEvent_state' has a wrong offset!");
static_assert(offsetof(BP_GardenTile_C_ExecuteUbergraph_BP_GardenTile, K2Node_Event_FertilizedItemType) == 0x0002C0, "Member 'BP_GardenTile_C_ExecuteUbergraph_BP_GardenTile::K2Node_Event_FertilizedItemType' has a wrong offset!");
static_assert(offsetof(BP_GardenTile_C_ExecuteUbergraph_BP_GardenTile, K2Node_Event_SeedItemType) == 0x0002C8, "Member 'BP_GardenTile_C_ExecuteUbergraph_BP_GardenTile::K2Node_Event_SeedItemType' has a wrong offset!");
static_assert(offsetof(BP_GardenTile_C_ExecuteUbergraph_BP_GardenTile, K2Node_CustomEvent_gardenTile_1) == 0x0002D0, "Member 'BP_GardenTile_C_ExecuteUbergraph_BP_GardenTile::K2Node_CustomEvent_gardenTile_1' has a wrong offset!");
static_assert(offsetof(BP_GardenTile_C_ExecuteUbergraph_BP_GardenTile, K2Node_CreateDelegate_OutputDelegate) == 0x0002D8, "Member 'BP_GardenTile_C_ExecuteUbergraph_BP_GardenTile::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_GardenTile_C_ExecuteUbergraph_BP_GardenTile, K2Node_CreateDelegate_OutputDelegate_1) == 0x0002E8, "Member 'BP_GardenTile_C_ExecuteUbergraph_BP_GardenTile::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(BP_GardenTile_C_ExecuteUbergraph_BP_GardenTile, K2Node_Event_PlantItemType) == 0x0002F8, "Member 'BP_GardenTile_C_ExecuteUbergraph_BP_GardenTile::K2Node_Event_PlantItemType' has a wrong offset!");
static_assert(offsetof(BP_GardenTile_C_ExecuteUbergraph_BP_GardenTile, K2Node_Event_RepeatHarvest) == 0x000300, "Member 'BP_GardenTile_C_ExecuteUbergraph_BP_GardenTile::K2Node_Event_RepeatHarvest' has a wrong offset!");
static_assert(offsetof(BP_GardenTile_C_ExecuteUbergraph_BP_GardenTile, K2Node_MakeStruct_FormatArgumentData) == 0x000308, "Member 'BP_GardenTile_C_ExecuteUbergraph_BP_GardenTile::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(BP_GardenTile_C_ExecuteUbergraph_BP_GardenTile, K2Node_MakeArray_Array) == 0x000358, "Member 'BP_GardenTile_C_ExecuteUbergraph_BP_GardenTile::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_GardenTile_C_ExecuteUbergraph_BP_GardenTile, CallFunc_Format_ReturnValue) == 0x000368, "Member 'BP_GardenTile_C_ExecuteUbergraph_BP_GardenTile::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GardenTile_C_ExecuteUbergraph_BP_GardenTile, CallFunc_Conv_TextToString_ReturnValue) == 0x000380, "Member 'BP_GardenTile_C_ExecuteUbergraph_BP_GardenTile::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GardenTile_C_ExecuteUbergraph_BP_GardenTile, K2Node_CreateDelegate_OutputDelegate_2) == 0x000390, "Member 'BP_GardenTile_C_ExecuteUbergraph_BP_GardenTile::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(BP_GardenTile_C_ExecuteUbergraph_BP_GardenTile, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x0003A0, "Member 'BP_GardenTile_C_ExecuteUbergraph_BP_GardenTile::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GardenTile_C_ExecuteUbergraph_BP_GardenTile, K2Node_CustomEvent_gardenTile) == 0x0003A8, "Member 'BP_GardenTile_C_ExecuteUbergraph_BP_GardenTile::K2Node_CustomEvent_gardenTile' has a wrong offset!");
static_assert(offsetof(BP_GardenTile_C_ExecuteUbergraph_BP_GardenTile, CallFunc_PlayPersistSoundLoop_ReturnValue) == 0x0003B0, "Member 'BP_GardenTile_C_ExecuteUbergraph_BP_GardenTile::CallFunc_PlayPersistSoundLoop_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GardenTile_C_ExecuteUbergraph_BP_GardenTile, K2Node_CustomEvent_PlantItemType) == 0x0003B8, "Member 'BP_GardenTile_C_ExecuteUbergraph_BP_GardenTile::K2Node_CustomEvent_PlantItemType' has a wrong offset!");
static_assert(offsetof(BP_GardenTile_C_ExecuteUbergraph_BP_GardenTile, K2Node_CustomEvent_outRepeatHarvest) == 0x0003C0, "Member 'BP_GardenTile_C_ExecuteUbergraph_BP_GardenTile::K2Node_CustomEvent_outRepeatHarvest' has a wrong offset!");
static_assert(offsetof(BP_GardenTile_C_ExecuteUbergraph_BP_GardenTile, K2Node_MakeStruct_FormatArgumentData_1) == 0x0003C8, "Member 'BP_GardenTile_C_ExecuteUbergraph_BP_GardenTile::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(BP_GardenTile_C_ExecuteUbergraph_BP_GardenTile, CallFunc_Not_PreBool_ReturnValue_1) == 0x000418, "Member 'BP_GardenTile_C_ExecuteUbergraph_BP_GardenTile::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GardenTile_C_ExecuteUbergraph_BP_GardenTile, K2Node_MakeArray_Array_1) == 0x000420, "Member 'BP_GardenTile_C_ExecuteUbergraph_BP_GardenTile::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(BP_GardenTile_C_ExecuteUbergraph_BP_GardenTile, CallFunc_Format_ReturnValue_1) == 0x000430, "Member 'BP_GardenTile_C_ExecuteUbergraph_BP_GardenTile::CallFunc_Format_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GardenTile_C_ExecuteUbergraph_BP_GardenTile, CallFunc_Conv_TextToString_ReturnValue_1) == 0x000448, "Member 'BP_GardenTile_C_ExecuteUbergraph_BP_GardenTile::CallFunc_Conv_TextToString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GardenTile_C_ExecuteUbergraph_BP_GardenTile, K2Node_CreateDelegate_OutputDelegate_3) == 0x000458, "Member 'BP_GardenTile_C_ExecuteUbergraph_BP_GardenTile::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");
static_assert(offsetof(BP_GardenTile_C_ExecuteUbergraph_BP_GardenTile, CallFunc_IsValid_ReturnValue_2) == 0x000468, "Member 'BP_GardenTile_C_ExecuteUbergraph_BP_GardenTile::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_GardenTile_C_ExecuteUbergraph_BP_GardenTile, CallFunc_GetComponentBounds_Origin_2) == 0x000470, "Member 'BP_GardenTile_C_ExecuteUbergraph_BP_GardenTile::CallFunc_GetComponentBounds_Origin_2' has a wrong offset!");
static_assert(offsetof(BP_GardenTile_C_ExecuteUbergraph_BP_GardenTile, CallFunc_GetComponentBounds_BoxExtent_2) == 0x000488, "Member 'BP_GardenTile_C_ExecuteUbergraph_BP_GardenTile::CallFunc_GetComponentBounds_BoxExtent_2' has a wrong offset!");
static_assert(offsetof(BP_GardenTile_C_ExecuteUbergraph_BP_GardenTile, CallFunc_GetComponentBounds_SphereRadius_2) == 0x0004A0, "Member 'BP_GardenTile_C_ExecuteUbergraph_BP_GardenTile::CallFunc_GetComponentBounds_SphereRadius_2' has a wrong offset!");
static_assert(offsetof(BP_GardenTile_C_ExecuteUbergraph_BP_GardenTile, CallFunc_IsReadyToHarvest_ReturnValue) == 0x0004A4, "Member 'BP_GardenTile_C_ExecuteUbergraph_BP_GardenTile::CallFunc_IsReadyToHarvest_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GardenTile_C_ExecuteUbergraph_BP_GardenTile, CallFunc_BooleanAND_ReturnValue_1) == 0x0004A5, "Member 'BP_GardenTile_C_ExecuteUbergraph_BP_GardenTile::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GardenTile_C_ExecuteUbergraph_BP_GardenTile, K2Node_CreateDelegate_OutputDelegate_4) == 0x0004A8, "Member 'BP_GardenTile_C_ExecuteUbergraph_BP_GardenTile::K2Node_CreateDelegate_OutputDelegate_4' has a wrong offset!");
static_assert(offsetof(BP_GardenTile_C_ExecuteUbergraph_BP_GardenTile, CallFunc_K2_SetTimerDelegate_ReturnValue_1) == 0x0004B8, "Member 'BP_GardenTile_C_ExecuteUbergraph_BP_GardenTile::CallFunc_K2_SetTimerDelegate_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GardenTile_C_ExecuteUbergraph_BP_GardenTile, K2Node_Event_InstigatingPlayer) == 0x0004C0, "Member 'BP_GardenTile_C_ExecuteUbergraph_BP_GardenTile::K2Node_Event_InstigatingPlayer' has a wrong offset!");
static_assert(offsetof(BP_GardenTile_C_ExecuteUbergraph_BP_GardenTile, K2Node_Event_HealthChange) == 0x0004C8, "Member 'BP_GardenTile_C_ExecuteUbergraph_BP_GardenTile::K2Node_Event_HealthChange' has a wrong offset!");
static_assert(offsetof(BP_GardenTile_C_ExecuteUbergraph_BP_GardenTile, K2Node_Event_NewHealth) == 0x0004CC, "Member 'BP_GardenTile_C_ExecuteUbergraph_BP_GardenTile::K2Node_Event_NewHealth' has a wrong offset!");
static_assert(offsetof(BP_GardenTile_C_ExecuteUbergraph_BP_GardenTile, CallFunc_Less_IntInt_ReturnValue) == 0x0004D0, "Member 'BP_GardenTile_C_ExecuteUbergraph_BP_GardenTile::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GardenTile_C_ExecuteUbergraph_BP_GardenTile, CallFunc_AkEventLocation_AkComponent) == 0x0004D8, "Member 'BP_GardenTile_C_ExecuteUbergraph_BP_GardenTile::CallFunc_AkEventLocation_AkComponent' has a wrong offset!");
static_assert(offsetof(BP_GardenTile_C_ExecuteUbergraph_BP_GardenTile, CallFunc_AkEventLocation_Playing_ID) == 0x0004E0, "Member 'BP_GardenTile_C_ExecuteUbergraph_BP_GardenTile::CallFunc_AkEventLocation_Playing_ID' has a wrong offset!");
static_assert(offsetof(BP_GardenTile_C_ExecuteUbergraph_BP_GardenTile, K2Node_MakeStruct_VitalsChangeContext) == 0x0004E8, "Member 'BP_GardenTile_C_ExecuteUbergraph_BP_GardenTile::K2Node_MakeStruct_VitalsChangeContext' has a wrong offset!");
static_assert(offsetof(BP_GardenTile_C_ExecuteUbergraph_BP_GardenTile, K2Node_CreateDelegate_OutputDelegate_5) == 0x000518, "Member 'BP_GardenTile_C_ExecuteUbergraph_BP_GardenTile::K2Node_CreateDelegate_OutputDelegate_5' has a wrong offset!");
static_assert(offsetof(BP_GardenTile_C_ExecuteUbergraph_BP_GardenTile, CallFunc_GetUserWidgetObject_ReturnValue) == 0x000528, "Member 'BP_GardenTile_C_ExecuteUbergraph_BP_GardenTile::CallFunc_GetUserWidgetObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GardenTile_C_ExecuteUbergraph_BP_GardenTile, K2Node_DynamicCast_AsWBP_Garden_Plot_Actor_Weed_Status_Plate) == 0x000530, "Member 'BP_GardenTile_C_ExecuteUbergraph_BP_GardenTile::K2Node_DynamicCast_AsWBP_Garden_Plot_Actor_Weed_Status_Plate' has a wrong offset!");
static_assert(offsetof(BP_GardenTile_C_ExecuteUbergraph_BP_GardenTile, K2Node_DynamicCast_bSuccess) == 0x000538, "Member 'BP_GardenTile_C_ExecuteUbergraph_BP_GardenTile::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_GardenTile_C_ExecuteUbergraph_BP_GardenTile, K2Node_CreateDelegate_OutputDelegate_6) == 0x00053C, "Member 'BP_GardenTile_C_ExecuteUbergraph_BP_GardenTile::K2Node_CreateDelegate_OutputDelegate_6' has a wrong offset!");
static_assert(offsetof(BP_GardenTile_C_ExecuteUbergraph_BP_GardenTile, CallFunc_IsServer_ReturnValue) == 0x00054C, "Member 'BP_GardenTile_C_ExecuteUbergraph_BP_GardenTile::CallFunc_IsServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GardenTile_C_ExecuteUbergraph_BP_GardenTile, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000550, "Member 'BP_GardenTile_C_ExecuteUbergraph_BP_GardenTile::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GardenTile_C_ExecuteUbergraph_BP_GardenTile, CallFunc_GetVitals_ReturnValue) == 0x000558, "Member 'BP_GardenTile_C_ExecuteUbergraph_BP_GardenTile::CallFunc_GetVitals_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GardenTile_C_ExecuteUbergraph_BP_GardenTile, CallFunc_GetVital_ReturnValue) == 0x000560, "Member 'BP_GardenTile_C_ExecuteUbergraph_BP_GardenTile::CallFunc_GetVital_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GardenTile_C_ExecuteUbergraph_BP_GardenTile, CallFunc_Subtract_IntInt_ReturnValue) == 0x000564, "Member 'BP_GardenTile_C_ExecuteUbergraph_BP_GardenTile::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GardenTile_C_ExecuteUbergraph_BP_GardenTile, K2Node_MakeStruct_VitalsChange) == 0x000568, "Member 'BP_GardenTile_C_ExecuteUbergraph_BP_GardenTile::K2Node_MakeStruct_VitalsChange' has a wrong offset!");
static_assert(offsetof(BP_GardenTile_C_ExecuteUbergraph_BP_GardenTile, CallFunc_GetVital_ReturnValue_1) == 0x0005A8, "Member 'BP_GardenTile_C_ExecuteUbergraph_BP_GardenTile::CallFunc_GetVital_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GardenTile_C_ExecuteUbergraph_BP_GardenTile, CallFunc_TryVitalChange_ReturnValue) == 0x0005AC, "Member 'BP_GardenTile_C_ExecuteUbergraph_BP_GardenTile::CallFunc_TryVitalChange_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GardenTile_C_ExecuteUbergraph_BP_GardenTile, CallFunc_LessEqual_IntInt_ReturnValue) == 0x0005AD, "Member 'BP_GardenTile_C_ExecuteUbergraph_BP_GardenTile::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GardenTile_C_ExecuteUbergraph_BP_GardenTile, CallFunc_IsServer_ReturnValue_1) == 0x0005AE, "Member 'BP_GardenTile_C_ExecuteUbergraph_BP_GardenTile::CallFunc_IsServer_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GardenTile_C_ExecuteUbergraph_BP_GardenTile, CallFunc_IsServer_ReturnValue_2) == 0x0005AF, "Member 'BP_GardenTile_C_ExecuteUbergraph_BP_GardenTile::CallFunc_IsServer_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_GardenTile_C_ExecuteUbergraph_BP_GardenTile, CallFunc_IsServer_ReturnValue_3) == 0x0005B0, "Member 'BP_GardenTile_C_ExecuteUbergraph_BP_GardenTile::CallFunc_IsServer_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_GardenTile_C_ExecuteUbergraph_BP_GardenTile, CallFunc_UpdateMaterialInstanceValue_ParamValue_ImplicitCast) == 0x0005B8, "Member 'BP_GardenTile_C_ExecuteUbergraph_BP_GardenTile::CallFunc_UpdateMaterialInstanceValue_ParamValue_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_GardenTile_C_ExecuteUbergraph_BP_GardenTile, CallFunc_UpdateMaterialInstanceValue_ParamValue_ImplicitCast_1) == 0x0005C0, "Member 'BP_GardenTile_C_ExecuteUbergraph_BP_GardenTile::CallFunc_UpdateMaterialInstanceValue_ParamValue_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(BP_GardenTile_C_ExecuteUbergraph_BP_GardenTile, CallFunc_ManageHiddenLoot_DeltaTime_ImplicitCast) == 0x0005C8, "Member 'BP_GardenTile_C_ExecuteUbergraph_BP_GardenTile::CallFunc_ManageHiddenLoot_DeltaTime_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_GardenTile_C_ExecuteUbergraph_BP_GardenTile, CallFunc_UpdateMaterialInstanceValue_ParamValue_ImplicitCast_2) == 0x0005D0, "Member 'BP_GardenTile_C_ExecuteUbergraph_BP_GardenTile::CallFunc_UpdateMaterialInstanceValue_ParamValue_ImplicitCast_2' has a wrong offset!");

// Function BP_GardenTile.BP_GardenTile_C.GetMinigameImage
// 0x0020 (0x0020 - 0x0000)
struct BP_GardenTile_C_GetMinigameImage final
{
public:
	class UImage*                                 ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UUserWidget*                            CallFunc_GetUserWidgetObject_ReturnValue;          // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UWBP_GardenPlotActor_WeedStatusPlate_C* K2Node_DynamicCast_AsWBP_Garden_Plot_Actor_Weed_Status_Plate; // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GardenTile_C_GetMinigameImage) == 0x000008, "Wrong alignment on BP_GardenTile_C_GetMinigameImage");
static_assert(sizeof(BP_GardenTile_C_GetMinigameImage) == 0x000020, "Wrong size on BP_GardenTile_C_GetMinigameImage");
static_assert(offsetof(BP_GardenTile_C_GetMinigameImage, ReturnValue) == 0x000000, "Member 'BP_GardenTile_C_GetMinigameImage::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GardenTile_C_GetMinigameImage, CallFunc_GetUserWidgetObject_ReturnValue) == 0x000008, "Member 'BP_GardenTile_C_GetMinigameImage::CallFunc_GetUserWidgetObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GardenTile_C_GetMinigameImage, K2Node_DynamicCast_AsWBP_Garden_Plot_Actor_Weed_Status_Plate) == 0x000010, "Member 'BP_GardenTile_C_GetMinigameImage::K2Node_DynamicCast_AsWBP_Garden_Plot_Actor_Weed_Status_Plate' has a wrong offset!");
static_assert(offsetof(BP_GardenTile_C_GetMinigameImage, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'BP_GardenTile_C_GetMinigameImage::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function BP_GardenTile.BP_GardenTile_C.GetRequiredWaterAmount
// 0x0004 (0x0004 - 0x0000)
struct BP_GardenTile_C_GetRequiredWaterAmount final
{
public:
	int32                                         MaxAmount;                                         // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GardenTile_C_GetRequiredWaterAmount) == 0x000004, "Wrong alignment on BP_GardenTile_C_GetRequiredWaterAmount");
static_assert(sizeof(BP_GardenTile_C_GetRequiredWaterAmount) == 0x000004, "Wrong size on BP_GardenTile_C_GetRequiredWaterAmount");
static_assert(offsetof(BP_GardenTile_C_GetRequiredWaterAmount, MaxAmount) == 0x000000, "Member 'BP_GardenTile_C_GetRequiredWaterAmount::MaxAmount' has a wrong offset!");

// Function BP_GardenTile.BP_GardenTile_C.ManageHiddenLoot
// 0x0150 (0x0150 - 0x0000)
struct BP_GardenTile_C_ManageHiddenLoot final
{
public:
	double                                        DeltaTime;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0008(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X;                            // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_ReturnValue;                         // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsVisible_ReturnValue;                    // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_51BF[0x7];                                     // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0048(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetWorldLocation_SweepHitResult;       // 0x0060(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue;            // 0x0148(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GardenTile_C_ManageHiddenLoot) == 0x000008, "Wrong alignment on BP_GardenTile_C_ManageHiddenLoot");
static_assert(sizeof(BP_GardenTile_C_ManageHiddenLoot) == 0x000150, "Wrong size on BP_GardenTile_C_ManageHiddenLoot");
static_assert(offsetof(BP_GardenTile_C_ManageHiddenLoot, DeltaTime) == 0x000000, "Member 'BP_GardenTile_C_ManageHiddenLoot::DeltaTime' has a wrong offset!");
static_assert(offsetof(BP_GardenTile_C_ManageHiddenLoot, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000008, "Member 'BP_GardenTile_C_ManageHiddenLoot::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GardenTile_C_ManageHiddenLoot, CallFunc_BreakVector_X) == 0x000020, "Member 'BP_GardenTile_C_ManageHiddenLoot::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BP_GardenTile_C_ManageHiddenLoot, CallFunc_BreakVector_Y) == 0x000028, "Member 'BP_GardenTile_C_ManageHiddenLoot::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BP_GardenTile_C_ManageHiddenLoot, CallFunc_BreakVector_Z) == 0x000030, "Member 'BP_GardenTile_C_ManageHiddenLoot::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BP_GardenTile_C_ManageHiddenLoot, CallFunc_Lerp_ReturnValue) == 0x000038, "Member 'BP_GardenTile_C_ManageHiddenLoot::CallFunc_Lerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GardenTile_C_ManageHiddenLoot, CallFunc_IsVisible_ReturnValue) == 0x000040, "Member 'BP_GardenTile_C_ManageHiddenLoot::CallFunc_IsVisible_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GardenTile_C_ManageHiddenLoot, CallFunc_MakeVector_ReturnValue) == 0x000048, "Member 'BP_GardenTile_C_ManageHiddenLoot::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GardenTile_C_ManageHiddenLoot, CallFunc_K2_SetWorldLocation_SweepHitResult) == 0x000060, "Member 'BP_GardenTile_C_ManageHiddenLoot::CallFunc_K2_SetWorldLocation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_GardenTile_C_ManageHiddenLoot, CallFunc_Less_DoubleDouble_ReturnValue) == 0x000148, "Member 'BP_GardenTile_C_ManageHiddenLoot::CallFunc_Less_DoubleDouble_ReturnValue' has a wrong offset!");

// Function BP_GardenTile.BP_GardenTile_C.OnBeginFertilizing
// 0x0010 (0x0010 - 0x0000)
struct BP_GardenTile_C_OnBeginFertilizing final
{
public:
	const class AValeriaCharacter*                Actor;                                             // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	const class UVAL_ItemTypeDefinitionAsset*     FertilizedItemType;                                // 0x0008(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GardenTile_C_OnBeginFertilizing) == 0x000008, "Wrong alignment on BP_GardenTile_C_OnBeginFertilizing");
static_assert(sizeof(BP_GardenTile_C_OnBeginFertilizing) == 0x000010, "Wrong size on BP_GardenTile_C_OnBeginFertilizing");
static_assert(offsetof(BP_GardenTile_C_OnBeginFertilizing, Actor) == 0x000000, "Member 'BP_GardenTile_C_OnBeginFertilizing::Actor' has a wrong offset!");
static_assert(offsetof(BP_GardenTile_C_OnBeginFertilizing, FertilizedItemType) == 0x000008, "Member 'BP_GardenTile_C_OnBeginFertilizing::FertilizedItemType' has a wrong offset!");

// Function BP_GardenTile.BP_GardenTile_C.OnBeginSeeding
// 0x0010 (0x0010 - 0x0000)
struct BP_GardenTile_C_OnBeginSeeding final
{
public:
	const class AValeriaCharacter*                Actor;                                             // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	const class UVAL_ItemTypeDefinitionAsset*     SeedItemType;                                      // 0x0008(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GardenTile_C_OnBeginSeeding) == 0x000008, "Wrong alignment on BP_GardenTile_C_OnBeginSeeding");
static_assert(sizeof(BP_GardenTile_C_OnBeginSeeding) == 0x000010, "Wrong size on BP_GardenTile_C_OnBeginSeeding");
static_assert(offsetof(BP_GardenTile_C_OnBeginSeeding, Actor) == 0x000000, "Member 'BP_GardenTile_C_OnBeginSeeding::Actor' has a wrong offset!");
static_assert(offsetof(BP_GardenTile_C_OnBeginSeeding, SeedItemType) == 0x000008, "Member 'BP_GardenTile_C_OnBeginSeeding::SeedItemType' has a wrong offset!");

// Function BP_GardenTile.BP_GardenTile_C.OnFertilized
// 0x0008 (0x0008 - 0x0000)
struct BP_GardenTile_C_OnFertilized final
{
public:
	const class UVAL_ItemTypeDefinitionAsset*     FertilizedItemType;                                // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GardenTile_C_OnFertilized) == 0x000008, "Wrong alignment on BP_GardenTile_C_OnFertilized");
static_assert(sizeof(BP_GardenTile_C_OnFertilized) == 0x000008, "Wrong size on BP_GardenTile_C_OnFertilized");
static_assert(offsetof(BP_GardenTile_C_OnFertilized, FertilizedItemType) == 0x000000, "Member 'BP_GardenTile_C_OnFertilized::FertilizedItemType' has a wrong offset!");

// Function BP_GardenTile.BP_GardenTile_C.OnHarvested_Event_0
// 0x0010 (0x0010 - 0x0000)
struct BP_GardenTile_C_OnHarvested_Event_0 final
{
public:
	const class UVAL_ItemTypeDefinitionAsset*     PlantItemType;                                     // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          OutRepeatHarvest;                                  // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GardenTile_C_OnHarvested_Event_0) == 0x000008, "Wrong alignment on BP_GardenTile_C_OnHarvested_Event_0");
static_assert(sizeof(BP_GardenTile_C_OnHarvested_Event_0) == 0x000010, "Wrong size on BP_GardenTile_C_OnHarvested_Event_0");
static_assert(offsetof(BP_GardenTile_C_OnHarvested_Event_0, PlantItemType) == 0x000000, "Member 'BP_GardenTile_C_OnHarvested_Event_0::PlantItemType' has a wrong offset!");
static_assert(offsetof(BP_GardenTile_C_OnHarvested_Event_0, OutRepeatHarvest) == 0x000008, "Member 'BP_GardenTile_C_OnHarvested_Event_0::OutRepeatHarvest' has a wrong offset!");

// Function BP_GardenTile.BP_GardenTile_C.OnPreviewState
// 0x0001 (0x0001 - 0x0000)
struct BP_GardenTile_C_OnPreviewState final
{
public:
	EPlantingState                                NewState;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GardenTile_C_OnPreviewState) == 0x000001, "Wrong alignment on BP_GardenTile_C_OnPreviewState");
static_assert(sizeof(BP_GardenTile_C_OnPreviewState) == 0x000001, "Wrong size on BP_GardenTile_C_OnPreviewState");
static_assert(offsetof(BP_GardenTile_C_OnPreviewState, NewState) == 0x000000, "Member 'BP_GardenTile_C_OnPreviewState::NewState' has a wrong offset!");

// Function BP_GardenTile.BP_GardenTile_C.OnReadyToHarvest
// 0x0010 (0x0010 - 0x0000)
struct BP_GardenTile_C_OnReadyToHarvest final
{
public:
	const class UVAL_ItemTypeDefinitionAsset*     PlantItemType;                                     // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          RepeatHarvest;                                     // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GardenTile_C_OnReadyToHarvest) == 0x000008, "Wrong alignment on BP_GardenTile_C_OnReadyToHarvest");
static_assert(sizeof(BP_GardenTile_C_OnReadyToHarvest) == 0x000010, "Wrong size on BP_GardenTile_C_OnReadyToHarvest");
static_assert(offsetof(BP_GardenTile_C_OnReadyToHarvest, PlantItemType) == 0x000000, "Member 'BP_GardenTile_C_OnReadyToHarvest::PlantItemType' has a wrong offset!");
static_assert(offsetof(BP_GardenTile_C_OnReadyToHarvest, RepeatHarvest) == 0x000008, "Member 'BP_GardenTile_C_OnReadyToHarvest::RepeatHarvest' has a wrong offset!");

// Function BP_GardenTile.BP_GardenTile_C.OnSeeded
// 0x0008 (0x0008 - 0x0000)
struct BP_GardenTile_C_OnSeeded final
{
public:
	const class UVAL_ItemTypeDefinitionAsset*     SeedItemType;                                      // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GardenTile_C_OnSeeded) == 0x000008, "Wrong alignment on BP_GardenTile_C_OnSeeded");
static_assert(sizeof(BP_GardenTile_C_OnSeeded) == 0x000008, "Wrong size on BP_GardenTile_C_OnSeeded");
static_assert(offsetof(BP_GardenTile_C_OnSeeded, SeedItemType) == 0x000000, "Member 'BP_GardenTile_C_OnSeeded::SeedItemType' has a wrong offset!");

// Function BP_GardenTile.BP_GardenTile_C.OnStateChanged
// 0x0001 (0x0001 - 0x0000)
struct BP_GardenTile_C_OnStateChanged final
{
public:
	EMinigameState                                State;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GardenTile_C_OnStateChanged) == 0x000001, "Wrong alignment on BP_GardenTile_C_OnStateChanged");
static_assert(sizeof(BP_GardenTile_C_OnStateChanged) == 0x000001, "Wrong size on BP_GardenTile_C_OnStateChanged");
static_assert(offsetof(BP_GardenTile_C_OnStateChanged, State) == 0x000000, "Member 'BP_GardenTile_C_OnStateChanged::State' has a wrong offset!");

// Function BP_GardenTile.BP_GardenTile_C.PlayCropDestroyEffects
// 0x0050 (0x0050 - 0x0000)
struct BP_GardenTile_C_PlayCropDestroyEffects final
{
public:
	class AActor*                                 Param_Instigator;                                  // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetComponentBounds_Origin;                // 0x0008(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetComponentBounds_BoxExtent;             // 0x0020(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetComponentBounds_SphereRadius;          // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_51C0[0x3];                                     // 0x003D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UNiagaraComponent*                      CallFunc_SpawnSystemAttached_ReturnValue;          // 0x0040(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GardenTile_C_PlayCropDestroyEffects) == 0x000008, "Wrong alignment on BP_GardenTile_C_PlayCropDestroyEffects");
static_assert(sizeof(BP_GardenTile_C_PlayCropDestroyEffects) == 0x000050, "Wrong size on BP_GardenTile_C_PlayCropDestroyEffects");
static_assert(offsetof(BP_GardenTile_C_PlayCropDestroyEffects, Param_Instigator) == 0x000000, "Member 'BP_GardenTile_C_PlayCropDestroyEffects::Param_Instigator' has a wrong offset!");
static_assert(offsetof(BP_GardenTile_C_PlayCropDestroyEffects, CallFunc_GetComponentBounds_Origin) == 0x000008, "Member 'BP_GardenTile_C_PlayCropDestroyEffects::CallFunc_GetComponentBounds_Origin' has a wrong offset!");
static_assert(offsetof(BP_GardenTile_C_PlayCropDestroyEffects, CallFunc_GetComponentBounds_BoxExtent) == 0x000020, "Member 'BP_GardenTile_C_PlayCropDestroyEffects::CallFunc_GetComponentBounds_BoxExtent' has a wrong offset!");
static_assert(offsetof(BP_GardenTile_C_PlayCropDestroyEffects, CallFunc_GetComponentBounds_SphereRadius) == 0x000038, "Member 'BP_GardenTile_C_PlayCropDestroyEffects::CallFunc_GetComponentBounds_SphereRadius' has a wrong offset!");
static_assert(offsetof(BP_GardenTile_C_PlayCropDestroyEffects, CallFunc_IsValid_ReturnValue) == 0x00003C, "Member 'BP_GardenTile_C_PlayCropDestroyEffects::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GardenTile_C_PlayCropDestroyEffects, CallFunc_SpawnSystemAttached_ReturnValue) == 0x000040, "Member 'BP_GardenTile_C_PlayCropDestroyEffects::CallFunc_SpawnSystemAttached_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GardenTile_C_PlayCropDestroyEffects, CallFunc_IsValid_ReturnValue_1) == 0x000048, "Member 'BP_GardenTile_C_PlayCropDestroyEffects::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");

// Function BP_GardenTile.BP_GardenTile_C.PlayCropHitEffects
// 0x0078 (0x0078 - 0x0000)
struct BP_GardenTile_C_PlayCropHitEffects final
{
public:
	class AActor*                                 Param_Instigator;                                  // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UVitalsComponent*                       Param_Vitals;                                      // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetComponentBounds_Origin;                // 0x0010(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetComponentBounds_BoxExtent;             // 0x0028(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetComponentBounds_SphereRadius;          // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_51C1[0x3];                                     // 0x0045(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0048(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UNiagaraComponent*                      CallFunc_SpawnSystemAttached_ReturnValue;          // 0x0060(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UAkComponent*                           CallFunc_AkEventLocation_AkComponent;              // 0x0068(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_AkEventLocation_Playing_ID;               // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0074(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GardenTile_C_PlayCropHitEffects) == 0x000008, "Wrong alignment on BP_GardenTile_C_PlayCropHitEffects");
static_assert(sizeof(BP_GardenTile_C_PlayCropHitEffects) == 0x000078, "Wrong size on BP_GardenTile_C_PlayCropHitEffects");
static_assert(offsetof(BP_GardenTile_C_PlayCropHitEffects, Param_Instigator) == 0x000000, "Member 'BP_GardenTile_C_PlayCropHitEffects::Param_Instigator' has a wrong offset!");
static_assert(offsetof(BP_GardenTile_C_PlayCropHitEffects, Param_Vitals) == 0x000008, "Member 'BP_GardenTile_C_PlayCropHitEffects::Param_Vitals' has a wrong offset!");
static_assert(offsetof(BP_GardenTile_C_PlayCropHitEffects, CallFunc_GetComponentBounds_Origin) == 0x000010, "Member 'BP_GardenTile_C_PlayCropHitEffects::CallFunc_GetComponentBounds_Origin' has a wrong offset!");
static_assert(offsetof(BP_GardenTile_C_PlayCropHitEffects, CallFunc_GetComponentBounds_BoxExtent) == 0x000028, "Member 'BP_GardenTile_C_PlayCropHitEffects::CallFunc_GetComponentBounds_BoxExtent' has a wrong offset!");
static_assert(offsetof(BP_GardenTile_C_PlayCropHitEffects, CallFunc_GetComponentBounds_SphereRadius) == 0x000040, "Member 'BP_GardenTile_C_PlayCropHitEffects::CallFunc_GetComponentBounds_SphereRadius' has a wrong offset!");
static_assert(offsetof(BP_GardenTile_C_PlayCropHitEffects, CallFunc_IsValid_ReturnValue) == 0x000044, "Member 'BP_GardenTile_C_PlayCropHitEffects::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GardenTile_C_PlayCropHitEffects, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000048, "Member 'BP_GardenTile_C_PlayCropHitEffects::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GardenTile_C_PlayCropHitEffects, CallFunc_SpawnSystemAttached_ReturnValue) == 0x000060, "Member 'BP_GardenTile_C_PlayCropHitEffects::CallFunc_SpawnSystemAttached_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GardenTile_C_PlayCropHitEffects, CallFunc_AkEventLocation_AkComponent) == 0x000068, "Member 'BP_GardenTile_C_PlayCropHitEffects::CallFunc_AkEventLocation_AkComponent' has a wrong offset!");
static_assert(offsetof(BP_GardenTile_C_PlayCropHitEffects, CallFunc_AkEventLocation_Playing_ID) == 0x000070, "Member 'BP_GardenTile_C_PlayCropHitEffects::CallFunc_AkEventLocation_Playing_ID' has a wrong offset!");
static_assert(offsetof(BP_GardenTile_C_PlayCropHitEffects, CallFunc_IsValid_ReturnValue_1) == 0x000074, "Member 'BP_GardenTile_C_PlayCropHitEffects::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");

// Function BP_GardenTile.BP_GardenTile_C.PlotHoverSFX
// 0x0001 (0x0001 - 0x0000)
struct BP_GardenTile_C_PlotHoverSFX final
{
public:
	bool                                          IsAvailable;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GardenTile_C_PlotHoverSFX) == 0x000001, "Wrong alignment on BP_GardenTile_C_PlotHoverSFX");
static_assert(sizeof(BP_GardenTile_C_PlotHoverSFX) == 0x000001, "Wrong size on BP_GardenTile_C_PlotHoverSFX");
static_assert(offsetof(BP_GardenTile_C_PlotHoverSFX, IsAvailable) == 0x000000, "Member 'BP_GardenTile_C_PlotHoverSFX::IsAvailable' has a wrong offset!");

// Function BP_GardenTile.BP_GardenTile_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct BP_GardenTile_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GardenTile_C_ReceiveTick) == 0x000004, "Wrong alignment on BP_GardenTile_C_ReceiveTick");
static_assert(sizeof(BP_GardenTile_C_ReceiveTick) == 0x000004, "Wrong size on BP_GardenTile_C_ReceiveTick");
static_assert(offsetof(BP_GardenTile_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'BP_GardenTile_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function BP_GardenTile.BP_GardenTile_C.TryUpdateWeedState
// 0x0080 (0x0080 - 0x0000)
struct BP_GardenTile_C_TryUpdateWeedState final
{
public:
	int32                                         CheckWeedState;                                    // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_1;          // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_2;          // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGardenPlot                            CallFunc_GetGardenPlot_ReturnValue;                // 0x0008(0x0078)(ConstParm)
};
static_assert(alignof(BP_GardenTile_C_TryUpdateWeedState) == 0x000008, "Wrong alignment on BP_GardenTile_C_TryUpdateWeedState");
static_assert(sizeof(BP_GardenTile_C_TryUpdateWeedState) == 0x000080, "Wrong size on BP_GardenTile_C_TryUpdateWeedState");
static_assert(offsetof(BP_GardenTile_C_TryUpdateWeedState, CheckWeedState) == 0x000000, "Member 'BP_GardenTile_C_TryUpdateWeedState::CheckWeedState' has a wrong offset!");
static_assert(offsetof(BP_GardenTile_C_TryUpdateWeedState, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000004, "Member 'BP_GardenTile_C_TryUpdateWeedState::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GardenTile_C_TryUpdateWeedState, CallFunc_EqualEqual_IntInt_ReturnValue_1) == 0x000005, "Member 'BP_GardenTile_C_TryUpdateWeedState::CallFunc_EqualEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GardenTile_C_TryUpdateWeedState, CallFunc_EqualEqual_IntInt_ReturnValue_2) == 0x000006, "Member 'BP_GardenTile_C_TryUpdateWeedState::CallFunc_EqualEqual_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_GardenTile_C_TryUpdateWeedState, CallFunc_NotEqual_IntInt_ReturnValue) == 0x000007, "Member 'BP_GardenTile_C_TryUpdateWeedState::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GardenTile_C_TryUpdateWeedState, CallFunc_GetGardenPlot_ReturnValue) == 0x000008, "Member 'BP_GardenTile_C_TryUpdateWeedState::CallFunc_GetGardenPlot_ReturnValue' has a wrong offset!");

// Function BP_GardenTile.BP_GardenTile_C.Update Buff Visuals
// 0x01B0 (0x01B0 - 0x0000)
struct BP_GardenTile_C_Update_Buff_Visuals final
{
public:
	bool                                          HasFertilizer;                                     // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          HasBuff;                                           // 0x0001(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_51C2[0x6];                                     // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGardenTileBuffInfo                    GardenBuffInfo;                                    // 0x0008(0x0040)(Edit, BlueprintVisible)
	struct FGardenTileBuffInfo                    CallFunc_K2_TryGetGardenTileBuffInfo_fertilizerInfo; // 0x0048(0x0040)()
	bool                                          CallFunc_K2_TryGetGardenTileBuffInfo_ReturnValue;  // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_51C3[0x3];                                     // 0x0089(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasValidGardenData_ReturnValue;           // 0x0094(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPlantMaster_ReturnValue;                // 0x0095(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_51C4[0x2];                                     // 0x0096(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture2D*                             CallFunc_GetPlantIcon_ReturnValue;                 // 0x0098(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00A4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_51C5[0x3];                                     // 0x00A5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x00AC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x00AD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_51C6[0x2];                                     // 0x00AE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00B4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_51C7[0x3];                                     // 0x00B5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable;                              // 0x00BC(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x00CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Array_Get_Item;                           // 0x00D0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_51C8[0x7];                                     // 0x00E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Array_Get_Item_1;                         // 0x00E8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x00F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EGardenBuffEffectType                         Temp_byte_Variable;                                // 0x00FC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x00FD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_51C9[0x2];                                     // 0x00FE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Array_Get_Item_2;                         // 0x0100(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Array_Get_Item_3;                         // 0x0110(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Array_Get_Item_4;                         // 0x0120(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Array_Get_Item_5;                         // 0x0130(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Array_Get_Item_6;                         // 0x0140(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Array_Get_Item_7;                         // 0x0150(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 K2Node_Select_Default;                             // 0x0160(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0170(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_51CA[0x7];                                     // 0x0171(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUserWidget*                            CallFunc_GetUserWidgetObject_ReturnValue;          // 0x0178(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UWBP_GardenPlate_C*                     K2Node_DynamicCast_AsWBP_Garden_Plate;             // 0x0180(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0188(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CanBuffPlateBeVisible_PlateVisible;       // 0x0189(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x018A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_51CB[0x5];                                     // 0x018B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Conv_BoolToDouble_ReturnValue;            // 0x0190(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_Select_Default_1;                           // 0x0198(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x01A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GardenTile_C_Update_Buff_Visuals) == 0x000008, "Wrong alignment on BP_GardenTile_C_Update_Buff_Visuals");
static_assert(sizeof(BP_GardenTile_C_Update_Buff_Visuals) == 0x0001B0, "Wrong size on BP_GardenTile_C_Update_Buff_Visuals");
static_assert(offsetof(BP_GardenTile_C_Update_Buff_Visuals, HasFertilizer) == 0x000000, "Member 'BP_GardenTile_C_Update_Buff_Visuals::HasFertilizer' has a wrong offset!");
static_assert(offsetof(BP_GardenTile_C_Update_Buff_Visuals, HasBuff) == 0x000001, "Member 'BP_GardenTile_C_Update_Buff_Visuals::HasBuff' has a wrong offset!");
static_assert(offsetof(BP_GardenTile_C_Update_Buff_Visuals, GardenBuffInfo) == 0x000008, "Member 'BP_GardenTile_C_Update_Buff_Visuals::GardenBuffInfo' has a wrong offset!");
static_assert(offsetof(BP_GardenTile_C_Update_Buff_Visuals, CallFunc_K2_TryGetGardenTileBuffInfo_fertilizerInfo) == 0x000048, "Member 'BP_GardenTile_C_Update_Buff_Visuals::CallFunc_K2_TryGetGardenTileBuffInfo_fertilizerInfo' has a wrong offset!");
static_assert(offsetof(BP_GardenTile_C_Update_Buff_Visuals, CallFunc_K2_TryGetGardenTileBuffInfo_ReturnValue) == 0x000088, "Member 'BP_GardenTile_C_Update_Buff_Visuals::CallFunc_K2_TryGetGardenTileBuffInfo_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GardenTile_C_Update_Buff_Visuals, Temp_int_Loop_Counter_Variable) == 0x00008C, "Member 'BP_GardenTile_C_Update_Buff_Visuals::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_GardenTile_C_Update_Buff_Visuals, CallFunc_Add_IntInt_ReturnValue) == 0x000090, "Member 'BP_GardenTile_C_Update_Buff_Visuals::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GardenTile_C_Update_Buff_Visuals, CallFunc_HasValidGardenData_ReturnValue) == 0x000094, "Member 'BP_GardenTile_C_Update_Buff_Visuals::CallFunc_HasValidGardenData_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GardenTile_C_Update_Buff_Visuals, CallFunc_IsPlantMaster_ReturnValue) == 0x000095, "Member 'BP_GardenTile_C_Update_Buff_Visuals::CallFunc_IsPlantMaster_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GardenTile_C_Update_Buff_Visuals, CallFunc_GetPlantIcon_ReturnValue) == 0x000098, "Member 'BP_GardenTile_C_Update_Buff_Visuals::CallFunc_GetPlantIcon_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GardenTile_C_Update_Buff_Visuals, Temp_int_Loop_Counter_Variable_1) == 0x0000A0, "Member 'BP_GardenTile_C_Update_Buff_Visuals::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_GardenTile_C_Update_Buff_Visuals, CallFunc_IsValid_ReturnValue) == 0x0000A4, "Member 'BP_GardenTile_C_Update_Buff_Visuals::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GardenTile_C_Update_Buff_Visuals, CallFunc_Add_IntInt_ReturnValue_1) == 0x0000A8, "Member 'BP_GardenTile_C_Update_Buff_Visuals::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GardenTile_C_Update_Buff_Visuals, CallFunc_BooleanAND_ReturnValue) == 0x0000AC, "Member 'BP_GardenTile_C_Update_Buff_Visuals::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GardenTile_C_Update_Buff_Visuals, CallFunc_IsValid_ReturnValue_1) == 0x0000AD, "Member 'BP_GardenTile_C_Update_Buff_Visuals::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GardenTile_C_Update_Buff_Visuals, CallFunc_Array_Length_ReturnValue) == 0x0000B0, "Member 'BP_GardenTile_C_Update_Buff_Visuals::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GardenTile_C_Update_Buff_Visuals, CallFunc_Less_IntInt_ReturnValue) == 0x0000B4, "Member 'BP_GardenTile_C_Update_Buff_Visuals::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GardenTile_C_Update_Buff_Visuals, Temp_int_Array_Index_Variable) == 0x0000B8, "Member 'BP_GardenTile_C_Update_Buff_Visuals::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_GardenTile_C_Update_Buff_Visuals, Temp_struct_Variable) == 0x0000BC, "Member 'BP_GardenTile_C_Update_Buff_Visuals::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(BP_GardenTile_C_Update_Buff_Visuals, Temp_int_Array_Index_Variable_1) == 0x0000CC, "Member 'BP_GardenTile_C_Update_Buff_Visuals::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_GardenTile_C_Update_Buff_Visuals, CallFunc_Array_Get_Item) == 0x0000D0, "Member 'BP_GardenTile_C_Update_Buff_Visuals::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_GardenTile_C_Update_Buff_Visuals, Temp_bool_Variable) == 0x0000E0, "Member 'BP_GardenTile_C_Update_Buff_Visuals::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_GardenTile_C_Update_Buff_Visuals, CallFunc_Array_Get_Item_1) == 0x0000E8, "Member 'BP_GardenTile_C_Update_Buff_Visuals::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_GardenTile_C_Update_Buff_Visuals, CallFunc_Array_Length_ReturnValue_1) == 0x0000F8, "Member 'BP_GardenTile_C_Update_Buff_Visuals::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GardenTile_C_Update_Buff_Visuals, Temp_byte_Variable) == 0x0000FC, "Member 'BP_GardenTile_C_Update_Buff_Visuals::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_GardenTile_C_Update_Buff_Visuals, CallFunc_Less_IntInt_ReturnValue_1) == 0x0000FD, "Member 'BP_GardenTile_C_Update_Buff_Visuals::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GardenTile_C_Update_Buff_Visuals, CallFunc_Array_Get_Item_2) == 0x000100, "Member 'BP_GardenTile_C_Update_Buff_Visuals::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(BP_GardenTile_C_Update_Buff_Visuals, CallFunc_Array_Get_Item_3) == 0x000110, "Member 'BP_GardenTile_C_Update_Buff_Visuals::CallFunc_Array_Get_Item_3' has a wrong offset!");
static_assert(offsetof(BP_GardenTile_C_Update_Buff_Visuals, CallFunc_Array_Get_Item_4) == 0x000120, "Member 'BP_GardenTile_C_Update_Buff_Visuals::CallFunc_Array_Get_Item_4' has a wrong offset!");
static_assert(offsetof(BP_GardenTile_C_Update_Buff_Visuals, CallFunc_Array_Get_Item_5) == 0x000130, "Member 'BP_GardenTile_C_Update_Buff_Visuals::CallFunc_Array_Get_Item_5' has a wrong offset!");
static_assert(offsetof(BP_GardenTile_C_Update_Buff_Visuals, CallFunc_Array_Get_Item_6) == 0x000140, "Member 'BP_GardenTile_C_Update_Buff_Visuals::CallFunc_Array_Get_Item_6' has a wrong offset!");
static_assert(offsetof(BP_GardenTile_C_Update_Buff_Visuals, CallFunc_Array_Get_Item_7) == 0x000150, "Member 'BP_GardenTile_C_Update_Buff_Visuals::CallFunc_Array_Get_Item_7' has a wrong offset!");
static_assert(offsetof(BP_GardenTile_C_Update_Buff_Visuals, K2Node_Select_Default) == 0x000160, "Member 'BP_GardenTile_C_Update_Buff_Visuals::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_GardenTile_C_Update_Buff_Visuals, CallFunc_IsValid_ReturnValue_2) == 0x000170, "Member 'BP_GardenTile_C_Update_Buff_Visuals::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_GardenTile_C_Update_Buff_Visuals, CallFunc_GetUserWidgetObject_ReturnValue) == 0x000178, "Member 'BP_GardenTile_C_Update_Buff_Visuals::CallFunc_GetUserWidgetObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GardenTile_C_Update_Buff_Visuals, K2Node_DynamicCast_AsWBP_Garden_Plate) == 0x000180, "Member 'BP_GardenTile_C_Update_Buff_Visuals::K2Node_DynamicCast_AsWBP_Garden_Plate' has a wrong offset!");
static_assert(offsetof(BP_GardenTile_C_Update_Buff_Visuals, K2Node_DynamicCast_bSuccess) == 0x000188, "Member 'BP_GardenTile_C_Update_Buff_Visuals::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_GardenTile_C_Update_Buff_Visuals, CallFunc_CanBuffPlateBeVisible_PlateVisible) == 0x000189, "Member 'BP_GardenTile_C_Update_Buff_Visuals::CallFunc_CanBuffPlateBeVisible_PlateVisible' has a wrong offset!");
static_assert(offsetof(BP_GardenTile_C_Update_Buff_Visuals, CallFunc_BooleanAND_ReturnValue_1) == 0x00018A, "Member 'BP_GardenTile_C_Update_Buff_Visuals::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GardenTile_C_Update_Buff_Visuals, CallFunc_Conv_BoolToDouble_ReturnValue) == 0x000190, "Member 'BP_GardenTile_C_Update_Buff_Visuals::CallFunc_Conv_BoolToDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GardenTile_C_Update_Buff_Visuals, K2Node_Select_Default_1) == 0x000198, "Member 'BP_GardenTile_C_Update_Buff_Visuals::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(BP_GardenTile_C_Update_Buff_Visuals, CallFunc_IsValid_ReturnValue_3) == 0x0001A8, "Member 'BP_GardenTile_C_Update_Buff_Visuals::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");

// Function BP_GardenTile.BP_GardenTile_C.UpdateHealthBarPosition
// 0x0150 (0x0150 - 0x0000)
struct BP_GardenTile_C_UpdateHealthBarPosition final
{
public:
	struct FVector2D                              CallFunc_GetPlantCenter_OutLocation;               // 0x0000(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0010(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_X;                          // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y;                          // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X;                            // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0050(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetWorldLocation_SweepHitResult;       // 0x0068(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(BP_GardenTile_C_UpdateHealthBarPosition) == 0x000008, "Wrong alignment on BP_GardenTile_C_UpdateHealthBarPosition");
static_assert(sizeof(BP_GardenTile_C_UpdateHealthBarPosition) == 0x000150, "Wrong size on BP_GardenTile_C_UpdateHealthBarPosition");
static_assert(offsetof(BP_GardenTile_C_UpdateHealthBarPosition, CallFunc_GetPlantCenter_OutLocation) == 0x000000, "Member 'BP_GardenTile_C_UpdateHealthBarPosition::CallFunc_GetPlantCenter_OutLocation' has a wrong offset!");
static_assert(offsetof(BP_GardenTile_C_UpdateHealthBarPosition, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000010, "Member 'BP_GardenTile_C_UpdateHealthBarPosition::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GardenTile_C_UpdateHealthBarPosition, CallFunc_BreakVector2D_X) == 0x000028, "Member 'BP_GardenTile_C_UpdateHealthBarPosition::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(BP_GardenTile_C_UpdateHealthBarPosition, CallFunc_BreakVector2D_Y) == 0x000030, "Member 'BP_GardenTile_C_UpdateHealthBarPosition::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(BP_GardenTile_C_UpdateHealthBarPosition, CallFunc_BreakVector_X) == 0x000038, "Member 'BP_GardenTile_C_UpdateHealthBarPosition::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BP_GardenTile_C_UpdateHealthBarPosition, CallFunc_BreakVector_Y) == 0x000040, "Member 'BP_GardenTile_C_UpdateHealthBarPosition::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BP_GardenTile_C_UpdateHealthBarPosition, CallFunc_BreakVector_Z) == 0x000048, "Member 'BP_GardenTile_C_UpdateHealthBarPosition::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BP_GardenTile_C_UpdateHealthBarPosition, CallFunc_MakeVector_ReturnValue) == 0x000050, "Member 'BP_GardenTile_C_UpdateHealthBarPosition::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GardenTile_C_UpdateHealthBarPosition, CallFunc_K2_SetWorldLocation_SweepHitResult) == 0x000068, "Member 'BP_GardenTile_C_UpdateHealthBarPosition::CallFunc_K2_SetWorldLocation_SweepHitResult' has a wrong offset!");

// Function BP_GardenTile.BP_GardenTile_C.UpdateMaterialInstanceValue
// 0x0030 (0x0030 - 0x0000)
struct BP_GardenTile_C_UpdateMaterialInstanceValue final
{
public:
	class UStaticMeshComponent*                   TargetMesh;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FName                                   ParamName;                                         // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        ParamValue;                                        // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        PreviousValueByRef;                                // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         DebugTracker_IGNORE;                               // 0x0020(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_DoubleDouble_ReturnValue;      // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_51CC[0x3];                                     // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_SetScalarParameterValueOnMaterials_ParameterValue_ImplicitCast; // 0x0028(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GardenTile_C_UpdateMaterialInstanceValue) == 0x000008, "Wrong alignment on BP_GardenTile_C_UpdateMaterialInstanceValue");
static_assert(sizeof(BP_GardenTile_C_UpdateMaterialInstanceValue) == 0x000030, "Wrong size on BP_GardenTile_C_UpdateMaterialInstanceValue");
static_assert(offsetof(BP_GardenTile_C_UpdateMaterialInstanceValue, TargetMesh) == 0x000000, "Member 'BP_GardenTile_C_UpdateMaterialInstanceValue::TargetMesh' has a wrong offset!");
static_assert(offsetof(BP_GardenTile_C_UpdateMaterialInstanceValue, ParamName) == 0x000008, "Member 'BP_GardenTile_C_UpdateMaterialInstanceValue::ParamName' has a wrong offset!");
static_assert(offsetof(BP_GardenTile_C_UpdateMaterialInstanceValue, ParamValue) == 0x000010, "Member 'BP_GardenTile_C_UpdateMaterialInstanceValue::ParamValue' has a wrong offset!");
static_assert(offsetof(BP_GardenTile_C_UpdateMaterialInstanceValue, PreviousValueByRef) == 0x000018, "Member 'BP_GardenTile_C_UpdateMaterialInstanceValue::PreviousValueByRef' has a wrong offset!");
static_assert(offsetof(BP_GardenTile_C_UpdateMaterialInstanceValue, DebugTracker_IGNORE) == 0x000020, "Member 'BP_GardenTile_C_UpdateMaterialInstanceValue::DebugTracker_IGNORE' has a wrong offset!");
static_assert(offsetof(BP_GardenTile_C_UpdateMaterialInstanceValue, CallFunc_EqualEqual_DoubleDouble_ReturnValue) == 0x000024, "Member 'BP_GardenTile_C_UpdateMaterialInstanceValue::CallFunc_EqualEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GardenTile_C_UpdateMaterialInstanceValue, CallFunc_SetScalarParameterValueOnMaterials_ParameterValue_ImplicitCast) == 0x000028, "Member 'BP_GardenTile_C_UpdateMaterialInstanceValue::CallFunc_SetScalarParameterValueOnMaterials_ParameterValue_ImplicitCast' has a wrong offset!");

// Function BP_GardenTile.BP_GardenTile_C.UpdatePlateVisibility
// 0x0003 (0x0003 - 0x0000)
struct BP_GardenTile_C_UpdatePlateVisibility final
{
public:
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GardenTile_C_UpdatePlateVisibility) == 0x000001, "Wrong alignment on BP_GardenTile_C_UpdatePlateVisibility");
static_assert(sizeof(BP_GardenTile_C_UpdatePlateVisibility) == 0x000003, "Wrong size on BP_GardenTile_C_UpdatePlateVisibility");
static_assert(offsetof(BP_GardenTile_C_UpdatePlateVisibility, CallFunc_BooleanOR_ReturnValue) == 0x000000, "Member 'BP_GardenTile_C_UpdatePlateVisibility::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GardenTile_C_UpdatePlateVisibility, CallFunc_IsValid_ReturnValue) == 0x000001, "Member 'BP_GardenTile_C_UpdatePlateVisibility::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GardenTile_C_UpdatePlateVisibility, CallFunc_BooleanOR_ReturnValue_1) == 0x000002, "Member 'BP_GardenTile_C_UpdatePlateVisibility::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");

// Function BP_GardenTile.BP_GardenTile_C.UpdateSoilVisualsForPlant
// 0x0290 (0x0290 - 0x0000)
struct BP_GardenTile_C_UpdateSoilVisualsForPlant final
{
public:
	bool                                          Animated;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_51CD[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UStaticMesh*                            Temp_object_Variable;                              // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UStaticMesh*                            Temp_object_Variable_1;                            // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UStaticMesh*                            Temp_object_Variable_2;                            // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UStaticMesh*                            Temp_object_Variable_3;                            // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable;                                // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0030(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0048(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_1;                              // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_51CE[0x7];                                     // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue_1;    // 0x0070(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_Select_Default;                             // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_1;           // 0x0090(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetWorldLocation_SweepHitResult;       // 0x00A8(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_SetStaticMesh_ReturnValue;                // 0x0190(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPlanted_ReturnValue;                    // 0x0191(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_51CF[0x2];                                     // 0x0192(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetPlantSize_ReturnValue;                 // 0x0194(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetWorldLocation_SweepHitResult_1;     // 0x0198(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class UStaticMesh*                            K2Node_Select_Default_1;                           // 0x0280(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0288(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SetStaticMesh_ReturnValue_1;              // 0x0289(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPlantMaster_ReturnValue;                // 0x028A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GardenTile_C_UpdateSoilVisualsForPlant) == 0x000008, "Wrong alignment on BP_GardenTile_C_UpdateSoilVisualsForPlant");
static_assert(sizeof(BP_GardenTile_C_UpdateSoilVisualsForPlant) == 0x000290, "Wrong size on BP_GardenTile_C_UpdateSoilVisualsForPlant");
static_assert(offsetof(BP_GardenTile_C_UpdateSoilVisualsForPlant, Animated) == 0x000000, "Member 'BP_GardenTile_C_UpdateSoilVisualsForPlant::Animated' has a wrong offset!");
static_assert(offsetof(BP_GardenTile_C_UpdateSoilVisualsForPlant, Temp_int_Variable) == 0x000004, "Member 'BP_GardenTile_C_UpdateSoilVisualsForPlant::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_GardenTile_C_UpdateSoilVisualsForPlant, Temp_object_Variable) == 0x000008, "Member 'BP_GardenTile_C_UpdateSoilVisualsForPlant::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(BP_GardenTile_C_UpdateSoilVisualsForPlant, Temp_object_Variable_1) == 0x000010, "Member 'BP_GardenTile_C_UpdateSoilVisualsForPlant::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_GardenTile_C_UpdateSoilVisualsForPlant, Temp_object_Variable_2) == 0x000018, "Member 'BP_GardenTile_C_UpdateSoilVisualsForPlant::Temp_object_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_GardenTile_C_UpdateSoilVisualsForPlant, Temp_object_Variable_3) == 0x000020, "Member 'BP_GardenTile_C_UpdateSoilVisualsForPlant::Temp_object_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_GardenTile_C_UpdateSoilVisualsForPlant, Temp_real_Variable) == 0x000028, "Member 'BP_GardenTile_C_UpdateSoilVisualsForPlant::Temp_real_Variable' has a wrong offset!");
static_assert(offsetof(BP_GardenTile_C_UpdateSoilVisualsForPlant, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000030, "Member 'BP_GardenTile_C_UpdateSoilVisualsForPlant::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GardenTile_C_UpdateSoilVisualsForPlant, CallFunc_Add_VectorVector_ReturnValue) == 0x000048, "Member 'BP_GardenTile_C_UpdateSoilVisualsForPlant::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GardenTile_C_UpdateSoilVisualsForPlant, Temp_real_Variable_1) == 0x000060, "Member 'BP_GardenTile_C_UpdateSoilVisualsForPlant::Temp_real_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_GardenTile_C_UpdateSoilVisualsForPlant, Temp_bool_Variable) == 0x000068, "Member 'BP_GardenTile_C_UpdateSoilVisualsForPlant::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_GardenTile_C_UpdateSoilVisualsForPlant, CallFunc_K2_GetComponentLocation_ReturnValue_1) == 0x000070, "Member 'BP_GardenTile_C_UpdateSoilVisualsForPlant::CallFunc_K2_GetComponentLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GardenTile_C_UpdateSoilVisualsForPlant, K2Node_Select_Default) == 0x000088, "Member 'BP_GardenTile_C_UpdateSoilVisualsForPlant::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_GardenTile_C_UpdateSoilVisualsForPlant, CallFunc_Add_VectorVector_ReturnValue_1) == 0x000090, "Member 'BP_GardenTile_C_UpdateSoilVisualsForPlant::CallFunc_Add_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GardenTile_C_UpdateSoilVisualsForPlant, CallFunc_K2_SetWorldLocation_SweepHitResult) == 0x0000A8, "Member 'BP_GardenTile_C_UpdateSoilVisualsForPlant::CallFunc_K2_SetWorldLocation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_GardenTile_C_UpdateSoilVisualsForPlant, CallFunc_SetStaticMesh_ReturnValue) == 0x000190, "Member 'BP_GardenTile_C_UpdateSoilVisualsForPlant::CallFunc_SetStaticMesh_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GardenTile_C_UpdateSoilVisualsForPlant, CallFunc_IsPlanted_ReturnValue) == 0x000191, "Member 'BP_GardenTile_C_UpdateSoilVisualsForPlant::CallFunc_IsPlanted_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GardenTile_C_UpdateSoilVisualsForPlant, CallFunc_GetPlantSize_ReturnValue) == 0x000194, "Member 'BP_GardenTile_C_UpdateSoilVisualsForPlant::CallFunc_GetPlantSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GardenTile_C_UpdateSoilVisualsForPlant, CallFunc_K2_SetWorldLocation_SweepHitResult_1) == 0x000198, "Member 'BP_GardenTile_C_UpdateSoilVisualsForPlant::CallFunc_K2_SetWorldLocation_SweepHitResult_1' has a wrong offset!");
static_assert(offsetof(BP_GardenTile_C_UpdateSoilVisualsForPlant, K2Node_Select_Default_1) == 0x000280, "Member 'BP_GardenTile_C_UpdateSoilVisualsForPlant::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(BP_GardenTile_C_UpdateSoilVisualsForPlant, CallFunc_Greater_IntInt_ReturnValue) == 0x000288, "Member 'BP_GardenTile_C_UpdateSoilVisualsForPlant::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GardenTile_C_UpdateSoilVisualsForPlant, CallFunc_SetStaticMesh_ReturnValue_1) == 0x000289, "Member 'BP_GardenTile_C_UpdateSoilVisualsForPlant::CallFunc_SetStaticMesh_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GardenTile_C_UpdateSoilVisualsForPlant, CallFunc_IsPlantMaster_ReturnValue) == 0x00028A, "Member 'BP_GardenTile_C_UpdateSoilVisualsForPlant::CallFunc_IsPlantMaster_ReturnValue' has a wrong offset!");

// Function BP_GardenTile.BP_GardenTile_C.UpdateWaterDropletUI
// 0x0030 (0x0030 - 0x0000)
struct BP_GardenTile_C_UpdateWaterDropletUI final
{
public:
	float                                         CallFunc_GetWateredPercent_ReturnValue;            // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPlantMaster_ReturnValue;                // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasValidGardenData_ReturnValue;           // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsReadyToHarvest_ReturnValue;             // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_51D0[0x6];                                     // 0x000A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UUserWidget*                            CallFunc_GetUserWidgetObject_ReturnValue;          // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UWBP_GardenPlate_C*                     K2Node_DynamicCast_AsWBP_Garden_Plate;             // 0x0018(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Set_Water_Droplet_Progress_IsVisible;     // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_51D1[0x5];                                     // 0x0023(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Set_Water_Droplet_Progress_Progress_ImplicitCast; // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GardenTile_C_UpdateWaterDropletUI) == 0x000008, "Wrong alignment on BP_GardenTile_C_UpdateWaterDropletUI");
static_assert(sizeof(BP_GardenTile_C_UpdateWaterDropletUI) == 0x000030, "Wrong size on BP_GardenTile_C_UpdateWaterDropletUI");
static_assert(offsetof(BP_GardenTile_C_UpdateWaterDropletUI, CallFunc_GetWateredPercent_ReturnValue) == 0x000000, "Member 'BP_GardenTile_C_UpdateWaterDropletUI::CallFunc_GetWateredPercent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GardenTile_C_UpdateWaterDropletUI, CallFunc_IsValid_ReturnValue) == 0x000004, "Member 'BP_GardenTile_C_UpdateWaterDropletUI::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GardenTile_C_UpdateWaterDropletUI, CallFunc_IsPlantMaster_ReturnValue) == 0x000005, "Member 'BP_GardenTile_C_UpdateWaterDropletUI::CallFunc_IsPlantMaster_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GardenTile_C_UpdateWaterDropletUI, CallFunc_HasValidGardenData_ReturnValue) == 0x000006, "Member 'BP_GardenTile_C_UpdateWaterDropletUI::CallFunc_HasValidGardenData_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GardenTile_C_UpdateWaterDropletUI, CallFunc_IsReadyToHarvest_ReturnValue) == 0x000007, "Member 'BP_GardenTile_C_UpdateWaterDropletUI::CallFunc_IsReadyToHarvest_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GardenTile_C_UpdateWaterDropletUI, CallFunc_Not_PreBool_ReturnValue) == 0x000008, "Member 'BP_GardenTile_C_UpdateWaterDropletUI::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GardenTile_C_UpdateWaterDropletUI, CallFunc_BooleanAND_ReturnValue) == 0x000009, "Member 'BP_GardenTile_C_UpdateWaterDropletUI::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GardenTile_C_UpdateWaterDropletUI, CallFunc_GetUserWidgetObject_ReturnValue) == 0x000010, "Member 'BP_GardenTile_C_UpdateWaterDropletUI::CallFunc_GetUserWidgetObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GardenTile_C_UpdateWaterDropletUI, K2Node_DynamicCast_AsWBP_Garden_Plate) == 0x000018, "Member 'BP_GardenTile_C_UpdateWaterDropletUI::K2Node_DynamicCast_AsWBP_Garden_Plate' has a wrong offset!");
static_assert(offsetof(BP_GardenTile_C_UpdateWaterDropletUI, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'BP_GardenTile_C_UpdateWaterDropletUI::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_GardenTile_C_UpdateWaterDropletUI, CallFunc_Set_Water_Droplet_Progress_IsVisible) == 0x000021, "Member 'BP_GardenTile_C_UpdateWaterDropletUI::CallFunc_Set_Water_Droplet_Progress_IsVisible' has a wrong offset!");
static_assert(offsetof(BP_GardenTile_C_UpdateWaterDropletUI, CallFunc_IsValid_ReturnValue_1) == 0x000022, "Member 'BP_GardenTile_C_UpdateWaterDropletUI::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GardenTile_C_UpdateWaterDropletUI, CallFunc_Set_Water_Droplet_Progress_Progress_ImplicitCast) == 0x000028, "Member 'BP_GardenTile_C_UpdateWaterDropletUI::CallFunc_Set_Water_Droplet_Progress_Progress_ImplicitCast' has a wrong offset!");

// Function BP_GardenTile.BP_GardenTile_C.UserConstructionScript
// 0x0448 (0x0448 - 0x0000)
struct BP_GardenTile_C_UserConstructionScript final
{
public:
	double                                        CallFunc_RandomFloatInRange_ReturnValue;           // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_RandomFloatInRange_ReturnValue_1;         // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x0010(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue_1;                // 0x0028(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FHitResult                             CallFunc_K2_SetRelativeRotation_SweepHitResult;    // 0x0040(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	double                                        CallFunc_RandomFloatInRange_ReturnValue_2;         // 0x0128(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue_2;                // 0x0130(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FHitResult                             CallFunc_K2_SetRelativeRotation_SweepHitResult_1;  // 0x0148(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FHitResult                             CallFunc_K2_SetRelativeRotation_SweepHitResult_2;  // 0x0230(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	int32                                         CallFunc_RandomIntegerInRange_ReturnValue;         // 0x0318(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_51D2[0x4];                                     // 0x031C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Conv_IntToDouble_ReturnValue;             // 0x0320(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0328(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0330(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue_3;                // 0x0338(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FHitResult                             CallFunc_K2_SetRelativeRotation_SweepHitResult_3;  // 0x0350(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	float                                         CallFunc_MakeRotator_Yaw_ImplicitCast;             // 0x0438(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeRotator_Yaw_ImplicitCast_1;           // 0x043C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeRotator_Yaw_ImplicitCast_2;           // 0x0440(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeRotator_Yaw_ImplicitCast_3;           // 0x0444(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GardenTile_C_UserConstructionScript) == 0x000008, "Wrong alignment on BP_GardenTile_C_UserConstructionScript");
static_assert(sizeof(BP_GardenTile_C_UserConstructionScript) == 0x000448, "Wrong size on BP_GardenTile_C_UserConstructionScript");
static_assert(offsetof(BP_GardenTile_C_UserConstructionScript, CallFunc_RandomFloatInRange_ReturnValue) == 0x000000, "Member 'BP_GardenTile_C_UserConstructionScript::CallFunc_RandomFloatInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GardenTile_C_UserConstructionScript, CallFunc_RandomFloatInRange_ReturnValue_1) == 0x000008, "Member 'BP_GardenTile_C_UserConstructionScript::CallFunc_RandomFloatInRange_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GardenTile_C_UserConstructionScript, CallFunc_MakeRotator_ReturnValue) == 0x000010, "Member 'BP_GardenTile_C_UserConstructionScript::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GardenTile_C_UserConstructionScript, CallFunc_MakeRotator_ReturnValue_1) == 0x000028, "Member 'BP_GardenTile_C_UserConstructionScript::CallFunc_MakeRotator_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GardenTile_C_UserConstructionScript, CallFunc_K2_SetRelativeRotation_SweepHitResult) == 0x000040, "Member 'BP_GardenTile_C_UserConstructionScript::CallFunc_K2_SetRelativeRotation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_GardenTile_C_UserConstructionScript, CallFunc_RandomFloatInRange_ReturnValue_2) == 0x000128, "Member 'BP_GardenTile_C_UserConstructionScript::CallFunc_RandomFloatInRange_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_GardenTile_C_UserConstructionScript, CallFunc_MakeRotator_ReturnValue_2) == 0x000130, "Member 'BP_GardenTile_C_UserConstructionScript::CallFunc_MakeRotator_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_GardenTile_C_UserConstructionScript, CallFunc_K2_SetRelativeRotation_SweepHitResult_1) == 0x000148, "Member 'BP_GardenTile_C_UserConstructionScript::CallFunc_K2_SetRelativeRotation_SweepHitResult_1' has a wrong offset!");
static_assert(offsetof(BP_GardenTile_C_UserConstructionScript, CallFunc_K2_SetRelativeRotation_SweepHitResult_2) == 0x000230, "Member 'BP_GardenTile_C_UserConstructionScript::CallFunc_K2_SetRelativeRotation_SweepHitResult_2' has a wrong offset!");
static_assert(offsetof(BP_GardenTile_C_UserConstructionScript, CallFunc_RandomIntegerInRange_ReturnValue) == 0x000318, "Member 'BP_GardenTile_C_UserConstructionScript::CallFunc_RandomIntegerInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GardenTile_C_UserConstructionScript, CallFunc_Conv_IntToDouble_ReturnValue) == 0x000320, "Member 'BP_GardenTile_C_UserConstructionScript::CallFunc_Conv_IntToDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GardenTile_C_UserConstructionScript, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000328, "Member 'BP_GardenTile_C_UserConstructionScript::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GardenTile_C_UserConstructionScript, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000330, "Member 'BP_GardenTile_C_UserConstructionScript::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GardenTile_C_UserConstructionScript, CallFunc_MakeRotator_ReturnValue_3) == 0x000338, "Member 'BP_GardenTile_C_UserConstructionScript::CallFunc_MakeRotator_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_GardenTile_C_UserConstructionScript, CallFunc_K2_SetRelativeRotation_SweepHitResult_3) == 0x000350, "Member 'BP_GardenTile_C_UserConstructionScript::CallFunc_K2_SetRelativeRotation_SweepHitResult_3' has a wrong offset!");
static_assert(offsetof(BP_GardenTile_C_UserConstructionScript, CallFunc_MakeRotator_Yaw_ImplicitCast) == 0x000438, "Member 'BP_GardenTile_C_UserConstructionScript::CallFunc_MakeRotator_Yaw_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_GardenTile_C_UserConstructionScript, CallFunc_MakeRotator_Yaw_ImplicitCast_1) == 0x00043C, "Member 'BP_GardenTile_C_UserConstructionScript::CallFunc_MakeRotator_Yaw_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(BP_GardenTile_C_UserConstructionScript, CallFunc_MakeRotator_Yaw_ImplicitCast_2) == 0x000440, "Member 'BP_GardenTile_C_UserConstructionScript::CallFunc_MakeRotator_Yaw_ImplicitCast_2' has a wrong offset!");
static_assert(offsetof(BP_GardenTile_C_UserConstructionScript, CallFunc_MakeRotator_Yaw_ImplicitCast_3) == 0x000444, "Member 'BP_GardenTile_C_UserConstructionScript::CallFunc_MakeRotator_Yaw_ImplicitCast_3' has a wrong offset!");

// Function BP_GardenTile.BP_GardenTile_C.WaterPlot
// 0x0038 (0x0038 - 0x0000)
struct BP_GardenTile_C_WaterPlot final
{
public:
	int32                                         WaterAmount;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_51D3[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AValeriaPlayerController*               Vpc;                                               // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)
	class AValeriaCharacter*                      VC;                                                // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)
	EValeriaFuncResult                            CallFunc_GetValeriaPlayerController_OutResult;     // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_51D4[0x7];                                     // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AValeriaPlayerController*               CallFunc_GetValeriaPlayerController_ReturnValue;   // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AValeriaCharacter*                      CallFunc_GetValeriaCharacter_ReturnValue;          // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GardenTile_C_WaterPlot) == 0x000008, "Wrong alignment on BP_GardenTile_C_WaterPlot");
static_assert(sizeof(BP_GardenTile_C_WaterPlot) == 0x000038, "Wrong size on BP_GardenTile_C_WaterPlot");
static_assert(offsetof(BP_GardenTile_C_WaterPlot, WaterAmount) == 0x000000, "Member 'BP_GardenTile_C_WaterPlot::WaterAmount' has a wrong offset!");
static_assert(offsetof(BP_GardenTile_C_WaterPlot, Vpc) == 0x000008, "Member 'BP_GardenTile_C_WaterPlot::Vpc' has a wrong offset!");
static_assert(offsetof(BP_GardenTile_C_WaterPlot, VC) == 0x000010, "Member 'BP_GardenTile_C_WaterPlot::VC' has a wrong offset!");
static_assert(offsetof(BP_GardenTile_C_WaterPlot, CallFunc_GetValeriaPlayerController_OutResult) == 0x000018, "Member 'BP_GardenTile_C_WaterPlot::CallFunc_GetValeriaPlayerController_OutResult' has a wrong offset!");
static_assert(offsetof(BP_GardenTile_C_WaterPlot, CallFunc_GetValeriaPlayerController_ReturnValue) == 0x000020, "Member 'BP_GardenTile_C_WaterPlot::CallFunc_GetValeriaPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GardenTile_C_WaterPlot, CallFunc_GetValeriaCharacter_ReturnValue) == 0x000028, "Member 'BP_GardenTile_C_WaterPlot::CallFunc_GetValeriaCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GardenTile_C_WaterPlot, K2Node_SwitchEnum_CmpSuccess) == 0x000030, "Member 'BP_GardenTile_C_WaterPlot::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

}

