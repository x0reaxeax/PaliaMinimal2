#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Comp_AkHomeRoom

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "AkAudio_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass Comp_AkHomeRoom.Comp_AkHomeRoom_C
// 0x0020 (0x0310 - 0x02F0)
class UComp_AkHomeRoom_C final : public UAkRoomComponent
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02F0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UPrimitiveComponent*                    PrimitiveParent;                                   // 0x02F8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	double                                        InsideRTPCValue;                                   // 0x0300(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Interpolation_Time_Ms;                             // 0x0308(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_Comp_AkHomeRoom(int32 EntryPoint, bool CallFunc_IsValid_ReturnValue, class USceneComponent* CallFunc_GetAttachParent_ReturnValue, class UPrimitiveComponent* K2Node_DynamicCast_AsPrimitive_Component, bool K2Node_DynamicCast_bSuccess, TDelegate<void(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, struct FHitResult& SweepResult)> K2Node_CreateDelegate_OutputDelegate, class UPrimitiveComponent* K2Node_CustomEvent_OverlappedComponent_1, class AActor* K2Node_CustomEvent_OtherActor_1, class UPrimitiveComponent* K2Node_CustomEvent_OtherComp_1, int32 K2Node_CustomEvent_OtherBodyIndex_1, bool K2Node_CustomEvent_bFromSweep, struct FHitResult& K2Node_CustomEvent_SweepResult, class AValeriaCharacter* K2Node_DynamicCast_AsValeria_Character, bool K2Node_DynamicCast_bSuccess_1, class UComp_Actor_Audio_Data_C* CallFunc_GetComponentByClass_ReturnValue, bool CallFunc_IsLocallyControlled_ReturnValue, bool CallFunc_IsValid_ReturnValue_1, TDelegate<void(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex)> K2Node_CreateDelegate_OutputDelegate_1, class UPrimitiveComponent* K2Node_CustomEvent_OverlappedComponent, class AActor* K2Node_CustomEvent_OtherActor, class UPrimitiveComponent* K2Node_CustomEvent_OtherComp, int32 K2Node_CustomEvent_OtherBodyIndex, class AValeriaCharacter* K2Node_DynamicCast_AsValeria_Character_1, bool K2Node_DynamicCast_bSuccess_2, class UComp_Actor_Audio_Data_C* CallFunc_GetComponentByClass_ReturnValue_1, bool CallFunc_IsLocallyControlled_ReturnValue_1, bool CallFunc_IsValid_ReturnValue_2);
	void HandleBeginOverlap(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, struct FHitResult& SweepResult);
	void HandleEndOverlap(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex);
	void ReceiveBeginPlay();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"Comp_AkHomeRoom_C">();
	}
	static class UComp_AkHomeRoom_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UComp_AkHomeRoom_C>();
	}
};
static_assert(alignof(UComp_AkHomeRoom_C) == 0x000010, "Wrong alignment on UComp_AkHomeRoom_C");
static_assert(sizeof(UComp_AkHomeRoom_C) == 0x000310, "Wrong size on UComp_AkHomeRoom_C");
static_assert(offsetof(UComp_AkHomeRoom_C, UberGraphFrame) == 0x0002F0, "Member 'UComp_AkHomeRoom_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UComp_AkHomeRoom_C, PrimitiveParent) == 0x0002F8, "Member 'UComp_AkHomeRoom_C::PrimitiveParent' has a wrong offset!");
static_assert(offsetof(UComp_AkHomeRoom_C, InsideRTPCValue) == 0x000300, "Member 'UComp_AkHomeRoom_C::InsideRTPCValue' has a wrong offset!");
static_assert(offsetof(UComp_AkHomeRoom_C, Interpolation_Time_Ms) == 0x000308, "Member 'UComp_AkHomeRoom_C::Interpolation_Time_Ms' has a wrong offset!");

}

