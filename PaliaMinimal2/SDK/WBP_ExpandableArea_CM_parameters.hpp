#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_ExpandableArea_CM

#include "Basic.hpp"

#include "UMG_structs.hpp"
#include "SlateCore_structs.hpp"
#include "CommonInput_structs.hpp"


namespace SDK::Params
{

// Function WBP_ExpandableArea_CM.WBP_ExpandableArea_CM_C.BndEvt__WBP_ExpandableArea_CM_WBP_Template_Button_CM_K2Node_ComponentBoundEvent_2_CommonButtonBaseClicked__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct WBP_ExpandableArea_CM_C_BndEvt__WBP_ExpandableArea_CM_WBP_Template_Button_CM_K2Node_ComponentBoundEvent_2_CommonButtonBaseClicked__DelegateSignature final
{
public:
	class UCommonButtonBase*                      Button;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ExpandableArea_CM_C_BndEvt__WBP_ExpandableArea_CM_WBP_Template_Button_CM_K2Node_ComponentBoundEvent_2_CommonButtonBaseClicked__DelegateSignature) == 0x000008, "Wrong alignment on WBP_ExpandableArea_CM_C_BndEvt__WBP_ExpandableArea_CM_WBP_Template_Button_CM_K2Node_ComponentBoundEvent_2_CommonButtonBaseClicked__DelegateSignature");
static_assert(sizeof(WBP_ExpandableArea_CM_C_BndEvt__WBP_ExpandableArea_CM_WBP_Template_Button_CM_K2Node_ComponentBoundEvent_2_CommonButtonBaseClicked__DelegateSignature) == 0x000008, "Wrong size on WBP_ExpandableArea_CM_C_BndEvt__WBP_ExpandableArea_CM_WBP_Template_Button_CM_K2Node_ComponentBoundEvent_2_CommonButtonBaseClicked__DelegateSignature");
static_assert(offsetof(WBP_ExpandableArea_CM_C_BndEvt__WBP_ExpandableArea_CM_WBP_Template_Button_CM_K2Node_ComponentBoundEvent_2_CommonButtonBaseClicked__DelegateSignature, Button) == 0x000000, "Member 'WBP_ExpandableArea_CM_C_BndEvt__WBP_ExpandableArea_CM_WBP_Template_Button_CM_K2Node_ComponentBoundEvent_2_CommonButtonBaseClicked__DelegateSignature::Button' has a wrong offset!");

// Function WBP_ExpandableArea_CM.WBP_ExpandableArea_CM_C.BndEvt__WBP_ExpandableArea_CM_WBP_Template_Button_CM_K2Node_ComponentBoundEvent_3_CommonButtonBaseClicked__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct WBP_ExpandableArea_CM_C_BndEvt__WBP_ExpandableArea_CM_WBP_Template_Button_CM_K2Node_ComponentBoundEvent_3_CommonButtonBaseClicked__DelegateSignature final
{
public:
	class UCommonButtonBase*                      Button;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ExpandableArea_CM_C_BndEvt__WBP_ExpandableArea_CM_WBP_Template_Button_CM_K2Node_ComponentBoundEvent_3_CommonButtonBaseClicked__DelegateSignature) == 0x000008, "Wrong alignment on WBP_ExpandableArea_CM_C_BndEvt__WBP_ExpandableArea_CM_WBP_Template_Button_CM_K2Node_ComponentBoundEvent_3_CommonButtonBaseClicked__DelegateSignature");
static_assert(sizeof(WBP_ExpandableArea_CM_C_BndEvt__WBP_ExpandableArea_CM_WBP_Template_Button_CM_K2Node_ComponentBoundEvent_3_CommonButtonBaseClicked__DelegateSignature) == 0x000008, "Wrong size on WBP_ExpandableArea_CM_C_BndEvt__WBP_ExpandableArea_CM_WBP_Template_Button_CM_K2Node_ComponentBoundEvent_3_CommonButtonBaseClicked__DelegateSignature");
static_assert(offsetof(WBP_ExpandableArea_CM_C_BndEvt__WBP_ExpandableArea_CM_WBP_Template_Button_CM_K2Node_ComponentBoundEvent_3_CommonButtonBaseClicked__DelegateSignature, Button) == 0x000000, "Member 'WBP_ExpandableArea_CM_C_BndEvt__WBP_ExpandableArea_CM_WBP_Template_Button_CM_K2Node_ComponentBoundEvent_3_CommonButtonBaseClicked__DelegateSignature::Button' has a wrong offset!");

// Function WBP_ExpandableArea_CM.WBP_ExpandableArea_CM_C.BndEvt__WBP_ExpandableArea_CM_WBP_Template_Button_CM_K2Node_ComponentBoundEvent_4_CommonButtonBaseClicked__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct WBP_ExpandableArea_CM_C_BndEvt__WBP_ExpandableArea_CM_WBP_Template_Button_CM_K2Node_ComponentBoundEvent_4_CommonButtonBaseClicked__DelegateSignature final
{
public:
	class UCommonButtonBase*                      Button;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ExpandableArea_CM_C_BndEvt__WBP_ExpandableArea_CM_WBP_Template_Button_CM_K2Node_ComponentBoundEvent_4_CommonButtonBaseClicked__DelegateSignature) == 0x000008, "Wrong alignment on WBP_ExpandableArea_CM_C_BndEvt__WBP_ExpandableArea_CM_WBP_Template_Button_CM_K2Node_ComponentBoundEvent_4_CommonButtonBaseClicked__DelegateSignature");
static_assert(sizeof(WBP_ExpandableArea_CM_C_BndEvt__WBP_ExpandableArea_CM_WBP_Template_Button_CM_K2Node_ComponentBoundEvent_4_CommonButtonBaseClicked__DelegateSignature) == 0x000008, "Wrong size on WBP_ExpandableArea_CM_C_BndEvt__WBP_ExpandableArea_CM_WBP_Template_Button_CM_K2Node_ComponentBoundEvent_4_CommonButtonBaseClicked__DelegateSignature");
static_assert(offsetof(WBP_ExpandableArea_CM_C_BndEvt__WBP_ExpandableArea_CM_WBP_Template_Button_CM_K2Node_ComponentBoundEvent_4_CommonButtonBaseClicked__DelegateSignature, Button) == 0x000000, "Member 'WBP_ExpandableArea_CM_C_BndEvt__WBP_ExpandableArea_CM_WBP_Template_Button_CM_K2Node_ComponentBoundEvent_4_CommonButtonBaseClicked__DelegateSignature::Button' has a wrong offset!");

// Function WBP_ExpandableArea_CM.WBP_ExpandableArea_CM_C.DisplayExpandedContent
// 0x0018 (0x0018 - 0x0000)
struct WBP_ExpandableArea_CM_C_DisplayExpandedContent final
{
public:
	bool                                          Param_Expanded;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          SuppressEventCalls;                                // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_42D7[0x6];                                     // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 HeaderButtonStyle;                                 // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              BodyVisibility;                                    // 0x0010(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ExpandableArea_CM_C_DisplayExpandedContent) == 0x000008, "Wrong alignment on WBP_ExpandableArea_CM_C_DisplayExpandedContent");
static_assert(sizeof(WBP_ExpandableArea_CM_C_DisplayExpandedContent) == 0x000018, "Wrong size on WBP_ExpandableArea_CM_C_DisplayExpandedContent");
static_assert(offsetof(WBP_ExpandableArea_CM_C_DisplayExpandedContent, Param_Expanded) == 0x000000, "Member 'WBP_ExpandableArea_CM_C_DisplayExpandedContent::Param_Expanded' has a wrong offset!");
static_assert(offsetof(WBP_ExpandableArea_CM_C_DisplayExpandedContent, SuppressEventCalls) == 0x000001, "Member 'WBP_ExpandableArea_CM_C_DisplayExpandedContent::SuppressEventCalls' has a wrong offset!");
static_assert(offsetof(WBP_ExpandableArea_CM_C_DisplayExpandedContent, HeaderButtonStyle) == 0x000008, "Member 'WBP_ExpandableArea_CM_C_DisplayExpandedContent::HeaderButtonStyle' has a wrong offset!");
static_assert(offsetof(WBP_ExpandableArea_CM_C_DisplayExpandedContent, BodyVisibility) == 0x000010, "Member 'WBP_ExpandableArea_CM_C_DisplayExpandedContent::BodyVisibility' has a wrong offset!");
static_assert(offsetof(WBP_ExpandableArea_CM_C_DisplayExpandedContent, CallFunc_Not_PreBool_ReturnValue) == 0x000011, "Member 'WBP_ExpandableArea_CM_C_DisplayExpandedContent::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function WBP_ExpandableArea_CM.WBP_ExpandableArea_CM_C.ExecuteUbergraph_WBP_ExpandableArea_CM
// 0x0088 (0x0088 - 0x0000)
struct WBP_ExpandableArea_CM_C_ExecuteUbergraph_WBP_ExpandableArea_CM final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateSizeRule                                Temp_byte_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_42D8[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UCommonInputSubsystem*                  CallFunc_GetLocalPlayerSubsystem_ReturnValue;      // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FText                                   K2Node_CustomEvent_HeaderText;                     // 0x0010(0x0018)()
	ESlateSizeRule                                Temp_byte_Variable_1;                              // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x002A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateSizeRule                                K2Node_Select_Default;                             // 0x002B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_42D9[0x4];                                     // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPanelSlot*                             CallFunc_GetContentSlot_ReturnValue;               // 0x0030(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FSlateChildSize                        K2Node_MakeStruct_SlateChildSize;                  // 0x0038(0x0008)(NoDestructor)
	class UVerticalBoxSlot*                       K2Node_DynamicCast_AsVertical_Box_Slot;            // 0x0040(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_42DA[0x7];                                     // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UCommonButtonBase*                      K2Node_ComponentBoundEvent_Button_2;               // 0x0050(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UCommonButtonBase*                      K2Node_ComponentBoundEvent_Button_1;               // 0x0058(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_AkEventGlobal_ReturnValue;                // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(ECommonInputType bNewInputType)> K2Node_CreateDelegate_OutputDelegate;              // 0x0064(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	ECommonInputType                              K2Node_CustomEvent_bNewInputType;                  // 0x0074(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAnyUserFocus_ReturnValue;              // 0x0075(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_42DB[0x2];                                     // 0x0076(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFocusEvent                            K2Node_Event_InFocusEvent;                         // 0x0078(0x0008)(NoDestructor)
	class UCommonButtonBase*                      K2Node_ComponentBoundEvent_Button;                 // 0x0080(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ExpandableArea_CM_C_ExecuteUbergraph_WBP_ExpandableArea_CM) == 0x000008, "Wrong alignment on WBP_ExpandableArea_CM_C_ExecuteUbergraph_WBP_ExpandableArea_CM");
static_assert(sizeof(WBP_ExpandableArea_CM_C_ExecuteUbergraph_WBP_ExpandableArea_CM) == 0x000088, "Wrong size on WBP_ExpandableArea_CM_C_ExecuteUbergraph_WBP_ExpandableArea_CM");
static_assert(offsetof(WBP_ExpandableArea_CM_C_ExecuteUbergraph_WBP_ExpandableArea_CM, EntryPoint) == 0x000000, "Member 'WBP_ExpandableArea_CM_C_ExecuteUbergraph_WBP_ExpandableArea_CM::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_ExpandableArea_CM_C_ExecuteUbergraph_WBP_ExpandableArea_CM, Temp_byte_Variable) == 0x000004, "Member 'WBP_ExpandableArea_CM_C_ExecuteUbergraph_WBP_ExpandableArea_CM::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_ExpandableArea_CM_C_ExecuteUbergraph_WBP_ExpandableArea_CM, CallFunc_GetLocalPlayerSubsystem_ReturnValue) == 0x000008, "Member 'WBP_ExpandableArea_CM_C_ExecuteUbergraph_WBP_ExpandableArea_CM::CallFunc_GetLocalPlayerSubsystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ExpandableArea_CM_C_ExecuteUbergraph_WBP_ExpandableArea_CM, K2Node_CustomEvent_HeaderText) == 0x000010, "Member 'WBP_ExpandableArea_CM_C_ExecuteUbergraph_WBP_ExpandableArea_CM::K2Node_CustomEvent_HeaderText' has a wrong offset!");
static_assert(offsetof(WBP_ExpandableArea_CM_C_ExecuteUbergraph_WBP_ExpandableArea_CM, Temp_byte_Variable_1) == 0x000028, "Member 'WBP_ExpandableArea_CM_C_ExecuteUbergraph_WBP_ExpandableArea_CM::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_ExpandableArea_CM_C_ExecuteUbergraph_WBP_ExpandableArea_CM, K2Node_Event_IsDesignTime) == 0x000029, "Member 'WBP_ExpandableArea_CM_C_ExecuteUbergraph_WBP_ExpandableArea_CM::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(WBP_ExpandableArea_CM_C_ExecuteUbergraph_WBP_ExpandableArea_CM, Temp_bool_Variable) == 0x00002A, "Member 'WBP_ExpandableArea_CM_C_ExecuteUbergraph_WBP_ExpandableArea_CM::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_ExpandableArea_CM_C_ExecuteUbergraph_WBP_ExpandableArea_CM, K2Node_Select_Default) == 0x00002B, "Member 'WBP_ExpandableArea_CM_C_ExecuteUbergraph_WBP_ExpandableArea_CM::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_ExpandableArea_CM_C_ExecuteUbergraph_WBP_ExpandableArea_CM, CallFunc_GetContentSlot_ReturnValue) == 0x000030, "Member 'WBP_ExpandableArea_CM_C_ExecuteUbergraph_WBP_ExpandableArea_CM::CallFunc_GetContentSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ExpandableArea_CM_C_ExecuteUbergraph_WBP_ExpandableArea_CM, K2Node_MakeStruct_SlateChildSize) == 0x000038, "Member 'WBP_ExpandableArea_CM_C_ExecuteUbergraph_WBP_ExpandableArea_CM::K2Node_MakeStruct_SlateChildSize' has a wrong offset!");
static_assert(offsetof(WBP_ExpandableArea_CM_C_ExecuteUbergraph_WBP_ExpandableArea_CM, K2Node_DynamicCast_AsVertical_Box_Slot) == 0x000040, "Member 'WBP_ExpandableArea_CM_C_ExecuteUbergraph_WBP_ExpandableArea_CM::K2Node_DynamicCast_AsVertical_Box_Slot' has a wrong offset!");
static_assert(offsetof(WBP_ExpandableArea_CM_C_ExecuteUbergraph_WBP_ExpandableArea_CM, K2Node_DynamicCast_bSuccess) == 0x000048, "Member 'WBP_ExpandableArea_CM_C_ExecuteUbergraph_WBP_ExpandableArea_CM::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_ExpandableArea_CM_C_ExecuteUbergraph_WBP_ExpandableArea_CM, K2Node_ComponentBoundEvent_Button_2) == 0x000050, "Member 'WBP_ExpandableArea_CM_C_ExecuteUbergraph_WBP_ExpandableArea_CM::K2Node_ComponentBoundEvent_Button_2' has a wrong offset!");
static_assert(offsetof(WBP_ExpandableArea_CM_C_ExecuteUbergraph_WBP_ExpandableArea_CM, K2Node_ComponentBoundEvent_Button_1) == 0x000058, "Member 'WBP_ExpandableArea_CM_C_ExecuteUbergraph_WBP_ExpandableArea_CM::K2Node_ComponentBoundEvent_Button_1' has a wrong offset!");
static_assert(offsetof(WBP_ExpandableArea_CM_C_ExecuteUbergraph_WBP_ExpandableArea_CM, CallFunc_AkEventGlobal_ReturnValue) == 0x000060, "Member 'WBP_ExpandableArea_CM_C_ExecuteUbergraph_WBP_ExpandableArea_CM::CallFunc_AkEventGlobal_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ExpandableArea_CM_C_ExecuteUbergraph_WBP_ExpandableArea_CM, K2Node_CreateDelegate_OutputDelegate) == 0x000064, "Member 'WBP_ExpandableArea_CM_C_ExecuteUbergraph_WBP_ExpandableArea_CM::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WBP_ExpandableArea_CM_C_ExecuteUbergraph_WBP_ExpandableArea_CM, K2Node_CustomEvent_bNewInputType) == 0x000074, "Member 'WBP_ExpandableArea_CM_C_ExecuteUbergraph_WBP_ExpandableArea_CM::K2Node_CustomEvent_bNewInputType' has a wrong offset!");
static_assert(offsetof(WBP_ExpandableArea_CM_C_ExecuteUbergraph_WBP_ExpandableArea_CM, CallFunc_HasAnyUserFocus_ReturnValue) == 0x000075, "Member 'WBP_ExpandableArea_CM_C_ExecuteUbergraph_WBP_ExpandableArea_CM::CallFunc_HasAnyUserFocus_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ExpandableArea_CM_C_ExecuteUbergraph_WBP_ExpandableArea_CM, K2Node_Event_InFocusEvent) == 0x000078, "Member 'WBP_ExpandableArea_CM_C_ExecuteUbergraph_WBP_ExpandableArea_CM::K2Node_Event_InFocusEvent' has a wrong offset!");
static_assert(offsetof(WBP_ExpandableArea_CM_C_ExecuteUbergraph_WBP_ExpandableArea_CM, K2Node_ComponentBoundEvent_Button) == 0x000080, "Member 'WBP_ExpandableArea_CM_C_ExecuteUbergraph_WBP_ExpandableArea_CM::K2Node_ComponentBoundEvent_Button' has a wrong offset!");

// Function WBP_ExpandableArea_CM.WBP_ExpandableArea_CM_C.HandleOnInputMethodChanged
// 0x0001 (0x0001 - 0x0000)
struct WBP_ExpandableArea_CM_C_HandleOnInputMethodChanged final
{
public:
	ECommonInputType                              bNewInputType;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ExpandableArea_CM_C_HandleOnInputMethodChanged) == 0x000001, "Wrong alignment on WBP_ExpandableArea_CM_C_HandleOnInputMethodChanged");
static_assert(sizeof(WBP_ExpandableArea_CM_C_HandleOnInputMethodChanged) == 0x000001, "Wrong size on WBP_ExpandableArea_CM_C_HandleOnInputMethodChanged");
static_assert(offsetof(WBP_ExpandableArea_CM_C_HandleOnInputMethodChanged, bNewInputType) == 0x000000, "Member 'WBP_ExpandableArea_CM_C_HandleOnInputMethodChanged::bNewInputType' has a wrong offset!");

// Function WBP_ExpandableArea_CM.WBP_ExpandableArea_CM_C.OnAreaExpanded__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct WBP_ExpandableArea_CM_C_OnAreaExpanded__DelegateSignature final
{
public:
	class UWBP_ExpandableArea_CM_C*               ExpandableAreaWidget;                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          Param_Expanded;                                    // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ExpandableArea_CM_C_OnAreaExpanded__DelegateSignature) == 0x000008, "Wrong alignment on WBP_ExpandableArea_CM_C_OnAreaExpanded__DelegateSignature");
static_assert(sizeof(WBP_ExpandableArea_CM_C_OnAreaExpanded__DelegateSignature) == 0x000010, "Wrong size on WBP_ExpandableArea_CM_C_OnAreaExpanded__DelegateSignature");
static_assert(offsetof(WBP_ExpandableArea_CM_C_OnAreaExpanded__DelegateSignature, ExpandableAreaWidget) == 0x000000, "Member 'WBP_ExpandableArea_CM_C_OnAreaExpanded__DelegateSignature::ExpandableAreaWidget' has a wrong offset!");
static_assert(offsetof(WBP_ExpandableArea_CM_C_OnAreaExpanded__DelegateSignature, Param_Expanded) == 0x000008, "Member 'WBP_ExpandableArea_CM_C_OnAreaExpanded__DelegateSignature::Param_Expanded' has a wrong offset!");

// Function WBP_ExpandableArea_CM.WBP_ExpandableArea_CM_C.OnExpandableAreaButtonHovered__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct WBP_ExpandableArea_CM_C_OnExpandableAreaButtonHovered__DelegateSignature final
{
public:
	class UWBP_ExpandableArea_CM_C*               ExpandableArea;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ExpandableArea_CM_C_OnExpandableAreaButtonHovered__DelegateSignature) == 0x000008, "Wrong alignment on WBP_ExpandableArea_CM_C_OnExpandableAreaButtonHovered__DelegateSignature");
static_assert(sizeof(WBP_ExpandableArea_CM_C_OnExpandableAreaButtonHovered__DelegateSignature) == 0x000008, "Wrong size on WBP_ExpandableArea_CM_C_OnExpandableAreaButtonHovered__DelegateSignature");
static_assert(offsetof(WBP_ExpandableArea_CM_C_OnExpandableAreaButtonHovered__DelegateSignature, ExpandableArea) == 0x000000, "Member 'WBP_ExpandableArea_CM_C_OnExpandableAreaButtonHovered__DelegateSignature::ExpandableArea' has a wrong offset!");

// Function WBP_ExpandableArea_CM.WBP_ExpandableArea_CM_C.OnExpandableAreaFocused__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct WBP_ExpandableArea_CM_C_OnExpandableAreaFocused__DelegateSignature final
{
public:
	class UWBP_ExpandableArea_CM_C*               Expandable_Area;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ExpandableArea_CM_C_OnExpandableAreaFocused__DelegateSignature) == 0x000008, "Wrong alignment on WBP_ExpandableArea_CM_C_OnExpandableAreaFocused__DelegateSignature");
static_assert(sizeof(WBP_ExpandableArea_CM_C_OnExpandableAreaFocused__DelegateSignature) == 0x000008, "Wrong size on WBP_ExpandableArea_CM_C_OnExpandableAreaFocused__DelegateSignature");
static_assert(offsetof(WBP_ExpandableArea_CM_C_OnExpandableAreaFocused__DelegateSignature, Expandable_Area) == 0x000000, "Member 'WBP_ExpandableArea_CM_C_OnExpandableAreaFocused__DelegateSignature::Expandable_Area' has a wrong offset!");

// Function WBP_ExpandableArea_CM.WBP_ExpandableArea_CM_C.OnFocusLost
// 0x0008 (0x0008 - 0x0000)
struct WBP_ExpandableArea_CM_C_OnFocusLost final
{
public:
	struct FFocusEvent                            InFocusEvent;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
};
static_assert(alignof(WBP_ExpandableArea_CM_C_OnFocusLost) == 0x000004, "Wrong alignment on WBP_ExpandableArea_CM_C_OnFocusLost");
static_assert(sizeof(WBP_ExpandableArea_CM_C_OnFocusLost) == 0x000008, "Wrong size on WBP_ExpandableArea_CM_C_OnFocusLost");
static_assert(offsetof(WBP_ExpandableArea_CM_C_OnFocusLost, InFocusEvent) == 0x000000, "Member 'WBP_ExpandableArea_CM_C_OnFocusLost::InFocusEvent' has a wrong offset!");

// Function WBP_ExpandableArea_CM.WBP_ExpandableArea_CM_C.OnFocusReceived
// 0x01B0 (0x01B0 - 0x0000)
struct WBP_ExpandableArea_CM_C_OnFocusReceived final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FFocusEvent                            InFocusEvent;                                      // 0x0038(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	struct FEventReply                            ReturnValue;                                       // 0x0040(0x00B8)(Parm, OutParm, ReturnParm)
	struct FEventReply                            CallFunc_Handled_ReturnValue;                      // 0x00F8(0x00B8)()
};
static_assert(alignof(WBP_ExpandableArea_CM_C_OnFocusReceived) == 0x000008, "Wrong alignment on WBP_ExpandableArea_CM_C_OnFocusReceived");
static_assert(sizeof(WBP_ExpandableArea_CM_C_OnFocusReceived) == 0x0001B0, "Wrong size on WBP_ExpandableArea_CM_C_OnFocusReceived");
static_assert(offsetof(WBP_ExpandableArea_CM_C_OnFocusReceived, MyGeometry) == 0x000000, "Member 'WBP_ExpandableArea_CM_C_OnFocusReceived::MyGeometry' has a wrong offset!");
static_assert(offsetof(WBP_ExpandableArea_CM_C_OnFocusReceived, InFocusEvent) == 0x000038, "Member 'WBP_ExpandableArea_CM_C_OnFocusReceived::InFocusEvent' has a wrong offset!");
static_assert(offsetof(WBP_ExpandableArea_CM_C_OnFocusReceived, ReturnValue) == 0x000040, "Member 'WBP_ExpandableArea_CM_C_OnFocusReceived::ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ExpandableArea_CM_C_OnFocusReceived, CallFunc_Handled_ReturnValue) == 0x0000F8, "Member 'WBP_ExpandableArea_CM_C_OnFocusReceived::CallFunc_Handled_ReturnValue' has a wrong offset!");

// Function WBP_ExpandableArea_CM.WBP_ExpandableArea_CM_C.OnWidgetFocused__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct WBP_ExpandableArea_CM_C_OnWidgetFocused__DelegateSignature final
{
public:
	struct FFocusEvent                            InFocusEvent;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
};
static_assert(alignof(WBP_ExpandableArea_CM_C_OnWidgetFocused__DelegateSignature) == 0x000004, "Wrong alignment on WBP_ExpandableArea_CM_C_OnWidgetFocused__DelegateSignature");
static_assert(sizeof(WBP_ExpandableArea_CM_C_OnWidgetFocused__DelegateSignature) == 0x000008, "Wrong size on WBP_ExpandableArea_CM_C_OnWidgetFocused__DelegateSignature");
static_assert(offsetof(WBP_ExpandableArea_CM_C_OnWidgetFocused__DelegateSignature, InFocusEvent) == 0x000000, "Member 'WBP_ExpandableArea_CM_C_OnWidgetFocused__DelegateSignature::InFocusEvent' has a wrong offset!");

// Function WBP_ExpandableArea_CM.WBP_ExpandableArea_CM_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct WBP_ExpandableArea_CM_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ExpandableArea_CM_C_PreConstruct) == 0x000001, "Wrong alignment on WBP_ExpandableArea_CM_C_PreConstruct");
static_assert(sizeof(WBP_ExpandableArea_CM_C_PreConstruct) == 0x000001, "Wrong size on WBP_ExpandableArea_CM_C_PreConstruct");
static_assert(offsetof(WBP_ExpandableArea_CM_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'WBP_ExpandableArea_CM_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function WBP_ExpandableArea_CM.WBP_ExpandableArea_CM_C.SetExpanded
// 0x0018 (0x0018 - 0x0000)
struct WBP_ExpandableArea_CM_C_SetExpanded final
{
public:
	bool                                          NewExpanded;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          DoCosmeticEffects;                                 // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          SuppressEventCalls;                                // 0x0002(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              CallFunc_GetVisibility_ReturnValue;                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_42DC[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UAkAudioEvent*                          K2Node_Select_Default;                             // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_42DD[0x3];                                     // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_AkEventGlobal_ReturnValue;                // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ExpandableArea_CM_C_SetExpanded) == 0x000008, "Wrong alignment on WBP_ExpandableArea_CM_C_SetExpanded");
static_assert(sizeof(WBP_ExpandableArea_CM_C_SetExpanded) == 0x000018, "Wrong size on WBP_ExpandableArea_CM_C_SetExpanded");
static_assert(offsetof(WBP_ExpandableArea_CM_C_SetExpanded, NewExpanded) == 0x000000, "Member 'WBP_ExpandableArea_CM_C_SetExpanded::NewExpanded' has a wrong offset!");
static_assert(offsetof(WBP_ExpandableArea_CM_C_SetExpanded, DoCosmeticEffects) == 0x000001, "Member 'WBP_ExpandableArea_CM_C_SetExpanded::DoCosmeticEffects' has a wrong offset!");
static_assert(offsetof(WBP_ExpandableArea_CM_C_SetExpanded, SuppressEventCalls) == 0x000002, "Member 'WBP_ExpandableArea_CM_C_SetExpanded::SuppressEventCalls' has a wrong offset!");
static_assert(offsetof(WBP_ExpandableArea_CM_C_SetExpanded, Temp_bool_Variable) == 0x000003, "Member 'WBP_ExpandableArea_CM_C_SetExpanded::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_ExpandableArea_CM_C_SetExpanded, CallFunc_GetVisibility_ReturnValue) == 0x000004, "Member 'WBP_ExpandableArea_CM_C_SetExpanded::CallFunc_GetVisibility_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ExpandableArea_CM_C_SetExpanded, K2Node_Select_Default) == 0x000008, "Member 'WBP_ExpandableArea_CM_C_SetExpanded::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_ExpandableArea_CM_C_SetExpanded, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000010, "Member 'WBP_ExpandableArea_CM_C_SetExpanded::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ExpandableArea_CM_C_SetExpanded, CallFunc_AkEventGlobal_ReturnValue) == 0x000014, "Member 'WBP_ExpandableArea_CM_C_SetExpanded::CallFunc_AkEventGlobal_ReturnValue' has a wrong offset!");

// Function WBP_ExpandableArea_CM.WBP_ExpandableArea_CM_C.SetHeaderText
// 0x0018 (0x0018 - 0x0000)
struct WBP_ExpandableArea_CM_C_SetHeaderText final
{
public:
	class FText                                   Param_HeaderText;                                  // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(WBP_ExpandableArea_CM_C_SetHeaderText) == 0x000008, "Wrong alignment on WBP_ExpandableArea_CM_C_SetHeaderText");
static_assert(sizeof(WBP_ExpandableArea_CM_C_SetHeaderText) == 0x000018, "Wrong size on WBP_ExpandableArea_CM_C_SetHeaderText");
static_assert(offsetof(WBP_ExpandableArea_CM_C_SetHeaderText, Param_HeaderText) == 0x000000, "Member 'WBP_ExpandableArea_CM_C_SetHeaderText::Param_HeaderText' has a wrong offset!");

// Function WBP_ExpandableArea_CM.WBP_ExpandableArea_CM_C.ToggleExpand
// 0x0018 (0x0018 - 0x0000)
struct WBP_ExpandableArea_CM_C_ToggleExpand final
{
public:
	bool                                          Temp_bool_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_42DE[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAkAudioEvent*                          K2Node_Select_Default;                             // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_42DF[0x3];                                     // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_AkEventGlobal_ReturnValue;                // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ExpandableArea_CM_C_ToggleExpand) == 0x000008, "Wrong alignment on WBP_ExpandableArea_CM_C_ToggleExpand");
static_assert(sizeof(WBP_ExpandableArea_CM_C_ToggleExpand) == 0x000018, "Wrong size on WBP_ExpandableArea_CM_C_ToggleExpand");
static_assert(offsetof(WBP_ExpandableArea_CM_C_ToggleExpand, Temp_bool_Variable) == 0x000000, "Member 'WBP_ExpandableArea_CM_C_ToggleExpand::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_ExpandableArea_CM_C_ToggleExpand, K2Node_Select_Default) == 0x000008, "Member 'WBP_ExpandableArea_CM_C_ToggleExpand::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_ExpandableArea_CM_C_ToggleExpand, CallFunc_Not_PreBool_ReturnValue) == 0x000010, "Member 'WBP_ExpandableArea_CM_C_ToggleExpand::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ExpandableArea_CM_C_ToggleExpand, CallFunc_AkEventGlobal_ReturnValue) == 0x000014, "Member 'WBP_ExpandableArea_CM_C_ToggleExpand::CallFunc_AkEventGlobal_ReturnValue' has a wrong offset!");

}

