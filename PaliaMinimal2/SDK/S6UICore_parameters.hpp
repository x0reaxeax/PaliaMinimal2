#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: S6UICore

#include "Basic.hpp"

#include "SlateCore_structs.hpp"
#include "EnhancedInput_structs.hpp"
#include "S6UICore_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "ModelViewViewModel_structs.hpp"
#include "FieldNotification_structs.hpp"


namespace SDK::Params
{

// Function S6UICore.S6UI_AsyncAction_OpenModal.OpenModal
// 0x0038 (0x0038 - 0x0000)
struct S6UI_AsyncAction_OpenModal_OpenModal final
{
public:
	class APlayerController*                      PC;                                                // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftClassPtr<class UClass>                   WidgetClass;                                       // 0x0008(0x0028)(Parm, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class US6UI_AsyncAction_OpenModal*            ReturnValue;                                       // 0x0030(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(S6UI_AsyncAction_OpenModal_OpenModal) == 0x000008, "Wrong alignment on S6UI_AsyncAction_OpenModal_OpenModal");
static_assert(sizeof(S6UI_AsyncAction_OpenModal_OpenModal) == 0x000038, "Wrong size on S6UI_AsyncAction_OpenModal_OpenModal");
static_assert(offsetof(S6UI_AsyncAction_OpenModal_OpenModal, PC) == 0x000000, "Member 'S6UI_AsyncAction_OpenModal_OpenModal::PC' has a wrong offset!");
static_assert(offsetof(S6UI_AsyncAction_OpenModal_OpenModal, WidgetClass) == 0x000008, "Member 'S6UI_AsyncAction_OpenModal_OpenModal::WidgetClass' has a wrong offset!");
static_assert(offsetof(S6UI_AsyncAction_OpenModal_OpenModal, ReturnValue) == 0x000030, "Member 'S6UI_AsyncAction_OpenModal_OpenModal::ReturnValue' has a wrong offset!");

// DelegateFunction S6UICore.S6UI_AsyncAction_OpenModal.OnOpened__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct S6UI_AsyncAction_OpenModal_OnOpened__DelegateSignature final
{
public:
	class US6UI_ModalWidgetBase*                  ModalWidget;                                       // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(S6UI_AsyncAction_OpenModal_OnOpened__DelegateSignature) == 0x000008, "Wrong alignment on S6UI_AsyncAction_OpenModal_OnOpened__DelegateSignature");
static_assert(sizeof(S6UI_AsyncAction_OpenModal_OnOpened__DelegateSignature) == 0x000008, "Wrong size on S6UI_AsyncAction_OpenModal_OnOpened__DelegateSignature");
static_assert(offsetof(S6UI_AsyncAction_OpenModal_OnOpened__DelegateSignature, ModalWidget) == 0x000000, "Member 'S6UI_AsyncAction_OpenModal_OnOpened__DelegateSignature::ModalWidget' has a wrong offset!");

// Function S6UICore.S6UI_ModalWidgetBase.CanClose
// 0x0001 (0x0001 - 0x0000)
struct S6UI_ModalWidgetBase_CanClose final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(S6UI_ModalWidgetBase_CanClose) == 0x000001, "Wrong alignment on S6UI_ModalWidgetBase_CanClose");
static_assert(sizeof(S6UI_ModalWidgetBase_CanClose) == 0x000001, "Wrong size on S6UI_ModalWidgetBase_CanClose");
static_assert(offsetof(S6UI_ModalWidgetBase_CanClose, ReturnValue) == 0x000000, "Member 'S6UI_ModalWidgetBase_CanClose::ReturnValue' has a wrong offset!");

// Function S6UICore.S6UI_ModalWidgetBase.HandleInputAction_UIBack_Triggered
// 0x0030 (0x0030 - 0x0000)
struct S6UI_ModalWidgetBase_HandleInputAction_UIBack_Triggered final
{
public:
	struct FInputActionValue                      ActionValue;                                       // 0x0000(0x0020)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	float                                         ElapsedTime;                                       // 0x0020(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         TriggeredTime;                                     // 0x0024(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	const class UInputAction*                     SourceAction;                                      // 0x0028(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(S6UI_ModalWidgetBase_HandleInputAction_UIBack_Triggered) == 0x000008, "Wrong alignment on S6UI_ModalWidgetBase_HandleInputAction_UIBack_Triggered");
static_assert(sizeof(S6UI_ModalWidgetBase_HandleInputAction_UIBack_Triggered) == 0x000030, "Wrong size on S6UI_ModalWidgetBase_HandleInputAction_UIBack_Triggered");
static_assert(offsetof(S6UI_ModalWidgetBase_HandleInputAction_UIBack_Triggered, ActionValue) == 0x000000, "Member 'S6UI_ModalWidgetBase_HandleInputAction_UIBack_Triggered::ActionValue' has a wrong offset!");
static_assert(offsetof(S6UI_ModalWidgetBase_HandleInputAction_UIBack_Triggered, ElapsedTime) == 0x000020, "Member 'S6UI_ModalWidgetBase_HandleInputAction_UIBack_Triggered::ElapsedTime' has a wrong offset!");
static_assert(offsetof(S6UI_ModalWidgetBase_HandleInputAction_UIBack_Triggered, TriggeredTime) == 0x000024, "Member 'S6UI_ModalWidgetBase_HandleInputAction_UIBack_Triggered::TriggeredTime' has a wrong offset!");
static_assert(offsetof(S6UI_ModalWidgetBase_HandleInputAction_UIBack_Triggered, SourceAction) == 0x000028, "Member 'S6UI_ModalWidgetBase_HandleInputAction_UIBack_Triggered::SourceAction' has a wrong offset!");

// Function S6UICore.S6UI_ModalWidgetBase.HandleStartClosing_BP
// 0x0002 (0x0002 - 0x0000)
struct S6UI_ModalWidgetBase_HandleStartClosing_BP final
{
public:
	bool                                          bPermitLatentClosing;                              // 0x0000(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bOutHasLatentClosingLogic;                         // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(S6UI_ModalWidgetBase_HandleStartClosing_BP) == 0x000001, "Wrong alignment on S6UI_ModalWidgetBase_HandleStartClosing_BP");
static_assert(sizeof(S6UI_ModalWidgetBase_HandleStartClosing_BP) == 0x000002, "Wrong size on S6UI_ModalWidgetBase_HandleStartClosing_BP");
static_assert(offsetof(S6UI_ModalWidgetBase_HandleStartClosing_BP, bPermitLatentClosing) == 0x000000, "Member 'S6UI_ModalWidgetBase_HandleStartClosing_BP::bPermitLatentClosing' has a wrong offset!");
static_assert(offsetof(S6UI_ModalWidgetBase_HandleStartClosing_BP, bOutHasLatentClosingLogic) == 0x000001, "Member 'S6UI_ModalWidgetBase_HandleStartClosing_BP::bOutHasLatentClosingLogic' has a wrong offset!");

// Function S6UICore.S6UI_ModalWidgetBase.HandleStartOpening_BP
// 0x0001 (0x0001 - 0x0000)
struct S6UI_ModalWidgetBase_HandleStartOpening_BP final
{
public:
	bool                                          bOutHasLatentOpeningLogic;                         // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(S6UI_ModalWidgetBase_HandleStartOpening_BP) == 0x000001, "Wrong alignment on S6UI_ModalWidgetBase_HandleStartOpening_BP");
static_assert(sizeof(S6UI_ModalWidgetBase_HandleStartOpening_BP) == 0x000001, "Wrong size on S6UI_ModalWidgetBase_HandleStartOpening_BP");
static_assert(offsetof(S6UI_ModalWidgetBase_HandleStartOpening_BP, bOutHasLatentOpeningLogic) == 0x000000, "Member 'S6UI_ModalWidgetBase_HandleStartOpening_BP::bOutHasLatentOpeningLogic' has a wrong offset!");

// DelegateFunction S6UICore.S6UI_ModalWidgetBase.OnFinishedClosing__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct S6UI_ModalWidgetBase_OnFinishedClosing__DelegateSignature final
{
public:
	class UWidget*                                Widget;                                            // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(S6UI_ModalWidgetBase_OnFinishedClosing__DelegateSignature) == 0x000008, "Wrong alignment on S6UI_ModalWidgetBase_OnFinishedClosing__DelegateSignature");
static_assert(sizeof(S6UI_ModalWidgetBase_OnFinishedClosing__DelegateSignature) == 0x000008, "Wrong size on S6UI_ModalWidgetBase_OnFinishedClosing__DelegateSignature");
static_assert(offsetof(S6UI_ModalWidgetBase_OnFinishedClosing__DelegateSignature, Widget) == 0x000000, "Member 'S6UI_ModalWidgetBase_OnFinishedClosing__DelegateSignature::Widget' has a wrong offset!");

// DelegateFunction S6UICore.S6UI_ModalWidgetBase.OnFinishedOpening__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct S6UI_ModalWidgetBase_OnFinishedOpening__DelegateSignature final
{
public:
	class UWidget*                                Widget;                                            // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(S6UI_ModalWidgetBase_OnFinishedOpening__DelegateSignature) == 0x000008, "Wrong alignment on S6UI_ModalWidgetBase_OnFinishedOpening__DelegateSignature");
static_assert(sizeof(S6UI_ModalWidgetBase_OnFinishedOpening__DelegateSignature) == 0x000008, "Wrong size on S6UI_ModalWidgetBase_OnFinishedOpening__DelegateSignature");
static_assert(offsetof(S6UI_ModalWidgetBase_OnFinishedOpening__DelegateSignature, Widget) == 0x000000, "Member 'S6UI_ModalWidgetBase_OnFinishedOpening__DelegateSignature::Widget' has a wrong offset!");

// DelegateFunction S6UICore.S6UI_ModalWidgetBase.OnStartedClosing__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct S6UI_ModalWidgetBase_OnStartedClosing__DelegateSignature final
{
public:
	class UWidget*                                Widget;                                            // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(S6UI_ModalWidgetBase_OnStartedClosing__DelegateSignature) == 0x000008, "Wrong alignment on S6UI_ModalWidgetBase_OnStartedClosing__DelegateSignature");
static_assert(sizeof(S6UI_ModalWidgetBase_OnStartedClosing__DelegateSignature) == 0x000008, "Wrong size on S6UI_ModalWidgetBase_OnStartedClosing__DelegateSignature");
static_assert(offsetof(S6UI_ModalWidgetBase_OnStartedClosing__DelegateSignature, Widget) == 0x000000, "Member 'S6UI_ModalWidgetBase_OnStartedClosing__DelegateSignature::Widget' has a wrong offset!");

// Function S6UICore.S6UI_ModalWidgetBase.SetWantsCursor
// 0x0001 (0x0001 - 0x0000)
struct S6UI_ModalWidgetBase_SetWantsCursor final
{
public:
	bool                                          bValue;                                            // 0x0000(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(S6UI_ModalWidgetBase_SetWantsCursor) == 0x000001, "Wrong alignment on S6UI_ModalWidgetBase_SetWantsCursor");
static_assert(sizeof(S6UI_ModalWidgetBase_SetWantsCursor) == 0x000001, "Wrong size on S6UI_ModalWidgetBase_SetWantsCursor");
static_assert(offsetof(S6UI_ModalWidgetBase_SetWantsCursor, bValue) == 0x000000, "Member 'S6UI_ModalWidgetBase_SetWantsCursor::bValue' has a wrong offset!");

// Function S6UICore.S6UI_ModalWidgetBase.GetModalWidgetState
// 0x0001 (0x0001 - 0x0000)
struct S6UI_ModalWidgetBase_GetModalWidgetState final
{
public:
	ES6UI_ModalWidgetState                        ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(S6UI_ModalWidgetBase_GetModalWidgetState) == 0x000001, "Wrong alignment on S6UI_ModalWidgetBase_GetModalWidgetState");
static_assert(sizeof(S6UI_ModalWidgetBase_GetModalWidgetState) == 0x000001, "Wrong size on S6UI_ModalWidgetBase_GetModalWidgetState");
static_assert(offsetof(S6UI_ModalWidgetBase_GetModalWidgetState, ReturnValue) == 0x000000, "Member 'S6UI_ModalWidgetBase_GetModalWidgetState::ReturnValue' has a wrong offset!");

// Function S6UICore.S6UI_CustomNavigationGroup.ActiveNavigationGroup
// 0x0008 (0x0008 - 0x0000)
struct S6UI_CustomNavigationGroup_ActiveNavigationGroup final
{
public:
	bool                                          bDelayActive;                                      // 0x0000(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1E6F[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         InAutoSelectNavWidgetID;                           // 0x0004(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(S6UI_CustomNavigationGroup_ActiveNavigationGroup) == 0x000004, "Wrong alignment on S6UI_CustomNavigationGroup_ActiveNavigationGroup");
static_assert(sizeof(S6UI_CustomNavigationGroup_ActiveNavigationGroup) == 0x000008, "Wrong size on S6UI_CustomNavigationGroup_ActiveNavigationGroup");
static_assert(offsetof(S6UI_CustomNavigationGroup_ActiveNavigationGroup, bDelayActive) == 0x000000, "Member 'S6UI_CustomNavigationGroup_ActiveNavigationGroup::bDelayActive' has a wrong offset!");
static_assert(offsetof(S6UI_CustomNavigationGroup_ActiveNavigationGroup, InAutoSelectNavWidgetID) == 0x000004, "Member 'S6UI_CustomNavigationGroup_ActiveNavigationGroup::InAutoSelectNavWidgetID' has a wrong offset!");

// Function S6UICore.S6UI_CustomNavigationGroup.AddNavExplicitData
// 0x0014 (0x0014 - 0x0000)
struct S6UI_CustomNavigationGroup_AddNavExplicitData final
{
public:
	struct FS6UI_NavExplicitData                  InNavExplicitData;                                 // 0x0000(0x0014)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(S6UI_CustomNavigationGroup_AddNavExplicitData) == 0x000004, "Wrong alignment on S6UI_CustomNavigationGroup_AddNavExplicitData");
static_assert(sizeof(S6UI_CustomNavigationGroup_AddNavExplicitData) == 0x000014, "Wrong size on S6UI_CustomNavigationGroup_AddNavExplicitData");
static_assert(offsetof(S6UI_CustomNavigationGroup_AddNavExplicitData, InNavExplicitData) == 0x000000, "Member 'S6UI_CustomNavigationGroup_AddNavExplicitData::InNavExplicitData' has a wrong offset!");

// Function S6UICore.S6UI_CustomNavigationGroup.AddNavigationGroupTransitionData
// 0x0048 (0x0048 - 0x0000)
struct S6UI_CustomNavigationGroup_AddNavigationGroupTransitionData final
{
public:
	struct FS6UI_NavigationGroupTranstionData     InTransitionData;                                  // 0x0000(0x0040)(Parm, ContainsInstancedReference, NativeAccessSpecifierPublic)
	bool                                          bInBidirectional;                                  // 0x0040(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bClearMatchingGroupNavigations;                    // 0x0041(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1E70[0x6];                                     // 0x0042(0x0006)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(S6UI_CustomNavigationGroup_AddNavigationGroupTransitionData) == 0x000008, "Wrong alignment on S6UI_CustomNavigationGroup_AddNavigationGroupTransitionData");
static_assert(sizeof(S6UI_CustomNavigationGroup_AddNavigationGroupTransitionData) == 0x000048, "Wrong size on S6UI_CustomNavigationGroup_AddNavigationGroupTransitionData");
static_assert(offsetof(S6UI_CustomNavigationGroup_AddNavigationGroupTransitionData, InTransitionData) == 0x000000, "Member 'S6UI_CustomNavigationGroup_AddNavigationGroupTransitionData::InTransitionData' has a wrong offset!");
static_assert(offsetof(S6UI_CustomNavigationGroup_AddNavigationGroupTransitionData, bInBidirectional) == 0x000040, "Member 'S6UI_CustomNavigationGroup_AddNavigationGroupTransitionData::bInBidirectional' has a wrong offset!");
static_assert(offsetof(S6UI_CustomNavigationGroup_AddNavigationGroupTransitionData, bClearMatchingGroupNavigations) == 0x000041, "Member 'S6UI_CustomNavigationGroup_AddNavigationGroupTransitionData::bClearMatchingGroupNavigations' has a wrong offset!");

// Function S6UICore.S6UI_CustomNavigationGroup.AddNavWidgets
// 0x0018 (0x0018 - 0x0000)
struct S6UI_CustomNavigationGroup_AddNavWidgets final
{
public:
	TArray<class UWidget*>                        InWidgetArray;                                     // 0x0000(0x0010)(ConstParm, Parm, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	bool                                          bInBuildNavigationImmediately;                     // 0x0010(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1E71[0x7];                                     // 0x0011(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(S6UI_CustomNavigationGroup_AddNavWidgets) == 0x000008, "Wrong alignment on S6UI_CustomNavigationGroup_AddNavWidgets");
static_assert(sizeof(S6UI_CustomNavigationGroup_AddNavWidgets) == 0x000018, "Wrong size on S6UI_CustomNavigationGroup_AddNavWidgets");
static_assert(offsetof(S6UI_CustomNavigationGroup_AddNavWidgets, InWidgetArray) == 0x000000, "Member 'S6UI_CustomNavigationGroup_AddNavWidgets::InWidgetArray' has a wrong offset!");
static_assert(offsetof(S6UI_CustomNavigationGroup_AddNavWidgets, bInBuildNavigationImmediately) == 0x000010, "Member 'S6UI_CustomNavigationGroup_AddNavWidgets::bInBuildNavigationImmediately' has a wrong offset!");

// Function S6UICore.S6UI_CustomNavigationGroup.BuildNavigation
// 0x0001 (0x0001 - 0x0000)
struct S6UI_CustomNavigationGroup_BuildNavigation final
{
public:
	bool                                          bInImmediately;                                    // 0x0000(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(S6UI_CustomNavigationGroup_BuildNavigation) == 0x000001, "Wrong alignment on S6UI_CustomNavigationGroup_BuildNavigation");
static_assert(sizeof(S6UI_CustomNavigationGroup_BuildNavigation) == 0x000001, "Wrong size on S6UI_CustomNavigationGroup_BuildNavigation");
static_assert(offsetof(S6UI_CustomNavigationGroup_BuildNavigation, bInImmediately) == 0x000000, "Member 'S6UI_CustomNavigationGroup_BuildNavigation::bInImmediately' has a wrong offset!");

// Function S6UICore.S6UI_CustomNavigationGroup.ClearNavigationData
// 0x0001 (0x0001 - 0x0000)
struct S6UI_CustomNavigationGroup_ClearNavigationData final
{
public:
	bool                                          bInClearNavWidgets;                                // 0x0000(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(S6UI_CustomNavigationGroup_ClearNavigationData) == 0x000001, "Wrong alignment on S6UI_CustomNavigationGroup_ClearNavigationData");
static_assert(sizeof(S6UI_CustomNavigationGroup_ClearNavigationData) == 0x000001, "Wrong size on S6UI_CustomNavigationGroup_ClearNavigationData");
static_assert(offsetof(S6UI_CustomNavigationGroup_ClearNavigationData, bInClearNavWidgets) == 0x000000, "Member 'S6UI_CustomNavigationGroup_ClearNavigationData::bInClearNavWidgets' has a wrong offset!");

// Function S6UICore.S6UI_CustomNavigationGroup.DelayExcuteNavigationFromParentGroup
// 0x0008 (0x0008 - 0x0000)
struct S6UI_CustomNavigationGroup_DelayExcuteNavigationFromParentGroup final
{
public:
	struct FFocusEvent                            InFocusEvent;                                      // 0x0000(0x0008)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(S6UI_CustomNavigationGroup_DelayExcuteNavigationFromParentGroup) == 0x000004, "Wrong alignment on S6UI_CustomNavigationGroup_DelayExcuteNavigationFromParentGroup");
static_assert(sizeof(S6UI_CustomNavigationGroup_DelayExcuteNavigationFromParentGroup) == 0x000008, "Wrong size on S6UI_CustomNavigationGroup_DelayExcuteNavigationFromParentGroup");
static_assert(offsetof(S6UI_CustomNavigationGroup_DelayExcuteNavigationFromParentGroup, InFocusEvent) == 0x000000, "Member 'S6UI_CustomNavigationGroup_DelayExcuteNavigationFromParentGroup::InFocusEvent' has a wrong offset!");

// Function S6UICore.S6UI_CustomNavigationGroup.EnableAutoEdgeEscape
// 0x0001 (0x0001 - 0x0000)
struct S6UI_CustomNavigationGroup_EnableAutoEdgeEscape final
{
public:
	bool                                          bInAutoEdgeEscape;                                 // 0x0000(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(S6UI_CustomNavigationGroup_EnableAutoEdgeEscape) == 0x000001, "Wrong alignment on S6UI_CustomNavigationGroup_EnableAutoEdgeEscape");
static_assert(sizeof(S6UI_CustomNavigationGroup_EnableAutoEdgeEscape) == 0x000001, "Wrong size on S6UI_CustomNavigationGroup_EnableAutoEdgeEscape");
static_assert(offsetof(S6UI_CustomNavigationGroup_EnableAutoEdgeEscape, bInAutoEdgeEscape) == 0x000000, "Member 'S6UI_CustomNavigationGroup_EnableAutoEdgeEscape::bInAutoEdgeEscape' has a wrong offset!");

// Function S6UICore.S6UI_CustomNavigationGroup.NavigateToTargetWidget
// 0x0008 (0x0008 - 0x0000)
struct S6UI_CustomNavigationGroup_NavigateToTargetWidget final
{
public:
	int32                                         InTargetWidgetIndex;                               // 0x0000(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bDelayActive;                                      // 0x0004(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1E72[0x3];                                     // 0x0005(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(S6UI_CustomNavigationGroup_NavigateToTargetWidget) == 0x000004, "Wrong alignment on S6UI_CustomNavigationGroup_NavigateToTargetWidget");
static_assert(sizeof(S6UI_CustomNavigationGroup_NavigateToTargetWidget) == 0x000008, "Wrong size on S6UI_CustomNavigationGroup_NavigateToTargetWidget");
static_assert(offsetof(S6UI_CustomNavigationGroup_NavigateToTargetWidget, InTargetWidgetIndex) == 0x000000, "Member 'S6UI_CustomNavigationGroup_NavigateToTargetWidget::InTargetWidgetIndex' has a wrong offset!");
static_assert(offsetof(S6UI_CustomNavigationGroup_NavigateToTargetWidget, bDelayActive) == 0x000004, "Member 'S6UI_CustomNavigationGroup_NavigateToTargetWidget::bDelayActive' has a wrong offset!");

// DelegateFunction S6UICore.S6UI_CustomNavigationGroup.OnCustomNavigationGroupInitialized__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct S6UI_CustomNavigationGroup_OnCustomNavigationGroupInitialized__DelegateSignature final
{
public:
	const class US6UI_CustomNavigationGroup*      NavGroup;                                          // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(S6UI_CustomNavigationGroup_OnCustomNavigationGroupInitialized__DelegateSignature) == 0x000008, "Wrong alignment on S6UI_CustomNavigationGroup_OnCustomNavigationGroupInitialized__DelegateSignature");
static_assert(sizeof(S6UI_CustomNavigationGroup_OnCustomNavigationGroupInitialized__DelegateSignature) == 0x000008, "Wrong size on S6UI_CustomNavigationGroup_OnCustomNavigationGroupInitialized__DelegateSignature");
static_assert(offsetof(S6UI_CustomNavigationGroup_OnCustomNavigationGroupInitialized__DelegateSignature, NavGroup) == 0x000000, "Member 'S6UI_CustomNavigationGroup_OnCustomNavigationGroupInitialized__DelegateSignature::NavGroup' has a wrong offset!");

// DelegateFunction S6UICore.S6UI_CustomNavigationGroup.OnCustomNavigationGroupTransitionEvent__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct S6UI_CustomNavigationGroup_OnCustomNavigationGroupTransitionEvent__DelegateSignature final
{
public:
	EUINavigation                                 InNavigationType;                                  // 0x0000(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1E73[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class US6UI_CustomNavigationGroup*            InOriginNavigationGroup;                           // 0x0008(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         InOriginWidgetIndex;                               // 0x0010(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         InTargetWidgetIndex;                               // 0x0014(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1E74[0x7];                                     // 0x0019(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(S6UI_CustomNavigationGroup_OnCustomNavigationGroupTransitionEvent__DelegateSignature) == 0x000008, "Wrong alignment on S6UI_CustomNavigationGroup_OnCustomNavigationGroupTransitionEvent__DelegateSignature");
static_assert(sizeof(S6UI_CustomNavigationGroup_OnCustomNavigationGroupTransitionEvent__DelegateSignature) == 0x000020, "Wrong size on S6UI_CustomNavigationGroup_OnCustomNavigationGroupTransitionEvent__DelegateSignature");
static_assert(offsetof(S6UI_CustomNavigationGroup_OnCustomNavigationGroupTransitionEvent__DelegateSignature, InNavigationType) == 0x000000, "Member 'S6UI_CustomNavigationGroup_OnCustomNavigationGroupTransitionEvent__DelegateSignature::InNavigationType' has a wrong offset!");
static_assert(offsetof(S6UI_CustomNavigationGroup_OnCustomNavigationGroupTransitionEvent__DelegateSignature, InOriginNavigationGroup) == 0x000008, "Member 'S6UI_CustomNavigationGroup_OnCustomNavigationGroupTransitionEvent__DelegateSignature::InOriginNavigationGroup' has a wrong offset!");
static_assert(offsetof(S6UI_CustomNavigationGroup_OnCustomNavigationGroupTransitionEvent__DelegateSignature, InOriginWidgetIndex) == 0x000010, "Member 'S6UI_CustomNavigationGroup_OnCustomNavigationGroupTransitionEvent__DelegateSignature::InOriginWidgetIndex' has a wrong offset!");
static_assert(offsetof(S6UI_CustomNavigationGroup_OnCustomNavigationGroupTransitionEvent__DelegateSignature, InTargetWidgetIndex) == 0x000014, "Member 'S6UI_CustomNavigationGroup_OnCustomNavigationGroupTransitionEvent__DelegateSignature::InTargetWidgetIndex' has a wrong offset!");
static_assert(offsetof(S6UI_CustomNavigationGroup_OnCustomNavigationGroupTransitionEvent__DelegateSignature, ReturnValue) == 0x000018, "Member 'S6UI_CustomNavigationGroup_OnCustomNavigationGroupTransitionEvent__DelegateSignature::ReturnValue' has a wrong offset!");

// DelegateFunction S6UICore.S6UI_CustomNavigationGroup.OnGroupEnableChanged__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct S6UI_CustomNavigationGroup_OnGroupEnableChanged__DelegateSignature final
{
public:
	const class US6UI_CustomNavigationGroup*      InNavGroup;                                        // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          InbIsEnabled;                                      // 0x0008(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1E75[0x7];                                     // 0x0009(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(S6UI_CustomNavigationGroup_OnGroupEnableChanged__DelegateSignature) == 0x000008, "Wrong alignment on S6UI_CustomNavigationGroup_OnGroupEnableChanged__DelegateSignature");
static_assert(sizeof(S6UI_CustomNavigationGroup_OnGroupEnableChanged__DelegateSignature) == 0x000010, "Wrong size on S6UI_CustomNavigationGroup_OnGroupEnableChanged__DelegateSignature");
static_assert(offsetof(S6UI_CustomNavigationGroup_OnGroupEnableChanged__DelegateSignature, InNavGroup) == 0x000000, "Member 'S6UI_CustomNavigationGroup_OnGroupEnableChanged__DelegateSignature::InNavGroup' has a wrong offset!");
static_assert(offsetof(S6UI_CustomNavigationGroup_OnGroupEnableChanged__DelegateSignature, InbIsEnabled) == 0x000008, "Member 'S6UI_CustomNavigationGroup_OnGroupEnableChanged__DelegateSignature::InbIsEnabled' has a wrong offset!");

// DelegateFunction S6UICore.S6UI_CustomNavigationGroup.OnIsWidgetValiedToNavigate__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct S6UI_CustomNavigationGroup_OnIsWidgetValiedToNavigate__DelegateSignature final
{
public:
	const class UObject*                          NavObject;                                         // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1E76[0x7];                                     // 0x0009(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(S6UI_CustomNavigationGroup_OnIsWidgetValiedToNavigate__DelegateSignature) == 0x000008, "Wrong alignment on S6UI_CustomNavigationGroup_OnIsWidgetValiedToNavigate__DelegateSignature");
static_assert(sizeof(S6UI_CustomNavigationGroup_OnIsWidgetValiedToNavigate__DelegateSignature) == 0x000010, "Wrong size on S6UI_CustomNavigationGroup_OnIsWidgetValiedToNavigate__DelegateSignature");
static_assert(offsetof(S6UI_CustomNavigationGroup_OnIsWidgetValiedToNavigate__DelegateSignature, NavObject) == 0x000000, "Member 'S6UI_CustomNavigationGroup_OnIsWidgetValiedToNavigate__DelegateSignature::NavObject' has a wrong offset!");
static_assert(offsetof(S6UI_CustomNavigationGroup_OnIsWidgetValiedToNavigate__DelegateSignature, ReturnValue) == 0x000008, "Member 'S6UI_CustomNavigationGroup_OnIsWidgetValiedToNavigate__DelegateSignature::ReturnValue' has a wrong offset!");

// DelegateFunction S6UICore.S6UI_CustomNavigationGroup.OnNavigated__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct S6UI_CustomNavigationGroup_OnNavigated__DelegateSignature final
{
public:
	const class US6UI_CustomNavigationGroup*      NavGroup;                                          // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(S6UI_CustomNavigationGroup_OnNavigated__DelegateSignature) == 0x000008, "Wrong alignment on S6UI_CustomNavigationGroup_OnNavigated__DelegateSignature");
static_assert(sizeof(S6UI_CustomNavigationGroup_OnNavigated__DelegateSignature) == 0x000008, "Wrong size on S6UI_CustomNavigationGroup_OnNavigated__DelegateSignature");
static_assert(offsetof(S6UI_CustomNavigationGroup_OnNavigated__DelegateSignature, NavGroup) == 0x000000, "Member 'S6UI_CustomNavigationGroup_OnNavigated__DelegateSignature::NavGroup' has a wrong offset!");

// Function S6UICore.S6UI_CustomNavigationGroup.SetAutoEdgeEscapeDirections
// 0x0010 (0x0010 - 0x0000)
struct S6UI_CustomNavigationGroup_SetAutoEdgeEscapeDirections final
{
public:
	TArray<EUINavigation>                         InEdgeEscapeDirections;                            // 0x0000(0x0010)(ConstParm, Parm, ZeroConstructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(S6UI_CustomNavigationGroup_SetAutoEdgeEscapeDirections) == 0x000008, "Wrong alignment on S6UI_CustomNavigationGroup_SetAutoEdgeEscapeDirections");
static_assert(sizeof(S6UI_CustomNavigationGroup_SetAutoEdgeEscapeDirections) == 0x000010, "Wrong size on S6UI_CustomNavigationGroup_SetAutoEdgeEscapeDirections");
static_assert(offsetof(S6UI_CustomNavigationGroup_SetAutoEdgeEscapeDirections, InEdgeEscapeDirections) == 0x000000, "Member 'S6UI_CustomNavigationGroup_SetAutoEdgeEscapeDirections::InEdgeEscapeDirections' has a wrong offset!");

// Function S6UICore.S6UI_CustomNavigationGroup.SetIsFocusable
// 0x0001 (0x0001 - 0x0000)
struct S6UI_CustomNavigationGroup_SetIsFocusable final
{
public:
	bool                                          bInIsFocusable;                                    // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(S6UI_CustomNavigationGroup_SetIsFocusable) == 0x000001, "Wrong alignment on S6UI_CustomNavigationGroup_SetIsFocusable");
static_assert(sizeof(S6UI_CustomNavigationGroup_SetIsFocusable) == 0x000001, "Wrong size on S6UI_CustomNavigationGroup_SetIsFocusable");
static_assert(offsetof(S6UI_CustomNavigationGroup_SetIsFocusable, bInIsFocusable) == 0x000000, "Member 'S6UI_CustomNavigationGroup_SetIsFocusable::bInIsFocusable' has a wrong offset!");

// Function S6UICore.S6UI_CustomNavigationGroup.SetIsGroupEnabled
// 0x0001 (0x0001 - 0x0000)
struct S6UI_CustomNavigationGroup_SetIsGroupEnabled final
{
public:
	bool                                          bInIsEnabled;                                      // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(S6UI_CustomNavigationGroup_SetIsGroupEnabled) == 0x000001, "Wrong alignment on S6UI_CustomNavigationGroup_SetIsGroupEnabled");
static_assert(sizeof(S6UI_CustomNavigationGroup_SetIsGroupEnabled) == 0x000001, "Wrong size on S6UI_CustomNavigationGroup_SetIsGroupEnabled");
static_assert(offsetof(S6UI_CustomNavigationGroup_SetIsGroupEnabled, bInIsEnabled) == 0x000000, "Member 'S6UI_CustomNavigationGroup_SetIsGroupEnabled::bInIsEnabled' has a wrong offset!");

// Function S6UICore.S6UI_CustomNavigationGroup.GetIsGroupEnabled
// 0x0001 (0x0001 - 0x0000)
struct S6UI_CustomNavigationGroup_GetIsGroupEnabled final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(S6UI_CustomNavigationGroup_GetIsGroupEnabled) == 0x000001, "Wrong alignment on S6UI_CustomNavigationGroup_GetIsGroupEnabled");
static_assert(sizeof(S6UI_CustomNavigationGroup_GetIsGroupEnabled) == 0x000001, "Wrong size on S6UI_CustomNavigationGroup_GetIsGroupEnabled");
static_assert(offsetof(S6UI_CustomNavigationGroup_GetIsGroupEnabled, ReturnValue) == 0x000000, "Member 'S6UI_CustomNavigationGroup_GetIsGroupEnabled::ReturnValue' has a wrong offset!");

// DelegateFunction S6UICore.S6UI_InputActionHandlingWidgetComponent.OnEnabledStateChanged__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct S6UI_InputActionHandlingWidgetComponent_OnEnabledStateChanged__DelegateSignature final
{
public:
	class US6UI_InputActionHandlingWidgetComponent* AffectedComponent;                                 // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(S6UI_InputActionHandlingWidgetComponent_OnEnabledStateChanged__DelegateSignature) == 0x000008, "Wrong alignment on S6UI_InputActionHandlingWidgetComponent_OnEnabledStateChanged__DelegateSignature");
static_assert(sizeof(S6UI_InputActionHandlingWidgetComponent_OnEnabledStateChanged__DelegateSignature) == 0x000008, "Wrong size on S6UI_InputActionHandlingWidgetComponent_OnEnabledStateChanged__DelegateSignature");
static_assert(offsetof(S6UI_InputActionHandlingWidgetComponent_OnEnabledStateChanged__DelegateSignature, AffectedComponent) == 0x000000, "Member 'S6UI_InputActionHandlingWidgetComponent_OnEnabledStateChanged__DelegateSignature::AffectedComponent' has a wrong offset!");

// DelegateFunction S6UICore.S6UI_InputActionHandlingWidgetComponent.OnInputActionBindingsChanged__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct S6UI_InputActionHandlingWidgetComponent_OnInputActionBindingsChanged__DelegateSignature final
{
public:
	class US6UI_InputActionHandlingWidgetComponent* AffectedComponent;                                 // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(S6UI_InputActionHandlingWidgetComponent_OnInputActionBindingsChanged__DelegateSignature) == 0x000008, "Wrong alignment on S6UI_InputActionHandlingWidgetComponent_OnInputActionBindingsChanged__DelegateSignature");
static_assert(sizeof(S6UI_InputActionHandlingWidgetComponent_OnInputActionBindingsChanged__DelegateSignature) == 0x000008, "Wrong size on S6UI_InputActionHandlingWidgetComponent_OnInputActionBindingsChanged__DelegateSignature");
static_assert(offsetof(S6UI_InputActionHandlingWidgetComponent_OnInputActionBindingsChanged__DelegateSignature, AffectedComponent) == 0x000000, "Member 'S6UI_InputActionHandlingWidgetComponent_OnInputActionBindingsChanged__DelegateSignature::AffectedComponent' has a wrong offset!");

// Function S6UICore.S6UI_InputActionHandlingWidgetComponent.RegisterInputActionBinding
// 0x0030 (0x0030 - 0x0000)
struct S6UI_InputActionHandlingWidgetComponent_RegisterInputActionBinding final
{
public:
	class UInputAction*                           InputAction;                                       // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ETriggerEvent                                 TriggerEventType;                                  // 0x0008(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1E78[0x3];                                     // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(const struct FInputActionValue& ActionValue, float ElapsedTime, float TriggeredTime, class UInputAction* SourceAction)> Delegate;                                          // 0x000C(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGuid                                  ReturnValue;                                       // 0x001C(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1E79[0x4];                                     // 0x002C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(S6UI_InputActionHandlingWidgetComponent_RegisterInputActionBinding) == 0x000008, "Wrong alignment on S6UI_InputActionHandlingWidgetComponent_RegisterInputActionBinding");
static_assert(sizeof(S6UI_InputActionHandlingWidgetComponent_RegisterInputActionBinding) == 0x000030, "Wrong size on S6UI_InputActionHandlingWidgetComponent_RegisterInputActionBinding");
static_assert(offsetof(S6UI_InputActionHandlingWidgetComponent_RegisterInputActionBinding, InputAction) == 0x000000, "Member 'S6UI_InputActionHandlingWidgetComponent_RegisterInputActionBinding::InputAction' has a wrong offset!");
static_assert(offsetof(S6UI_InputActionHandlingWidgetComponent_RegisterInputActionBinding, TriggerEventType) == 0x000008, "Member 'S6UI_InputActionHandlingWidgetComponent_RegisterInputActionBinding::TriggerEventType' has a wrong offset!");
static_assert(offsetof(S6UI_InputActionHandlingWidgetComponent_RegisterInputActionBinding, Delegate) == 0x00000C, "Member 'S6UI_InputActionHandlingWidgetComponent_RegisterInputActionBinding::Delegate' has a wrong offset!");
static_assert(offsetof(S6UI_InputActionHandlingWidgetComponent_RegisterInputActionBinding, ReturnValue) == 0x00001C, "Member 'S6UI_InputActionHandlingWidgetComponent_RegisterInputActionBinding::ReturnValue' has a wrong offset!");

// Function S6UICore.S6UI_InputActionHandlingWidgetComponent.SetIsEnabled
// 0x0001 (0x0001 - 0x0000)
struct S6UI_InputActionHandlingWidgetComponent_SetIsEnabled final
{
public:
	bool                                          bValue;                                            // 0x0000(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(S6UI_InputActionHandlingWidgetComponent_SetIsEnabled) == 0x000001, "Wrong alignment on S6UI_InputActionHandlingWidgetComponent_SetIsEnabled");
static_assert(sizeof(S6UI_InputActionHandlingWidgetComponent_SetIsEnabled) == 0x000001, "Wrong size on S6UI_InputActionHandlingWidgetComponent_SetIsEnabled");
static_assert(offsetof(S6UI_InputActionHandlingWidgetComponent_SetIsEnabled, bValue) == 0x000000, "Member 'S6UI_InputActionHandlingWidgetComponent_SetIsEnabled::bValue' has a wrong offset!");

// Function S6UICore.S6UI_InputActionHandlingWidgetComponent.UnregisterInputActionBinding
// 0x0010 (0x0010 - 0x0000)
struct S6UI_InputActionHandlingWidgetComponent_UnregisterInputActionBinding final
{
public:
	struct FGuid                                  BindingId;                                         // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(S6UI_InputActionHandlingWidgetComponent_UnregisterInputActionBinding) == 0x000004, "Wrong alignment on S6UI_InputActionHandlingWidgetComponent_UnregisterInputActionBinding");
static_assert(sizeof(S6UI_InputActionHandlingWidgetComponent_UnregisterInputActionBinding) == 0x000010, "Wrong size on S6UI_InputActionHandlingWidgetComponent_UnregisterInputActionBinding");
static_assert(offsetof(S6UI_InputActionHandlingWidgetComponent_UnregisterInputActionBinding, BindingId) == 0x000000, "Member 'S6UI_InputActionHandlingWidgetComponent_UnregisterInputActionBinding::BindingId' has a wrong offset!");

// Function S6UICore.S6UI_InputActionHandlingWidgetComponent.GetRegisteredInputActionBindings
// 0x0010 (0x0010 - 0x0000)
struct S6UI_InputActionHandlingWidgetComponent_GetRegisteredInputActionBindings final
{
public:
	TArray<struct FS6UI_RegisteredInputActionBinding> ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, ContainsInstancedReference, NativeAccessSpecifierPublic)
};
static_assert(alignof(S6UI_InputActionHandlingWidgetComponent_GetRegisteredInputActionBindings) == 0x000008, "Wrong alignment on S6UI_InputActionHandlingWidgetComponent_GetRegisteredInputActionBindings");
static_assert(sizeof(S6UI_InputActionHandlingWidgetComponent_GetRegisteredInputActionBindings) == 0x000010, "Wrong size on S6UI_InputActionHandlingWidgetComponent_GetRegisteredInputActionBindings");
static_assert(offsetof(S6UI_InputActionHandlingWidgetComponent_GetRegisteredInputActionBindings, ReturnValue) == 0x000000, "Member 'S6UI_InputActionHandlingWidgetComponent_GetRegisteredInputActionBindings::ReturnValue' has a wrong offset!");

// Function S6UICore.S6UI_InputActionHandlingWidgetInterface.GetInputActionHandlingComponent
// 0x0008 (0x0008 - 0x0000)
struct S6UI_InputActionHandlingWidgetInterface_GetInputActionHandlingComponent final
{
public:
	class US6UI_InputActionHandlingWidgetComponent* ReturnValue;                                       // 0x0000(0x0008)(ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(S6UI_InputActionHandlingWidgetInterface_GetInputActionHandlingComponent) == 0x000008, "Wrong alignment on S6UI_InputActionHandlingWidgetInterface_GetInputActionHandlingComponent");
static_assert(sizeof(S6UI_InputActionHandlingWidgetInterface_GetInputActionHandlingComponent) == 0x000008, "Wrong size on S6UI_InputActionHandlingWidgetInterface_GetInputActionHandlingComponent");
static_assert(offsetof(S6UI_InputActionHandlingWidgetInterface_GetInputActionHandlingComponent, ReturnValue) == 0x000000, "Member 'S6UI_InputActionHandlingWidgetInterface_GetInputActionHandlingComponent::ReturnValue' has a wrong offset!");

// Function S6UICore.S6UI_InputRouterSubsystem.HandleInputActionHandlingComponentBindingsChanged
// 0x0008 (0x0008 - 0x0000)
struct S6UI_InputRouterSubsystem_HandleInputActionHandlingComponentBindingsChanged final
{
public:
	class US6UI_InputActionHandlingWidgetComponent* AffectedComponent;                                 // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(S6UI_InputRouterSubsystem_HandleInputActionHandlingComponentBindingsChanged) == 0x000008, "Wrong alignment on S6UI_InputRouterSubsystem_HandleInputActionHandlingComponentBindingsChanged");
static_assert(sizeof(S6UI_InputRouterSubsystem_HandleInputActionHandlingComponentBindingsChanged) == 0x000008, "Wrong size on S6UI_InputRouterSubsystem_HandleInputActionHandlingComponentBindingsChanged");
static_assert(offsetof(S6UI_InputRouterSubsystem_HandleInputActionHandlingComponentBindingsChanged, AffectedComponent) == 0x000000, "Member 'S6UI_InputRouterSubsystem_HandleInputActionHandlingComponentBindingsChanged::AffectedComponent' has a wrong offset!");

// Function S6UICore.S6UI_InputRouterSubsystem.HandleInputActionHandlingComponentEnabledStateChanged
// 0x0008 (0x0008 - 0x0000)
struct S6UI_InputRouterSubsystem_HandleInputActionHandlingComponentEnabledStateChanged final
{
public:
	class US6UI_InputActionHandlingWidgetComponent* AffectedComponent;                                 // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(S6UI_InputRouterSubsystem_HandleInputActionHandlingComponentEnabledStateChanged) == 0x000008, "Wrong alignment on S6UI_InputRouterSubsystem_HandleInputActionHandlingComponentEnabledStateChanged");
static_assert(sizeof(S6UI_InputRouterSubsystem_HandleInputActionHandlingComponentEnabledStateChanged) == 0x000008, "Wrong size on S6UI_InputRouterSubsystem_HandleInputActionHandlingComponentEnabledStateChanged");
static_assert(offsetof(S6UI_InputRouterSubsystem_HandleInputActionHandlingComponentEnabledStateChanged, AffectedComponent) == 0x000000, "Member 'S6UI_InputRouterSubsystem_HandleInputActionHandlingComponentEnabledStateChanged::AffectedComponent' has a wrong offset!");

// Function S6UICore.S6UI_InputRouterSubsystem.RegisterInputActionHandler
// 0x0008 (0x0008 - 0x0000)
struct S6UI_InputRouterSubsystem_RegisterInputActionHandler final
{
public:
	class US6UI_InputActionHandlingWidgetComponent* InputActionHandler;                                // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(S6UI_InputRouterSubsystem_RegisterInputActionHandler) == 0x000008, "Wrong alignment on S6UI_InputRouterSubsystem_RegisterInputActionHandler");
static_assert(sizeof(S6UI_InputRouterSubsystem_RegisterInputActionHandler) == 0x000008, "Wrong size on S6UI_InputRouterSubsystem_RegisterInputActionHandler");
static_assert(offsetof(S6UI_InputRouterSubsystem_RegisterInputActionHandler, InputActionHandler) == 0x000000, "Member 'S6UI_InputRouterSubsystem_RegisterInputActionHandler::InputActionHandler' has a wrong offset!");

// Function S6UICore.S6UI_InputRouterSubsystem.UnregisterInputActionHandler
// 0x0008 (0x0008 - 0x0000)
struct S6UI_InputRouterSubsystem_UnregisterInputActionHandler final
{
public:
	class US6UI_InputActionHandlingWidgetComponent* InputActionHandler;                                // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(S6UI_InputRouterSubsystem_UnregisterInputActionHandler) == 0x000008, "Wrong alignment on S6UI_InputRouterSubsystem_UnregisterInputActionHandler");
static_assert(sizeof(S6UI_InputRouterSubsystem_UnregisterInputActionHandler) == 0x000008, "Wrong size on S6UI_InputRouterSubsystem_UnregisterInputActionHandler");
static_assert(offsetof(S6UI_InputRouterSubsystem_UnregisterInputActionHandler, InputActionHandler) == 0x000000, "Member 'S6UI_InputRouterSubsystem_UnregisterInputActionHandler::InputActionHandler' has a wrong offset!");

// Function S6UICore.S6UI_StateUserWidget.GetInputMode
// 0x0010 (0x0010 - 0x0000)
struct S6UI_StateUserWidget_GetInputMode final
{
public:
	struct FS6UI_InputMode                        ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(S6UI_StateUserWidget_GetInputMode) == 0x000004, "Wrong alignment on S6UI_StateUserWidget_GetInputMode");
static_assert(sizeof(S6UI_StateUserWidget_GetInputMode) == 0x000010, "Wrong size on S6UI_StateUserWidget_GetInputMode");
static_assert(offsetof(S6UI_StateUserWidget_GetInputMode, ReturnValue) == 0x000000, "Member 'S6UI_StateUserWidget_GetInputMode::ReturnValue' has a wrong offset!");

// Function S6UICore.S6UI_StateUserWidget.GetViewModel
// 0x0008 (0x0008 - 0x0000)
struct S6UI_StateUserWidget_GetViewModel final
{
public:
	class US6UI_StateViewModel*                   ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(S6UI_StateUserWidget_GetViewModel) == 0x000008, "Wrong alignment on S6UI_StateUserWidget_GetViewModel");
static_assert(sizeof(S6UI_StateUserWidget_GetViewModel) == 0x000008, "Wrong size on S6UI_StateUserWidget_GetViewModel");
static_assert(offsetof(S6UI_StateUserWidget_GetViewModel, ReturnValue) == 0x000000, "Member 'S6UI_StateUserWidget_GetViewModel::ReturnValue' has a wrong offset!");

// Function S6UICore.S6UI_StateUserWidget.GetViewModelContext
// 0x0010 (0x0010 - 0x0000)
struct S6UI_StateUserWidget_GetViewModelContext final
{
public:
	struct FMVVMViewModelContext                  ReturnValue;                                       // 0x0000(0x0010)(ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(S6UI_StateUserWidget_GetViewModelContext) == 0x000008, "Wrong alignment on S6UI_StateUserWidget_GetViewModelContext");
static_assert(sizeof(S6UI_StateUserWidget_GetViewModelContext) == 0x000010, "Wrong size on S6UI_StateUserWidget_GetViewModelContext");
static_assert(offsetof(S6UI_StateUserWidget_GetViewModelContext, ReturnValue) == 0x000000, "Member 'S6UI_StateUserWidget_GetViewModelContext::ReturnValue' has a wrong offset!");

// Function S6UICore.S6UI_ToolTipWidgetInterface.UpdateToolTipText
// 0x0018 (0x0018 - 0x0000)
struct S6UI_ToolTipWidgetInterface_UpdateToolTipText final
{
public:
	class FText                                   Text;                                              // 0x0000(0x0018)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(S6UI_ToolTipWidgetInterface_UpdateToolTipText) == 0x000008, "Wrong alignment on S6UI_ToolTipWidgetInterface_UpdateToolTipText");
static_assert(sizeof(S6UI_ToolTipWidgetInterface_UpdateToolTipText) == 0x000018, "Wrong size on S6UI_ToolTipWidgetInterface_UpdateToolTipText");
static_assert(offsetof(S6UI_ToolTipWidgetInterface_UpdateToolTipText, Text) == 0x000000, "Member 'S6UI_ToolTipWidgetInterface_UpdateToolTipText::Text' has a wrong offset!");

// Function S6UICore.S6UI_UIManagerWidgetBase.GetUIManagerWidget
// 0x0010 (0x0010 - 0x0000)
struct S6UI_UIManagerWidgetBase_GetUIManagerWidget final
{
public:
	const class APlayerController*                PC;                                                // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class US6UI_UIManagerWidgetBase*              ReturnValue;                                       // 0x0008(0x0008)(ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(S6UI_UIManagerWidgetBase_GetUIManagerWidget) == 0x000008, "Wrong alignment on S6UI_UIManagerWidgetBase_GetUIManagerWidget");
static_assert(sizeof(S6UI_UIManagerWidgetBase_GetUIManagerWidget) == 0x000010, "Wrong size on S6UI_UIManagerWidgetBase_GetUIManagerWidget");
static_assert(offsetof(S6UI_UIManagerWidgetBase_GetUIManagerWidget, PC) == 0x000000, "Member 'S6UI_UIManagerWidgetBase_GetUIManagerWidget::PC' has a wrong offset!");
static_assert(offsetof(S6UI_UIManagerWidgetBase_GetUIManagerWidget, ReturnValue) == 0x000008, "Member 'S6UI_UIManagerWidgetBase_GetUIManagerWidget::ReturnValue' has a wrong offset!");

// Function S6UICore.S6UI_UIManagerWidgetBase.ActivateModalWidget
// 0x0008 (0x0008 - 0x0000)
struct S6UI_UIManagerWidgetBase_ActivateModalWidget final
{
public:
	const class UWidget*                          Widget;                                            // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(S6UI_UIManagerWidgetBase_ActivateModalWidget) == 0x000008, "Wrong alignment on S6UI_UIManagerWidgetBase_ActivateModalWidget");
static_assert(sizeof(S6UI_UIManagerWidgetBase_ActivateModalWidget) == 0x000008, "Wrong size on S6UI_UIManagerWidgetBase_ActivateModalWidget");
static_assert(offsetof(S6UI_UIManagerWidgetBase_ActivateModalWidget, Widget) == 0x000000, "Member 'S6UI_UIManagerWidgetBase_ActivateModalWidget::Widget' has a wrong offset!");

// Function S6UICore.S6UI_UIManagerWidgetBase.AddLoadingScreenWidget
// 0x0008 (0x0008 - 0x0000)
struct S6UI_UIManagerWidgetBase_AddLoadingScreenWidget final
{
public:
	class UUserWidget*                            Widget;                                            // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(S6UI_UIManagerWidgetBase_AddLoadingScreenWidget) == 0x000008, "Wrong alignment on S6UI_UIManagerWidgetBase_AddLoadingScreenWidget");
static_assert(sizeof(S6UI_UIManagerWidgetBase_AddLoadingScreenWidget) == 0x000008, "Wrong size on S6UI_UIManagerWidgetBase_AddLoadingScreenWidget");
static_assert(offsetof(S6UI_UIManagerWidgetBase_AddLoadingScreenWidget, Widget) == 0x000000, "Member 'S6UI_UIManagerWidgetBase_AddLoadingScreenWidget::Widget' has a wrong offset!");

// Function S6UICore.S6UI_UIManagerWidgetBase.CloseModalWidget
// 0x0010 (0x0010 - 0x0000)
struct S6UI_UIManagerWidgetBase_CloseModalWidget final
{
public:
	const class UWidget*                          Widget;                                            // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bShouldForceClose;                                 // 0x0008(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bPermitLatentClosing;                              // 0x0009(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1E7C[0x6];                                     // 0x000A(0x0006)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(S6UI_UIManagerWidgetBase_CloseModalWidget) == 0x000008, "Wrong alignment on S6UI_UIManagerWidgetBase_CloseModalWidget");
static_assert(sizeof(S6UI_UIManagerWidgetBase_CloseModalWidget) == 0x000010, "Wrong size on S6UI_UIManagerWidgetBase_CloseModalWidget");
static_assert(offsetof(S6UI_UIManagerWidgetBase_CloseModalWidget, Widget) == 0x000000, "Member 'S6UI_UIManagerWidgetBase_CloseModalWidget::Widget' has a wrong offset!");
static_assert(offsetof(S6UI_UIManagerWidgetBase_CloseModalWidget, bShouldForceClose) == 0x000008, "Member 'S6UI_UIManagerWidgetBase_CloseModalWidget::bShouldForceClose' has a wrong offset!");
static_assert(offsetof(S6UI_UIManagerWidgetBase_CloseModalWidget, bPermitLatentClosing) == 0x000009, "Member 'S6UI_UIManagerWidgetBase_CloseModalWidget::bPermitLatentClosing' has a wrong offset!");

// Function S6UICore.S6UI_UIManagerWidgetBase.CloseTopModalWidget
// 0x0003 (0x0003 - 0x0000)
struct S6UI_UIManagerWidgetBase_CloseTopModalWidget final
{
public:
	bool                                          bShouldForceClose;                                 // 0x0000(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bPermitLatentClosing;                              // 0x0001(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0002(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(S6UI_UIManagerWidgetBase_CloseTopModalWidget) == 0x000001, "Wrong alignment on S6UI_UIManagerWidgetBase_CloseTopModalWidget");
static_assert(sizeof(S6UI_UIManagerWidgetBase_CloseTopModalWidget) == 0x000003, "Wrong size on S6UI_UIManagerWidgetBase_CloseTopModalWidget");
static_assert(offsetof(S6UI_UIManagerWidgetBase_CloseTopModalWidget, bShouldForceClose) == 0x000000, "Member 'S6UI_UIManagerWidgetBase_CloseTopModalWidget::bShouldForceClose' has a wrong offset!");
static_assert(offsetof(S6UI_UIManagerWidgetBase_CloseTopModalWidget, bPermitLatentClosing) == 0x000001, "Member 'S6UI_UIManagerWidgetBase_CloseTopModalWidget::bPermitLatentClosing' has a wrong offset!");
static_assert(offsetof(S6UI_UIManagerWidgetBase_CloseTopModalWidget, ReturnValue) == 0x000002, "Member 'S6UI_UIManagerWidgetBase_CloseTopModalWidget::ReturnValue' has a wrong offset!");

// Function S6UICore.S6UI_UIManagerWidgetBase.DeactivateModalWidget
// 0x0008 (0x0008 - 0x0000)
struct S6UI_UIManagerWidgetBase_DeactivateModalWidget final
{
public:
	const class UWidget*                          Widget;                                            // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(S6UI_UIManagerWidgetBase_DeactivateModalWidget) == 0x000008, "Wrong alignment on S6UI_UIManagerWidgetBase_DeactivateModalWidget");
static_assert(sizeof(S6UI_UIManagerWidgetBase_DeactivateModalWidget) == 0x000008, "Wrong size on S6UI_UIManagerWidgetBase_DeactivateModalWidget");
static_assert(offsetof(S6UI_UIManagerWidgetBase_DeactivateModalWidget, Widget) == 0x000000, "Member 'S6UI_UIManagerWidgetBase_DeactivateModalWidget::Widget' has a wrong offset!");

// Function S6UICore.S6UI_UIManagerWidgetBase.HandleOnStateInputModeChanged
// 0x0010 (0x0010 - 0x0000)
struct S6UI_UIManagerWidgetBase_HandleOnStateInputModeChanged final
{
public:
	class UObject*                                Object;                                            // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FFieldNotificationId                   Field;                                             // 0x0008(0x0008)(Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(S6UI_UIManagerWidgetBase_HandleOnStateInputModeChanged) == 0x000008, "Wrong alignment on S6UI_UIManagerWidgetBase_HandleOnStateInputModeChanged");
static_assert(sizeof(S6UI_UIManagerWidgetBase_HandleOnStateInputModeChanged) == 0x000010, "Wrong size on S6UI_UIManagerWidgetBase_HandleOnStateInputModeChanged");
static_assert(offsetof(S6UI_UIManagerWidgetBase_HandleOnStateInputModeChanged, Object) == 0x000000, "Member 'S6UI_UIManagerWidgetBase_HandleOnStateInputModeChanged::Object' has a wrong offset!");
static_assert(offsetof(S6UI_UIManagerWidgetBase_HandleOnStateInputModeChanged, Field) == 0x000008, "Member 'S6UI_UIManagerWidgetBase_HandleOnStateInputModeChanged::Field' has a wrong offset!");

// Function S6UICore.S6UI_UIManagerWidgetBase.OpenModalWidget
// 0x0008 (0x0008 - 0x0000)
struct S6UI_UIManagerWidgetBase_OpenModalWidget final
{
public:
	const class UWidget*                          Widget;                                            // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(S6UI_UIManagerWidgetBase_OpenModalWidget) == 0x000008, "Wrong alignment on S6UI_UIManagerWidgetBase_OpenModalWidget");
static_assert(sizeof(S6UI_UIManagerWidgetBase_OpenModalWidget) == 0x000008, "Wrong size on S6UI_UIManagerWidgetBase_OpenModalWidget");
static_assert(offsetof(S6UI_UIManagerWidgetBase_OpenModalWidget, Widget) == 0x000000, "Member 'S6UI_UIManagerWidgetBase_OpenModalWidget::Widget' has a wrong offset!");

// Function S6UICore.S6UI_UIManagerWidgetBase.PopState
// 0x0008 (0x0008 - 0x0000)
struct S6UI_UIManagerWidgetBase_PopState final
{
public:
	class US6UI_StateUserWidget*                  StateWidget;                                       // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(S6UI_UIManagerWidgetBase_PopState) == 0x000008, "Wrong alignment on S6UI_UIManagerWidgetBase_PopState");
static_assert(sizeof(S6UI_UIManagerWidgetBase_PopState) == 0x000008, "Wrong size on S6UI_UIManagerWidgetBase_PopState");
static_assert(offsetof(S6UI_UIManagerWidgetBase_PopState, StateWidget) == 0x000000, "Member 'S6UI_UIManagerWidgetBase_PopState::StateWidget' has a wrong offset!");

// Function S6UICore.S6UI_UIManagerWidgetBase.PushState
// 0x0008 (0x0008 - 0x0000)
struct S6UI_UIManagerWidgetBase_PushState final
{
public:
	class US6UI_StateUserWidget*                  StateWidget;                                       // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(S6UI_UIManagerWidgetBase_PushState) == 0x000008, "Wrong alignment on S6UI_UIManagerWidgetBase_PushState");
static_assert(sizeof(S6UI_UIManagerWidgetBase_PushState) == 0x000008, "Wrong size on S6UI_UIManagerWidgetBase_PushState");
static_assert(offsetof(S6UI_UIManagerWidgetBase_PushState, StateWidget) == 0x000000, "Member 'S6UI_UIManagerWidgetBase_PushState::StateWidget' has a wrong offset!");

// Function S6UICore.S6UI_UIManagerWidgetBase.RemoveLoadingScreenWidget
// 0x0008 (0x0008 - 0x0000)
struct S6UI_UIManagerWidgetBase_RemoveLoadingScreenWidget final
{
public:
	class UUserWidget*                            Widget;                                            // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(S6UI_UIManagerWidgetBase_RemoveLoadingScreenWidget) == 0x000008, "Wrong alignment on S6UI_UIManagerWidgetBase_RemoveLoadingScreenWidget");
static_assert(sizeof(S6UI_UIManagerWidgetBase_RemoveLoadingScreenWidget) == 0x000008, "Wrong size on S6UI_UIManagerWidgetBase_RemoveLoadingScreenWidget");
static_assert(offsetof(S6UI_UIManagerWidgetBase_RemoveLoadingScreenWidget, Widget) == 0x000000, "Member 'S6UI_UIManagerWidgetBase_RemoveLoadingScreenWidget::Widget' has a wrong offset!");

// Function S6UICore.S6UI_UIManagerWidgetBase.RemoveModalWidget
// 0x0008 (0x0008 - 0x0000)
struct S6UI_UIManagerWidgetBase_RemoveModalWidget final
{
public:
	class UWidget*                                Widget;                                            // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(S6UI_UIManagerWidgetBase_RemoveModalWidget) == 0x000008, "Wrong alignment on S6UI_UIManagerWidgetBase_RemoveModalWidget");
static_assert(sizeof(S6UI_UIManagerWidgetBase_RemoveModalWidget) == 0x000008, "Wrong size on S6UI_UIManagerWidgetBase_RemoveModalWidget");
static_assert(offsetof(S6UI_UIManagerWidgetBase_RemoveModalWidget, Widget) == 0x000000, "Member 'S6UI_UIManagerWidgetBase_RemoveModalWidget::Widget' has a wrong offset!");

// Function S6UICore.S6UI_UIManagerWidgetBase.GetCurrentStateViewModel
// 0x0008 (0x0008 - 0x0000)
struct S6UI_UIManagerWidgetBase_GetCurrentStateViewModel final
{
public:
	class US6UI_StateViewModel*                   ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(S6UI_UIManagerWidgetBase_GetCurrentStateViewModel) == 0x000008, "Wrong alignment on S6UI_UIManagerWidgetBase_GetCurrentStateViewModel");
static_assert(sizeof(S6UI_UIManagerWidgetBase_GetCurrentStateViewModel) == 0x000008, "Wrong size on S6UI_UIManagerWidgetBase_GetCurrentStateViewModel");
static_assert(offsetof(S6UI_UIManagerWidgetBase_GetCurrentStateViewModel, ReturnValue) == 0x000000, "Member 'S6UI_UIManagerWidgetBase_GetCurrentStateViewModel::ReturnValue' has a wrong offset!");

// Function S6UICore.S6UI_UIManagerWidgetBase.GetCurrentStateWidget
// 0x0008 (0x0008 - 0x0000)
struct S6UI_UIManagerWidgetBase_GetCurrentStateWidget final
{
public:
	class US6UI_StateUserWidget*                  ReturnValue;                                       // 0x0000(0x0008)(ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(S6UI_UIManagerWidgetBase_GetCurrentStateWidget) == 0x000008, "Wrong alignment on S6UI_UIManagerWidgetBase_GetCurrentStateWidget");
static_assert(sizeof(S6UI_UIManagerWidgetBase_GetCurrentStateWidget) == 0x000008, "Wrong size on S6UI_UIManagerWidgetBase_GetCurrentStateWidget");
static_assert(offsetof(S6UI_UIManagerWidgetBase_GetCurrentStateWidget, ReturnValue) == 0x000000, "Member 'S6UI_UIManagerWidgetBase_GetCurrentStateWidget::ReturnValue' has a wrong offset!");

// Function S6UICore.S6UI_UIManagerWidgetBase.GetWidgetPoolManager
// 0x0008 (0x0008 - 0x0000)
struct S6UI_UIManagerWidgetBase_GetWidgetPoolManager final
{
public:
	class US6UI_WidgetPoolManager*                ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(S6UI_UIManagerWidgetBase_GetWidgetPoolManager) == 0x000008, "Wrong alignment on S6UI_UIManagerWidgetBase_GetWidgetPoolManager");
static_assert(sizeof(S6UI_UIManagerWidgetBase_GetWidgetPoolManager) == 0x000008, "Wrong size on S6UI_UIManagerWidgetBase_GetWidgetPoolManager");
static_assert(offsetof(S6UI_UIManagerWidgetBase_GetWidgetPoolManager, ReturnValue) == 0x000000, "Member 'S6UI_UIManagerWidgetBase_GetWidgetPoolManager::ReturnValue' has a wrong offset!");

// Function S6UICore.S6UI_UIManagerWidgetBase.IsModalWidgetActive
// 0x0001 (0x0001 - 0x0000)
struct S6UI_UIManagerWidgetBase_IsModalWidgetActive final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(S6UI_UIManagerWidgetBase_IsModalWidgetActive) == 0x000001, "Wrong alignment on S6UI_UIManagerWidgetBase_IsModalWidgetActive");
static_assert(sizeof(S6UI_UIManagerWidgetBase_IsModalWidgetActive) == 0x000001, "Wrong size on S6UI_UIManagerWidgetBase_IsModalWidgetActive");
static_assert(offsetof(S6UI_UIManagerWidgetBase_IsModalWidgetActive, ReturnValue) == 0x000000, "Member 'S6UI_UIManagerWidgetBase_IsModalWidgetActive::ReturnValue' has a wrong offset!");

// Function S6UICore.S6UI_UIManagerHUDBase.GetUIManagerWidget
// 0x0008 (0x0008 - 0x0000)
struct S6UI_UIManagerHUDBase_GetUIManagerWidget final
{
public:
	class US6UI_UIManagerWidgetBase*              ReturnValue;                                       // 0x0000(0x0008)(ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(S6UI_UIManagerHUDBase_GetUIManagerWidget) == 0x000008, "Wrong alignment on S6UI_UIManagerHUDBase_GetUIManagerWidget");
static_assert(sizeof(S6UI_UIManagerHUDBase_GetUIManagerWidget) == 0x000008, "Wrong size on S6UI_UIManagerHUDBase_GetUIManagerWidget");
static_assert(offsetof(S6UI_UIManagerHUDBase_GetUIManagerWidget, ReturnValue) == 0x000000, "Member 'S6UI_UIManagerHUDBase_GetUIManagerWidget::ReturnValue' has a wrong offset!");

// Function S6UICore.S6UI_UIManagerCrossPlatformHelper.RedirectModalType
// 0x0050 (0x0050 - 0x0000)
struct S6UI_UIManagerCrossPlatformHelper_RedirectModalType final
{
public:
	TSoftClassPtr<class UClass>                   DefaultModalType;                                  // 0x0000(0x0028)(Parm, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftClassPtr<class UClass>                   ReturnValue;                                       // 0x0028(0x0028)(Parm, OutParm, ReturnParm, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(S6UI_UIManagerCrossPlatformHelper_RedirectModalType) == 0x000008, "Wrong alignment on S6UI_UIManagerCrossPlatformHelper_RedirectModalType");
static_assert(sizeof(S6UI_UIManagerCrossPlatformHelper_RedirectModalType) == 0x000050, "Wrong size on S6UI_UIManagerCrossPlatformHelper_RedirectModalType");
static_assert(offsetof(S6UI_UIManagerCrossPlatformHelper_RedirectModalType, DefaultModalType) == 0x000000, "Member 'S6UI_UIManagerCrossPlatformHelper_RedirectModalType::DefaultModalType' has a wrong offset!");
static_assert(offsetof(S6UI_UIManagerCrossPlatformHelper_RedirectModalType, ReturnValue) == 0x000028, "Member 'S6UI_UIManagerCrossPlatformHelper_RedirectModalType::ReturnValue' has a wrong offset!");

// Function S6UICore.S6UI_UIManagerCrossPlatformHelper.RedirectStateType
// 0x0050 (0x0050 - 0x0000)
struct S6UI_UIManagerCrossPlatformHelper_RedirectStateType final
{
public:
	TSoftClassPtr<class UClass>                   DefaultStateType;                                  // 0x0000(0x0028)(Parm, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftClassPtr<class UClass>                   ReturnValue;                                       // 0x0028(0x0028)(Parm, OutParm, ReturnParm, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(S6UI_UIManagerCrossPlatformHelper_RedirectStateType) == 0x000008, "Wrong alignment on S6UI_UIManagerCrossPlatformHelper_RedirectStateType");
static_assert(sizeof(S6UI_UIManagerCrossPlatformHelper_RedirectStateType) == 0x000050, "Wrong size on S6UI_UIManagerCrossPlatformHelper_RedirectStateType");
static_assert(offsetof(S6UI_UIManagerCrossPlatformHelper_RedirectStateType, DefaultStateType) == 0x000000, "Member 'S6UI_UIManagerCrossPlatformHelper_RedirectStateType::DefaultStateType' has a wrong offset!");
static_assert(offsetof(S6UI_UIManagerCrossPlatformHelper_RedirectStateType, ReturnValue) == 0x000028, "Member 'S6UI_UIManagerCrossPlatformHelper_RedirectStateType::ReturnValue' has a wrong offset!");

// Function S6UICore.S6UI_Utils.AreCapsLocked
// 0x0001 (0x0001 - 0x0000)
struct S6UI_Utils_AreCapsLocked final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(S6UI_Utils_AreCapsLocked) == 0x000001, "Wrong alignment on S6UI_Utils_AreCapsLocked");
static_assert(sizeof(S6UI_Utils_AreCapsLocked) == 0x000001, "Wrong size on S6UI_Utils_AreCapsLocked");
static_assert(offsetof(S6UI_Utils_AreCapsLocked, ReturnValue) == 0x000000, "Member 'S6UI_Utils_AreCapsLocked::ReturnValue' has a wrong offset!");

// Function S6UICore.S6UI_Utils.DismissContextMenu
// 0x0020 (0x0020 - 0x0000)
struct S6UI_Utils_DismissContextMenu final
{
public:
	struct FS6UI_ContextMenu                      ContextMenu;                                       // 0x0000(0x0020)(ConstParm, Parm, OutParm, ReferenceParm, ContainsInstancedReference, NativeAccessSpecifierPublic)
};
static_assert(alignof(S6UI_Utils_DismissContextMenu) == 0x000008, "Wrong alignment on S6UI_Utils_DismissContextMenu");
static_assert(sizeof(S6UI_Utils_DismissContextMenu) == 0x000020, "Wrong size on S6UI_Utils_DismissContextMenu");
static_assert(offsetof(S6UI_Utils_DismissContextMenu, ContextMenu) == 0x000000, "Member 'S6UI_Utils_DismissContextMenu::ContextMenu' has a wrong offset!");

// Function S6UICore.S6UI_Utils.DoesPlatformSupportTouchInput
// 0x0001 (0x0001 - 0x0000)
struct S6UI_Utils_DoesPlatformSupportTouchInput final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(S6UI_Utils_DoesPlatformSupportTouchInput) == 0x000001, "Wrong alignment on S6UI_Utils_DoesPlatformSupportTouchInput");
static_assert(sizeof(S6UI_Utils_DoesPlatformSupportTouchInput) == 0x000001, "Wrong size on S6UI_Utils_DoesPlatformSupportTouchInput");
static_assert(offsetof(S6UI_Utils_DoesPlatformSupportTouchInput, ReturnValue) == 0x000000, "Member 'S6UI_Utils_DoesPlatformSupportTouchInput::ReturnValue' has a wrong offset!");

// Function S6UICore.S6UI_Utils.FindDeltaAngleDegrees
// 0x000C (0x000C - 0x0000)
struct S6UI_Utils_FindDeltaAngleDegrees final
{
public:
	float                                         StartAngle;                                        // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         TargetAngle;                                       // 0x0004(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         DeltaAngle;                                        // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(S6UI_Utils_FindDeltaAngleDegrees) == 0x000004, "Wrong alignment on S6UI_Utils_FindDeltaAngleDegrees");
static_assert(sizeof(S6UI_Utils_FindDeltaAngleDegrees) == 0x00000C, "Wrong size on S6UI_Utils_FindDeltaAngleDegrees");
static_assert(offsetof(S6UI_Utils_FindDeltaAngleDegrees, StartAngle) == 0x000000, "Member 'S6UI_Utils_FindDeltaAngleDegrees::StartAngle' has a wrong offset!");
static_assert(offsetof(S6UI_Utils_FindDeltaAngleDegrees, TargetAngle) == 0x000004, "Member 'S6UI_Utils_FindDeltaAngleDegrees::TargetAngle' has a wrong offset!");
static_assert(offsetof(S6UI_Utils_FindDeltaAngleDegrees, DeltaAngle) == 0x000008, "Member 'S6UI_Utils_FindDeltaAngleDegrees::DeltaAngle' has a wrong offset!");

// Function S6UICore.S6UI_Utils.GetContextMenuContentWidget
// 0x0028 (0x0028 - 0x0000)
struct S6UI_Utils_GetContextMenuContentWidget final
{
public:
	struct FS6UI_ContextMenu                      ContextMenu;                                       // 0x0000(0x0020)(ConstParm, Parm, OutParm, ReferenceParm, ContainsInstancedReference, NativeAccessSpecifierPublic)
	class UUserWidget*                            ReturnValue;                                       // 0x0020(0x0008)(ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(S6UI_Utils_GetContextMenuContentWidget) == 0x000008, "Wrong alignment on S6UI_Utils_GetContextMenuContentWidget");
static_assert(sizeof(S6UI_Utils_GetContextMenuContentWidget) == 0x000028, "Wrong size on S6UI_Utils_GetContextMenuContentWidget");
static_assert(offsetof(S6UI_Utils_GetContextMenuContentWidget, ContextMenu) == 0x000000, "Member 'S6UI_Utils_GetContextMenuContentWidget::ContextMenu' has a wrong offset!");
static_assert(offsetof(S6UI_Utils_GetContextMenuContentWidget, ReturnValue) == 0x000020, "Member 'S6UI_Utils_GetContextMenuContentWidget::ReturnValue' has a wrong offset!");

// Function S6UICore.S6UI_Utils.GetWidgetFromPool
// 0x0038 (0x0038 - 0x0000)
struct S6UI_Utils_GetWidgetFromPool final
{
public:
	class UWidget*                                WidgetContext;                                     // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftClassPtr<class UClass>                   WidgetClassSoftPtr;                                // 0x0008(0x0028)(Parm, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UUserWidget*                            ReturnValue;                                       // 0x0030(0x0008)(ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(S6UI_Utils_GetWidgetFromPool) == 0x000008, "Wrong alignment on S6UI_Utils_GetWidgetFromPool");
static_assert(sizeof(S6UI_Utils_GetWidgetFromPool) == 0x000038, "Wrong size on S6UI_Utils_GetWidgetFromPool");
static_assert(offsetof(S6UI_Utils_GetWidgetFromPool, WidgetContext) == 0x000000, "Member 'S6UI_Utils_GetWidgetFromPool::WidgetContext' has a wrong offset!");
static_assert(offsetof(S6UI_Utils_GetWidgetFromPool, WidgetClassSoftPtr) == 0x000008, "Member 'S6UI_Utils_GetWidgetFromPool::WidgetClassSoftPtr' has a wrong offset!");
static_assert(offsetof(S6UI_Utils_GetWidgetFromPool, ReturnValue) == 0x000030, "Member 'S6UI_Utils_GetWidgetFromPool::ReturnValue' has a wrong offset!");

// Function S6UICore.S6UI_Utils.GetWidgetPoolManager
// 0x0010 (0x0010 - 0x0000)
struct S6UI_Utils_GetWidgetPoolManager final
{
public:
	class UWidget*                                WidgetContext;                                     // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class US6UI_WidgetPoolManager*                ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(S6UI_Utils_GetWidgetPoolManager) == 0x000008, "Wrong alignment on S6UI_Utils_GetWidgetPoolManager");
static_assert(sizeof(S6UI_Utils_GetWidgetPoolManager) == 0x000010, "Wrong size on S6UI_Utils_GetWidgetPoolManager");
static_assert(offsetof(S6UI_Utils_GetWidgetPoolManager, WidgetContext) == 0x000000, "Member 'S6UI_Utils_GetWidgetPoolManager::WidgetContext' has a wrong offset!");
static_assert(offsetof(S6UI_Utils_GetWidgetPoolManager, ReturnValue) == 0x000008, "Member 'S6UI_Utils_GetWidgetPoolManager::ReturnValue' has a wrong offset!");

// Function S6UICore.S6UI_Utils.IsShowCommonUI
// 0x0001 (0x0001 - 0x0000)
struct S6UI_Utils_IsShowCommonUI final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(S6UI_Utils_IsShowCommonUI) == 0x000001, "Wrong alignment on S6UI_Utils_IsShowCommonUI");
static_assert(sizeof(S6UI_Utils_IsShowCommonUI) == 0x000001, "Wrong size on S6UI_Utils_IsShowCommonUI");
static_assert(offsetof(S6UI_Utils_IsShowCommonUI, ReturnValue) == 0x000000, "Member 'S6UI_Utils_IsShowCommonUI::ReturnValue' has a wrong offset!");

// Function S6UICore.S6UI_Utils.ReturnWidgetToPool
// 0x0010 (0x0010 - 0x0000)
struct S6UI_Utils_ReturnWidgetToPool final
{
public:
	class UWidget*                                WidgetContext;                                     // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UUserWidget*                            Widget;                                            // 0x0008(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(S6UI_Utils_ReturnWidgetToPool) == 0x000008, "Wrong alignment on S6UI_Utils_ReturnWidgetToPool");
static_assert(sizeof(S6UI_Utils_ReturnWidgetToPool) == 0x000010, "Wrong size on S6UI_Utils_ReturnWidgetToPool");
static_assert(offsetof(S6UI_Utils_ReturnWidgetToPool, WidgetContext) == 0x000000, "Member 'S6UI_Utils_ReturnWidgetToPool::WidgetContext' has a wrong offset!");
static_assert(offsetof(S6UI_Utils_ReturnWidgetToPool, Widget) == 0x000008, "Member 'S6UI_Utils_ReturnWidgetToPool::Widget' has a wrong offset!");

// Function S6UICore.S6UI_Utils.SummonContextMenu
// 0x00B0 (0x00B0 - 0x0000)
struct S6UI_Utils_SummonContextMenu final
{
public:
	class UObject*                                WorldContextObject;                                // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FPointerEvent                          MouseEvent;                                        // 0x0008(0x0078)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	TSubclassOf<class UUserWidget>                ContentWidgetClass;                                // 0x0080(0x0008)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FS6UI_ContextMenu                      OutContextMenu;                                    // 0x0088(0x0020)(Parm, OutParm, ReferenceParm, ContainsInstancedReference, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x00A8(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1E7D[0x7];                                     // 0x00A9(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(S6UI_Utils_SummonContextMenu) == 0x000008, "Wrong alignment on S6UI_Utils_SummonContextMenu");
static_assert(sizeof(S6UI_Utils_SummonContextMenu) == 0x0000B0, "Wrong size on S6UI_Utils_SummonContextMenu");
static_assert(offsetof(S6UI_Utils_SummonContextMenu, WorldContextObject) == 0x000000, "Member 'S6UI_Utils_SummonContextMenu::WorldContextObject' has a wrong offset!");
static_assert(offsetof(S6UI_Utils_SummonContextMenu, MouseEvent) == 0x000008, "Member 'S6UI_Utils_SummonContextMenu::MouseEvent' has a wrong offset!");
static_assert(offsetof(S6UI_Utils_SummonContextMenu, ContentWidgetClass) == 0x000080, "Member 'S6UI_Utils_SummonContextMenu::ContentWidgetClass' has a wrong offset!");
static_assert(offsetof(S6UI_Utils_SummonContextMenu, OutContextMenu) == 0x000088, "Member 'S6UI_Utils_SummonContextMenu::OutContextMenu' has a wrong offset!");
static_assert(offsetof(S6UI_Utils_SummonContextMenu, ReturnValue) == 0x0000A8, "Member 'S6UI_Utils_SummonContextMenu::ReturnValue' has a wrong offset!");

// Function S6UICore.S6UI_Utils.SummonContextMenuAtPosition
// 0x0050 (0x0050 - 0x0000)
struct S6UI_Utils_SummonContextMenuAtPosition final
{
public:
	class UObject*                                WorldContextObject;                                // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWidget*                                ParentWidget;                                      // 0x0008(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                              Position;                                          // 0x0010(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UUserWidget>                ContentWidgetClass;                                // 0x0020(0x0008)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FS6UI_ContextMenu                      OutContextMenu;                                    // 0x0028(0x0020)(Parm, OutParm, ReferenceParm, ContainsInstancedReference, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0048(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1E7E[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(S6UI_Utils_SummonContextMenuAtPosition) == 0x000008, "Wrong alignment on S6UI_Utils_SummonContextMenuAtPosition");
static_assert(sizeof(S6UI_Utils_SummonContextMenuAtPosition) == 0x000050, "Wrong size on S6UI_Utils_SummonContextMenuAtPosition");
static_assert(offsetof(S6UI_Utils_SummonContextMenuAtPosition, WorldContextObject) == 0x000000, "Member 'S6UI_Utils_SummonContextMenuAtPosition::WorldContextObject' has a wrong offset!");
static_assert(offsetof(S6UI_Utils_SummonContextMenuAtPosition, ParentWidget) == 0x000008, "Member 'S6UI_Utils_SummonContextMenuAtPosition::ParentWidget' has a wrong offset!");
static_assert(offsetof(S6UI_Utils_SummonContextMenuAtPosition, Position) == 0x000010, "Member 'S6UI_Utils_SummonContextMenuAtPosition::Position' has a wrong offset!");
static_assert(offsetof(S6UI_Utils_SummonContextMenuAtPosition, ContentWidgetClass) == 0x000020, "Member 'S6UI_Utils_SummonContextMenuAtPosition::ContentWidgetClass' has a wrong offset!");
static_assert(offsetof(S6UI_Utils_SummonContextMenuAtPosition, OutContextMenu) == 0x000028, "Member 'S6UI_Utils_SummonContextMenuAtPosition::OutContextMenu' has a wrong offset!");
static_assert(offsetof(S6UI_Utils_SummonContextMenuAtPosition, ReturnValue) == 0x000048, "Member 'S6UI_Utils_SummonContextMenuAtPosition::ReturnValue' has a wrong offset!");

// Function S6UICore.S6UI_StateStatics.CreateInputMode_GameAndUI
// 0x0020 (0x0020 - 0x0000)
struct S6UI_StateStatics_CreateInputMode_GameAndUI final
{
public:
	class UWidget*                                WidgetToFocus;                                     // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ES6UI_MouseLockMode                           MouseLockMode;                                     // 0x0008(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bHideCursorDuringCapture;                          // 0x0009(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bShowCursor;                                       // 0x000A(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1E7F[0x1];                                     // 0x000B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS6UI_InputMode                        ReturnValue;                                       // 0x000C(0x0010)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_1E80[0x4];                                     // 0x001C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(S6UI_StateStatics_CreateInputMode_GameAndUI) == 0x000008, "Wrong alignment on S6UI_StateStatics_CreateInputMode_GameAndUI");
static_assert(sizeof(S6UI_StateStatics_CreateInputMode_GameAndUI) == 0x000020, "Wrong size on S6UI_StateStatics_CreateInputMode_GameAndUI");
static_assert(offsetof(S6UI_StateStatics_CreateInputMode_GameAndUI, WidgetToFocus) == 0x000000, "Member 'S6UI_StateStatics_CreateInputMode_GameAndUI::WidgetToFocus' has a wrong offset!");
static_assert(offsetof(S6UI_StateStatics_CreateInputMode_GameAndUI, MouseLockMode) == 0x000008, "Member 'S6UI_StateStatics_CreateInputMode_GameAndUI::MouseLockMode' has a wrong offset!");
static_assert(offsetof(S6UI_StateStatics_CreateInputMode_GameAndUI, bHideCursorDuringCapture) == 0x000009, "Member 'S6UI_StateStatics_CreateInputMode_GameAndUI::bHideCursorDuringCapture' has a wrong offset!");
static_assert(offsetof(S6UI_StateStatics_CreateInputMode_GameAndUI, bShowCursor) == 0x00000A, "Member 'S6UI_StateStatics_CreateInputMode_GameAndUI::bShowCursor' has a wrong offset!");
static_assert(offsetof(S6UI_StateStatics_CreateInputMode_GameAndUI, ReturnValue) == 0x00000C, "Member 'S6UI_StateStatics_CreateInputMode_GameAndUI::ReturnValue' has a wrong offset!");

// Function S6UICore.S6UI_StateStatics.CreateInputMode_GameOnly
// 0x0010 (0x0010 - 0x0000)
struct S6UI_StateStatics_CreateInputMode_GameOnly final
{
public:
	struct FS6UI_InputMode                        ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(S6UI_StateStatics_CreateInputMode_GameOnly) == 0x000004, "Wrong alignment on S6UI_StateStatics_CreateInputMode_GameOnly");
static_assert(sizeof(S6UI_StateStatics_CreateInputMode_GameOnly) == 0x000010, "Wrong size on S6UI_StateStatics_CreateInputMode_GameOnly");
static_assert(offsetof(S6UI_StateStatics_CreateInputMode_GameOnly, ReturnValue) == 0x000000, "Member 'S6UI_StateStatics_CreateInputMode_GameOnly::ReturnValue' has a wrong offset!");

// Function S6UICore.S6UI_StateStatics.CreateInputMode_UIOnly
// 0x0020 (0x0020 - 0x0000)
struct S6UI_StateStatics_CreateInputMode_UIOnly final
{
public:
	class UWidget*                                WidgetToFocus;                                     // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ES6UI_MouseLockMode                           MouseLockMode;                                     // 0x0008(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bShowCursor;                                       // 0x0009(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1E81[0x2];                                     // 0x000A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS6UI_InputMode                        ReturnValue;                                       // 0x000C(0x0010)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_1E82[0x4];                                     // 0x001C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(S6UI_StateStatics_CreateInputMode_UIOnly) == 0x000008, "Wrong alignment on S6UI_StateStatics_CreateInputMode_UIOnly");
static_assert(sizeof(S6UI_StateStatics_CreateInputMode_UIOnly) == 0x000020, "Wrong size on S6UI_StateStatics_CreateInputMode_UIOnly");
static_assert(offsetof(S6UI_StateStatics_CreateInputMode_UIOnly, WidgetToFocus) == 0x000000, "Member 'S6UI_StateStatics_CreateInputMode_UIOnly::WidgetToFocus' has a wrong offset!");
static_assert(offsetof(S6UI_StateStatics_CreateInputMode_UIOnly, MouseLockMode) == 0x000008, "Member 'S6UI_StateStatics_CreateInputMode_UIOnly::MouseLockMode' has a wrong offset!");
static_assert(offsetof(S6UI_StateStatics_CreateInputMode_UIOnly, bShowCursor) == 0x000009, "Member 'S6UI_StateStatics_CreateInputMode_UIOnly::bShowCursor' has a wrong offset!");
static_assert(offsetof(S6UI_StateStatics_CreateInputMode_UIOnly, ReturnValue) == 0x00000C, "Member 'S6UI_StateStatics_CreateInputMode_UIOnly::ReturnValue' has a wrong offset!");

// Function S6UICore.S6UI_StateStatics.PopState
// 0x0008 (0x0008 - 0x0000)
struct S6UI_StateStatics_PopState final
{
public:
	class US6UI_StateUserWidget*                  Widget;                                            // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(S6UI_StateStatics_PopState) == 0x000008, "Wrong alignment on S6UI_StateStatics_PopState");
static_assert(sizeof(S6UI_StateStatics_PopState) == 0x000008, "Wrong size on S6UI_StateStatics_PopState");
static_assert(offsetof(S6UI_StateStatics_PopState, Widget) == 0x000000, "Member 'S6UI_StateStatics_PopState::Widget' has a wrong offset!");

// Function S6UICore.S6UI_StateStatics.PushState
// 0x0008 (0x0008 - 0x0000)
struct S6UI_StateStatics_PushState final
{
public:
	class US6UI_StateUserWidget*                  Widget;                                            // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(S6UI_StateStatics_PushState) == 0x000008, "Wrong alignment on S6UI_StateStatics_PushState");
static_assert(sizeof(S6UI_StateStatics_PushState) == 0x000008, "Wrong size on S6UI_StateStatics_PushState");
static_assert(offsetof(S6UI_StateStatics_PushState, Widget) == 0x000000, "Member 'S6UI_StateStatics_PushState::Widget' has a wrong offset!");

// Function S6UICore.S6UI_WidgetPoolManager.GetWidgetFromPool
// 0x0038 (0x0038 - 0x0000)
struct S6UI_WidgetPoolManager_GetWidgetFromPool final
{
public:
	class UObject*                                Context;                                           // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftClassPtr<class UClass>                   WidgetClass;                                       // 0x0008(0x0028)(Parm, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UUserWidget*                            ReturnValue;                                       // 0x0030(0x0008)(ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(S6UI_WidgetPoolManager_GetWidgetFromPool) == 0x000008, "Wrong alignment on S6UI_WidgetPoolManager_GetWidgetFromPool");
static_assert(sizeof(S6UI_WidgetPoolManager_GetWidgetFromPool) == 0x000038, "Wrong size on S6UI_WidgetPoolManager_GetWidgetFromPool");
static_assert(offsetof(S6UI_WidgetPoolManager_GetWidgetFromPool, Context) == 0x000000, "Member 'S6UI_WidgetPoolManager_GetWidgetFromPool::Context' has a wrong offset!");
static_assert(offsetof(S6UI_WidgetPoolManager_GetWidgetFromPool, WidgetClass) == 0x000008, "Member 'S6UI_WidgetPoolManager_GetWidgetFromPool::WidgetClass' has a wrong offset!");
static_assert(offsetof(S6UI_WidgetPoolManager_GetWidgetFromPool, ReturnValue) == 0x000030, "Member 'S6UI_WidgetPoolManager_GetWidgetFromPool::ReturnValue' has a wrong offset!");

// Function S6UICore.S6UI_WidgetPoolManager.ProvisionPool
// 0x0038 (0x0038 - 0x0000)
struct S6UI_WidgetPoolManager_ProvisionPool final
{
public:
	class UObject*                                Context;                                           // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftClassPtr<class UClass>                   WidgetClass;                                       // 0x0008(0x0028)(Parm, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         TotalSizeOfWidgetsProvisioned;                     // 0x0030(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1E83[0x4];                                     // 0x0034(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(S6UI_WidgetPoolManager_ProvisionPool) == 0x000008, "Wrong alignment on S6UI_WidgetPoolManager_ProvisionPool");
static_assert(sizeof(S6UI_WidgetPoolManager_ProvisionPool) == 0x000038, "Wrong size on S6UI_WidgetPoolManager_ProvisionPool");
static_assert(offsetof(S6UI_WidgetPoolManager_ProvisionPool, Context) == 0x000000, "Member 'S6UI_WidgetPoolManager_ProvisionPool::Context' has a wrong offset!");
static_assert(offsetof(S6UI_WidgetPoolManager_ProvisionPool, WidgetClass) == 0x000008, "Member 'S6UI_WidgetPoolManager_ProvisionPool::WidgetClass' has a wrong offset!");
static_assert(offsetof(S6UI_WidgetPoolManager_ProvisionPool, TotalSizeOfWidgetsProvisioned) == 0x000030, "Member 'S6UI_WidgetPoolManager_ProvisionPool::TotalSizeOfWidgetsProvisioned' has a wrong offset!");

// Function S6UICore.S6UI_WidgetPoolManager.ReturnWidgetToPool
// 0x0008 (0x0008 - 0x0000)
struct S6UI_WidgetPoolManager_ReturnWidgetToPool final
{
public:
	class UUserWidget*                            WidgetToReturn;                                    // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(S6UI_WidgetPoolManager_ReturnWidgetToPool) == 0x000008, "Wrong alignment on S6UI_WidgetPoolManager_ReturnWidgetToPool");
static_assert(sizeof(S6UI_WidgetPoolManager_ReturnWidgetToPool) == 0x000008, "Wrong size on S6UI_WidgetPoolManager_ReturnWidgetToPool");
static_assert(offsetof(S6UI_WidgetPoolManager_ReturnWidgetToPool, WidgetToReturn) == 0x000000, "Member 'S6UI_WidgetPoolManager_ReturnWidgetToPool::WidgetToReturn' has a wrong offset!");

}

