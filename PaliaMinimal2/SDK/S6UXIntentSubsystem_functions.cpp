#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: S6UXIntentSubsystem

#include "Basic.hpp"

#include "S6UXIntentSubsystem_classes.hpp"
#include "S6UXIntentSubsystem_parameters.hpp"


namespace SDK
{

// Function S6UXIntentSubsystem.S6RegisterUXActivityFunctor.HandleUXIntentReceived
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// class US6UXIntentSubsystem*             UXIntentSubsystem                                      (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class US6UXIntent*                      UXIntent                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void US6RegisterUXActivityFunctor::HandleUXIntentReceived(class US6UXIntentSubsystem* UXIntentSubsystem, class US6UXIntent* UXIntent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("S6RegisterUXActivityFunctor", "HandleUXIntentReceived");

	Params::S6RegisterUXActivityFunctor_HandleUXIntentReceived Parms{};

	Parms.UXIntentSubsystem = UXIntentSubsystem;
	Parms.UXIntent = UXIntent;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function S6UXIntentSubsystem.S6UXIntentSubsystem.CanStartUXActivity
// (Final, BlueprintCosmetic, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TSoftClassPtr<class UClass>             UXIntentType                                           (ConstParm, Parm, OutParm, ReferenceParm, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool US6UXIntentSubsystem::CanStartUXActivity(TSoftClassPtr<class UClass>& UXIntentType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("S6UXIntentSubsystem", "CanStartUXActivity");

	Params::S6UXIntentSubsystem_CanStartUXActivity Parms{};

	Parms.UXIntentType = UXIntentType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function S6UXIntentSubsystem.S6UXIntentSubsystem.RegisterUXActivity
// (Final, BlueprintCosmetic, Native, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// TSoftClassPtr<class UClass>             UXIntentType                                           (ConstParm, Parm, OutParm, ReferenceParm, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TDelegate<void(class US6UXIntentSubsystem* UXIntentSubsystem, class US6UXIntent* UXIntent)>HandleUXIntentReceived                                 (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGuid                            ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FGuid US6UXIntentSubsystem::RegisterUXActivity(TSoftClassPtr<class UClass>& UXIntentType, TDelegate<void(class US6UXIntentSubsystem* UXIntentSubsystem, class US6UXIntent* UXIntent)>& HandleUXIntentReceived)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("S6UXIntentSubsystem", "RegisterUXActivity");

	Params::S6UXIntentSubsystem_RegisterUXActivity Parms{};

	Parms.UXIntentType = UXIntentType;
	Parms.HandleUXIntentReceived = HandleUXIntentReceived;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// DelegateFunction S6UXIntentSubsystem.S6UXIntentSubsystem.S6OnDifferentUXActivityRegistered__DelegateSignature
// (Public, Delegate, HasOutParams)
// Parameters:
// class US6UXIntentSubsystem*             UXIntentSubsystem                                      (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TSoftClassPtr<class UClass>             UXIntentType                                           (ConstParm, Parm, OutParm, ReferenceParm, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void US6UXIntentSubsystem::S6OnDifferentUXActivityRegistered__DelegateSignature(class US6UXIntentSubsystem* UXIntentSubsystem, TSoftClassPtr<class UClass>& UXIntentType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("S6UXIntentSubsystem", "S6OnDifferentUXActivityRegistered__DelegateSignature");

	Params::S6UXIntentSubsystem_S6OnDifferentUXActivityRegistered__DelegateSignature Parms{};

	Parms.UXIntentSubsystem = UXIntentSubsystem;
	Parms.UXIntentType = UXIntentType;

	UObject::ProcessEvent(Func, &Parms);
}


// DelegateFunction S6UXIntentSubsystem.S6UXIntentSubsystem.S6OnDifferentUXActivityRegistered_Multicast__DelegateSignature
// (MulticastDelegate, Public, Delegate, HasOutParams)
// Parameters:
// class US6UXIntentSubsystem*             UXIntentSubsystem                                      (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TSoftClassPtr<class UClass>             UXIntentType                                           (ConstParm, Parm, OutParm, ReferenceParm, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void US6UXIntentSubsystem::S6OnDifferentUXActivityRegistered_Multicast__DelegateSignature(class US6UXIntentSubsystem* UXIntentSubsystem, TSoftClassPtr<class UClass>& UXIntentType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("S6UXIntentSubsystem", "S6OnDifferentUXActivityRegistered_Multicast__DelegateSignature");

	Params::S6UXIntentSubsystem_S6OnDifferentUXActivityRegistered_Multicast__DelegateSignature Parms{};

	Parms.UXIntentSubsystem = UXIntentSubsystem;
	Parms.UXIntentType = UXIntentType;

	UObject::ProcessEvent(Func, &Parms);
}


// Function S6UXIntentSubsystem.S6UXIntentSubsystem.SubscribeToUXActivityChanges
// (Final, BlueprintCosmetic, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TSoftClassPtr<class UClass>             UXIntentType                                           (ConstParm, Parm, OutParm, ReferenceParm, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TDelegate<void(class US6UXIntentSubsystem* UXIntentSubsystem, TSoftClassPtr<class UClass>& UXIntentType)>HandleDifferentUXActivityRegistered                    (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void US6UXIntentSubsystem::SubscribeToUXActivityChanges(TSoftClassPtr<class UClass>& UXIntentType, TDelegate<void(class US6UXIntentSubsystem* UXIntentSubsystem, TSoftClassPtr<class UClass>& UXIntentType)>& HandleDifferentUXActivityRegistered)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("S6UXIntentSubsystem", "SubscribeToUXActivityChanges");

	Params::S6UXIntentSubsystem_SubscribeToUXActivityChanges Parms{};

	Parms.UXIntentType = UXIntentType;
	Parms.HandleDifferentUXActivityRegistered = HandleDifferentUXActivityRegistered;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function S6UXIntentSubsystem.S6UXIntentSubsystem.TryStartUXActivity
// (Final, BlueprintCosmetic, Native, Public, BlueprintCallable)
// Parameters:
// class US6UXIntent*                      UXIntent                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool US6UXIntentSubsystem::TryStartUXActivity(class US6UXIntent* UXIntent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("S6UXIntentSubsystem", "TryStartUXActivity");

	Params::S6UXIntentSubsystem_TryStartUXActivity Parms{};

	Parms.UXIntent = UXIntent;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function S6UXIntentSubsystem.S6UXIntentSubsystem.UnregisterUXActivity
// (Final, BlueprintCosmetic, Native, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// struct FGuid                            UXActivityHandle                                       (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool US6UXIntentSubsystem::UnregisterUXActivity(struct FGuid& UXActivityHandle)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("S6UXIntentSubsystem", "UnregisterUXActivity");

	Params::S6UXIntentSubsystem_UnregisterUXActivity Parms{};

	Parms.UXActivityHandle = std::move(UXActivityHandle);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function S6UXIntentSubsystem.S6UXIntentSubsystem.UnsubscribeFromUXActivityChanges
// (Final, BlueprintCosmetic, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TSoftClassPtr<class UClass>             UXIntentType                                           (ConstParm, Parm, OutParm, ReferenceParm, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TDelegate<void(class US6UXIntentSubsystem* UXIntentSubsystem, TSoftClassPtr<class UClass>& UXIntentType)>HandleDifferentUXActivityRegistered                    (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void US6UXIntentSubsystem::UnsubscribeFromUXActivityChanges(TSoftClassPtr<class UClass>& UXIntentType, TDelegate<void(class US6UXIntentSubsystem* UXIntentSubsystem, TSoftClassPtr<class UClass>& UXIntentType)>& HandleDifferentUXActivityRegistered)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("S6UXIntentSubsystem", "UnsubscribeFromUXActivityChanges");

	Params::S6UXIntentSubsystem_UnsubscribeFromUXActivityChanges Parms{};

	Parms.UXIntentType = UXIntentType;
	Parms.HandleDifferentUXActivityRegistered = HandleDifferentUXActivityRegistered;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}

}

