#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_LoadingScreen

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "ValeriaUI_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_LoadingScreen.WBP_LoadingScreen_C
// 0x0068 (0x0370 - 0x0308)
class UWBP_LoadingScreen_C final : public UVALUI_LoadingScreenUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0308(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UHorizontalBox*                         HBox_LoadingContainer;                             // 0x0310(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_Background;                                  // 0x0318(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_Blackbackground;                             // 0x0320(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UNamedSlot*                             NamedSlot_LoadingExtension;                        // 0x0328(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               Overlay_LoadingScreen;                             // 0x0330(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UVALUI_TextBlock_Styled*                Text_TipBody;                                      // 0x0338(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UVALUI_TextBlock_Styled*                Text_TipTitle;                                     // 0x0340(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_AnimatedLoading_C*                 WBP_AnimatedLoading;                               // 0x0348(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWidgetSwitcher*                        WidgetSwitcher;                                    // 0x0350(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWidgetSwitcher*                        WidgetSwitcher_LoadingContainer;                   // 0x0358(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	bool                                          FadedToBlack;                                      // 0x0360(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_134F[0x7];                                     // 0x0361(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        AudioFadeMultiplier;                               // 0x0368(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void AddLoadingExtension(class UUserWidget* Widget);
	void BndEvt__WBP_LoadingScreen_LoadingScreenBlackWidget_K2Node_ComponentBoundEvent_0_OnNoneToBlackAnimationPlayed__DelegateSignature(double Duration);
	void BndEvt__WBP_LoadingScreen_LoadingScreenBlackWidget_K2Node_ComponentBoundEvent_1_OnBlackToNoneAnimationPlayed__DelegateSignature(double Duration);
	void Destruct();
	void DisplayLoadingExtension(bool Display);
	void ExecuteUbergraph_WBP_LoadingScreen(int32 EntryPoint, class UTexture2D* K2Node_Event_Texture, struct FPaliaLoadingScreenTip& K2Node_Event_Tip, double K2Node_ComponentBoundEvent_Duration_1, double K2Node_ComponentBoundEvent_Duration, bool K2Node_Event_Display, bool Temp_bool_Variable, class UUserWidget* K2Node_Event_Widget, class UWidget* K2Node_Select_Default, class UPanelSlot* CallFunc_AddChild_ReturnValue);
	void HandleFadeAudioValues(double Duration, bool FadeToBlack, class UAkAudioEvent* Temp_object_Variable, double CallFunc_SelectFloat_ReturnValue, class UAkAudioEvent* Temp_object_Variable_1, bool Temp_bool_Variable, class UAkAudioEvent* K2Node_Select_Default, int32 CallFunc_AkEventGlobal_ReturnValue, double CallFunc_Multiply_DoubleDouble_ReturnValue, int32 CallFunc_FTrunc_ReturnValue, float CallFunc_SetRTPCValue_Value_ImplicitCast);
	void HandleSetBackgroundImage(class UTexture2D* Texture);
	void HandleSetLoadingScreenTip(struct FPaliaLoadingScreenTip& Tip);
	void ShowFadeToBlack();
	void ShowLoadingScreenBackground();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_LoadingScreen_C">();
	}
	static class UWBP_LoadingScreen_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_LoadingScreen_C>();
	}
};
static_assert(alignof(UWBP_LoadingScreen_C) == 0x000008, "Wrong alignment on UWBP_LoadingScreen_C");
static_assert(sizeof(UWBP_LoadingScreen_C) == 0x000370, "Wrong size on UWBP_LoadingScreen_C");
static_assert(offsetof(UWBP_LoadingScreen_C, UberGraphFrame) == 0x000308, "Member 'UWBP_LoadingScreen_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWBP_LoadingScreen_C, HBox_LoadingContainer) == 0x000310, "Member 'UWBP_LoadingScreen_C::HBox_LoadingContainer' has a wrong offset!");
static_assert(offsetof(UWBP_LoadingScreen_C, Image_Background) == 0x000318, "Member 'UWBP_LoadingScreen_C::Image_Background' has a wrong offset!");
static_assert(offsetof(UWBP_LoadingScreen_C, Image_Blackbackground) == 0x000320, "Member 'UWBP_LoadingScreen_C::Image_Blackbackground' has a wrong offset!");
static_assert(offsetof(UWBP_LoadingScreen_C, NamedSlot_LoadingExtension) == 0x000328, "Member 'UWBP_LoadingScreen_C::NamedSlot_LoadingExtension' has a wrong offset!");
static_assert(offsetof(UWBP_LoadingScreen_C, Overlay_LoadingScreen) == 0x000330, "Member 'UWBP_LoadingScreen_C::Overlay_LoadingScreen' has a wrong offset!");
static_assert(offsetof(UWBP_LoadingScreen_C, Text_TipBody) == 0x000338, "Member 'UWBP_LoadingScreen_C::Text_TipBody' has a wrong offset!");
static_assert(offsetof(UWBP_LoadingScreen_C, Text_TipTitle) == 0x000340, "Member 'UWBP_LoadingScreen_C::Text_TipTitle' has a wrong offset!");
static_assert(offsetof(UWBP_LoadingScreen_C, WBP_AnimatedLoading) == 0x000348, "Member 'UWBP_LoadingScreen_C::WBP_AnimatedLoading' has a wrong offset!");
static_assert(offsetof(UWBP_LoadingScreen_C, WidgetSwitcher) == 0x000350, "Member 'UWBP_LoadingScreen_C::WidgetSwitcher' has a wrong offset!");
static_assert(offsetof(UWBP_LoadingScreen_C, WidgetSwitcher_LoadingContainer) == 0x000358, "Member 'UWBP_LoadingScreen_C::WidgetSwitcher_LoadingContainer' has a wrong offset!");
static_assert(offsetof(UWBP_LoadingScreen_C, FadedToBlack) == 0x000360, "Member 'UWBP_LoadingScreen_C::FadedToBlack' has a wrong offset!");
static_assert(offsetof(UWBP_LoadingScreen_C, AudioFadeMultiplier) == 0x000368, "Member 'UWBP_LoadingScreen_C::AudioFadeMultiplier' has a wrong offset!");

}

