#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_Cooking_Hud_Recipe

#include "Basic.hpp"

#include "Palia_structs.hpp"
#include "UMG_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function WBP_Cooking_Hud_Recipe.WBP_Cooking_Hud_Recipe_C.ExecuteUbergraph_WBP_Cooking_Hud_Recipe
// 0x0008 (0x0008 - 0x0000)
struct WBP_Cooking_Hud_Recipe_C_ExecuteUbergraph_WBP_Cooking_Hud_Recipe final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Cooking_Hud_Recipe_C_ExecuteUbergraph_WBP_Cooking_Hud_Recipe) == 0x000004, "Wrong alignment on WBP_Cooking_Hud_Recipe_C_ExecuteUbergraph_WBP_Cooking_Hud_Recipe");
static_assert(sizeof(WBP_Cooking_Hud_Recipe_C_ExecuteUbergraph_WBP_Cooking_Hud_Recipe) == 0x000008, "Wrong size on WBP_Cooking_Hud_Recipe_C_ExecuteUbergraph_WBP_Cooking_Hud_Recipe");
static_assert(offsetof(WBP_Cooking_Hud_Recipe_C_ExecuteUbergraph_WBP_Cooking_Hud_Recipe, EntryPoint) == 0x000000, "Member 'WBP_Cooking_Hud_Recipe_C_ExecuteUbergraph_WBP_Cooking_Hud_Recipe::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_Cooking_Hud_Recipe_C_ExecuteUbergraph_WBP_Cooking_Hud_Recipe, K2Node_Event_IsDesignTime) == 0x000004, "Member 'WBP_Cooking_Hud_Recipe_C_ExecuteUbergraph_WBP_Cooking_Hud_Recipe::K2Node_Event_IsDesignTime' has a wrong offset!");

// Function WBP_Cooking_Hud_Recipe.WBP_Cooking_Hud_Recipe_C.GetRecipeCueState
// 0x0028 (0x0028 - 0x0000)
struct WBP_Cooking_Hud_Recipe_C_GetRecipeCueState final
{
public:
	EComplexRecipeCueState                        ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C8A[0x6];                                     // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UCookingSubsystem*                      CallFunc_GetGameInstanceSubsystem_ReturnValue;     // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	EComplexRecipeCueState                        CallFunc_GetCookingRecipeCueStateForHUD_ReturnValue; // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C8B[0x6];                                     // 0x0012(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UCookingSubsystem*                      CallFunc_GetGameInstanceSubsystem_ReturnValue_1;   // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	EComplexRecipeCueState                        CallFunc_GetCookingRecipeCueStateForCrafter_ReturnValue; // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Cooking_Hud_Recipe_C_GetRecipeCueState) == 0x000008, "Wrong alignment on WBP_Cooking_Hud_Recipe_C_GetRecipeCueState");
static_assert(sizeof(WBP_Cooking_Hud_Recipe_C_GetRecipeCueState) == 0x000028, "Wrong size on WBP_Cooking_Hud_Recipe_C_GetRecipeCueState");
static_assert(offsetof(WBP_Cooking_Hud_Recipe_C_GetRecipeCueState, ReturnValue) == 0x000000, "Member 'WBP_Cooking_Hud_Recipe_C_GetRecipeCueState::ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Cooking_Hud_Recipe_C_GetRecipeCueState, CallFunc_Greater_IntInt_ReturnValue) == 0x000001, "Member 'WBP_Cooking_Hud_Recipe_C_GetRecipeCueState::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Cooking_Hud_Recipe_C_GetRecipeCueState, CallFunc_GetGameInstanceSubsystem_ReturnValue) == 0x000008, "Member 'WBP_Cooking_Hud_Recipe_C_GetRecipeCueState::CallFunc_GetGameInstanceSubsystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Cooking_Hud_Recipe_C_GetRecipeCueState, CallFunc_GetCookingRecipeCueStateForHUD_ReturnValue) == 0x000010, "Member 'WBP_Cooking_Hud_Recipe_C_GetRecipeCueState::CallFunc_GetCookingRecipeCueStateForHUD_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Cooking_Hud_Recipe_C_GetRecipeCueState, CallFunc_IsValid_ReturnValue) == 0x000011, "Member 'WBP_Cooking_Hud_Recipe_C_GetRecipeCueState::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Cooking_Hud_Recipe_C_GetRecipeCueState, CallFunc_GetGameInstanceSubsystem_ReturnValue_1) == 0x000018, "Member 'WBP_Cooking_Hud_Recipe_C_GetRecipeCueState::CallFunc_GetGameInstanceSubsystem_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_Cooking_Hud_Recipe_C_GetRecipeCueState, CallFunc_GetCookingRecipeCueStateForCrafter_ReturnValue) == 0x000020, "Member 'WBP_Cooking_Hud_Recipe_C_GetRecipeCueState::CallFunc_GetCookingRecipeCueStateForCrafter_ReturnValue' has a wrong offset!");

// Function WBP_Cooking_Hud_Recipe.WBP_Cooking_Hud_Recipe_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct WBP_Cooking_Hud_Recipe_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Cooking_Hud_Recipe_C_PreConstruct) == 0x000001, "Wrong alignment on WBP_Cooking_Hud_Recipe_C_PreConstruct");
static_assert(sizeof(WBP_Cooking_Hud_Recipe_C_PreConstruct) == 0x000001, "Wrong size on WBP_Cooking_Hud_Recipe_C_PreConstruct");
static_assert(offsetof(WBP_Cooking_Hud_Recipe_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'WBP_Cooking_Hud_Recipe_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function WBP_Cooking_Hud_Recipe.WBP_Cooking_Hud_Recipe_C.Set from Product
// 0x0048 (0x0048 - 0x0000)
struct WBP_Cooking_Hud_Recipe_C_Set_from_Product final
{
public:
	struct FComplexRecipeProduct                  RecipeProduct;                                     // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, ContainsInstancedReference)
	bool                                          bCueMode;                                          // 0x0038(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C8C[0x3];                                     // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         RecipeIndex;                                       // 0x003C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             CallFunc_GetIconForIngredient_ReturnValue;         // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Cooking_Hud_Recipe_C_Set_from_Product) == 0x000008, "Wrong alignment on WBP_Cooking_Hud_Recipe_C_Set_from_Product");
static_assert(sizeof(WBP_Cooking_Hud_Recipe_C_Set_from_Product) == 0x000048, "Wrong size on WBP_Cooking_Hud_Recipe_C_Set_from_Product");
static_assert(offsetof(WBP_Cooking_Hud_Recipe_C_Set_from_Product, RecipeProduct) == 0x000000, "Member 'WBP_Cooking_Hud_Recipe_C_Set_from_Product::RecipeProduct' has a wrong offset!");
static_assert(offsetof(WBP_Cooking_Hud_Recipe_C_Set_from_Product, bCueMode) == 0x000038, "Member 'WBP_Cooking_Hud_Recipe_C_Set_from_Product::bCueMode' has a wrong offset!");
static_assert(offsetof(WBP_Cooking_Hud_Recipe_C_Set_from_Product, RecipeIndex) == 0x00003C, "Member 'WBP_Cooking_Hud_Recipe_C_Set_from_Product::RecipeIndex' has a wrong offset!");
static_assert(offsetof(WBP_Cooking_Hud_Recipe_C_Set_from_Product, CallFunc_GetIconForIngredient_ReturnValue) == 0x000040, "Member 'WBP_Cooking_Hud_Recipe_C_Set_from_Product::CallFunc_GetIconForIngredient_ReturnValue' has a wrong offset!");

// Function WBP_Cooking_Hud_Recipe.WBP_Cooking_Hud_Recipe_C.SetComplete
// 0x0010 (0x0010 - 0x0000)
struct WBP_Cooking_Hud_Recipe_C_SetComplete final
{
public:
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C8D[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_1;             // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C8E[0x3];                                     // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Cooking_Hud_Recipe_C_SetComplete) == 0x000004, "Wrong alignment on WBP_Cooking_Hud_Recipe_C_SetComplete");
static_assert(sizeof(WBP_Cooking_Hud_Recipe_C_SetComplete) == 0x000010, "Wrong size on WBP_Cooking_Hud_Recipe_C_SetComplete");
static_assert(offsetof(WBP_Cooking_Hud_Recipe_C_SetComplete, CallFunc_Greater_IntInt_ReturnValue) == 0x000000, "Member 'WBP_Cooking_Hud_Recipe_C_SetComplete::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Cooking_Hud_Recipe_C_SetComplete, Temp_int_Variable) == 0x000004, "Member 'WBP_Cooking_Hud_Recipe_C_SetComplete::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Cooking_Hud_Recipe_C_SetComplete, CallFunc_Greater_IntInt_ReturnValue_1) == 0x000008, "Member 'WBP_Cooking_Hud_Recipe_C_SetComplete::CallFunc_Greater_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_Cooking_Hud_Recipe_C_SetComplete, CallFunc_Subtract_IntInt_ReturnValue) == 0x00000C, "Member 'WBP_Cooking_Hud_Recipe_C_SetComplete::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");

// Function WBP_Cooking_Hud_Recipe.WBP_Cooking_Hud_Recipe_C.SetCrafter
// 0x0008 (0x0008 - 0x0000)
struct WBP_Cooking_Hud_Recipe_C_SetCrafter final
{
public:
	class UCrafterComponent*                      Param_CrafterComponent;                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Cooking_Hud_Recipe_C_SetCrafter) == 0x000008, "Wrong alignment on WBP_Cooking_Hud_Recipe_C_SetCrafter");
static_assert(sizeof(WBP_Cooking_Hud_Recipe_C_SetCrafter) == 0x000008, "Wrong size on WBP_Cooking_Hud_Recipe_C_SetCrafter");
static_assert(offsetof(WBP_Cooking_Hud_Recipe_C_SetCrafter, Param_CrafterComponent) == 0x000000, "Member 'WBP_Cooking_Hud_Recipe_C_SetCrafter::Param_CrafterComponent' has a wrong offset!");

// Function WBP_Cooking_Hud_Recipe.WBP_Cooking_Hud_Recipe_C.SetCrafterPersistId
// 0x0004 (0x0004 - 0x0000)
struct WBP_Cooking_Hud_Recipe_C_SetCrafterPersistId final
{
public:
	int32                                         Param_CrafterPersistId;                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Cooking_Hud_Recipe_C_SetCrafterPersistId) == 0x000004, "Wrong alignment on WBP_Cooking_Hud_Recipe_C_SetCrafterPersistId");
static_assert(sizeof(WBP_Cooking_Hud_Recipe_C_SetCrafterPersistId) == 0x000004, "Wrong size on WBP_Cooking_Hud_Recipe_C_SetCrafterPersistId");
static_assert(offsetof(WBP_Cooking_Hud_Recipe_C_SetCrafterPersistId, Param_CrafterPersistId) == 0x000000, "Member 'WBP_Cooking_Hud_Recipe_C_SetCrafterPersistId::Param_CrafterPersistId' has a wrong offset!");

// Function WBP_Cooking_Hud_Recipe.WBP_Cooking_Hud_Recipe_C.SetIngredientUsed
// 0x0010 (0x0010 - 0x0000)
struct WBP_Cooking_Hud_Recipe_C_SetIngredientUsed final
{
public:
	bool                                          FullyUsed;                                         // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C8F[0x2];                                     // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C90[0x3];                                     // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Cooking_Hud_Recipe_C_SetIngredientUsed) == 0x000004, "Wrong alignment on WBP_Cooking_Hud_Recipe_C_SetIngredientUsed");
static_assert(sizeof(WBP_Cooking_Hud_Recipe_C_SetIngredientUsed) == 0x000010, "Wrong size on WBP_Cooking_Hud_Recipe_C_SetIngredientUsed");
static_assert(offsetof(WBP_Cooking_Hud_Recipe_C_SetIngredientUsed, FullyUsed) == 0x000000, "Member 'WBP_Cooking_Hud_Recipe_C_SetIngredientUsed::FullyUsed' has a wrong offset!");
static_assert(offsetof(WBP_Cooking_Hud_Recipe_C_SetIngredientUsed, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000001, "Member 'WBP_Cooking_Hud_Recipe_C_SetIngredientUsed::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Cooking_Hud_Recipe_C_SetIngredientUsed, CallFunc_Subtract_IntInt_ReturnValue) == 0x000004, "Member 'WBP_Cooking_Hud_Recipe_C_SetIngredientUsed::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Cooking_Hud_Recipe_C_SetIngredientUsed, CallFunc_Greater_IntInt_ReturnValue) == 0x000008, "Member 'WBP_Cooking_Hud_Recipe_C_SetIngredientUsed::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Cooking_Hud_Recipe_C_SetIngredientUsed, Temp_int_Variable) == 0x00000C, "Member 'WBP_Cooking_Hud_Recipe_C_SetIngredientUsed::Temp_int_Variable' has a wrong offset!");

// Function WBP_Cooking_Hud_Recipe.WBP_Cooking_Hud_Recipe_C.SetIsMakingOnThisCrafter
// 0x0005 (0x0005 - 0x0000)
struct WBP_Cooking_Hud_Recipe_C_SetIsMakingOnThisCrafter final
{
public:
	bool                                          InIsMaking;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Cooking_Hud_Recipe_C_SetIsMakingOnThisCrafter) == 0x000001, "Wrong alignment on WBP_Cooking_Hud_Recipe_C_SetIsMakingOnThisCrafter");
static_assert(sizeof(WBP_Cooking_Hud_Recipe_C_SetIsMakingOnThisCrafter) == 0x000005, "Wrong size on WBP_Cooking_Hud_Recipe_C_SetIsMakingOnThisCrafter");
static_assert(offsetof(WBP_Cooking_Hud_Recipe_C_SetIsMakingOnThisCrafter, InIsMaking) == 0x000000, "Member 'WBP_Cooking_Hud_Recipe_C_SetIsMakingOnThisCrafter::InIsMaking' has a wrong offset!");
static_assert(offsetof(WBP_Cooking_Hud_Recipe_C_SetIsMakingOnThisCrafter, Temp_bool_Variable) == 0x000001, "Member 'WBP_Cooking_Hud_Recipe_C_SetIsMakingOnThisCrafter::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Cooking_Hud_Recipe_C_SetIsMakingOnThisCrafter, Temp_byte_Variable) == 0x000002, "Member 'WBP_Cooking_Hud_Recipe_C_SetIsMakingOnThisCrafter::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Cooking_Hud_Recipe_C_SetIsMakingOnThisCrafter, Temp_byte_Variable_1) == 0x000003, "Member 'WBP_Cooking_Hud_Recipe_C_SetIsMakingOnThisCrafter::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_Cooking_Hud_Recipe_C_SetIsMakingOnThisCrafter, K2Node_Select_Default) == 0x000004, "Member 'WBP_Cooking_Hud_Recipe_C_SetIsMakingOnThisCrafter::K2Node_Select_Default' has a wrong offset!");

// Function WBP_Cooking_Hud_Recipe.WBP_Cooking_Hud_Recipe_C.SetState
// 0x0001 (0x0001 - 0x0000)
struct WBP_Cooking_Hud_Recipe_C_SetState final
{
public:
	EComplexRecipeCueState                        State;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Cooking_Hud_Recipe_C_SetState) == 0x000001, "Wrong alignment on WBP_Cooking_Hud_Recipe_C_SetState");
static_assert(sizeof(WBP_Cooking_Hud_Recipe_C_SetState) == 0x000001, "Wrong size on WBP_Cooking_Hud_Recipe_C_SetState");
static_assert(offsetof(WBP_Cooking_Hud_Recipe_C_SetState, State) == 0x000000, "Member 'WBP_Cooking_Hud_Recipe_C_SetState::State' has a wrong offset!");

// Function WBP_Cooking_Hud_Recipe.WBP_Cooking_Hud_Recipe_C.UpdateCountText
// 0x00E0 (0x00E0 - 0x0000)
struct WBP_Cooking_Hud_Recipe_C_UpdateCountText final
{
public:
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C91[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	int64                                         CallFunc_Conv_IntToInt64_ReturnValue;              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int64                                         CallFunc_Conv_IntToInt64_ReturnValue_1;            // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0018(0x0050)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x0068(0x0050)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x00B8(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x00C8(0x0018)()
};
static_assert(alignof(WBP_Cooking_Hud_Recipe_C_UpdateCountText) == 0x000008, "Wrong alignment on WBP_Cooking_Hud_Recipe_C_UpdateCountText");
static_assert(sizeof(WBP_Cooking_Hud_Recipe_C_UpdateCountText) == 0x0000E0, "Wrong size on WBP_Cooking_Hud_Recipe_C_UpdateCountText");
static_assert(offsetof(WBP_Cooking_Hud_Recipe_C_UpdateCountText, CallFunc_Subtract_IntInt_ReturnValue) == 0x000000, "Member 'WBP_Cooking_Hud_Recipe_C_UpdateCountText::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Cooking_Hud_Recipe_C_UpdateCountText, CallFunc_Conv_IntToInt64_ReturnValue) == 0x000008, "Member 'WBP_Cooking_Hud_Recipe_C_UpdateCountText::CallFunc_Conv_IntToInt64_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Cooking_Hud_Recipe_C_UpdateCountText, CallFunc_Conv_IntToInt64_ReturnValue_1) == 0x000010, "Member 'WBP_Cooking_Hud_Recipe_C_UpdateCountText::CallFunc_Conv_IntToInt64_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_Cooking_Hud_Recipe_C_UpdateCountText, K2Node_MakeStruct_FormatArgumentData) == 0x000018, "Member 'WBP_Cooking_Hud_Recipe_C_UpdateCountText::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(WBP_Cooking_Hud_Recipe_C_UpdateCountText, K2Node_MakeStruct_FormatArgumentData_1) == 0x000068, "Member 'WBP_Cooking_Hud_Recipe_C_UpdateCountText::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(WBP_Cooking_Hud_Recipe_C_UpdateCountText, K2Node_MakeArray_Array) == 0x0000B8, "Member 'WBP_Cooking_Hud_Recipe_C_UpdateCountText::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(WBP_Cooking_Hud_Recipe_C_UpdateCountText, CallFunc_Format_ReturnValue) == 0x0000C8, "Member 'WBP_Cooking_Hud_Recipe_C_UpdateCountText::CallFunc_Format_ReturnValue' has a wrong offset!");

// Function WBP_Cooking_Hud_Recipe.WBP_Cooking_Hud_Recipe_C.UpdateCueMode
// 0x0004 (0x0004 - 0x0000)
struct WBP_Cooking_Hud_Recipe_C_UpdateCueMode final
{
public:
	bool                                          Temp_bool_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Cooking_Hud_Recipe_C_UpdateCueMode) == 0x000001, "Wrong alignment on WBP_Cooking_Hud_Recipe_C_UpdateCueMode");
static_assert(sizeof(WBP_Cooking_Hud_Recipe_C_UpdateCueMode) == 0x000004, "Wrong size on WBP_Cooking_Hud_Recipe_C_UpdateCueMode");
static_assert(offsetof(WBP_Cooking_Hud_Recipe_C_UpdateCueMode, Temp_bool_Variable) == 0x000000, "Member 'WBP_Cooking_Hud_Recipe_C_UpdateCueMode::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Cooking_Hud_Recipe_C_UpdateCueMode, Temp_byte_Variable) == 0x000001, "Member 'WBP_Cooking_Hud_Recipe_C_UpdateCueMode::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Cooking_Hud_Recipe_C_UpdateCueMode, Temp_byte_Variable_1) == 0x000002, "Member 'WBP_Cooking_Hud_Recipe_C_UpdateCueMode::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_Cooking_Hud_Recipe_C_UpdateCueMode, K2Node_Select_Default) == 0x000003, "Member 'WBP_Cooking_Hud_Recipe_C_UpdateCueMode::K2Node_Select_Default' has a wrong offset!");

// Function WBP_Cooking_Hud_Recipe.WBP_Cooking_Hud_Recipe_C.UpdateVisualState
// 0x0009 (0x0009 - 0x0000)
struct WBP_Cooking_Hud_Recipe_C_UpdateVisualState final
{
public:
	EComplexRecipeCueState                        RecipeCueState;                                    // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EComplexRecipeCueState                        CallFunc_GetRecipeCueState_ReturnValue;            // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_1;           // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Cooking_Hud_Recipe_C_UpdateVisualState) == 0x000001, "Wrong alignment on WBP_Cooking_Hud_Recipe_C_UpdateVisualState");
static_assert(sizeof(WBP_Cooking_Hud_Recipe_C_UpdateVisualState) == 0x000009, "Wrong size on WBP_Cooking_Hud_Recipe_C_UpdateVisualState");
static_assert(offsetof(WBP_Cooking_Hud_Recipe_C_UpdateVisualState, RecipeCueState) == 0x000000, "Member 'WBP_Cooking_Hud_Recipe_C_UpdateVisualState::RecipeCueState' has a wrong offset!");
static_assert(offsetof(WBP_Cooking_Hud_Recipe_C_UpdateVisualState, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000001, "Member 'WBP_Cooking_Hud_Recipe_C_UpdateVisualState::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Cooking_Hud_Recipe_C_UpdateVisualState, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000002, "Member 'WBP_Cooking_Hud_Recipe_C_UpdateVisualState::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_Cooking_Hud_Recipe_C_UpdateVisualState, K2Node_SwitchEnum_CmpSuccess) == 0x000003, "Member 'WBP_Cooking_Hud_Recipe_C_UpdateVisualState::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(WBP_Cooking_Hud_Recipe_C_UpdateVisualState, CallFunc_GetRecipeCueState_ReturnValue) == 0x000004, "Member 'WBP_Cooking_Hud_Recipe_C_UpdateVisualState::CallFunc_GetRecipeCueState_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Cooking_Hud_Recipe_C_UpdateVisualState, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000005, "Member 'WBP_Cooking_Hud_Recipe_C_UpdateVisualState::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Cooking_Hud_Recipe_C_UpdateVisualState, CallFunc_LessEqual_IntInt_ReturnValue_1) == 0x000006, "Member 'WBP_Cooking_Hud_Recipe_C_UpdateVisualState::CallFunc_LessEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_Cooking_Hud_Recipe_C_UpdateVisualState, CallFunc_BooleanAND_ReturnValue) == 0x000007, "Member 'WBP_Cooking_Hud_Recipe_C_UpdateVisualState::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Cooking_Hud_Recipe_C_UpdateVisualState, CallFunc_BooleanAND_ReturnValue_1) == 0x000008, "Member 'WBP_Cooking_Hud_Recipe_C_UpdateVisualState::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");

}

