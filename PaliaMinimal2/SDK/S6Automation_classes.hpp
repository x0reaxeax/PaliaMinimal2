#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: S6Automation

#include "Basic.hpp"

#include "CoreUObject_classes.hpp"
#include "GameplayTags_structs.hpp"
#include "S6Automation_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// Class S6Automation.S6Auto_Suite
// 0x0090 (0x00C0 - 0x0030)
class US6Auto_Suite final : public UPrimaryDataAsset
{
public:
	class FString                                 SuiteId;                                           // 0x0030(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, AssetRegistrySearchable, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIsEditorOnlyAutomation;                           // 0x0040(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, AssetRegistrySearchable, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2F99[0x7];                                     // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSubclassOf<class US6Auto_SuiteBlackboard>    BlackboardClass;                                   // 0x0048(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FS6Auto_SuiteStep>              Steps;                                             // 0x0050(0x0010)(Edit, BlueprintVisible, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	class FString                                 Name_S6Auto_Suite;                                 // 0x0060(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Description;                                       // 0x0070(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class FString>                         Teams;                                             // 0x0080(0x0010)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<class FString>                         Watchers;                                          // 0x0090(0x0010)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	struct FGameplayTagContainer                  Tags;                                              // 0x00A0(0x0020)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"S6Auto_Suite">();
	}
	static class US6Auto_Suite* GetDefaultObj()
	{
		return GetDefaultObjImpl<US6Auto_Suite>();
	}
};
static_assert(alignof(US6Auto_Suite) == 0x000008, "Wrong alignment on US6Auto_Suite");
static_assert(sizeof(US6Auto_Suite) == 0x0000C0, "Wrong size on US6Auto_Suite");
static_assert(offsetof(US6Auto_Suite, SuiteId) == 0x000030, "Member 'US6Auto_Suite::SuiteId' has a wrong offset!");
static_assert(offsetof(US6Auto_Suite, bIsEditorOnlyAutomation) == 0x000040, "Member 'US6Auto_Suite::bIsEditorOnlyAutomation' has a wrong offset!");
static_assert(offsetof(US6Auto_Suite, BlackboardClass) == 0x000048, "Member 'US6Auto_Suite::BlackboardClass' has a wrong offset!");
static_assert(offsetof(US6Auto_Suite, Steps) == 0x000050, "Member 'US6Auto_Suite::Steps' has a wrong offset!");
static_assert(offsetof(US6Auto_Suite, Name_S6Auto_Suite) == 0x000060, "Member 'US6Auto_Suite::Name_S6Auto_Suite' has a wrong offset!");
static_assert(offsetof(US6Auto_Suite, Description) == 0x000070, "Member 'US6Auto_Suite::Description' has a wrong offset!");
static_assert(offsetof(US6Auto_Suite, Teams) == 0x000080, "Member 'US6Auto_Suite::Teams' has a wrong offset!");
static_assert(offsetof(US6Auto_Suite, Watchers) == 0x000090, "Member 'US6Auto_Suite::Watchers' has a wrong offset!");
static_assert(offsetof(US6Auto_Suite, Tags) == 0x0000A0, "Member 'US6Auto_Suite::Tags' has a wrong offset!");

// Class S6Automation.S6Auto_SuiteSubsystem
// 0x0100 (0x0130 - 0x0030)
class US6Auto_SuiteSubsystem final : public UGameInstanceSubsystem
{
public:
	uint8                                         Pad_2F9A[0x8];                                     // 0x0030(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS6Auto_SuiteCollection                SuiteCollection;                                   // 0x0038(0x0010)(NativeAccessSpecifierPrivate)
	TArray<class US6Auto_SuiteStepScript*>        ScriptObjects;                                     // 0x0048(0x0010)(ZeroConstructor, Transient, NativeAccessSpecifierPrivate)
	class US6Auto_SuiteBlackboard*                Blackboard;                                        // 0x0058(0x0008)(ZeroConstructor, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_2F9B[0xD0];                                    // 0x0060(0x00D0)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void RunSuites(TArray<class US6Auto_Suite*>& Suites);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"S6Auto_SuiteSubsystem">();
	}
	static class US6Auto_SuiteSubsystem* GetDefaultObj()
	{
		return GetDefaultObjImpl<US6Auto_SuiteSubsystem>();
	}
};
static_assert(alignof(US6Auto_SuiteSubsystem) == 0x000008, "Wrong alignment on US6Auto_SuiteSubsystem");
static_assert(sizeof(US6Auto_SuiteSubsystem) == 0x000130, "Wrong size on US6Auto_SuiteSubsystem");
static_assert(offsetof(US6Auto_SuiteSubsystem, SuiteCollection) == 0x000038, "Member 'US6Auto_SuiteSubsystem::SuiteCollection' has a wrong offset!");
static_assert(offsetof(US6Auto_SuiteSubsystem, ScriptObjects) == 0x000048, "Member 'US6Auto_SuiteSubsystem::ScriptObjects' has a wrong offset!");
static_assert(offsetof(US6Auto_SuiteSubsystem, Blackboard) == 0x000058, "Member 'US6Auto_SuiteSubsystem::Blackboard' has a wrong offset!");

// Class S6Automation.S6Auto_SuiteBlackboard
// 0x0000 (0x0028 - 0x0028)
class US6Auto_SuiteBlackboard final : public UObject
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"S6Auto_SuiteBlackboard">();
	}
	static class US6Auto_SuiteBlackboard* GetDefaultObj()
	{
		return GetDefaultObjImpl<US6Auto_SuiteBlackboard>();
	}
};
static_assert(alignof(US6Auto_SuiteBlackboard) == 0x000008, "Wrong alignment on US6Auto_SuiteBlackboard");
static_assert(sizeof(US6Auto_SuiteBlackboard) == 0x000028, "Wrong size on US6Auto_SuiteBlackboard");

// Class S6Automation.S6Auto_SuiteStepPayload
// 0x0000 (0x0028 - 0x0028)
class US6Auto_SuiteStepPayload final : public UObject
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"S6Auto_SuiteStepPayload">();
	}
	static class US6Auto_SuiteStepPayload* GetDefaultObj()
	{
		return GetDefaultObjImpl<US6Auto_SuiteStepPayload>();
	}
};
static_assert(alignof(US6Auto_SuiteStepPayload) == 0x000008, "Wrong alignment on US6Auto_SuiteStepPayload");
static_assert(sizeof(US6Auto_SuiteStepPayload) == 0x000028, "Wrong size on US6Auto_SuiteStepPayload");

// Class S6Automation.S6Auto_SuiteStepScript
// 0x0030 (0x0058 - 0x0028)
class US6Auto_SuiteStepScript final : public UObject
{
public:
	class US6Auto_SuiteStepPayload*               Payload;                                           // 0x0028(0x0008)(Edit, BlueprintVisible, ZeroConstructor, Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class US6Auto_SuiteBlackboard*                Blackboard;                                        // 0x0030(0x0008)(Edit, BlueprintVisible, ZeroConstructor, Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_2F9C[0x20];                                    // 0x0038(0x0020)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void MarkStepCompleted();
	void MarkStepFailed(const class FString& ErrorMessage);
	void StartStep();

	class FString GetScriptDisplayName(class US6Auto_SuiteStepPayload* ScriptPayload) const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"S6Auto_SuiteStepScript">();
	}
	static class US6Auto_SuiteStepScript* GetDefaultObj()
	{
		return GetDefaultObjImpl<US6Auto_SuiteStepScript>();
	}
};
static_assert(alignof(US6Auto_SuiteStepScript) == 0x000008, "Wrong alignment on US6Auto_SuiteStepScript");
static_assert(sizeof(US6Auto_SuiteStepScript) == 0x000058, "Wrong size on US6Auto_SuiteStepScript");
static_assert(offsetof(US6Auto_SuiteStepScript, Payload) == 0x000028, "Member 'US6Auto_SuiteStepScript::Payload' has a wrong offset!");
static_assert(offsetof(US6Auto_SuiteStepScript, Blackboard) == 0x000030, "Member 'US6Auto_SuiteStepScript::Blackboard' has a wrong offset!");

// Class S6Automation.S6AutoStatics
// 0x0000 (0x0028 - 0x0028)
class US6AutoStatics final : public UBlueprintFunctionLibrary
{
public:
	static TArray<TSoftObjectPtr<class US6Auto_Suite>> GetAllSuites();
	static TArray<TSoftObjectPtr<class US6Auto_Suite>> GetSuitesFromAssetName(class FName& SuiteAssetName);
	static TArray<TSoftObjectPtr<class US6Auto_Suite>> GetSuitesFromId(const class FString& SuiteId);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"S6AutoStatics">();
	}
	static class US6AutoStatics* GetDefaultObj()
	{
		return GetDefaultObjImpl<US6AutoStatics>();
	}
};
static_assert(alignof(US6AutoStatics) == 0x000008, "Wrong alignment on US6AutoStatics");
static_assert(sizeof(US6AutoStatics) == 0x000028, "Wrong size on US6AutoStatics");

}

