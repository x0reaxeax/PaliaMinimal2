#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: KeyRebinding

#include "Basic.hpp"

#include "KeyRebinding_structs.hpp"
#include "GameplayTags_structs.hpp"
#include "CommonInput_structs.hpp"
#include "InputCore_structs.hpp"
#include "SlateCore_structs.hpp"


namespace SDK::Params
{

// DelegateFunction KeyRebinding.BindingKeyListenerWidget.OnAnyKeyTriggered__DelegateSignature
// 0x0030 (0x0030 - 0x0000)
struct BindingKeyListenerWidget_OnAnyKeyTriggered__DelegateSignature final
{
public:
	struct FKeyRebind_InputKey                    InTriggeredKey;                                    // 0x0000(0x0030)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(BindingKeyListenerWidget_OnAnyKeyTriggered__DelegateSignature) == 0x000008, "Wrong alignment on BindingKeyListenerWidget_OnAnyKeyTriggered__DelegateSignature");
static_assert(sizeof(BindingKeyListenerWidget_OnAnyKeyTriggered__DelegateSignature) == 0x000030, "Wrong size on BindingKeyListenerWidget_OnAnyKeyTriggered__DelegateSignature");
static_assert(offsetof(BindingKeyListenerWidget_OnAnyKeyTriggered__DelegateSignature, InTriggeredKey) == 0x000000, "Member 'BindingKeyListenerWidget_OnAnyKeyTriggered__DelegateSignature::InTriggeredKey' has a wrong offset!");

// Function KeyRebinding.BindingKeyListenerWidget.GetPlayerInputKey
// 0x0030 (0x0030 - 0x0000)
struct BindingKeyListenerWidget_GetPlayerInputKey final
{
public:
	struct FKeyRebind_InputKey                    ReturnValue;                                       // 0x0000(0x0030)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(BindingKeyListenerWidget_GetPlayerInputKey) == 0x000008, "Wrong alignment on BindingKeyListenerWidget_GetPlayerInputKey");
static_assert(sizeof(BindingKeyListenerWidget_GetPlayerInputKey) == 0x000030, "Wrong size on BindingKeyListenerWidget_GetPlayerInputKey");
static_assert(offsetof(BindingKeyListenerWidget_GetPlayerInputKey, ReturnValue) == 0x000000, "Member 'BindingKeyListenerWidget_GetPlayerInputKey::ReturnValue' has a wrong offset!");

// Function KeyRebinding.CommonInputActionWidget.HandleInputMethodChanged
// 0x0001 (0x0001 - 0x0000)
struct CommonInputActionWidget_HandleInputMethodChanged final
{
public:
	ECommonInputType                              InInputType;                                       // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(CommonInputActionWidget_HandleInputMethodChanged) == 0x000001, "Wrong alignment on CommonInputActionWidget_HandleInputMethodChanged");
static_assert(sizeof(CommonInputActionWidget_HandleInputMethodChanged) == 0x000001, "Wrong size on CommonInputActionWidget_HandleInputMethodChanged");
static_assert(offsetof(CommonInputActionWidget_HandleInputMethodChanged, InInputType) == 0x000000, "Member 'CommonInputActionWidget_HandleInputMethodChanged::InInputType' has a wrong offset!");

// Function KeyRebinding.CommonInputActionWidget.K2_UpdateActionWidget
// 0x0001 (0x0001 - 0x0000)
struct CommonInputActionWidget_K2_UpdateActionWidget final
{
public:
	ECommonInputType                              InInputType;                                       // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(CommonInputActionWidget_K2_UpdateActionWidget) == 0x000001, "Wrong alignment on CommonInputActionWidget_K2_UpdateActionWidget");
static_assert(sizeof(CommonInputActionWidget_K2_UpdateActionWidget) == 0x000001, "Wrong size on CommonInputActionWidget_K2_UpdateActionWidget");
static_assert(offsetof(CommonInputActionWidget_K2_UpdateActionWidget, InInputType) == 0x000000, "Member 'CommonInputActionWidget_K2_UpdateActionWidget::InInputType' has a wrong offset!");

// Function KeyRebinding.CommonInputActionWidget.SetDefaultInputMappingContext
// 0x0008 (0x0008 - 0x0000)
struct CommonInputActionWidget_SetDefaultInputMappingContext final
{
public:
	class UInputMappingContext*                   InIMC;                                             // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(CommonInputActionWidget_SetDefaultInputMappingContext) == 0x000008, "Wrong alignment on CommonInputActionWidget_SetDefaultInputMappingContext");
static_assert(sizeof(CommonInputActionWidget_SetDefaultInputMappingContext) == 0x000008, "Wrong size on CommonInputActionWidget_SetDefaultInputMappingContext");
static_assert(offsetof(CommonInputActionWidget_SetDefaultInputMappingContext, InIMC) == 0x000000, "Member 'CommonInputActionWidget_SetDefaultInputMappingContext::InIMC' has a wrong offset!");

// Function KeyRebinding.CommonInputActionWidget.SetEnhancedInputAction
// 0x0008 (0x0008 - 0x0000)
struct CommonInputActionWidget_SetEnhancedInputAction final
{
public:
	class UInputAction*                           InInputAction;                                     // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(CommonInputActionWidget_SetEnhancedInputAction) == 0x000008, "Wrong alignment on CommonInputActionWidget_SetEnhancedInputAction");
static_assert(sizeof(CommonInputActionWidget_SetEnhancedInputAction) == 0x000008, "Wrong size on CommonInputActionWidget_SetEnhancedInputAction");
static_assert(offsetof(CommonInputActionWidget_SetEnhancedInputAction, InInputAction) == 0x000000, "Member 'CommonInputActionWidget_SetEnhancedInputAction::InInputAction' has a wrong offset!");

// Function KeyRebinding.CommonInputActionWidget.UpdateWidgetBySpecialGameplayTag
// 0x0008 (0x0008 - 0x0000)
struct CommonInputActionWidget_UpdateWidgetBySpecialGameplayTag final
{
public:
	struct FGameplayTag                           GameplayTag;                                       // 0x0000(0x0008)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(CommonInputActionWidget_UpdateWidgetBySpecialGameplayTag) == 0x000004, "Wrong alignment on CommonInputActionWidget_UpdateWidgetBySpecialGameplayTag");
static_assert(sizeof(CommonInputActionWidget_UpdateWidgetBySpecialGameplayTag) == 0x000008, "Wrong size on CommonInputActionWidget_UpdateWidgetBySpecialGameplayTag");
static_assert(offsetof(CommonInputActionWidget_UpdateWidgetBySpecialGameplayTag, GameplayTag) == 0x000000, "Member 'CommonInputActionWidget_UpdateWidgetBySpecialGameplayTag::GameplayTag' has a wrong offset!");

// Function KeyRebinding.KeyRebindGroupEntryWidget.InitializeRebindKey
// 0x0010 (0x0010 - 0x0000)
struct KeyRebindGroupEntryWidget_InitializeRebindKey final
{
public:
	const class UWidget*                          Widget;                                            // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EKeyRebind_KeySlot                            InSlotNum;                                         // 0x0008(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1E94[0x7];                                     // 0x0009(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(KeyRebindGroupEntryWidget_InitializeRebindKey) == 0x000008, "Wrong alignment on KeyRebindGroupEntryWidget_InitializeRebindKey");
static_assert(sizeof(KeyRebindGroupEntryWidget_InitializeRebindKey) == 0x000010, "Wrong size on KeyRebindGroupEntryWidget_InitializeRebindKey");
static_assert(offsetof(KeyRebindGroupEntryWidget_InitializeRebindKey, Widget) == 0x000000, "Member 'KeyRebindGroupEntryWidget_InitializeRebindKey::Widget' has a wrong offset!");
static_assert(offsetof(KeyRebindGroupEntryWidget_InitializeRebindKey, InSlotNum) == 0x000008, "Member 'KeyRebindGroupEntryWidget_InitializeRebindKey::InSlotNum' has a wrong offset!");

// Function KeyRebinding.KeyRebindGroupEntryWidget.InitializeUnbindKey
// 0x0010 (0x0010 - 0x0000)
struct KeyRebindGroupEntryWidget_InitializeUnbindKey final
{
public:
	const class UWidget*                          Widget;                                            // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EKeyRebind_KeySlot                            InSlotNum;                                         // 0x0008(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1E95[0x7];                                     // 0x0009(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(KeyRebindGroupEntryWidget_InitializeUnbindKey) == 0x000008, "Wrong alignment on KeyRebindGroupEntryWidget_InitializeUnbindKey");
static_assert(sizeof(KeyRebindGroupEntryWidget_InitializeUnbindKey) == 0x000010, "Wrong size on KeyRebindGroupEntryWidget_InitializeUnbindKey");
static_assert(offsetof(KeyRebindGroupEntryWidget_InitializeUnbindKey, Widget) == 0x000000, "Member 'KeyRebindGroupEntryWidget_InitializeUnbindKey::Widget' has a wrong offset!");
static_assert(offsetof(KeyRebindGroupEntryWidget_InitializeUnbindKey, InSlotNum) == 0x000008, "Member 'KeyRebindGroupEntryWidget_InitializeUnbindKey::InSlotNum' has a wrong offset!");

// Function KeyRebinding.KeyRebindGroupEntryWidget.IsInputActionMatched
// 0x0010 (0x0010 - 0x0000)
struct KeyRebindGroupEntryWidget_IsInputActionMatched final
{
public:
	const class UInputAction*                     InputAction;                                       // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1E96[0x7];                                     // 0x0009(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(KeyRebindGroupEntryWidget_IsInputActionMatched) == 0x000008, "Wrong alignment on KeyRebindGroupEntryWidget_IsInputActionMatched");
static_assert(sizeof(KeyRebindGroupEntryWidget_IsInputActionMatched) == 0x000010, "Wrong size on KeyRebindGroupEntryWidget_IsInputActionMatched");
static_assert(offsetof(KeyRebindGroupEntryWidget_IsInputActionMatched, InputAction) == 0x000000, "Member 'KeyRebindGroupEntryWidget_IsInputActionMatched::InputAction' has a wrong offset!");
static_assert(offsetof(KeyRebindGroupEntryWidget_IsInputActionMatched, ReturnValue) == 0x000008, "Member 'KeyRebindGroupEntryWidget_IsInputActionMatched::ReturnValue' has a wrong offset!");

// Function KeyRebinding.KeyRebindGroupEntryWidget.OnIconRefreshed
// 0x0010 (0x0010 - 0x0000)
struct KeyRebindGroupEntryWidget_OnIconRefreshed final
{
public:
	TArray<struct FInputKeysIcon>                 RefreshIcons;                                      // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(KeyRebindGroupEntryWidget_OnIconRefreshed) == 0x000008, "Wrong alignment on KeyRebindGroupEntryWidget_OnIconRefreshed");
static_assert(sizeof(KeyRebindGroupEntryWidget_OnIconRefreshed) == 0x000010, "Wrong size on KeyRebindGroupEntryWidget_OnIconRefreshed");
static_assert(offsetof(KeyRebindGroupEntryWidget_OnIconRefreshed, RefreshIcons) == 0x000000, "Member 'KeyRebindGroupEntryWidget_OnIconRefreshed::RefreshIcons' has a wrong offset!");

// Function KeyRebinding.KeyRebindGroupEntryWidget.GetKeyRebindEntryDesc
// 0x0018 (0x0018 - 0x0000)
struct KeyRebindGroupEntryWidget_GetKeyRebindEntryDesc final
{
public:
	class FText                                   ReturnValue;                                       // 0x0000(0x0018)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(KeyRebindGroupEntryWidget_GetKeyRebindEntryDesc) == 0x000008, "Wrong alignment on KeyRebindGroupEntryWidget_GetKeyRebindEntryDesc");
static_assert(sizeof(KeyRebindGroupEntryWidget_GetKeyRebindEntryDesc) == 0x000018, "Wrong size on KeyRebindGroupEntryWidget_GetKeyRebindEntryDesc");
static_assert(offsetof(KeyRebindGroupEntryWidget_GetKeyRebindEntryDesc, ReturnValue) == 0x000000, "Member 'KeyRebindGroupEntryWidget_GetKeyRebindEntryDesc::ReturnValue' has a wrong offset!");

// Function KeyRebinding.KeyRebindGroupEntryWidget.GetKeyRebindEntryDescWithCore
// 0x0018 (0x0018 - 0x0000)
struct KeyRebindGroupEntryWidget_GetKeyRebindEntryDescWithCore final
{
public:
	class FText                                   ReturnValue;                                       // 0x0000(0x0018)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(KeyRebindGroupEntryWidget_GetKeyRebindEntryDescWithCore) == 0x000008, "Wrong alignment on KeyRebindGroupEntryWidget_GetKeyRebindEntryDescWithCore");
static_assert(sizeof(KeyRebindGroupEntryWidget_GetKeyRebindEntryDescWithCore) == 0x000018, "Wrong size on KeyRebindGroupEntryWidget_GetKeyRebindEntryDescWithCore");
static_assert(offsetof(KeyRebindGroupEntryWidget_GetKeyRebindEntryDescWithCore, ReturnValue) == 0x000000, "Member 'KeyRebindGroupEntryWidget_GetKeyRebindEntryDescWithCore::ReturnValue' has a wrong offset!");

// Function KeyRebinding.KeyRebindGroupWidget.IsEqualGroup
// 0x0008 (0x0008 - 0x0000)
struct KeyRebindGroupWidget_IsEqualGroup final
{
public:
	int32                                         InGroup;                                           // 0x0000(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1E99[0x3];                                     // 0x0005(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(KeyRebindGroupWidget_IsEqualGroup) == 0x000004, "Wrong alignment on KeyRebindGroupWidget_IsEqualGroup");
static_assert(sizeof(KeyRebindGroupWidget_IsEqualGroup) == 0x000008, "Wrong size on KeyRebindGroupWidget_IsEqualGroup");
static_assert(offsetof(KeyRebindGroupWidget_IsEqualGroup, InGroup) == 0x000000, "Member 'KeyRebindGroupWidget_IsEqualGroup::InGroup' has a wrong offset!");
static_assert(offsetof(KeyRebindGroupWidget_IsEqualGroup, ReturnValue) == 0x000004, "Member 'KeyRebindGroupWidget_IsEqualGroup::ReturnValue' has a wrong offset!");

// Function KeyRebinding.KeyRebindingSubsystem.AttemptRebinding
// 0x00C0 (0x00C0 - 0x0000)
struct KeyRebindingSubsystem_AttemptRebinding final
{
public:
	const class UInputAction*                     InputAction;                                       // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EKeyRebind_KeySlot                            Slot;                                              // 0x0008(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1E9D[0x7];                                     // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKeyRebind_InputKey                    Keys;                                              // 0x0010(0x0030)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	ECommonInputType                              InputType;                                         // 0x0040(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1E9E[0x7];                                     // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKeyRebind_BindingResult               OutResult;                                         // 0x0048(0x0070)(Parm, OutParm, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x00B8(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1E9F[0x7];                                     // 0x00B9(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(KeyRebindingSubsystem_AttemptRebinding) == 0x000008, "Wrong alignment on KeyRebindingSubsystem_AttemptRebinding");
static_assert(sizeof(KeyRebindingSubsystem_AttemptRebinding) == 0x0000C0, "Wrong size on KeyRebindingSubsystem_AttemptRebinding");
static_assert(offsetof(KeyRebindingSubsystem_AttemptRebinding, InputAction) == 0x000000, "Member 'KeyRebindingSubsystem_AttemptRebinding::InputAction' has a wrong offset!");
static_assert(offsetof(KeyRebindingSubsystem_AttemptRebinding, Slot) == 0x000008, "Member 'KeyRebindingSubsystem_AttemptRebinding::Slot' has a wrong offset!");
static_assert(offsetof(KeyRebindingSubsystem_AttemptRebinding, Keys) == 0x000010, "Member 'KeyRebindingSubsystem_AttemptRebinding::Keys' has a wrong offset!");
static_assert(offsetof(KeyRebindingSubsystem_AttemptRebinding, InputType) == 0x000040, "Member 'KeyRebindingSubsystem_AttemptRebinding::InputType' has a wrong offset!");
static_assert(offsetof(KeyRebindingSubsystem_AttemptRebinding, OutResult) == 0x000048, "Member 'KeyRebindingSubsystem_AttemptRebinding::OutResult' has a wrong offset!");
static_assert(offsetof(KeyRebindingSubsystem_AttemptRebinding, ReturnValue) == 0x0000B8, "Member 'KeyRebindingSubsystem_AttemptRebinding::ReturnValue' has a wrong offset!");

// Function KeyRebinding.KeyRebindingSubsystem.AttemptUnbinding
// 0x0048 (0x0048 - 0x0000)
struct KeyRebindingSubsystem_AttemptUnbinding final
{
public:
	const class UInputAction*                     InputAction;                                       // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EKeyRebind_KeySlot                            Slot;                                              // 0x0008(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ECommonInputType                              InputType;                                         // 0x0009(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1EA0[0x6];                                     // 0x000A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKeyRebind_UnbindingResult             OutResult;                                         // 0x0010(0x0030)(Parm, OutParm, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0040(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1EA1[0x7];                                     // 0x0041(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(KeyRebindingSubsystem_AttemptUnbinding) == 0x000008, "Wrong alignment on KeyRebindingSubsystem_AttemptUnbinding");
static_assert(sizeof(KeyRebindingSubsystem_AttemptUnbinding) == 0x000048, "Wrong size on KeyRebindingSubsystem_AttemptUnbinding");
static_assert(offsetof(KeyRebindingSubsystem_AttemptUnbinding, InputAction) == 0x000000, "Member 'KeyRebindingSubsystem_AttemptUnbinding::InputAction' has a wrong offset!");
static_assert(offsetof(KeyRebindingSubsystem_AttemptUnbinding, Slot) == 0x000008, "Member 'KeyRebindingSubsystem_AttemptUnbinding::Slot' has a wrong offset!");
static_assert(offsetof(KeyRebindingSubsystem_AttemptUnbinding, InputType) == 0x000009, "Member 'KeyRebindingSubsystem_AttemptUnbinding::InputType' has a wrong offset!");
static_assert(offsetof(KeyRebindingSubsystem_AttemptUnbinding, OutResult) == 0x000010, "Member 'KeyRebindingSubsystem_AttemptUnbinding::OutResult' has a wrong offset!");
static_assert(offsetof(KeyRebindingSubsystem_AttemptUnbinding, ReturnValue) == 0x000040, "Member 'KeyRebindingSubsystem_AttemptUnbinding::ReturnValue' has a wrong offset!");

// DelegateFunction KeyRebinding.KeyRebindingSubsystem.KeyRebindingResultDelegate__DelegateSignature
// 0x0078 (0x0078 - 0x0000)
struct KeyRebindingSubsystem_KeyRebindingResultDelegate__DelegateSignature final
{
public:
	ECommonInputType                              InputType;                                         // 0x0000(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1EA2[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKeyRebind_BindingResult               BindingResult;                                     // 0x0008(0x0070)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(KeyRebindingSubsystem_KeyRebindingResultDelegate__DelegateSignature) == 0x000008, "Wrong alignment on KeyRebindingSubsystem_KeyRebindingResultDelegate__DelegateSignature");
static_assert(sizeof(KeyRebindingSubsystem_KeyRebindingResultDelegate__DelegateSignature) == 0x000078, "Wrong size on KeyRebindingSubsystem_KeyRebindingResultDelegate__DelegateSignature");
static_assert(offsetof(KeyRebindingSubsystem_KeyRebindingResultDelegate__DelegateSignature, InputType) == 0x000000, "Member 'KeyRebindingSubsystem_KeyRebindingResultDelegate__DelegateSignature::InputType' has a wrong offset!");
static_assert(offsetof(KeyRebindingSubsystem_KeyRebindingResultDelegate__DelegateSignature, BindingResult) == 0x000008, "Member 'KeyRebindingSubsystem_KeyRebindingResultDelegate__DelegateSignature::BindingResult' has a wrong offset!");

// DelegateFunction KeyRebinding.KeyRebindingSubsystem.KeyUnbindingResultDelegate__DelegateSignature
// 0x0038 (0x0038 - 0x0000)
struct KeyRebindingSubsystem_KeyUnbindingResultDelegate__DelegateSignature final
{
public:
	ECommonInputType                              InputType;                                         // 0x0000(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1EA3[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKeyRebind_UnbindingResult             UnbindingResult;                                   // 0x0008(0x0030)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(KeyRebindingSubsystem_KeyUnbindingResultDelegate__DelegateSignature) == 0x000008, "Wrong alignment on KeyRebindingSubsystem_KeyUnbindingResultDelegate__DelegateSignature");
static_assert(sizeof(KeyRebindingSubsystem_KeyUnbindingResultDelegate__DelegateSignature) == 0x000038, "Wrong size on KeyRebindingSubsystem_KeyUnbindingResultDelegate__DelegateSignature");
static_assert(offsetof(KeyRebindingSubsystem_KeyUnbindingResultDelegate__DelegateSignature, InputType) == 0x000000, "Member 'KeyRebindingSubsystem_KeyUnbindingResultDelegate__DelegateSignature::InputType' has a wrong offset!");
static_assert(offsetof(KeyRebindingSubsystem_KeyUnbindingResultDelegate__DelegateSignature, UnbindingResult) == 0x000008, "Member 'KeyRebindingSubsystem_KeyUnbindingResultDelegate__DelegateSignature::UnbindingResult' has a wrong offset!");

// Function KeyRebinding.KeyRebindingSubsystem.ResetToDefaultMappings
// 0x0002 (0x0002 - 0x0000)
struct KeyRebindingSubsystem_ResetToDefaultMappings final
{
public:
	ECommonInputType                              InputType;                                         // 0x0000(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bEffectImmediately;                                // 0x0001(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(KeyRebindingSubsystem_ResetToDefaultMappings) == 0x000001, "Wrong alignment on KeyRebindingSubsystem_ResetToDefaultMappings");
static_assert(sizeof(KeyRebindingSubsystem_ResetToDefaultMappings) == 0x000002, "Wrong size on KeyRebindingSubsystem_ResetToDefaultMappings");
static_assert(offsetof(KeyRebindingSubsystem_ResetToDefaultMappings, InputType) == 0x000000, "Member 'KeyRebindingSubsystem_ResetToDefaultMappings::InputType' has a wrong offset!");
static_assert(offsetof(KeyRebindingSubsystem_ResetToDefaultMappings, bEffectImmediately) == 0x000001, "Member 'KeyRebindingSubsystem_ResetToDefaultMappings::bEffectImmediately' has a wrong offset!");

// DelegateFunction KeyRebinding.KeyRebindingSubsystem.SimpleKeyRebindingSystemDelegate__DelegateSignature
// 0x0001 (0x0001 - 0x0000)
struct KeyRebindingSubsystem_SimpleKeyRebindingSystemDelegate__DelegateSignature final
{
public:
	ECommonInputType                              InputType;                                         // 0x0000(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(KeyRebindingSubsystem_SimpleKeyRebindingSystemDelegate__DelegateSignature) == 0x000001, "Wrong alignment on KeyRebindingSubsystem_SimpleKeyRebindingSystemDelegate__DelegateSignature");
static_assert(sizeof(KeyRebindingSubsystem_SimpleKeyRebindingSystemDelegate__DelegateSignature) == 0x000001, "Wrong size on KeyRebindingSubsystem_SimpleKeyRebindingSystemDelegate__DelegateSignature");
static_assert(offsetof(KeyRebindingSubsystem_SimpleKeyRebindingSystemDelegate__DelegateSignature, InputType) == 0x000000, "Member 'KeyRebindingSubsystem_SimpleKeyRebindingSystemDelegate__DelegateSignature::InputType' has a wrong offset!");

// Function KeyRebinding.KeyRebindingSubsystem.GetInputActionKeys
// 0x0020 (0x0020 - 0x0000)
struct KeyRebindingSubsystem_GetInputActionKeys final
{
public:
	const class UInputAction*                     InputAction;                                       // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ECommonInputType                              InputType;                                         // 0x0008(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1EA4[0x7];                                     // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FKeyRebind_InputKey>            OutKeys;                                           // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(KeyRebindingSubsystem_GetInputActionKeys) == 0x000008, "Wrong alignment on KeyRebindingSubsystem_GetInputActionKeys");
static_assert(sizeof(KeyRebindingSubsystem_GetInputActionKeys) == 0x000020, "Wrong size on KeyRebindingSubsystem_GetInputActionKeys");
static_assert(offsetof(KeyRebindingSubsystem_GetInputActionKeys, InputAction) == 0x000000, "Member 'KeyRebindingSubsystem_GetInputActionKeys::InputAction' has a wrong offset!");
static_assert(offsetof(KeyRebindingSubsystem_GetInputActionKeys, InputType) == 0x000008, "Member 'KeyRebindingSubsystem_GetInputActionKeys::InputType' has a wrong offset!");
static_assert(offsetof(KeyRebindingSubsystem_GetInputActionKeys, OutKeys) == 0x000010, "Member 'KeyRebindingSubsystem_GetInputActionKeys::OutKeys' has a wrong offset!");

// Function KeyRebinding.KeyRebindingSubsystem.GetRebindings
// 0x0018 (0x0018 - 0x0000)
struct KeyRebindingSubsystem_GetRebindings final
{
public:
	ECommonInputType                              InputType;                                         // 0x0000(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1EA5[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FKeyRebind_KeyMappingEntry>     ReturnValue;                                       // 0x0008(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, ContainsInstancedReference, NativeAccessSpecifierPublic)
};
static_assert(alignof(KeyRebindingSubsystem_GetRebindings) == 0x000008, "Wrong alignment on KeyRebindingSubsystem_GetRebindings");
static_assert(sizeof(KeyRebindingSubsystem_GetRebindings) == 0x000018, "Wrong size on KeyRebindingSubsystem_GetRebindings");
static_assert(offsetof(KeyRebindingSubsystem_GetRebindings, InputType) == 0x000000, "Member 'KeyRebindingSubsystem_GetRebindings::InputType' has a wrong offset!");
static_assert(offsetof(KeyRebindingSubsystem_GetRebindings, ReturnValue) == 0x000008, "Member 'KeyRebindingSubsystem_GetRebindings::ReturnValue' has a wrong offset!");

// Function KeyRebinding.KeyRebindingUtils.GetCommonInputSystem
// 0x0010 (0x0010 - 0x0000)
struct KeyRebindingUtils_GetCommonInputSystem final
{
public:
	const class UObject*                          WorldContextObject;                                // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	const class UCommonInputSubsystem*            ReturnValue;                                       // 0x0008(0x0008)(ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(KeyRebindingUtils_GetCommonInputSystem) == 0x000008, "Wrong alignment on KeyRebindingUtils_GetCommonInputSystem");
static_assert(sizeof(KeyRebindingUtils_GetCommonInputSystem) == 0x000010, "Wrong size on KeyRebindingUtils_GetCommonInputSystem");
static_assert(offsetof(KeyRebindingUtils_GetCommonInputSystem, WorldContextObject) == 0x000000, "Member 'KeyRebindingUtils_GetCommonInputSystem::WorldContextObject' has a wrong offset!");
static_assert(offsetof(KeyRebindingUtils_GetCommonInputSystem, ReturnValue) == 0x000008, "Member 'KeyRebindingUtils_GetCommonInputSystem::ReturnValue' has a wrong offset!");

// Function KeyRebinding.KeyRebindingUtils.GetEnhancedInputSubsystem
// 0x0010 (0x0010 - 0x0000)
struct KeyRebindingUtils_GetEnhancedInputSubsystem final
{
public:
	const class UObject*                          WorldContextObject;                                // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UEnhancedInputSubsystemWithKeyRebinding* ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(KeyRebindingUtils_GetEnhancedInputSubsystem) == 0x000008, "Wrong alignment on KeyRebindingUtils_GetEnhancedInputSubsystem");
static_assert(sizeof(KeyRebindingUtils_GetEnhancedInputSubsystem) == 0x000010, "Wrong size on KeyRebindingUtils_GetEnhancedInputSubsystem");
static_assert(offsetof(KeyRebindingUtils_GetEnhancedInputSubsystem, WorldContextObject) == 0x000000, "Member 'KeyRebindingUtils_GetEnhancedInputSubsystem::WorldContextObject' has a wrong offset!");
static_assert(offsetof(KeyRebindingUtils_GetEnhancedInputSubsystem, ReturnValue) == 0x000008, "Member 'KeyRebindingUtils_GetEnhancedInputSubsystem::ReturnValue' has a wrong offset!");

// Function KeyRebinding.KeyRebindingUtils.GetIconForEnhancedInputAction
// 0x01D0 (0x01D0 - 0x0000)
struct KeyRebindingUtils_GetIconForEnhancedInputAction final
{
public:
	const class UObject*                          WorldContextObject;                                // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	const class UInputAction*                     InputAction;                                       // 0x0008(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ECommonInputType                              InputType;                                         // 0x0010(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1EA6[0x3];                                     // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           SpecialTag;                                        // 0x0014(0x0008)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1EA7[0x4];                                     // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateBrush                            OutMainKeyBrush;                                   // 0x0020(0x00D0)(Parm, OutParm, NativeAccessSpecifierPublic)
	struct FSlateBrush                            OutChordKeyBrush;                                  // 0x00F0(0x00D0)(Parm, OutParm, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x01C0(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1EA8[0xF];                                     // 0x01C1(0x000F)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(KeyRebindingUtils_GetIconForEnhancedInputAction) == 0x000010, "Wrong alignment on KeyRebindingUtils_GetIconForEnhancedInputAction");
static_assert(sizeof(KeyRebindingUtils_GetIconForEnhancedInputAction) == 0x0001D0, "Wrong size on KeyRebindingUtils_GetIconForEnhancedInputAction");
static_assert(offsetof(KeyRebindingUtils_GetIconForEnhancedInputAction, WorldContextObject) == 0x000000, "Member 'KeyRebindingUtils_GetIconForEnhancedInputAction::WorldContextObject' has a wrong offset!");
static_assert(offsetof(KeyRebindingUtils_GetIconForEnhancedInputAction, InputAction) == 0x000008, "Member 'KeyRebindingUtils_GetIconForEnhancedInputAction::InputAction' has a wrong offset!");
static_assert(offsetof(KeyRebindingUtils_GetIconForEnhancedInputAction, InputType) == 0x000010, "Member 'KeyRebindingUtils_GetIconForEnhancedInputAction::InputType' has a wrong offset!");
static_assert(offsetof(KeyRebindingUtils_GetIconForEnhancedInputAction, SpecialTag) == 0x000014, "Member 'KeyRebindingUtils_GetIconForEnhancedInputAction::SpecialTag' has a wrong offset!");
static_assert(offsetof(KeyRebindingUtils_GetIconForEnhancedInputAction, OutMainKeyBrush) == 0x000020, "Member 'KeyRebindingUtils_GetIconForEnhancedInputAction::OutMainKeyBrush' has a wrong offset!");
static_assert(offsetof(KeyRebindingUtils_GetIconForEnhancedInputAction, OutChordKeyBrush) == 0x0000F0, "Member 'KeyRebindingUtils_GetIconForEnhancedInputAction::OutChordKeyBrush' has a wrong offset!");
static_assert(offsetof(KeyRebindingUtils_GetIconForEnhancedInputAction, ReturnValue) == 0x0001C0, "Member 'KeyRebindingUtils_GetIconForEnhancedInputAction::ReturnValue' has a wrong offset!");

// Function KeyRebinding.KeyRebindingUtils.GetInputType
// 0x0028 (0x0028 - 0x0000)
struct KeyRebindingUtils_GetInputType final
{
public:
	class FName                                   IMCInputTypeIdentification;                        // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FKey                                   TestKey;                                           // 0x0008(0x0018)(ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ECommonInputType                              OutInputTyp;                                       // 0x0020(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0021(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1EA9[0x6];                                     // 0x0022(0x0006)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(KeyRebindingUtils_GetInputType) == 0x000008, "Wrong alignment on KeyRebindingUtils_GetInputType");
static_assert(sizeof(KeyRebindingUtils_GetInputType) == 0x000028, "Wrong size on KeyRebindingUtils_GetInputType");
static_assert(offsetof(KeyRebindingUtils_GetInputType, IMCInputTypeIdentification) == 0x000000, "Member 'KeyRebindingUtils_GetInputType::IMCInputTypeIdentification' has a wrong offset!");
static_assert(offsetof(KeyRebindingUtils_GetInputType, TestKey) == 0x000008, "Member 'KeyRebindingUtils_GetInputType::TestKey' has a wrong offset!");
static_assert(offsetof(KeyRebindingUtils_GetInputType, OutInputTyp) == 0x000020, "Member 'KeyRebindingUtils_GetInputType::OutInputTyp' has a wrong offset!");
static_assert(offsetof(KeyRebindingUtils_GetInputType, ReturnValue) == 0x000021, "Member 'KeyRebindingUtils_GetInputType::ReturnValue' has a wrong offset!");

// Function KeyRebinding.KeyRebindingUtils.GetKeyIcons
// 0x0200 (0x0200 - 0x0000)
struct KeyRebindingUtils_GetKeyIcons final
{
public:
	const class UObject*                          WorldContextObject;                                // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FInputKeys                             InputKeys;                                         // 0x0008(0x0038)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	ECommonInputType                              InputType;                                         // 0x0040(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1EAA[0x3];                                     // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           SpecialTag;                                        // 0x0044(0x0008)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1EAB[0x4];                                     // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateBrush                            OutMainKeyBrush;                                   // 0x0050(0x00D0)(Parm, OutParm, NativeAccessSpecifierPublic)
	struct FSlateBrush                            OutChordKeyBrush;                                  // 0x0120(0x00D0)(Parm, OutParm, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x01F0(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1EAC[0xF];                                     // 0x01F1(0x000F)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(KeyRebindingUtils_GetKeyIcons) == 0x000010, "Wrong alignment on KeyRebindingUtils_GetKeyIcons");
static_assert(sizeof(KeyRebindingUtils_GetKeyIcons) == 0x000200, "Wrong size on KeyRebindingUtils_GetKeyIcons");
static_assert(offsetof(KeyRebindingUtils_GetKeyIcons, WorldContextObject) == 0x000000, "Member 'KeyRebindingUtils_GetKeyIcons::WorldContextObject' has a wrong offset!");
static_assert(offsetof(KeyRebindingUtils_GetKeyIcons, InputKeys) == 0x000008, "Member 'KeyRebindingUtils_GetKeyIcons::InputKeys' has a wrong offset!");
static_assert(offsetof(KeyRebindingUtils_GetKeyIcons, InputType) == 0x000040, "Member 'KeyRebindingUtils_GetKeyIcons::InputType' has a wrong offset!");
static_assert(offsetof(KeyRebindingUtils_GetKeyIcons, SpecialTag) == 0x000044, "Member 'KeyRebindingUtils_GetKeyIcons::SpecialTag' has a wrong offset!");
static_assert(offsetof(KeyRebindingUtils_GetKeyIcons, OutMainKeyBrush) == 0x000050, "Member 'KeyRebindingUtils_GetKeyIcons::OutMainKeyBrush' has a wrong offset!");
static_assert(offsetof(KeyRebindingUtils_GetKeyIcons, OutChordKeyBrush) == 0x000120, "Member 'KeyRebindingUtils_GetKeyIcons::OutChordKeyBrush' has a wrong offset!");
static_assert(offsetof(KeyRebindingUtils_GetKeyIcons, ReturnValue) == 0x0001F0, "Member 'KeyRebindingUtils_GetKeyIcons::ReturnValue' has a wrong offset!");

// Function KeyRebinding.KeyRebindingUtils.GetKeyIconsWithIMC
// 0x01E0 (0x01E0 - 0x0000)
struct KeyRebindingUtils_GetKeyIconsWithIMC final
{
public:
	const class UObject*                          WorldContextObject;                                // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	const class UInputMappingContext*             MappingContext;                                    // 0x0008(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	const class UInputAction*                     InputAction;                                       // 0x0010(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ECommonInputType                              InputType;                                         // 0x0018(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1EAD[0x3];                                     // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           SpecialTag;                                        // 0x001C(0x0008)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1EAE[0xC];                                     // 0x0024(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateBrush                            OutMainKeyBrush;                                   // 0x0030(0x00D0)(Parm, OutParm, NativeAccessSpecifierPublic)
	struct FSlateBrush                            OutChordKeyBrush;                                  // 0x0100(0x00D0)(Parm, OutParm, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x01D0(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1EAF[0xF];                                     // 0x01D1(0x000F)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(KeyRebindingUtils_GetKeyIconsWithIMC) == 0x000010, "Wrong alignment on KeyRebindingUtils_GetKeyIconsWithIMC");
static_assert(sizeof(KeyRebindingUtils_GetKeyIconsWithIMC) == 0x0001E0, "Wrong size on KeyRebindingUtils_GetKeyIconsWithIMC");
static_assert(offsetof(KeyRebindingUtils_GetKeyIconsWithIMC, WorldContextObject) == 0x000000, "Member 'KeyRebindingUtils_GetKeyIconsWithIMC::WorldContextObject' has a wrong offset!");
static_assert(offsetof(KeyRebindingUtils_GetKeyIconsWithIMC, MappingContext) == 0x000008, "Member 'KeyRebindingUtils_GetKeyIconsWithIMC::MappingContext' has a wrong offset!");
static_assert(offsetof(KeyRebindingUtils_GetKeyIconsWithIMC, InputAction) == 0x000010, "Member 'KeyRebindingUtils_GetKeyIconsWithIMC::InputAction' has a wrong offset!");
static_assert(offsetof(KeyRebindingUtils_GetKeyIconsWithIMC, InputType) == 0x000018, "Member 'KeyRebindingUtils_GetKeyIconsWithIMC::InputType' has a wrong offset!");
static_assert(offsetof(KeyRebindingUtils_GetKeyIconsWithIMC, SpecialTag) == 0x00001C, "Member 'KeyRebindingUtils_GetKeyIconsWithIMC::SpecialTag' has a wrong offset!");
static_assert(offsetof(KeyRebindingUtils_GetKeyIconsWithIMC, OutMainKeyBrush) == 0x000030, "Member 'KeyRebindingUtils_GetKeyIconsWithIMC::OutMainKeyBrush' has a wrong offset!");
static_assert(offsetof(KeyRebindingUtils_GetKeyIconsWithIMC, OutChordKeyBrush) == 0x000100, "Member 'KeyRebindingUtils_GetKeyIconsWithIMC::OutChordKeyBrush' has a wrong offset!");
static_assert(offsetof(KeyRebindingUtils_GetKeyIconsWithIMC, ReturnValue) == 0x0001D0, "Member 'KeyRebindingUtils_GetKeyIconsWithIMC::ReturnValue' has a wrong offset!");

// Function KeyRebinding.KeyRebindingUtils.GetKeyName
// 0x0030 (0x0030 - 0x0000)
struct KeyRebindingUtils_GetKeyName final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FText                                   ReturnValue;                                       // 0x0018(0x0018)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(KeyRebindingUtils_GetKeyName) == 0x000008, "Wrong alignment on KeyRebindingUtils_GetKeyName");
static_assert(sizeof(KeyRebindingUtils_GetKeyName) == 0x000030, "Wrong size on KeyRebindingUtils_GetKeyName");
static_assert(offsetof(KeyRebindingUtils_GetKeyName, Key) == 0x000000, "Member 'KeyRebindingUtils_GetKeyName::Key' has a wrong offset!");
static_assert(offsetof(KeyRebindingUtils_GetKeyName, ReturnValue) == 0x000018, "Member 'KeyRebindingUtils_GetKeyName::ReturnValue' has a wrong offset!");

// Function KeyRebinding.KeyRebindingUtils.GetKeyRebindingSystem
// 0x0010 (0x0010 - 0x0000)
struct KeyRebindingUtils_GetKeyRebindingSystem final
{
public:
	const class UObject*                          WorldContextObject;                                // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UKeyRebindingSubsystem*                 ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(KeyRebindingUtils_GetKeyRebindingSystem) == 0x000008, "Wrong alignment on KeyRebindingUtils_GetKeyRebindingSystem");
static_assert(sizeof(KeyRebindingUtils_GetKeyRebindingSystem) == 0x000010, "Wrong size on KeyRebindingUtils_GetKeyRebindingSystem");
static_assert(offsetof(KeyRebindingUtils_GetKeyRebindingSystem, WorldContextObject) == 0x000000, "Member 'KeyRebindingUtils_GetKeyRebindingSystem::WorldContextObject' has a wrong offset!");
static_assert(offsetof(KeyRebindingUtils_GetKeyRebindingSystem, ReturnValue) == 0x000008, "Member 'KeyRebindingUtils_GetKeyRebindingSystem::ReturnValue' has a wrong offset!");

// Function KeyRebinding.KeyRebindingUtils.GetKeysForEnhancedInputAction
// 0x0058 (0x0058 - 0x0000)
struct KeyRebindingUtils_GetKeysForEnhancedInputAction final
{
public:
	const class UObject*                          WorldContextObject;                                // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	const class UInputAction*                     InputAction;                                       // 0x0008(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ECommonInputType                              InputType;                                         // 0x0010(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1EB0[0x7];                                     // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FInputKeys                             OutKeys;                                           // 0x0018(0x0038)(Parm, OutParm, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0050(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1EB1[0x7];                                     // 0x0051(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(KeyRebindingUtils_GetKeysForEnhancedInputAction) == 0x000008, "Wrong alignment on KeyRebindingUtils_GetKeysForEnhancedInputAction");
static_assert(sizeof(KeyRebindingUtils_GetKeysForEnhancedInputAction) == 0x000058, "Wrong size on KeyRebindingUtils_GetKeysForEnhancedInputAction");
static_assert(offsetof(KeyRebindingUtils_GetKeysForEnhancedInputAction, WorldContextObject) == 0x000000, "Member 'KeyRebindingUtils_GetKeysForEnhancedInputAction::WorldContextObject' has a wrong offset!");
static_assert(offsetof(KeyRebindingUtils_GetKeysForEnhancedInputAction, InputAction) == 0x000008, "Member 'KeyRebindingUtils_GetKeysForEnhancedInputAction::InputAction' has a wrong offset!");
static_assert(offsetof(KeyRebindingUtils_GetKeysForEnhancedInputAction, InputType) == 0x000010, "Member 'KeyRebindingUtils_GetKeysForEnhancedInputAction::InputType' has a wrong offset!");
static_assert(offsetof(KeyRebindingUtils_GetKeysForEnhancedInputAction, OutKeys) == 0x000018, "Member 'KeyRebindingUtils_GetKeysForEnhancedInputAction::OutKeys' has a wrong offset!");
static_assert(offsetof(KeyRebindingUtils_GetKeysForEnhancedInputAction, ReturnValue) == 0x000050, "Member 'KeyRebindingUtils_GetKeysForEnhancedInputAction::ReturnValue' has a wrong offset!");

// Function KeyRebinding.KeyRebindingUtils.GetLocalPlayer
// 0x0010 (0x0010 - 0x0000)
struct KeyRebindingUtils_GetLocalPlayer final
{
public:
	const class UObject*                          WorldContextObject;                                // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	const class ULocalPlayer*                     ReturnValue;                                       // 0x0008(0x0008)(ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(KeyRebindingUtils_GetLocalPlayer) == 0x000008, "Wrong alignment on KeyRebindingUtils_GetLocalPlayer");
static_assert(sizeof(KeyRebindingUtils_GetLocalPlayer) == 0x000010, "Wrong size on KeyRebindingUtils_GetLocalPlayer");
static_assert(offsetof(KeyRebindingUtils_GetLocalPlayer, WorldContextObject) == 0x000000, "Member 'KeyRebindingUtils_GetLocalPlayer::WorldContextObject' has a wrong offset!");
static_assert(offsetof(KeyRebindingUtils_GetLocalPlayer, ReturnValue) == 0x000008, "Member 'KeyRebindingUtils_GetLocalPlayer::ReturnValue' has a wrong offset!");

// Function KeyRebinding.KeyRebindingUtils.GetPromptDelayTime
// 0x0004 (0x0004 - 0x0000)
struct KeyRebindingUtils_GetPromptDelayTime final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(KeyRebindingUtils_GetPromptDelayTime) == 0x000004, "Wrong alignment on KeyRebindingUtils_GetPromptDelayTime");
static_assert(sizeof(KeyRebindingUtils_GetPromptDelayTime) == 0x000004, "Wrong size on KeyRebindingUtils_GetPromptDelayTime");
static_assert(offsetof(KeyRebindingUtils_GetPromptDelayTime, ReturnValue) == 0x000000, "Member 'KeyRebindingUtils_GetPromptDelayTime::ReturnValue' has a wrong offset!");

// Function KeyRebinding.KeyRebindingUtils.GetSpecialKeys
// 0x0018 (0x0018 - 0x0000)
struct KeyRebindingUtils_GetSpecialKeys final
{
public:
	ECommonInputType                              TestInputType;                                     // 0x0000(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1EB2[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FKey>                           OutSpecialKeys;                                    // 0x0008(0x0010)(Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(KeyRebindingUtils_GetSpecialKeys) == 0x000008, "Wrong alignment on KeyRebindingUtils_GetSpecialKeys");
static_assert(sizeof(KeyRebindingUtils_GetSpecialKeys) == 0x000018, "Wrong size on KeyRebindingUtils_GetSpecialKeys");
static_assert(offsetof(KeyRebindingUtils_GetSpecialKeys, TestInputType) == 0x000000, "Member 'KeyRebindingUtils_GetSpecialKeys::TestInputType' has a wrong offset!");
static_assert(offsetof(KeyRebindingUtils_GetSpecialKeys, OutSpecialKeys) == 0x000008, "Member 'KeyRebindingUtils_GetSpecialKeys::OutSpecialKeys' has a wrong offset!");

// Function KeyRebinding.KeyRebindingUtils.IsMatchingInputType
// 0x0028 (0x0028 - 0x0000)
struct KeyRebindingUtils_IsMatchingInputType final
{
public:
	ECommonInputType                              InputType;                                         // 0x0000(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1EB3[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKey                                   TestKey;                                           // 0x0008(0x0018)(ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0020(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1EB4[0x7];                                     // 0x0021(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(KeyRebindingUtils_IsMatchingInputType) == 0x000008, "Wrong alignment on KeyRebindingUtils_IsMatchingInputType");
static_assert(sizeof(KeyRebindingUtils_IsMatchingInputType) == 0x000028, "Wrong size on KeyRebindingUtils_IsMatchingInputType");
static_assert(offsetof(KeyRebindingUtils_IsMatchingInputType, InputType) == 0x000000, "Member 'KeyRebindingUtils_IsMatchingInputType::InputType' has a wrong offset!");
static_assert(offsetof(KeyRebindingUtils_IsMatchingInputType, TestKey) == 0x000008, "Member 'KeyRebindingUtils_IsMatchingInputType::TestKey' has a wrong offset!");
static_assert(offsetof(KeyRebindingUtils_IsMatchingInputType, ReturnValue) == 0x000020, "Member 'KeyRebindingUtils_IsMatchingInputType::ReturnValue' has a wrong offset!");

// Function KeyRebinding.KeyRebindSettingsWidgetBase.CreateKeyRebindGroupWidget
// 0x0010 (0x0010 - 0x0000)
struct KeyRebindSettingsWidgetBase_CreateKeyRebindGroupWidget final
{
public:
	TArray<struct FKeyRebind_KeyMappingEntry>     InKeyRebindInfo;                                   // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, ContainsInstancedReference, NativeAccessSpecifierPublic)
};
static_assert(alignof(KeyRebindSettingsWidgetBase_CreateKeyRebindGroupWidget) == 0x000008, "Wrong alignment on KeyRebindSettingsWidgetBase_CreateKeyRebindGroupWidget");
static_assert(sizeof(KeyRebindSettingsWidgetBase_CreateKeyRebindGroupWidget) == 0x000010, "Wrong size on KeyRebindSettingsWidgetBase_CreateKeyRebindGroupWidget");
static_assert(offsetof(KeyRebindSettingsWidgetBase_CreateKeyRebindGroupWidget, InKeyRebindInfo) == 0x000000, "Member 'KeyRebindSettingsWidgetBase_CreateKeyRebindGroupWidget::InKeyRebindInfo' has a wrong offset!");

// Function KeyRebinding.KeyRebindSettingsWidgetBase.InitializeRebindKey
// 0x0018 (0x0018 - 0x0000)
struct KeyRebindSettingsWidgetBase_InitializeRebindKey final
{
public:
	const class UWidget*                          Widget;                                            // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	const class UInputAction*                     InInputAction;                                     // 0x0008(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EKeyRebind_KeySlot                            InSlotNum;                                         // 0x0010(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1EB8[0x7];                                     // 0x0011(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(KeyRebindSettingsWidgetBase_InitializeRebindKey) == 0x000008, "Wrong alignment on KeyRebindSettingsWidgetBase_InitializeRebindKey");
static_assert(sizeof(KeyRebindSettingsWidgetBase_InitializeRebindKey) == 0x000018, "Wrong size on KeyRebindSettingsWidgetBase_InitializeRebindKey");
static_assert(offsetof(KeyRebindSettingsWidgetBase_InitializeRebindKey, Widget) == 0x000000, "Member 'KeyRebindSettingsWidgetBase_InitializeRebindKey::Widget' has a wrong offset!");
static_assert(offsetof(KeyRebindSettingsWidgetBase_InitializeRebindKey, InInputAction) == 0x000008, "Member 'KeyRebindSettingsWidgetBase_InitializeRebindKey::InInputAction' has a wrong offset!");
static_assert(offsetof(KeyRebindSettingsWidgetBase_InitializeRebindKey, InSlotNum) == 0x000010, "Member 'KeyRebindSettingsWidgetBase_InitializeRebindKey::InSlotNum' has a wrong offset!");

// Function KeyRebinding.KeyRebindSettingsWidgetBase.InitializeUnbindKey
// 0x0018 (0x0018 - 0x0000)
struct KeyRebindSettingsWidgetBase_InitializeUnbindKey final
{
public:
	const class UWidget*                          Widget;                                            // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	const class UInputAction*                     InInputAction;                                     // 0x0008(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EKeyRebind_KeySlot                            InSlotNum;                                         // 0x0010(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1EB9[0x7];                                     // 0x0011(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(KeyRebindSettingsWidgetBase_InitializeUnbindKey) == 0x000008, "Wrong alignment on KeyRebindSettingsWidgetBase_InitializeUnbindKey");
static_assert(sizeof(KeyRebindSettingsWidgetBase_InitializeUnbindKey) == 0x000018, "Wrong size on KeyRebindSettingsWidgetBase_InitializeUnbindKey");
static_assert(offsetof(KeyRebindSettingsWidgetBase_InitializeUnbindKey, Widget) == 0x000000, "Member 'KeyRebindSettingsWidgetBase_InitializeUnbindKey::Widget' has a wrong offset!");
static_assert(offsetof(KeyRebindSettingsWidgetBase_InitializeUnbindKey, InInputAction) == 0x000008, "Member 'KeyRebindSettingsWidgetBase_InitializeUnbindKey::InInputAction' has a wrong offset!");
static_assert(offsetof(KeyRebindSettingsWidgetBase_InitializeUnbindKey, InSlotNum) == 0x000010, "Member 'KeyRebindSettingsWidgetBase_InitializeUnbindKey::InSlotNum' has a wrong offset!");

// Function KeyRebinding.KeyRebindSettingsWidgetBase.OnAnyKeyTriggered
// 0x0030 (0x0030 - 0x0000)
struct KeyRebindSettingsWidgetBase_OnAnyKeyTriggered final
{
public:
	struct FKeyRebind_InputKey                    InInputKeys;                                       // 0x0000(0x0030)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(KeyRebindSettingsWidgetBase_OnAnyKeyTriggered) == 0x000008, "Wrong alignment on KeyRebindSettingsWidgetBase_OnAnyKeyTriggered");
static_assert(sizeof(KeyRebindSettingsWidgetBase_OnAnyKeyTriggered) == 0x000030, "Wrong size on KeyRebindSettingsWidgetBase_OnAnyKeyTriggered");
static_assert(offsetof(KeyRebindSettingsWidgetBase_OnAnyKeyTriggered, InInputKeys) == 0x000000, "Member 'KeyRebindSettingsWidgetBase_OnAnyKeyTriggered::InInputKeys' has a wrong offset!");

// Function KeyRebinding.KeyRebindSettingsWidgetBase.OnKeyRebindBegin
// 0x0010 (0x0010 - 0x0000)
struct KeyRebindSettingsWidgetBase_OnKeyRebindBegin final
{
public:
	const class UWidget*                          Widget;                                            // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIsRebinding;                                      // 0x0008(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1EBA[0x7];                                     // 0x0009(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(KeyRebindSettingsWidgetBase_OnKeyRebindBegin) == 0x000008, "Wrong alignment on KeyRebindSettingsWidgetBase_OnKeyRebindBegin");
static_assert(sizeof(KeyRebindSettingsWidgetBase_OnKeyRebindBegin) == 0x000010, "Wrong size on KeyRebindSettingsWidgetBase_OnKeyRebindBegin");
static_assert(offsetof(KeyRebindSettingsWidgetBase_OnKeyRebindBegin, Widget) == 0x000000, "Member 'KeyRebindSettingsWidgetBase_OnKeyRebindBegin::Widget' has a wrong offset!");
static_assert(offsetof(KeyRebindSettingsWidgetBase_OnKeyRebindBegin, bIsRebinding) == 0x000008, "Member 'KeyRebindSettingsWidgetBase_OnKeyRebindBegin::bIsRebinding' has a wrong offset!");

// Function KeyRebinding.KeyRebindSettingsWidgetBase.OnKeyRebindEnd
// 0x00E8 (0x00E8 - 0x0000)
struct KeyRebindSettingsWidgetBase_OnKeyRebindEnd final
{
public:
	struct FKeyRebind_DisplayResult               ResultInfo;                                        // 0x0000(0x00E0)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	bool                                          bIsRebinding;                                      // 0x00E0(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1EBB[0x7];                                     // 0x00E1(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(KeyRebindSettingsWidgetBase_OnKeyRebindEnd) == 0x000008, "Wrong alignment on KeyRebindSettingsWidgetBase_OnKeyRebindEnd");
static_assert(sizeof(KeyRebindSettingsWidgetBase_OnKeyRebindEnd) == 0x0000E8, "Wrong size on KeyRebindSettingsWidgetBase_OnKeyRebindEnd");
static_assert(offsetof(KeyRebindSettingsWidgetBase_OnKeyRebindEnd, ResultInfo) == 0x000000, "Member 'KeyRebindSettingsWidgetBase_OnKeyRebindEnd::ResultInfo' has a wrong offset!");
static_assert(offsetof(KeyRebindSettingsWidgetBase_OnKeyRebindEnd, bIsRebinding) == 0x0000E0, "Member 'KeyRebindSettingsWidgetBase_OnKeyRebindEnd::bIsRebinding' has a wrong offset!");

// Function KeyRebinding.KeyRebindSettingsWidgetBase.RefreshSubWidget
// 0x00E8 (0x00E8 - 0x0000)
struct KeyRebindSettingsWidgetBase_RefreshSubWidget final
{
public:
	struct FKeyRebind_DisplayResult               ResultInfo;                                        // 0x0000(0x00E0)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	bool                                          bRefreshAll;                                       // 0x00E0(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1EBC[0x7];                                     // 0x00E1(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(KeyRebindSettingsWidgetBase_RefreshSubWidget) == 0x000008, "Wrong alignment on KeyRebindSettingsWidgetBase_RefreshSubWidget");
static_assert(sizeof(KeyRebindSettingsWidgetBase_RefreshSubWidget) == 0x0000E8, "Wrong size on KeyRebindSettingsWidgetBase_RefreshSubWidget");
static_assert(offsetof(KeyRebindSettingsWidgetBase_RefreshSubWidget, ResultInfo) == 0x000000, "Member 'KeyRebindSettingsWidgetBase_RefreshSubWidget::ResultInfo' has a wrong offset!");
static_assert(offsetof(KeyRebindSettingsWidgetBase_RefreshSubWidget, bRefreshAll) == 0x0000E0, "Member 'KeyRebindSettingsWidgetBase_RefreshSubWidget::bRefreshAll' has a wrong offset!");

// Function KeyRebinding.KeyRebindSettingsWidgetBase.GetDescriptionofInputAction
// 0x0020 (0x0020 - 0x0000)
struct KeyRebindSettingsWidgetBase_GetDescriptionofInputAction final
{
public:
	const class UInputAction*                     InInputAction;                                     // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FText                                   ReturnValue;                                       // 0x0008(0x0018)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(KeyRebindSettingsWidgetBase_GetDescriptionofInputAction) == 0x000008, "Wrong alignment on KeyRebindSettingsWidgetBase_GetDescriptionofInputAction");
static_assert(sizeof(KeyRebindSettingsWidgetBase_GetDescriptionofInputAction) == 0x000020, "Wrong size on KeyRebindSettingsWidgetBase_GetDescriptionofInputAction");
static_assert(offsetof(KeyRebindSettingsWidgetBase_GetDescriptionofInputAction, InInputAction) == 0x000000, "Member 'KeyRebindSettingsWidgetBase_GetDescriptionofInputAction::InInputAction' has a wrong offset!");
static_assert(offsetof(KeyRebindSettingsWidgetBase_GetDescriptionofInputAction, ReturnValue) == 0x000008, "Member 'KeyRebindSettingsWidgetBase_GetDescriptionofInputAction::ReturnValue' has a wrong offset!");

// Function KeyRebinding.KeyRebindSettingsWidgetBase.HasAnyKeyNotBound
// 0x0001 (0x0001 - 0x0000)
struct KeyRebindSettingsWidgetBase_HasAnyKeyNotBound final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(KeyRebindSettingsWidgetBase_HasAnyKeyNotBound) == 0x000001, "Wrong alignment on KeyRebindSettingsWidgetBase_HasAnyKeyNotBound");
static_assert(sizeof(KeyRebindSettingsWidgetBase_HasAnyKeyNotBound) == 0x000001, "Wrong size on KeyRebindSettingsWidgetBase_HasAnyKeyNotBound");
static_assert(offsetof(KeyRebindSettingsWidgetBase_HasAnyKeyNotBound, ReturnValue) == 0x000000, "Member 'KeyRebindSettingsWidgetBase_HasAnyKeyNotBound::ReturnValue' has a wrong offset!");

// Function KeyRebinding.KeyRebindValidatorBase.TestReBindingValidation
// 0x0060 (0x0060 - 0x0000)
struct KeyRebindValidatorBase_TestReBindingValidation final
{
public:
	ECommonInputType                              InputType;                                         // 0x0000(0x0001)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1EBD[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	const class UInputAction*                     InputAction;                                       // 0x0008(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EKeyRebind_KeySlot                            Slot;                                              // 0x0010(0x0001)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1EBE[0x7];                                     // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKeyRebind_InputKey                    Keys;                                              // 0x0018(0x0030)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	TArray<class FText>                           OutErrorMessages;                                  // 0x0048(0x0010)(Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	EKeyRebindValidationResult                    ReturnValue;                                       // 0x0058(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1EBF[0x7];                                     // 0x0059(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(KeyRebindValidatorBase_TestReBindingValidation) == 0x000008, "Wrong alignment on KeyRebindValidatorBase_TestReBindingValidation");
static_assert(sizeof(KeyRebindValidatorBase_TestReBindingValidation) == 0x000060, "Wrong size on KeyRebindValidatorBase_TestReBindingValidation");
static_assert(offsetof(KeyRebindValidatorBase_TestReBindingValidation, InputType) == 0x000000, "Member 'KeyRebindValidatorBase_TestReBindingValidation::InputType' has a wrong offset!");
static_assert(offsetof(KeyRebindValidatorBase_TestReBindingValidation, InputAction) == 0x000008, "Member 'KeyRebindValidatorBase_TestReBindingValidation::InputAction' has a wrong offset!");
static_assert(offsetof(KeyRebindValidatorBase_TestReBindingValidation, Slot) == 0x000010, "Member 'KeyRebindValidatorBase_TestReBindingValidation::Slot' has a wrong offset!");
static_assert(offsetof(KeyRebindValidatorBase_TestReBindingValidation, Keys) == 0x000018, "Member 'KeyRebindValidatorBase_TestReBindingValidation::Keys' has a wrong offset!");
static_assert(offsetof(KeyRebindValidatorBase_TestReBindingValidation, OutErrorMessages) == 0x000048, "Member 'KeyRebindValidatorBase_TestReBindingValidation::OutErrorMessages' has a wrong offset!");
static_assert(offsetof(KeyRebindValidatorBase_TestReBindingValidation, ReturnValue) == 0x000058, "Member 'KeyRebindValidatorBase_TestReBindingValidation::ReturnValue' has a wrong offset!");

// Function KeyRebinding.KeyRebindValidatorBase.TestUnBindingValidation
// 0x0030 (0x0030 - 0x0000)
struct KeyRebindValidatorBase_TestUnBindingValidation final
{
public:
	ECommonInputType                              InputType;                                         // 0x0000(0x0001)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1EC0[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	const class UInputAction*                     InputAction;                                       // 0x0008(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EKeyRebind_KeySlot                            Slot;                                              // 0x0010(0x0001)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1EC1[0x7];                                     // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FText>                           OutErrorMessages;                                  // 0x0018(0x0010)(Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	EKeyRebindValidationResult                    ReturnValue;                                       // 0x0028(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1EC2[0x7];                                     // 0x0029(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(KeyRebindValidatorBase_TestUnBindingValidation) == 0x000008, "Wrong alignment on KeyRebindValidatorBase_TestUnBindingValidation");
static_assert(sizeof(KeyRebindValidatorBase_TestUnBindingValidation) == 0x000030, "Wrong size on KeyRebindValidatorBase_TestUnBindingValidation");
static_assert(offsetof(KeyRebindValidatorBase_TestUnBindingValidation, InputType) == 0x000000, "Member 'KeyRebindValidatorBase_TestUnBindingValidation::InputType' has a wrong offset!");
static_assert(offsetof(KeyRebindValidatorBase_TestUnBindingValidation, InputAction) == 0x000008, "Member 'KeyRebindValidatorBase_TestUnBindingValidation::InputAction' has a wrong offset!");
static_assert(offsetof(KeyRebindValidatorBase_TestUnBindingValidation, Slot) == 0x000010, "Member 'KeyRebindValidatorBase_TestUnBindingValidation::Slot' has a wrong offset!");
static_assert(offsetof(KeyRebindValidatorBase_TestUnBindingValidation, OutErrorMessages) == 0x000018, "Member 'KeyRebindValidatorBase_TestUnBindingValidation::OutErrorMessages' has a wrong offset!");
static_assert(offsetof(KeyRebindValidatorBase_TestUnBindingValidation, ReturnValue) == 0x000028, "Member 'KeyRebindValidatorBase_TestUnBindingValidation::ReturnValue' has a wrong offset!");

// Function KeyRebinding.KeyRebindValidatorBase.CanValidate
// 0x0002 (0x0002 - 0x0000)
struct KeyRebindValidatorBase_CanValidate final
{
public:
	EKeyRebindValidationExcuteType                InExcuteType;                                      // 0x0000(0x0001)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(KeyRebindValidatorBase_CanValidate) == 0x000001, "Wrong alignment on KeyRebindValidatorBase_CanValidate");
static_assert(sizeof(KeyRebindValidatorBase_CanValidate) == 0x000002, "Wrong size on KeyRebindValidatorBase_CanValidate");
static_assert(offsetof(KeyRebindValidatorBase_CanValidate, InExcuteType) == 0x000000, "Member 'KeyRebindValidatorBase_CanValidate::InExcuteType' has a wrong offset!");
static_assert(offsetof(KeyRebindValidatorBase_CanValidate, ReturnValue) == 0x000001, "Member 'KeyRebindValidatorBase_CanValidate::ReturnValue' has a wrong offset!");

}

