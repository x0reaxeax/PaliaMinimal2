#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: CV_Cinematic

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Palia_structs.hpp"
#include "Comp_CV_Overlaps_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass CV_Cinematic.CV_Cinematic_C
// 0x00B8 (0x0168 - 0x00B0)
class UCV_Cinematic_C final : public UComp_CV_Overlaps_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_CV_Cinematic_C;                     // 0x00B0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	bool                                          Enabled;                                           // 0x00B8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4E88[0x7];                                     // 0x00B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ALevelSequenceActor*                    LevelSequence_Default;                             // 0x00C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)
	class FName                                   BP_Player;                                         // 0x00C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsRealTime;                                        // 0x00D0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4E89[0x7];                                     // 0x00D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 MovieWidget;                                       // 0x00D8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UUserWidget*                            FullScreenWidget;                                  // 0x00E0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	FMulticastInlineDelegateProperty_             OnCinematicEnded;                                  // 0x00E8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	class UWBP_Cinematic_Overlay_C*               CineUi;                                            // 0x00F8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TArray<class UClass*>                         Widget_Array;                                      // 0x0100(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	FMulticastInlineDelegateProperty_             OnCinematicBegin;                                  // 0x0110(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	bool                                          IsCinePlaying;                                     // 0x0120(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4E8A[0x7];                                     // 0x0121(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ALevelSequenceActor*                    ActiveSequence;                                    // 0x0128(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class ALevelSequenceActor*                    LevelSequence_LowSpec;                             // 0x0130(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)
	class UCinematicSequenceConfig*               CinematicConfig;                                   // 0x0138(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UCinematicManagerComponent*             CinematicManager;                                  // 0x0140(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         ActiveSubtitleIndex;                               // 0x0148(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bHasSubtitles;                                     // 0x014C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4E8B[0x3];                                     // 0x014D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FCinematicSubtitleData>         ActiveCinematicSubtitles;                          // 0x0150(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	bool                                          bWaitingForLoadingScreen;                          // 0x0160(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void OnCinematicEnded__DelegateSignature();
	void BeginOverlap(class AActor* OverlappedActor, class AActor* OtherActor);
	void BindToSequencePlayerEvents(bool Bind, TDelegate<void()> K2Node_CreateDelegate_OutputDelegate, TDelegate<void()> K2Node_CreateDelegate_OutputDelegate_1, class ULevelSequencePlayer* CallFunc_GetSequencePlayer_ReturnValue, class ULevelSequencePlayer* CallFunc_GetSequencePlayer_ReturnValue_1, TDelegate<void()> K2Node_CreateDelegate_OutputDelegate_2, TDelegate<void()> K2Node_CreateDelegate_OutputDelegate_3);
	void ExecuteUbergraph_CV_Cinematic(int32 EntryPoint, class APlayerController* CallFunc_GetPlayerController_ReturnValue, class APlayerController* CallFunc_GetPlayerController_ReturnValue_1, class APawn* CallFunc_K2_GetPawn_ReturnValue, class AValeriaCharacter* K2Node_DynamicCast_AsValeria_Character, bool K2Node_DynamicCast_bSuccess, class UCharacterStateMachineComponent* CallFunc_GetCSM_ReturnValue, class UValeriaCharacterMoveComponent* CallFunc_GetValeriaCharacterMovementComponent_ReturnValue, class APlayerController* CallFunc_GetPlayerController_ReturnValue_2, class UUserWidget* CallFunc_Create_ReturnValue, class APlayerController* CallFunc_GetPlayerController_ReturnValue_3, class APawn* CallFunc_K2_GetPawn_ReturnValue_1, class AValeriaCharacter* K2Node_DynamicCast_AsValeria_Character_1, bool K2Node_DynamicCast_bSuccess_1, class APlayerController* CallFunc_GetPlayerController_ReturnValue_4, class APlayerController* CallFunc_GetPlayerController_ReturnValue_5, class APawn* CallFunc_K2_GetPawn_ReturnValue_2, class UWBP_Cinematic_Overlay_C* CallFunc_Create_ReturnValue_1, class AValeriaCharacter* K2Node_DynamicCast_AsValeria_Character_2, bool K2Node_DynamicCast_bSuccess_2, class UValeriaCharacterMoveComponent* CallFunc_GetValeriaCharacterMovementComponent_ReturnValue_1, int32 Temp_int_Loop_Counter_Variable, int32 CallFunc_Add_IntInt_ReturnValue, int32 CallFunc_Array_Length_ReturnValue, int32 CallFunc_Array_Length_ReturnValue_1, bool CallFunc_Less_IntInt_ReturnValue, bool CallFunc_IsValid_ReturnValue, class UGameInstance* CallFunc_GetGameInstance_ReturnValue, class UValeriaGameInstance* K2Node_DynamicCast_AsValeria_Game_Instance, bool K2Node_DynamicCast_bSuccess_3, EEndPlayReason K2Node_Event_EndPlayReason, class UGameInstance* CallFunc_GetGameInstance_ReturnValue_1, class UValeriaGameInstance* K2Node_DynamicCast_AsValeria_Game_Instance_1, bool K2Node_DynamicCast_bSuccess_4, int32 Temp_int_Array_Index_Variable, class UClass* CallFunc_Array_Get_Item, TArray<class UUserWidget*>& CallFunc_GetAllWidgetsOfClass_FoundWidgets, int32 CallFunc_Array_Length_ReturnValue_2, class AActor* K2Node_Event_OverlappedActor, class AActor* K2Node_Event_OtherActor, class AValeriaCharacter* K2Node_DynamicCast_AsValeria_Character_3, bool K2Node_DynamicCast_bSuccess_5, bool CallFunc_IsLocallyControlled_ReturnValue, class UPaliaScreenManager* CallFunc_GetGameInstanceSubsystem_ReturnValue, int32 CallFunc_AkEventGlobal_ReturnValue, class UPaliaScreenManager* CallFunc_GetGameInstanceSubsystem_ReturnValue_1, class UPaliaScreenManager* CallFunc_GetGameInstanceSubsystem_ReturnValue_2, bool CallFunc_IsLoadingScreenVisible_ReturnValue, TDelegate<void(class UCinematicSequenceConfig* CinConfig)> K2Node_CreateDelegate_OutputDelegate, class UValeriaWeather* CallFunc_GetWorldSubsystem_ReturnValue, class AValEnvironmentManager* CallFunc_GetCurrentEnvManager_ReturnValue, TSoftObjectPtr<class ULevelSequence> K2Node_CustomEvent_LevelSequence, TDelegate<void(TSoftObjectPtr<class ULevelSequence> LevelSequence)> K2Node_CreateDelegate_OutputDelegate_1, class APlayerController* CallFunc_GetPlayerController_ReturnValue_6, class APawn* CallFunc_K2_GetPawn_ReturnValue_3, class AValeriaCharacter* K2Node_DynamicCast_AsValeria_Character_4, bool K2Node_DynamicCast_bSuccess_6, bool CallFunc_Client_TryUnequip_ReturnValue, TDelegate<void()> K2Node_CreateDelegate_OutputDelegate_2, int32 CallFunc_GetTagValue_ReturnValue, bool CallFunc_Greater_IntInt_ReturnValue, bool CallFunc_IsValid_ReturnValue_1, class ULevelSequencePlayer* CallFunc_GetSequencePlayer_ReturnValue, bool CallFunc_SetActiveSequence_IsValid, int32 Temp_int_Variable, class UCinematicSequenceConfig* K2Node_CustomEvent_CinConfig, int32 CallFunc_Add_IntInt_ReturnValue_1, class UUserWidget* CallFunc_Array_Get_Item_1, bool CallFunc_Less_IntInt_ReturnValue_1, float K2Node_Event_DeltaSeconds, class UCinematicManagerComponent* CallFunc_GetCinematicManager_CinManager, bool CallFunc_GetCinematicManager_isValid, class UCinematicManagerComponent* CallFunc_GetCinematicManager_CinManager_1, bool CallFunc_GetCinematicManager_isValid_1, class UCinematicManagerComponent* CallFunc_GetCinematicManager_CinManager_2, bool CallFunc_GetCinematicManager_isValid_2, int32 Temp_int_Loop_Counter_Variable_1, bool CallFunc_Less_IntInt_ReturnValue_2, int32 CallFunc_Add_IntInt_ReturnValue_2, bool CallFunc_IsValid_ReturnValue_2, bool CallFunc_IsValidSoftObjectReference_ReturnValue, int32 Temp_int_Variable_1, class FText CallFunc_GetCurrentSubtitleText_SubtitleText, int32 CallFunc_Add_IntInt_ReturnValue_3, int32 Temp_int_Array_Index_Variable_1, class UClass* CallFunc_Array_Get_Item_2, TArray<class UUserWidget*>& CallFunc_GetAllWidgetsOfClass_FoundWidgets_1, class UUserWidget* CallFunc_Array_Get_Item_3, int32 CallFunc_Array_Length_ReturnValue_3, bool CallFunc_Less_IntInt_ReturnValue_3, TDelegate<void(EPaliaScreenState State)> K2Node_CreateDelegate_OutputDelegate_3, EPaliaScreenState K2Node_CustomEvent_state, bool K2Node_SwitchEnum_CmpSuccess, bool CallFunc_Not_PreBool_ReturnValue, bool CallFunc_BooleanAND_ReturnValue, class APlayerController* CallFunc_GetPlayerController_ReturnValue_7, bool CallFunc_IsValid_ReturnValue_3);
	void FastForwardToEnd(double DesiredTime, class ULevelSequencePlayer* CallFunc_GetSequencePlayer_ReturnValue, class ULevelSequencePlayer* CallFunc_GetSequencePlayer_ReturnValue_1, const struct FQualifiedFrameTime& CallFunc_GetCurrentTime_ReturnValue, const struct FQualifiedFrameTime& CallFunc_GetEndTime_ReturnValue, float CallFunc_Conv_QualifiedFrameTimeToSeconds_ReturnValue, float CallFunc_Conv_QualifiedFrameTimeToSeconds_ReturnValue_1, double CallFunc_Subtract_DoubleDouble_ReturnValue, class ULevelSequencePlayer* CallFunc_GetSequencePlayer_ReturnValue_2, class ULevelSequencePlayer* CallFunc_GetSequencePlayer_ReturnValue_3, bool CallFunc_IsValid_ReturnValue, bool CallFunc_IsValid_ReturnValue_1, bool CallFunc_Greater_DoubleDouble_ReturnValue, const struct FMovieSceneSequencePlaybackParams& K2Node_MakeStruct_MovieSceneSequencePlaybackParams, double CallFunc_Greater_DoubleDouble_B_ImplicitCast, double CallFunc_Subtract_DoubleDouble_A_ImplicitCast, float K2Node_MakeStruct_Time_ImplicitCast);
	void GetCinematicManager(class UCinematicManagerComponent** CinManager, bool* IsValid, class UCinematicManagerComponent* CallFunc_GetCinematicsManager_CinematicsManager, bool CallFunc_GetCinematicsManager_bIsValid, bool CallFunc_IsValid_ReturnValue);
	void GetCurrentSubtitleText(class FText* SubtitleText, const struct FCinematicSubtitleData& ActiveSubtitle, double CurrentPlaybackTimeSeconds, int32 Temp_int_Variable, bool CallFunc_Less_DoubleDouble_ReturnValue, bool CallFunc_Greater_DoubleDouble_ReturnValue, bool CallFunc_BooleanAND_ReturnValue, int32 CallFunc_Add_IntInt_ReturnValue, int32 CallFunc_Add_IntInt_ReturnValue_1, int32 CallFunc_Array_Length_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue, bool CallFunc_Less_DoubleDouble_ReturnValue_1, bool CallFunc_Greater_DoubleDouble_ReturnValue_1, bool CallFunc_Less_DoubleDouble_ReturnValue_2, class ULevelSequencePlayer* CallFunc_GetSequencePlayer_ReturnValue, const struct FQualifiedFrameTime& CallFunc_GetCurrentTime_ReturnValue, float CallFunc_Conv_QualifiedFrameTimeToSeconds_ReturnValue, double CallFunc_Greater_DoubleDouble_B_ImplicitCast, double CallFunc_Less_DoubleDouble_B_ImplicitCast, double CallFunc_Less_DoubleDouble_B_ImplicitCast_1, double CallFunc_Greater_DoubleDouble_B_ImplicitCast_1, double CallFunc_Less_DoubleDouble_B_ImplicitCast_2, double K2Node_VariableSet_CurrentPlaybackTimeSeconds_ImplicitCast);
	void HandleScriptStartRequest(TSoftObjectPtr<class ULevelSequence> DesiredSequence, class UObject* CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue, class ULevelSequence* K2Node_DynamicCast_AsLevel_Sequence, bool K2Node_DynamicCast_bSuccess, bool CallFunc_IsValid_ReturnValue, bool CallFunc_EqualEqual_ObjectObject_ReturnValue);
	void HandleStartCinematicRequest(class UCinematicSequenceConfig* CinConfig, bool CallFunc_IsValid_ReturnValue, bool CallFunc_EqualEqual_StriStri_ReturnValue);
	void OnCinBegin();
	void OnCinematicBegin__DelegateSignature();
	void OnCinEnd();
	void OnEndCinMus(class UAkSwitchValue* EndMusic, class UCinematicManagerComponent* CallFunc_GetCinematicManager_CinManager, bool CallFunc_GetCinematicManager_isValid, class UComp_CV_Local_Music_C* CallFunc_GetComponentByClass_ReturnValue, bool CallFunc_IsValid_ReturnValue, class UValeriaTimeManager* CallFunc_GetGameInstanceSubsystem_ReturnValue, bool CallFunc_IsValid_ReturnValue_1, const struct FTimeOfDayFilter& K2Node_MakeStruct_TimeOfDayFilter, bool CallFunc_IsWithinTimeOfDayFilter_ReturnValue);
	void OnScreenStateChanged(EPaliaScreenState State);
	void OnScriptStartCinematic(TSoftObjectPtr<class ULevelSequence> LevelSequence);
	void OnSkipCutsceneCnsleCmd();
	void OnStartCinematic(class UCinematicSequenceConfig* CinConfig);
	void PrimeSubtitleMode(class UCinematicSequenceConfig* Param_CinematicConfig, class UObject* CallFunc_LoadAsset_Blocking_ReturnValue, int32 CallFunc_Array_Length_ReturnValue, class UCinSequenceSubtitlesConfig* K2Node_DynamicCast_AsCin_Sequence_Subtitles_Config, bool K2Node_DynamicCast_bSuccess, bool CallFunc_Greater_IntInt_ReturnValue, bool CallFunc_IsValidSoftObjectReference_ReturnValue);
	void ReceiveBeginPlay();
	void ReceiveEndPlay(EEndPlayReason EndPlayReason);
	void ReceiveTick(float DeltaSeconds);
	void ScheduleCinematic();
	void Set_NPCVisibility(bool IsVisible, int32 Temp_int_Array_Index_Variable, int32 Temp_int_Loop_Counter_Variable, int32 CallFunc_Add_IntInt_ReturnValue, const struct FVAL_VisibilityModifierSource& K2Node_MakeStruct_VAL_VisibilityModifierSource, TArray<class ABP_ValeriaVillagerCharacter_C*>& CallFunc_GetAllActorsOfClass_OutActors, int32 CallFunc_Array_Length_ReturnValue, class AActor* CallFunc_Array_Get_Item, bool CallFunc_Less_IntInt_ReturnValue, class ABP_ValeriaVillagerCharacter_C* K2Node_DynamicCast_AsBP_Valeria_Villager_Character, bool K2Node_DynamicCast_bSuccess, bool CallFunc_Client_RemoveVisibilityModifierSourceByKey_ReturnValue);
	void SetActiveSequence(bool* IsValid, bool CallFunc_IsConstrainedPlatform_ReturnValue, bool CallFunc_IsValid_ReturnValue, class UValeriaGameUserSettings* CallFunc_GetValeriaGameUserSettings_ReturnValue, int32 CallFunc_GetOverallScalabilityLevel_ReturnValue, bool CallFunc_NotEqual_IntInt_ReturnValue, bool CallFunc_IsValid_ReturnValue_1, bool CallFunc_LessEqual_IntInt_ReturnValue, bool CallFunc_BooleanAND_ReturnValue);
	void SetAudioListener(bool ListenerToCamera, class APawn* CallFunc_GetPlayerPawn_ReturnValue, class AValeriaCharacter* K2Node_DynamicCast_AsValeria_Character, bool K2Node_DynamicCast_bSuccess, class UComp_Listener_Padding_C* CallFunc_GetComponentByClass_ReturnValue, class AController* CallFunc_GetController_ReturnValue, class APlayerController* K2Node_DynamicCast_AsPlayer_Controller, bool K2Node_DynamicCast_bSuccess_1);
	void Start_Cinematic();
	void StartCameraFadeOut();
	void Stop_Cinematic();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"CV_Cinematic_C">();
	}
	static class UCV_Cinematic_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCV_Cinematic_C>();
	}
};
static_assert(alignof(UCV_Cinematic_C) == 0x000008, "Wrong alignment on UCV_Cinematic_C");
static_assert(sizeof(UCV_Cinematic_C) == 0x000168, "Wrong size on UCV_Cinematic_C");
static_assert(offsetof(UCV_Cinematic_C, UberGraphFrame_CV_Cinematic_C) == 0x0000B0, "Member 'UCV_Cinematic_C::UberGraphFrame_CV_Cinematic_C' has a wrong offset!");
static_assert(offsetof(UCV_Cinematic_C, Enabled) == 0x0000B8, "Member 'UCV_Cinematic_C::Enabled' has a wrong offset!");
static_assert(offsetof(UCV_Cinematic_C, LevelSequence_Default) == 0x0000C0, "Member 'UCV_Cinematic_C::LevelSequence_Default' has a wrong offset!");
static_assert(offsetof(UCV_Cinematic_C, BP_Player) == 0x0000C8, "Member 'UCV_Cinematic_C::BP_Player' has a wrong offset!");
static_assert(offsetof(UCV_Cinematic_C, IsRealTime) == 0x0000D0, "Member 'UCV_Cinematic_C::IsRealTime' has a wrong offset!");
static_assert(offsetof(UCV_Cinematic_C, MovieWidget) == 0x0000D8, "Member 'UCV_Cinematic_C::MovieWidget' has a wrong offset!");
static_assert(offsetof(UCV_Cinematic_C, FullScreenWidget) == 0x0000E0, "Member 'UCV_Cinematic_C::FullScreenWidget' has a wrong offset!");
static_assert(offsetof(UCV_Cinematic_C, OnCinematicEnded) == 0x0000E8, "Member 'UCV_Cinematic_C::OnCinematicEnded' has a wrong offset!");
static_assert(offsetof(UCV_Cinematic_C, CineUi) == 0x0000F8, "Member 'UCV_Cinematic_C::CineUi' has a wrong offset!");
static_assert(offsetof(UCV_Cinematic_C, Widget_Array) == 0x000100, "Member 'UCV_Cinematic_C::Widget_Array' has a wrong offset!");
static_assert(offsetof(UCV_Cinematic_C, OnCinematicBegin) == 0x000110, "Member 'UCV_Cinematic_C::OnCinematicBegin' has a wrong offset!");
static_assert(offsetof(UCV_Cinematic_C, IsCinePlaying) == 0x000120, "Member 'UCV_Cinematic_C::IsCinePlaying' has a wrong offset!");
static_assert(offsetof(UCV_Cinematic_C, ActiveSequence) == 0x000128, "Member 'UCV_Cinematic_C::ActiveSequence' has a wrong offset!");
static_assert(offsetof(UCV_Cinematic_C, LevelSequence_LowSpec) == 0x000130, "Member 'UCV_Cinematic_C::LevelSequence_LowSpec' has a wrong offset!");
static_assert(offsetof(UCV_Cinematic_C, CinematicConfig) == 0x000138, "Member 'UCV_Cinematic_C::CinematicConfig' has a wrong offset!");
static_assert(offsetof(UCV_Cinematic_C, CinematicManager) == 0x000140, "Member 'UCV_Cinematic_C::CinematicManager' has a wrong offset!");
static_assert(offsetof(UCV_Cinematic_C, ActiveSubtitleIndex) == 0x000148, "Member 'UCV_Cinematic_C::ActiveSubtitleIndex' has a wrong offset!");
static_assert(offsetof(UCV_Cinematic_C, bHasSubtitles) == 0x00014C, "Member 'UCV_Cinematic_C::bHasSubtitles' has a wrong offset!");
static_assert(offsetof(UCV_Cinematic_C, ActiveCinematicSubtitles) == 0x000150, "Member 'UCV_Cinematic_C::ActiveCinematicSubtitles' has a wrong offset!");
static_assert(offsetof(UCV_Cinematic_C, bWaitingForLoadingScreen) == 0x000160, "Member 'UCV_Cinematic_C::bWaitingForLoadingScreen' has a wrong offset!");

}

