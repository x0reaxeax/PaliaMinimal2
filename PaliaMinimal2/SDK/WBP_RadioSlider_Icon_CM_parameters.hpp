#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_RadioSlider_Icon_CM

#include "Basic.hpp"

#include "BP_RadioSliderPregisteredElement_structs.hpp"
#include "UMG_structs.hpp"
#include "SlateCore_structs.hpp"
#include "CommonInput_structs.hpp"


namespace SDK::Params
{

// Function WBP_RadioSlider_Icon_CM.WBP_RadioSlider_Icon_CM_C.ExecuteUbergraph_WBP_RadioSlider_Icon_CM
// 0x0138 (0x0138 - 0x0000)
struct WBP_RadioSlider_Icon_CM_C_ExecuteUbergraph_WBP_RadioSlider_Icon_CM final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_AkEventGlobal_ReturnValue;                // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGeometry                              K2Node_Event_MyGeometry;                           // 0x0008(0x0038)(IsPlainOldData, NoDestructor)
	struct FPointerEvent                          K2Node_Event_MouseEvent_1;                         // 0x0040(0x0078)(ConstParm)
	struct FPointerEvent                          K2Node_Event_MouseEvent;                           // 0x00B8(0x0078)(ConstParm)
	struct FFocusEvent                            K2Node_Event_InFocusEvent;                         // 0x0130(0x0008)(NoDestructor)
};
static_assert(alignof(WBP_RadioSlider_Icon_CM_C_ExecuteUbergraph_WBP_RadioSlider_Icon_CM) == 0x000008, "Wrong alignment on WBP_RadioSlider_Icon_CM_C_ExecuteUbergraph_WBP_RadioSlider_Icon_CM");
static_assert(sizeof(WBP_RadioSlider_Icon_CM_C_ExecuteUbergraph_WBP_RadioSlider_Icon_CM) == 0x000138, "Wrong size on WBP_RadioSlider_Icon_CM_C_ExecuteUbergraph_WBP_RadioSlider_Icon_CM");
static_assert(offsetof(WBP_RadioSlider_Icon_CM_C_ExecuteUbergraph_WBP_RadioSlider_Icon_CM, EntryPoint) == 0x000000, "Member 'WBP_RadioSlider_Icon_CM_C_ExecuteUbergraph_WBP_RadioSlider_Icon_CM::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_RadioSlider_Icon_CM_C_ExecuteUbergraph_WBP_RadioSlider_Icon_CM, CallFunc_AkEventGlobal_ReturnValue) == 0x000004, "Member 'WBP_RadioSlider_Icon_CM_C_ExecuteUbergraph_WBP_RadioSlider_Icon_CM::CallFunc_AkEventGlobal_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_RadioSlider_Icon_CM_C_ExecuteUbergraph_WBP_RadioSlider_Icon_CM, K2Node_Event_MyGeometry) == 0x000008, "Member 'WBP_RadioSlider_Icon_CM_C_ExecuteUbergraph_WBP_RadioSlider_Icon_CM::K2Node_Event_MyGeometry' has a wrong offset!");
static_assert(offsetof(WBP_RadioSlider_Icon_CM_C_ExecuteUbergraph_WBP_RadioSlider_Icon_CM, K2Node_Event_MouseEvent_1) == 0x000040, "Member 'WBP_RadioSlider_Icon_CM_C_ExecuteUbergraph_WBP_RadioSlider_Icon_CM::K2Node_Event_MouseEvent_1' has a wrong offset!");
static_assert(offsetof(WBP_RadioSlider_Icon_CM_C_ExecuteUbergraph_WBP_RadioSlider_Icon_CM, K2Node_Event_MouseEvent) == 0x0000B8, "Member 'WBP_RadioSlider_Icon_CM_C_ExecuteUbergraph_WBP_RadioSlider_Icon_CM::K2Node_Event_MouseEvent' has a wrong offset!");
static_assert(offsetof(WBP_RadioSlider_Icon_CM_C_ExecuteUbergraph_WBP_RadioSlider_Icon_CM, K2Node_Event_InFocusEvent) == 0x000130, "Member 'WBP_RadioSlider_Icon_CM_C_ExecuteUbergraph_WBP_RadioSlider_Icon_CM::K2Node_Event_InFocusEvent' has a wrong offset!");

// Function WBP_RadioSlider_Icon_CM.WBP_RadioSlider_Icon_CM_C.GetTooltip
// 0x0008 (0x0008 - 0x0000)
struct WBP_RadioSlider_Icon_CM_C_GetTooltip final
{
public:
	class UUserWidget*                            ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_RadioSlider_Icon_CM_C_GetTooltip) == 0x000008, "Wrong alignment on WBP_RadioSlider_Icon_CM_C_GetTooltip");
static_assert(sizeof(WBP_RadioSlider_Icon_CM_C_GetTooltip) == 0x000008, "Wrong size on WBP_RadioSlider_Icon_CM_C_GetTooltip");
static_assert(offsetof(WBP_RadioSlider_Icon_CM_C_GetTooltip, ReturnValue) == 0x000000, "Member 'WBP_RadioSlider_Icon_CM_C_GetTooltip::ReturnValue' has a wrong offset!");

// Function WBP_RadioSlider_Icon_CM.WBP_RadioSlider_Icon_CM_C.OnButtonClicked__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct WBP_RadioSlider_Icon_CM_C_OnButtonClicked__DelegateSignature final
{
public:
	class UWBP_RadioSlider_Icon_CM_C*             Widget;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_RadioSlider_Icon_CM_C_OnButtonClicked__DelegateSignature) == 0x000008, "Wrong alignment on WBP_RadioSlider_Icon_CM_C_OnButtonClicked__DelegateSignature");
static_assert(sizeof(WBP_RadioSlider_Icon_CM_C_OnButtonClicked__DelegateSignature) == 0x000008, "Wrong size on WBP_RadioSlider_Icon_CM_C_OnButtonClicked__DelegateSignature");
static_assert(offsetof(WBP_RadioSlider_Icon_CM_C_OnButtonClicked__DelegateSignature, Widget) == 0x000000, "Member 'WBP_RadioSlider_Icon_CM_C_OnButtonClicked__DelegateSignature::Widget' has a wrong offset!");

// Function WBP_RadioSlider_Icon_CM.WBP_RadioSlider_Icon_CM_C.OnFocusLost
// 0x0008 (0x0008 - 0x0000)
struct WBP_RadioSlider_Icon_CM_C_OnFocusLost final
{
public:
	struct FFocusEvent                            InFocusEvent;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
};
static_assert(alignof(WBP_RadioSlider_Icon_CM_C_OnFocusLost) == 0x000004, "Wrong alignment on WBP_RadioSlider_Icon_CM_C_OnFocusLost");
static_assert(sizeof(WBP_RadioSlider_Icon_CM_C_OnFocusLost) == 0x000008, "Wrong size on WBP_RadioSlider_Icon_CM_C_OnFocusLost");
static_assert(offsetof(WBP_RadioSlider_Icon_CM_C_OnFocusLost, InFocusEvent) == 0x000000, "Member 'WBP_RadioSlider_Icon_CM_C_OnFocusLost::InFocusEvent' has a wrong offset!");

// Function WBP_RadioSlider_Icon_CM.WBP_RadioSlider_Icon_CM_C.OnFocusReceived
// 0x01C0 (0x01C0 - 0x0000)
struct WBP_RadioSlider_Icon_CM_C_OnFocusReceived final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FFocusEvent                            InFocusEvent;                                      // 0x0038(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	struct FEventReply                            ReturnValue;                                       // 0x0040(0x00B8)(Parm, OutParm, ReturnParm)
	struct FEventReply                            CallFunc_Handled_ReturnValue;                      // 0x00F8(0x00B8)()
	class UCommonInputSubsystem*                  CallFunc_GetLocalPlayerSubsystem_ReturnValue;      // 0x01B0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	ECommonInputType                              CallFunc_GetCurrentInputType_ReturnValue;          // 0x01B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x01B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_RadioSlider_Icon_CM_C_OnFocusReceived) == 0x000008, "Wrong alignment on WBP_RadioSlider_Icon_CM_C_OnFocusReceived");
static_assert(sizeof(WBP_RadioSlider_Icon_CM_C_OnFocusReceived) == 0x0001C0, "Wrong size on WBP_RadioSlider_Icon_CM_C_OnFocusReceived");
static_assert(offsetof(WBP_RadioSlider_Icon_CM_C_OnFocusReceived, MyGeometry) == 0x000000, "Member 'WBP_RadioSlider_Icon_CM_C_OnFocusReceived::MyGeometry' has a wrong offset!");
static_assert(offsetof(WBP_RadioSlider_Icon_CM_C_OnFocusReceived, InFocusEvent) == 0x000038, "Member 'WBP_RadioSlider_Icon_CM_C_OnFocusReceived::InFocusEvent' has a wrong offset!");
static_assert(offsetof(WBP_RadioSlider_Icon_CM_C_OnFocusReceived, ReturnValue) == 0x000040, "Member 'WBP_RadioSlider_Icon_CM_C_OnFocusReceived::ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_RadioSlider_Icon_CM_C_OnFocusReceived, CallFunc_Handled_ReturnValue) == 0x0000F8, "Member 'WBP_RadioSlider_Icon_CM_C_OnFocusReceived::CallFunc_Handled_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_RadioSlider_Icon_CM_C_OnFocusReceived, CallFunc_GetLocalPlayerSubsystem_ReturnValue) == 0x0001B0, "Member 'WBP_RadioSlider_Icon_CM_C_OnFocusReceived::CallFunc_GetLocalPlayerSubsystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_RadioSlider_Icon_CM_C_OnFocusReceived, CallFunc_GetCurrentInputType_ReturnValue) == 0x0001B8, "Member 'WBP_RadioSlider_Icon_CM_C_OnFocusReceived::CallFunc_GetCurrentInputType_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_RadioSlider_Icon_CM_C_OnFocusReceived, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x0001B9, "Member 'WBP_RadioSlider_Icon_CM_C_OnFocusReceived::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function WBP_RadioSlider_Icon_CM.WBP_RadioSlider_Icon_CM_C.OnMouseEnter
// 0x00B0 (0x00B0 - 0x0000)
struct WBP_RadioSlider_Icon_CM_C_OnMouseEnter final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FPointerEvent                          MouseEvent;                                        // 0x0038(0x0078)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(WBP_RadioSlider_Icon_CM_C_OnMouseEnter) == 0x000008, "Wrong alignment on WBP_RadioSlider_Icon_CM_C_OnMouseEnter");
static_assert(sizeof(WBP_RadioSlider_Icon_CM_C_OnMouseEnter) == 0x0000B0, "Wrong size on WBP_RadioSlider_Icon_CM_C_OnMouseEnter");
static_assert(offsetof(WBP_RadioSlider_Icon_CM_C_OnMouseEnter, MyGeometry) == 0x000000, "Member 'WBP_RadioSlider_Icon_CM_C_OnMouseEnter::MyGeometry' has a wrong offset!");
static_assert(offsetof(WBP_RadioSlider_Icon_CM_C_OnMouseEnter, MouseEvent) == 0x000038, "Member 'WBP_RadioSlider_Icon_CM_C_OnMouseEnter::MouseEvent' has a wrong offset!");

// Function WBP_RadioSlider_Icon_CM.WBP_RadioSlider_Icon_CM_C.OnMouseLeave
// 0x0078 (0x0078 - 0x0000)
struct WBP_RadioSlider_Icon_CM_C_OnMouseLeave final
{
public:
	struct FPointerEvent                          MouseEvent;                                        // 0x0000(0x0078)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(WBP_RadioSlider_Icon_CM_C_OnMouseLeave) == 0x000008, "Wrong alignment on WBP_RadioSlider_Icon_CM_C_OnMouseLeave");
static_assert(sizeof(WBP_RadioSlider_Icon_CM_C_OnMouseLeave) == 0x000078, "Wrong size on WBP_RadioSlider_Icon_CM_C_OnMouseLeave");
static_assert(offsetof(WBP_RadioSlider_Icon_CM_C_OnMouseLeave, MouseEvent) == 0x000000, "Member 'WBP_RadioSlider_Icon_CM_C_OnMouseLeave::MouseEvent' has a wrong offset!");

// Function WBP_RadioSlider_Icon_CM.WBP_RadioSlider_Icon_CM_C.UpdateStyle
// 0x0058 (0x0058 - 0x0000)
struct WBP_RadioSlider_Icon_CM_C_UpdateStyle final
{
public:
	struct FBP_RadioSliderPregisteredElement      Element;                                           // 0x0000(0x0058)(BlueprintVisible, BlueprintReadOnly, Parm, ContainsInstancedReference, HasGetValueTypeHash)
};
static_assert(alignof(WBP_RadioSlider_Icon_CM_C_UpdateStyle) == 0x000008, "Wrong alignment on WBP_RadioSlider_Icon_CM_C_UpdateStyle");
static_assert(sizeof(WBP_RadioSlider_Icon_CM_C_UpdateStyle) == 0x000058, "Wrong size on WBP_RadioSlider_Icon_CM_C_UpdateStyle");
static_assert(offsetof(WBP_RadioSlider_Icon_CM_C_UpdateStyle, Element) == 0x000000, "Member 'WBP_RadioSlider_Icon_CM_C_UpdateStyle::Element' has a wrong offset!");

}

