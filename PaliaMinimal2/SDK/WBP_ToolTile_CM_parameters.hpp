#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_ToolTile_CM

#include "Basic.hpp"

#include "CommonInput_structs.hpp"
#include "Palia_structs.hpp"
#include "UMG_structs.hpp"
#include "SlateCore_structs.hpp"
#include "GameplayTags_structs.hpp"


namespace SDK::Params
{

// Function WBP_ToolTile_CM.WBP_ToolTile_CM_C.BndEvt__WBP_ToolTile_CM_WBP_ItemSlot_CM_K2Node_ComponentBoundEvent_0_OnHovered__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct WBP_ToolTile_CM_C_BndEvt__WBP_ToolTile_CM_WBP_ItemSlot_CM_K2Node_ComponentBoundEvent_0_OnHovered__DelegateSignature final
{
public:
	class UWBP_ItemSlot_CM_C*                     Param_Slot;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ToolTile_CM_C_BndEvt__WBP_ToolTile_CM_WBP_ItemSlot_CM_K2Node_ComponentBoundEvent_0_OnHovered__DelegateSignature) == 0x000008, "Wrong alignment on WBP_ToolTile_CM_C_BndEvt__WBP_ToolTile_CM_WBP_ItemSlot_CM_K2Node_ComponentBoundEvent_0_OnHovered__DelegateSignature");
static_assert(sizeof(WBP_ToolTile_CM_C_BndEvt__WBP_ToolTile_CM_WBP_ItemSlot_CM_K2Node_ComponentBoundEvent_0_OnHovered__DelegateSignature) == 0x000008, "Wrong size on WBP_ToolTile_CM_C_BndEvt__WBP_ToolTile_CM_WBP_ItemSlot_CM_K2Node_ComponentBoundEvent_0_OnHovered__DelegateSignature");
static_assert(offsetof(WBP_ToolTile_CM_C_BndEvt__WBP_ToolTile_CM_WBP_ItemSlot_CM_K2Node_ComponentBoundEvent_0_OnHovered__DelegateSignature, Param_Slot) == 0x000000, "Member 'WBP_ToolTile_CM_C_BndEvt__WBP_ToolTile_CM_WBP_ItemSlot_CM_K2Node_ComponentBoundEvent_0_OnHovered__DelegateSignature::Param_Slot' has a wrong offset!");

// Function WBP_ToolTile_CM.WBP_ToolTile_CM_C.BndEvt__WBP_ToolTile_CM_WBP_ItemSlot_CM_K2Node_ComponentBoundEvent_12_OnRightClicked__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct WBP_ToolTile_CM_C_BndEvt__WBP_ToolTile_CM_WBP_ItemSlot_CM_K2Node_ComponentBoundEvent_12_OnRightClicked__DelegateSignature final
{
public:
	class UWBP_ItemSlot_CM_C*                     Param_Slot;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ToolTile_CM_C_BndEvt__WBP_ToolTile_CM_WBP_ItemSlot_CM_K2Node_ComponentBoundEvent_12_OnRightClicked__DelegateSignature) == 0x000008, "Wrong alignment on WBP_ToolTile_CM_C_BndEvt__WBP_ToolTile_CM_WBP_ItemSlot_CM_K2Node_ComponentBoundEvent_12_OnRightClicked__DelegateSignature");
static_assert(sizeof(WBP_ToolTile_CM_C_BndEvt__WBP_ToolTile_CM_WBP_ItemSlot_CM_K2Node_ComponentBoundEvent_12_OnRightClicked__DelegateSignature) == 0x000008, "Wrong size on WBP_ToolTile_CM_C_BndEvt__WBP_ToolTile_CM_WBP_ItemSlot_CM_K2Node_ComponentBoundEvent_12_OnRightClicked__DelegateSignature");
static_assert(offsetof(WBP_ToolTile_CM_C_BndEvt__WBP_ToolTile_CM_WBP_ItemSlot_CM_K2Node_ComponentBoundEvent_12_OnRightClicked__DelegateSignature, Param_Slot) == 0x000000, "Member 'WBP_ToolTile_CM_C_BndEvt__WBP_ToolTile_CM_WBP_ItemSlot_CM_K2Node_ComponentBoundEvent_12_OnRightClicked__DelegateSignature::Param_Slot' has a wrong offset!");

// Function WBP_ToolTile_CM.WBP_ToolTile_CM_C.BndEvt__WBP_ToolTile_CM_WBP_ItemSlot_CM_K2Node_ComponentBoundEvent_17_OnDragged__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct WBP_ToolTile_CM_C_BndEvt__WBP_ToolTile_CM_WBP_ItemSlot_CM_K2Node_ComponentBoundEvent_17_OnDragged__DelegateSignature final
{
public:
	class UWBP_ItemSlot_CM_C*                     Param_Slot;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ToolTile_CM_C_BndEvt__WBP_ToolTile_CM_WBP_ItemSlot_CM_K2Node_ComponentBoundEvent_17_OnDragged__DelegateSignature) == 0x000008, "Wrong alignment on WBP_ToolTile_CM_C_BndEvt__WBP_ToolTile_CM_WBP_ItemSlot_CM_K2Node_ComponentBoundEvent_17_OnDragged__DelegateSignature");
static_assert(sizeof(WBP_ToolTile_CM_C_BndEvt__WBP_ToolTile_CM_WBP_ItemSlot_CM_K2Node_ComponentBoundEvent_17_OnDragged__DelegateSignature) == 0x000008, "Wrong size on WBP_ToolTile_CM_C_BndEvt__WBP_ToolTile_CM_WBP_ItemSlot_CM_K2Node_ComponentBoundEvent_17_OnDragged__DelegateSignature");
static_assert(offsetof(WBP_ToolTile_CM_C_BndEvt__WBP_ToolTile_CM_WBP_ItemSlot_CM_K2Node_ComponentBoundEvent_17_OnDragged__DelegateSignature, Param_Slot) == 0x000000, "Member 'WBP_ToolTile_CM_C_BndEvt__WBP_ToolTile_CM_WBP_ItemSlot_CM_K2Node_ComponentBoundEvent_17_OnDragged__DelegateSignature::Param_Slot' has a wrong offset!");

// Function WBP_ToolTile_CM.WBP_ToolTile_CM_C.BndEvt__WBP_ToolTile_CM_WBP_ItemSlot_CM_K2Node_ComponentBoundEvent_18_OnItemDropped__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct WBP_ToolTile_CM_C_BndEvt__WBP_ToolTile_CM_WBP_ItemSlot_CM_K2Node_ComponentBoundEvent_18_OnItemDropped__DelegateSignature final
{
public:
	class UWBP_ItemSlot_CM_C*                     Param_Slot;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UVALUI_ItemDragDrop*                    Operation;                                         // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ToolTile_CM_C_BndEvt__WBP_ToolTile_CM_WBP_ItemSlot_CM_K2Node_ComponentBoundEvent_18_OnItemDropped__DelegateSignature) == 0x000008, "Wrong alignment on WBP_ToolTile_CM_C_BndEvt__WBP_ToolTile_CM_WBP_ItemSlot_CM_K2Node_ComponentBoundEvent_18_OnItemDropped__DelegateSignature");
static_assert(sizeof(WBP_ToolTile_CM_C_BndEvt__WBP_ToolTile_CM_WBP_ItemSlot_CM_K2Node_ComponentBoundEvent_18_OnItemDropped__DelegateSignature) == 0x000010, "Wrong size on WBP_ToolTile_CM_C_BndEvt__WBP_ToolTile_CM_WBP_ItemSlot_CM_K2Node_ComponentBoundEvent_18_OnItemDropped__DelegateSignature");
static_assert(offsetof(WBP_ToolTile_CM_C_BndEvt__WBP_ToolTile_CM_WBP_ItemSlot_CM_K2Node_ComponentBoundEvent_18_OnItemDropped__DelegateSignature, Param_Slot) == 0x000000, "Member 'WBP_ToolTile_CM_C_BndEvt__WBP_ToolTile_CM_WBP_ItemSlot_CM_K2Node_ComponentBoundEvent_18_OnItemDropped__DelegateSignature::Param_Slot' has a wrong offset!");
static_assert(offsetof(WBP_ToolTile_CM_C_BndEvt__WBP_ToolTile_CM_WBP_ItemSlot_CM_K2Node_ComponentBoundEvent_18_OnItemDropped__DelegateSignature, Operation) == 0x000008, "Member 'WBP_ToolTile_CM_C_BndEvt__WBP_ToolTile_CM_WBP_ItemSlot_CM_K2Node_ComponentBoundEvent_18_OnItemDropped__DelegateSignature::Operation' has a wrong offset!");

// Function WBP_ToolTile_CM.WBP_ToolTile_CM_C.BndEvt__WBP_ToolTile_CM_WBP_ItemSlot_CM_K2Node_ComponentBoundEvent_19_OnGlobalDragDetected__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct WBP_ToolTile_CM_C_BndEvt__WBP_ToolTile_CM_WBP_ItemSlot_CM_K2Node_ComponentBoundEvent_19_OnGlobalDragDetected__DelegateSignature final
{
public:
	class UWBP_ItemSlot_CM_C*                     Param_Slot;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UVALUI_ItemDragDrop*                    Operation;                                         // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ToolTile_CM_C_BndEvt__WBP_ToolTile_CM_WBP_ItemSlot_CM_K2Node_ComponentBoundEvent_19_OnGlobalDragDetected__DelegateSignature) == 0x000008, "Wrong alignment on WBP_ToolTile_CM_C_BndEvt__WBP_ToolTile_CM_WBP_ItemSlot_CM_K2Node_ComponentBoundEvent_19_OnGlobalDragDetected__DelegateSignature");
static_assert(sizeof(WBP_ToolTile_CM_C_BndEvt__WBP_ToolTile_CM_WBP_ItemSlot_CM_K2Node_ComponentBoundEvent_19_OnGlobalDragDetected__DelegateSignature) == 0x000010, "Wrong size on WBP_ToolTile_CM_C_BndEvt__WBP_ToolTile_CM_WBP_ItemSlot_CM_K2Node_ComponentBoundEvent_19_OnGlobalDragDetected__DelegateSignature");
static_assert(offsetof(WBP_ToolTile_CM_C_BndEvt__WBP_ToolTile_CM_WBP_ItemSlot_CM_K2Node_ComponentBoundEvent_19_OnGlobalDragDetected__DelegateSignature, Param_Slot) == 0x000000, "Member 'WBP_ToolTile_CM_C_BndEvt__WBP_ToolTile_CM_WBP_ItemSlot_CM_K2Node_ComponentBoundEvent_19_OnGlobalDragDetected__DelegateSignature::Param_Slot' has a wrong offset!");
static_assert(offsetof(WBP_ToolTile_CM_C_BndEvt__WBP_ToolTile_CM_WBP_ItemSlot_CM_K2Node_ComponentBoundEvent_19_OnGlobalDragDetected__DelegateSignature, Operation) == 0x000008, "Member 'WBP_ToolTile_CM_C_BndEvt__WBP_ToolTile_CM_WBP_ItemSlot_CM_K2Node_ComponentBoundEvent_19_OnGlobalDragDetected__DelegateSignature::Operation' has a wrong offset!");

// Function WBP_ToolTile_CM.WBP_ToolTile_CM_C.BndEvt__WBP_ToolTile_CM_WBP_ItemSlot_CM_K2Node_ComponentBoundEvent_4_OnUnhovered__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct WBP_ToolTile_CM_C_BndEvt__WBP_ToolTile_CM_WBP_ItemSlot_CM_K2Node_ComponentBoundEvent_4_OnUnhovered__DelegateSignature final
{
public:
	class UWBP_ItemSlot_CM_C*                     Param_Slot;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ToolTile_CM_C_BndEvt__WBP_ToolTile_CM_WBP_ItemSlot_CM_K2Node_ComponentBoundEvent_4_OnUnhovered__DelegateSignature) == 0x000008, "Wrong alignment on WBP_ToolTile_CM_C_BndEvt__WBP_ToolTile_CM_WBP_ItemSlot_CM_K2Node_ComponentBoundEvent_4_OnUnhovered__DelegateSignature");
static_assert(sizeof(WBP_ToolTile_CM_C_BndEvt__WBP_ToolTile_CM_WBP_ItemSlot_CM_K2Node_ComponentBoundEvent_4_OnUnhovered__DelegateSignature) == 0x000008, "Wrong size on WBP_ToolTile_CM_C_BndEvt__WBP_ToolTile_CM_WBP_ItemSlot_CM_K2Node_ComponentBoundEvent_4_OnUnhovered__DelegateSignature");
static_assert(offsetof(WBP_ToolTile_CM_C_BndEvt__WBP_ToolTile_CM_WBP_ItemSlot_CM_K2Node_ComponentBoundEvent_4_OnUnhovered__DelegateSignature, Param_Slot) == 0x000000, "Member 'WBP_ToolTile_CM_C_BndEvt__WBP_ToolTile_CM_WBP_ItemSlot_CM_K2Node_ComponentBoundEvent_4_OnUnhovered__DelegateSignature::Param_Slot' has a wrong offset!");

// Function WBP_ToolTile_CM.WBP_ToolTile_CM_C.BndEvt__WBP_ToolTile_CM_WBP_ItemSlot_CM_K2Node_ComponentBoundEvent_9_OnLeftClicked__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct WBP_ToolTile_CM_C_BndEvt__WBP_ToolTile_CM_WBP_ItemSlot_CM_K2Node_ComponentBoundEvent_9_OnLeftClicked__DelegateSignature final
{
public:
	class UWBP_ItemSlot_CM_C*                     Param_Slot;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ToolTile_CM_C_BndEvt__WBP_ToolTile_CM_WBP_ItemSlot_CM_K2Node_ComponentBoundEvent_9_OnLeftClicked__DelegateSignature) == 0x000008, "Wrong alignment on WBP_ToolTile_CM_C_BndEvt__WBP_ToolTile_CM_WBP_ItemSlot_CM_K2Node_ComponentBoundEvent_9_OnLeftClicked__DelegateSignature");
static_assert(sizeof(WBP_ToolTile_CM_C_BndEvt__WBP_ToolTile_CM_WBP_ItemSlot_CM_K2Node_ComponentBoundEvent_9_OnLeftClicked__DelegateSignature) == 0x000008, "Wrong size on WBP_ToolTile_CM_C_BndEvt__WBP_ToolTile_CM_WBP_ItemSlot_CM_K2Node_ComponentBoundEvent_9_OnLeftClicked__DelegateSignature");
static_assert(offsetof(WBP_ToolTile_CM_C_BndEvt__WBP_ToolTile_CM_WBP_ItemSlot_CM_K2Node_ComponentBoundEvent_9_OnLeftClicked__DelegateSignature, Param_Slot) == 0x000000, "Member 'WBP_ToolTile_CM_C_BndEvt__WBP_ToolTile_CM_WBP_ItemSlot_CM_K2Node_ComponentBoundEvent_9_OnLeftClicked__DelegateSignature::Param_Slot' has a wrong offset!");

// Function WBP_ToolTile_CM.WBP_ToolTile_CM_C.CanSwapWithDragged
// 0x0038 (0x0038 - 0x0000)
struct WBP_ToolTile_CM_C_CanSwapWithDragged final
{
public:
	class UBP_ItemDrag_Inventory_C*               Drag;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          bCanSwap;                                          // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5951[0x7];                                     // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPlayerInventoryComponent*              CallFunc_GetInventory_Inventory;                   // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsBagSlotLocationValid_ReturnValue;       // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5952[0x6];                                     // 0x001A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UPlayerInventoryComponent*              CallFunc_GetInventory_Inventory_1;                 // 0x0020(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5953[0x3];                                     // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           CallFunc_GetBagTypeForBagIndex_ReturnValue;        // 0x002C(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_GameplayTag_ReturnValue;       // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0035(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ToolTile_CM_C_CanSwapWithDragged) == 0x000008, "Wrong alignment on WBP_ToolTile_CM_C_CanSwapWithDragged");
static_assert(sizeof(WBP_ToolTile_CM_C_CanSwapWithDragged) == 0x000038, "Wrong size on WBP_ToolTile_CM_C_CanSwapWithDragged");
static_assert(offsetof(WBP_ToolTile_CM_C_CanSwapWithDragged, Drag) == 0x000000, "Member 'WBP_ToolTile_CM_C_CanSwapWithDragged::Drag' has a wrong offset!");
static_assert(offsetof(WBP_ToolTile_CM_C_CanSwapWithDragged, bCanSwap) == 0x000008, "Member 'WBP_ToolTile_CM_C_CanSwapWithDragged::bCanSwap' has a wrong offset!");
static_assert(offsetof(WBP_ToolTile_CM_C_CanSwapWithDragged, CallFunc_GetInventory_Inventory) == 0x000010, "Member 'WBP_ToolTile_CM_C_CanSwapWithDragged::CallFunc_GetInventory_Inventory' has a wrong offset!");
static_assert(offsetof(WBP_ToolTile_CM_C_CanSwapWithDragged, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000018, "Member 'WBP_ToolTile_CM_C_CanSwapWithDragged::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ToolTile_CM_C_CanSwapWithDragged, CallFunc_IsBagSlotLocationValid_ReturnValue) == 0x000019, "Member 'WBP_ToolTile_CM_C_CanSwapWithDragged::CallFunc_IsBagSlotLocationValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ToolTile_CM_C_CanSwapWithDragged, CallFunc_GetInventory_Inventory_1) == 0x000020, "Member 'WBP_ToolTile_CM_C_CanSwapWithDragged::CallFunc_GetInventory_Inventory_1' has a wrong offset!");
static_assert(offsetof(WBP_ToolTile_CM_C_CanSwapWithDragged, CallFunc_BooleanAND_ReturnValue) == 0x000028, "Member 'WBP_ToolTile_CM_C_CanSwapWithDragged::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ToolTile_CM_C_CanSwapWithDragged, CallFunc_GetBagTypeForBagIndex_ReturnValue) == 0x00002C, "Member 'WBP_ToolTile_CM_C_CanSwapWithDragged::CallFunc_GetBagTypeForBagIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ToolTile_CM_C_CanSwapWithDragged, CallFunc_EqualEqual_GameplayTag_ReturnValue) == 0x000034, "Member 'WBP_ToolTile_CM_C_CanSwapWithDragged::CallFunc_EqualEqual_GameplayTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ToolTile_CM_C_CanSwapWithDragged, CallFunc_BooleanAND_ReturnValue_1) == 0x000035, "Member 'WBP_ToolTile_CM_C_CanSwapWithDragged::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");

// Function WBP_ToolTile_CM.WBP_ToolTile_CM_C.CanUpgradeWithDragged
// 0x0040 (0x0040 - 0x0000)
struct WBP_ToolTile_CM_C_CanUpgradeWithDragged final
{
public:
	class UBP_ItemDrag_Inventory_C*               Drag;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CanUpgrade;                                        // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EValeriaFuncResult                            CallFunc_GetValeriaCharacter_OutResult;            // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5954[0x6];                                     // 0x000A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AValeriaCharacter*                      CallFunc_GetValeriaCharacter_ReturnValue;          // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UItemUpgradeComponent*                  CallFunc_GetItemUpgradeComponent_ReturnValue;      // 0x0018(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5955[0x7];                                     // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPlayerInventoryComponent*              CallFunc_GetInventory_Inventory;                   // 0x0028(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsSlotUpgradeKit_ReturnValue;             // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5956[0x2];                                     // 0x0032(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FBagSlotLocation                       CallFunc_GetBagSlotLocation_BagSlotLocation;       // 0x0034(0x0008)(NoDestructor)
	bool                                          CallFunc_CanUpgradeToolWithKit_ReturnValue;        // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x003D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x003E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ToolTile_CM_C_CanUpgradeWithDragged) == 0x000008, "Wrong alignment on WBP_ToolTile_CM_C_CanUpgradeWithDragged");
static_assert(sizeof(WBP_ToolTile_CM_C_CanUpgradeWithDragged) == 0x000040, "Wrong size on WBP_ToolTile_CM_C_CanUpgradeWithDragged");
static_assert(offsetof(WBP_ToolTile_CM_C_CanUpgradeWithDragged, Drag) == 0x000000, "Member 'WBP_ToolTile_CM_C_CanUpgradeWithDragged::Drag' has a wrong offset!");
static_assert(offsetof(WBP_ToolTile_CM_C_CanUpgradeWithDragged, CanUpgrade) == 0x000008, "Member 'WBP_ToolTile_CM_C_CanUpgradeWithDragged::CanUpgrade' has a wrong offset!");
static_assert(offsetof(WBP_ToolTile_CM_C_CanUpgradeWithDragged, CallFunc_GetValeriaCharacter_OutResult) == 0x000009, "Member 'WBP_ToolTile_CM_C_CanUpgradeWithDragged::CallFunc_GetValeriaCharacter_OutResult' has a wrong offset!");
static_assert(offsetof(WBP_ToolTile_CM_C_CanUpgradeWithDragged, CallFunc_GetValeriaCharacter_ReturnValue) == 0x000010, "Member 'WBP_ToolTile_CM_C_CanUpgradeWithDragged::CallFunc_GetValeriaCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ToolTile_CM_C_CanUpgradeWithDragged, CallFunc_GetItemUpgradeComponent_ReturnValue) == 0x000018, "Member 'WBP_ToolTile_CM_C_CanUpgradeWithDragged::CallFunc_GetItemUpgradeComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ToolTile_CM_C_CanUpgradeWithDragged, K2Node_SwitchEnum_CmpSuccess) == 0x000020, "Member 'WBP_ToolTile_CM_C_CanUpgradeWithDragged::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(WBP_ToolTile_CM_C_CanUpgradeWithDragged, CallFunc_GetInventory_Inventory) == 0x000028, "Member 'WBP_ToolTile_CM_C_CanUpgradeWithDragged::CallFunc_GetInventory_Inventory' has a wrong offset!");
static_assert(offsetof(WBP_ToolTile_CM_C_CanUpgradeWithDragged, CallFunc_IsSlotUpgradeKit_ReturnValue) == 0x000030, "Member 'WBP_ToolTile_CM_C_CanUpgradeWithDragged::CallFunc_IsSlotUpgradeKit_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ToolTile_CM_C_CanUpgradeWithDragged, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000031, "Member 'WBP_ToolTile_CM_C_CanUpgradeWithDragged::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ToolTile_CM_C_CanUpgradeWithDragged, CallFunc_GetBagSlotLocation_BagSlotLocation) == 0x000034, "Member 'WBP_ToolTile_CM_C_CanUpgradeWithDragged::CallFunc_GetBagSlotLocation_BagSlotLocation' has a wrong offset!");
static_assert(offsetof(WBP_ToolTile_CM_C_CanUpgradeWithDragged, CallFunc_CanUpgradeToolWithKit_ReturnValue) == 0x00003C, "Member 'WBP_ToolTile_CM_C_CanUpgradeWithDragged::CallFunc_CanUpgradeToolWithKit_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ToolTile_CM_C_CanUpgradeWithDragged, CallFunc_BooleanAND_ReturnValue) == 0x00003D, "Member 'WBP_ToolTile_CM_C_CanUpgradeWithDragged::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ToolTile_CM_C_CanUpgradeWithDragged, CallFunc_BooleanAND_ReturnValue_1) == 0x00003E, "Member 'WBP_ToolTile_CM_C_CanUpgradeWithDragged::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");

// Function WBP_ToolTile_CM.WBP_ToolTile_CM_C.Clear Selected Dragged Item In Subsystem
// 0x0020 (0x0020 - 0x0000)
struct WBP_ToolTile_CM_C_Clear_Selected_Dragged_Item_In_Subsystem final
{
public:
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UVAL_GameUISubsystem*                   CallFunc_GetLocalPlayerSubSystemFromPlayerController_ReturnValue; // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UDragDropOperation*                     CallFunc_GetDraggedItem_ReturnValue;               // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ToolTile_CM_C_Clear_Selected_Dragged_Item_In_Subsystem) == 0x000008, "Wrong alignment on WBP_ToolTile_CM_C_Clear_Selected_Dragged_Item_In_Subsystem");
static_assert(sizeof(WBP_ToolTile_CM_C_Clear_Selected_Dragged_Item_In_Subsystem) == 0x000020, "Wrong size on WBP_ToolTile_CM_C_Clear_Selected_Dragged_Item_In_Subsystem");
static_assert(offsetof(WBP_ToolTile_CM_C_Clear_Selected_Dragged_Item_In_Subsystem, CallFunc_GetPlayerController_ReturnValue) == 0x000000, "Member 'WBP_ToolTile_CM_C_Clear_Selected_Dragged_Item_In_Subsystem::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ToolTile_CM_C_Clear_Selected_Dragged_Item_In_Subsystem, CallFunc_GetLocalPlayerSubSystemFromPlayerController_ReturnValue) == 0x000008, "Member 'WBP_ToolTile_CM_C_Clear_Selected_Dragged_Item_In_Subsystem::CallFunc_GetLocalPlayerSubSystemFromPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ToolTile_CM_C_Clear_Selected_Dragged_Item_In_Subsystem, CallFunc_GetDraggedItem_ReturnValue) == 0x000010, "Member 'WBP_ToolTile_CM_C_Clear_Selected_Dragged_Item_In_Subsystem::CallFunc_GetDraggedItem_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ToolTile_CM_C_Clear_Selected_Dragged_Item_In_Subsystem, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'WBP_ToolTile_CM_C_Clear_Selected_Dragged_Item_In_Subsystem::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function WBP_ToolTile_CM.WBP_ToolTile_CM_C.ExecuteUbergraph_WBP_ToolTile_CM
// 0x02E8 (0x02E8 - 0x0000)
struct WBP_ToolTile_CM_C_ExecuteUbergraph_WBP_ToolTile_CM final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_AkEventGlobal_ReturnValue;                // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_ItemDrag_Inventory_C*               CallFunc_CreateDragDropOperation_ReturnValue;      // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FBagSlotLocation                       CallFunc_GetBagSlotLocation_BagSlotLocation;       // 0x0010(0x0008)(NoDestructor)
	class UPlayerInventoryComponent*              CallFunc_GetInventory_Inventory;                   // 0x0018(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FBagSlotLocation                       CallFunc_GetBagSlotLocation_BagSlotLocation_1;     // 0x0020(0x0008)(NoDestructor)
	struct FValeriaItem                           CallFunc_GetItemAt_ReturnValue;                    // 0x0028(0x0060)()
	class UWBP_ItemSlot_CM_C*                     K2Node_ComponentBoundEvent_Slot_6;                 // 0x0088(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UValeriaGameUserSettings*               CallFunc_GetValeriaGameUserSettings_ReturnValue;   // 0x0090(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FValeriaGameplaySettings               K2Node_CustomEvent_GameplaySettings;               // 0x0098(0x0018)(ConstParm, NoDestructor)
	class UValeriaGameUserSettings*               CallFunc_GetValeriaGameUserSettings_ReturnValue_1; // 0x00B0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FBagSlotLocation                       CallFunc_GetBagSlotLocation_BagSlotLocation_2;     // 0x00B8(0x0008)(NoDestructor)
	class UEquipmentComponent*                    CallFunc_Get_Equipment_ReturnValue;                // 0x00C0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FEquipmentItem                         CallFunc_GetEquippedItem_ReturnValue;              // 0x00C8(0x0050)()
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationReverse_ReturnValue;         // 0x0118(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationForward_ReturnValue;         // 0x0120(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_AreBagSlotsEqual_ReturnValue;             // 0x0128(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue;              // 0x0129(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5957[0x2];                                     // 0x012A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FBagSlotLocation                       CallFunc_GetBagSlotLocation_BagSlotLocation_3;     // 0x012C(0x0008)(NoDestructor)
	uint8                                         Pad_5958[0x4];                                     // 0x0134(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPlayerInventoryComponent*              CallFunc_GetInventory_Inventory_1;                 // 0x0138(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FValeriaItem                           CallFunc_GetItem_Item;                             // 0x0140(0x0060)()
	bool                                          CallFunc_HasItem_bHasItem;                         // 0x01A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x01A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasItem_bHasItem_1;                       // 0x01A2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SetTool_IsVisible;                        // 0x01A3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5959[0x4];                                     // 0x01A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_ItemSlot_CM_C*                     K2Node_ComponentBoundEvent_Slot_5;                 // 0x01A8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UWBP_ItemSlot_CM_C*                     K2Node_ComponentBoundEvent_Slot_4;                 // 0x01B0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UWBP_ItemSlot_CM_C*                     K2Node_ComponentBoundEvent_Slot_3;                 // 0x01B8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UWBP_ItemSlot_CM_C*                     K2Node_ComponentBoundEvent_Slot_2;                 // 0x01C0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FValeriaItem                           CallFunc_GetItem_Item_1;                           // 0x01C8(0x0060)()
	struct FValeriaItem                           CallFunc_GetItem_Item_2;                           // 0x0228(0x0060)()
	class UWBP_ItemSlot_CM_C*                     K2Node_ComponentBoundEvent_Slot_1;                 // 0x0288(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UVALUI_ItemDragDrop*                    K2Node_ComponentBoundEvent_Operation_1;            // 0x0290(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UWBP_ItemSlot_CM_C*                     K2Node_ComponentBoundEvent_Slot;                   // 0x0298(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UVALUI_ItemDragDrop*                    K2Node_ComponentBoundEvent_Operation;              // 0x02A0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UBP_ItemDrag_Inventory_C*               K2Node_DynamicCast_AsBP_Item_Drag_Inventory;       // 0x02A8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x02B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_595A[0x3];                                     // 0x02B1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFocusEvent                            K2Node_Event_InFocusEvent;                         // 0x02B4(0x0008)(NoDestructor)
	bool                                          CallFunc_CanUpgradeWithDragged_CanUpgrade;         // 0x02BC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_595B[0x3];                                     // 0x02BD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_DraggedItem_CM_C*                  CallFunc_Create_ReturnValue;                       // 0x02C0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasItem_bHasItem_2;                       // 0x02C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_595C[0x3];                                     // 0x02C9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(struct FValeriaGameplaySettings& GameplaySettings)> K2Node_CreateDelegate_OutputDelegate;              // 0x02CC(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsSwitchPlatform_ReturnValue;             // 0x02DC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_595D[0x3];                                     // 0x02DD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_AkEventGlobal_ReturnValue_1;              // 0x02E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_AkEventGlobal_ReturnValue_2;              // 0x02E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ToolTile_CM_C_ExecuteUbergraph_WBP_ToolTile_CM) == 0x000008, "Wrong alignment on WBP_ToolTile_CM_C_ExecuteUbergraph_WBP_ToolTile_CM");
static_assert(sizeof(WBP_ToolTile_CM_C_ExecuteUbergraph_WBP_ToolTile_CM) == 0x0002E8, "Wrong size on WBP_ToolTile_CM_C_ExecuteUbergraph_WBP_ToolTile_CM");
static_assert(offsetof(WBP_ToolTile_CM_C_ExecuteUbergraph_WBP_ToolTile_CM, EntryPoint) == 0x000000, "Member 'WBP_ToolTile_CM_C_ExecuteUbergraph_WBP_ToolTile_CM::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_ToolTile_CM_C_ExecuteUbergraph_WBP_ToolTile_CM, CallFunc_AkEventGlobal_ReturnValue) == 0x000004, "Member 'WBP_ToolTile_CM_C_ExecuteUbergraph_WBP_ToolTile_CM::CallFunc_AkEventGlobal_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ToolTile_CM_C_ExecuteUbergraph_WBP_ToolTile_CM, CallFunc_CreateDragDropOperation_ReturnValue) == 0x000008, "Member 'WBP_ToolTile_CM_C_ExecuteUbergraph_WBP_ToolTile_CM::CallFunc_CreateDragDropOperation_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ToolTile_CM_C_ExecuteUbergraph_WBP_ToolTile_CM, CallFunc_GetBagSlotLocation_BagSlotLocation) == 0x000010, "Member 'WBP_ToolTile_CM_C_ExecuteUbergraph_WBP_ToolTile_CM::CallFunc_GetBagSlotLocation_BagSlotLocation' has a wrong offset!");
static_assert(offsetof(WBP_ToolTile_CM_C_ExecuteUbergraph_WBP_ToolTile_CM, CallFunc_GetInventory_Inventory) == 0x000018, "Member 'WBP_ToolTile_CM_C_ExecuteUbergraph_WBP_ToolTile_CM::CallFunc_GetInventory_Inventory' has a wrong offset!");
static_assert(offsetof(WBP_ToolTile_CM_C_ExecuteUbergraph_WBP_ToolTile_CM, CallFunc_GetBagSlotLocation_BagSlotLocation_1) == 0x000020, "Member 'WBP_ToolTile_CM_C_ExecuteUbergraph_WBP_ToolTile_CM::CallFunc_GetBagSlotLocation_BagSlotLocation_1' has a wrong offset!");
static_assert(offsetof(WBP_ToolTile_CM_C_ExecuteUbergraph_WBP_ToolTile_CM, CallFunc_GetItemAt_ReturnValue) == 0x000028, "Member 'WBP_ToolTile_CM_C_ExecuteUbergraph_WBP_ToolTile_CM::CallFunc_GetItemAt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ToolTile_CM_C_ExecuteUbergraph_WBP_ToolTile_CM, K2Node_ComponentBoundEvent_Slot_6) == 0x000088, "Member 'WBP_ToolTile_CM_C_ExecuteUbergraph_WBP_ToolTile_CM::K2Node_ComponentBoundEvent_Slot_6' has a wrong offset!");
static_assert(offsetof(WBP_ToolTile_CM_C_ExecuteUbergraph_WBP_ToolTile_CM, CallFunc_GetValeriaGameUserSettings_ReturnValue) == 0x000090, "Member 'WBP_ToolTile_CM_C_ExecuteUbergraph_WBP_ToolTile_CM::CallFunc_GetValeriaGameUserSettings_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ToolTile_CM_C_ExecuteUbergraph_WBP_ToolTile_CM, K2Node_CustomEvent_GameplaySettings) == 0x000098, "Member 'WBP_ToolTile_CM_C_ExecuteUbergraph_WBP_ToolTile_CM::K2Node_CustomEvent_GameplaySettings' has a wrong offset!");
static_assert(offsetof(WBP_ToolTile_CM_C_ExecuteUbergraph_WBP_ToolTile_CM, CallFunc_GetValeriaGameUserSettings_ReturnValue_1) == 0x0000B0, "Member 'WBP_ToolTile_CM_C_ExecuteUbergraph_WBP_ToolTile_CM::CallFunc_GetValeriaGameUserSettings_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_ToolTile_CM_C_ExecuteUbergraph_WBP_ToolTile_CM, CallFunc_GetBagSlotLocation_BagSlotLocation_2) == 0x0000B8, "Member 'WBP_ToolTile_CM_C_ExecuteUbergraph_WBP_ToolTile_CM::CallFunc_GetBagSlotLocation_BagSlotLocation_2' has a wrong offset!");
static_assert(offsetof(WBP_ToolTile_CM_C_ExecuteUbergraph_WBP_ToolTile_CM, CallFunc_Get_Equipment_ReturnValue) == 0x0000C0, "Member 'WBP_ToolTile_CM_C_ExecuteUbergraph_WBP_ToolTile_CM::CallFunc_Get_Equipment_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ToolTile_CM_C_ExecuteUbergraph_WBP_ToolTile_CM, CallFunc_GetEquippedItem_ReturnValue) == 0x0000C8, "Member 'WBP_ToolTile_CM_C_ExecuteUbergraph_WBP_ToolTile_CM::CallFunc_GetEquippedItem_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ToolTile_CM_C_ExecuteUbergraph_WBP_ToolTile_CM, CallFunc_PlayAnimationReverse_ReturnValue) == 0x000118, "Member 'WBP_ToolTile_CM_C_ExecuteUbergraph_WBP_ToolTile_CM::CallFunc_PlayAnimationReverse_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ToolTile_CM_C_ExecuteUbergraph_WBP_ToolTile_CM, CallFunc_PlayAnimationForward_ReturnValue) == 0x000120, "Member 'WBP_ToolTile_CM_C_ExecuteUbergraph_WBP_ToolTile_CM::CallFunc_PlayAnimationForward_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ToolTile_CM_C_ExecuteUbergraph_WBP_ToolTile_CM, CallFunc_AreBagSlotsEqual_ReturnValue) == 0x000128, "Member 'WBP_ToolTile_CM_C_ExecuteUbergraph_WBP_ToolTile_CM::CallFunc_AreBagSlotsEqual_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ToolTile_CM_C_ExecuteUbergraph_WBP_ToolTile_CM, CallFunc_MakeLiteralByte_ReturnValue) == 0x000129, "Member 'WBP_ToolTile_CM_C_ExecuteUbergraph_WBP_ToolTile_CM::CallFunc_MakeLiteralByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ToolTile_CM_C_ExecuteUbergraph_WBP_ToolTile_CM, CallFunc_GetBagSlotLocation_BagSlotLocation_3) == 0x00012C, "Member 'WBP_ToolTile_CM_C_ExecuteUbergraph_WBP_ToolTile_CM::CallFunc_GetBagSlotLocation_BagSlotLocation_3' has a wrong offset!");
static_assert(offsetof(WBP_ToolTile_CM_C_ExecuteUbergraph_WBP_ToolTile_CM, CallFunc_GetInventory_Inventory_1) == 0x000138, "Member 'WBP_ToolTile_CM_C_ExecuteUbergraph_WBP_ToolTile_CM::CallFunc_GetInventory_Inventory_1' has a wrong offset!");
static_assert(offsetof(WBP_ToolTile_CM_C_ExecuteUbergraph_WBP_ToolTile_CM, CallFunc_GetItem_Item) == 0x000140, "Member 'WBP_ToolTile_CM_C_ExecuteUbergraph_WBP_ToolTile_CM::CallFunc_GetItem_Item' has a wrong offset!");
static_assert(offsetof(WBP_ToolTile_CM_C_ExecuteUbergraph_WBP_ToolTile_CM, CallFunc_HasItem_bHasItem) == 0x0001A0, "Member 'WBP_ToolTile_CM_C_ExecuteUbergraph_WBP_ToolTile_CM::CallFunc_HasItem_bHasItem' has a wrong offset!");
static_assert(offsetof(WBP_ToolTile_CM_C_ExecuteUbergraph_WBP_ToolTile_CM, CallFunc_BooleanAND_ReturnValue) == 0x0001A1, "Member 'WBP_ToolTile_CM_C_ExecuteUbergraph_WBP_ToolTile_CM::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ToolTile_CM_C_ExecuteUbergraph_WBP_ToolTile_CM, CallFunc_HasItem_bHasItem_1) == 0x0001A2, "Member 'WBP_ToolTile_CM_C_ExecuteUbergraph_WBP_ToolTile_CM::CallFunc_HasItem_bHasItem_1' has a wrong offset!");
static_assert(offsetof(WBP_ToolTile_CM_C_ExecuteUbergraph_WBP_ToolTile_CM, CallFunc_SetTool_IsVisible) == 0x0001A3, "Member 'WBP_ToolTile_CM_C_ExecuteUbergraph_WBP_ToolTile_CM::CallFunc_SetTool_IsVisible' has a wrong offset!");
static_assert(offsetof(WBP_ToolTile_CM_C_ExecuteUbergraph_WBP_ToolTile_CM, K2Node_ComponentBoundEvent_Slot_5) == 0x0001A8, "Member 'WBP_ToolTile_CM_C_ExecuteUbergraph_WBP_ToolTile_CM::K2Node_ComponentBoundEvent_Slot_5' has a wrong offset!");
static_assert(offsetof(WBP_ToolTile_CM_C_ExecuteUbergraph_WBP_ToolTile_CM, K2Node_ComponentBoundEvent_Slot_4) == 0x0001B0, "Member 'WBP_ToolTile_CM_C_ExecuteUbergraph_WBP_ToolTile_CM::K2Node_ComponentBoundEvent_Slot_4' has a wrong offset!");
static_assert(offsetof(WBP_ToolTile_CM_C_ExecuteUbergraph_WBP_ToolTile_CM, K2Node_ComponentBoundEvent_Slot_3) == 0x0001B8, "Member 'WBP_ToolTile_CM_C_ExecuteUbergraph_WBP_ToolTile_CM::K2Node_ComponentBoundEvent_Slot_3' has a wrong offset!");
static_assert(offsetof(WBP_ToolTile_CM_C_ExecuteUbergraph_WBP_ToolTile_CM, K2Node_ComponentBoundEvent_Slot_2) == 0x0001C0, "Member 'WBP_ToolTile_CM_C_ExecuteUbergraph_WBP_ToolTile_CM::K2Node_ComponentBoundEvent_Slot_2' has a wrong offset!");
static_assert(offsetof(WBP_ToolTile_CM_C_ExecuteUbergraph_WBP_ToolTile_CM, CallFunc_GetItem_Item_1) == 0x0001C8, "Member 'WBP_ToolTile_CM_C_ExecuteUbergraph_WBP_ToolTile_CM::CallFunc_GetItem_Item_1' has a wrong offset!");
static_assert(offsetof(WBP_ToolTile_CM_C_ExecuteUbergraph_WBP_ToolTile_CM, CallFunc_GetItem_Item_2) == 0x000228, "Member 'WBP_ToolTile_CM_C_ExecuteUbergraph_WBP_ToolTile_CM::CallFunc_GetItem_Item_2' has a wrong offset!");
static_assert(offsetof(WBP_ToolTile_CM_C_ExecuteUbergraph_WBP_ToolTile_CM, K2Node_ComponentBoundEvent_Slot_1) == 0x000288, "Member 'WBP_ToolTile_CM_C_ExecuteUbergraph_WBP_ToolTile_CM::K2Node_ComponentBoundEvent_Slot_1' has a wrong offset!");
static_assert(offsetof(WBP_ToolTile_CM_C_ExecuteUbergraph_WBP_ToolTile_CM, K2Node_ComponentBoundEvent_Operation_1) == 0x000290, "Member 'WBP_ToolTile_CM_C_ExecuteUbergraph_WBP_ToolTile_CM::K2Node_ComponentBoundEvent_Operation_1' has a wrong offset!");
static_assert(offsetof(WBP_ToolTile_CM_C_ExecuteUbergraph_WBP_ToolTile_CM, K2Node_ComponentBoundEvent_Slot) == 0x000298, "Member 'WBP_ToolTile_CM_C_ExecuteUbergraph_WBP_ToolTile_CM::K2Node_ComponentBoundEvent_Slot' has a wrong offset!");
static_assert(offsetof(WBP_ToolTile_CM_C_ExecuteUbergraph_WBP_ToolTile_CM, K2Node_ComponentBoundEvent_Operation) == 0x0002A0, "Member 'WBP_ToolTile_CM_C_ExecuteUbergraph_WBP_ToolTile_CM::K2Node_ComponentBoundEvent_Operation' has a wrong offset!");
static_assert(offsetof(WBP_ToolTile_CM_C_ExecuteUbergraph_WBP_ToolTile_CM, K2Node_DynamicCast_AsBP_Item_Drag_Inventory) == 0x0002A8, "Member 'WBP_ToolTile_CM_C_ExecuteUbergraph_WBP_ToolTile_CM::K2Node_DynamicCast_AsBP_Item_Drag_Inventory' has a wrong offset!");
static_assert(offsetof(WBP_ToolTile_CM_C_ExecuteUbergraph_WBP_ToolTile_CM, K2Node_DynamicCast_bSuccess) == 0x0002B0, "Member 'WBP_ToolTile_CM_C_ExecuteUbergraph_WBP_ToolTile_CM::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_ToolTile_CM_C_ExecuteUbergraph_WBP_ToolTile_CM, K2Node_Event_InFocusEvent) == 0x0002B4, "Member 'WBP_ToolTile_CM_C_ExecuteUbergraph_WBP_ToolTile_CM::K2Node_Event_InFocusEvent' has a wrong offset!");
static_assert(offsetof(WBP_ToolTile_CM_C_ExecuteUbergraph_WBP_ToolTile_CM, CallFunc_CanUpgradeWithDragged_CanUpgrade) == 0x0002BC, "Member 'WBP_ToolTile_CM_C_ExecuteUbergraph_WBP_ToolTile_CM::CallFunc_CanUpgradeWithDragged_CanUpgrade' has a wrong offset!");
static_assert(offsetof(WBP_ToolTile_CM_C_ExecuteUbergraph_WBP_ToolTile_CM, CallFunc_Create_ReturnValue) == 0x0002C0, "Member 'WBP_ToolTile_CM_C_ExecuteUbergraph_WBP_ToolTile_CM::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ToolTile_CM_C_ExecuteUbergraph_WBP_ToolTile_CM, CallFunc_HasItem_bHasItem_2) == 0x0002C8, "Member 'WBP_ToolTile_CM_C_ExecuteUbergraph_WBP_ToolTile_CM::CallFunc_HasItem_bHasItem_2' has a wrong offset!");
static_assert(offsetof(WBP_ToolTile_CM_C_ExecuteUbergraph_WBP_ToolTile_CM, K2Node_CreateDelegate_OutputDelegate) == 0x0002CC, "Member 'WBP_ToolTile_CM_C_ExecuteUbergraph_WBP_ToolTile_CM::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WBP_ToolTile_CM_C_ExecuteUbergraph_WBP_ToolTile_CM, CallFunc_IsSwitchPlatform_ReturnValue) == 0x0002DC, "Member 'WBP_ToolTile_CM_C_ExecuteUbergraph_WBP_ToolTile_CM::CallFunc_IsSwitchPlatform_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ToolTile_CM_C_ExecuteUbergraph_WBP_ToolTile_CM, CallFunc_AkEventGlobal_ReturnValue_1) == 0x0002E0, "Member 'WBP_ToolTile_CM_C_ExecuteUbergraph_WBP_ToolTile_CM::CallFunc_AkEventGlobal_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_ToolTile_CM_C_ExecuteUbergraph_WBP_ToolTile_CM, CallFunc_AkEventGlobal_ReturnValue_2) == 0x0002E4, "Member 'WBP_ToolTile_CM_C_ExecuteUbergraph_WBP_ToolTile_CM::CallFunc_AkEventGlobal_ReturnValue_2' has a wrong offset!");

// Function WBP_ToolTile_CM.WBP_ToolTile_CM_C.Get Equipment
// 0x0028 (0x0028 - 0x0000)
struct WBP_ToolTile_CM_C_Get_Equipment final
{
public:
	class UEquipmentComponent*                    ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash)
	EValeriaFuncResult                            CallFunc_GetValeriaCharacter_OutResult;            // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_595E[0x7];                                     // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AValeriaCharacter*                      CallFunc_GetValeriaCharacter_ReturnValue;          // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_595F[0x7];                                     // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UEquipmentComponent*                    CallFunc_GetEquipment_ReturnValue;                 // 0x0020(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ToolTile_CM_C_Get_Equipment) == 0x000008, "Wrong alignment on WBP_ToolTile_CM_C_Get_Equipment");
static_assert(sizeof(WBP_ToolTile_CM_C_Get_Equipment) == 0x000028, "Wrong size on WBP_ToolTile_CM_C_Get_Equipment");
static_assert(offsetof(WBP_ToolTile_CM_C_Get_Equipment, ReturnValue) == 0x000000, "Member 'WBP_ToolTile_CM_C_Get_Equipment::ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ToolTile_CM_C_Get_Equipment, CallFunc_GetValeriaCharacter_OutResult) == 0x000008, "Member 'WBP_ToolTile_CM_C_Get_Equipment::CallFunc_GetValeriaCharacter_OutResult' has a wrong offset!");
static_assert(offsetof(WBP_ToolTile_CM_C_Get_Equipment, CallFunc_GetValeriaCharacter_ReturnValue) == 0x000010, "Member 'WBP_ToolTile_CM_C_Get_Equipment::CallFunc_GetValeriaCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ToolTile_CM_C_Get_Equipment, K2Node_SwitchEnum_CmpSuccess) == 0x000018, "Member 'WBP_ToolTile_CM_C_Get_Equipment::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(WBP_ToolTile_CM_C_Get_Equipment, CallFunc_GetEquipment_ReturnValue) == 0x000020, "Member 'WBP_ToolTile_CM_C_Get_Equipment::CallFunc_GetEquipment_ReturnValue' has a wrong offset!");

// Function WBP_ToolTile_CM.WBP_ToolTile_CM_C.Get Item
// 0x00C0 (0x00C0 - 0x0000)
struct WBP_ToolTile_CM_C_Get_Item final
{
public:
	struct FValeriaItem                           Item;                                              // 0x0000(0x0060)(Parm, OutParm)
	struct FValeriaItem                           CallFunc_GetItem_Item;                             // 0x0060(0x0060)()
};
static_assert(alignof(WBP_ToolTile_CM_C_Get_Item) == 0x000008, "Wrong alignment on WBP_ToolTile_CM_C_Get_Item");
static_assert(sizeof(WBP_ToolTile_CM_C_Get_Item) == 0x0000C0, "Wrong size on WBP_ToolTile_CM_C_Get_Item");
static_assert(offsetof(WBP_ToolTile_CM_C_Get_Item, Item) == 0x000000, "Member 'WBP_ToolTile_CM_C_Get_Item::Item' has a wrong offset!");
static_assert(offsetof(WBP_ToolTile_CM_C_Get_Item, CallFunc_GetItem_Item) == 0x000060, "Member 'WBP_ToolTile_CM_C_Get_Item::CallFunc_GetItem_Item' has a wrong offset!");

// Function WBP_ToolTile_CM.WBP_ToolTile_CM_C.GetBagSlotLocation
// 0x0028 (0x0028 - 0x0000)
struct WBP_ToolTile_CM_C_GetBagSlotLocation final
{
public:
	struct FBagSlotLocation                       BagSlotLocation;                                   // 0x0000(0x0008)(Parm, OutParm, NoDestructor)
	class UPlayerInventoryComponent*              CallFunc_GetInventory_Inventory;                   // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           CallFunc_MakeLiteralGameplayTag_ReturnValue;       // 0x0010(0x0008)(NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetBagIndexForGamePlayTag_ReturnValue;    // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FBagSlotLocation                       K2Node_MakeStruct_BagSlotLocation;                 // 0x001C(0x0008)(NoDestructor)
};
static_assert(alignof(WBP_ToolTile_CM_C_GetBagSlotLocation) == 0x000008, "Wrong alignment on WBP_ToolTile_CM_C_GetBagSlotLocation");
static_assert(sizeof(WBP_ToolTile_CM_C_GetBagSlotLocation) == 0x000028, "Wrong size on WBP_ToolTile_CM_C_GetBagSlotLocation");
static_assert(offsetof(WBP_ToolTile_CM_C_GetBagSlotLocation, BagSlotLocation) == 0x000000, "Member 'WBP_ToolTile_CM_C_GetBagSlotLocation::BagSlotLocation' has a wrong offset!");
static_assert(offsetof(WBP_ToolTile_CM_C_GetBagSlotLocation, CallFunc_GetInventory_Inventory) == 0x000008, "Member 'WBP_ToolTile_CM_C_GetBagSlotLocation::CallFunc_GetInventory_Inventory' has a wrong offset!");
static_assert(offsetof(WBP_ToolTile_CM_C_GetBagSlotLocation, CallFunc_MakeLiteralGameplayTag_ReturnValue) == 0x000010, "Member 'WBP_ToolTile_CM_C_GetBagSlotLocation::CallFunc_MakeLiteralGameplayTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ToolTile_CM_C_GetBagSlotLocation, CallFunc_GetBagIndexForGamePlayTag_ReturnValue) == 0x000018, "Member 'WBP_ToolTile_CM_C_GetBagSlotLocation::CallFunc_GetBagIndexForGamePlayTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ToolTile_CM_C_GetBagSlotLocation, K2Node_MakeStruct_BagSlotLocation) == 0x00001C, "Member 'WBP_ToolTile_CM_C_GetBagSlotLocation::K2Node_MakeStruct_BagSlotLocation' has a wrong offset!");

// Function WBP_ToolTile_CM.WBP_ToolTile_CM_C.GetInventory
// 0x0028 (0x0028 - 0x0000)
struct WBP_ToolTile_CM_C_GetInventory final
{
public:
	class UPlayerInventoryComponent*              Inventory;                                         // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	EValeriaFuncResult                            CallFunc_GetValeriaCharacter_OutResult;            // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5960[0x7];                                     // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AValeriaCharacter*                      CallFunc_GetValeriaCharacter_ReturnValue;          // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5961[0x7];                                     // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPlayerInventoryComponent*              CallFunc_GetInventory_ReturnValue;                 // 0x0020(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ToolTile_CM_C_GetInventory) == 0x000008, "Wrong alignment on WBP_ToolTile_CM_C_GetInventory");
static_assert(sizeof(WBP_ToolTile_CM_C_GetInventory) == 0x000028, "Wrong size on WBP_ToolTile_CM_C_GetInventory");
static_assert(offsetof(WBP_ToolTile_CM_C_GetInventory, Inventory) == 0x000000, "Member 'WBP_ToolTile_CM_C_GetInventory::Inventory' has a wrong offset!");
static_assert(offsetof(WBP_ToolTile_CM_C_GetInventory, CallFunc_GetValeriaCharacter_OutResult) == 0x000008, "Member 'WBP_ToolTile_CM_C_GetInventory::CallFunc_GetValeriaCharacter_OutResult' has a wrong offset!");
static_assert(offsetof(WBP_ToolTile_CM_C_GetInventory, CallFunc_GetValeriaCharacter_ReturnValue) == 0x000010, "Member 'WBP_ToolTile_CM_C_GetInventory::CallFunc_GetValeriaCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ToolTile_CM_C_GetInventory, K2Node_SwitchEnum_CmpSuccess) == 0x000018, "Member 'WBP_ToolTile_CM_C_GetInventory::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(WBP_ToolTile_CM_C_GetInventory, CallFunc_GetInventory_ReturnValue) == 0x000020, "Member 'WBP_ToolTile_CM_C_GetInventory::CallFunc_GetInventory_ReturnValue' has a wrong offset!");

// Function WBP_ToolTile_CM.WBP_ToolTile_CM_C.HandleDrop
// 0x0050 (0x0050 - 0x0000)
struct WBP_ToolTile_CM_C_HandleDrop final
{
public:
	class UObject*                                Object;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UBP_ItemDrag_Inventory_C*               K2Node_DynamicCast_AsBP_Item_Drag_Inventory;       // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CanUpgradeWithDragged_CanUpgrade;         // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CanSwapWithDragged_bCanSwap;              // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EValeriaFuncResult                            CallFunc_GetValeriaCharacter_OutResult;            // 0x0013(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5962[0x4];                                     // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AValeriaCharacter*                      CallFunc_GetValeriaCharacter_ReturnValue;          // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UItemUpgradeComponent*                  CallFunc_GetItemUpgradeComponent_ReturnValue;      // 0x0020(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EValeriaFuncResult                            CallFunc_GetValeriaPlayerController_OutResult;     // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5963[0x6];                                     // 0x002A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AValeriaPlayerController*               CallFunc_GetValeriaPlayerController_ReturnValue;   // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FBagSlotLocation                       CallFunc_GetBagSlotLocation_BagSlotLocation;       // 0x0038(0x0008)(NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess_1;                    // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_UpgradeToolWithKit_ReturnValue;           // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5964[0x2];                                     // 0x0042(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FBagSlotLocation                       CallFunc_GetBagSlotLocation_BagSlotLocation_1;     // 0x0044(0x0008)(NoDestructor)
};
static_assert(alignof(WBP_ToolTile_CM_C_HandleDrop) == 0x000008, "Wrong alignment on WBP_ToolTile_CM_C_HandleDrop");
static_assert(sizeof(WBP_ToolTile_CM_C_HandleDrop) == 0x000050, "Wrong size on WBP_ToolTile_CM_C_HandleDrop");
static_assert(offsetof(WBP_ToolTile_CM_C_HandleDrop, Object) == 0x000000, "Member 'WBP_ToolTile_CM_C_HandleDrop::Object' has a wrong offset!");
static_assert(offsetof(WBP_ToolTile_CM_C_HandleDrop, K2Node_DynamicCast_AsBP_Item_Drag_Inventory) == 0x000008, "Member 'WBP_ToolTile_CM_C_HandleDrop::K2Node_DynamicCast_AsBP_Item_Drag_Inventory' has a wrong offset!");
static_assert(offsetof(WBP_ToolTile_CM_C_HandleDrop, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'WBP_ToolTile_CM_C_HandleDrop::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_ToolTile_CM_C_HandleDrop, CallFunc_CanUpgradeWithDragged_CanUpgrade) == 0x000011, "Member 'WBP_ToolTile_CM_C_HandleDrop::CallFunc_CanUpgradeWithDragged_CanUpgrade' has a wrong offset!");
static_assert(offsetof(WBP_ToolTile_CM_C_HandleDrop, CallFunc_CanSwapWithDragged_bCanSwap) == 0x000012, "Member 'WBP_ToolTile_CM_C_HandleDrop::CallFunc_CanSwapWithDragged_bCanSwap' has a wrong offset!");
static_assert(offsetof(WBP_ToolTile_CM_C_HandleDrop, CallFunc_GetValeriaCharacter_OutResult) == 0x000013, "Member 'WBP_ToolTile_CM_C_HandleDrop::CallFunc_GetValeriaCharacter_OutResult' has a wrong offset!");
static_assert(offsetof(WBP_ToolTile_CM_C_HandleDrop, CallFunc_GetValeriaCharacter_ReturnValue) == 0x000018, "Member 'WBP_ToolTile_CM_C_HandleDrop::CallFunc_GetValeriaCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ToolTile_CM_C_HandleDrop, CallFunc_GetItemUpgradeComponent_ReturnValue) == 0x000020, "Member 'WBP_ToolTile_CM_C_HandleDrop::CallFunc_GetItemUpgradeComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ToolTile_CM_C_HandleDrop, K2Node_SwitchEnum_CmpSuccess) == 0x000028, "Member 'WBP_ToolTile_CM_C_HandleDrop::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(WBP_ToolTile_CM_C_HandleDrop, CallFunc_GetValeriaPlayerController_OutResult) == 0x000029, "Member 'WBP_ToolTile_CM_C_HandleDrop::CallFunc_GetValeriaPlayerController_OutResult' has a wrong offset!");
static_assert(offsetof(WBP_ToolTile_CM_C_HandleDrop, CallFunc_GetValeriaPlayerController_ReturnValue) == 0x000030, "Member 'WBP_ToolTile_CM_C_HandleDrop::CallFunc_GetValeriaPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ToolTile_CM_C_HandleDrop, CallFunc_GetBagSlotLocation_BagSlotLocation) == 0x000038, "Member 'WBP_ToolTile_CM_C_HandleDrop::CallFunc_GetBagSlotLocation_BagSlotLocation' has a wrong offset!");
static_assert(offsetof(WBP_ToolTile_CM_C_HandleDrop, K2Node_SwitchEnum_CmpSuccess_1) == 0x000040, "Member 'WBP_ToolTile_CM_C_HandleDrop::K2Node_SwitchEnum_CmpSuccess_1' has a wrong offset!");
static_assert(offsetof(WBP_ToolTile_CM_C_HandleDrop, CallFunc_UpgradeToolWithKit_ReturnValue) == 0x000041, "Member 'WBP_ToolTile_CM_C_HandleDrop::CallFunc_UpgradeToolWithKit_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ToolTile_CM_C_HandleDrop, CallFunc_GetBagSlotLocation_BagSlotLocation_1) == 0x000044, "Member 'WBP_ToolTile_CM_C_HandleDrop::CallFunc_GetBagSlotLocation_BagSlotLocation_1' has a wrong offset!");

// Function WBP_ToolTile_CM.WBP_ToolTile_CM_C.HandleSettingsChanged
// 0x0018 (0x0018 - 0x0000)
struct WBP_ToolTile_CM_C_HandleSettingsChanged final
{
public:
	struct FValeriaGameplaySettings               GameplaySettings;                                  // 0x0000(0x0018)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor)
};
static_assert(alignof(WBP_ToolTile_CM_C_HandleSettingsChanged) == 0x000004, "Wrong alignment on WBP_ToolTile_CM_C_HandleSettingsChanged");
static_assert(sizeof(WBP_ToolTile_CM_C_HandleSettingsChanged) == 0x000018, "Wrong size on WBP_ToolTile_CM_C_HandleSettingsChanged");
static_assert(offsetof(WBP_ToolTile_CM_C_HandleSettingsChanged, GameplaySettings) == 0x000000, "Member 'WBP_ToolTile_CM_C_HandleSettingsChanged::GameplaySettings' has a wrong offset!");

// Function WBP_ToolTile_CM.WBP_ToolTile_CM_C.HasItem
// 0x0070 (0x0070 - 0x0000)
struct WBP_ToolTile_CM_C_HasItem final
{
public:
	bool                                          bHasItem;                                          // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5965[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FValeriaItem                           CallFunc_GetItem_Item;                             // 0x0008(0x0060)()
	bool                                          CallFunc_ItemIsEmpty_ReturnValue;                  // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0069(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ToolTile_CM_C_HasItem) == 0x000008, "Wrong alignment on WBP_ToolTile_CM_C_HasItem");
static_assert(sizeof(WBP_ToolTile_CM_C_HasItem) == 0x000070, "Wrong size on WBP_ToolTile_CM_C_HasItem");
static_assert(offsetof(WBP_ToolTile_CM_C_HasItem, bHasItem) == 0x000000, "Member 'WBP_ToolTile_CM_C_HasItem::bHasItem' has a wrong offset!");
static_assert(offsetof(WBP_ToolTile_CM_C_HasItem, CallFunc_GetItem_Item) == 0x000008, "Member 'WBP_ToolTile_CM_C_HasItem::CallFunc_GetItem_Item' has a wrong offset!");
static_assert(offsetof(WBP_ToolTile_CM_C_HasItem, CallFunc_ItemIsEmpty_ReturnValue) == 0x000068, "Member 'WBP_ToolTile_CM_C_HasItem::CallFunc_ItemIsEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ToolTile_CM_C_HasItem, CallFunc_Not_PreBool_ReturnValue) == 0x000069, "Member 'WBP_ToolTile_CM_C_HasItem::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function WBP_ToolTile_CM.WBP_ToolTile_CM_C.Hover
// 0x0001 (0x0001 - 0x0000)
struct WBP_ToolTile_CM_C_Hover final
{
public:
	bool                                          CallFunc_HasItem_bHasItem;                         // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ToolTile_CM_C_Hover) == 0x000001, "Wrong alignment on WBP_ToolTile_CM_C_Hover");
static_assert(sizeof(WBP_ToolTile_CM_C_Hover) == 0x000001, "Wrong size on WBP_ToolTile_CM_C_Hover");
static_assert(offsetof(WBP_ToolTile_CM_C_Hover, CallFunc_HasItem_bHasItem) == 0x000000, "Member 'WBP_ToolTile_CM_C_Hover::CallFunc_HasItem_bHasItem' has a wrong offset!");

// Function WBP_ToolTile_CM.WBP_ToolTile_CM_C.On Gamepad Selected
// 0x0050 (0x0050 - 0x0000)
struct WBP_ToolTile_CM_C_On_Gamepad_Selected final
{
public:
	class UBP_ItemDrag_Inventory_C*               CallFunc_CreateDragDropOperation_ReturnValue;      // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPlayerInventoryComponent*              CallFunc_GetInventory_Inventory;                   // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FBagSlotLocation                       CallFunc_GetBagSlotLocation_BagSlotLocation;       // 0x0010(0x0008)(NoDestructor)
	bool                                          CallFunc_HasItem_bHasItem;                         // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5966[0x7];                                     // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UVAL_GameUISubsystem*                   CallFunc_GetLocalPlayerSubSystemFromPlayerController_ReturnValue; // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue;              // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5967[0x7];                                     // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UDragDropOperation*                     CallFunc_GetDraggedItem_ReturnValue;               // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UVALUI_ItemDragDrop*                    K2Node_DynamicCast_AsVALUI_Item_Drag_Drop;         // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ToolTile_CM_C_On_Gamepad_Selected) == 0x000008, "Wrong alignment on WBP_ToolTile_CM_C_On_Gamepad_Selected");
static_assert(sizeof(WBP_ToolTile_CM_C_On_Gamepad_Selected) == 0x000050, "Wrong size on WBP_ToolTile_CM_C_On_Gamepad_Selected");
static_assert(offsetof(WBP_ToolTile_CM_C_On_Gamepad_Selected, CallFunc_CreateDragDropOperation_ReturnValue) == 0x000000, "Member 'WBP_ToolTile_CM_C_On_Gamepad_Selected::CallFunc_CreateDragDropOperation_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ToolTile_CM_C_On_Gamepad_Selected, CallFunc_GetInventory_Inventory) == 0x000008, "Member 'WBP_ToolTile_CM_C_On_Gamepad_Selected::CallFunc_GetInventory_Inventory' has a wrong offset!");
static_assert(offsetof(WBP_ToolTile_CM_C_On_Gamepad_Selected, CallFunc_GetBagSlotLocation_BagSlotLocation) == 0x000010, "Member 'WBP_ToolTile_CM_C_On_Gamepad_Selected::CallFunc_GetBagSlotLocation_BagSlotLocation' has a wrong offset!");
static_assert(offsetof(WBP_ToolTile_CM_C_On_Gamepad_Selected, CallFunc_HasItem_bHasItem) == 0x000018, "Member 'WBP_ToolTile_CM_C_On_Gamepad_Selected::CallFunc_HasItem_bHasItem' has a wrong offset!");
static_assert(offsetof(WBP_ToolTile_CM_C_On_Gamepad_Selected, CallFunc_GetPlayerController_ReturnValue) == 0x000020, "Member 'WBP_ToolTile_CM_C_On_Gamepad_Selected::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ToolTile_CM_C_On_Gamepad_Selected, CallFunc_GetLocalPlayerSubSystemFromPlayerController_ReturnValue) == 0x000028, "Member 'WBP_ToolTile_CM_C_On_Gamepad_Selected::CallFunc_GetLocalPlayerSubSystemFromPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ToolTile_CM_C_On_Gamepad_Selected, CallFunc_MakeLiteralByte_ReturnValue) == 0x000030, "Member 'WBP_ToolTile_CM_C_On_Gamepad_Selected::CallFunc_MakeLiteralByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ToolTile_CM_C_On_Gamepad_Selected, CallFunc_GetDraggedItem_ReturnValue) == 0x000038, "Member 'WBP_ToolTile_CM_C_On_Gamepad_Selected::CallFunc_GetDraggedItem_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ToolTile_CM_C_On_Gamepad_Selected, K2Node_DynamicCast_AsVALUI_Item_Drag_Drop) == 0x000040, "Member 'WBP_ToolTile_CM_C_On_Gamepad_Selected::K2Node_DynamicCast_AsVALUI_Item_Drag_Drop' has a wrong offset!");
static_assert(offsetof(WBP_ToolTile_CM_C_On_Gamepad_Selected, K2Node_DynamicCast_bSuccess) == 0x000048, "Member 'WBP_ToolTile_CM_C_On_Gamepad_Selected::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_ToolTile_CM_C_On_Gamepad_Selected, CallFunc_IsValid_ReturnValue) == 0x000049, "Member 'WBP_ToolTile_CM_C_On_Gamepad_Selected::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function WBP_ToolTile_CM.WBP_ToolTile_CM_C.OnFocusLost
// 0x0008 (0x0008 - 0x0000)
struct WBP_ToolTile_CM_C_OnFocusLost final
{
public:
	struct FFocusEvent                            InFocusEvent;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
};
static_assert(alignof(WBP_ToolTile_CM_C_OnFocusLost) == 0x000004, "Wrong alignment on WBP_ToolTile_CM_C_OnFocusLost");
static_assert(sizeof(WBP_ToolTile_CM_C_OnFocusLost) == 0x000008, "Wrong size on WBP_ToolTile_CM_C_OnFocusLost");
static_assert(offsetof(WBP_ToolTile_CM_C_OnFocusLost, InFocusEvent) == 0x000000, "Member 'WBP_ToolTile_CM_C_OnFocusLost::InFocusEvent' has a wrong offset!");

// Function WBP_ToolTile_CM.WBP_ToolTile_CM_C.OnFocusReceived
// 0x01C8 (0x01C8 - 0x0000)
struct WBP_ToolTile_CM_C_OnFocusReceived final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FFocusEvent                            InFocusEvent;                                      // 0x0038(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	struct FEventReply                            ReturnValue;                                       // 0x0040(0x00B8)(Parm, OutParm, ReturnParm)
	class UCommonInputSubsystem*                  CallFunc_GetLocalPlayerSubsystem_ReturnValue;      // 0x00F8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	ECommonInputType                              CallFunc_GetCurrentInputType_ReturnValue;          // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5968[0x7];                                     // 0x0101(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEventReply                            CallFunc_Handled_ReturnValue;                      // 0x0108(0x00B8)()
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x01C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ToolTile_CM_C_OnFocusReceived) == 0x000008, "Wrong alignment on WBP_ToolTile_CM_C_OnFocusReceived");
static_assert(sizeof(WBP_ToolTile_CM_C_OnFocusReceived) == 0x0001C8, "Wrong size on WBP_ToolTile_CM_C_OnFocusReceived");
static_assert(offsetof(WBP_ToolTile_CM_C_OnFocusReceived, MyGeometry) == 0x000000, "Member 'WBP_ToolTile_CM_C_OnFocusReceived::MyGeometry' has a wrong offset!");
static_assert(offsetof(WBP_ToolTile_CM_C_OnFocusReceived, InFocusEvent) == 0x000038, "Member 'WBP_ToolTile_CM_C_OnFocusReceived::InFocusEvent' has a wrong offset!");
static_assert(offsetof(WBP_ToolTile_CM_C_OnFocusReceived, ReturnValue) == 0x000040, "Member 'WBP_ToolTile_CM_C_OnFocusReceived::ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ToolTile_CM_C_OnFocusReceived, CallFunc_GetLocalPlayerSubsystem_ReturnValue) == 0x0000F8, "Member 'WBP_ToolTile_CM_C_OnFocusReceived::CallFunc_GetLocalPlayerSubsystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ToolTile_CM_C_OnFocusReceived, CallFunc_GetCurrentInputType_ReturnValue) == 0x000100, "Member 'WBP_ToolTile_CM_C_OnFocusReceived::CallFunc_GetCurrentInputType_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ToolTile_CM_C_OnFocusReceived, CallFunc_Handled_ReturnValue) == 0x000108, "Member 'WBP_ToolTile_CM_C_OnFocusReceived::CallFunc_Handled_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ToolTile_CM_C_OnFocusReceived, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x0001C0, "Member 'WBP_ToolTile_CM_C_OnFocusReceived::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function WBP_ToolTile_CM.WBP_ToolTile_CM_C.OnSecondaryClicked__DelegateSignature
// 0x00A0 (0x00A0 - 0x0000)
struct WBP_ToolTile_CM_C_OnSecondaryClicked__DelegateSignature final
{
public:
	struct FGeometry                              My_Geometry;                                       // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FValeriaItem                           Valeria_Item;                                      // 0x0038(0x0060)(BlueprintVisible, BlueprintReadOnly, Parm)
	struct FBagSlotLocation                       Bag_Slot_Location;                                 // 0x0098(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
};
static_assert(alignof(WBP_ToolTile_CM_C_OnSecondaryClicked__DelegateSignature) == 0x000008, "Wrong alignment on WBP_ToolTile_CM_C_OnSecondaryClicked__DelegateSignature");
static_assert(sizeof(WBP_ToolTile_CM_C_OnSecondaryClicked__DelegateSignature) == 0x0000A0, "Wrong size on WBP_ToolTile_CM_C_OnSecondaryClicked__DelegateSignature");
static_assert(offsetof(WBP_ToolTile_CM_C_OnSecondaryClicked__DelegateSignature, My_Geometry) == 0x000000, "Member 'WBP_ToolTile_CM_C_OnSecondaryClicked__DelegateSignature::My_Geometry' has a wrong offset!");
static_assert(offsetof(WBP_ToolTile_CM_C_OnSecondaryClicked__DelegateSignature, Valeria_Item) == 0x000038, "Member 'WBP_ToolTile_CM_C_OnSecondaryClicked__DelegateSignature::Valeria_Item' has a wrong offset!");
static_assert(offsetof(WBP_ToolTile_CM_C_OnSecondaryClicked__DelegateSignature, Bag_Slot_Location) == 0x000098, "Member 'WBP_ToolTile_CM_C_OnSecondaryClicked__DelegateSignature::Bag_Slot_Location' has a wrong offset!");

// Function WBP_ToolTile_CM.WBP_ToolTile_CM_C.OnToolClicked__DelegateSignature
// 0x0060 (0x0060 - 0x0000)
struct WBP_ToolTile_CM_C_OnToolClicked__DelegateSignature final
{
public:
	struct FValeriaItem                           Item;                                              // 0x0000(0x0060)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(WBP_ToolTile_CM_C_OnToolClicked__DelegateSignature) == 0x000008, "Wrong alignment on WBP_ToolTile_CM_C_OnToolClicked__DelegateSignature");
static_assert(sizeof(WBP_ToolTile_CM_C_OnToolClicked__DelegateSignature) == 0x000060, "Wrong size on WBP_ToolTile_CM_C_OnToolClicked__DelegateSignature");
static_assert(offsetof(WBP_ToolTile_CM_C_OnToolClicked__DelegateSignature, Item) == 0x000000, "Member 'WBP_ToolTile_CM_C_OnToolClicked__DelegateSignature::Item' has a wrong offset!");

// Function WBP_ToolTile_CM.WBP_ToolTile_CM_C.OnToolGamepadSelected__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct WBP_ToolTile_CM_C_OnToolGamepadSelected__DelegateSignature final
{
public:
	class UWBP_ToolTile_CM_C*                     ToolTile;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ToolTile_CM_C_OnToolGamepadSelected__DelegateSignature) == 0x000008, "Wrong alignment on WBP_ToolTile_CM_C_OnToolGamepadSelected__DelegateSignature");
static_assert(sizeof(WBP_ToolTile_CM_C_OnToolGamepadSelected__DelegateSignature) == 0x000008, "Wrong size on WBP_ToolTile_CM_C_OnToolGamepadSelected__DelegateSignature");
static_assert(offsetof(WBP_ToolTile_CM_C_OnToolGamepadSelected__DelegateSignature, ToolTile) == 0x000000, "Member 'WBP_ToolTile_CM_C_OnToolGamepadSelected__DelegateSignature::ToolTile' has a wrong offset!");

// Function WBP_ToolTile_CM.WBP_ToolTile_CM_C.OnToolTileGamepadFocused__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct WBP_ToolTile_CM_C_OnToolTileGamepadFocused__DelegateSignature final
{
public:
	class UWidget*                                FocusItem;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ToolTile_CM_C_OnToolTileGamepadFocused__DelegateSignature) == 0x000008, "Wrong alignment on WBP_ToolTile_CM_C_OnToolTileGamepadFocused__DelegateSignature");
static_assert(sizeof(WBP_ToolTile_CM_C_OnToolTileGamepadFocused__DelegateSignature) == 0x000008, "Wrong size on WBP_ToolTile_CM_C_OnToolTileGamepadFocused__DelegateSignature");
static_assert(offsetof(WBP_ToolTile_CM_C_OnToolTileGamepadFocused__DelegateSignature, FocusItem) == 0x000000, "Member 'WBP_ToolTile_CM_C_OnToolTileGamepadFocused__DelegateSignature::FocusItem' has a wrong offset!");

// Function WBP_ToolTile_CM.WBP_ToolTile_CM_C.OnToolTileTouchEnded__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct WBP_ToolTile_CM_C_OnToolTileTouchEnded__DelegateSignature final
{
public:
	class UWBP_ToolTile_CM_C*                     ToolTile;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ToolTile_CM_C_OnToolTileTouchEnded__DelegateSignature) == 0x000008, "Wrong alignment on WBP_ToolTile_CM_C_OnToolTileTouchEnded__DelegateSignature");
static_assert(sizeof(WBP_ToolTile_CM_C_OnToolTileTouchEnded__DelegateSignature) == 0x000008, "Wrong size on WBP_ToolTile_CM_C_OnToolTileTouchEnded__DelegateSignature");
static_assert(offsetof(WBP_ToolTile_CM_C_OnToolTileTouchEnded__DelegateSignature, ToolTile) == 0x000000, "Member 'WBP_ToolTile_CM_C_OnToolTileTouchEnded__DelegateSignature::ToolTile' has a wrong offset!");

// Function WBP_ToolTile_CM.WBP_ToolTile_CM_C.Set Gamepad Selected
// 0x0005 (0x0005 - 0x0000)
struct WBP_ToolTile_CM_C_Set_Gamepad_Selected final
{
public:
	bool                                          Selected;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ToolTile_CM_C_Set_Gamepad_Selected) == 0x000001, "Wrong alignment on WBP_ToolTile_CM_C_Set_Gamepad_Selected");
static_assert(sizeof(WBP_ToolTile_CM_C_Set_Gamepad_Selected) == 0x000005, "Wrong size on WBP_ToolTile_CM_C_Set_Gamepad_Selected");
static_assert(offsetof(WBP_ToolTile_CM_C_Set_Gamepad_Selected, Selected) == 0x000000, "Member 'WBP_ToolTile_CM_C_Set_Gamepad_Selected::Selected' has a wrong offset!");
static_assert(offsetof(WBP_ToolTile_CM_C_Set_Gamepad_Selected, Temp_bool_Variable) == 0x000001, "Member 'WBP_ToolTile_CM_C_Set_Gamepad_Selected::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_ToolTile_CM_C_Set_Gamepad_Selected, Temp_byte_Variable) == 0x000002, "Member 'WBP_ToolTile_CM_C_Set_Gamepad_Selected::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_ToolTile_CM_C_Set_Gamepad_Selected, Temp_byte_Variable_1) == 0x000003, "Member 'WBP_ToolTile_CM_C_Set_Gamepad_Selected::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_ToolTile_CM_C_Set_Gamepad_Selected, K2Node_Select_Default) == 0x000004, "Member 'WBP_ToolTile_CM_C_Set_Gamepad_Selected::K2Node_Select_Default' has a wrong offset!");

// Function WBP_ToolTile_CM.WBP_ToolTile_CM_C.Set Selected
// 0x0001 (0x0001 - 0x0000)
struct WBP_ToolTile_CM_C_Set_Selected final
{
public:
	bool                                          bSelected;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ToolTile_CM_C_Set_Selected) == 0x000001, "Wrong alignment on WBP_ToolTile_CM_C_Set_Selected");
static_assert(sizeof(WBP_ToolTile_CM_C_Set_Selected) == 0x000001, "Wrong size on WBP_ToolTile_CM_C_Set_Selected");
static_assert(offsetof(WBP_ToolTile_CM_C_Set_Selected, bSelected) == 0x000000, "Member 'WBP_ToolTile_CM_C_Set_Selected::bSelected' has a wrong offset!");

// Function WBP_ToolTile_CM.WBP_ToolTile_CM_C.Set Use Equipped Tool As Selected
// 0x0001 (0x0001 - 0x0000)
struct WBP_ToolTile_CM_C_Set_Use_Equipped_Tool_As_Selected final
{
public:
	bool                                          Param_bUseEquippedToolAsSelected;                  // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ToolTile_CM_C_Set_Use_Equipped_Tool_As_Selected) == 0x000001, "Wrong alignment on WBP_ToolTile_CM_C_Set_Use_Equipped_Tool_As_Selected");
static_assert(sizeof(WBP_ToolTile_CM_C_Set_Use_Equipped_Tool_As_Selected) == 0x000001, "Wrong size on WBP_ToolTile_CM_C_Set_Use_Equipped_Tool_As_Selected");
static_assert(offsetof(WBP_ToolTile_CM_C_Set_Use_Equipped_Tool_As_Selected, Param_bUseEquippedToolAsSelected) == 0x000000, "Member 'WBP_ToolTile_CM_C_Set_Use_Equipped_Tool_As_Selected::Param_bUseEquippedToolAsSelected' has a wrong offset!");

// Function WBP_ToolTile_CM.WBP_ToolTile_CM_C.SetAllowDrag
// 0x0001 (0x0001 - 0x0000)
struct WBP_ToolTile_CM_C_SetAllowDrag final
{
public:
	bool                                          Param_bAllowDrag;                                  // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ToolTile_CM_C_SetAllowDrag) == 0x000001, "Wrong alignment on WBP_ToolTile_CM_C_SetAllowDrag");
static_assert(sizeof(WBP_ToolTile_CM_C_SetAllowDrag) == 0x000001, "Wrong size on WBP_ToolTile_CM_C_SetAllowDrag");
static_assert(offsetof(WBP_ToolTile_CM_C_SetAllowDrag, Param_bAllowDrag) == 0x000000, "Member 'WBP_ToolTile_CM_C_SetAllowDrag::Param_bAllowDrag' has a wrong offset!");

// Function WBP_ToolTile_CM.WBP_ToolTile_CM_C.SetStyle
// 0x0008 (0x0008 - 0x0000)
struct WBP_ToolTile_CM_C_SetStyle final
{
public:
	class UVALUI_ItemSlotStyle*                   ToolStyleOverride;                                 // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ToolTile_CM_C_SetStyle) == 0x000008, "Wrong alignment on WBP_ToolTile_CM_C_SetStyle");
static_assert(sizeof(WBP_ToolTile_CM_C_SetStyle) == 0x000008, "Wrong size on WBP_ToolTile_CM_C_SetStyle");
static_assert(offsetof(WBP_ToolTile_CM_C_SetStyle, ToolStyleOverride) == 0x000000, "Member 'WBP_ToolTile_CM_C_SetStyle::ToolStyleOverride' has a wrong offset!");

// Function WBP_ToolTile_CM.WBP_ToolTile_CM_C.Update Shortcut
// 0x0088 (0x0088 - 0x0000)
struct WBP_ToolTile_CM_C_Update_Shortcut final
{
public:
	struct FValeriaItem                           ValeriaItem;                                       // 0x0000(0x0060)(BlueprintVisible, BlueprintReadOnly, Parm)
	class UObject*                                CallFunc_LoadAsset_Blocking_ReturnValue;           // 0x0060(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UVAL_ItemTypeDefinitionAsset*           K2Node_DynamicCast_AsItem_Type_Definition;         // 0x0068(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5969[0x7];                                     // 0x0071(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UInputAction*                           CallFunc_GetInputActionForAnyTagFromItem_ReturnValue; // 0x0078(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ToolTile_CM_C_Update_Shortcut) == 0x000008, "Wrong alignment on WBP_ToolTile_CM_C_Update_Shortcut");
static_assert(sizeof(WBP_ToolTile_CM_C_Update_Shortcut) == 0x000088, "Wrong size on WBP_ToolTile_CM_C_Update_Shortcut");
static_assert(offsetof(WBP_ToolTile_CM_C_Update_Shortcut, ValeriaItem) == 0x000000, "Member 'WBP_ToolTile_CM_C_Update_Shortcut::ValeriaItem' has a wrong offset!");
static_assert(offsetof(WBP_ToolTile_CM_C_Update_Shortcut, CallFunc_LoadAsset_Blocking_ReturnValue) == 0x000060, "Member 'WBP_ToolTile_CM_C_Update_Shortcut::CallFunc_LoadAsset_Blocking_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ToolTile_CM_C_Update_Shortcut, K2Node_DynamicCast_AsItem_Type_Definition) == 0x000068, "Member 'WBP_ToolTile_CM_C_Update_Shortcut::K2Node_DynamicCast_AsItem_Type_Definition' has a wrong offset!");
static_assert(offsetof(WBP_ToolTile_CM_C_Update_Shortcut, K2Node_DynamicCast_bSuccess) == 0x000070, "Member 'WBP_ToolTile_CM_C_Update_Shortcut::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_ToolTile_CM_C_Update_Shortcut, CallFunc_GetInputActionForAnyTagFromItem_ReturnValue) == 0x000078, "Member 'WBP_ToolTile_CM_C_Update_Shortcut::CallFunc_GetInputActionForAnyTagFromItem_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ToolTile_CM_C_Update_Shortcut, CallFunc_IsValid_ReturnValue) == 0x000080, "Member 'WBP_ToolTile_CM_C_Update_Shortcut::CallFunc_IsValid_ReturnValue' has a wrong offset!");

}

