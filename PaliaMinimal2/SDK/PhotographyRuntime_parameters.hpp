#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: PhotographyRuntime

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "PhotographyRuntime_structs.hpp"
#include "SlateCore_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function PhotographyRuntime.VALUI_PhotoCameraScreenBase.AccumulateLookModeInput
// 0x00B8 (0x00B8 - 0x0000)
struct VALUI_PhotoCameraScreenBase_AccumulateLookModeInput final
{
public:
	struct FGeometry                              InGeometry;                                        // 0x0000(0x0038)(ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FPointerEvent                          InMouseEvent;                                      // 0x0038(0x0078)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	bool                                          bInvertYAxis;                                      // 0x00B0(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_33B9[0x7];                                     // 0x00B1(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(VALUI_PhotoCameraScreenBase_AccumulateLookModeInput) == 0x000008, "Wrong alignment on VALUI_PhotoCameraScreenBase_AccumulateLookModeInput");
static_assert(sizeof(VALUI_PhotoCameraScreenBase_AccumulateLookModeInput) == 0x0000B8, "Wrong size on VALUI_PhotoCameraScreenBase_AccumulateLookModeInput");
static_assert(offsetof(VALUI_PhotoCameraScreenBase_AccumulateLookModeInput, InGeometry) == 0x000000, "Member 'VALUI_PhotoCameraScreenBase_AccumulateLookModeInput::InGeometry' has a wrong offset!");
static_assert(offsetof(VALUI_PhotoCameraScreenBase_AccumulateLookModeInput, InMouseEvent) == 0x000038, "Member 'VALUI_PhotoCameraScreenBase_AccumulateLookModeInput::InMouseEvent' has a wrong offset!");
static_assert(offsetof(VALUI_PhotoCameraScreenBase_AccumulateLookModeInput, bInvertYAxis) == 0x0000B0, "Member 'VALUI_PhotoCameraScreenBase_AccumulateLookModeInput::bInvertYAxis' has a wrong offset!");

// Function PhotographyRuntime.VALUI_PhotoCameraScreenBase.SetLookMode
// 0x0001 (0x0001 - 0x0000)
struct VALUI_PhotoCameraScreenBase_SetLookMode final
{
public:
	EVALUI_PhotoCameraScreenLookMode              Value;                                             // 0x0000(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(VALUI_PhotoCameraScreenBase_SetLookMode) == 0x000001, "Wrong alignment on VALUI_PhotoCameraScreenBase_SetLookMode");
static_assert(sizeof(VALUI_PhotoCameraScreenBase_SetLookMode) == 0x000001, "Wrong size on VALUI_PhotoCameraScreenBase_SetLookMode");
static_assert(offsetof(VALUI_PhotoCameraScreenBase_SetLookMode, Value) == 0x000000, "Member 'VALUI_PhotoCameraScreenBase_SetLookMode::Value' has a wrong offset!");

// Function PhotographyRuntime.VAL_OnlinePhotoAlbumSubsystem.DeleteOnlinePhoto
// 0x0014 (0x0014 - 0x0000)
struct VAL_OnlinePhotoAlbumSubsystem_DeleteOnlinePhoto final
{
public:
	struct FGuid                                  PhotoId;                                           // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_33BB[0x3];                                     // 0x0011(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(VAL_OnlinePhotoAlbumSubsystem_DeleteOnlinePhoto) == 0x000004, "Wrong alignment on VAL_OnlinePhotoAlbumSubsystem_DeleteOnlinePhoto");
static_assert(sizeof(VAL_OnlinePhotoAlbumSubsystem_DeleteOnlinePhoto) == 0x000014, "Wrong size on VAL_OnlinePhotoAlbumSubsystem_DeleteOnlinePhoto");
static_assert(offsetof(VAL_OnlinePhotoAlbumSubsystem_DeleteOnlinePhoto, PhotoId) == 0x000000, "Member 'VAL_OnlinePhotoAlbumSubsystem_DeleteOnlinePhoto::PhotoId' has a wrong offset!");
static_assert(offsetof(VAL_OnlinePhotoAlbumSubsystem_DeleteOnlinePhoto, ReturnValue) == 0x000010, "Member 'VAL_OnlinePhotoAlbumSubsystem_DeleteOnlinePhoto::ReturnValue' has a wrong offset!");

// Function PhotographyRuntime.VAL_OnlinePhotoAlbumSubsystem.GetOnlinePhoto
// 0x0044 (0x0044 - 0x0000)
struct VAL_OnlinePhotoAlbumSubsystem_GetOnlinePhoto final
{
public:
	struct FGuid                                  AccountId;                                         // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGuid                                  PhotoId;                                           // 0x0010(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(class UVAL_OnlinePhotoAlbumSubsystem* OnlinePhotoAlbumSubsystem, struct FGuid& AccountId, struct FGuid& PhotoId, class UVAL_OnlinePhotograph* Photo)> OnSucceeded;                                       // 0x0020(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(class UVAL_OnlinePhotoAlbumSubsystem* OnlinePhotoAlbumSubsystem, struct FGuid& AccountId, struct FGuid& PhotoId, class FText& Error)> OnFailed;                                          // 0x0030(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0040(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_33BC[0x3];                                     // 0x0041(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(VAL_OnlinePhotoAlbumSubsystem_GetOnlinePhoto) == 0x000004, "Wrong alignment on VAL_OnlinePhotoAlbumSubsystem_GetOnlinePhoto");
static_assert(sizeof(VAL_OnlinePhotoAlbumSubsystem_GetOnlinePhoto) == 0x000044, "Wrong size on VAL_OnlinePhotoAlbumSubsystem_GetOnlinePhoto");
static_assert(offsetof(VAL_OnlinePhotoAlbumSubsystem_GetOnlinePhoto, AccountId) == 0x000000, "Member 'VAL_OnlinePhotoAlbumSubsystem_GetOnlinePhoto::AccountId' has a wrong offset!");
static_assert(offsetof(VAL_OnlinePhotoAlbumSubsystem_GetOnlinePhoto, PhotoId) == 0x000010, "Member 'VAL_OnlinePhotoAlbumSubsystem_GetOnlinePhoto::PhotoId' has a wrong offset!");
static_assert(offsetof(VAL_OnlinePhotoAlbumSubsystem_GetOnlinePhoto, OnSucceeded) == 0x000020, "Member 'VAL_OnlinePhotoAlbumSubsystem_GetOnlinePhoto::OnSucceeded' has a wrong offset!");
static_assert(offsetof(VAL_OnlinePhotoAlbumSubsystem_GetOnlinePhoto, OnFailed) == 0x000030, "Member 'VAL_OnlinePhotoAlbumSubsystem_GetOnlinePhoto::OnFailed' has a wrong offset!");
static_assert(offsetof(VAL_OnlinePhotoAlbumSubsystem_GetOnlinePhoto, ReturnValue) == 0x000040, "Member 'VAL_OnlinePhotoAlbumSubsystem_GetOnlinePhoto::ReturnValue' has a wrong offset!");

// DelegateFunction PhotographyRuntime.VAL_OnlinePhotoAlbumSubsystem.OnGetOnlinePhotoFailed__DelegateSignature
// 0x0040 (0x0040 - 0x0000)
struct VAL_OnlinePhotoAlbumSubsystem_OnGetOnlinePhotoFailed__DelegateSignature final
{
public:
	class UVAL_OnlinePhotoAlbumSubsystem*         OnlinePhotoAlbumSubsystem;                         // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGuid                                  AccountId;                                         // 0x0008(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGuid                                  PhotoId;                                           // 0x0018(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FText                                   Error;                                             // 0x0028(0x0018)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(VAL_OnlinePhotoAlbumSubsystem_OnGetOnlinePhotoFailed__DelegateSignature) == 0x000008, "Wrong alignment on VAL_OnlinePhotoAlbumSubsystem_OnGetOnlinePhotoFailed__DelegateSignature");
static_assert(sizeof(VAL_OnlinePhotoAlbumSubsystem_OnGetOnlinePhotoFailed__DelegateSignature) == 0x000040, "Wrong size on VAL_OnlinePhotoAlbumSubsystem_OnGetOnlinePhotoFailed__DelegateSignature");
static_assert(offsetof(VAL_OnlinePhotoAlbumSubsystem_OnGetOnlinePhotoFailed__DelegateSignature, OnlinePhotoAlbumSubsystem) == 0x000000, "Member 'VAL_OnlinePhotoAlbumSubsystem_OnGetOnlinePhotoFailed__DelegateSignature::OnlinePhotoAlbumSubsystem' has a wrong offset!");
static_assert(offsetof(VAL_OnlinePhotoAlbumSubsystem_OnGetOnlinePhotoFailed__DelegateSignature, AccountId) == 0x000008, "Member 'VAL_OnlinePhotoAlbumSubsystem_OnGetOnlinePhotoFailed__DelegateSignature::AccountId' has a wrong offset!");
static_assert(offsetof(VAL_OnlinePhotoAlbumSubsystem_OnGetOnlinePhotoFailed__DelegateSignature, PhotoId) == 0x000018, "Member 'VAL_OnlinePhotoAlbumSubsystem_OnGetOnlinePhotoFailed__DelegateSignature::PhotoId' has a wrong offset!");
static_assert(offsetof(VAL_OnlinePhotoAlbumSubsystem_OnGetOnlinePhotoFailed__DelegateSignature, Error) == 0x000028, "Member 'VAL_OnlinePhotoAlbumSubsystem_OnGetOnlinePhotoFailed__DelegateSignature::Error' has a wrong offset!");

// DelegateFunction PhotographyRuntime.VAL_OnlinePhotoAlbumSubsystem.OnGetOnlinePhotoSucceeded__DelegateSignature
// 0x0030 (0x0030 - 0x0000)
struct VAL_OnlinePhotoAlbumSubsystem_OnGetOnlinePhotoSucceeded__DelegateSignature final
{
public:
	class UVAL_OnlinePhotoAlbumSubsystem*         OnlinePhotoAlbumSubsystem;                         // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGuid                                  AccountId;                                         // 0x0008(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGuid                                  PhotoId;                                           // 0x0018(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UVAL_OnlinePhotograph*                  Photo;                                             // 0x0028(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(VAL_OnlinePhotoAlbumSubsystem_OnGetOnlinePhotoSucceeded__DelegateSignature) == 0x000008, "Wrong alignment on VAL_OnlinePhotoAlbumSubsystem_OnGetOnlinePhotoSucceeded__DelegateSignature");
static_assert(sizeof(VAL_OnlinePhotoAlbumSubsystem_OnGetOnlinePhotoSucceeded__DelegateSignature) == 0x000030, "Wrong size on VAL_OnlinePhotoAlbumSubsystem_OnGetOnlinePhotoSucceeded__DelegateSignature");
static_assert(offsetof(VAL_OnlinePhotoAlbumSubsystem_OnGetOnlinePhotoSucceeded__DelegateSignature, OnlinePhotoAlbumSubsystem) == 0x000000, "Member 'VAL_OnlinePhotoAlbumSubsystem_OnGetOnlinePhotoSucceeded__DelegateSignature::OnlinePhotoAlbumSubsystem' has a wrong offset!");
static_assert(offsetof(VAL_OnlinePhotoAlbumSubsystem_OnGetOnlinePhotoSucceeded__DelegateSignature, AccountId) == 0x000008, "Member 'VAL_OnlinePhotoAlbumSubsystem_OnGetOnlinePhotoSucceeded__DelegateSignature::AccountId' has a wrong offset!");
static_assert(offsetof(VAL_OnlinePhotoAlbumSubsystem_OnGetOnlinePhotoSucceeded__DelegateSignature, PhotoId) == 0x000018, "Member 'VAL_OnlinePhotoAlbumSubsystem_OnGetOnlinePhotoSucceeded__DelegateSignature::PhotoId' has a wrong offset!");
static_assert(offsetof(VAL_OnlinePhotoAlbumSubsystem_OnGetOnlinePhotoSucceeded__DelegateSignature, Photo) == 0x000028, "Member 'VAL_OnlinePhotoAlbumSubsystem_OnGetOnlinePhotoSucceeded__DelegateSignature::Photo' has a wrong offset!");

// DelegateFunction PhotographyRuntime.VAL_OnlinePhotoAlbumSubsystem.OnOnlinePhotosChanged__DelegateSignature
// 0x00A8 (0x00A8 - 0x0000)
struct VAL_OnlinePhotoAlbumSubsystem_OnOnlinePhotosChanged__DelegateSignature final
{
public:
	class UVAL_OnlinePhotoAlbumSubsystem*         OnlinePhotoAlbumSubsystem;                         // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSet<struct FGuid>                            DeletedPhotoIds;                                   // 0x0008(0x0050)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	TSet<struct FGuid>                            AddedPhotoIds;                                     // 0x0058(0x0050)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(VAL_OnlinePhotoAlbumSubsystem_OnOnlinePhotosChanged__DelegateSignature) == 0x000008, "Wrong alignment on VAL_OnlinePhotoAlbumSubsystem_OnOnlinePhotosChanged__DelegateSignature");
static_assert(sizeof(VAL_OnlinePhotoAlbumSubsystem_OnOnlinePhotosChanged__DelegateSignature) == 0x0000A8, "Wrong size on VAL_OnlinePhotoAlbumSubsystem_OnOnlinePhotosChanged__DelegateSignature");
static_assert(offsetof(VAL_OnlinePhotoAlbumSubsystem_OnOnlinePhotosChanged__DelegateSignature, OnlinePhotoAlbumSubsystem) == 0x000000, "Member 'VAL_OnlinePhotoAlbumSubsystem_OnOnlinePhotosChanged__DelegateSignature::OnlinePhotoAlbumSubsystem' has a wrong offset!");
static_assert(offsetof(VAL_OnlinePhotoAlbumSubsystem_OnOnlinePhotosChanged__DelegateSignature, DeletedPhotoIds) == 0x000008, "Member 'VAL_OnlinePhotoAlbumSubsystem_OnOnlinePhotosChanged__DelegateSignature::DeletedPhotoIds' has a wrong offset!");
static_assert(offsetof(VAL_OnlinePhotoAlbumSubsystem_OnOnlinePhotosChanged__DelegateSignature, AddedPhotoIds) == 0x000058, "Member 'VAL_OnlinePhotoAlbumSubsystem_OnOnlinePhotosChanged__DelegateSignature::AddedPhotoIds' has a wrong offset!");

// DelegateFunction PhotographyRuntime.VAL_OnlinePhotoAlbumSubsystem.OnUploadPhotoFailed__DelegateSignature
// 0x0028 (0x0028 - 0x0000)
struct VAL_OnlinePhotoAlbumSubsystem_OnUploadPhotoFailed__DelegateSignature final
{
public:
	class UVAL_OnlinePhotoAlbumSubsystem*         OnlinePhotoAlbumSubsystem;                         // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UVAL_CapturedPhotograph*                OriginalPhotograph;                                // 0x0008(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FText                                   Error;                                             // 0x0010(0x0018)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(VAL_OnlinePhotoAlbumSubsystem_OnUploadPhotoFailed__DelegateSignature) == 0x000008, "Wrong alignment on VAL_OnlinePhotoAlbumSubsystem_OnUploadPhotoFailed__DelegateSignature");
static_assert(sizeof(VAL_OnlinePhotoAlbumSubsystem_OnUploadPhotoFailed__DelegateSignature) == 0x000028, "Wrong size on VAL_OnlinePhotoAlbumSubsystem_OnUploadPhotoFailed__DelegateSignature");
static_assert(offsetof(VAL_OnlinePhotoAlbumSubsystem_OnUploadPhotoFailed__DelegateSignature, OnlinePhotoAlbumSubsystem) == 0x000000, "Member 'VAL_OnlinePhotoAlbumSubsystem_OnUploadPhotoFailed__DelegateSignature::OnlinePhotoAlbumSubsystem' has a wrong offset!");
static_assert(offsetof(VAL_OnlinePhotoAlbumSubsystem_OnUploadPhotoFailed__DelegateSignature, OriginalPhotograph) == 0x000008, "Member 'VAL_OnlinePhotoAlbumSubsystem_OnUploadPhotoFailed__DelegateSignature::OriginalPhotograph' has a wrong offset!");
static_assert(offsetof(VAL_OnlinePhotoAlbumSubsystem_OnUploadPhotoFailed__DelegateSignature, Error) == 0x000010, "Member 'VAL_OnlinePhotoAlbumSubsystem_OnUploadPhotoFailed__DelegateSignature::Error' has a wrong offset!");

// DelegateFunction PhotographyRuntime.VAL_OnlinePhotoAlbumSubsystem.OnUploadPhotoSucceeded__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct VAL_OnlinePhotoAlbumSubsystem_OnUploadPhotoSucceeded__DelegateSignature final
{
public:
	class UVAL_OnlinePhotoAlbumSubsystem*         OnlinePhotoAlbumSubsystem;                         // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UVAL_CapturedPhotograph*                OriginalPhotograph;                                // 0x0008(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGuid                                  PhotoId;                                           // 0x0010(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(VAL_OnlinePhotoAlbumSubsystem_OnUploadPhotoSucceeded__DelegateSignature) == 0x000008, "Wrong alignment on VAL_OnlinePhotoAlbumSubsystem_OnUploadPhotoSucceeded__DelegateSignature");
static_assert(sizeof(VAL_OnlinePhotoAlbumSubsystem_OnUploadPhotoSucceeded__DelegateSignature) == 0x000020, "Wrong size on VAL_OnlinePhotoAlbumSubsystem_OnUploadPhotoSucceeded__DelegateSignature");
static_assert(offsetof(VAL_OnlinePhotoAlbumSubsystem_OnUploadPhotoSucceeded__DelegateSignature, OnlinePhotoAlbumSubsystem) == 0x000000, "Member 'VAL_OnlinePhotoAlbumSubsystem_OnUploadPhotoSucceeded__DelegateSignature::OnlinePhotoAlbumSubsystem' has a wrong offset!");
static_assert(offsetof(VAL_OnlinePhotoAlbumSubsystem_OnUploadPhotoSucceeded__DelegateSignature, OriginalPhotograph) == 0x000008, "Member 'VAL_OnlinePhotoAlbumSubsystem_OnUploadPhotoSucceeded__DelegateSignature::OriginalPhotograph' has a wrong offset!");
static_assert(offsetof(VAL_OnlinePhotoAlbumSubsystem_OnUploadPhotoSucceeded__DelegateSignature, PhotoId) == 0x000010, "Member 'VAL_OnlinePhotoAlbumSubsystem_OnUploadPhotoSucceeded__DelegateSignature::PhotoId' has a wrong offset!");

// Function PhotographyRuntime.VAL_OnlinePhotoAlbumSubsystem.UploadPhoto
// 0x0030 (0x0030 - 0x0000)
struct VAL_OnlinePhotoAlbumSubsystem_UploadPhoto final
{
public:
	const class UVAL_CapturedPhotograph*          Photograph;                                        // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(class UVAL_OnlinePhotoAlbumSubsystem* OnlinePhotoAlbumSubsystem, class UVAL_CapturedPhotograph* OriginalPhotograph, struct FGuid& PhotoId)> OnSucceeded;                                       // 0x0008(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(class UVAL_OnlinePhotoAlbumSubsystem* OnlinePhotoAlbumSubsystem, class UVAL_CapturedPhotograph* OriginalPhotograph, class FText& Error)> OnFailed;                                          // 0x0018(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0028(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_33BD[0x7];                                     // 0x0029(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(VAL_OnlinePhotoAlbumSubsystem_UploadPhoto) == 0x000008, "Wrong alignment on VAL_OnlinePhotoAlbumSubsystem_UploadPhoto");
static_assert(sizeof(VAL_OnlinePhotoAlbumSubsystem_UploadPhoto) == 0x000030, "Wrong size on VAL_OnlinePhotoAlbumSubsystem_UploadPhoto");
static_assert(offsetof(VAL_OnlinePhotoAlbumSubsystem_UploadPhoto, Photograph) == 0x000000, "Member 'VAL_OnlinePhotoAlbumSubsystem_UploadPhoto::Photograph' has a wrong offset!");
static_assert(offsetof(VAL_OnlinePhotoAlbumSubsystem_UploadPhoto, OnSucceeded) == 0x000008, "Member 'VAL_OnlinePhotoAlbumSubsystem_UploadPhoto::OnSucceeded' has a wrong offset!");
static_assert(offsetof(VAL_OnlinePhotoAlbumSubsystem_UploadPhoto, OnFailed) == 0x000018, "Member 'VAL_OnlinePhotoAlbumSubsystem_UploadPhoto::OnFailed' has a wrong offset!");
static_assert(offsetof(VAL_OnlinePhotoAlbumSubsystem_UploadPhoto, ReturnValue) == 0x000028, "Member 'VAL_OnlinePhotoAlbumSubsystem_UploadPhoto::ReturnValue' has a wrong offset!");

// Function PhotographyRuntime.VAL_OnlinePhotoAlbumSubsystem.GetOnlinePhotoIdForRecentPhoto
// 0x0018 (0x0018 - 0x0000)
struct VAL_OnlinePhotoAlbumSubsystem_GetOnlinePhotoIdForRecentPhoto final
{
public:
	const class UVAL_CapturedPhotograph*          RecentPhoto;                                       // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGuid                                  ReturnValue;                                       // 0x0008(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(VAL_OnlinePhotoAlbumSubsystem_GetOnlinePhotoIdForRecentPhoto) == 0x000008, "Wrong alignment on VAL_OnlinePhotoAlbumSubsystem_GetOnlinePhotoIdForRecentPhoto");
static_assert(sizeof(VAL_OnlinePhotoAlbumSubsystem_GetOnlinePhotoIdForRecentPhoto) == 0x000018, "Wrong size on VAL_OnlinePhotoAlbumSubsystem_GetOnlinePhotoIdForRecentPhoto");
static_assert(offsetof(VAL_OnlinePhotoAlbumSubsystem_GetOnlinePhotoIdForRecentPhoto, RecentPhoto) == 0x000000, "Member 'VAL_OnlinePhotoAlbumSubsystem_GetOnlinePhotoIdForRecentPhoto::RecentPhoto' has a wrong offset!");
static_assert(offsetof(VAL_OnlinePhotoAlbumSubsystem_GetOnlinePhotoIdForRecentPhoto, ReturnValue) == 0x000008, "Member 'VAL_OnlinePhotoAlbumSubsystem_GetOnlinePhotoIdForRecentPhoto::ReturnValue' has a wrong offset!");

// Function PhotographyRuntime.VAL_OnlinePhotoAlbumSubsystem.GetOurOnlinePhotos
// 0x0010 (0x0010 - 0x0000)
struct VAL_OnlinePhotoAlbumSubsystem_GetOurOnlinePhotos final
{
public:
	TArray<class UVAL_OnlinePhotograph*>          ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(VAL_OnlinePhotoAlbumSubsystem_GetOurOnlinePhotos) == 0x000008, "Wrong alignment on VAL_OnlinePhotoAlbumSubsystem_GetOurOnlinePhotos");
static_assert(sizeof(VAL_OnlinePhotoAlbumSubsystem_GetOurOnlinePhotos) == 0x000010, "Wrong size on VAL_OnlinePhotoAlbumSubsystem_GetOurOnlinePhotos");
static_assert(offsetof(VAL_OnlinePhotoAlbumSubsystem_GetOurOnlinePhotos, ReturnValue) == 0x000000, "Member 'VAL_OnlinePhotoAlbumSubsystem_GetOurOnlinePhotos::ReturnValue' has a wrong offset!");

// Function PhotographyRuntime.VAL_OnlinePhotoAlbumSubsystem.GetRecentPhotosBeingUploaded
// 0x0050 (0x0050 - 0x0000)
struct VAL_OnlinePhotoAlbumSubsystem_GetRecentPhotosBeingUploaded final
{
public:
	TSet<class UVAL_CapturedPhotograph*>          ReturnValue;                                       // 0x0000(0x0050)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(VAL_OnlinePhotoAlbumSubsystem_GetRecentPhotosBeingUploaded) == 0x000008, "Wrong alignment on VAL_OnlinePhotoAlbumSubsystem_GetRecentPhotosBeingUploaded");
static_assert(sizeof(VAL_OnlinePhotoAlbumSubsystem_GetRecentPhotosBeingUploaded) == 0x000050, "Wrong size on VAL_OnlinePhotoAlbumSubsystem_GetRecentPhotosBeingUploaded");
static_assert(offsetof(VAL_OnlinePhotoAlbumSubsystem_GetRecentPhotosBeingUploaded, ReturnValue) == 0x000000, "Member 'VAL_OnlinePhotoAlbumSubsystem_GetRecentPhotosBeingUploaded::ReturnValue' has a wrong offset!");

// Function PhotographyRuntime.VAL_OnlinePhotoAlbumSubsystem.GetRecentPhotosUploaded
// 0x0050 (0x0050 - 0x0000)
struct VAL_OnlinePhotoAlbumSubsystem_GetRecentPhotosUploaded final
{
public:
	TSet<class UVAL_CapturedPhotograph*>          ReturnValue;                                       // 0x0000(0x0050)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(VAL_OnlinePhotoAlbumSubsystem_GetRecentPhotosUploaded) == 0x000008, "Wrong alignment on VAL_OnlinePhotoAlbumSubsystem_GetRecentPhotosUploaded");
static_assert(sizeof(VAL_OnlinePhotoAlbumSubsystem_GetRecentPhotosUploaded) == 0x000050, "Wrong size on VAL_OnlinePhotoAlbumSubsystem_GetRecentPhotosUploaded");
static_assert(offsetof(VAL_OnlinePhotoAlbumSubsystem_GetRecentPhotosUploaded, ReturnValue) == 0x000000, "Member 'VAL_OnlinePhotoAlbumSubsystem_GetRecentPhotosUploaded::ReturnValue' has a wrong offset!");

// Function PhotographyRuntime.VAL_PhotographyManager.CreateCapturedPhotograph
// 0x0010 (0x0010 - 0x0000)
struct VAL_PhotographyManager_CreateCapturedPhotograph final
{
public:
	struct FGuid                                  ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(VAL_PhotographyManager_CreateCapturedPhotograph) == 0x000004, "Wrong alignment on VAL_PhotographyManager_CreateCapturedPhotograph");
static_assert(sizeof(VAL_PhotographyManager_CreateCapturedPhotograph) == 0x000010, "Wrong size on VAL_PhotographyManager_CreateCapturedPhotograph");
static_assert(offsetof(VAL_PhotographyManager_CreateCapturedPhotograph, ReturnValue) == 0x000000, "Member 'VAL_PhotographyManager_CreateCapturedPhotograph::ReturnValue' has a wrong offset!");

// DelegateFunction PhotographyRuntime.VAL_PhotographyManager.OnCaptureTaken__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct VAL_PhotographyManager_OnCaptureTaken__DelegateSignature final
{
public:
	class UVAL_PhotographyManager*                PhotographyManager;                                // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UVAL_CapturedPhotograph*                CapturedPhotograph;                                // 0x0008(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(VAL_PhotographyManager_OnCaptureTaken__DelegateSignature) == 0x000008, "Wrong alignment on VAL_PhotographyManager_OnCaptureTaken__DelegateSignature");
static_assert(sizeof(VAL_PhotographyManager_OnCaptureTaken__DelegateSignature) == 0x000010, "Wrong size on VAL_PhotographyManager_OnCaptureTaken__DelegateSignature");
static_assert(offsetof(VAL_PhotographyManager_OnCaptureTaken__DelegateSignature, PhotographyManager) == 0x000000, "Member 'VAL_PhotographyManager_OnCaptureTaken__DelegateSignature::PhotographyManager' has a wrong offset!");
static_assert(offsetof(VAL_PhotographyManager_OnCaptureTaken__DelegateSignature, CapturedPhotograph) == 0x000008, "Member 'VAL_PhotographyManager_OnCaptureTaken__DelegateSignature::CapturedPhotograph' has a wrong offset!");

// DelegateFunction PhotographyRuntime.VAL_PhotographyManager.OnStartingCapture__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct VAL_PhotographyManager_OnStartingCapture__DelegateSignature final
{
public:
	class UVAL_PhotographyManager*                PhotographyManager;                                // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(VAL_PhotographyManager_OnStartingCapture__DelegateSignature) == 0x000008, "Wrong alignment on VAL_PhotographyManager_OnStartingCapture__DelegateSignature");
static_assert(sizeof(VAL_PhotographyManager_OnStartingCapture__DelegateSignature) == 0x000008, "Wrong size on VAL_PhotographyManager_OnStartingCapture__DelegateSignature");
static_assert(offsetof(VAL_PhotographyManager_OnStartingCapture__DelegateSignature, PhotographyManager) == 0x000000, "Member 'VAL_PhotographyManager_OnStartingCapture__DelegateSignature::PhotographyManager' has a wrong offset!");

// Function PhotographyRuntime.VAL_PhotographyManager.GetCapturedPhotographs
// 0x0010 (0x0010 - 0x0000)
struct VAL_PhotographyManager_GetCapturedPhotographs final
{
public:
	TArray<class UVAL_CapturedPhotograph*>        ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(VAL_PhotographyManager_GetCapturedPhotographs) == 0x000008, "Wrong alignment on VAL_PhotographyManager_GetCapturedPhotographs");
static_assert(sizeof(VAL_PhotographyManager_GetCapturedPhotographs) == 0x000010, "Wrong size on VAL_PhotographyManager_GetCapturedPhotographs");
static_assert(offsetof(VAL_PhotographyManager_GetCapturedPhotographs, ReturnValue) == 0x000000, "Member 'VAL_PhotographyManager_GetCapturedPhotographs::ReturnValue' has a wrong offset!");

// DelegateFunction PhotographyRuntime.VAL_OnlinePhotograph.OnImageResourceObjectChanged__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct VAL_OnlinePhotograph_OnImageResourceObjectChanged__DelegateSignature final
{
public:
	class UVAL_OnlinePhotograph*                  OnlinePhotograph;                                  // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(VAL_OnlinePhotograph_OnImageResourceObjectChanged__DelegateSignature) == 0x000008, "Wrong alignment on VAL_OnlinePhotograph_OnImageResourceObjectChanged__DelegateSignature");
static_assert(sizeof(VAL_OnlinePhotograph_OnImageResourceObjectChanged__DelegateSignature) == 0x000008, "Wrong size on VAL_OnlinePhotograph_OnImageResourceObjectChanged__DelegateSignature");
static_assert(offsetof(VAL_OnlinePhotograph_OnImageResourceObjectChanged__DelegateSignature, OnlinePhotograph) == 0x000000, "Member 'VAL_OnlinePhotograph_OnImageResourceObjectChanged__DelegateSignature::OnlinePhotograph' has a wrong offset!");

// Function PhotographyRuntime.VAL_RichMarkupPhotographInterface.GetPhotographImageResourceObject
// 0x0008 (0x0008 - 0x0000)
struct VAL_RichMarkupPhotographInterface_GetPhotographImageResourceObject final
{
public:
	class UObject*                                ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(VAL_RichMarkupPhotographInterface_GetPhotographImageResourceObject) == 0x000008, "Wrong alignment on VAL_RichMarkupPhotographInterface_GetPhotographImageResourceObject");
static_assert(sizeof(VAL_RichMarkupPhotographInterface_GetPhotographImageResourceObject) == 0x000008, "Wrong size on VAL_RichMarkupPhotographInterface_GetPhotographImageResourceObject");
static_assert(offsetof(VAL_RichMarkupPhotographInterface_GetPhotographImageResourceObject, ReturnValue) == 0x000000, "Member 'VAL_RichMarkupPhotographInterface_GetPhotographImageResourceObject::ReturnValue' has a wrong offset!");

// Function PhotographyRuntime.VAL_RichMarkupPhotographInterface.GetPlayersInPhotograph
// 0x0050 (0x0050 - 0x0000)
struct VAL_RichMarkupPhotographInterface_GetPlayersInPhotograph final
{
public:
	TSet<struct FUniqueNetIdRepl>                 ReturnValue;                                       // 0x0000(0x0050)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(VAL_RichMarkupPhotographInterface_GetPlayersInPhotograph) == 0x000008, "Wrong alignment on VAL_RichMarkupPhotographInterface_GetPlayersInPhotograph");
static_assert(sizeof(VAL_RichMarkupPhotographInterface_GetPlayersInPhotograph) == 0x000050, "Wrong size on VAL_RichMarkupPhotographInterface_GetPlayersInPhotograph");
static_assert(offsetof(VAL_RichMarkupPhotographInterface_GetPlayersInPhotograph, ReturnValue) == 0x000000, "Member 'VAL_RichMarkupPhotographInterface_GetPlayersInPhotograph::ReturnValue' has a wrong offset!");

}

