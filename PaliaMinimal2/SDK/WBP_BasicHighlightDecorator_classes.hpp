#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_BasicHighlightDecorator

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "SlateCore_structs.hpp"
#include "UMG_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_BasicHighlightDecorator.WBP_BasicHighlightDecorator_C
// 0x0040 (0x0300 - 0x02C0)
class UWBP_BasicHighlightDecorator_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02C0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       FadeIn;                                            // 0x02C8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UVALUI_Border_Styled*                   Border_PositivePadding;                            // 0x02D0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USizeBox*                               Box_NegativePadding;                               // 0x02D8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UNamedSlot*                             NamedSlot_AnchorWidget;                            // 0x02E0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     PulsingAnimPlayer;                                 // 0x02E8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FMargin                                DecoratorMargin;                                   // 0x02F0(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn)

public:
	void CuePulse(class UUMGSequencePlayer* CallFunc_PlayAnimation_ReturnValue);
	void ExecuteUbergraph_WBP_BasicHighlightDecorator(int32 EntryPoint, double CallFunc_MakeLiteralDouble_ReturnValue, class UPanelSlot* CallFunc_GetContentSlot_ReturnValue, class UBorderSlot* K2Node_DynamicCast_AsBorder_Slot, bool K2Node_DynamicCast_bSuccess, const struct FMargin& K2Node_Copy_ReturnValue, double CallFunc_Multiply_DoubleDouble_ReturnValue, class UPanelSlot* CallFunc_GetContentSlot_ReturnValue_1, double CallFunc_Multiply_DoubleDouble_ReturnValue_1, class USizeBoxSlot* K2Node_DynamicCast_AsSize_Box_Slot, bool K2Node_DynamicCast_bSuccess_1, double CallFunc_Multiply_DoubleDouble_ReturnValue_2, double CallFunc_Multiply_DoubleDouble_ReturnValue_3, bool K2Node_Event_IsDesignTime, const struct FMargin& K2Node_SetFieldsInStruct_StructOut, double CallFunc_Multiply_DoubleDouble_A_ImplicitCast, double CallFunc_Multiply_DoubleDouble_A_ImplicitCast_1, double CallFunc_Multiply_DoubleDouble_A_ImplicitCast_2, double CallFunc_Multiply_DoubleDouble_A_ImplicitCast_3, float K2Node_SetFieldsInStruct_Bottom_ImplicitCast, float K2Node_SetFieldsInStruct_Right_ImplicitCast, float K2Node_SetFieldsInStruct_Top_ImplicitCast, float K2Node_SetFieldsInStruct_Left_ImplicitCast);
	void PreConstruct(bool IsDesignTime);
	void StartLoopingPulse(int32 PulseCount, class UUMGSequencePlayer* CallFunc_PlayAnimation_ReturnValue);
	void StopLoopingPulse();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_BasicHighlightDecorator_C">();
	}
	static class UWBP_BasicHighlightDecorator_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_BasicHighlightDecorator_C>();
	}
};
static_assert(alignof(UWBP_BasicHighlightDecorator_C) == 0x000008, "Wrong alignment on UWBP_BasicHighlightDecorator_C");
static_assert(sizeof(UWBP_BasicHighlightDecorator_C) == 0x000300, "Wrong size on UWBP_BasicHighlightDecorator_C");
static_assert(offsetof(UWBP_BasicHighlightDecorator_C, UberGraphFrame) == 0x0002C0, "Member 'UWBP_BasicHighlightDecorator_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWBP_BasicHighlightDecorator_C, FadeIn) == 0x0002C8, "Member 'UWBP_BasicHighlightDecorator_C::FadeIn' has a wrong offset!");
static_assert(offsetof(UWBP_BasicHighlightDecorator_C, Border_PositivePadding) == 0x0002D0, "Member 'UWBP_BasicHighlightDecorator_C::Border_PositivePadding' has a wrong offset!");
static_assert(offsetof(UWBP_BasicHighlightDecorator_C, Box_NegativePadding) == 0x0002D8, "Member 'UWBP_BasicHighlightDecorator_C::Box_NegativePadding' has a wrong offset!");
static_assert(offsetof(UWBP_BasicHighlightDecorator_C, NamedSlot_AnchorWidget) == 0x0002E0, "Member 'UWBP_BasicHighlightDecorator_C::NamedSlot_AnchorWidget' has a wrong offset!");
static_assert(offsetof(UWBP_BasicHighlightDecorator_C, PulsingAnimPlayer) == 0x0002E8, "Member 'UWBP_BasicHighlightDecorator_C::PulsingAnimPlayer' has a wrong offset!");
static_assert(offsetof(UWBP_BasicHighlightDecorator_C, DecoratorMargin) == 0x0002F0, "Member 'UWBP_BasicHighlightDecorator_C::DecoratorMargin' has a wrong offset!");

}

