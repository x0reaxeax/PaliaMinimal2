#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_GateTeleporter_Parent

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "BP_ProximityTeleporter_Parent_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_GateTeleporter_Parent.BP_GateTeleporter_Parent_C
// 0x0030 (0x0380 - 0x0350)
class ABP_GateTeleporter_Parent_C final : public ABP_ProximityTeleporter_Parent_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_BP_GateTeleporter_Parent_C;         // 0x0350(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UBoxComponent*                          Movement_Blocker;                                  // 0x0358(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UChildActorComponent*                   Door_1;                                            // 0x0360(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UChildActorComponent*                   Door_2;                                            // 0x0368(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   GateFrame;                                         // 0x0370(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        GateMesh;                                          // 0x0378(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)

public:
	void Implementation_OnTeleportOverlapBegin_Server(class AValeriaCharacter* TeleportedCharacter);
	void ExecuteUbergraph_BP_GateTeleporter_Parent(int32 EntryPoint, class AValeriaCharacter* K2Node_Event_TeleportedCharacter);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_GateTeleporter_Parent_C">();
	}
	static class ABP_GateTeleporter_Parent_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_GateTeleporter_Parent_C>();
	}
};
static_assert(alignof(ABP_GateTeleporter_Parent_C) == 0x000008, "Wrong alignment on ABP_GateTeleporter_Parent_C");
static_assert(sizeof(ABP_GateTeleporter_Parent_C) == 0x000380, "Wrong size on ABP_GateTeleporter_Parent_C");
static_assert(offsetof(ABP_GateTeleporter_Parent_C, UberGraphFrame_BP_GateTeleporter_Parent_C) == 0x000350, "Member 'ABP_GateTeleporter_Parent_C::UberGraphFrame_BP_GateTeleporter_Parent_C' has a wrong offset!");
static_assert(offsetof(ABP_GateTeleporter_Parent_C, Movement_Blocker) == 0x000358, "Member 'ABP_GateTeleporter_Parent_C::Movement_Blocker' has a wrong offset!");
static_assert(offsetof(ABP_GateTeleporter_Parent_C, Door_1) == 0x000360, "Member 'ABP_GateTeleporter_Parent_C::Door_1' has a wrong offset!");
static_assert(offsetof(ABP_GateTeleporter_Parent_C, Door_2) == 0x000368, "Member 'ABP_GateTeleporter_Parent_C::Door_2' has a wrong offset!");
static_assert(offsetof(ABP_GateTeleporter_Parent_C, GateFrame) == 0x000370, "Member 'ABP_GateTeleporter_Parent_C::GateFrame' has a wrong offset!");
static_assert(offsetof(ABP_GateTeleporter_Parent_C, GateMesh) == 0x000378, "Member 'ABP_GateTeleporter_Parent_C::GateMesh' has a wrong offset!");

}

