#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_GPPopup_QuickModal

#include "Basic.hpp"

#include "WBP_GPPopup_QuickModal_classes.hpp"
#include "WBP_GPPopup_QuickModal_parameters.hpp"


namespace SDK
{

// Function WBP_GPPopup_QuickModal.WBP_GPPopup_QuickModal_C.BP_OnHandleBackAction
// (Event, Protected, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool UWBP_GPPopup_QuickModal_C::BP_OnHandleBackAction()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_GPPopup_QuickModal_C", "BP_OnHandleBackAction");

	Params::WBP_GPPopup_QuickModal_C_BP_OnHandleBackAction Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function WBP_GPPopup_QuickModal.WBP_GPPopup_QuickModal_C.Construct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UWBP_GPPopup_QuickModal_C::Construct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_GPPopup_QuickModal_C", "Construct");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_GPPopup_QuickModal.WBP_GPPopup_QuickModal_C.ExecuteUbergraph_WBP_GPPopup_QuickModal
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UVAL_AlignedPopupType*            K2Node_DynamicCast_AsAligned_Modal_Type                (ConstParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool                                    K2Node_DynamicCast_bSuccess                            (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FGeometry                        K2Node_Event_MyGeometry                                (IsPlainOldData, NoDestructor)
// float                                   K2Node_Event_InDeltaTime                               (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UVAL_DismissGameAction*           K2Node_DynamicCast_AsGameplay_Action                   (ConstParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool                                    K2Node_DynamicCast_bSuccess_1                          (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UVAL_KeypressTimeoutDismiss*      K2Node_DynamicCast_AsTimeout_or_Keypress               (ConstParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool                                    K2Node_DynamicCast_bSuccess_2                          (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   CallFunc_K2_GetTimerRemainingTimeHandle_ReturnValue    (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  CallFunc_Divide_DoubleDouble_ReturnValue               (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TDelegate<void()>                       K2Node_CreateDelegate_OutputDelegate                   (ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// struct FTimerHandle                     CallFunc_K2_SetTimerDelegate_ReturnValue               (NoDestructor, HasGetValueTypeHash)
// float                                   CallFunc_K2_SetTimerDelegate_Time_ImplicitCast         (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  K2Node_VariableSet_DismissTimerDuration_ImplicitCast   (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  CallFunc_Divide_DoubleDouble_A_ImplicitCast            (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   CallFunc_SetPercent_InPercent_ImplicitCast             (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_GPPopup_QuickModal_C::ExecuteUbergraph_WBP_GPPopup_QuickModal(int32 EntryPoint, class UVAL_AlignedPopupType* K2Node_DynamicCast_AsAligned_Modal_Type, bool K2Node_DynamicCast_bSuccess, const struct FGeometry& K2Node_Event_MyGeometry, float K2Node_Event_InDeltaTime, class UVAL_DismissGameAction* K2Node_DynamicCast_AsGameplay_Action, bool K2Node_DynamicCast_bSuccess_1, class UVAL_KeypressTimeoutDismiss* K2Node_DynamicCast_AsTimeout_or_Keypress, bool K2Node_DynamicCast_bSuccess_2, float CallFunc_K2_GetTimerRemainingTimeHandle_ReturnValue, double CallFunc_Divide_DoubleDouble_ReturnValue, TDelegate<void()> K2Node_CreateDelegate_OutputDelegate, const struct FTimerHandle& CallFunc_K2_SetTimerDelegate_ReturnValue, float CallFunc_K2_SetTimerDelegate_Time_ImplicitCast, double K2Node_VariableSet_DismissTimerDuration_ImplicitCast, double CallFunc_Divide_DoubleDouble_A_ImplicitCast, float CallFunc_SetPercent_InPercent_ImplicitCast)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_GPPopup_QuickModal_C", "ExecuteUbergraph_WBP_GPPopup_QuickModal");

	Params::WBP_GPPopup_QuickModal_C_ExecuteUbergraph_WBP_GPPopup_QuickModal Parms{};

	Parms.EntryPoint = EntryPoint;
	Parms.K2Node_DynamicCast_AsAligned_Modal_Type = K2Node_DynamicCast_AsAligned_Modal_Type;
	Parms.K2Node_DynamicCast_bSuccess = K2Node_DynamicCast_bSuccess;
	Parms.K2Node_Event_MyGeometry = std::move(K2Node_Event_MyGeometry);
	Parms.K2Node_Event_InDeltaTime = K2Node_Event_InDeltaTime;
	Parms.K2Node_DynamicCast_AsGameplay_Action = K2Node_DynamicCast_AsGameplay_Action;
	Parms.K2Node_DynamicCast_bSuccess_1 = K2Node_DynamicCast_bSuccess_1;
	Parms.K2Node_DynamicCast_AsTimeout_or_Keypress = K2Node_DynamicCast_AsTimeout_or_Keypress;
	Parms.K2Node_DynamicCast_bSuccess_2 = K2Node_DynamicCast_bSuccess_2;
	Parms.CallFunc_K2_GetTimerRemainingTimeHandle_ReturnValue = CallFunc_K2_GetTimerRemainingTimeHandle_ReturnValue;
	Parms.CallFunc_Divide_DoubleDouble_ReturnValue = CallFunc_Divide_DoubleDouble_ReturnValue;
	Parms.K2Node_CreateDelegate_OutputDelegate = K2Node_CreateDelegate_OutputDelegate;
	Parms.CallFunc_K2_SetTimerDelegate_ReturnValue = std::move(CallFunc_K2_SetTimerDelegate_ReturnValue);
	Parms.CallFunc_K2_SetTimerDelegate_Time_ImplicitCast = CallFunc_K2_SetTimerDelegate_Time_ImplicitCast;
	Parms.K2Node_VariableSet_DismissTimerDuration_ImplicitCast = K2Node_VariableSet_DismissTimerDuration_ImplicitCast;
	Parms.CallFunc_Divide_DoubleDouble_A_ImplicitCast = CallFunc_Divide_DoubleDouble_A_ImplicitCast;
	Parms.CallFunc_SetPercent_InPercent_ImplicitCast = CallFunc_SetPercent_InPercent_ImplicitCast;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_GPPopup_QuickModal.WBP_GPPopup_QuickModal_C.OnDismissTimerComplete
// (BlueprintCallable, BlueprintEvent)

void UWBP_GPPopup_QuickModal_C::OnDismissTimerComplete()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_GPPopup_QuickModal_C", "OnDismissTimerComplete");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_GPPopup_QuickModal.WBP_GPPopup_QuickModal_C.Tick
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// struct FGeometry                        MyGeometry                                             (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
// float                                   InDeltaTime                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_GPPopup_QuickModal_C::Tick(const struct FGeometry& MyGeometry, float InDeltaTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_GPPopup_QuickModal_C", "Tick");

	Params::WBP_GPPopup_QuickModal_C_Tick Parms{};

	Parms.MyGeometry = std::move(MyGeometry);
	Parms.InDeltaTime = InDeltaTime;

	UObject::ProcessEvent(Func, &Parms);
}

}

