#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_ProximityTeleporter_Parent

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Palia_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_ProximityTeleporter_Parent.BP_ProximityTeleporter_Parent_C
// 0x0020 (0x0350 - 0x0330)
class ABP_ProximityTeleporter_Parent_C : public AVAL_ProximityTeleporter
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0330(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UArrowComponent*                        Arrow;                                             // 0x0338(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	double                                        Speed;                                             // 0x0340(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        TeleportEffectSpeed;                               // 0x0348(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void Implementation_OnEffectOverlapEnd_Server(class UPrimitiveComponent* OverlappedComp, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex);
	void Implementation_OnEffectOverlapEnd_Client(class UPrimitiveComponent* OverlappedComp, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex);
	void Implementation_OnEffectOverlapBegin_Server(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, struct FHitResult& SweepResult);
	void Implementation_OnEffectOverlapBegin_Client(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, struct FHitResult& SweepResult);
	void Implementation_OnCharacterTeleported_Client(class AValeriaCharacter* TeleportedCharacter);
	void ExecuteUbergraph_BP_ProximityTeleporter_Parent(int32 EntryPoint, class UPrimitiveComponent* K2Node_Event_OverlappedComponent_1, class AActor* K2Node_Event_OtherActor_3, class UPrimitiveComponent* K2Node_Event_OtherComp_3, int32 K2Node_Event_OtherBodyIndex_3, bool K2Node_Event_bFromSweep_1, struct FHitResult& K2Node_Event_SweepResult_1, class AValeriaCharacter* K2Node_DynamicCast_AsValeria_Character, bool K2Node_DynamicCast_bSuccess, class AValeriaCharacter* K2Node_Event_TeleportedCharacter, double CallFunc_GetMaxWalkSpeedOfActor_Speed, class UPrimitiveComponent* K2Node_Event_OverlappedComp_1, class AActor* K2Node_Event_OtherActor_2, class UPrimitiveComponent* K2Node_Event_OtherComp_2, int32 K2Node_Event_OtherBodyIndex_2, class AValeriaCharacter* K2Node_DynamicCast_AsValeria_Character_1, bool K2Node_DynamicCast_bSuccess_1, class UPrimitiveComponent* K2Node_Event_OverlappedComponent, class AActor* K2Node_Event_OtherActor_1, class UPrimitiveComponent* K2Node_Event_OtherComp_1, int32 K2Node_Event_OtherBodyIndex_1, bool K2Node_Event_bFromSweep, struct FHitResult& K2Node_Event_SweepResult, class UPrimitiveComponent* K2Node_Event_OverlappedComp, class AActor* K2Node_Event_OtherActor, class UPrimitiveComponent* K2Node_Event_OtherComp, int32 K2Node_Event_OtherBodyIndex, class AValeriaCharacter* K2Node_DynamicCast_AsValeria_Character_2, bool K2Node_DynamicCast_bSuccess_2, class AValeriaCharacter* K2Node_DynamicCast_AsValeria_Character_3, bool K2Node_DynamicCast_bSuccess_3);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_ProximityTeleporter_Parent_C">();
	}
	static class ABP_ProximityTeleporter_Parent_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_ProximityTeleporter_Parent_C>();
	}
};
static_assert(alignof(ABP_ProximityTeleporter_Parent_C) == 0x000008, "Wrong alignment on ABP_ProximityTeleporter_Parent_C");
static_assert(sizeof(ABP_ProximityTeleporter_Parent_C) == 0x000350, "Wrong size on ABP_ProximityTeleporter_Parent_C");
static_assert(offsetof(ABP_ProximityTeleporter_Parent_C, UberGraphFrame) == 0x000330, "Member 'ABP_ProximityTeleporter_Parent_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_ProximityTeleporter_Parent_C, Arrow) == 0x000338, "Member 'ABP_ProximityTeleporter_Parent_C::Arrow' has a wrong offset!");
static_assert(offsetof(ABP_ProximityTeleporter_Parent_C, Speed) == 0x000340, "Member 'ABP_ProximityTeleporter_Parent_C::Speed' has a wrong offset!");
static_assert(offsetof(ABP_ProximityTeleporter_Parent_C, TeleportEffectSpeed) == 0x000348, "Member 'ABP_ProximityTeleporter_Parent_C::TeleportEffectSpeed' has a wrong offset!");

}

