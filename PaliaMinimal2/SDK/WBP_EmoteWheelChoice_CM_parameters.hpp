#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_EmoteWheelChoice_CM

#include "Basic.hpp"

#include "UMG_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "SlateCore_structs.hpp"
#include "Palia_structs.hpp"


namespace SDK::Params
{

// Function WBP_EmoteWheelChoice_CM.WBP_EmoteWheelChoice_CM_C.BndEvt__WBP_EmoteWheelChoice_TileButton_K2Node_ComponentBoundEvent_0_VButtonMouseEvent__DelegateSignature
// 0x00B0 (0x00B0 - 0x0000)
struct WBP_EmoteWheelChoice_CM_C_BndEvt__WBP_EmoteWheelChoice_TileButton_K2Node_ComponentBoundEvent_0_VButtonMouseEvent__DelegateSignature final
{
public:
	struct FGeometry                              InGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FPointerEvent                          InMouseEvent;                                      // 0x0038(0x0078)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(WBP_EmoteWheelChoice_CM_C_BndEvt__WBP_EmoteWheelChoice_TileButton_K2Node_ComponentBoundEvent_0_VButtonMouseEvent__DelegateSignature) == 0x000008, "Wrong alignment on WBP_EmoteWheelChoice_CM_C_BndEvt__WBP_EmoteWheelChoice_TileButton_K2Node_ComponentBoundEvent_0_VButtonMouseEvent__DelegateSignature");
static_assert(sizeof(WBP_EmoteWheelChoice_CM_C_BndEvt__WBP_EmoteWheelChoice_TileButton_K2Node_ComponentBoundEvent_0_VButtonMouseEvent__DelegateSignature) == 0x0000B0, "Wrong size on WBP_EmoteWheelChoice_CM_C_BndEvt__WBP_EmoteWheelChoice_TileButton_K2Node_ComponentBoundEvent_0_VButtonMouseEvent__DelegateSignature");
static_assert(offsetof(WBP_EmoteWheelChoice_CM_C_BndEvt__WBP_EmoteWheelChoice_TileButton_K2Node_ComponentBoundEvent_0_VButtonMouseEvent__DelegateSignature, InGeometry) == 0x000000, "Member 'WBP_EmoteWheelChoice_CM_C_BndEvt__WBP_EmoteWheelChoice_TileButton_K2Node_ComponentBoundEvent_0_VButtonMouseEvent__DelegateSignature::InGeometry' has a wrong offset!");
static_assert(offsetof(WBP_EmoteWheelChoice_CM_C_BndEvt__WBP_EmoteWheelChoice_TileButton_K2Node_ComponentBoundEvent_0_VButtonMouseEvent__DelegateSignature, InMouseEvent) == 0x000038, "Member 'WBP_EmoteWheelChoice_CM_C_BndEvt__WBP_EmoteWheelChoice_TileButton_K2Node_ComponentBoundEvent_0_VButtonMouseEvent__DelegateSignature::InMouseEvent' has a wrong offset!");

// Function WBP_EmoteWheelChoice_CM.WBP_EmoteWheelChoice_CM_C.ExchangeEmote
// 0x0038 (0x0038 - 0x0000)
struct WBP_EmoteWheelChoice_CM_C_ExchangeEmote final
{
public:
	class UWBP_EmoteWheelChoice_CM_C*             Exchanged_Wheel_Choice;                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FGuid                                  Old_Emote_ID;                                      // 0x0008(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGuid                                  CallFunc_GetAssignedEmoteId_Emote_Id;              // 0x0018(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGuid                                  CallFunc_GetAssignedEmoteId_Emote_Id_1;            // 0x0028(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_EmoteWheelChoice_CM_C_ExchangeEmote) == 0x000008, "Wrong alignment on WBP_EmoteWheelChoice_CM_C_ExchangeEmote");
static_assert(sizeof(WBP_EmoteWheelChoice_CM_C_ExchangeEmote) == 0x000038, "Wrong size on WBP_EmoteWheelChoice_CM_C_ExchangeEmote");
static_assert(offsetof(WBP_EmoteWheelChoice_CM_C_ExchangeEmote, Exchanged_Wheel_Choice) == 0x000000, "Member 'WBP_EmoteWheelChoice_CM_C_ExchangeEmote::Exchanged_Wheel_Choice' has a wrong offset!");
static_assert(offsetof(WBP_EmoteWheelChoice_CM_C_ExchangeEmote, Old_Emote_ID) == 0x000008, "Member 'WBP_EmoteWheelChoice_CM_C_ExchangeEmote::Old_Emote_ID' has a wrong offset!");
static_assert(offsetof(WBP_EmoteWheelChoice_CM_C_ExchangeEmote, CallFunc_GetAssignedEmoteId_Emote_Id) == 0x000018, "Member 'WBP_EmoteWheelChoice_CM_C_ExchangeEmote::CallFunc_GetAssignedEmoteId_Emote_Id' has a wrong offset!");
static_assert(offsetof(WBP_EmoteWheelChoice_CM_C_ExchangeEmote, CallFunc_GetAssignedEmoteId_Emote_Id_1) == 0x000028, "Member 'WBP_EmoteWheelChoice_CM_C_ExchangeEmote::CallFunc_GetAssignedEmoteId_Emote_Id_1' has a wrong offset!");

// Function WBP_EmoteWheelChoice_CM.WBP_EmoteWheelChoice_CM_C.ExecuteUbergraph_WBP_EmoteWheelChoice_CM
// 0x0330 (0x0330 - 0x0000)
struct WBP_EmoteWheelChoice_CM_C_ExecuteUbergraph_WBP_EmoteWheelChoice_CM final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_464E[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0008(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetIsEnabled_ReturnValue;                 // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_464F[0x7];                                     // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                K2Node_CustomEvent_Loaded;                         // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_AkEventGlobal_ReturnValue;                // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGeometry                              K2Node_ComponentBoundEvent_InGeometry;             // 0x002C(0x0038)(IsPlainOldData, NoDestructor)
	uint8                                         Pad_4650[0x4];                                     // 0x0064(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPointerEvent                          K2Node_ComponentBoundEvent_InMouseEvent;           // 0x0068(0x0078)(ConstParm)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4651[0x7];                                     // 0x00E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_EmoteItemObject_CM_C*               K2Node_CustomEvent_EmoteItemObject;                // 0x00E8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UObject*                                CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue; // 0x00F0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UObject* Loaded)>        K2Node_CreateDelegate_OutputDelegate_1;            // 0x00F8(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UEmoteDataAsset*                        K2Node_DynamicCast_AsEmote_Data_Asset;             // 0x0108(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0110(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0111(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4652[0x6];                                     // 0x0112(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                Temp_object_Variable;                              // 0x0118(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	EValeriaFuncResult                            CallFunc_GetValeriaCharacter_OutResult;            // 0x0120(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4653[0x7];                                     // 0x0121(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AValeriaCharacter*                      CallFunc_GetValeriaCharacter_ReturnValue;          // 0x0128(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UEmoteDataAsset*                        K2Node_DynamicCast_AsEmote_Data_Asset_1;           // 0x0130(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0138(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4654[0x7];                                     // 0x0139(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UValeriaEmoteComponent*                 CallFunc_GetEmoteComponent_ReturnValue;            // 0x0140(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0148(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EValeriaFuncResult                            CallFunc_GetValeriaCharacter_OutResult_1;          // 0x0149(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4655[0x6];                                     // 0x014A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AValeriaCharacter*                      CallFunc_GetValeriaCharacter_ReturnValue_1;        // 0x0150(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Client_AssignEmoteToWheel_ReturnValue;    // 0x0158(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4656[0x7];                                     // 0x0159(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UValeriaEmoteComponent*                 CallFunc_GetEmoteComponent_ReturnValue_1;          // 0x0160(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess_1;                    // 0x0168(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4657[0x3];                                     // 0x0169(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGeometry                              K2Node_Event_MyGeometry;                           // 0x016C(0x0038)(IsPlainOldData, NoDestructor)
	uint8                                         Pad_4658[0x4];                                     // 0x01A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPointerEvent                          K2Node_Event_PointerEvent_2;                       // 0x01A8(0x0078)()
	class UDragDropOperation*                     K2Node_Event_Operation_2;                          // 0x0220(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FPointerEvent                          K2Node_Event_PointerEvent_1;                       // 0x0228(0x0078)()
	class UDragDropOperation*                     K2Node_Event_Operation_1;                          // 0x02A0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FPointerEvent                          K2Node_Event_PointerEvent;                         // 0x02A8(0x0078)(ConstParm)
	class UDragDropOperation*                     K2Node_Event_Operation;                            // 0x0320(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x0328(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_EmoteWheelChoice_CM_C_ExecuteUbergraph_WBP_EmoteWheelChoice_CM) == 0x000008, "Wrong alignment on WBP_EmoteWheelChoice_CM_C_ExecuteUbergraph_WBP_EmoteWheelChoice_CM");
static_assert(sizeof(WBP_EmoteWheelChoice_CM_C_ExecuteUbergraph_WBP_EmoteWheelChoice_CM) == 0x000330, "Wrong size on WBP_EmoteWheelChoice_CM_C_ExecuteUbergraph_WBP_EmoteWheelChoice_CM");
static_assert(offsetof(WBP_EmoteWheelChoice_CM_C_ExecuteUbergraph_WBP_EmoteWheelChoice_CM, EntryPoint) == 0x000000, "Member 'WBP_EmoteWheelChoice_CM_C_ExecuteUbergraph_WBP_EmoteWheelChoice_CM::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_EmoteWheelChoice_CM_C_ExecuteUbergraph_WBP_EmoteWheelChoice_CM, CallFunc_IsValid_ReturnValue) == 0x000004, "Member 'WBP_EmoteWheelChoice_CM_C_ExecuteUbergraph_WBP_EmoteWheelChoice_CM::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_EmoteWheelChoice_CM_C_ExecuteUbergraph_WBP_EmoteWheelChoice_CM, K2Node_CreateDelegate_OutputDelegate) == 0x000008, "Member 'WBP_EmoteWheelChoice_CM_C_ExecuteUbergraph_WBP_EmoteWheelChoice_CM::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WBP_EmoteWheelChoice_CM_C_ExecuteUbergraph_WBP_EmoteWheelChoice_CM, CallFunc_GetIsEnabled_ReturnValue) == 0x000018, "Member 'WBP_EmoteWheelChoice_CM_C_ExecuteUbergraph_WBP_EmoteWheelChoice_CM::CallFunc_GetIsEnabled_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_EmoteWheelChoice_CM_C_ExecuteUbergraph_WBP_EmoteWheelChoice_CM, K2Node_CustomEvent_Loaded) == 0x000020, "Member 'WBP_EmoteWheelChoice_CM_C_ExecuteUbergraph_WBP_EmoteWheelChoice_CM::K2Node_CustomEvent_Loaded' has a wrong offset!");
static_assert(offsetof(WBP_EmoteWheelChoice_CM_C_ExecuteUbergraph_WBP_EmoteWheelChoice_CM, CallFunc_AkEventGlobal_ReturnValue) == 0x000028, "Member 'WBP_EmoteWheelChoice_CM_C_ExecuteUbergraph_WBP_EmoteWheelChoice_CM::CallFunc_AkEventGlobal_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_EmoteWheelChoice_CM_C_ExecuteUbergraph_WBP_EmoteWheelChoice_CM, K2Node_ComponentBoundEvent_InGeometry) == 0x00002C, "Member 'WBP_EmoteWheelChoice_CM_C_ExecuteUbergraph_WBP_EmoteWheelChoice_CM::K2Node_ComponentBoundEvent_InGeometry' has a wrong offset!");
static_assert(offsetof(WBP_EmoteWheelChoice_CM_C_ExecuteUbergraph_WBP_EmoteWheelChoice_CM, K2Node_ComponentBoundEvent_InMouseEvent) == 0x000068, "Member 'WBP_EmoteWheelChoice_CM_C_ExecuteUbergraph_WBP_EmoteWheelChoice_CM::K2Node_ComponentBoundEvent_InMouseEvent' has a wrong offset!");
static_assert(offsetof(WBP_EmoteWheelChoice_CM_C_ExecuteUbergraph_WBP_EmoteWheelChoice_CM, CallFunc_IsValid_ReturnValue_1) == 0x0000E0, "Member 'WBP_EmoteWheelChoice_CM_C_ExecuteUbergraph_WBP_EmoteWheelChoice_CM::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_EmoteWheelChoice_CM_C_ExecuteUbergraph_WBP_EmoteWheelChoice_CM, K2Node_CustomEvent_EmoteItemObject) == 0x0000E8, "Member 'WBP_EmoteWheelChoice_CM_C_ExecuteUbergraph_WBP_EmoteWheelChoice_CM::K2Node_CustomEvent_EmoteItemObject' has a wrong offset!");
static_assert(offsetof(WBP_EmoteWheelChoice_CM_C_ExecuteUbergraph_WBP_EmoteWheelChoice_CM, CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue) == 0x0000F0, "Member 'WBP_EmoteWheelChoice_CM_C_ExecuteUbergraph_WBP_EmoteWheelChoice_CM::CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_EmoteWheelChoice_CM_C_ExecuteUbergraph_WBP_EmoteWheelChoice_CM, K2Node_CreateDelegate_OutputDelegate_1) == 0x0000F8, "Member 'WBP_EmoteWheelChoice_CM_C_ExecuteUbergraph_WBP_EmoteWheelChoice_CM::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(WBP_EmoteWheelChoice_CM_C_ExecuteUbergraph_WBP_EmoteWheelChoice_CM, K2Node_DynamicCast_AsEmote_Data_Asset) == 0x000108, "Member 'WBP_EmoteWheelChoice_CM_C_ExecuteUbergraph_WBP_EmoteWheelChoice_CM::K2Node_DynamicCast_AsEmote_Data_Asset' has a wrong offset!");
static_assert(offsetof(WBP_EmoteWheelChoice_CM_C_ExecuteUbergraph_WBP_EmoteWheelChoice_CM, K2Node_DynamicCast_bSuccess) == 0x000110, "Member 'WBP_EmoteWheelChoice_CM_C_ExecuteUbergraph_WBP_EmoteWheelChoice_CM::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_EmoteWheelChoice_CM_C_ExecuteUbergraph_WBP_EmoteWheelChoice_CM, CallFunc_IsValid_ReturnValue_2) == 0x000111, "Member 'WBP_EmoteWheelChoice_CM_C_ExecuteUbergraph_WBP_EmoteWheelChoice_CM::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_EmoteWheelChoice_CM_C_ExecuteUbergraph_WBP_EmoteWheelChoice_CM, Temp_object_Variable) == 0x000118, "Member 'WBP_EmoteWheelChoice_CM_C_ExecuteUbergraph_WBP_EmoteWheelChoice_CM::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(WBP_EmoteWheelChoice_CM_C_ExecuteUbergraph_WBP_EmoteWheelChoice_CM, CallFunc_GetValeriaCharacter_OutResult) == 0x000120, "Member 'WBP_EmoteWheelChoice_CM_C_ExecuteUbergraph_WBP_EmoteWheelChoice_CM::CallFunc_GetValeriaCharacter_OutResult' has a wrong offset!");
static_assert(offsetof(WBP_EmoteWheelChoice_CM_C_ExecuteUbergraph_WBP_EmoteWheelChoice_CM, CallFunc_GetValeriaCharacter_ReturnValue) == 0x000128, "Member 'WBP_EmoteWheelChoice_CM_C_ExecuteUbergraph_WBP_EmoteWheelChoice_CM::CallFunc_GetValeriaCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_EmoteWheelChoice_CM_C_ExecuteUbergraph_WBP_EmoteWheelChoice_CM, K2Node_DynamicCast_AsEmote_Data_Asset_1) == 0x000130, "Member 'WBP_EmoteWheelChoice_CM_C_ExecuteUbergraph_WBP_EmoteWheelChoice_CM::K2Node_DynamicCast_AsEmote_Data_Asset_1' has a wrong offset!");
static_assert(offsetof(WBP_EmoteWheelChoice_CM_C_ExecuteUbergraph_WBP_EmoteWheelChoice_CM, K2Node_DynamicCast_bSuccess_1) == 0x000138, "Member 'WBP_EmoteWheelChoice_CM_C_ExecuteUbergraph_WBP_EmoteWheelChoice_CM::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(WBP_EmoteWheelChoice_CM_C_ExecuteUbergraph_WBP_EmoteWheelChoice_CM, CallFunc_GetEmoteComponent_ReturnValue) == 0x000140, "Member 'WBP_EmoteWheelChoice_CM_C_ExecuteUbergraph_WBP_EmoteWheelChoice_CM::CallFunc_GetEmoteComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_EmoteWheelChoice_CM_C_ExecuteUbergraph_WBP_EmoteWheelChoice_CM, K2Node_SwitchEnum_CmpSuccess) == 0x000148, "Member 'WBP_EmoteWheelChoice_CM_C_ExecuteUbergraph_WBP_EmoteWheelChoice_CM::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(WBP_EmoteWheelChoice_CM_C_ExecuteUbergraph_WBP_EmoteWheelChoice_CM, CallFunc_GetValeriaCharacter_OutResult_1) == 0x000149, "Member 'WBP_EmoteWheelChoice_CM_C_ExecuteUbergraph_WBP_EmoteWheelChoice_CM::CallFunc_GetValeriaCharacter_OutResult_1' has a wrong offset!");
static_assert(offsetof(WBP_EmoteWheelChoice_CM_C_ExecuteUbergraph_WBP_EmoteWheelChoice_CM, CallFunc_GetValeriaCharacter_ReturnValue_1) == 0x000150, "Member 'WBP_EmoteWheelChoice_CM_C_ExecuteUbergraph_WBP_EmoteWheelChoice_CM::CallFunc_GetValeriaCharacter_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_EmoteWheelChoice_CM_C_ExecuteUbergraph_WBP_EmoteWheelChoice_CM, CallFunc_Client_AssignEmoteToWheel_ReturnValue) == 0x000158, "Member 'WBP_EmoteWheelChoice_CM_C_ExecuteUbergraph_WBP_EmoteWheelChoice_CM::CallFunc_Client_AssignEmoteToWheel_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_EmoteWheelChoice_CM_C_ExecuteUbergraph_WBP_EmoteWheelChoice_CM, CallFunc_GetEmoteComponent_ReturnValue_1) == 0x000160, "Member 'WBP_EmoteWheelChoice_CM_C_ExecuteUbergraph_WBP_EmoteWheelChoice_CM::CallFunc_GetEmoteComponent_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_EmoteWheelChoice_CM_C_ExecuteUbergraph_WBP_EmoteWheelChoice_CM, K2Node_SwitchEnum_CmpSuccess_1) == 0x000168, "Member 'WBP_EmoteWheelChoice_CM_C_ExecuteUbergraph_WBP_EmoteWheelChoice_CM::K2Node_SwitchEnum_CmpSuccess_1' has a wrong offset!");
static_assert(offsetof(WBP_EmoteWheelChoice_CM_C_ExecuteUbergraph_WBP_EmoteWheelChoice_CM, K2Node_Event_MyGeometry) == 0x00016C, "Member 'WBP_EmoteWheelChoice_CM_C_ExecuteUbergraph_WBP_EmoteWheelChoice_CM::K2Node_Event_MyGeometry' has a wrong offset!");
static_assert(offsetof(WBP_EmoteWheelChoice_CM_C_ExecuteUbergraph_WBP_EmoteWheelChoice_CM, K2Node_Event_PointerEvent_2) == 0x0001A8, "Member 'WBP_EmoteWheelChoice_CM_C_ExecuteUbergraph_WBP_EmoteWheelChoice_CM::K2Node_Event_PointerEvent_2' has a wrong offset!");
static_assert(offsetof(WBP_EmoteWheelChoice_CM_C_ExecuteUbergraph_WBP_EmoteWheelChoice_CM, K2Node_Event_Operation_2) == 0x000220, "Member 'WBP_EmoteWheelChoice_CM_C_ExecuteUbergraph_WBP_EmoteWheelChoice_CM::K2Node_Event_Operation_2' has a wrong offset!");
static_assert(offsetof(WBP_EmoteWheelChoice_CM_C_ExecuteUbergraph_WBP_EmoteWheelChoice_CM, K2Node_Event_PointerEvent_1) == 0x000228, "Member 'WBP_EmoteWheelChoice_CM_C_ExecuteUbergraph_WBP_EmoteWheelChoice_CM::K2Node_Event_PointerEvent_1' has a wrong offset!");
static_assert(offsetof(WBP_EmoteWheelChoice_CM_C_ExecuteUbergraph_WBP_EmoteWheelChoice_CM, K2Node_Event_Operation_1) == 0x0002A0, "Member 'WBP_EmoteWheelChoice_CM_C_ExecuteUbergraph_WBP_EmoteWheelChoice_CM::K2Node_Event_Operation_1' has a wrong offset!");
static_assert(offsetof(WBP_EmoteWheelChoice_CM_C_ExecuteUbergraph_WBP_EmoteWheelChoice_CM, K2Node_Event_PointerEvent) == 0x0002A8, "Member 'WBP_EmoteWheelChoice_CM_C_ExecuteUbergraph_WBP_EmoteWheelChoice_CM::K2Node_Event_PointerEvent' has a wrong offset!");
static_assert(offsetof(WBP_EmoteWheelChoice_CM_C_ExecuteUbergraph_WBP_EmoteWheelChoice_CM, K2Node_Event_Operation) == 0x000320, "Member 'WBP_EmoteWheelChoice_CM_C_ExecuteUbergraph_WBP_EmoteWheelChoice_CM::K2Node_Event_Operation' has a wrong offset!");
static_assert(offsetof(WBP_EmoteWheelChoice_CM_C_ExecuteUbergraph_WBP_EmoteWheelChoice_CM, CallFunc_IsValid_ReturnValue_3) == 0x000328, "Member 'WBP_EmoteWheelChoice_CM_C_ExecuteUbergraph_WBP_EmoteWheelChoice_CM::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");

// Function WBP_EmoteWheelChoice_CM.WBP_EmoteWheelChoice_CM_C.GetAssignedEmoteFN
// 0x0048 (0x0048 - 0x0000)
struct WBP_EmoteWheelChoice_CM_C_GetAssignedEmoteFN final
{
public:
	class UEmoteDataAsset*                        Emote;                                             // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Is_Valid;                                          // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EValeriaFuncResult                            CallFunc_GetValeriaCharacter_OutResult;            // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4659[0x6];                                     // 0x000A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AValeriaCharacter*                      CallFunc_GetValeriaCharacter_ReturnValue;          // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UValeriaEmoteComponent*                 CallFunc_GetEmoteComponent_ReturnValue;            // 0x0018(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_465A[0x6];                                     // 0x0022(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UEmoteDataAsset*>                CallFunc_GetEquippedEmotes_ReturnValue;            // 0x0028(0x0010)(ReferenceParm)
	class UEmoteDataAsset*                        CallFunc_Array_Get_Item;                           // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_EmoteWheelChoice_CM_C_GetAssignedEmoteFN) == 0x000008, "Wrong alignment on WBP_EmoteWheelChoice_CM_C_GetAssignedEmoteFN");
static_assert(sizeof(WBP_EmoteWheelChoice_CM_C_GetAssignedEmoteFN) == 0x000048, "Wrong size on WBP_EmoteWheelChoice_CM_C_GetAssignedEmoteFN");
static_assert(offsetof(WBP_EmoteWheelChoice_CM_C_GetAssignedEmoteFN, Emote) == 0x000000, "Member 'WBP_EmoteWheelChoice_CM_C_GetAssignedEmoteFN::Emote' has a wrong offset!");
static_assert(offsetof(WBP_EmoteWheelChoice_CM_C_GetAssignedEmoteFN, Is_Valid) == 0x000008, "Member 'WBP_EmoteWheelChoice_CM_C_GetAssignedEmoteFN::Is_Valid' has a wrong offset!");
static_assert(offsetof(WBP_EmoteWheelChoice_CM_C_GetAssignedEmoteFN, CallFunc_GetValeriaCharacter_OutResult) == 0x000009, "Member 'WBP_EmoteWheelChoice_CM_C_GetAssignedEmoteFN::CallFunc_GetValeriaCharacter_OutResult' has a wrong offset!");
static_assert(offsetof(WBP_EmoteWheelChoice_CM_C_GetAssignedEmoteFN, CallFunc_GetValeriaCharacter_ReturnValue) == 0x000010, "Member 'WBP_EmoteWheelChoice_CM_C_GetAssignedEmoteFN::CallFunc_GetValeriaCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_EmoteWheelChoice_CM_C_GetAssignedEmoteFN, CallFunc_GetEmoteComponent_ReturnValue) == 0x000018, "Member 'WBP_EmoteWheelChoice_CM_C_GetAssignedEmoteFN::CallFunc_GetEmoteComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_EmoteWheelChoice_CM_C_GetAssignedEmoteFN, K2Node_SwitchEnum_CmpSuccess) == 0x000020, "Member 'WBP_EmoteWheelChoice_CM_C_GetAssignedEmoteFN::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(WBP_EmoteWheelChoice_CM_C_GetAssignedEmoteFN, CallFunc_IsValid_ReturnValue) == 0x000021, "Member 'WBP_EmoteWheelChoice_CM_C_GetAssignedEmoteFN::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_EmoteWheelChoice_CM_C_GetAssignedEmoteFN, CallFunc_GetEquippedEmotes_ReturnValue) == 0x000028, "Member 'WBP_EmoteWheelChoice_CM_C_GetAssignedEmoteFN::CallFunc_GetEquippedEmotes_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_EmoteWheelChoice_CM_C_GetAssignedEmoteFN, CallFunc_Array_Get_Item) == 0x000038, "Member 'WBP_EmoteWheelChoice_CM_C_GetAssignedEmoteFN::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_EmoteWheelChoice_CM_C_GetAssignedEmoteFN, CallFunc_Array_IsValidIndex_ReturnValue) == 0x000040, "Member 'WBP_EmoteWheelChoice_CM_C_GetAssignedEmoteFN::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_EmoteWheelChoice_CM_C_GetAssignedEmoteFN, CallFunc_IsValid_ReturnValue_1) == 0x000041, "Member 'WBP_EmoteWheelChoice_CM_C_GetAssignedEmoteFN::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");

// Function WBP_EmoteWheelChoice_CM.WBP_EmoteWheelChoice_CM_C.GetAssignedEmoteId
// 0x0050 (0x0050 - 0x0000)
struct WBP_EmoteWheelChoice_CM_C_GetAssignedEmoteId final
{
public:
	struct FGuid                                  Emote_Id;                                          // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EValeriaFuncResult                            CallFunc_GetValeriaCharacter_OutResult;            // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_465B[0x7];                                     // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AValeriaCharacter*                      CallFunc_GetValeriaCharacter_ReturnValue;          // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UValeriaEmoteComponent*                 CallFunc_GetEmoteComponent_ReturnValue;            // 0x0020(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_465C[0x6];                                     // 0x002A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UEmoteDataAsset*>                CallFunc_GetEquippedEmotes_ReturnValue;            // 0x0030(0x0010)(ReferenceParm)
	class UEmoteDataAsset*                        CallFunc_Array_Get_Item;                           // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_EmoteWheelChoice_CM_C_GetAssignedEmoteId) == 0x000008, "Wrong alignment on WBP_EmoteWheelChoice_CM_C_GetAssignedEmoteId");
static_assert(sizeof(WBP_EmoteWheelChoice_CM_C_GetAssignedEmoteId) == 0x000050, "Wrong size on WBP_EmoteWheelChoice_CM_C_GetAssignedEmoteId");
static_assert(offsetof(WBP_EmoteWheelChoice_CM_C_GetAssignedEmoteId, Emote_Id) == 0x000000, "Member 'WBP_EmoteWheelChoice_CM_C_GetAssignedEmoteId::Emote_Id' has a wrong offset!");
static_assert(offsetof(WBP_EmoteWheelChoice_CM_C_GetAssignedEmoteId, CallFunc_GetValeriaCharacter_OutResult) == 0x000010, "Member 'WBP_EmoteWheelChoice_CM_C_GetAssignedEmoteId::CallFunc_GetValeriaCharacter_OutResult' has a wrong offset!");
static_assert(offsetof(WBP_EmoteWheelChoice_CM_C_GetAssignedEmoteId, CallFunc_GetValeriaCharacter_ReturnValue) == 0x000018, "Member 'WBP_EmoteWheelChoice_CM_C_GetAssignedEmoteId::CallFunc_GetValeriaCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_EmoteWheelChoice_CM_C_GetAssignedEmoteId, CallFunc_GetEmoteComponent_ReturnValue) == 0x000020, "Member 'WBP_EmoteWheelChoice_CM_C_GetAssignedEmoteId::CallFunc_GetEmoteComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_EmoteWheelChoice_CM_C_GetAssignedEmoteId, K2Node_SwitchEnum_CmpSuccess) == 0x000028, "Member 'WBP_EmoteWheelChoice_CM_C_GetAssignedEmoteId::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(WBP_EmoteWheelChoice_CM_C_GetAssignedEmoteId, CallFunc_IsValid_ReturnValue) == 0x000029, "Member 'WBP_EmoteWheelChoice_CM_C_GetAssignedEmoteId::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_EmoteWheelChoice_CM_C_GetAssignedEmoteId, CallFunc_GetEquippedEmotes_ReturnValue) == 0x000030, "Member 'WBP_EmoteWheelChoice_CM_C_GetAssignedEmoteId::CallFunc_GetEquippedEmotes_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_EmoteWheelChoice_CM_C_GetAssignedEmoteId, CallFunc_Array_Get_Item) == 0x000040, "Member 'WBP_EmoteWheelChoice_CM_C_GetAssignedEmoteId::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_EmoteWheelChoice_CM_C_GetAssignedEmoteId, CallFunc_Array_IsValidIndex_ReturnValue) == 0x000048, "Member 'WBP_EmoteWheelChoice_CM_C_GetAssignedEmoteId::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_EmoteWheelChoice_CM_C_GetAssignedEmoteId, CallFunc_IsValid_ReturnValue_1) == 0x000049, "Member 'WBP_EmoteWheelChoice_CM_C_GetAssignedEmoteId::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");

// Function WBP_EmoteWheelChoice_CM.WBP_EmoteWheelChoice_CM_C.GetEmoteComponentFN
// 0x0030 (0x0030 - 0x0000)
struct WBP_EmoteWheelChoice_CM_C_GetEmoteComponentFN final
{
public:
	class UValeriaEmoteComponent*                 EmoteComponent;                                    // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	EValeriaFuncResult                            CallFunc_GetValeriaCharacter_OutResult;            // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_465D[0x7];                                     // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AValeriaCharacter*                      CallFunc_GetValeriaCharacter_ReturnValue;          // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_465E[0x7];                                     // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UValeriaEmoteComponent*                 CallFunc_GetEmoteComponent_ReturnValue;            // 0x0020(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_EmoteWheelChoice_CM_C_GetEmoteComponentFN) == 0x000008, "Wrong alignment on WBP_EmoteWheelChoice_CM_C_GetEmoteComponentFN");
static_assert(sizeof(WBP_EmoteWheelChoice_CM_C_GetEmoteComponentFN) == 0x000030, "Wrong size on WBP_EmoteWheelChoice_CM_C_GetEmoteComponentFN");
static_assert(offsetof(WBP_EmoteWheelChoice_CM_C_GetEmoteComponentFN, EmoteComponent) == 0x000000, "Member 'WBP_EmoteWheelChoice_CM_C_GetEmoteComponentFN::EmoteComponent' has a wrong offset!");
static_assert(offsetof(WBP_EmoteWheelChoice_CM_C_GetEmoteComponentFN, CallFunc_GetValeriaCharacter_OutResult) == 0x000008, "Member 'WBP_EmoteWheelChoice_CM_C_GetEmoteComponentFN::CallFunc_GetValeriaCharacter_OutResult' has a wrong offset!");
static_assert(offsetof(WBP_EmoteWheelChoice_CM_C_GetEmoteComponentFN, CallFunc_GetValeriaCharacter_ReturnValue) == 0x000010, "Member 'WBP_EmoteWheelChoice_CM_C_GetEmoteComponentFN::CallFunc_GetValeriaCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_EmoteWheelChoice_CM_C_GetEmoteComponentFN, K2Node_SwitchEnum_CmpSuccess) == 0x000018, "Member 'WBP_EmoteWheelChoice_CM_C_GetEmoteComponentFN::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(WBP_EmoteWheelChoice_CM_C_GetEmoteComponentFN, CallFunc_GetEmoteComponent_ReturnValue) == 0x000020, "Member 'WBP_EmoteWheelChoice_CM_C_GetEmoteComponentFN::CallFunc_GetEmoteComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_EmoteWheelChoice_CM_C_GetEmoteComponentFN, CallFunc_IsValid_ReturnValue) == 0x000028, "Member 'WBP_EmoteWheelChoice_CM_C_GetEmoteComponentFN::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function WBP_EmoteWheelChoice_CM.WBP_EmoteWheelChoice_CM_C.HandleHovered
// 0x0010 (0x0010 - 0x0000)
struct WBP_EmoteWheelChoice_CM_C_HandleHovered final
{
public:
	int32                                         CallFunc_AkEventGlobal_ReturnValue;                // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_465F[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationForward_ReturnValue;         // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_EmoteWheelChoice_CM_C_HandleHovered) == 0x000008, "Wrong alignment on WBP_EmoteWheelChoice_CM_C_HandleHovered");
static_assert(sizeof(WBP_EmoteWheelChoice_CM_C_HandleHovered) == 0x000010, "Wrong size on WBP_EmoteWheelChoice_CM_C_HandleHovered");
static_assert(offsetof(WBP_EmoteWheelChoice_CM_C_HandleHovered, CallFunc_AkEventGlobal_ReturnValue) == 0x000000, "Member 'WBP_EmoteWheelChoice_CM_C_HandleHovered::CallFunc_AkEventGlobal_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_EmoteWheelChoice_CM_C_HandleHovered, CallFunc_PlayAnimationForward_ReturnValue) == 0x000008, "Member 'WBP_EmoteWheelChoice_CM_C_HandleHovered::CallFunc_PlayAnimationForward_ReturnValue' has a wrong offset!");

// Function WBP_EmoteWheelChoice_CM.WBP_EmoteWheelChoice_CM_C.HandleUnhovered
// 0x0008 (0x0008 - 0x0000)
struct WBP_EmoteWheelChoice_CM_C_HandleUnhovered final
{
public:
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationReverse_ReturnValue;         // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_EmoteWheelChoice_CM_C_HandleUnhovered) == 0x000008, "Wrong alignment on WBP_EmoteWheelChoice_CM_C_HandleUnhovered");
static_assert(sizeof(WBP_EmoteWheelChoice_CM_C_HandleUnhovered) == 0x000008, "Wrong size on WBP_EmoteWheelChoice_CM_C_HandleUnhovered");
static_assert(offsetof(WBP_EmoteWheelChoice_CM_C_HandleUnhovered, CallFunc_PlayAnimationReverse_ReturnValue) == 0x000000, "Member 'WBP_EmoteWheelChoice_CM_C_HandleUnhovered::CallFunc_PlayAnimationReverse_ReturnValue' has a wrong offset!");

// Function WBP_EmoteWheelChoice_CM.WBP_EmoteWheelChoice_CM_C.OnDragCancelled
// 0x0080 (0x0080 - 0x0000)
struct WBP_EmoteWheelChoice_CM_C_OnDragCancelled final
{
public:
	struct FPointerEvent                          PointerEvent;                                      // 0x0000(0x0078)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class UDragDropOperation*                     Operation;                                         // 0x0078(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_EmoteWheelChoice_CM_C_OnDragCancelled) == 0x000008, "Wrong alignment on WBP_EmoteWheelChoice_CM_C_OnDragCancelled");
static_assert(sizeof(WBP_EmoteWheelChoice_CM_C_OnDragCancelled) == 0x000080, "Wrong size on WBP_EmoteWheelChoice_CM_C_OnDragCancelled");
static_assert(offsetof(WBP_EmoteWheelChoice_CM_C_OnDragCancelled, PointerEvent) == 0x000000, "Member 'WBP_EmoteWheelChoice_CM_C_OnDragCancelled::PointerEvent' has a wrong offset!");
static_assert(offsetof(WBP_EmoteWheelChoice_CM_C_OnDragCancelled, Operation) == 0x000078, "Member 'WBP_EmoteWheelChoice_CM_C_OnDragCancelled::Operation' has a wrong offset!");

// Function WBP_EmoteWheelChoice_CM.WBP_EmoteWheelChoice_CM_C.OnDragDetected
// 0x0160 (0x0160 - 0x0000)
struct WBP_EmoteWheelChoice_CM_C_OnDragDetected final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FPointerEvent                          PointerEvent;                                      // 0x0038(0x0078)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class UDragDropOperation*                     Operation;                                         // 0x00B0(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TSoftObjectPtr<class UTexture2D>              TextureReference;                                  // 0x00B8(0x0028)(Edit, BlueprintVisible, HasGetValueTypeHash)
	EValeriaFuncResult                            CallFunc_GetValeriaCharacter_OutResult;            // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4660[0x7];                                     // 0x00E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AValeriaCharacter*                      CallFunc_GetValeriaCharacter_ReturnValue;          // 0x00E8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UWBP_EmoteDrag_C*                       CallFunc_Create_ReturnValue;                       // 0x00F0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UValeriaEmoteComponent*                 CallFunc_GetEmoteComponent_ReturnValue;            // 0x00F8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4661[0x7];                                     // 0x0101(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UEmoteDataAsset*>                CallFunc_GetEquippedEmotes_ReturnValue;            // 0x0108(0x0010)(ReferenceParm)
	class UEmoteDataAsset*                        CallFunc_Array_Get_Item;                           // 0x0118(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x0120(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4662[0x7];                                     // 0x0121(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UTexture2D>              CallFunc_Conv_ObjectToSoftObjectReference_ReturnValue; // 0x0128(0x0028)(UObjectWrapper, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0150(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0151(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4663[0x6];                                     // 0x0152(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_EmoteDrag_C*                        CallFunc_CreateDragDropOperation_ReturnValue;      // 0x0158(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_EmoteWheelChoice_CM_C_OnDragDetected) == 0x000008, "Wrong alignment on WBP_EmoteWheelChoice_CM_C_OnDragDetected");
static_assert(sizeof(WBP_EmoteWheelChoice_CM_C_OnDragDetected) == 0x000160, "Wrong size on WBP_EmoteWheelChoice_CM_C_OnDragDetected");
static_assert(offsetof(WBP_EmoteWheelChoice_CM_C_OnDragDetected, MyGeometry) == 0x000000, "Member 'WBP_EmoteWheelChoice_CM_C_OnDragDetected::MyGeometry' has a wrong offset!");
static_assert(offsetof(WBP_EmoteWheelChoice_CM_C_OnDragDetected, PointerEvent) == 0x000038, "Member 'WBP_EmoteWheelChoice_CM_C_OnDragDetected::PointerEvent' has a wrong offset!");
static_assert(offsetof(WBP_EmoteWheelChoice_CM_C_OnDragDetected, Operation) == 0x0000B0, "Member 'WBP_EmoteWheelChoice_CM_C_OnDragDetected::Operation' has a wrong offset!");
static_assert(offsetof(WBP_EmoteWheelChoice_CM_C_OnDragDetected, TextureReference) == 0x0000B8, "Member 'WBP_EmoteWheelChoice_CM_C_OnDragDetected::TextureReference' has a wrong offset!");
static_assert(offsetof(WBP_EmoteWheelChoice_CM_C_OnDragDetected, CallFunc_GetValeriaCharacter_OutResult) == 0x0000E0, "Member 'WBP_EmoteWheelChoice_CM_C_OnDragDetected::CallFunc_GetValeriaCharacter_OutResult' has a wrong offset!");
static_assert(offsetof(WBP_EmoteWheelChoice_CM_C_OnDragDetected, CallFunc_GetValeriaCharacter_ReturnValue) == 0x0000E8, "Member 'WBP_EmoteWheelChoice_CM_C_OnDragDetected::CallFunc_GetValeriaCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_EmoteWheelChoice_CM_C_OnDragDetected, CallFunc_Create_ReturnValue) == 0x0000F0, "Member 'WBP_EmoteWheelChoice_CM_C_OnDragDetected::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_EmoteWheelChoice_CM_C_OnDragDetected, CallFunc_GetEmoteComponent_ReturnValue) == 0x0000F8, "Member 'WBP_EmoteWheelChoice_CM_C_OnDragDetected::CallFunc_GetEmoteComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_EmoteWheelChoice_CM_C_OnDragDetected, CallFunc_IsValid_ReturnValue) == 0x000100, "Member 'WBP_EmoteWheelChoice_CM_C_OnDragDetected::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_EmoteWheelChoice_CM_C_OnDragDetected, CallFunc_GetEquippedEmotes_ReturnValue) == 0x000108, "Member 'WBP_EmoteWheelChoice_CM_C_OnDragDetected::CallFunc_GetEquippedEmotes_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_EmoteWheelChoice_CM_C_OnDragDetected, CallFunc_Array_Get_Item) == 0x000118, "Member 'WBP_EmoteWheelChoice_CM_C_OnDragDetected::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_EmoteWheelChoice_CM_C_OnDragDetected, CallFunc_Array_IsValidIndex_ReturnValue) == 0x000120, "Member 'WBP_EmoteWheelChoice_CM_C_OnDragDetected::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_EmoteWheelChoice_CM_C_OnDragDetected, CallFunc_Conv_ObjectToSoftObjectReference_ReturnValue) == 0x000128, "Member 'WBP_EmoteWheelChoice_CM_C_OnDragDetected::CallFunc_Conv_ObjectToSoftObjectReference_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_EmoteWheelChoice_CM_C_OnDragDetected, CallFunc_IsValid_ReturnValue_1) == 0x000150, "Member 'WBP_EmoteWheelChoice_CM_C_OnDragDetected::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_EmoteWheelChoice_CM_C_OnDragDetected, K2Node_SwitchEnum_CmpSuccess) == 0x000151, "Member 'WBP_EmoteWheelChoice_CM_C_OnDragDetected::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(WBP_EmoteWheelChoice_CM_C_OnDragDetected, CallFunc_CreateDragDropOperation_ReturnValue) == 0x000158, "Member 'WBP_EmoteWheelChoice_CM_C_OnDragDetected::CallFunc_CreateDragDropOperation_ReturnValue' has a wrong offset!");

// Function WBP_EmoteWheelChoice_CM.WBP_EmoteWheelChoice_CM_C.OnDragEnter
// 0x00B8 (0x00B8 - 0x0000)
struct WBP_EmoteWheelChoice_CM_C_OnDragEnter final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FPointerEvent                          PointerEvent;                                      // 0x0038(0x0078)(BlueprintVisible, BlueprintReadOnly, Parm)
	class UDragDropOperation*                     Operation;                                         // 0x00B0(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_EmoteWheelChoice_CM_C_OnDragEnter) == 0x000008, "Wrong alignment on WBP_EmoteWheelChoice_CM_C_OnDragEnter");
static_assert(sizeof(WBP_EmoteWheelChoice_CM_C_OnDragEnter) == 0x0000B8, "Wrong size on WBP_EmoteWheelChoice_CM_C_OnDragEnter");
static_assert(offsetof(WBP_EmoteWheelChoice_CM_C_OnDragEnter, MyGeometry) == 0x000000, "Member 'WBP_EmoteWheelChoice_CM_C_OnDragEnter::MyGeometry' has a wrong offset!");
static_assert(offsetof(WBP_EmoteWheelChoice_CM_C_OnDragEnter, PointerEvent) == 0x000038, "Member 'WBP_EmoteWheelChoice_CM_C_OnDragEnter::PointerEvent' has a wrong offset!");
static_assert(offsetof(WBP_EmoteWheelChoice_CM_C_OnDragEnter, Operation) == 0x0000B0, "Member 'WBP_EmoteWheelChoice_CM_C_OnDragEnter::Operation' has a wrong offset!");

// Function WBP_EmoteWheelChoice_CM.WBP_EmoteWheelChoice_CM_C.OnDragLeave
// 0x0080 (0x0080 - 0x0000)
struct WBP_EmoteWheelChoice_CM_C_OnDragLeave final
{
public:
	struct FPointerEvent                          PointerEvent;                                      // 0x0000(0x0078)(BlueprintVisible, BlueprintReadOnly, Parm)
	class UDragDropOperation*                     Operation;                                         // 0x0078(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_EmoteWheelChoice_CM_C_OnDragLeave) == 0x000008, "Wrong alignment on WBP_EmoteWheelChoice_CM_C_OnDragLeave");
static_assert(sizeof(WBP_EmoteWheelChoice_CM_C_OnDragLeave) == 0x000080, "Wrong size on WBP_EmoteWheelChoice_CM_C_OnDragLeave");
static_assert(offsetof(WBP_EmoteWheelChoice_CM_C_OnDragLeave, PointerEvent) == 0x000000, "Member 'WBP_EmoteWheelChoice_CM_C_OnDragLeave::PointerEvent' has a wrong offset!");
static_assert(offsetof(WBP_EmoteWheelChoice_CM_C_OnDragLeave, Operation) == 0x000078, "Member 'WBP_EmoteWheelChoice_CM_C_OnDragLeave::Operation' has a wrong offset!");

// Function WBP_EmoteWheelChoice_CM.WBP_EmoteWheelChoice_CM_C.OnDrop
// 0x0120 (0x0120 - 0x0000)
struct WBP_EmoteWheelChoice_CM_C_OnDrop final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FPointerEvent                          PointerEvent;                                      // 0x0038(0x0078)(BlueprintVisible, BlueprintReadOnly, Parm)
	class UDragDropOperation*                     Operation;                                         // 0x00B0(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x00B8(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4664[0x3];                                     // 0x00B9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGuid                                  OldEmoteId;                                        // 0x00BC(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4665[0x4];                                     // 0x00CC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_EmoteDrag_C*                        K2Node_DynamicCast_AsBP_Emote_Drag;                // 0x00D0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4666[0x3];                                     // 0x00D9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGuid                                  CallFunc_GetAssignedEmoteId_Emote_Id;              // 0x00DC(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4667[0x4];                                     // 0x00EC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_EmoteWheelChoice_CM_C*             K2Node_DynamicCast_AsWBP_Emote_Wheel_Choice_CM;    // 0x00F0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x00F9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4668[0x2];                                     // 0x00FA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGuid                                  CallFunc_GetAssignedEmoteId_Emote_Id_1;            // 0x00FC(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4669[0x4];                                     // 0x010C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_EmoteEntry_CM_C*                   K2Node_DynamicCast_AsWBP_Emote_Entry_CM;           // 0x0110(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0118(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_EmoteWheelChoice_CM_C_OnDrop) == 0x000008, "Wrong alignment on WBP_EmoteWheelChoice_CM_C_OnDrop");
static_assert(sizeof(WBP_EmoteWheelChoice_CM_C_OnDrop) == 0x000120, "Wrong size on WBP_EmoteWheelChoice_CM_C_OnDrop");
static_assert(offsetof(WBP_EmoteWheelChoice_CM_C_OnDrop, MyGeometry) == 0x000000, "Member 'WBP_EmoteWheelChoice_CM_C_OnDrop::MyGeometry' has a wrong offset!");
static_assert(offsetof(WBP_EmoteWheelChoice_CM_C_OnDrop, PointerEvent) == 0x000038, "Member 'WBP_EmoteWheelChoice_CM_C_OnDrop::PointerEvent' has a wrong offset!");
static_assert(offsetof(WBP_EmoteWheelChoice_CM_C_OnDrop, Operation) == 0x0000B0, "Member 'WBP_EmoteWheelChoice_CM_C_OnDrop::Operation' has a wrong offset!");
static_assert(offsetof(WBP_EmoteWheelChoice_CM_C_OnDrop, ReturnValue) == 0x0000B8, "Member 'WBP_EmoteWheelChoice_CM_C_OnDrop::ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_EmoteWheelChoice_CM_C_OnDrop, OldEmoteId) == 0x0000BC, "Member 'WBP_EmoteWheelChoice_CM_C_OnDrop::OldEmoteId' has a wrong offset!");
static_assert(offsetof(WBP_EmoteWheelChoice_CM_C_OnDrop, K2Node_DynamicCast_AsBP_Emote_Drag) == 0x0000D0, "Member 'WBP_EmoteWheelChoice_CM_C_OnDrop::K2Node_DynamicCast_AsBP_Emote_Drag' has a wrong offset!");
static_assert(offsetof(WBP_EmoteWheelChoice_CM_C_OnDrop, K2Node_DynamicCast_bSuccess) == 0x0000D8, "Member 'WBP_EmoteWheelChoice_CM_C_OnDrop::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_EmoteWheelChoice_CM_C_OnDrop, CallFunc_GetAssignedEmoteId_Emote_Id) == 0x0000DC, "Member 'WBP_EmoteWheelChoice_CM_C_OnDrop::CallFunc_GetAssignedEmoteId_Emote_Id' has a wrong offset!");
static_assert(offsetof(WBP_EmoteWheelChoice_CM_C_OnDrop, K2Node_DynamicCast_AsWBP_Emote_Wheel_Choice_CM) == 0x0000F0, "Member 'WBP_EmoteWheelChoice_CM_C_OnDrop::K2Node_DynamicCast_AsWBP_Emote_Wheel_Choice_CM' has a wrong offset!");
static_assert(offsetof(WBP_EmoteWheelChoice_CM_C_OnDrop, K2Node_DynamicCast_bSuccess_1) == 0x0000F8, "Member 'WBP_EmoteWheelChoice_CM_C_OnDrop::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(WBP_EmoteWheelChoice_CM_C_OnDrop, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x0000F9, "Member 'WBP_EmoteWheelChoice_CM_C_OnDrop::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_EmoteWheelChoice_CM_C_OnDrop, CallFunc_GetAssignedEmoteId_Emote_Id_1) == 0x0000FC, "Member 'WBP_EmoteWheelChoice_CM_C_OnDrop::CallFunc_GetAssignedEmoteId_Emote_Id_1' has a wrong offset!");
static_assert(offsetof(WBP_EmoteWheelChoice_CM_C_OnDrop, K2Node_DynamicCast_AsWBP_Emote_Entry_CM) == 0x000110, "Member 'WBP_EmoteWheelChoice_CM_C_OnDrop::K2Node_DynamicCast_AsWBP_Emote_Entry_CM' has a wrong offset!");
static_assert(offsetof(WBP_EmoteWheelChoice_CM_C_OnDrop, K2Node_DynamicCast_bSuccess_2) == 0x000118, "Member 'WBP_EmoteWheelChoice_CM_C_OnDrop::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");

// Function WBP_EmoteWheelChoice_CM.WBP_EmoteWheelChoice_CM_C.OnEmoteWheelChoiceFocused__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct WBP_EmoteWheelChoice_CM_C_OnEmoteWheelChoiceFocused__DelegateSignature final
{
public:
	class UWBP_EmoteWheelChoice_CM_C*             EmoteChoice;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_EmoteWheelChoice_CM_C_OnEmoteWheelChoiceFocused__DelegateSignature) == 0x000008, "Wrong alignment on WBP_EmoteWheelChoice_CM_C_OnEmoteWheelChoiceFocused__DelegateSignature");
static_assert(sizeof(WBP_EmoteWheelChoice_CM_C_OnEmoteWheelChoiceFocused__DelegateSignature) == 0x000008, "Wrong size on WBP_EmoteWheelChoice_CM_C_OnEmoteWheelChoiceFocused__DelegateSignature");
static_assert(offsetof(WBP_EmoteWheelChoice_CM_C_OnEmoteWheelChoiceFocused__DelegateSignature, EmoteChoice) == 0x000000, "Member 'WBP_EmoteWheelChoice_CM_C_OnEmoteWheelChoiceFocused__DelegateSignature::EmoteChoice' has a wrong offset!");

// Function WBP_EmoteWheelChoice_CM.WBP_EmoteWheelChoice_CM_C.OnFocusReceived
// 0x01B0 (0x01B0 - 0x0000)
struct WBP_EmoteWheelChoice_CM_C_OnFocusReceived final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FFocusEvent                            InFocusEvent;                                      // 0x0038(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	struct FEventReply                            ReturnValue;                                       // 0x0040(0x00B8)(Parm, OutParm, ReturnParm)
	struct FEventReply                            CallFunc_Handled_ReturnValue;                      // 0x00F8(0x00B8)()
};
static_assert(alignof(WBP_EmoteWheelChoice_CM_C_OnFocusReceived) == 0x000008, "Wrong alignment on WBP_EmoteWheelChoice_CM_C_OnFocusReceived");
static_assert(sizeof(WBP_EmoteWheelChoice_CM_C_OnFocusReceived) == 0x0001B0, "Wrong size on WBP_EmoteWheelChoice_CM_C_OnFocusReceived");
static_assert(offsetof(WBP_EmoteWheelChoice_CM_C_OnFocusReceived, MyGeometry) == 0x000000, "Member 'WBP_EmoteWheelChoice_CM_C_OnFocusReceived::MyGeometry' has a wrong offset!");
static_assert(offsetof(WBP_EmoteWheelChoice_CM_C_OnFocusReceived, InFocusEvent) == 0x000038, "Member 'WBP_EmoteWheelChoice_CM_C_OnFocusReceived::InFocusEvent' has a wrong offset!");
static_assert(offsetof(WBP_EmoteWheelChoice_CM_C_OnFocusReceived, ReturnValue) == 0x000040, "Member 'WBP_EmoteWheelChoice_CM_C_OnFocusReceived::ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_EmoteWheelChoice_CM_C_OnFocusReceived, CallFunc_Handled_ReturnValue) == 0x0000F8, "Member 'WBP_EmoteWheelChoice_CM_C_OnFocusReceived::CallFunc_Handled_ReturnValue' has a wrong offset!");

// Function WBP_EmoteWheelChoice_CM.WBP_EmoteWheelChoice_CM_C.OnLoaded_3776BECB4BB558E3CC6C9A813DFA938A
// 0x0008 (0x0008 - 0x0000)
struct WBP_EmoteWheelChoice_CM_C_OnLoaded_3776BECB4BB558E3CC6C9A813DFA938A final
{
public:
	class UObject*                                Loaded;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_EmoteWheelChoice_CM_C_OnLoaded_3776BECB4BB558E3CC6C9A813DFA938A) == 0x000008, "Wrong alignment on WBP_EmoteWheelChoice_CM_C_OnLoaded_3776BECB4BB558E3CC6C9A813DFA938A");
static_assert(sizeof(WBP_EmoteWheelChoice_CM_C_OnLoaded_3776BECB4BB558E3CC6C9A813DFA938A) == 0x000008, "Wrong size on WBP_EmoteWheelChoice_CM_C_OnLoaded_3776BECB4BB558E3CC6C9A813DFA938A");
static_assert(offsetof(WBP_EmoteWheelChoice_CM_C_OnLoaded_3776BECB4BB558E3CC6C9A813DFA938A, Loaded) == 0x000000, "Member 'WBP_EmoteWheelChoice_CM_C_OnLoaded_3776BECB4BB558E3CC6C9A813DFA938A::Loaded' has a wrong offset!");

// Function WBP_EmoteWheelChoice_CM.WBP_EmoteWheelChoice_CM_C.OnPreviewMouseButtonDown
// 0x0220 (0x0220 - 0x0000)
struct WBP_EmoteWheelChoice_CM_C_OnPreviewMouseButtonDown final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FPointerEvent                          MouseEvent;                                        // 0x0038(0x0078)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	struct FEventReply                            ReturnValue;                                       // 0x00B0(0x00B8)(Parm, OutParm, ReturnParm)
	struct FEventReply                            CallFunc_DetectDragIfPressed_ReturnValue;          // 0x0168(0x00B8)()
};
static_assert(alignof(WBP_EmoteWheelChoice_CM_C_OnPreviewMouseButtonDown) == 0x000008, "Wrong alignment on WBP_EmoteWheelChoice_CM_C_OnPreviewMouseButtonDown");
static_assert(sizeof(WBP_EmoteWheelChoice_CM_C_OnPreviewMouseButtonDown) == 0x000220, "Wrong size on WBP_EmoteWheelChoice_CM_C_OnPreviewMouseButtonDown");
static_assert(offsetof(WBP_EmoteWheelChoice_CM_C_OnPreviewMouseButtonDown, MyGeometry) == 0x000000, "Member 'WBP_EmoteWheelChoice_CM_C_OnPreviewMouseButtonDown::MyGeometry' has a wrong offset!");
static_assert(offsetof(WBP_EmoteWheelChoice_CM_C_OnPreviewMouseButtonDown, MouseEvent) == 0x000038, "Member 'WBP_EmoteWheelChoice_CM_C_OnPreviewMouseButtonDown::MouseEvent' has a wrong offset!");
static_assert(offsetof(WBP_EmoteWheelChoice_CM_C_OnPreviewMouseButtonDown, ReturnValue) == 0x0000B0, "Member 'WBP_EmoteWheelChoice_CM_C_OnPreviewMouseButtonDown::ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_EmoteWheelChoice_CM_C_OnPreviewMouseButtonDown, CallFunc_DetectDragIfPressed_ReturnValue) == 0x000168, "Member 'WBP_EmoteWheelChoice_CM_C_OnPreviewMouseButtonDown::CallFunc_DetectDragIfPressed_ReturnValue' has a wrong offset!");

// Function WBP_EmoteWheelChoice_CM.WBP_EmoteWheelChoice_CM_C.ResetWidgetProperties
// 0x0038 (0x0038 - 0x0000)
struct WBP_EmoteWheelChoice_CM_C_ResetWidgetProperties final
{
public:
	struct FWidgetTransform                       K2Node_MakeStruct_WidgetTransform;                 // 0x0000(0x0038)(NoDestructor)
};
static_assert(alignof(WBP_EmoteWheelChoice_CM_C_ResetWidgetProperties) == 0x000008, "Wrong alignment on WBP_EmoteWheelChoice_CM_C_ResetWidgetProperties");
static_assert(sizeof(WBP_EmoteWheelChoice_CM_C_ResetWidgetProperties) == 0x000038, "Wrong size on WBP_EmoteWheelChoice_CM_C_ResetWidgetProperties");
static_assert(offsetof(WBP_EmoteWheelChoice_CM_C_ResetWidgetProperties, K2Node_MakeStruct_WidgetTransform) == 0x000000, "Member 'WBP_EmoteWheelChoice_CM_C_ResetWidgetProperties::K2Node_MakeStruct_WidgetTransform' has a wrong offset!");

// Function WBP_EmoteWheelChoice_CM.WBP_EmoteWheelChoice_CM_C.SelectWheelChoiceByGamepad
// 0x0008 (0x0008 - 0x0000)
struct WBP_EmoteWheelChoice_CM_C_SelectWheelChoiceByGamepad final
{
public:
	int32                                         CallFunc_AkEventGlobal_ReturnValue;                // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_EmoteWheelChoice_CM_C_SelectWheelChoiceByGamepad) == 0x000004, "Wrong alignment on WBP_EmoteWheelChoice_CM_C_SelectWheelChoiceByGamepad");
static_assert(sizeof(WBP_EmoteWheelChoice_CM_C_SelectWheelChoiceByGamepad) == 0x000008, "Wrong size on WBP_EmoteWheelChoice_CM_C_SelectWheelChoiceByGamepad");
static_assert(offsetof(WBP_EmoteWheelChoice_CM_C_SelectWheelChoiceByGamepad, CallFunc_AkEventGlobal_ReturnValue) == 0x000000, "Member 'WBP_EmoteWheelChoice_CM_C_SelectWheelChoiceByGamepad::CallFunc_AkEventGlobal_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_EmoteWheelChoice_CM_C_SelectWheelChoiceByGamepad, CallFunc_IsValid_ReturnValue) == 0x000004, "Member 'WBP_EmoteWheelChoice_CM_C_SelectWheelChoiceByGamepad::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function WBP_EmoteWheelChoice_CM.WBP_EmoteWheelChoice_CM_C.SetAssignedEmote
// 0x0008 (0x0008 - 0x0000)
struct WBP_EmoteWheelChoice_CM_C_SetAssignedEmote final
{
public:
	class UBP_EmoteItemObject_CM_C*               EmoteItemObject;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_EmoteWheelChoice_CM_C_SetAssignedEmote) == 0x000008, "Wrong alignment on WBP_EmoteWheelChoice_CM_C_SetAssignedEmote");
static_assert(sizeof(WBP_EmoteWheelChoice_CM_C_SetAssignedEmote) == 0x000008, "Wrong size on WBP_EmoteWheelChoice_CM_C_SetAssignedEmote");
static_assert(offsetof(WBP_EmoteWheelChoice_CM_C_SetAssignedEmote, EmoteItemObject) == 0x000000, "Member 'WBP_EmoteWheelChoice_CM_C_SetAssignedEmote::EmoteItemObject' has a wrong offset!");

// Function WBP_EmoteWheelChoice_CM.WBP_EmoteWheelChoice_CM_C.SetSelectedTip
// 0x0004 (0x0004 - 0x0000)
struct WBP_EmoteWheelChoice_CM_C_SetSelectedTip final
{
public:
	bool                                          Temp_bool_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_EmoteWheelChoice_CM_C_SetSelectedTip) == 0x000001, "Wrong alignment on WBP_EmoteWheelChoice_CM_C_SetSelectedTip");
static_assert(sizeof(WBP_EmoteWheelChoice_CM_C_SetSelectedTip) == 0x000004, "Wrong size on WBP_EmoteWheelChoice_CM_C_SetSelectedTip");
static_assert(offsetof(WBP_EmoteWheelChoice_CM_C_SetSelectedTip, Temp_bool_Variable) == 0x000000, "Member 'WBP_EmoteWheelChoice_CM_C_SetSelectedTip::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_EmoteWheelChoice_CM_C_SetSelectedTip, Temp_byte_Variable) == 0x000001, "Member 'WBP_EmoteWheelChoice_CM_C_SetSelectedTip::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_EmoteWheelChoice_CM_C_SetSelectedTip, Temp_byte_Variable_1) == 0x000002, "Member 'WBP_EmoteWheelChoice_CM_C_SetSelectedTip::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_EmoteWheelChoice_CM_C_SetSelectedTip, K2Node_Select_Default) == 0x000003, "Member 'WBP_EmoteWheelChoice_CM_C_SetSelectedTip::K2Node_Select_Default' has a wrong offset!");

// Function WBP_EmoteWheelChoice_CM.WBP_EmoteWheelChoice_CM_C.Update
// 0x0040 (0x0040 - 0x0000)
struct WBP_EmoteWheelChoice_CM_C_Update final
{
public:
	EValeriaFuncResult                            CallFunc_GetValeriaCharacter_OutResult;            // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_466A[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AValeriaCharacter*                      CallFunc_GetValeriaCharacter_ReturnValue;          // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UValeriaEmoteComponent*                 CallFunc_GetEmoteComponent_ReturnValue;            // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_466B[0x6];                                     // 0x001A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UEmoteDataAsset*>                CallFunc_GetEquippedEmotes_ReturnValue;            // 0x0020(0x0010)(ReferenceParm)
	class UEmoteDataAsset*                        CallFunc_Array_Get_Item;                           // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_EmoteWheelChoice_CM_C_Update) == 0x000008, "Wrong alignment on WBP_EmoteWheelChoice_CM_C_Update");
static_assert(sizeof(WBP_EmoteWheelChoice_CM_C_Update) == 0x000040, "Wrong size on WBP_EmoteWheelChoice_CM_C_Update");
static_assert(offsetof(WBP_EmoteWheelChoice_CM_C_Update, CallFunc_GetValeriaCharacter_OutResult) == 0x000000, "Member 'WBP_EmoteWheelChoice_CM_C_Update::CallFunc_GetValeriaCharacter_OutResult' has a wrong offset!");
static_assert(offsetof(WBP_EmoteWheelChoice_CM_C_Update, CallFunc_GetValeriaCharacter_ReturnValue) == 0x000008, "Member 'WBP_EmoteWheelChoice_CM_C_Update::CallFunc_GetValeriaCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_EmoteWheelChoice_CM_C_Update, CallFunc_GetEmoteComponent_ReturnValue) == 0x000010, "Member 'WBP_EmoteWheelChoice_CM_C_Update::CallFunc_GetEmoteComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_EmoteWheelChoice_CM_C_Update, K2Node_SwitchEnum_CmpSuccess) == 0x000018, "Member 'WBP_EmoteWheelChoice_CM_C_Update::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(WBP_EmoteWheelChoice_CM_C_Update, CallFunc_IsValid_ReturnValue) == 0x000019, "Member 'WBP_EmoteWheelChoice_CM_C_Update::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_EmoteWheelChoice_CM_C_Update, CallFunc_GetEquippedEmotes_ReturnValue) == 0x000020, "Member 'WBP_EmoteWheelChoice_CM_C_Update::CallFunc_GetEquippedEmotes_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_EmoteWheelChoice_CM_C_Update, CallFunc_Array_Get_Item) == 0x000030, "Member 'WBP_EmoteWheelChoice_CM_C_Update::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_EmoteWheelChoice_CM_C_Update, CallFunc_Array_IsValidIndex_ReturnValue) == 0x000038, "Member 'WBP_EmoteWheelChoice_CM_C_Update::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_EmoteWheelChoice_CM_C_Update, CallFunc_IsValid_ReturnValue_1) == 0x000039, "Member 'WBP_EmoteWheelChoice_CM_C_Update::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");

// Function WBP_EmoteWheelChoice_CM.WBP_EmoteWheelChoice_CM_C.UpdateEmoteId
// 0x0030 (0x0030 - 0x0000)
struct WBP_EmoteWheelChoice_CM_C_UpdateEmoteId final
{
public:
	struct FGuid                                  Param_EmoteId;                                     // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_Guid_ReturnValue;                 // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EValeriaFuncResult                            CallFunc_GetValeriaCharacter_OutResult;            // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_466C[0x6];                                     // 0x0012(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AValeriaCharacter*                      CallFunc_GetValeriaCharacter_ReturnValue;          // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UValeriaEmoteComponent*                 CallFunc_GetEmoteComponent_ReturnValue;            // 0x0020(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_GuidGuid_ReturnValue;          // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Client_ClearAssignedEmote_ReturnValue;    // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Client_AssignEmoteToWheel_ReturnValue;    // 0x002A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x002B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_EmoteWheelChoice_CM_C_UpdateEmoteId) == 0x000008, "Wrong alignment on WBP_EmoteWheelChoice_CM_C_UpdateEmoteId");
static_assert(sizeof(WBP_EmoteWheelChoice_CM_C_UpdateEmoteId) == 0x000030, "Wrong size on WBP_EmoteWheelChoice_CM_C_UpdateEmoteId");
static_assert(offsetof(WBP_EmoteWheelChoice_CM_C_UpdateEmoteId, Param_EmoteId) == 0x000000, "Member 'WBP_EmoteWheelChoice_CM_C_UpdateEmoteId::Param_EmoteId' has a wrong offset!");
static_assert(offsetof(WBP_EmoteWheelChoice_CM_C_UpdateEmoteId, CallFunc_IsValid_Guid_ReturnValue) == 0x000010, "Member 'WBP_EmoteWheelChoice_CM_C_UpdateEmoteId::CallFunc_IsValid_Guid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_EmoteWheelChoice_CM_C_UpdateEmoteId, CallFunc_GetValeriaCharacter_OutResult) == 0x000011, "Member 'WBP_EmoteWheelChoice_CM_C_UpdateEmoteId::CallFunc_GetValeriaCharacter_OutResult' has a wrong offset!");
static_assert(offsetof(WBP_EmoteWheelChoice_CM_C_UpdateEmoteId, CallFunc_GetValeriaCharacter_ReturnValue) == 0x000018, "Member 'WBP_EmoteWheelChoice_CM_C_UpdateEmoteId::CallFunc_GetValeriaCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_EmoteWheelChoice_CM_C_UpdateEmoteId, CallFunc_GetEmoteComponent_ReturnValue) == 0x000020, "Member 'WBP_EmoteWheelChoice_CM_C_UpdateEmoteId::CallFunc_GetEmoteComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_EmoteWheelChoice_CM_C_UpdateEmoteId, CallFunc_EqualEqual_GuidGuid_ReturnValue) == 0x000028, "Member 'WBP_EmoteWheelChoice_CM_C_UpdateEmoteId::CallFunc_EqualEqual_GuidGuid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_EmoteWheelChoice_CM_C_UpdateEmoteId, CallFunc_Client_ClearAssignedEmote_ReturnValue) == 0x000029, "Member 'WBP_EmoteWheelChoice_CM_C_UpdateEmoteId::CallFunc_Client_ClearAssignedEmote_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_EmoteWheelChoice_CM_C_UpdateEmoteId, CallFunc_Client_AssignEmoteToWheel_ReturnValue) == 0x00002A, "Member 'WBP_EmoteWheelChoice_CM_C_UpdateEmoteId::CallFunc_Client_AssignEmoteToWheel_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_EmoteWheelChoice_CM_C_UpdateEmoteId, CallFunc_IsValid_ReturnValue) == 0x00002B, "Member 'WBP_EmoteWheelChoice_CM_C_UpdateEmoteId::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_EmoteWheelChoice_CM_C_UpdateEmoteId, K2Node_SwitchEnum_CmpSuccess) == 0x00002C, "Member 'WBP_EmoteWheelChoice_CM_C_UpdateEmoteId::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

}

