#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_Cooking_Minigame_RollingPin

#include "Basic.hpp"

#include "Palia_structs.hpp"
#include "SlateCore_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "UMG_structs.hpp"


namespace SDK::Params
{

// Function WBP_Cooking_Minigame_RollingPin.WBP_Cooking_Minigame_RollingPin_C.ExecuteUbergraph_WBP_Cooking_Minigame_RollingPin
// 0x0098 (0x0098 - 0x0000)
struct WBP_Cooking_Minigame_RollingPin_C_ExecuteUbergraph_WBP_Cooking_Minigame_RollingPin final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_AkEventGlobal_ReturnValue;                // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPaused_ReturnValue;                     // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPlaying_ReturnValue;                    // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5A00[0x3];                                     // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_AkEventGlobal_ReturnValue_1;              // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_AkEventGlobal_ReturnValue_2;              // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_AkEventGlobal_ReturnValue_3;              // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_AkEventGlobal_ReturnValue_4;              // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPaused_ReturnValue_1;                   // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5A01[0x3];                                     // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGeometry                              K2Node_Event_MyGeometry;                           // 0x0024(0x0038)(IsPlainOldData, NoDestructor)
	float                                         K2Node_Event_InDeltaTime;                          // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0061(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPlaying_ReturnValue_1;                  // 0x0062(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0063(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5A02[0x4];                                     // 0x0064(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationForward_ReturnValue;         // 0x0068(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_CreatePlayAnimationProxyObject_Result;    // 0x0070(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimationPlayCallbackProxy*      CallFunc_CreatePlayAnimationProxyObject_ReturnValue; // 0x0078(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0080(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Cooking_Minigame_RollingPin_C_ExecuteUbergraph_WBP_Cooking_Minigame_RollingPin) == 0x000008, "Wrong alignment on WBP_Cooking_Minigame_RollingPin_C_ExecuteUbergraph_WBP_Cooking_Minigame_RollingPin");
static_assert(sizeof(WBP_Cooking_Minigame_RollingPin_C_ExecuteUbergraph_WBP_Cooking_Minigame_RollingPin) == 0x000098, "Wrong size on WBP_Cooking_Minigame_RollingPin_C_ExecuteUbergraph_WBP_Cooking_Minigame_RollingPin");
static_assert(offsetof(WBP_Cooking_Minigame_RollingPin_C_ExecuteUbergraph_WBP_Cooking_Minigame_RollingPin, EntryPoint) == 0x000000, "Member 'WBP_Cooking_Minigame_RollingPin_C_ExecuteUbergraph_WBP_Cooking_Minigame_RollingPin::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_Cooking_Minigame_RollingPin_C_ExecuteUbergraph_WBP_Cooking_Minigame_RollingPin, CallFunc_AkEventGlobal_ReturnValue) == 0x000004, "Member 'WBP_Cooking_Minigame_RollingPin_C_ExecuteUbergraph_WBP_Cooking_Minigame_RollingPin::CallFunc_AkEventGlobal_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Cooking_Minigame_RollingPin_C_ExecuteUbergraph_WBP_Cooking_Minigame_RollingPin, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'WBP_Cooking_Minigame_RollingPin_C_ExecuteUbergraph_WBP_Cooking_Minigame_RollingPin::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Cooking_Minigame_RollingPin_C_ExecuteUbergraph_WBP_Cooking_Minigame_RollingPin, CallFunc_IsPaused_ReturnValue) == 0x000009, "Member 'WBP_Cooking_Minigame_RollingPin_C_ExecuteUbergraph_WBP_Cooking_Minigame_RollingPin::CallFunc_IsPaused_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Cooking_Minigame_RollingPin_C_ExecuteUbergraph_WBP_Cooking_Minigame_RollingPin, CallFunc_Not_PreBool_ReturnValue) == 0x00000A, "Member 'WBP_Cooking_Minigame_RollingPin_C_ExecuteUbergraph_WBP_Cooking_Minigame_RollingPin::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Cooking_Minigame_RollingPin_C_ExecuteUbergraph_WBP_Cooking_Minigame_RollingPin, CallFunc_IsPlaying_ReturnValue) == 0x00000B, "Member 'WBP_Cooking_Minigame_RollingPin_C_ExecuteUbergraph_WBP_Cooking_Minigame_RollingPin::CallFunc_IsPlaying_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Cooking_Minigame_RollingPin_C_ExecuteUbergraph_WBP_Cooking_Minigame_RollingPin, CallFunc_BooleanAND_ReturnValue) == 0x00000C, "Member 'WBP_Cooking_Minigame_RollingPin_C_ExecuteUbergraph_WBP_Cooking_Minigame_RollingPin::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Cooking_Minigame_RollingPin_C_ExecuteUbergraph_WBP_Cooking_Minigame_RollingPin, CallFunc_AkEventGlobal_ReturnValue_1) == 0x000010, "Member 'WBP_Cooking_Minigame_RollingPin_C_ExecuteUbergraph_WBP_Cooking_Minigame_RollingPin::CallFunc_AkEventGlobal_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_Cooking_Minigame_RollingPin_C_ExecuteUbergraph_WBP_Cooking_Minigame_RollingPin, CallFunc_AkEventGlobal_ReturnValue_2) == 0x000014, "Member 'WBP_Cooking_Minigame_RollingPin_C_ExecuteUbergraph_WBP_Cooking_Minigame_RollingPin::CallFunc_AkEventGlobal_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_Cooking_Minigame_RollingPin_C_ExecuteUbergraph_WBP_Cooking_Minigame_RollingPin, CallFunc_AkEventGlobal_ReturnValue_3) == 0x000018, "Member 'WBP_Cooking_Minigame_RollingPin_C_ExecuteUbergraph_WBP_Cooking_Minigame_RollingPin::CallFunc_AkEventGlobal_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WBP_Cooking_Minigame_RollingPin_C_ExecuteUbergraph_WBP_Cooking_Minigame_RollingPin, CallFunc_AkEventGlobal_ReturnValue_4) == 0x00001C, "Member 'WBP_Cooking_Minigame_RollingPin_C_ExecuteUbergraph_WBP_Cooking_Minigame_RollingPin::CallFunc_AkEventGlobal_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(WBP_Cooking_Minigame_RollingPin_C_ExecuteUbergraph_WBP_Cooking_Minigame_RollingPin, CallFunc_IsPaused_ReturnValue_1) == 0x000020, "Member 'WBP_Cooking_Minigame_RollingPin_C_ExecuteUbergraph_WBP_Cooking_Minigame_RollingPin::CallFunc_IsPaused_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_Cooking_Minigame_RollingPin_C_ExecuteUbergraph_WBP_Cooking_Minigame_RollingPin, K2Node_Event_MyGeometry) == 0x000024, "Member 'WBP_Cooking_Minigame_RollingPin_C_ExecuteUbergraph_WBP_Cooking_Minigame_RollingPin::K2Node_Event_MyGeometry' has a wrong offset!");
static_assert(offsetof(WBP_Cooking_Minigame_RollingPin_C_ExecuteUbergraph_WBP_Cooking_Minigame_RollingPin, K2Node_Event_InDeltaTime) == 0x00005C, "Member 'WBP_Cooking_Minigame_RollingPin_C_ExecuteUbergraph_WBP_Cooking_Minigame_RollingPin::K2Node_Event_InDeltaTime' has a wrong offset!");
static_assert(offsetof(WBP_Cooking_Minigame_RollingPin_C_ExecuteUbergraph_WBP_Cooking_Minigame_RollingPin, CallFunc_Not_PreBool_ReturnValue_1) == 0x000060, "Member 'WBP_Cooking_Minigame_RollingPin_C_ExecuteUbergraph_WBP_Cooking_Minigame_RollingPin::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_Cooking_Minigame_RollingPin_C_ExecuteUbergraph_WBP_Cooking_Minigame_RollingPin, CallFunc_IsValid_ReturnValue_1) == 0x000061, "Member 'WBP_Cooking_Minigame_RollingPin_C_ExecuteUbergraph_WBP_Cooking_Minigame_RollingPin::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_Cooking_Minigame_RollingPin_C_ExecuteUbergraph_WBP_Cooking_Minigame_RollingPin, CallFunc_IsPlaying_ReturnValue_1) == 0x000062, "Member 'WBP_Cooking_Minigame_RollingPin_C_ExecuteUbergraph_WBP_Cooking_Minigame_RollingPin::CallFunc_IsPlaying_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_Cooking_Minigame_RollingPin_C_ExecuteUbergraph_WBP_Cooking_Minigame_RollingPin, CallFunc_BooleanAND_ReturnValue_1) == 0x000063, "Member 'WBP_Cooking_Minigame_RollingPin_C_ExecuteUbergraph_WBP_Cooking_Minigame_RollingPin::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_Cooking_Minigame_RollingPin_C_ExecuteUbergraph_WBP_Cooking_Minigame_RollingPin, CallFunc_PlayAnimationForward_ReturnValue) == 0x000068, "Member 'WBP_Cooking_Minigame_RollingPin_C_ExecuteUbergraph_WBP_Cooking_Minigame_RollingPin::CallFunc_PlayAnimationForward_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Cooking_Minigame_RollingPin_C_ExecuteUbergraph_WBP_Cooking_Minigame_RollingPin, CallFunc_CreatePlayAnimationProxyObject_Result) == 0x000070, "Member 'WBP_Cooking_Minigame_RollingPin_C_ExecuteUbergraph_WBP_Cooking_Minigame_RollingPin::CallFunc_CreatePlayAnimationProxyObject_Result' has a wrong offset!");
static_assert(offsetof(WBP_Cooking_Minigame_RollingPin_C_ExecuteUbergraph_WBP_Cooking_Minigame_RollingPin, CallFunc_CreatePlayAnimationProxyObject_ReturnValue) == 0x000078, "Member 'WBP_Cooking_Minigame_RollingPin_C_ExecuteUbergraph_WBP_Cooking_Minigame_RollingPin::CallFunc_CreatePlayAnimationProxyObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Cooking_Minigame_RollingPin_C_ExecuteUbergraph_WBP_Cooking_Minigame_RollingPin, K2Node_CreateDelegate_OutputDelegate) == 0x000080, "Member 'WBP_Cooking_Minigame_RollingPin_C_ExecuteUbergraph_WBP_Cooking_Minigame_RollingPin::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WBP_Cooking_Minigame_RollingPin_C_ExecuteUbergraph_WBP_Cooking_Minigame_RollingPin, CallFunc_IsValid_ReturnValue_2) == 0x000090, "Member 'WBP_Cooking_Minigame_RollingPin_C_ExecuteUbergraph_WBP_Cooking_Minigame_RollingPin::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");

// Function WBP_Cooking_Minigame_RollingPin.WBP_Cooking_Minigame_RollingPin_C.ExpectedInputMissed
// 0x0008 (0x0008 - 0x0000)
struct WBP_Cooking_Minigame_RollingPin_C_ExpectedInputMissed final
{
public:
	class UMinigameComponentMasterQTE*            Comp;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Cooking_Minigame_RollingPin_C_ExpectedInputMissed) == 0x000008, "Wrong alignment on WBP_Cooking_Minigame_RollingPin_C_ExpectedInputMissed");
static_assert(sizeof(WBP_Cooking_Minigame_RollingPin_C_ExpectedInputMissed) == 0x000008, "Wrong size on WBP_Cooking_Minigame_RollingPin_C_ExpectedInputMissed");
static_assert(offsetof(WBP_Cooking_Minigame_RollingPin_C_ExpectedInputMissed, Comp) == 0x000000, "Member 'WBP_Cooking_Minigame_RollingPin_C_ExpectedInputMissed::Comp' has a wrong offset!");

// Function WBP_Cooking_Minigame_RollingPin.WBP_Cooking_Minigame_RollingPin_C.GetClosestGoalPost
// 0x0038 (0x0038 - 0x0000)
struct WBP_Cooking_Minigame_RollingPin_C_GetClosestGoalPost final
{
public:
	class UWBP_Cooking_Minigame_RollingPin_GoalPost_C* Marker;                                            // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5A03[0x7];                                     // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_GetMarkerTravelRange_Range;               // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetMarkerPosition_Position;               // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_DoubleDouble_ReturnValue;       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5A04[0x7];                                     // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_Cooking_Minigame_RollingPin_GoalPost_C* K2Node_Select_Default;                             // 0x0030(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Cooking_Minigame_RollingPin_C_GetClosestGoalPost) == 0x000008, "Wrong alignment on WBP_Cooking_Minigame_RollingPin_C_GetClosestGoalPost");
static_assert(sizeof(WBP_Cooking_Minigame_RollingPin_C_GetClosestGoalPost) == 0x000038, "Wrong size on WBP_Cooking_Minigame_RollingPin_C_GetClosestGoalPost");
static_assert(offsetof(WBP_Cooking_Minigame_RollingPin_C_GetClosestGoalPost, Marker) == 0x000000, "Member 'WBP_Cooking_Minigame_RollingPin_C_GetClosestGoalPost::Marker' has a wrong offset!");
static_assert(offsetof(WBP_Cooking_Minigame_RollingPin_C_GetClosestGoalPost, Temp_bool_Variable) == 0x000008, "Member 'WBP_Cooking_Minigame_RollingPin_C_GetClosestGoalPost::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Cooking_Minigame_RollingPin_C_GetClosestGoalPost, CallFunc_GetMarkerTravelRange_Range) == 0x000010, "Member 'WBP_Cooking_Minigame_RollingPin_C_GetClosestGoalPost::CallFunc_GetMarkerTravelRange_Range' has a wrong offset!");
static_assert(offsetof(WBP_Cooking_Minigame_RollingPin_C_GetClosestGoalPost, CallFunc_GetMarkerPosition_Position) == 0x000018, "Member 'WBP_Cooking_Minigame_RollingPin_C_GetClosestGoalPost::CallFunc_GetMarkerPosition_Position' has a wrong offset!");
static_assert(offsetof(WBP_Cooking_Minigame_RollingPin_C_GetClosestGoalPost, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000020, "Member 'WBP_Cooking_Minigame_RollingPin_C_GetClosestGoalPost::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Cooking_Minigame_RollingPin_C_GetClosestGoalPost, CallFunc_LessEqual_DoubleDouble_ReturnValue) == 0x000028, "Member 'WBP_Cooking_Minigame_RollingPin_C_GetClosestGoalPost::CallFunc_LessEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Cooking_Minigame_RollingPin_C_GetClosestGoalPost, K2Node_Select_Default) == 0x000030, "Member 'WBP_Cooking_Minigame_RollingPin_C_GetClosestGoalPost::K2Node_Select_Default' has a wrong offset!");

// Function WBP_Cooking_Minigame_RollingPin.WBP_Cooking_Minigame_RollingPin_C.GetMarkerPosition
// 0x0018 (0x0018 - 0x0000)
struct WBP_Cooking_Minigame_RollingPin_C_GetMarkerPosition final
{
public:
	double                                        Position;                                          // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UOverlaySlot*                           CallFunc_SlotAsOverlaySlot_ReturnValue;            // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_FunctionResult_Position_ImplicitCast;       // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Cooking_Minigame_RollingPin_C_GetMarkerPosition) == 0x000008, "Wrong alignment on WBP_Cooking_Minigame_RollingPin_C_GetMarkerPosition");
static_assert(sizeof(WBP_Cooking_Minigame_RollingPin_C_GetMarkerPosition) == 0x000018, "Wrong size on WBP_Cooking_Minigame_RollingPin_C_GetMarkerPosition");
static_assert(offsetof(WBP_Cooking_Minigame_RollingPin_C_GetMarkerPosition, Position) == 0x000000, "Member 'WBP_Cooking_Minigame_RollingPin_C_GetMarkerPosition::Position' has a wrong offset!");
static_assert(offsetof(WBP_Cooking_Minigame_RollingPin_C_GetMarkerPosition, CallFunc_SlotAsOverlaySlot_ReturnValue) == 0x000008, "Member 'WBP_Cooking_Minigame_RollingPin_C_GetMarkerPosition::CallFunc_SlotAsOverlaySlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Cooking_Minigame_RollingPin_C_GetMarkerPosition, K2Node_FunctionResult_Position_ImplicitCast) == 0x000010, "Member 'WBP_Cooking_Minigame_RollingPin_C_GetMarkerPosition::K2Node_FunctionResult_Position_ImplicitCast' has a wrong offset!");

// Function WBP_Cooking_Minigame_RollingPin.WBP_Cooking_Minigame_RollingPin_C.GetMarkerTravelRange
// 0x0060 (0x0060 - 0x0000)
struct WBP_Cooking_Minigame_RollingPin_C_GetMarkerTravelRange final
{
public:
	double                                        Range;                                             // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGeometry                              CallFunc_GetCachedGeometry_ReturnValue;            // 0x0008(0x0038)(ConstParm, IsPlainOldData, NoDestructor)
	struct FVector2D                              CallFunc_GetLocalSize_ReturnValue;                 // 0x0040(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_X;                          // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y;                          // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Cooking_Minigame_RollingPin_C_GetMarkerTravelRange) == 0x000008, "Wrong alignment on WBP_Cooking_Minigame_RollingPin_C_GetMarkerTravelRange");
static_assert(sizeof(WBP_Cooking_Minigame_RollingPin_C_GetMarkerTravelRange) == 0x000060, "Wrong size on WBP_Cooking_Minigame_RollingPin_C_GetMarkerTravelRange");
static_assert(offsetof(WBP_Cooking_Minigame_RollingPin_C_GetMarkerTravelRange, Range) == 0x000000, "Member 'WBP_Cooking_Minigame_RollingPin_C_GetMarkerTravelRange::Range' has a wrong offset!");
static_assert(offsetof(WBP_Cooking_Minigame_RollingPin_C_GetMarkerTravelRange, CallFunc_GetCachedGeometry_ReturnValue) == 0x000008, "Member 'WBP_Cooking_Minigame_RollingPin_C_GetMarkerTravelRange::CallFunc_GetCachedGeometry_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Cooking_Minigame_RollingPin_C_GetMarkerTravelRange, CallFunc_GetLocalSize_ReturnValue) == 0x000040, "Member 'WBP_Cooking_Minigame_RollingPin_C_GetMarkerTravelRange::CallFunc_GetLocalSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Cooking_Minigame_RollingPin_C_GetMarkerTravelRange, CallFunc_BreakVector2D_X) == 0x000050, "Member 'WBP_Cooking_Minigame_RollingPin_C_GetMarkerTravelRange::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(WBP_Cooking_Minigame_RollingPin_C_GetMarkerTravelRange, CallFunc_BreakVector2D_Y) == 0x000058, "Member 'WBP_Cooking_Minigame_RollingPin_C_GetMarkerTravelRange::CallFunc_BreakVector2D_Y' has a wrong offset!");

// Function WBP_Cooking_Minigame_RollingPin.WBP_Cooking_Minigame_RollingPin_C.GetMarkerWidth
// 0x0060 (0x0060 - 0x0000)
struct WBP_Cooking_Minigame_RollingPin_C_GetMarkerWidth final
{
public:
	double                                        Width;                                             // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGeometry                              CallFunc_GetCachedGeometry_ReturnValue;            // 0x0008(0x0038)(ConstParm, IsPlainOldData, NoDestructor)
	struct FVector2D                              CallFunc_GetLocalSize_ReturnValue;                 // 0x0040(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_X;                          // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y;                          // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Cooking_Minigame_RollingPin_C_GetMarkerWidth) == 0x000008, "Wrong alignment on WBP_Cooking_Minigame_RollingPin_C_GetMarkerWidth");
static_assert(sizeof(WBP_Cooking_Minigame_RollingPin_C_GetMarkerWidth) == 0x000060, "Wrong size on WBP_Cooking_Minigame_RollingPin_C_GetMarkerWidth");
static_assert(offsetof(WBP_Cooking_Minigame_RollingPin_C_GetMarkerWidth, Width) == 0x000000, "Member 'WBP_Cooking_Minigame_RollingPin_C_GetMarkerWidth::Width' has a wrong offset!");
static_assert(offsetof(WBP_Cooking_Minigame_RollingPin_C_GetMarkerWidth, CallFunc_GetCachedGeometry_ReturnValue) == 0x000008, "Member 'WBP_Cooking_Minigame_RollingPin_C_GetMarkerWidth::CallFunc_GetCachedGeometry_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Cooking_Minigame_RollingPin_C_GetMarkerWidth, CallFunc_GetLocalSize_ReturnValue) == 0x000040, "Member 'WBP_Cooking_Minigame_RollingPin_C_GetMarkerWidth::CallFunc_GetLocalSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Cooking_Minigame_RollingPin_C_GetMarkerWidth, CallFunc_BreakVector2D_X) == 0x000050, "Member 'WBP_Cooking_Minigame_RollingPin_C_GetMarkerWidth::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(WBP_Cooking_Minigame_RollingPin_C_GetMarkerWidth, CallFunc_BreakVector2D_Y) == 0x000058, "Member 'WBP_Cooking_Minigame_RollingPin_C_GetMarkerWidth::CallFunc_BreakVector2D_Y' has a wrong offset!");

// Function WBP_Cooking_Minigame_RollingPin.WBP_Cooking_Minigame_RollingPin_C.MinigameOnStateChanged
// 0x0018 (0x0018 - 0x0000)
struct WBP_Cooking_Minigame_RollingPin_C_MinigameOnStateChanged final
{
public:
	class UMinigameComponentBase*                 Comp;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	EMinigameState                                PrevState;                                         // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EMinigameState                                NewState;                                          // 0x0009(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5A05[0x5];                                     // 0x000B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationForward_ReturnValue;         // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Cooking_Minigame_RollingPin_C_MinigameOnStateChanged) == 0x000008, "Wrong alignment on WBP_Cooking_Minigame_RollingPin_C_MinigameOnStateChanged");
static_assert(sizeof(WBP_Cooking_Minigame_RollingPin_C_MinigameOnStateChanged) == 0x000018, "Wrong size on WBP_Cooking_Minigame_RollingPin_C_MinigameOnStateChanged");
static_assert(offsetof(WBP_Cooking_Minigame_RollingPin_C_MinigameOnStateChanged, Comp) == 0x000000, "Member 'WBP_Cooking_Minigame_RollingPin_C_MinigameOnStateChanged::Comp' has a wrong offset!");
static_assert(offsetof(WBP_Cooking_Minigame_RollingPin_C_MinigameOnStateChanged, PrevState) == 0x000008, "Member 'WBP_Cooking_Minigame_RollingPin_C_MinigameOnStateChanged::PrevState' has a wrong offset!");
static_assert(offsetof(WBP_Cooking_Minigame_RollingPin_C_MinigameOnStateChanged, NewState) == 0x000009, "Member 'WBP_Cooking_Minigame_RollingPin_C_MinigameOnStateChanged::NewState' has a wrong offset!");
static_assert(offsetof(WBP_Cooking_Minigame_RollingPin_C_MinigameOnStateChanged, K2Node_SwitchEnum_CmpSuccess) == 0x00000A, "Member 'WBP_Cooking_Minigame_RollingPin_C_MinigameOnStateChanged::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(WBP_Cooking_Minigame_RollingPin_C_MinigameOnStateChanged, CallFunc_PlayAnimationForward_ReturnValue) == 0x000010, "Member 'WBP_Cooking_Minigame_RollingPin_C_MinigameOnStateChanged::CallFunc_PlayAnimationForward_ReturnValue' has a wrong offset!");

// Function WBP_Cooking_Minigame_RollingPin.WBP_Cooking_Minigame_RollingPin_C.MistimedInputReceived
// 0x0020 (0x0020 - 0x0000)
struct WBP_Cooking_Minigame_RollingPin_C_MistimedInputReceived final
{
public:
	class UMinigameComponentMasterQTE*            Comp;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UWBP_Cooking_Minigame_RollingPin_GoalPost_C* CallFunc_GetClosestGoalPost_Marker;                // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_AkEventGlobal_ReturnValue;                // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5A06[0x4];                                     // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationForward_ReturnValue;         // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Cooking_Minigame_RollingPin_C_MistimedInputReceived) == 0x000008, "Wrong alignment on WBP_Cooking_Minigame_RollingPin_C_MistimedInputReceived");
static_assert(sizeof(WBP_Cooking_Minigame_RollingPin_C_MistimedInputReceived) == 0x000020, "Wrong size on WBP_Cooking_Minigame_RollingPin_C_MistimedInputReceived");
static_assert(offsetof(WBP_Cooking_Minigame_RollingPin_C_MistimedInputReceived, Comp) == 0x000000, "Member 'WBP_Cooking_Minigame_RollingPin_C_MistimedInputReceived::Comp' has a wrong offset!");
static_assert(offsetof(WBP_Cooking_Minigame_RollingPin_C_MistimedInputReceived, CallFunc_GetClosestGoalPost_Marker) == 0x000008, "Member 'WBP_Cooking_Minigame_RollingPin_C_MistimedInputReceived::CallFunc_GetClosestGoalPost_Marker' has a wrong offset!");
static_assert(offsetof(WBP_Cooking_Minigame_RollingPin_C_MistimedInputReceived, CallFunc_AkEventGlobal_ReturnValue) == 0x000010, "Member 'WBP_Cooking_Minigame_RollingPin_C_MistimedInputReceived::CallFunc_AkEventGlobal_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Cooking_Minigame_RollingPin_C_MistimedInputReceived, CallFunc_PlayAnimationForward_ReturnValue) == 0x000018, "Member 'WBP_Cooking_Minigame_RollingPin_C_MistimedInputReceived::CallFunc_PlayAnimationForward_ReturnValue' has a wrong offset!");

// Function WBP_Cooking_Minigame_RollingPin.WBP_Cooking_Minigame_RollingPin_C.OnMinigameLinked
// 0x0068 (0x0068 - 0x0000)
struct WBP_Cooking_Minigame_RollingPin_C_OnMinigameLinked final
{
public:
	class UCrafterComponent*                      Crafter;                                           // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsFTUEOpen_IsOpen;                        // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsFTUEOpen_IsOpen_1;                      // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5A07[0x1];                                     // 0x000B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FMargin                                K2Node_MakeStruct_Margin;                          // 0x0014(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5A08[0x4];                                     // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UWidget*>                        CallFunc_GetAllChildren_ReturnValue;               // 0x0028(0x0010)(ReferenceParm, ContainsInstancedReference)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5A09[0x3];                                     // 0x003D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5A0A[0x4];                                     // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                CallFunc_Array_Get_Item;                           // 0x0048(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UWBP_Cooking_Minigame_Chopping_ProgressMarker_C* K2Node_DynamicCast_AsWBP_Cooking_Minigame_Chopping_Progress_Marker; // 0x0050(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5A0B[0x7];                                     // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UHorizontalBoxSlot*                     CallFunc_SlotAsHorizontalBoxSlot_ReturnValue;      // 0x0060(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Cooking_Minigame_RollingPin_C_OnMinigameLinked) == 0x000008, "Wrong alignment on WBP_Cooking_Minigame_RollingPin_C_OnMinigameLinked");
static_assert(sizeof(WBP_Cooking_Minigame_RollingPin_C_OnMinigameLinked) == 0x000068, "Wrong size on WBP_Cooking_Minigame_RollingPin_C_OnMinigameLinked");
static_assert(offsetof(WBP_Cooking_Minigame_RollingPin_C_OnMinigameLinked, Crafter) == 0x000000, "Member 'WBP_Cooking_Minigame_RollingPin_C_OnMinigameLinked::Crafter' has a wrong offset!");
static_assert(offsetof(WBP_Cooking_Minigame_RollingPin_C_OnMinigameLinked, CallFunc_IsFTUEOpen_IsOpen) == 0x000008, "Member 'WBP_Cooking_Minigame_RollingPin_C_OnMinigameLinked::CallFunc_IsFTUEOpen_IsOpen' has a wrong offset!");
static_assert(offsetof(WBP_Cooking_Minigame_RollingPin_C_OnMinigameLinked, CallFunc_Not_PreBool_ReturnValue) == 0x000009, "Member 'WBP_Cooking_Minigame_RollingPin_C_OnMinigameLinked::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Cooking_Minigame_RollingPin_C_OnMinigameLinked, CallFunc_IsFTUEOpen_IsOpen_1) == 0x00000A, "Member 'WBP_Cooking_Minigame_RollingPin_C_OnMinigameLinked::CallFunc_IsFTUEOpen_IsOpen_1' has a wrong offset!");
static_assert(offsetof(WBP_Cooking_Minigame_RollingPin_C_OnMinigameLinked, Temp_int_Loop_Counter_Variable) == 0x00000C, "Member 'WBP_Cooking_Minigame_RollingPin_C_OnMinigameLinked::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Cooking_Minigame_RollingPin_C_OnMinigameLinked, CallFunc_Add_IntInt_ReturnValue) == 0x000010, "Member 'WBP_Cooking_Minigame_RollingPin_C_OnMinigameLinked::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Cooking_Minigame_RollingPin_C_OnMinigameLinked, K2Node_MakeStruct_Margin) == 0x000014, "Member 'WBP_Cooking_Minigame_RollingPin_C_OnMinigameLinked::K2Node_MakeStruct_Margin' has a wrong offset!");
static_assert(offsetof(WBP_Cooking_Minigame_RollingPin_C_OnMinigameLinked, CallFunc_GetAllChildren_ReturnValue) == 0x000028, "Member 'WBP_Cooking_Minigame_RollingPin_C_OnMinigameLinked::CallFunc_GetAllChildren_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Cooking_Minigame_RollingPin_C_OnMinigameLinked, CallFunc_Array_Length_ReturnValue) == 0x000038, "Member 'WBP_Cooking_Minigame_RollingPin_C_OnMinigameLinked::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Cooking_Minigame_RollingPin_C_OnMinigameLinked, CallFunc_Less_IntInt_ReturnValue) == 0x00003C, "Member 'WBP_Cooking_Minigame_RollingPin_C_OnMinigameLinked::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Cooking_Minigame_RollingPin_C_OnMinigameLinked, Temp_int_Array_Index_Variable) == 0x000040, "Member 'WBP_Cooking_Minigame_RollingPin_C_OnMinigameLinked::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Cooking_Minigame_RollingPin_C_OnMinigameLinked, CallFunc_Array_Get_Item) == 0x000048, "Member 'WBP_Cooking_Minigame_RollingPin_C_OnMinigameLinked::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_Cooking_Minigame_RollingPin_C_OnMinigameLinked, K2Node_DynamicCast_AsWBP_Cooking_Minigame_Chopping_Progress_Marker) == 0x000050, "Member 'WBP_Cooking_Minigame_RollingPin_C_OnMinigameLinked::K2Node_DynamicCast_AsWBP_Cooking_Minigame_Chopping_Progress_Marker' has a wrong offset!");
static_assert(offsetof(WBP_Cooking_Minigame_RollingPin_C_OnMinigameLinked, K2Node_DynamicCast_bSuccess) == 0x000058, "Member 'WBP_Cooking_Minigame_RollingPin_C_OnMinigameLinked::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_Cooking_Minigame_RollingPin_C_OnMinigameLinked, CallFunc_SlotAsHorizontalBoxSlot_ReturnValue) == 0x000060, "Member 'WBP_Cooking_Minigame_RollingPin_C_OnMinigameLinked::CallFunc_SlotAsHorizontalBoxSlot_ReturnValue' has a wrong offset!");

// Function WBP_Cooking_Minigame_RollingPin.WBP_Cooking_Minigame_RollingPin_C.OnMinigameLinkedAndUIFocus
// 0x0005 (0x0005 - 0x0000)
struct WBP_Cooking_Minigame_RollingPin_C_OnMinigameLinkedAndUIFocus final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPaused_ReturnValue;                     // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPlaying_ReturnValue;                    // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Cooking_Minigame_RollingPin_C_OnMinigameLinkedAndUIFocus) == 0x000001, "Wrong alignment on WBP_Cooking_Minigame_RollingPin_C_OnMinigameLinkedAndUIFocus");
static_assert(sizeof(WBP_Cooking_Minigame_RollingPin_C_OnMinigameLinkedAndUIFocus) == 0x000005, "Wrong size on WBP_Cooking_Minigame_RollingPin_C_OnMinigameLinkedAndUIFocus");
static_assert(offsetof(WBP_Cooking_Minigame_RollingPin_C_OnMinigameLinkedAndUIFocus, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'WBP_Cooking_Minigame_RollingPin_C_OnMinigameLinkedAndUIFocus::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Cooking_Minigame_RollingPin_C_OnMinigameLinkedAndUIFocus, CallFunc_IsPaused_ReturnValue) == 0x000001, "Member 'WBP_Cooking_Minigame_RollingPin_C_OnMinigameLinkedAndUIFocus::CallFunc_IsPaused_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Cooking_Minigame_RollingPin_C_OnMinigameLinkedAndUIFocus, CallFunc_Not_PreBool_ReturnValue) == 0x000002, "Member 'WBP_Cooking_Minigame_RollingPin_C_OnMinigameLinkedAndUIFocus::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Cooking_Minigame_RollingPin_C_OnMinigameLinkedAndUIFocus, CallFunc_IsPlaying_ReturnValue) == 0x000003, "Member 'WBP_Cooking_Minigame_RollingPin_C_OnMinigameLinkedAndUIFocus::CallFunc_IsPlaying_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Cooking_Minigame_RollingPin_C_OnMinigameLinkedAndUIFocus, CallFunc_BooleanAND_ReturnValue) == 0x000004, "Member 'WBP_Cooking_Minigame_RollingPin_C_OnMinigameLinkedAndUIFocus::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function WBP_Cooking_Minigame_RollingPin.WBP_Cooking_Minigame_RollingPin_C.SetMarkerPosition
// 0x0078 (0x0078 - 0x0000)
struct WBP_Cooking_Minigame_RollingPin_C_SetMarkerPosition final
{
public:
	double                                        CallFunc_GetMarkerWidth_Width;                     // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UOverlaySlot*                           CallFunc_SlotAsOverlaySlot_ReturnValue;            // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FMargin                                K2Node_Copy_ReturnValue;                           // 0x0020(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	double                                        CallFunc_GetMarkerTravelRange_Range;               // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetCursorPosition_ReturnValue;            // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5A0C[0x4];                                     // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_2;      // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_1;           // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FMargin                                K2Node_SetFieldsInStruct_StructOut;                // 0x0058(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	double                                        CallFunc_Multiply_DoubleDouble_B_ImplicitCast;     // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_SetFieldsInStruct_Right_ImplicitCast;       // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Cooking_Minigame_RollingPin_C_SetMarkerPosition) == 0x000008, "Wrong alignment on WBP_Cooking_Minigame_RollingPin_C_SetMarkerPosition");
static_assert(sizeof(WBP_Cooking_Minigame_RollingPin_C_SetMarkerPosition) == 0x000078, "Wrong size on WBP_Cooking_Minigame_RollingPin_C_SetMarkerPosition");
static_assert(offsetof(WBP_Cooking_Minigame_RollingPin_C_SetMarkerPosition, CallFunc_GetMarkerWidth_Width) == 0x000000, "Member 'WBP_Cooking_Minigame_RollingPin_C_SetMarkerPosition::CallFunc_GetMarkerWidth_Width' has a wrong offset!");
static_assert(offsetof(WBP_Cooking_Minigame_RollingPin_C_SetMarkerPosition, CallFunc_SlotAsOverlaySlot_ReturnValue) == 0x000008, "Member 'WBP_Cooking_Minigame_RollingPin_C_SetMarkerPosition::CallFunc_SlotAsOverlaySlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Cooking_Minigame_RollingPin_C_SetMarkerPosition, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000010, "Member 'WBP_Cooking_Minigame_RollingPin_C_SetMarkerPosition::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Cooking_Minigame_RollingPin_C_SetMarkerPosition, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000018, "Member 'WBP_Cooking_Minigame_RollingPin_C_SetMarkerPosition::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_Cooking_Minigame_RollingPin_C_SetMarkerPosition, K2Node_Copy_ReturnValue) == 0x000020, "Member 'WBP_Cooking_Minigame_RollingPin_C_SetMarkerPosition::K2Node_Copy_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Cooking_Minigame_RollingPin_C_SetMarkerPosition, CallFunc_GetMarkerTravelRange_Range) == 0x000030, "Member 'WBP_Cooking_Minigame_RollingPin_C_SetMarkerPosition::CallFunc_GetMarkerTravelRange_Range' has a wrong offset!");
static_assert(offsetof(WBP_Cooking_Minigame_RollingPin_C_SetMarkerPosition, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000038, "Member 'WBP_Cooking_Minigame_RollingPin_C_SetMarkerPosition::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Cooking_Minigame_RollingPin_C_SetMarkerPosition, CallFunc_GetCursorPosition_ReturnValue) == 0x000040, "Member 'WBP_Cooking_Minigame_RollingPin_C_SetMarkerPosition::CallFunc_GetCursorPosition_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Cooking_Minigame_RollingPin_C_SetMarkerPosition, CallFunc_Multiply_DoubleDouble_ReturnValue_2) == 0x000048, "Member 'WBP_Cooking_Minigame_RollingPin_C_SetMarkerPosition::CallFunc_Multiply_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_Cooking_Minigame_RollingPin_C_SetMarkerPosition, CallFunc_Add_DoubleDouble_ReturnValue_1) == 0x000050, "Member 'WBP_Cooking_Minigame_RollingPin_C_SetMarkerPosition::CallFunc_Add_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_Cooking_Minigame_RollingPin_C_SetMarkerPosition, K2Node_SetFieldsInStruct_StructOut) == 0x000058, "Member 'WBP_Cooking_Minigame_RollingPin_C_SetMarkerPosition::K2Node_SetFieldsInStruct_StructOut' has a wrong offset!");
static_assert(offsetof(WBP_Cooking_Minigame_RollingPin_C_SetMarkerPosition, CallFunc_Multiply_DoubleDouble_B_ImplicitCast) == 0x000068, "Member 'WBP_Cooking_Minigame_RollingPin_C_SetMarkerPosition::CallFunc_Multiply_DoubleDouble_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(WBP_Cooking_Minigame_RollingPin_C_SetMarkerPosition, K2Node_SetFieldsInStruct_Right_ImplicitCast) == 0x000070, "Member 'WBP_Cooking_Minigame_RollingPin_C_SetMarkerPosition::K2Node_SetFieldsInStruct_Right_ImplicitCast' has a wrong offset!");

// Function WBP_Cooking_Minigame_RollingPin.WBP_Cooking_Minigame_RollingPin_C.SuccessfulInputReceived
// 0x0068 (0x0068 - 0x0000)
struct WBP_Cooking_Minigame_RollingPin_C_SuccessfulInputReceived final
{
public:
	class UMinigameComponentMasterQTE*            Comp;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUMGSequencePlayMode                          Temp_byte_Variable;                                // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUMGSequencePlayMode                          Temp_byte_Variable_1;                              // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5A0D[0x5];                                     // 0x000B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_Cooking_Minigame_RollingPin_GoalPost_C* CallFunc_GetClosestGoalPost_Marker;                // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5A0E[0x7];                                     // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_MapRangeClamped_ReturnValue;              // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUMGSequencePlayMode                          K2Node_Select_Default;                             // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5A0F[0x7];                                     // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue_1;            // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationForward_ReturnValue;         // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_Value_ImplicitCast;       // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_PlayAnimation_PlaybackSpeed_ImplicitCast; // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5A10[0x4];                                     // 0x0054(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_MapRangeClamped_Value_ImplicitCast_1;     // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_PlayAnimationForward_PlaybackSpeed_ImplicitCast; // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Cooking_Minigame_RollingPin_C_SuccessfulInputReceived) == 0x000008, "Wrong alignment on WBP_Cooking_Minigame_RollingPin_C_SuccessfulInputReceived");
static_assert(sizeof(WBP_Cooking_Minigame_RollingPin_C_SuccessfulInputReceived) == 0x000068, "Wrong size on WBP_Cooking_Minigame_RollingPin_C_SuccessfulInputReceived");
static_assert(offsetof(WBP_Cooking_Minigame_RollingPin_C_SuccessfulInputReceived, Comp) == 0x000000, "Member 'WBP_Cooking_Minigame_RollingPin_C_SuccessfulInputReceived::Comp' has a wrong offset!");
static_assert(offsetof(WBP_Cooking_Minigame_RollingPin_C_SuccessfulInputReceived, Temp_bool_Variable) == 0x000008, "Member 'WBP_Cooking_Minigame_RollingPin_C_SuccessfulInputReceived::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Cooking_Minigame_RollingPin_C_SuccessfulInputReceived, Temp_byte_Variable) == 0x000009, "Member 'WBP_Cooking_Minigame_RollingPin_C_SuccessfulInputReceived::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Cooking_Minigame_RollingPin_C_SuccessfulInputReceived, Temp_byte_Variable_1) == 0x00000A, "Member 'WBP_Cooking_Minigame_RollingPin_C_SuccessfulInputReceived::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_Cooking_Minigame_RollingPin_C_SuccessfulInputReceived, CallFunc_GetClosestGoalPost_Marker) == 0x000010, "Member 'WBP_Cooking_Minigame_RollingPin_C_SuccessfulInputReceived::CallFunc_GetClosestGoalPost_Marker' has a wrong offset!");
static_assert(offsetof(WBP_Cooking_Minigame_RollingPin_C_SuccessfulInputReceived, CallFunc_Not_PreBool_ReturnValue) == 0x000018, "Member 'WBP_Cooking_Minigame_RollingPin_C_SuccessfulInputReceived::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Cooking_Minigame_RollingPin_C_SuccessfulInputReceived, CallFunc_MapRangeClamped_ReturnValue) == 0x000020, "Member 'WBP_Cooking_Minigame_RollingPin_C_SuccessfulInputReceived::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Cooking_Minigame_RollingPin_C_SuccessfulInputReceived, K2Node_Select_Default) == 0x000028, "Member 'WBP_Cooking_Minigame_RollingPin_C_SuccessfulInputReceived::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_Cooking_Minigame_RollingPin_C_SuccessfulInputReceived, CallFunc_PlayAnimation_ReturnValue) == 0x000030, "Member 'WBP_Cooking_Minigame_RollingPin_C_SuccessfulInputReceived::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Cooking_Minigame_RollingPin_C_SuccessfulInputReceived, CallFunc_MapRangeClamped_ReturnValue_1) == 0x000038, "Member 'WBP_Cooking_Minigame_RollingPin_C_SuccessfulInputReceived::CallFunc_MapRangeClamped_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_Cooking_Minigame_RollingPin_C_SuccessfulInputReceived, CallFunc_PlayAnimationForward_ReturnValue) == 0x000040, "Member 'WBP_Cooking_Minigame_RollingPin_C_SuccessfulInputReceived::CallFunc_PlayAnimationForward_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Cooking_Minigame_RollingPin_C_SuccessfulInputReceived, CallFunc_MapRangeClamped_Value_ImplicitCast) == 0x000048, "Member 'WBP_Cooking_Minigame_RollingPin_C_SuccessfulInputReceived::CallFunc_MapRangeClamped_Value_ImplicitCast' has a wrong offset!");
static_assert(offsetof(WBP_Cooking_Minigame_RollingPin_C_SuccessfulInputReceived, CallFunc_PlayAnimation_PlaybackSpeed_ImplicitCast) == 0x000050, "Member 'WBP_Cooking_Minigame_RollingPin_C_SuccessfulInputReceived::CallFunc_PlayAnimation_PlaybackSpeed_ImplicitCast' has a wrong offset!");
static_assert(offsetof(WBP_Cooking_Minigame_RollingPin_C_SuccessfulInputReceived, CallFunc_MapRangeClamped_Value_ImplicitCast_1) == 0x000058, "Member 'WBP_Cooking_Minigame_RollingPin_C_SuccessfulInputReceived::CallFunc_MapRangeClamped_Value_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(WBP_Cooking_Minigame_RollingPin_C_SuccessfulInputReceived, CallFunc_PlayAnimationForward_PlaybackSpeed_ImplicitCast) == 0x000060, "Member 'WBP_Cooking_Minigame_RollingPin_C_SuccessfulInputReceived::CallFunc_PlayAnimationForward_PlaybackSpeed_ImplicitCast' has a wrong offset!");

// Function WBP_Cooking_Minigame_RollingPin.WBP_Cooking_Minigame_RollingPin_C.Tick
// 0x003C (0x003C - 0x0000)
struct WBP_Cooking_Minigame_RollingPin_C_Tick final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	float                                         InDeltaTime;                                       // 0x0038(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Cooking_Minigame_RollingPin_C_Tick) == 0x000004, "Wrong alignment on WBP_Cooking_Minigame_RollingPin_C_Tick");
static_assert(sizeof(WBP_Cooking_Minigame_RollingPin_C_Tick) == 0x00003C, "Wrong size on WBP_Cooking_Minigame_RollingPin_C_Tick");
static_assert(offsetof(WBP_Cooking_Minigame_RollingPin_C_Tick, MyGeometry) == 0x000000, "Member 'WBP_Cooking_Minigame_RollingPin_C_Tick::MyGeometry' has a wrong offset!");
static_assert(offsetof(WBP_Cooking_Minigame_RollingPin_C_Tick, InDeltaTime) == 0x000038, "Member 'WBP_Cooking_Minigame_RollingPin_C_Tick::InDeltaTime' has a wrong offset!");

// Function WBP_Cooking_Minigame_RollingPin.WBP_Cooking_Minigame_RollingPin_C.UpdateSuccessCount
// 0x00A8 (0x00A8 - 0x0000)
struct WBP_Cooking_Minigame_RollingPin_C_UpdateSuccessCount final
{
public:
	bool                                          UpdateRightNow;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CachedFinished;                                    // 0x0001(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5A11[0x2];                                     // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CachedSuccess;                                     // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Alpha;                                             // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5A12[0x2];                                     // 0x0012(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWidget*                                CallFunc_GetChildAt_ReturnValue;                   // 0x0018(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UWBP_Cooking_Minigame_Chopping_ProgressMarker_C* K2Node_DynamicCast_AsWBP_Cooking_Minigame_Chopping_Progress_Marker; // 0x0020(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5A13[0x3];                                     // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetChildrenCount_ReturnValue;             // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0032(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5A14[0x5];                                     // 0x0033(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UTextBlock*                             K2Node_Select_Default;                             // 0x0038(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5A15[0x7];                                     // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_IntToString_ReturnValue;             // 0x0048(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0058(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5A16[0x7];                                     // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_IntToString_ReturnValue_1;           // 0x0070(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x0080(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0090(0x0018)()
};
static_assert(alignof(WBP_Cooking_Minigame_RollingPin_C_UpdateSuccessCount) == 0x000008, "Wrong alignment on WBP_Cooking_Minigame_RollingPin_C_UpdateSuccessCount");
static_assert(sizeof(WBP_Cooking_Minigame_RollingPin_C_UpdateSuccessCount) == 0x0000A8, "Wrong size on WBP_Cooking_Minigame_RollingPin_C_UpdateSuccessCount");
static_assert(offsetof(WBP_Cooking_Minigame_RollingPin_C_UpdateSuccessCount, UpdateRightNow) == 0x000000, "Member 'WBP_Cooking_Minigame_RollingPin_C_UpdateSuccessCount::UpdateRightNow' has a wrong offset!");
static_assert(offsetof(WBP_Cooking_Minigame_RollingPin_C_UpdateSuccessCount, CachedFinished) == 0x000001, "Member 'WBP_Cooking_Minigame_RollingPin_C_UpdateSuccessCount::CachedFinished' has a wrong offset!");
static_assert(offsetof(WBP_Cooking_Minigame_RollingPin_C_UpdateSuccessCount, CachedSuccess) == 0x000004, "Member 'WBP_Cooking_Minigame_RollingPin_C_UpdateSuccessCount::CachedSuccess' has a wrong offset!");
static_assert(offsetof(WBP_Cooking_Minigame_RollingPin_C_UpdateSuccessCount, Alpha) == 0x000008, "Member 'WBP_Cooking_Minigame_RollingPin_C_UpdateSuccessCount::Alpha' has a wrong offset!");
static_assert(offsetof(WBP_Cooking_Minigame_RollingPin_C_UpdateSuccessCount, CallFunc_Not_PreBool_ReturnValue) == 0x000010, "Member 'WBP_Cooking_Minigame_RollingPin_C_UpdateSuccessCount::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Cooking_Minigame_RollingPin_C_UpdateSuccessCount, CallFunc_BooleanAND_ReturnValue) == 0x000011, "Member 'WBP_Cooking_Minigame_RollingPin_C_UpdateSuccessCount::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Cooking_Minigame_RollingPin_C_UpdateSuccessCount, CallFunc_Subtract_IntInt_ReturnValue) == 0x000014, "Member 'WBP_Cooking_Minigame_RollingPin_C_UpdateSuccessCount::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Cooking_Minigame_RollingPin_C_UpdateSuccessCount, CallFunc_GetChildAt_ReturnValue) == 0x000018, "Member 'WBP_Cooking_Minigame_RollingPin_C_UpdateSuccessCount::CallFunc_GetChildAt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Cooking_Minigame_RollingPin_C_UpdateSuccessCount, K2Node_DynamicCast_AsWBP_Cooking_Minigame_Chopping_Progress_Marker) == 0x000020, "Member 'WBP_Cooking_Minigame_RollingPin_C_UpdateSuccessCount::K2Node_DynamicCast_AsWBP_Cooking_Minigame_Chopping_Progress_Marker' has a wrong offset!");
static_assert(offsetof(WBP_Cooking_Minigame_RollingPin_C_UpdateSuccessCount, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'WBP_Cooking_Minigame_RollingPin_C_UpdateSuccessCount::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_Cooking_Minigame_RollingPin_C_UpdateSuccessCount, CallFunc_GetChildrenCount_ReturnValue) == 0x00002C, "Member 'WBP_Cooking_Minigame_RollingPin_C_UpdateSuccessCount::CallFunc_GetChildrenCount_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Cooking_Minigame_RollingPin_C_UpdateSuccessCount, Temp_bool_Variable) == 0x000030, "Member 'WBP_Cooking_Minigame_RollingPin_C_UpdateSuccessCount::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Cooking_Minigame_RollingPin_C_UpdateSuccessCount, CallFunc_Greater_IntInt_ReturnValue) == 0x000031, "Member 'WBP_Cooking_Minigame_RollingPin_C_UpdateSuccessCount::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Cooking_Minigame_RollingPin_C_UpdateSuccessCount, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000032, "Member 'WBP_Cooking_Minigame_RollingPin_C_UpdateSuccessCount::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Cooking_Minigame_RollingPin_C_UpdateSuccessCount, K2Node_Select_Default) == 0x000038, "Member 'WBP_Cooking_Minigame_RollingPin_C_UpdateSuccessCount::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_Cooking_Minigame_RollingPin_C_UpdateSuccessCount, CallFunc_BooleanAND_ReturnValue_1) == 0x000040, "Member 'WBP_Cooking_Minigame_RollingPin_C_UpdateSuccessCount::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_Cooking_Minigame_RollingPin_C_UpdateSuccessCount, CallFunc_Conv_IntToString_ReturnValue) == 0x000048, "Member 'WBP_Cooking_Minigame_RollingPin_C_UpdateSuccessCount::CallFunc_Conv_IntToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Cooking_Minigame_RollingPin_C_UpdateSuccessCount, CallFunc_Concat_StrStr_ReturnValue) == 0x000058, "Member 'WBP_Cooking_Minigame_RollingPin_C_UpdateSuccessCount::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Cooking_Minigame_RollingPin_C_UpdateSuccessCount, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000068, "Member 'WBP_Cooking_Minigame_RollingPin_C_UpdateSuccessCount::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Cooking_Minigame_RollingPin_C_UpdateSuccessCount, CallFunc_Conv_IntToString_ReturnValue_1) == 0x000070, "Member 'WBP_Cooking_Minigame_RollingPin_C_UpdateSuccessCount::CallFunc_Conv_IntToString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_Cooking_Minigame_RollingPin_C_UpdateSuccessCount, CallFunc_Concat_StrStr_ReturnValue_1) == 0x000080, "Member 'WBP_Cooking_Minigame_RollingPin_C_UpdateSuccessCount::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_Cooking_Minigame_RollingPin_C_UpdateSuccessCount, CallFunc_Conv_StringToText_ReturnValue) == 0x000090, "Member 'WBP_Cooking_Minigame_RollingPin_C_UpdateSuccessCount::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");

}

