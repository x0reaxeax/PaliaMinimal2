#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_ActionBar

#include "Basic.hpp"

#include "Palia_structs.hpp"
#include "CommonInput_structs.hpp"
#include "EnhancedInput_structs.hpp"
#include "SlateCore_structs.hpp"
#include "UMG_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "GameplayTags_structs.hpp"


namespace SDK::Params
{

// Function WBP_ActionBar.WBP_ActionBar_C.BndEvt__MenuAnchor_Popin_K2Node_ComponentBoundEvent_1_OnMenuOpenChangedEvent__DelegateSignature
// 0x0001 (0x0001 - 0x0000)
struct WBP_ActionBar_C_BndEvt__MenuAnchor_Popin_K2Node_ComponentBoundEvent_1_OnMenuOpenChangedEvent__DelegateSignature final
{
public:
	bool                                          bIsOpen;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ActionBar_C_BndEvt__MenuAnchor_Popin_K2Node_ComponentBoundEvent_1_OnMenuOpenChangedEvent__DelegateSignature) == 0x000001, "Wrong alignment on WBP_ActionBar_C_BndEvt__MenuAnchor_Popin_K2Node_ComponentBoundEvent_1_OnMenuOpenChangedEvent__DelegateSignature");
static_assert(sizeof(WBP_ActionBar_C_BndEvt__MenuAnchor_Popin_K2Node_ComponentBoundEvent_1_OnMenuOpenChangedEvent__DelegateSignature) == 0x000001, "Wrong size on WBP_ActionBar_C_BndEvt__MenuAnchor_Popin_K2Node_ComponentBoundEvent_1_OnMenuOpenChangedEvent__DelegateSignature");
static_assert(offsetof(WBP_ActionBar_C_BndEvt__MenuAnchor_Popin_K2Node_ComponentBoundEvent_1_OnMenuOpenChangedEvent__DelegateSignature, bIsOpen) == 0x000000, "Member 'WBP_ActionBar_C_BndEvt__MenuAnchor_Popin_K2Node_ComponentBoundEvent_1_OnMenuOpenChangedEvent__DelegateSignature::bIsOpen' has a wrong offset!");

// Function WBP_ActionBar.WBP_ActionBar_C.CheckNextSlot
// 0x0120 (0x0120 - 0x0000)
struct WBP_ActionBar_C_CheckNextSlot final
{
public:
	int32                                         NextSlot;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4FA6[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UInventoryComponent*                    InvComponent;                                      // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         OutIndex;                                          // 0x0010(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         OutSlotIndex;                                      // 0x0014(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x001B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_1;          // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4FA7[0x3];                                     // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4FA8[0x3];                                     // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FBagSlotLocation                       CallFunc_GetLocationAtActionBarIndex_ReturnValue;  // 0x0030(0x0008)(NoDestructor)
	struct FValeriaItem                           CallFunc_GetItemAt_ReturnValue;                    // 0x0038(0x0060)()
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ItemIsEmpty_ReturnValue;                  // 0x0099(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x009A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4FA9[0x1];                                     // 0x009B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_2;                               // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Select_Default;                             // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FBagSlotLocation                       CallFunc_GetLocationAtActionBarIndex_ReturnValue_1; // 0x00A8(0x0008)(NoDestructor)
	struct FValeriaItem                           CallFunc_GetItemAt_ReturnValue_1;                  // 0x00B0(0x0060)()
	bool                                          CallFunc_ItemIsEmpty_ReturnValue_1;                // 0x0110(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4FAA[0x3];                                     // 0x0111(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0114(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x0118(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_1;           // 0x0119(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x011A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x011B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ActionBar_C_CheckNextSlot) == 0x000008, "Wrong alignment on WBP_ActionBar_C_CheckNextSlot");
static_assert(sizeof(WBP_ActionBar_C_CheckNextSlot) == 0x000120, "Wrong size on WBP_ActionBar_C_CheckNextSlot");
static_assert(offsetof(WBP_ActionBar_C_CheckNextSlot, NextSlot) == 0x000000, "Member 'WBP_ActionBar_C_CheckNextSlot::NextSlot' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_CheckNextSlot, InvComponent) == 0x000008, "Member 'WBP_ActionBar_C_CheckNextSlot::InvComponent' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_CheckNextSlot, OutIndex) == 0x000010, "Member 'WBP_ActionBar_C_CheckNextSlot::OutIndex' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_CheckNextSlot, OutSlotIndex) == 0x000014, "Member 'WBP_ActionBar_C_CheckNextSlot::OutSlotIndex' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_CheckNextSlot, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000018, "Member 'WBP_ActionBar_C_CheckNextSlot::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_CheckNextSlot, Temp_bool_Variable) == 0x000019, "Member 'WBP_ActionBar_C_CheckNextSlot::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_CheckNextSlot, CallFunc_Not_PreBool_ReturnValue) == 0x00001A, "Member 'WBP_ActionBar_C_CheckNextSlot::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_CheckNextSlot, CallFunc_NotEqual_IntInt_ReturnValue) == 0x00001B, "Member 'WBP_ActionBar_C_CheckNextSlot::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_CheckNextSlot, CallFunc_EqualEqual_IntInt_ReturnValue_1) == 0x00001C, "Member 'WBP_ActionBar_C_CheckNextSlot::CallFunc_EqualEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_CheckNextSlot, Temp_int_Variable) == 0x000020, "Member 'WBP_ActionBar_C_CheckNextSlot::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_CheckNextSlot, CallFunc_Add_IntInt_ReturnValue) == 0x000024, "Member 'WBP_ActionBar_C_CheckNextSlot::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_CheckNextSlot, Temp_int_Variable_1) == 0x000028, "Member 'WBP_ActionBar_C_CheckNextSlot::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_CheckNextSlot, Temp_bool_Variable_1) == 0x00002C, "Member 'WBP_ActionBar_C_CheckNextSlot::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_CheckNextSlot, CallFunc_GetLocationAtActionBarIndex_ReturnValue) == 0x000030, "Member 'WBP_ActionBar_C_CheckNextSlot::CallFunc_GetLocationAtActionBarIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_CheckNextSlot, CallFunc_GetItemAt_ReturnValue) == 0x000038, "Member 'WBP_ActionBar_C_CheckNextSlot::CallFunc_GetItemAt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_CheckNextSlot, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000098, "Member 'WBP_ActionBar_C_CheckNextSlot::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_CheckNextSlot, CallFunc_ItemIsEmpty_ReturnValue) == 0x000099, "Member 'WBP_ActionBar_C_CheckNextSlot::CallFunc_ItemIsEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_CheckNextSlot, CallFunc_Not_PreBool_ReturnValue_1) == 0x00009A, "Member 'WBP_ActionBar_C_CheckNextSlot::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_CheckNextSlot, CallFunc_Add_IntInt_ReturnValue_1) == 0x00009C, "Member 'WBP_ActionBar_C_CheckNextSlot::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_CheckNextSlot, Temp_int_Variable_2) == 0x0000A0, "Member 'WBP_ActionBar_C_CheckNextSlot::Temp_int_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_CheckNextSlot, K2Node_Select_Default) == 0x0000A4, "Member 'WBP_ActionBar_C_CheckNextSlot::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_CheckNextSlot, CallFunc_GetLocationAtActionBarIndex_ReturnValue_1) == 0x0000A8, "Member 'WBP_ActionBar_C_CheckNextSlot::CallFunc_GetLocationAtActionBarIndex_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_CheckNextSlot, CallFunc_GetItemAt_ReturnValue_1) == 0x0000B0, "Member 'WBP_ActionBar_C_CheckNextSlot::CallFunc_GetItemAt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_CheckNextSlot, CallFunc_ItemIsEmpty_ReturnValue_1) == 0x000110, "Member 'WBP_ActionBar_C_CheckNextSlot::CallFunc_ItemIsEmpty_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_CheckNextSlot, CallFunc_Subtract_IntInt_ReturnValue) == 0x000114, "Member 'WBP_ActionBar_C_CheckNextSlot::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_CheckNextSlot, CallFunc_Not_PreBool_ReturnValue_2) == 0x000118, "Member 'WBP_ActionBar_C_CheckNextSlot::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_CheckNextSlot, CallFunc_LessEqual_IntInt_ReturnValue_1) == 0x000119, "Member 'WBP_ActionBar_C_CheckNextSlot::CallFunc_LessEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_CheckNextSlot, CallFunc_BooleanAND_ReturnValue) == 0x00011A, "Member 'WBP_ActionBar_C_CheckNextSlot::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_CheckNextSlot, CallFunc_Greater_IntInt_ReturnValue) == 0x00011B, "Member 'WBP_ActionBar_C_CheckNextSlot::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");

// Function WBP_ActionBar.WBP_ActionBar_C.CreateActionBarButtons
// 0x0060 (0x0060 - 0x0000)
struct WBP_ActionBar_C_CreateActionBarButtons final
{
public:
	struct FMargin                                K2Node_MakeStruct_Margin;                          // 0x0000(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         Temp_int_Variable;                                 // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FAdditionalEnsureWidgetsOptions        K2Node_MakeStruct_AdditionalEnsureWidgetsOptions;  // 0x0014(0x0028)(NoDestructor)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetChildrenCount_ReturnValue;             // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4FAB[0x3];                                     // 0x0045(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                CallFunc_GetChildAt_ReturnValue;                   // 0x0048(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UWBP_ActionBarSlot_C*                   K2Node_DynamicCast_AsWBP_Action_Bar_Slot;          // 0x0050(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ActionBar_C_CreateActionBarButtons) == 0x000008, "Wrong alignment on WBP_ActionBar_C_CreateActionBarButtons");
static_assert(sizeof(WBP_ActionBar_C_CreateActionBarButtons) == 0x000060, "Wrong size on WBP_ActionBar_C_CreateActionBarButtons");
static_assert(offsetof(WBP_ActionBar_C_CreateActionBarButtons, K2Node_MakeStruct_Margin) == 0x000000, "Member 'WBP_ActionBar_C_CreateActionBarButtons::K2Node_MakeStruct_Margin' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_CreateActionBarButtons, Temp_int_Variable) == 0x000010, "Member 'WBP_ActionBar_C_CreateActionBarButtons::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_CreateActionBarButtons, K2Node_MakeStruct_AdditionalEnsureWidgetsOptions) == 0x000014, "Member 'WBP_ActionBar_C_CreateActionBarButtons::K2Node_MakeStruct_AdditionalEnsureWidgetsOptions' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_CreateActionBarButtons, CallFunc_Add_IntInt_ReturnValue) == 0x00003C, "Member 'WBP_ActionBar_C_CreateActionBarButtons::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_CreateActionBarButtons, CallFunc_GetChildrenCount_ReturnValue) == 0x000040, "Member 'WBP_ActionBar_C_CreateActionBarButtons::CallFunc_GetChildrenCount_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_CreateActionBarButtons, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000044, "Member 'WBP_ActionBar_C_CreateActionBarButtons::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_CreateActionBarButtons, CallFunc_GetChildAt_ReturnValue) == 0x000048, "Member 'WBP_ActionBar_C_CreateActionBarButtons::CallFunc_GetChildAt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_CreateActionBarButtons, K2Node_DynamicCast_AsWBP_Action_Bar_Slot) == 0x000050, "Member 'WBP_ActionBar_C_CreateActionBarButtons::K2Node_DynamicCast_AsWBP_Action_Bar_Slot' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_CreateActionBarButtons, K2Node_DynamicCast_bSuccess) == 0x000058, "Member 'WBP_ActionBar_C_CreateActionBarButtons::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function WBP_ActionBar.WBP_ActionBar_C.Deselect Slot
// 0x0028 (0x0028 - 0x0000)
struct WBP_ActionBar_C_Deselect_Slot final
{
public:
	bool                                          ShouldUpdateEquipped;                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4FAC[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Param_Index;                                       // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ShouldRemoveHighlight;                             // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4FAD[0x7];                                     // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                CallFunc_GetChildAt_ReturnValue;                   // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UWBP_ActionBarSlot_C*                   K2Node_DynamicCast_AsWBP_Action_Bar_Slot;          // 0x0018(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetConsoleVariableBoolValue_ReturnValue;  // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ActionBar_C_Deselect_Slot) == 0x000008, "Wrong alignment on WBP_ActionBar_C_Deselect_Slot");
static_assert(sizeof(WBP_ActionBar_C_Deselect_Slot) == 0x000028, "Wrong size on WBP_ActionBar_C_Deselect_Slot");
static_assert(offsetof(WBP_ActionBar_C_Deselect_Slot, ShouldUpdateEquipped) == 0x000000, "Member 'WBP_ActionBar_C_Deselect_Slot::ShouldUpdateEquipped' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_Deselect_Slot, Param_Index) == 0x000004, "Member 'WBP_ActionBar_C_Deselect_Slot::Param_Index' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_Deselect_Slot, ShouldRemoveHighlight) == 0x000008, "Member 'WBP_ActionBar_C_Deselect_Slot::ShouldRemoveHighlight' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_Deselect_Slot, CallFunc_GetChildAt_ReturnValue) == 0x000010, "Member 'WBP_ActionBar_C_Deselect_Slot::CallFunc_GetChildAt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_Deselect_Slot, K2Node_DynamicCast_AsWBP_Action_Bar_Slot) == 0x000018, "Member 'WBP_ActionBar_C_Deselect_Slot::K2Node_DynamicCast_AsWBP_Action_Bar_Slot' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_Deselect_Slot, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'WBP_ActionBar_C_Deselect_Slot::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_Deselect_Slot, CallFunc_BooleanAND_ReturnValue) == 0x000021, "Member 'WBP_ActionBar_C_Deselect_Slot::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_Deselect_Slot, CallFunc_GetConsoleVariableBoolValue_ReturnValue) == 0x000022, "Member 'WBP_ActionBar_C_Deselect_Slot::CallFunc_GetConsoleVariableBoolValue_ReturnValue' has a wrong offset!");

// Function WBP_ActionBar.WBP_ActionBar_C.ExecuteUbergraph_WBP_ActionBar
// 0x0350 (0x0350 - 0x0000)
struct WBP_ActionBar_C_ExecuteUbergraph_WBP_ActionBar final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4FAE[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UVAL_TutorialFlagsManager*              CallFunc_GetLocalPlayerSubsystem_ReturnValue;      // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4FAF[0x3];                                     // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4FB0[0x3];                                     // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4FB1[0x4];                                     // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UInventoryComponent*                    K2Node_CustomEvent_Inventory;                      // 0x0030(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UWidget*                                CallFunc_GetChildAt_ReturnValue;                   // 0x0038(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UWBP_ActionBarSlot_C*                   K2Node_DynamicCast_AsWBP_Action_Bar_Slot;          // 0x0040(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4FB2[0x7];                                     // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UInventoryComponent*                    K2Node_CustomEvent_Inventory_1;                    // 0x0050(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_NewRowCount;                    // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CanStartTutorialForFlag_ReturnValue;      // 0x005C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_bIsOpen;                // 0x005D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4FB3[0x2];                                     // 0x005E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x0060(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UWBP_PopinCalloutWidget_C*              CallFunc_Create_ReturnValue;                       // 0x0068(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UValeriaGameUserSettings*               CallFunc_GetValeriaGameUserSettings_ReturnValue;   // 0x0070(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FValeriaGameplaySettings               K2Node_CustomEvent_GameplaySettings;               // 0x0078(0x0018)(ConstParm, NoDestructor)
	TDelegate<void(const struct FInputActionValue& ActionValue, float ElapsedTime, float TriggeredTime, class UInputAction* SourceAction)> K2Node_CreateDelegate_OutputDelegate;              // 0x0090(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGuid                                  CallFunc_RegisterInputActionBinding_ReturnValue;   // 0x00A0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(const struct FInputActionValue& ActionValue, float ElapsedTime, float TriggeredTime, class UInputAction* SourceAction)> K2Node_CreateDelegate_OutputDelegate_1;            // 0x00B0(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UVAL_TutorialFlagsManager*              CallFunc_GetLocalPlayerSubsystem_ReturnValue_1;    // 0x00C0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGuid                                  CallFunc_RegisterInputActionBinding_ReturnValue_1; // 0x00C8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(const struct FInputActionValue& ActionValue, float ElapsedTime, float TriggeredTime, class UInputAction* SourceAction)> K2Node_CreateDelegate_OutputDelegate_2;            // 0x00D8(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<class UInputAction*>                   K2Node_MakeArray_Array;                            // 0x00E8(0x0010)(ReferenceParm)
	TDelegate<void(const struct FInputActionValue& ActionValue, float ElapsedTime, float TriggeredTime, class UInputAction* SourceAction)> K2Node_CreateDelegate_OutputDelegate_3;            // 0x00F8(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0108(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(const struct FInputActionValue& ActionValue, float ElapsedTime, float TriggeredTime, class UInputAction* SourceAction)> K2Node_CreateDelegate_OutputDelegate_4;            // 0x010C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x011C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4FB4[0x3];                                     // 0x011D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(const struct FInputActionValue& ActionValue, float ElapsedTime, float TriggeredTime, class UInputAction* SourceAction)> K2Node_CreateDelegate_OutputDelegate_5;            // 0x0120(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(const struct FInputActionValue& ActionValue, float ElapsedTime, float TriggeredTime, class UInputAction* SourceAction)> K2Node_CreateDelegate_OutputDelegate_6;            // 0x0130(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(const struct FInputActionValue& ActionValue, float ElapsedTime, float TriggeredTime, class UInputAction* SourceAction)> K2Node_CreateDelegate_OutputDelegate_7;            // 0x0140(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(const struct FInputActionValue& ActionValue, float ElapsedTime, float TriggeredTime, class UInputAction* SourceAction)> K2Node_CreateDelegate_OutputDelegate_8;            // 0x0150(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(const struct FInputActionValue& ActionValue, float ElapsedTime, float TriggeredTime, class UInputAction* SourceAction)> K2Node_CreateDelegate_OutputDelegate_9;            // 0x0160(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0170(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4FB5[0x4];                                     // 0x0174(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UInputAction*                           CallFunc_Array_Get_Item;                           // 0x0178(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(const struct FInputActionValue& ActionValue, float ElapsedTime, float TriggeredTime, class UInputAction* SourceAction)> K2Node_CreateDelegate_OutputDelegate_10;           // 0x0180(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGuid                                  CallFunc_RegisterInputActionBinding_ReturnValue_2; // 0x0190(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(const struct FInputActionValue& ActionValue, float ElapsedTime, float TriggeredTime, class UInputAction* SourceAction)> K2Node_CreateDelegate_OutputDelegate_11;           // 0x01A0(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGuid                                  CallFunc_RegisterInputActionBinding_ReturnValue_3; // 0x01B0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x01C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4FB6[0x3];                                     // 0x01C1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(bool bIsActionBarActivated)>   K2Node_CreateDelegate_OutputDelegate_12;           // 0x01C4(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	EValeriaFuncResult                            CallFunc_GetValeriaCharacter_OutResult;            // 0x01D4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4FB7[0x3];                                     // 0x01D5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AValeriaCharacter*                      CallFunc_GetValeriaCharacter_ReturnValue;          // 0x01D8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UInventoryComponent* Inventory)> K2Node_CreateDelegate_OutputDelegate_13;           // 0x01E0(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UEquipmentComponent*                    CallFunc_GetEquipment_ReturnValue;                 // 0x01F0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x01F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4FB8[0x3];                                     // 0x01F9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class UEquipmentComponent* EquipmentComponent, const struct FEquipmentItem& Item)> K2Node_CreateDelegate_OutputDelegate_14;           // 0x01FC(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	EValeriaFuncResult                            CallFunc_GetValeriaCharacter_OutResult_1;          // 0x020C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4FB9[0x3];                                     // 0x020D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AValeriaCharacter*                      CallFunc_GetValeriaCharacter_ReturnValue_1;        // 0x0210(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UEquipmentComponent* EquipmentComponent, const struct FEquipmentItem& Item)> K2Node_CreateDelegate_OutputDelegate_15;           // 0x0218(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UEquipmentComponent*                    CallFunc_GetEquipment_ReturnValue_1;               // 0x0228(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess_1;                    // 0x0230(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4FBA[0x3];                                     // 0x0231(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class UEquipmentComponent* EquipmentComponent, bool bHidden)> K2Node_CreateDelegate_OutputDelegate_16;           // 0x0234(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UEquipmentComponent* EquipmentComponent, bool bHidden)> K2Node_CreateDelegate_OutputDelegate_17;           // 0x0244(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FText ErrorMessage)>     K2Node_CreateDelegate_OutputDelegate_18;           // 0x0254(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4FBB[0x4];                                     // 0x0264(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UVAL_TutorialFlagsManager*              CallFunc_GetLocalPlayerSubsystem_ReturnValue_2;    // 0x0268(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	EValeriaFuncResult                            CallFunc_GetValeriaCharacter_OutResult_2;          // 0x0270(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4FBC[0x7];                                     // 0x0271(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AValeriaCharacter*                      CallFunc_GetValeriaCharacter_ReturnValue_2;        // 0x0278(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPlayerInventoryComponent*              CallFunc_GetInventory_ReturnValue;                 // 0x0280(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess_2;                    // 0x0288(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4FBD[0x3];                                     // 0x0289(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetNumberOfActionBarRows_ReturnValue;     // 0x028C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UVAL_TutorialFlagsManager*              CallFunc_GetLocalPlayerSubsystem_ReturnValue_3;    // 0x0290(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CanStartTutorialForFlag_ReturnValue_1;    // 0x0298(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4FBE[0x3];                                     // 0x0299(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_1;                               // 0x029C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UEquipmentComponent* EquipmentComponent, const struct FEquipmentItem& Item)> K2Node_CreateDelegate_OutputDelegate_19;           // 0x02A0(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(const struct FInputActionValue& ActionValue, float ElapsedTime, float TriggeredTime, class UInputAction* SourceAction)> K2Node_Select_Default;                             // 0x02B0(0x0010)(ConstParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGuid                                  CallFunc_RegisterInputActionBinding_ReturnValue_4; // 0x02C0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UEquipmentComponent* EquipmentComponent, const struct FEquipmentItem& Item)> K2Node_CreateDelegate_OutputDelegate_20;           // 0x02D0(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(struct FValeriaGameplaySettings& GameplaySettings)> K2Node_CreateDelegate_OutputDelegate_21;           // 0x02E0(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UEquipmentComponent* EquipmentComponent, const struct FEquipmentItem& Item)> K2Node_CreateDelegate_OutputDelegate_22;           // 0x02F0(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetNumberOfActionBarRows_ReturnValue_1;   // 0x0300(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4FBF[0x4];                                     // 0x0304(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0308(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_bIsActionBarActivated;          // 0x0310(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4FC0[0x7];                                     // 0x0311(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class US6UI_UIManagerWidgetBase*              CallFunc_GetUIManagerWidget_ReturnValue;           // 0x0318(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_GameplayUIManagerTutorial_CM_C> K2Node_DynamicCast_AsBPI_Gameplay_UIManager_Tutorial_CM; // 0x0320(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0330(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4FC1[0x7];                                     // 0x0331(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_FTUEPopin_CM_C*                    CallFunc_Redirect_FTUEPopin_Type_FTUEPopin;        // 0x0338(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0340(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4FC2[0x7];                                     // 0x0341(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPanelSlot*                             CallFunc_SetContent_ReturnValue;                   // 0x0348(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ActionBar_C_ExecuteUbergraph_WBP_ActionBar) == 0x000008, "Wrong alignment on WBP_ActionBar_C_ExecuteUbergraph_WBP_ActionBar");
static_assert(sizeof(WBP_ActionBar_C_ExecuteUbergraph_WBP_ActionBar) == 0x000350, "Wrong size on WBP_ActionBar_C_ExecuteUbergraph_WBP_ActionBar");
static_assert(offsetof(WBP_ActionBar_C_ExecuteUbergraph_WBP_ActionBar, EntryPoint) == 0x000000, "Member 'WBP_ActionBar_C_ExecuteUbergraph_WBP_ActionBar::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_ExecuteUbergraph_WBP_ActionBar, Temp_int_Variable) == 0x000004, "Member 'WBP_ActionBar_C_ExecuteUbergraph_WBP_ActionBar::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_ExecuteUbergraph_WBP_ActionBar, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'WBP_ActionBar_C_ExecuteUbergraph_WBP_ActionBar::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_ExecuteUbergraph_WBP_ActionBar, CallFunc_GetLocalPlayerSubsystem_ReturnValue) == 0x000010, "Member 'WBP_ActionBar_C_ExecuteUbergraph_WBP_ActionBar::CallFunc_GetLocalPlayerSubsystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_ExecuteUbergraph_WBP_ActionBar, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'WBP_ActionBar_C_ExecuteUbergraph_WBP_ActionBar::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_ExecuteUbergraph_WBP_ActionBar, CallFunc_Subtract_IntInt_ReturnValue) == 0x00001C, "Member 'WBP_ActionBar_C_ExecuteUbergraph_WBP_ActionBar::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_ExecuteUbergraph_WBP_ActionBar, Temp_int_Loop_Counter_Variable) == 0x000020, "Member 'WBP_ActionBar_C_ExecuteUbergraph_WBP_ActionBar::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_ExecuteUbergraph_WBP_ActionBar, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000024, "Member 'WBP_ActionBar_C_ExecuteUbergraph_WBP_ActionBar::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_ExecuteUbergraph_WBP_ActionBar, CallFunc_Add_IntInt_ReturnValue_1) == 0x000028, "Member 'WBP_ActionBar_C_ExecuteUbergraph_WBP_ActionBar::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_ExecuteUbergraph_WBP_ActionBar, K2Node_CustomEvent_Inventory) == 0x000030, "Member 'WBP_ActionBar_C_ExecuteUbergraph_WBP_ActionBar::K2Node_CustomEvent_Inventory' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_ExecuteUbergraph_WBP_ActionBar, CallFunc_GetChildAt_ReturnValue) == 0x000038, "Member 'WBP_ActionBar_C_ExecuteUbergraph_WBP_ActionBar::CallFunc_GetChildAt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_ExecuteUbergraph_WBP_ActionBar, K2Node_DynamicCast_AsWBP_Action_Bar_Slot) == 0x000040, "Member 'WBP_ActionBar_C_ExecuteUbergraph_WBP_ActionBar::K2Node_DynamicCast_AsWBP_Action_Bar_Slot' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_ExecuteUbergraph_WBP_ActionBar, K2Node_DynamicCast_bSuccess) == 0x000048, "Member 'WBP_ActionBar_C_ExecuteUbergraph_WBP_ActionBar::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_ExecuteUbergraph_WBP_ActionBar, K2Node_CustomEvent_Inventory_1) == 0x000050, "Member 'WBP_ActionBar_C_ExecuteUbergraph_WBP_ActionBar::K2Node_CustomEvent_Inventory_1' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_ExecuteUbergraph_WBP_ActionBar, K2Node_CustomEvent_NewRowCount) == 0x000058, "Member 'WBP_ActionBar_C_ExecuteUbergraph_WBP_ActionBar::K2Node_CustomEvent_NewRowCount' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_ExecuteUbergraph_WBP_ActionBar, CallFunc_CanStartTutorialForFlag_ReturnValue) == 0x00005C, "Member 'WBP_ActionBar_C_ExecuteUbergraph_WBP_ActionBar::CallFunc_CanStartTutorialForFlag_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_ExecuteUbergraph_WBP_ActionBar, K2Node_ComponentBoundEvent_bIsOpen) == 0x00005D, "Member 'WBP_ActionBar_C_ExecuteUbergraph_WBP_ActionBar::K2Node_ComponentBoundEvent_bIsOpen' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_ExecuteUbergraph_WBP_ActionBar, CallFunc_GetOwningPlayer_ReturnValue) == 0x000060, "Member 'WBP_ActionBar_C_ExecuteUbergraph_WBP_ActionBar::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_ExecuteUbergraph_WBP_ActionBar, CallFunc_Create_ReturnValue) == 0x000068, "Member 'WBP_ActionBar_C_ExecuteUbergraph_WBP_ActionBar::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_ExecuteUbergraph_WBP_ActionBar, CallFunc_GetValeriaGameUserSettings_ReturnValue) == 0x000070, "Member 'WBP_ActionBar_C_ExecuteUbergraph_WBP_ActionBar::CallFunc_GetValeriaGameUserSettings_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_ExecuteUbergraph_WBP_ActionBar, K2Node_CustomEvent_GameplaySettings) == 0x000078, "Member 'WBP_ActionBar_C_ExecuteUbergraph_WBP_ActionBar::K2Node_CustomEvent_GameplaySettings' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_ExecuteUbergraph_WBP_ActionBar, K2Node_CreateDelegate_OutputDelegate) == 0x000090, "Member 'WBP_ActionBar_C_ExecuteUbergraph_WBP_ActionBar::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_ExecuteUbergraph_WBP_ActionBar, CallFunc_RegisterInputActionBinding_ReturnValue) == 0x0000A0, "Member 'WBP_ActionBar_C_ExecuteUbergraph_WBP_ActionBar::CallFunc_RegisterInputActionBinding_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_ExecuteUbergraph_WBP_ActionBar, K2Node_CreateDelegate_OutputDelegate_1) == 0x0000B0, "Member 'WBP_ActionBar_C_ExecuteUbergraph_WBP_ActionBar::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_ExecuteUbergraph_WBP_ActionBar, CallFunc_GetLocalPlayerSubsystem_ReturnValue_1) == 0x0000C0, "Member 'WBP_ActionBar_C_ExecuteUbergraph_WBP_ActionBar::CallFunc_GetLocalPlayerSubsystem_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_ExecuteUbergraph_WBP_ActionBar, CallFunc_RegisterInputActionBinding_ReturnValue_1) == 0x0000C8, "Member 'WBP_ActionBar_C_ExecuteUbergraph_WBP_ActionBar::CallFunc_RegisterInputActionBinding_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_ExecuteUbergraph_WBP_ActionBar, K2Node_CreateDelegate_OutputDelegate_2) == 0x0000D8, "Member 'WBP_ActionBar_C_ExecuteUbergraph_WBP_ActionBar::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_ExecuteUbergraph_WBP_ActionBar, K2Node_MakeArray_Array) == 0x0000E8, "Member 'WBP_ActionBar_C_ExecuteUbergraph_WBP_ActionBar::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_ExecuteUbergraph_WBP_ActionBar, K2Node_CreateDelegate_OutputDelegate_3) == 0x0000F8, "Member 'WBP_ActionBar_C_ExecuteUbergraph_WBP_ActionBar::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_ExecuteUbergraph_WBP_ActionBar, CallFunc_Array_Length_ReturnValue) == 0x000108, "Member 'WBP_ActionBar_C_ExecuteUbergraph_WBP_ActionBar::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_ExecuteUbergraph_WBP_ActionBar, K2Node_CreateDelegate_OutputDelegate_4) == 0x00010C, "Member 'WBP_ActionBar_C_ExecuteUbergraph_WBP_ActionBar::K2Node_CreateDelegate_OutputDelegate_4' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_ExecuteUbergraph_WBP_ActionBar, CallFunc_Less_IntInt_ReturnValue) == 0x00011C, "Member 'WBP_ActionBar_C_ExecuteUbergraph_WBP_ActionBar::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_ExecuteUbergraph_WBP_ActionBar, K2Node_CreateDelegate_OutputDelegate_5) == 0x000120, "Member 'WBP_ActionBar_C_ExecuteUbergraph_WBP_ActionBar::K2Node_CreateDelegate_OutputDelegate_5' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_ExecuteUbergraph_WBP_ActionBar, K2Node_CreateDelegate_OutputDelegate_6) == 0x000130, "Member 'WBP_ActionBar_C_ExecuteUbergraph_WBP_ActionBar::K2Node_CreateDelegate_OutputDelegate_6' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_ExecuteUbergraph_WBP_ActionBar, K2Node_CreateDelegate_OutputDelegate_7) == 0x000140, "Member 'WBP_ActionBar_C_ExecuteUbergraph_WBP_ActionBar::K2Node_CreateDelegate_OutputDelegate_7' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_ExecuteUbergraph_WBP_ActionBar, K2Node_CreateDelegate_OutputDelegate_8) == 0x000150, "Member 'WBP_ActionBar_C_ExecuteUbergraph_WBP_ActionBar::K2Node_CreateDelegate_OutputDelegate_8' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_ExecuteUbergraph_WBP_ActionBar, K2Node_CreateDelegate_OutputDelegate_9) == 0x000160, "Member 'WBP_ActionBar_C_ExecuteUbergraph_WBP_ActionBar::K2Node_CreateDelegate_OutputDelegate_9' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_ExecuteUbergraph_WBP_ActionBar, Temp_int_Array_Index_Variable) == 0x000170, "Member 'WBP_ActionBar_C_ExecuteUbergraph_WBP_ActionBar::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_ExecuteUbergraph_WBP_ActionBar, CallFunc_Array_Get_Item) == 0x000178, "Member 'WBP_ActionBar_C_ExecuteUbergraph_WBP_ActionBar::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_ExecuteUbergraph_WBP_ActionBar, K2Node_CreateDelegate_OutputDelegate_10) == 0x000180, "Member 'WBP_ActionBar_C_ExecuteUbergraph_WBP_ActionBar::K2Node_CreateDelegate_OutputDelegate_10' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_ExecuteUbergraph_WBP_ActionBar, CallFunc_RegisterInputActionBinding_ReturnValue_2) == 0x000190, "Member 'WBP_ActionBar_C_ExecuteUbergraph_WBP_ActionBar::CallFunc_RegisterInputActionBinding_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_ExecuteUbergraph_WBP_ActionBar, K2Node_CreateDelegate_OutputDelegate_11) == 0x0001A0, "Member 'WBP_ActionBar_C_ExecuteUbergraph_WBP_ActionBar::K2Node_CreateDelegate_OutputDelegate_11' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_ExecuteUbergraph_WBP_ActionBar, CallFunc_RegisterInputActionBinding_ReturnValue_3) == 0x0001B0, "Member 'WBP_ActionBar_C_ExecuteUbergraph_WBP_ActionBar::CallFunc_RegisterInputActionBinding_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_ExecuteUbergraph_WBP_ActionBar, K2Node_Event_IsDesignTime) == 0x0001C0, "Member 'WBP_ActionBar_C_ExecuteUbergraph_WBP_ActionBar::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_ExecuteUbergraph_WBP_ActionBar, K2Node_CreateDelegate_OutputDelegate_12) == 0x0001C4, "Member 'WBP_ActionBar_C_ExecuteUbergraph_WBP_ActionBar::K2Node_CreateDelegate_OutputDelegate_12' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_ExecuteUbergraph_WBP_ActionBar, CallFunc_GetValeriaCharacter_OutResult) == 0x0001D4, "Member 'WBP_ActionBar_C_ExecuteUbergraph_WBP_ActionBar::CallFunc_GetValeriaCharacter_OutResult' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_ExecuteUbergraph_WBP_ActionBar, CallFunc_GetValeriaCharacter_ReturnValue) == 0x0001D8, "Member 'WBP_ActionBar_C_ExecuteUbergraph_WBP_ActionBar::CallFunc_GetValeriaCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_ExecuteUbergraph_WBP_ActionBar, K2Node_CreateDelegate_OutputDelegate_13) == 0x0001E0, "Member 'WBP_ActionBar_C_ExecuteUbergraph_WBP_ActionBar::K2Node_CreateDelegate_OutputDelegate_13' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_ExecuteUbergraph_WBP_ActionBar, CallFunc_GetEquipment_ReturnValue) == 0x0001F0, "Member 'WBP_ActionBar_C_ExecuteUbergraph_WBP_ActionBar::CallFunc_GetEquipment_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_ExecuteUbergraph_WBP_ActionBar, K2Node_SwitchEnum_CmpSuccess) == 0x0001F8, "Member 'WBP_ActionBar_C_ExecuteUbergraph_WBP_ActionBar::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_ExecuteUbergraph_WBP_ActionBar, K2Node_CreateDelegate_OutputDelegate_14) == 0x0001FC, "Member 'WBP_ActionBar_C_ExecuteUbergraph_WBP_ActionBar::K2Node_CreateDelegate_OutputDelegate_14' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_ExecuteUbergraph_WBP_ActionBar, CallFunc_GetValeriaCharacter_OutResult_1) == 0x00020C, "Member 'WBP_ActionBar_C_ExecuteUbergraph_WBP_ActionBar::CallFunc_GetValeriaCharacter_OutResult_1' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_ExecuteUbergraph_WBP_ActionBar, CallFunc_GetValeriaCharacter_ReturnValue_1) == 0x000210, "Member 'WBP_ActionBar_C_ExecuteUbergraph_WBP_ActionBar::CallFunc_GetValeriaCharacter_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_ExecuteUbergraph_WBP_ActionBar, K2Node_CreateDelegate_OutputDelegate_15) == 0x000218, "Member 'WBP_ActionBar_C_ExecuteUbergraph_WBP_ActionBar::K2Node_CreateDelegate_OutputDelegate_15' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_ExecuteUbergraph_WBP_ActionBar, CallFunc_GetEquipment_ReturnValue_1) == 0x000228, "Member 'WBP_ActionBar_C_ExecuteUbergraph_WBP_ActionBar::CallFunc_GetEquipment_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_ExecuteUbergraph_WBP_ActionBar, K2Node_SwitchEnum_CmpSuccess_1) == 0x000230, "Member 'WBP_ActionBar_C_ExecuteUbergraph_WBP_ActionBar::K2Node_SwitchEnum_CmpSuccess_1' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_ExecuteUbergraph_WBP_ActionBar, K2Node_CreateDelegate_OutputDelegate_16) == 0x000234, "Member 'WBP_ActionBar_C_ExecuteUbergraph_WBP_ActionBar::K2Node_CreateDelegate_OutputDelegate_16' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_ExecuteUbergraph_WBP_ActionBar, K2Node_CreateDelegate_OutputDelegate_17) == 0x000244, "Member 'WBP_ActionBar_C_ExecuteUbergraph_WBP_ActionBar::K2Node_CreateDelegate_OutputDelegate_17' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_ExecuteUbergraph_WBP_ActionBar, K2Node_CreateDelegate_OutputDelegate_18) == 0x000254, "Member 'WBP_ActionBar_C_ExecuteUbergraph_WBP_ActionBar::K2Node_CreateDelegate_OutputDelegate_18' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_ExecuteUbergraph_WBP_ActionBar, CallFunc_GetLocalPlayerSubsystem_ReturnValue_2) == 0x000268, "Member 'WBP_ActionBar_C_ExecuteUbergraph_WBP_ActionBar::CallFunc_GetLocalPlayerSubsystem_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_ExecuteUbergraph_WBP_ActionBar, CallFunc_GetValeriaCharacter_OutResult_2) == 0x000270, "Member 'WBP_ActionBar_C_ExecuteUbergraph_WBP_ActionBar::CallFunc_GetValeriaCharacter_OutResult_2' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_ExecuteUbergraph_WBP_ActionBar, CallFunc_GetValeriaCharacter_ReturnValue_2) == 0x000278, "Member 'WBP_ActionBar_C_ExecuteUbergraph_WBP_ActionBar::CallFunc_GetValeriaCharacter_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_ExecuteUbergraph_WBP_ActionBar, CallFunc_GetInventory_ReturnValue) == 0x000280, "Member 'WBP_ActionBar_C_ExecuteUbergraph_WBP_ActionBar::CallFunc_GetInventory_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_ExecuteUbergraph_WBP_ActionBar, K2Node_SwitchEnum_CmpSuccess_2) == 0x000288, "Member 'WBP_ActionBar_C_ExecuteUbergraph_WBP_ActionBar::K2Node_SwitchEnum_CmpSuccess_2' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_ExecuteUbergraph_WBP_ActionBar, CallFunc_GetNumberOfActionBarRows_ReturnValue) == 0x00028C, "Member 'WBP_ActionBar_C_ExecuteUbergraph_WBP_ActionBar::CallFunc_GetNumberOfActionBarRows_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_ExecuteUbergraph_WBP_ActionBar, CallFunc_GetLocalPlayerSubsystem_ReturnValue_3) == 0x000290, "Member 'WBP_ActionBar_C_ExecuteUbergraph_WBP_ActionBar::CallFunc_GetLocalPlayerSubsystem_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_ExecuteUbergraph_WBP_ActionBar, CallFunc_CanStartTutorialForFlag_ReturnValue_1) == 0x000298, "Member 'WBP_ActionBar_C_ExecuteUbergraph_WBP_ActionBar::CallFunc_CanStartTutorialForFlag_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_ExecuteUbergraph_WBP_ActionBar, Temp_int_Variable_1) == 0x00029C, "Member 'WBP_ActionBar_C_ExecuteUbergraph_WBP_ActionBar::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_ExecuteUbergraph_WBP_ActionBar, K2Node_CreateDelegate_OutputDelegate_19) == 0x0002A0, "Member 'WBP_ActionBar_C_ExecuteUbergraph_WBP_ActionBar::K2Node_CreateDelegate_OutputDelegate_19' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_ExecuteUbergraph_WBP_ActionBar, K2Node_Select_Default) == 0x0002B0, "Member 'WBP_ActionBar_C_ExecuteUbergraph_WBP_ActionBar::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_ExecuteUbergraph_WBP_ActionBar, CallFunc_RegisterInputActionBinding_ReturnValue_4) == 0x0002C0, "Member 'WBP_ActionBar_C_ExecuteUbergraph_WBP_ActionBar::CallFunc_RegisterInputActionBinding_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_ExecuteUbergraph_WBP_ActionBar, K2Node_CreateDelegate_OutputDelegate_20) == 0x0002D0, "Member 'WBP_ActionBar_C_ExecuteUbergraph_WBP_ActionBar::K2Node_CreateDelegate_OutputDelegate_20' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_ExecuteUbergraph_WBP_ActionBar, K2Node_CreateDelegate_OutputDelegate_21) == 0x0002E0, "Member 'WBP_ActionBar_C_ExecuteUbergraph_WBP_ActionBar::K2Node_CreateDelegate_OutputDelegate_21' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_ExecuteUbergraph_WBP_ActionBar, K2Node_CreateDelegate_OutputDelegate_22) == 0x0002F0, "Member 'WBP_ActionBar_C_ExecuteUbergraph_WBP_ActionBar::K2Node_CreateDelegate_OutputDelegate_22' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_ExecuteUbergraph_WBP_ActionBar, CallFunc_GetNumberOfActionBarRows_ReturnValue_1) == 0x000300, "Member 'WBP_ActionBar_C_ExecuteUbergraph_WBP_ActionBar::CallFunc_GetNumberOfActionBarRows_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_ExecuteUbergraph_WBP_ActionBar, CallFunc_GetPlayerController_ReturnValue) == 0x000308, "Member 'WBP_ActionBar_C_ExecuteUbergraph_WBP_ActionBar::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_ExecuteUbergraph_WBP_ActionBar, K2Node_CustomEvent_bIsActionBarActivated) == 0x000310, "Member 'WBP_ActionBar_C_ExecuteUbergraph_WBP_ActionBar::K2Node_CustomEvent_bIsActionBarActivated' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_ExecuteUbergraph_WBP_ActionBar, CallFunc_GetUIManagerWidget_ReturnValue) == 0x000318, "Member 'WBP_ActionBar_C_ExecuteUbergraph_WBP_ActionBar::CallFunc_GetUIManagerWidget_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_ExecuteUbergraph_WBP_ActionBar, K2Node_DynamicCast_AsBPI_Gameplay_UIManager_Tutorial_CM) == 0x000320, "Member 'WBP_ActionBar_C_ExecuteUbergraph_WBP_ActionBar::K2Node_DynamicCast_AsBPI_Gameplay_UIManager_Tutorial_CM' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_ExecuteUbergraph_WBP_ActionBar, K2Node_DynamicCast_bSuccess_1) == 0x000330, "Member 'WBP_ActionBar_C_ExecuteUbergraph_WBP_ActionBar::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_ExecuteUbergraph_WBP_ActionBar, CallFunc_Redirect_FTUEPopin_Type_FTUEPopin) == 0x000338, "Member 'WBP_ActionBar_C_ExecuteUbergraph_WBP_ActionBar::CallFunc_Redirect_FTUEPopin_Type_FTUEPopin' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_ExecuteUbergraph_WBP_ActionBar, CallFunc_IsValid_ReturnValue_1) == 0x000340, "Member 'WBP_ActionBar_C_ExecuteUbergraph_WBP_ActionBar::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_ExecuteUbergraph_WBP_ActionBar, CallFunc_SetContent_ReturnValue) == 0x000348, "Member 'WBP_ActionBar_C_ExecuteUbergraph_WBP_ActionBar::CallFunc_SetContent_ReturnValue' has a wrong offset!");

// Function WBP_ActionBar.WBP_ActionBar_C.GetSelectedBagSlotLocation
// 0x0038 (0x0038 - 0x0000)
struct WBP_ActionBar_C_GetSelectedBagSlotLocation final
{
public:
	struct FBagSlotLocation                       Location;                                          // 0x0000(0x0008)(Parm, OutParm, NoDestructor)
	struct FBagSlotLocation                       K2Node_MakeStruct_BagSlotLocation;                 // 0x0008(0x0008)(NoDestructor)
	EValeriaFuncResult                            CallFunc_GetValeriaCharacter_OutResult;            // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4FC3[0x7];                                     // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AValeriaCharacter*                      CallFunc_GetValeriaCharacter_ReturnValue;          // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4FC4[0x7];                                     // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPlayerInventoryComponent*              CallFunc_GetInventory_ReturnValue;                 // 0x0028(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FBagSlotLocation                       CallFunc_GetLocationAtActionBarIndex_ReturnValue;  // 0x0030(0x0008)(NoDestructor)
};
static_assert(alignof(WBP_ActionBar_C_GetSelectedBagSlotLocation) == 0x000008, "Wrong alignment on WBP_ActionBar_C_GetSelectedBagSlotLocation");
static_assert(sizeof(WBP_ActionBar_C_GetSelectedBagSlotLocation) == 0x000038, "Wrong size on WBP_ActionBar_C_GetSelectedBagSlotLocation");
static_assert(offsetof(WBP_ActionBar_C_GetSelectedBagSlotLocation, Location) == 0x000000, "Member 'WBP_ActionBar_C_GetSelectedBagSlotLocation::Location' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_GetSelectedBagSlotLocation, K2Node_MakeStruct_BagSlotLocation) == 0x000008, "Member 'WBP_ActionBar_C_GetSelectedBagSlotLocation::K2Node_MakeStruct_BagSlotLocation' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_GetSelectedBagSlotLocation, CallFunc_GetValeriaCharacter_OutResult) == 0x000010, "Member 'WBP_ActionBar_C_GetSelectedBagSlotLocation::CallFunc_GetValeriaCharacter_OutResult' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_GetSelectedBagSlotLocation, CallFunc_GetValeriaCharacter_ReturnValue) == 0x000018, "Member 'WBP_ActionBar_C_GetSelectedBagSlotLocation::CallFunc_GetValeriaCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_GetSelectedBagSlotLocation, K2Node_SwitchEnum_CmpSuccess) == 0x000020, "Member 'WBP_ActionBar_C_GetSelectedBagSlotLocation::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_GetSelectedBagSlotLocation, CallFunc_GetInventory_ReturnValue) == 0x000028, "Member 'WBP_ActionBar_C_GetSelectedBagSlotLocation::CallFunc_GetInventory_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_GetSelectedBagSlotLocation, CallFunc_GetLocationAtActionBarIndex_ReturnValue) == 0x000030, "Member 'WBP_ActionBar_C_GetSelectedBagSlotLocation::CallFunc_GetLocationAtActionBarIndex_ReturnValue' has a wrong offset!");

// Function WBP_ActionBar.WBP_ActionBar_C.HandleEquipmentChanged
// 0x00D0 (0x00D0 - 0x0000)
struct WBP_ActionBar_C_HandleEquipmentChanged final
{
public:
	class UEquipmentComponent*                    EquipmentComponent;                                // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FEquipmentItem                         Item;                                              // 0x0008(0x0050)(BlueprintVisible, BlueprintReadOnly, Parm)
	struct FGameplayTag                           ToolBagTag;                                        // 0x0058(0x0008)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetConsoleVariableBoolValue_ReturnValue;  // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidSoftObjectReference_ReturnValue;   // 0x0061(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0062(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0063(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_SetColumnIndex_NewSlotIndex;              // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_SetColumnIndex_NewSlotIndex_1;            // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x006C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4FC5[0x3];                                     // 0x006D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           CallFunc_GetBagTypeAtActionBarIndex_ReturnValue;   // 0x0070(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FEquipmentItem                         CallFunc_GetEquippedItem_ReturnValue;              // 0x0078(0x0050)()
	bool                                          CallFunc_EqualEqual_GameplayTag_ReturnValue;       // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x00C9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ActionBar_C_HandleEquipmentChanged) == 0x000008, "Wrong alignment on WBP_ActionBar_C_HandleEquipmentChanged");
static_assert(sizeof(WBP_ActionBar_C_HandleEquipmentChanged) == 0x0000D0, "Wrong size on WBP_ActionBar_C_HandleEquipmentChanged");
static_assert(offsetof(WBP_ActionBar_C_HandleEquipmentChanged, EquipmentComponent) == 0x000000, "Member 'WBP_ActionBar_C_HandleEquipmentChanged::EquipmentComponent' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_HandleEquipmentChanged, Item) == 0x000008, "Member 'WBP_ActionBar_C_HandleEquipmentChanged::Item' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_HandleEquipmentChanged, ToolBagTag) == 0x000058, "Member 'WBP_ActionBar_C_HandleEquipmentChanged::ToolBagTag' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_HandleEquipmentChanged, CallFunc_GetConsoleVariableBoolValue_ReturnValue) == 0x000060, "Member 'WBP_ActionBar_C_HandleEquipmentChanged::CallFunc_GetConsoleVariableBoolValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_HandleEquipmentChanged, CallFunc_IsValidSoftObjectReference_ReturnValue) == 0x000061, "Member 'WBP_ActionBar_C_HandleEquipmentChanged::CallFunc_IsValidSoftObjectReference_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_HandleEquipmentChanged, CallFunc_Not_PreBool_ReturnValue) == 0x000062, "Member 'WBP_ActionBar_C_HandleEquipmentChanged::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_HandleEquipmentChanged, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000063, "Member 'WBP_ActionBar_C_HandleEquipmentChanged::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_HandleEquipmentChanged, CallFunc_SetColumnIndex_NewSlotIndex) == 0x000064, "Member 'WBP_ActionBar_C_HandleEquipmentChanged::CallFunc_SetColumnIndex_NewSlotIndex' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_HandleEquipmentChanged, CallFunc_SetColumnIndex_NewSlotIndex_1) == 0x000068, "Member 'WBP_ActionBar_C_HandleEquipmentChanged::CallFunc_SetColumnIndex_NewSlotIndex_1' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_HandleEquipmentChanged, CallFunc_NotEqual_IntInt_ReturnValue) == 0x00006C, "Member 'WBP_ActionBar_C_HandleEquipmentChanged::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_HandleEquipmentChanged, CallFunc_GetBagTypeAtActionBarIndex_ReturnValue) == 0x000070, "Member 'WBP_ActionBar_C_HandleEquipmentChanged::CallFunc_GetBagTypeAtActionBarIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_HandleEquipmentChanged, CallFunc_GetEquippedItem_ReturnValue) == 0x000078, "Member 'WBP_ActionBar_C_HandleEquipmentChanged::CallFunc_GetEquippedItem_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_HandleEquipmentChanged, CallFunc_EqualEqual_GameplayTag_ReturnValue) == 0x0000C8, "Member 'WBP_ActionBar_C_HandleEquipmentChanged::CallFunc_EqualEqual_GameplayTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_HandleEquipmentChanged, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x0000C9, "Member 'WBP_ActionBar_C_HandleEquipmentChanged::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");

// Function WBP_ActionBar.WBP_ActionBar_C.HandleEquippedVisibilityChanged
// 0x0068 (0x0068 - 0x0000)
struct WBP_ActionBar_C_HandleEquippedVisibilityChanged final
{
public:
	class UEquipmentComponent*                    EquipmentComponent;                                // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          bHidden;                                           // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4FC6[0x6];                                     // 0x000A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEquipmentItem                         CallFunc_GetEquippedItem_ReturnValue;              // 0x0010(0x0050)()
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0061(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ActionBar_C_HandleEquippedVisibilityChanged) == 0x000008, "Wrong alignment on WBP_ActionBar_C_HandleEquippedVisibilityChanged");
static_assert(sizeof(WBP_ActionBar_C_HandleEquippedVisibilityChanged) == 0x000068, "Wrong size on WBP_ActionBar_C_HandleEquippedVisibilityChanged");
static_assert(offsetof(WBP_ActionBar_C_HandleEquippedVisibilityChanged, EquipmentComponent) == 0x000000, "Member 'WBP_ActionBar_C_HandleEquippedVisibilityChanged::EquipmentComponent' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_HandleEquippedVisibilityChanged, bHidden) == 0x000008, "Member 'WBP_ActionBar_C_HandleEquippedVisibilityChanged::bHidden' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_HandleEquippedVisibilityChanged, CallFunc_Not_PreBool_ReturnValue) == 0x000009, "Member 'WBP_ActionBar_C_HandleEquippedVisibilityChanged::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_HandleEquippedVisibilityChanged, CallFunc_GetEquippedItem_ReturnValue) == 0x000010, "Member 'WBP_ActionBar_C_HandleEquippedVisibilityChanged::CallFunc_GetEquippedItem_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_HandleEquippedVisibilityChanged, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000060, "Member 'WBP_ActionBar_C_HandleEquippedVisibilityChanged::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_HandleEquippedVisibilityChanged, CallFunc_BooleanAND_ReturnValue) == 0x000061, "Member 'WBP_ActionBar_C_HandleEquippedVisibilityChanged::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function WBP_ActionBar.WBP_ActionBar_C.HandleErrorMessageTriggered
// 0x0018 (0x0018 - 0x0000)
struct WBP_ActionBar_C_HandleErrorMessageTriggered final
{
public:
	class FText                                   ErrorMessage;                                      // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(WBP_ActionBar_C_HandleErrorMessageTriggered) == 0x000008, "Wrong alignment on WBP_ActionBar_C_HandleErrorMessageTriggered");
static_assert(sizeof(WBP_ActionBar_C_HandleErrorMessageTriggered) == 0x000018, "Wrong size on WBP_ActionBar_C_HandleErrorMessageTriggered");
static_assert(offsetof(WBP_ActionBar_C_HandleErrorMessageTriggered, ErrorMessage) == 0x000000, "Member 'WBP_ActionBar_C_HandleErrorMessageTriggered::ErrorMessage' has a wrong offset!");

// Function WBP_ActionBar.WBP_ActionBar_C.HandleInputAction_CycleNextBar
// 0x0048 (0x0048 - 0x0000)
struct WBP_ActionBar_C_HandleInputAction_CycleNextBar final
{
public:
	struct FInputActionValue                      ActionValue;                                       // 0x0000(0x0020)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	float                                         ElapsedTime;                                       // 0x0020(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         TriggeredTime;                                     // 0x0024(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UInputAction*                           InputAction;                                       // 0x0028(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	EValeriaFuncResult                            CallFunc_GetValeriaCharacter_OutResult;            // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4FC7[0x7];                                     // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AValeriaCharacter*                      CallFunc_GetValeriaCharacter_ReturnValue;          // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CanChangeActionBar_ReturnValue;           // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ActionBar_C_HandleInputAction_CycleNextBar) == 0x000008, "Wrong alignment on WBP_ActionBar_C_HandleInputAction_CycleNextBar");
static_assert(sizeof(WBP_ActionBar_C_HandleInputAction_CycleNextBar) == 0x000048, "Wrong size on WBP_ActionBar_C_HandleInputAction_CycleNextBar");
static_assert(offsetof(WBP_ActionBar_C_HandleInputAction_CycleNextBar, ActionValue) == 0x000000, "Member 'WBP_ActionBar_C_HandleInputAction_CycleNextBar::ActionValue' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_HandleInputAction_CycleNextBar, ElapsedTime) == 0x000020, "Member 'WBP_ActionBar_C_HandleInputAction_CycleNextBar::ElapsedTime' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_HandleInputAction_CycleNextBar, TriggeredTime) == 0x000024, "Member 'WBP_ActionBar_C_HandleInputAction_CycleNextBar::TriggeredTime' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_HandleInputAction_CycleNextBar, InputAction) == 0x000028, "Member 'WBP_ActionBar_C_HandleInputAction_CycleNextBar::InputAction' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_HandleInputAction_CycleNextBar, CallFunc_GetValeriaCharacter_OutResult) == 0x000030, "Member 'WBP_ActionBar_C_HandleInputAction_CycleNextBar::CallFunc_GetValeriaCharacter_OutResult' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_HandleInputAction_CycleNextBar, CallFunc_GetValeriaCharacter_ReturnValue) == 0x000038, "Member 'WBP_ActionBar_C_HandleInputAction_CycleNextBar::CallFunc_GetValeriaCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_HandleInputAction_CycleNextBar, K2Node_SwitchEnum_CmpSuccess) == 0x000040, "Member 'WBP_ActionBar_C_HandleInputAction_CycleNextBar::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_HandleInputAction_CycleNextBar, CallFunc_CanChangeActionBar_ReturnValue) == 0x000041, "Member 'WBP_ActionBar_C_HandleInputAction_CycleNextBar::CallFunc_CanChangeActionBar_ReturnValue' has a wrong offset!");

// Function WBP_ActionBar.WBP_ActionBar_C.HandleInputAction_CyclePreviousBar
// 0x0048 (0x0048 - 0x0000)
struct WBP_ActionBar_C_HandleInputAction_CyclePreviousBar final
{
public:
	struct FInputActionValue                      ActionValue;                                       // 0x0000(0x0020)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	float                                         ElapsedTime;                                       // 0x0020(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         TriggeredTime;                                     // 0x0024(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UInputAction*                           InputAction;                                       // 0x0028(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	EValeriaFuncResult                            CallFunc_GetValeriaCharacter_OutResult;            // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4FC8[0x7];                                     // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AValeriaCharacter*                      CallFunc_GetValeriaCharacter_ReturnValue;          // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CanChangeActionBar_ReturnValue;           // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ActionBar_C_HandleInputAction_CyclePreviousBar) == 0x000008, "Wrong alignment on WBP_ActionBar_C_HandleInputAction_CyclePreviousBar");
static_assert(sizeof(WBP_ActionBar_C_HandleInputAction_CyclePreviousBar) == 0x000048, "Wrong size on WBP_ActionBar_C_HandleInputAction_CyclePreviousBar");
static_assert(offsetof(WBP_ActionBar_C_HandleInputAction_CyclePreviousBar, ActionValue) == 0x000000, "Member 'WBP_ActionBar_C_HandleInputAction_CyclePreviousBar::ActionValue' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_HandleInputAction_CyclePreviousBar, ElapsedTime) == 0x000020, "Member 'WBP_ActionBar_C_HandleInputAction_CyclePreviousBar::ElapsedTime' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_HandleInputAction_CyclePreviousBar, TriggeredTime) == 0x000024, "Member 'WBP_ActionBar_C_HandleInputAction_CyclePreviousBar::TriggeredTime' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_HandleInputAction_CyclePreviousBar, InputAction) == 0x000028, "Member 'WBP_ActionBar_C_HandleInputAction_CyclePreviousBar::InputAction' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_HandleInputAction_CyclePreviousBar, CallFunc_GetValeriaCharacter_OutResult) == 0x000030, "Member 'WBP_ActionBar_C_HandleInputAction_CyclePreviousBar::CallFunc_GetValeriaCharacter_OutResult' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_HandleInputAction_CyclePreviousBar, CallFunc_GetValeriaCharacter_ReturnValue) == 0x000038, "Member 'WBP_ActionBar_C_HandleInputAction_CyclePreviousBar::CallFunc_GetValeriaCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_HandleInputAction_CyclePreviousBar, K2Node_SwitchEnum_CmpSuccess) == 0x000040, "Member 'WBP_ActionBar_C_HandleInputAction_CyclePreviousBar::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_HandleInputAction_CyclePreviousBar, CallFunc_CanChangeActionBar_ReturnValue) == 0x000041, "Member 'WBP_ActionBar_C_HandleInputAction_CyclePreviousBar::CallFunc_CanChangeActionBar_ReturnValue' has a wrong offset!");

// Function WBP_ActionBar.WBP_ActionBar_C.HandleInputAction_ScrollBars
// 0x0050 (0x0050 - 0x0000)
struct WBP_ActionBar_C_HandleInputAction_ScrollBars final
{
public:
	struct FInputActionValue                      ActionValue;                                       // 0x0000(0x0020)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	float                                         ElapsedTime;                                       // 0x0020(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         TriggeredTime;                                     // 0x0024(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UInputAction*                           InputAction;                                       // 0x0028(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	EValeriaFuncResult                            CallFunc_GetValeriaCharacter_OutResult;            // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4FC9[0x7];                                     // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AValeriaCharacter*                      CallFunc_GetValeriaCharacter_ReturnValue;          // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_InputActionValueToAxis1D_ReturnValue; // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CanChangeActionBar_ReturnValue;           // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue;            // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x004A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ActionBar_C_HandleInputAction_ScrollBars) == 0x000008, "Wrong alignment on WBP_ActionBar_C_HandleInputAction_ScrollBars");
static_assert(sizeof(WBP_ActionBar_C_HandleInputAction_ScrollBars) == 0x000050, "Wrong size on WBP_ActionBar_C_HandleInputAction_ScrollBars");
static_assert(offsetof(WBP_ActionBar_C_HandleInputAction_ScrollBars, ActionValue) == 0x000000, "Member 'WBP_ActionBar_C_HandleInputAction_ScrollBars::ActionValue' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_HandleInputAction_ScrollBars, ElapsedTime) == 0x000020, "Member 'WBP_ActionBar_C_HandleInputAction_ScrollBars::ElapsedTime' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_HandleInputAction_ScrollBars, TriggeredTime) == 0x000024, "Member 'WBP_ActionBar_C_HandleInputAction_ScrollBars::TriggeredTime' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_HandleInputAction_ScrollBars, InputAction) == 0x000028, "Member 'WBP_ActionBar_C_HandleInputAction_ScrollBars::InputAction' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_HandleInputAction_ScrollBars, CallFunc_GetValeriaCharacter_OutResult) == 0x000030, "Member 'WBP_ActionBar_C_HandleInputAction_ScrollBars::CallFunc_GetValeriaCharacter_OutResult' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_HandleInputAction_ScrollBars, CallFunc_GetValeriaCharacter_ReturnValue) == 0x000038, "Member 'WBP_ActionBar_C_HandleInputAction_ScrollBars::CallFunc_GetValeriaCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_HandleInputAction_ScrollBars, CallFunc_Conv_InputActionValueToAxis1D_ReturnValue) == 0x000040, "Member 'WBP_ActionBar_C_HandleInputAction_ScrollBars::CallFunc_Conv_InputActionValueToAxis1D_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_HandleInputAction_ScrollBars, CallFunc_CanChangeActionBar_ReturnValue) == 0x000048, "Member 'WBP_ActionBar_C_HandleInputAction_ScrollBars::CallFunc_CanChangeActionBar_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_HandleInputAction_ScrollBars, CallFunc_Less_DoubleDouble_ReturnValue) == 0x000049, "Member 'WBP_ActionBar_C_HandleInputAction_ScrollBars::CallFunc_Less_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_HandleInputAction_ScrollBars, K2Node_SwitchEnum_CmpSuccess) == 0x00004A, "Member 'WBP_ActionBar_C_HandleInputAction_ScrollBars::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function WBP_ActionBar.WBP_ActionBar_C.HandleInputAction_SelectNextSlot
// 0x0048 (0x0048 - 0x0000)
struct WBP_ActionBar_C_HandleInputAction_SelectNextSlot final
{
public:
	struct FInputActionValue                      ActionValue;                                       // 0x0000(0x0020)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	float                                         ElapsedTime;                                       // 0x0020(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         TriggeredTime;                                     // 0x0024(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UInputAction*                           InputAction;                                       // 0x0028(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	EValeriaFuncResult                            CallFunc_GetValeriaCharacter_OutResult;            // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4FCA[0x7];                                     // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AValeriaCharacter*                      CallFunc_GetValeriaCharacter_ReturnValue;          // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CanChangeActionBar_ReturnValue;           // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ActionBar_C_HandleInputAction_SelectNextSlot) == 0x000008, "Wrong alignment on WBP_ActionBar_C_HandleInputAction_SelectNextSlot");
static_assert(sizeof(WBP_ActionBar_C_HandleInputAction_SelectNextSlot) == 0x000048, "Wrong size on WBP_ActionBar_C_HandleInputAction_SelectNextSlot");
static_assert(offsetof(WBP_ActionBar_C_HandleInputAction_SelectNextSlot, ActionValue) == 0x000000, "Member 'WBP_ActionBar_C_HandleInputAction_SelectNextSlot::ActionValue' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_HandleInputAction_SelectNextSlot, ElapsedTime) == 0x000020, "Member 'WBP_ActionBar_C_HandleInputAction_SelectNextSlot::ElapsedTime' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_HandleInputAction_SelectNextSlot, TriggeredTime) == 0x000024, "Member 'WBP_ActionBar_C_HandleInputAction_SelectNextSlot::TriggeredTime' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_HandleInputAction_SelectNextSlot, InputAction) == 0x000028, "Member 'WBP_ActionBar_C_HandleInputAction_SelectNextSlot::InputAction' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_HandleInputAction_SelectNextSlot, CallFunc_GetValeriaCharacter_OutResult) == 0x000030, "Member 'WBP_ActionBar_C_HandleInputAction_SelectNextSlot::CallFunc_GetValeriaCharacter_OutResult' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_HandleInputAction_SelectNextSlot, CallFunc_GetValeriaCharacter_ReturnValue) == 0x000038, "Member 'WBP_ActionBar_C_HandleInputAction_SelectNextSlot::CallFunc_GetValeriaCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_HandleInputAction_SelectNextSlot, CallFunc_CanChangeActionBar_ReturnValue) == 0x000040, "Member 'WBP_ActionBar_C_HandleInputAction_SelectNextSlot::CallFunc_CanChangeActionBar_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_HandleInputAction_SelectNextSlot, K2Node_SwitchEnum_CmpSuccess) == 0x000041, "Member 'WBP_ActionBar_C_HandleInputAction_SelectNextSlot::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function WBP_ActionBar.WBP_ActionBar_C.HandleInputAction_SelectPreviousSlot
// 0x0048 (0x0048 - 0x0000)
struct WBP_ActionBar_C_HandleInputAction_SelectPreviousSlot final
{
public:
	struct FInputActionValue                      ActionValue;                                       // 0x0000(0x0020)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	float                                         ElapsedTime;                                       // 0x0020(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         TriggeredTime;                                     // 0x0024(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UInputAction*                           InputAction;                                       // 0x0028(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	EValeriaFuncResult                            CallFunc_GetValeriaCharacter_OutResult;            // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4FCB[0x7];                                     // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AValeriaCharacter*                      CallFunc_GetValeriaCharacter_ReturnValue;          // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CanChangeActionBar_ReturnValue;           // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ActionBar_C_HandleInputAction_SelectPreviousSlot) == 0x000008, "Wrong alignment on WBP_ActionBar_C_HandleInputAction_SelectPreviousSlot");
static_assert(sizeof(WBP_ActionBar_C_HandleInputAction_SelectPreviousSlot) == 0x000048, "Wrong size on WBP_ActionBar_C_HandleInputAction_SelectPreviousSlot");
static_assert(offsetof(WBP_ActionBar_C_HandleInputAction_SelectPreviousSlot, ActionValue) == 0x000000, "Member 'WBP_ActionBar_C_HandleInputAction_SelectPreviousSlot::ActionValue' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_HandleInputAction_SelectPreviousSlot, ElapsedTime) == 0x000020, "Member 'WBP_ActionBar_C_HandleInputAction_SelectPreviousSlot::ElapsedTime' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_HandleInputAction_SelectPreviousSlot, TriggeredTime) == 0x000024, "Member 'WBP_ActionBar_C_HandleInputAction_SelectPreviousSlot::TriggeredTime' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_HandleInputAction_SelectPreviousSlot, InputAction) == 0x000028, "Member 'WBP_ActionBar_C_HandleInputAction_SelectPreviousSlot::InputAction' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_HandleInputAction_SelectPreviousSlot, CallFunc_GetValeriaCharacter_OutResult) == 0x000030, "Member 'WBP_ActionBar_C_HandleInputAction_SelectPreviousSlot::CallFunc_GetValeriaCharacter_OutResult' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_HandleInputAction_SelectPreviousSlot, CallFunc_GetValeriaCharacter_ReturnValue) == 0x000038, "Member 'WBP_ActionBar_C_HandleInputAction_SelectPreviousSlot::CallFunc_GetValeriaCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_HandleInputAction_SelectPreviousSlot, CallFunc_CanChangeActionBar_ReturnValue) == 0x000040, "Member 'WBP_ActionBar_C_HandleInputAction_SelectPreviousSlot::CallFunc_CanChangeActionBar_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_HandleInputAction_SelectPreviousSlot, K2Node_SwitchEnum_CmpSuccess) == 0x000041, "Member 'WBP_ActionBar_C_HandleInputAction_SelectPreviousSlot::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function WBP_ActionBar.WBP_ActionBar_C.HandleInputAction_SelectSlot1
// 0x0030 (0x0030 - 0x0000)
struct WBP_ActionBar_C_HandleInputAction_SelectSlot1 final
{
public:
	struct FInputActionValue                      ActionValue;                                       // 0x0000(0x0020)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	float                                         ElapsedTime;                                       // 0x0020(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         TriggeredTime;                                     // 0x0024(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UInputAction*                           InputAction;                                       // 0x0028(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ActionBar_C_HandleInputAction_SelectSlot1) == 0x000008, "Wrong alignment on WBP_ActionBar_C_HandleInputAction_SelectSlot1");
static_assert(sizeof(WBP_ActionBar_C_HandleInputAction_SelectSlot1) == 0x000030, "Wrong size on WBP_ActionBar_C_HandleInputAction_SelectSlot1");
static_assert(offsetof(WBP_ActionBar_C_HandleInputAction_SelectSlot1, ActionValue) == 0x000000, "Member 'WBP_ActionBar_C_HandleInputAction_SelectSlot1::ActionValue' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_HandleInputAction_SelectSlot1, ElapsedTime) == 0x000020, "Member 'WBP_ActionBar_C_HandleInputAction_SelectSlot1::ElapsedTime' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_HandleInputAction_SelectSlot1, TriggeredTime) == 0x000024, "Member 'WBP_ActionBar_C_HandleInputAction_SelectSlot1::TriggeredTime' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_HandleInputAction_SelectSlot1, InputAction) == 0x000028, "Member 'WBP_ActionBar_C_HandleInputAction_SelectSlot1::InputAction' has a wrong offset!");

// Function WBP_ActionBar.WBP_ActionBar_C.HandleInputAction_SelectSlot2
// 0x0030 (0x0030 - 0x0000)
struct WBP_ActionBar_C_HandleInputAction_SelectSlot2 final
{
public:
	struct FInputActionValue                      ActionValue;                                       // 0x0000(0x0020)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	float                                         ElapsedTime;                                       // 0x0020(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         TriggeredTime;                                     // 0x0024(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UInputAction*                           InputAction;                                       // 0x0028(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ActionBar_C_HandleInputAction_SelectSlot2) == 0x000008, "Wrong alignment on WBP_ActionBar_C_HandleInputAction_SelectSlot2");
static_assert(sizeof(WBP_ActionBar_C_HandleInputAction_SelectSlot2) == 0x000030, "Wrong size on WBP_ActionBar_C_HandleInputAction_SelectSlot2");
static_assert(offsetof(WBP_ActionBar_C_HandleInputAction_SelectSlot2, ActionValue) == 0x000000, "Member 'WBP_ActionBar_C_HandleInputAction_SelectSlot2::ActionValue' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_HandleInputAction_SelectSlot2, ElapsedTime) == 0x000020, "Member 'WBP_ActionBar_C_HandleInputAction_SelectSlot2::ElapsedTime' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_HandleInputAction_SelectSlot2, TriggeredTime) == 0x000024, "Member 'WBP_ActionBar_C_HandleInputAction_SelectSlot2::TriggeredTime' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_HandleInputAction_SelectSlot2, InputAction) == 0x000028, "Member 'WBP_ActionBar_C_HandleInputAction_SelectSlot2::InputAction' has a wrong offset!");

// Function WBP_ActionBar.WBP_ActionBar_C.HandleInputAction_SelectSlot3
// 0x0030 (0x0030 - 0x0000)
struct WBP_ActionBar_C_HandleInputAction_SelectSlot3 final
{
public:
	struct FInputActionValue                      ActionValue;                                       // 0x0000(0x0020)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	float                                         ElapsedTime;                                       // 0x0020(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         TriggeredTime;                                     // 0x0024(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UInputAction*                           InputAction;                                       // 0x0028(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ActionBar_C_HandleInputAction_SelectSlot3) == 0x000008, "Wrong alignment on WBP_ActionBar_C_HandleInputAction_SelectSlot3");
static_assert(sizeof(WBP_ActionBar_C_HandleInputAction_SelectSlot3) == 0x000030, "Wrong size on WBP_ActionBar_C_HandleInputAction_SelectSlot3");
static_assert(offsetof(WBP_ActionBar_C_HandleInputAction_SelectSlot3, ActionValue) == 0x000000, "Member 'WBP_ActionBar_C_HandleInputAction_SelectSlot3::ActionValue' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_HandleInputAction_SelectSlot3, ElapsedTime) == 0x000020, "Member 'WBP_ActionBar_C_HandleInputAction_SelectSlot3::ElapsedTime' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_HandleInputAction_SelectSlot3, TriggeredTime) == 0x000024, "Member 'WBP_ActionBar_C_HandleInputAction_SelectSlot3::TriggeredTime' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_HandleInputAction_SelectSlot3, InputAction) == 0x000028, "Member 'WBP_ActionBar_C_HandleInputAction_SelectSlot3::InputAction' has a wrong offset!");

// Function WBP_ActionBar.WBP_ActionBar_C.HandleInputAction_SelectSlot4
// 0x0030 (0x0030 - 0x0000)
struct WBP_ActionBar_C_HandleInputAction_SelectSlot4 final
{
public:
	struct FInputActionValue                      ActionValue;                                       // 0x0000(0x0020)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	float                                         ElapsedTime;                                       // 0x0020(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         TriggeredTime;                                     // 0x0024(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UInputAction*                           InputAction;                                       // 0x0028(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ActionBar_C_HandleInputAction_SelectSlot4) == 0x000008, "Wrong alignment on WBP_ActionBar_C_HandleInputAction_SelectSlot4");
static_assert(sizeof(WBP_ActionBar_C_HandleInputAction_SelectSlot4) == 0x000030, "Wrong size on WBP_ActionBar_C_HandleInputAction_SelectSlot4");
static_assert(offsetof(WBP_ActionBar_C_HandleInputAction_SelectSlot4, ActionValue) == 0x000000, "Member 'WBP_ActionBar_C_HandleInputAction_SelectSlot4::ActionValue' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_HandleInputAction_SelectSlot4, ElapsedTime) == 0x000020, "Member 'WBP_ActionBar_C_HandleInputAction_SelectSlot4::ElapsedTime' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_HandleInputAction_SelectSlot4, TriggeredTime) == 0x000024, "Member 'WBP_ActionBar_C_HandleInputAction_SelectSlot4::TriggeredTime' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_HandleInputAction_SelectSlot4, InputAction) == 0x000028, "Member 'WBP_ActionBar_C_HandleInputAction_SelectSlot4::InputAction' has a wrong offset!");

// Function WBP_ActionBar.WBP_ActionBar_C.HandleInputAction_SelectSlot5
// 0x0030 (0x0030 - 0x0000)
struct WBP_ActionBar_C_HandleInputAction_SelectSlot5 final
{
public:
	struct FInputActionValue                      ActionValue;                                       // 0x0000(0x0020)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	float                                         ElapsedTime;                                       // 0x0020(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         TriggeredTime;                                     // 0x0024(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UInputAction*                           InputAction;                                       // 0x0028(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ActionBar_C_HandleInputAction_SelectSlot5) == 0x000008, "Wrong alignment on WBP_ActionBar_C_HandleInputAction_SelectSlot5");
static_assert(sizeof(WBP_ActionBar_C_HandleInputAction_SelectSlot5) == 0x000030, "Wrong size on WBP_ActionBar_C_HandleInputAction_SelectSlot5");
static_assert(offsetof(WBP_ActionBar_C_HandleInputAction_SelectSlot5, ActionValue) == 0x000000, "Member 'WBP_ActionBar_C_HandleInputAction_SelectSlot5::ActionValue' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_HandleInputAction_SelectSlot5, ElapsedTime) == 0x000020, "Member 'WBP_ActionBar_C_HandleInputAction_SelectSlot5::ElapsedTime' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_HandleInputAction_SelectSlot5, TriggeredTime) == 0x000024, "Member 'WBP_ActionBar_C_HandleInputAction_SelectSlot5::TriggeredTime' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_HandleInputAction_SelectSlot5, InputAction) == 0x000028, "Member 'WBP_ActionBar_C_HandleInputAction_SelectSlot5::InputAction' has a wrong offset!");

// Function WBP_ActionBar.WBP_ActionBar_C.HandleInputAction_SelectSlot6
// 0x0030 (0x0030 - 0x0000)
struct WBP_ActionBar_C_HandleInputAction_SelectSlot6 final
{
public:
	struct FInputActionValue                      ActionValue;                                       // 0x0000(0x0020)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	float                                         ElapsedTime;                                       // 0x0020(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         TriggeredTime;                                     // 0x0024(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UInputAction*                           InputAction;                                       // 0x0028(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ActionBar_C_HandleInputAction_SelectSlot6) == 0x000008, "Wrong alignment on WBP_ActionBar_C_HandleInputAction_SelectSlot6");
static_assert(sizeof(WBP_ActionBar_C_HandleInputAction_SelectSlot6) == 0x000030, "Wrong size on WBP_ActionBar_C_HandleInputAction_SelectSlot6");
static_assert(offsetof(WBP_ActionBar_C_HandleInputAction_SelectSlot6, ActionValue) == 0x000000, "Member 'WBP_ActionBar_C_HandleInputAction_SelectSlot6::ActionValue' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_HandleInputAction_SelectSlot6, ElapsedTime) == 0x000020, "Member 'WBP_ActionBar_C_HandleInputAction_SelectSlot6::ElapsedTime' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_HandleInputAction_SelectSlot6, TriggeredTime) == 0x000024, "Member 'WBP_ActionBar_C_HandleInputAction_SelectSlot6::TriggeredTime' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_HandleInputAction_SelectSlot6, InputAction) == 0x000028, "Member 'WBP_ActionBar_C_HandleInputAction_SelectSlot6::InputAction' has a wrong offset!");

// Function WBP_ActionBar.WBP_ActionBar_C.HandleInputAction_SelectSlot7
// 0x0030 (0x0030 - 0x0000)
struct WBP_ActionBar_C_HandleInputAction_SelectSlot7 final
{
public:
	struct FInputActionValue                      ActionValue;                                       // 0x0000(0x0020)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	float                                         ElapsedTime;                                       // 0x0020(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         TriggeredTime;                                     // 0x0024(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UInputAction*                           InputAction;                                       // 0x0028(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ActionBar_C_HandleInputAction_SelectSlot7) == 0x000008, "Wrong alignment on WBP_ActionBar_C_HandleInputAction_SelectSlot7");
static_assert(sizeof(WBP_ActionBar_C_HandleInputAction_SelectSlot7) == 0x000030, "Wrong size on WBP_ActionBar_C_HandleInputAction_SelectSlot7");
static_assert(offsetof(WBP_ActionBar_C_HandleInputAction_SelectSlot7, ActionValue) == 0x000000, "Member 'WBP_ActionBar_C_HandleInputAction_SelectSlot7::ActionValue' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_HandleInputAction_SelectSlot7, ElapsedTime) == 0x000020, "Member 'WBP_ActionBar_C_HandleInputAction_SelectSlot7::ElapsedTime' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_HandleInputAction_SelectSlot7, TriggeredTime) == 0x000024, "Member 'WBP_ActionBar_C_HandleInputAction_SelectSlot7::TriggeredTime' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_HandleInputAction_SelectSlot7, InputAction) == 0x000028, "Member 'WBP_ActionBar_C_HandleInputAction_SelectSlot7::InputAction' has a wrong offset!");

// Function WBP_ActionBar.WBP_ActionBar_C.HandleInputAction_SelectSlot8
// 0x0030 (0x0030 - 0x0000)
struct WBP_ActionBar_C_HandleInputAction_SelectSlot8 final
{
public:
	struct FInputActionValue                      ActionValue;                                       // 0x0000(0x0020)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	float                                         ElapsedTime;                                       // 0x0020(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         TriggeredTime;                                     // 0x0024(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UInputAction*                           InputAction;                                       // 0x0028(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ActionBar_C_HandleInputAction_SelectSlot8) == 0x000008, "Wrong alignment on WBP_ActionBar_C_HandleInputAction_SelectSlot8");
static_assert(sizeof(WBP_ActionBar_C_HandleInputAction_SelectSlot8) == 0x000030, "Wrong size on WBP_ActionBar_C_HandleInputAction_SelectSlot8");
static_assert(offsetof(WBP_ActionBar_C_HandleInputAction_SelectSlot8, ActionValue) == 0x000000, "Member 'WBP_ActionBar_C_HandleInputAction_SelectSlot8::ActionValue' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_HandleInputAction_SelectSlot8, ElapsedTime) == 0x000020, "Member 'WBP_ActionBar_C_HandleInputAction_SelectSlot8::ElapsedTime' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_HandleInputAction_SelectSlot8, TriggeredTime) == 0x000024, "Member 'WBP_ActionBar_C_HandleInputAction_SelectSlot8::TriggeredTime' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_HandleInputAction_SelectSlot8, InputAction) == 0x000028, "Member 'WBP_ActionBar_C_HandleInputAction_SelectSlot8::InputAction' has a wrong offset!");

// Function WBP_ActionBar.WBP_ActionBar_C.HandleInputMethodChanged
// 0x0001 (0x0001 - 0x0000)
struct WBP_ActionBar_C_HandleInputMethodChanged final
{
public:
	ECommonInputType                              bNewInputType;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ActionBar_C_HandleInputMethodChanged) == 0x000001, "Wrong alignment on WBP_ActionBar_C_HandleInputMethodChanged");
static_assert(sizeof(WBP_ActionBar_C_HandleInputMethodChanged) == 0x000001, "Wrong size on WBP_ActionBar_C_HandleInputMethodChanged");
static_assert(offsetof(WBP_ActionBar_C_HandleInputMethodChanged, bNewInputType) == 0x000000, "Member 'WBP_ActionBar_C_HandleInputMethodChanged::bNewInputType' has a wrong offset!");

// Function WBP_ActionBar.WBP_ActionBar_C.HandleOpenFullInventoryTutorial
// 0x0040 (0x0040 - 0x0000)
struct WBP_ActionBar_C_HandleOpenFullInventoryTutorial final
{
public:
	class UUserWidget*                            ModalWidget;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TArray<class UUserWidget*>                    TutorialWidgets;                                   // 0x0008(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBP_ModalInterface_Tutorial_C> K2Node_DynamicCast_AsBP_Modal_Interface_Tutorial;  // 0x0020(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4FCC[0x7];                                     // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class US6UI_UIManagerWidgetBase*              CallFunc_GetUIManagerWidget_ReturnValue;           // 0x0038(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ActionBar_C_HandleOpenFullInventoryTutorial) == 0x000008, "Wrong alignment on WBP_ActionBar_C_HandleOpenFullInventoryTutorial");
static_assert(sizeof(WBP_ActionBar_C_HandleOpenFullInventoryTutorial) == 0x000040, "Wrong size on WBP_ActionBar_C_HandleOpenFullInventoryTutorial");
static_assert(offsetof(WBP_ActionBar_C_HandleOpenFullInventoryTutorial, ModalWidget) == 0x000000, "Member 'WBP_ActionBar_C_HandleOpenFullInventoryTutorial::ModalWidget' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_HandleOpenFullInventoryTutorial, TutorialWidgets) == 0x000008, "Member 'WBP_ActionBar_C_HandleOpenFullInventoryTutorial::TutorialWidgets' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_HandleOpenFullInventoryTutorial, CallFunc_GetOwningPlayer_ReturnValue) == 0x000018, "Member 'WBP_ActionBar_C_HandleOpenFullInventoryTutorial::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_HandleOpenFullInventoryTutorial, K2Node_DynamicCast_AsBP_Modal_Interface_Tutorial) == 0x000020, "Member 'WBP_ActionBar_C_HandleOpenFullInventoryTutorial::K2Node_DynamicCast_AsBP_Modal_Interface_Tutorial' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_HandleOpenFullInventoryTutorial, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'WBP_ActionBar_C_HandleOpenFullInventoryTutorial::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_HandleOpenFullInventoryTutorial, CallFunc_GetUIManagerWidget_ReturnValue) == 0x000038, "Member 'WBP_ActionBar_C_HandleOpenFullInventoryTutorial::CallFunc_GetUIManagerWidget_ReturnValue' has a wrong offset!");

// Function WBP_ActionBar.WBP_ActionBar_C.HandleOpenMedalsTutorial
// 0x0040 (0x0040 - 0x0000)
struct WBP_ActionBar_C_HandleOpenMedalsTutorial final
{
public:
	class UUserWidget*                            ModalWidget;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TArray<class UUserWidget*>                    TutorialWidgets;                                   // 0x0008(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBP_ModalInterface_Tutorial_C> K2Node_DynamicCast_AsBP_Modal_Interface_Tutorial;  // 0x0020(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4FCD[0x7];                                     // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class US6UI_UIManagerWidgetBase*              CallFunc_GetUIManagerWidget_ReturnValue;           // 0x0038(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ActionBar_C_HandleOpenMedalsTutorial) == 0x000008, "Wrong alignment on WBP_ActionBar_C_HandleOpenMedalsTutorial");
static_assert(sizeof(WBP_ActionBar_C_HandleOpenMedalsTutorial) == 0x000040, "Wrong size on WBP_ActionBar_C_HandleOpenMedalsTutorial");
static_assert(offsetof(WBP_ActionBar_C_HandleOpenMedalsTutorial, ModalWidget) == 0x000000, "Member 'WBP_ActionBar_C_HandleOpenMedalsTutorial::ModalWidget' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_HandleOpenMedalsTutorial, TutorialWidgets) == 0x000008, "Member 'WBP_ActionBar_C_HandleOpenMedalsTutorial::TutorialWidgets' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_HandleOpenMedalsTutorial, CallFunc_GetOwningPlayer_ReturnValue) == 0x000018, "Member 'WBP_ActionBar_C_HandleOpenMedalsTutorial::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_HandleOpenMedalsTutorial, K2Node_DynamicCast_AsBP_Modal_Interface_Tutorial) == 0x000020, "Member 'WBP_ActionBar_C_HandleOpenMedalsTutorial::K2Node_DynamicCast_AsBP_Modal_Interface_Tutorial' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_HandleOpenMedalsTutorial, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'WBP_ActionBar_C_HandleOpenMedalsTutorial::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_HandleOpenMedalsTutorial, CallFunc_GetUIManagerWidget_ReturnValue) == 0x000038, "Member 'WBP_ActionBar_C_HandleOpenMedalsTutorial::CallFunc_GetUIManagerWidget_ReturnValue' has a wrong offset!");

// Function WBP_ActionBar.WBP_ActionBar_C.HandleOpenMultipleActionBarTutorial
// 0x0040 (0x0040 - 0x0000)
struct WBP_ActionBar_C_HandleOpenMultipleActionBarTutorial final
{
public:
	class UUserWidget*                            ModalWidget;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TArray<class UUserWidget*>                    TutorialWidgets;                                   // 0x0008(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBP_ModalInterface_Tutorial_C> K2Node_DynamicCast_AsBP_Modal_Interface_Tutorial;  // 0x0020(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4FCE[0x7];                                     // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class US6UI_UIManagerWidgetBase*              CallFunc_GetUIManagerWidget_ReturnValue;           // 0x0038(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ActionBar_C_HandleOpenMultipleActionBarTutorial) == 0x000008, "Wrong alignment on WBP_ActionBar_C_HandleOpenMultipleActionBarTutorial");
static_assert(sizeof(WBP_ActionBar_C_HandleOpenMultipleActionBarTutorial) == 0x000040, "Wrong size on WBP_ActionBar_C_HandleOpenMultipleActionBarTutorial");
static_assert(offsetof(WBP_ActionBar_C_HandleOpenMultipleActionBarTutorial, ModalWidget) == 0x000000, "Member 'WBP_ActionBar_C_HandleOpenMultipleActionBarTutorial::ModalWidget' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_HandleOpenMultipleActionBarTutorial, TutorialWidgets) == 0x000008, "Member 'WBP_ActionBar_C_HandleOpenMultipleActionBarTutorial::TutorialWidgets' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_HandleOpenMultipleActionBarTutorial, CallFunc_GetOwningPlayer_ReturnValue) == 0x000018, "Member 'WBP_ActionBar_C_HandleOpenMultipleActionBarTutorial::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_HandleOpenMultipleActionBarTutorial, K2Node_DynamicCast_AsBP_Modal_Interface_Tutorial) == 0x000020, "Member 'WBP_ActionBar_C_HandleOpenMultipleActionBarTutorial::K2Node_DynamicCast_AsBP_Modal_Interface_Tutorial' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_HandleOpenMultipleActionBarTutorial, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'WBP_ActionBar_C_HandleOpenMultipleActionBarTutorial::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_HandleOpenMultipleActionBarTutorial, CallFunc_GetUIManagerWidget_ReturnValue) == 0x000038, "Member 'WBP_ActionBar_C_HandleOpenMultipleActionBarTutorial::CallFunc_GetUIManagerWidget_ReturnValue' has a wrong offset!");

// Function WBP_ActionBar.WBP_ActionBar_C.HandleReequipEquipped
// 0x0060 (0x0060 - 0x0000)
struct WBP_ActionBar_C_HandleReequipEquipped final
{
public:
	class UEquipmentComponent*                    EquipmentComponent;                                // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FEquipmentItem                         Item;                                              // 0x0008(0x0050)(BlueprintVisible, BlueprintReadOnly, Parm)
	bool                                          CallFunc_HasSelectedItem_ReturnValue;              // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ActionBar_C_HandleReequipEquipped) == 0x000008, "Wrong alignment on WBP_ActionBar_C_HandleReequipEquipped");
static_assert(sizeof(WBP_ActionBar_C_HandleReequipEquipped) == 0x000060, "Wrong size on WBP_ActionBar_C_HandleReequipEquipped");
static_assert(offsetof(WBP_ActionBar_C_HandleReequipEquipped, EquipmentComponent) == 0x000000, "Member 'WBP_ActionBar_C_HandleReequipEquipped::EquipmentComponent' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_HandleReequipEquipped, Item) == 0x000008, "Member 'WBP_ActionBar_C_HandleReequipEquipped::Item' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_HandleReequipEquipped, CallFunc_HasSelectedItem_ReturnValue) == 0x000058, "Member 'WBP_ActionBar_C_HandleReequipEquipped::CallFunc_HasSelectedItem_ReturnValue' has a wrong offset!");

// Function WBP_ActionBar.WBP_ActionBar_C.HandleSelectedEquipmentChanged
// 0x0060 (0x0060 - 0x0000)
struct WBP_ActionBar_C_HandleSelectedEquipmentChanged final
{
public:
	class UEquipmentComponent*                    EquipmentComponent;                                // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FEquipmentItem                         Item;                                              // 0x0008(0x0050)(BlueprintVisible, BlueprintReadOnly, Parm)
	int32                                         CallFunc_SetColumnIndex_NewSlotIndex;              // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidSoftObjectReference_ReturnValue;   // 0x005C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ActionBar_C_HandleSelectedEquipmentChanged) == 0x000008, "Wrong alignment on WBP_ActionBar_C_HandleSelectedEquipmentChanged");
static_assert(sizeof(WBP_ActionBar_C_HandleSelectedEquipmentChanged) == 0x000060, "Wrong size on WBP_ActionBar_C_HandleSelectedEquipmentChanged");
static_assert(offsetof(WBP_ActionBar_C_HandleSelectedEquipmentChanged, EquipmentComponent) == 0x000000, "Member 'WBP_ActionBar_C_HandleSelectedEquipmentChanged::EquipmentComponent' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_HandleSelectedEquipmentChanged, Item) == 0x000008, "Member 'WBP_ActionBar_C_HandleSelectedEquipmentChanged::Item' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_HandleSelectedEquipmentChanged, CallFunc_SetColumnIndex_NewSlotIndex) == 0x000058, "Member 'WBP_ActionBar_C_HandleSelectedEquipmentChanged::CallFunc_SetColumnIndex_NewSlotIndex' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_HandleSelectedEquipmentChanged, CallFunc_IsValidSoftObjectReference_ReturnValue) == 0x00005C, "Member 'WBP_ActionBar_C_HandleSelectedEquipmentChanged::CallFunc_IsValidSoftObjectReference_ReturnValue' has a wrong offset!");

// Function WBP_ActionBar.WBP_ActionBar_C.HasItemsInActionBar
// 0x0090 (0x0090 - 0x0000)
struct WBP_ActionBar_C_HasItemsInActionBar final
{
public:
	int32                                         ActionBarIndex;                                    // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4FCF[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UInventoryComponent*                    Inventory;                                         // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          HasItems;                                          // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4FD0[0x3];                                     // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4FD1[0x7];                                     // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FValeriaItem                           CallFunc_GetItemAtActionBarIndex_ReturnValue;      // 0x0028(0x0060)()
	bool                                          CallFunc_ItemIsEmpty_ReturnValue;                  // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0089(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ActionBar_C_HasItemsInActionBar) == 0x000008, "Wrong alignment on WBP_ActionBar_C_HasItemsInActionBar");
static_assert(sizeof(WBP_ActionBar_C_HasItemsInActionBar) == 0x000090, "Wrong size on WBP_ActionBar_C_HasItemsInActionBar");
static_assert(offsetof(WBP_ActionBar_C_HasItemsInActionBar, ActionBarIndex) == 0x000000, "Member 'WBP_ActionBar_C_HasItemsInActionBar::ActionBarIndex' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_HasItemsInActionBar, Inventory) == 0x000008, "Member 'WBP_ActionBar_C_HasItemsInActionBar::Inventory' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_HasItemsInActionBar, HasItems) == 0x000010, "Member 'WBP_ActionBar_C_HasItemsInActionBar::HasItems' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_HasItemsInActionBar, Temp_int_Variable) == 0x000014, "Member 'WBP_ActionBar_C_HasItemsInActionBar::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_HasItemsInActionBar, CallFunc_Subtract_IntInt_ReturnValue) == 0x000018, "Member 'WBP_ActionBar_C_HasItemsInActionBar::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_HasItemsInActionBar, CallFunc_Add_IntInt_ReturnValue) == 0x00001C, "Member 'WBP_ActionBar_C_HasItemsInActionBar::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_HasItemsInActionBar, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000020, "Member 'WBP_ActionBar_C_HasItemsInActionBar::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_HasItemsInActionBar, CallFunc_GetItemAtActionBarIndex_ReturnValue) == 0x000028, "Member 'WBP_ActionBar_C_HasItemsInActionBar::CallFunc_GetItemAtActionBarIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_HasItemsInActionBar, CallFunc_ItemIsEmpty_ReturnValue) == 0x000088, "Member 'WBP_ActionBar_C_HasItemsInActionBar::CallFunc_ItemIsEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_HasItemsInActionBar, CallFunc_Not_PreBool_ReturnValue) == 0x000089, "Member 'WBP_ActionBar_C_HasItemsInActionBar::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function WBP_ActionBar.WBP_ActionBar_C.InventorySettingsChanged
// 0x0018 (0x0018 - 0x0000)
struct WBP_ActionBar_C_InventorySettingsChanged final
{
public:
	struct FValeriaGameplaySettings               GameplaySettings;                                  // 0x0000(0x0018)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor)
};
static_assert(alignof(WBP_ActionBar_C_InventorySettingsChanged) == 0x000004, "Wrong alignment on WBP_ActionBar_C_InventorySettingsChanged");
static_assert(sizeof(WBP_ActionBar_C_InventorySettingsChanged) == 0x000018, "Wrong size on WBP_ActionBar_C_InventorySettingsChanged");
static_assert(offsetof(WBP_ActionBar_C_InventorySettingsChanged, GameplaySettings) == 0x000000, "Member 'WBP_ActionBar_C_InventorySettingsChanged::GameplaySettings' has a wrong offset!");

// Function WBP_ActionBar.WBP_ActionBar_C.Is Action Bar Full
// 0x0090 (0x0090 - 0x0000)
struct WBP_ActionBar_C_Is_Action_Bar_Full final
{
public:
	int32                                         ActionBarIndex;                                    // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4FD2[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UInventoryComponent*                    Inventory;                                         // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          IsFull;                                            // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4FD3[0x3];                                     // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4FD4[0x7];                                     // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FValeriaItem                           CallFunc_GetItemAtActionBarIndex_ReturnValue;      // 0x0028(0x0060)()
	bool                                          CallFunc_ItemIsEmpty_ReturnValue;                  // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ActionBar_C_Is_Action_Bar_Full) == 0x000008, "Wrong alignment on WBP_ActionBar_C_Is_Action_Bar_Full");
static_assert(sizeof(WBP_ActionBar_C_Is_Action_Bar_Full) == 0x000090, "Wrong size on WBP_ActionBar_C_Is_Action_Bar_Full");
static_assert(offsetof(WBP_ActionBar_C_Is_Action_Bar_Full, ActionBarIndex) == 0x000000, "Member 'WBP_ActionBar_C_Is_Action_Bar_Full::ActionBarIndex' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_Is_Action_Bar_Full, Inventory) == 0x000008, "Member 'WBP_ActionBar_C_Is_Action_Bar_Full::Inventory' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_Is_Action_Bar_Full, IsFull) == 0x000010, "Member 'WBP_ActionBar_C_Is_Action_Bar_Full::IsFull' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_Is_Action_Bar_Full, Temp_int_Variable) == 0x000014, "Member 'WBP_ActionBar_C_Is_Action_Bar_Full::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_Is_Action_Bar_Full, CallFunc_Subtract_IntInt_ReturnValue) == 0x000018, "Member 'WBP_ActionBar_C_Is_Action_Bar_Full::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_Is_Action_Bar_Full, CallFunc_Add_IntInt_ReturnValue) == 0x00001C, "Member 'WBP_ActionBar_C_Is_Action_Bar_Full::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_Is_Action_Bar_Full, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000020, "Member 'WBP_ActionBar_C_Is_Action_Bar_Full::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_Is_Action_Bar_Full, CallFunc_GetItemAtActionBarIndex_ReturnValue) == 0x000028, "Member 'WBP_ActionBar_C_Is_Action_Bar_Full::CallFunc_GetItemAtActionBarIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_Is_Action_Bar_Full, CallFunc_ItemIsEmpty_ReturnValue) == 0x000088, "Member 'WBP_ActionBar_C_Is_Action_Bar_Full::CallFunc_ItemIsEmpty_ReturnValue' has a wrong offset!");

// Function WBP_ActionBar.WBP_ActionBar_C.Is on Occupied Housing Plot
// 0x0050 (0x0050 - 0x0000)
struct WBP_ActionBar_C_Is_on_Occupied_Housing_Plot final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4FD5[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AValeriaPlayerController*               K2Node_DynamicCast_AsValeria_Player_Controller;    // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4FD6[0x7];                                     // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AHousingPlotActor*                      CallFunc_GetOccupiedHousingPlot_ReturnValue;       // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsAtHome_ReturnValue;                     // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4FD7[0x7];                                     // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_HousingPlotActor_C*                 K2Node_DynamicCast_AsBP_Housing_Plot_Actor;        // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsLocalCharacterAtThisPlot__IsInside;     // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsLocalCharacterAtThisPlot__HasCharacterLoaded; // 0x003A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x003B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4FD8[0x4];                                     // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AValeriaCharacter*                      CallFunc_GetValeriaCharacter_ReturnValue;          // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsInHousingEditMode_ReturnValue;          // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x004A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ActionBar_C_Is_on_Occupied_Housing_Plot) == 0x000008, "Wrong alignment on WBP_ActionBar_C_Is_on_Occupied_Housing_Plot");
static_assert(sizeof(WBP_ActionBar_C_Is_on_Occupied_Housing_Plot) == 0x000050, "Wrong size on WBP_ActionBar_C_Is_on_Occupied_Housing_Plot");
static_assert(offsetof(WBP_ActionBar_C_Is_on_Occupied_Housing_Plot, ReturnValue) == 0x000000, "Member 'WBP_ActionBar_C_Is_on_Occupied_Housing_Plot::ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_Is_on_Occupied_Housing_Plot, CallFunc_GetPlayerController_ReturnValue) == 0x000008, "Member 'WBP_ActionBar_C_Is_on_Occupied_Housing_Plot::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_Is_on_Occupied_Housing_Plot, K2Node_DynamicCast_AsValeria_Player_Controller) == 0x000010, "Member 'WBP_ActionBar_C_Is_on_Occupied_Housing_Plot::K2Node_DynamicCast_AsValeria_Player_Controller' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_Is_on_Occupied_Housing_Plot, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'WBP_ActionBar_C_Is_on_Occupied_Housing_Plot::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_Is_on_Occupied_Housing_Plot, CallFunc_GetOccupiedHousingPlot_ReturnValue) == 0x000020, "Member 'WBP_ActionBar_C_Is_on_Occupied_Housing_Plot::CallFunc_GetOccupiedHousingPlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_Is_on_Occupied_Housing_Plot, CallFunc_IsAtHome_ReturnValue) == 0x000028, "Member 'WBP_ActionBar_C_Is_on_Occupied_Housing_Plot::CallFunc_IsAtHome_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_Is_on_Occupied_Housing_Plot, K2Node_DynamicCast_AsBP_Housing_Plot_Actor) == 0x000030, "Member 'WBP_ActionBar_C_Is_on_Occupied_Housing_Plot::K2Node_DynamicCast_AsBP_Housing_Plot_Actor' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_Is_on_Occupied_Housing_Plot, K2Node_DynamicCast_bSuccess_1) == 0x000038, "Member 'WBP_ActionBar_C_Is_on_Occupied_Housing_Plot::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_Is_on_Occupied_Housing_Plot, CallFunc_IsLocalCharacterAtThisPlot__IsInside) == 0x000039, "Member 'WBP_ActionBar_C_Is_on_Occupied_Housing_Plot::CallFunc_IsLocalCharacterAtThisPlot__IsInside' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_Is_on_Occupied_Housing_Plot, CallFunc_IsLocalCharacterAtThisPlot__HasCharacterLoaded) == 0x00003A, "Member 'WBP_ActionBar_C_Is_on_Occupied_Housing_Plot::CallFunc_IsLocalCharacterAtThisPlot__HasCharacterLoaded' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_Is_on_Occupied_Housing_Plot, CallFunc_IsValid_ReturnValue) == 0x00003B, "Member 'WBP_ActionBar_C_Is_on_Occupied_Housing_Plot::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_Is_on_Occupied_Housing_Plot, CallFunc_GetValeriaCharacter_ReturnValue) == 0x000040, "Member 'WBP_ActionBar_C_Is_on_Occupied_Housing_Plot::CallFunc_GetValeriaCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_Is_on_Occupied_Housing_Plot, CallFunc_IsInHousingEditMode_ReturnValue) == 0x000048, "Member 'WBP_ActionBar_C_Is_on_Occupied_Housing_Plot::CallFunc_IsInHousingEditMode_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_Is_on_Occupied_Housing_Plot, CallFunc_Not_PreBool_ReturnValue) == 0x000049, "Member 'WBP_ActionBar_C_Is_on_Occupied_Housing_Plot::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_Is_on_Occupied_Housing_Plot, CallFunc_BooleanAND_ReturnValue) == 0x00004A, "Member 'WBP_ActionBar_C_Is_on_Occupied_Housing_Plot::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function WBP_ActionBar.WBP_ActionBar_C.LinkToInventory
// 0x0010 (0x0010 - 0x0000)
struct WBP_ActionBar_C_LinkToInventory final
{
public:
	class UInventoryComponent*                    Inventory;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         NewRowCount;                                       // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ActionBar_C_LinkToInventory) == 0x000008, "Wrong alignment on WBP_ActionBar_C_LinkToInventory");
static_assert(sizeof(WBP_ActionBar_C_LinkToInventory) == 0x000010, "Wrong size on WBP_ActionBar_C_LinkToInventory");
static_assert(offsetof(WBP_ActionBar_C_LinkToInventory, Inventory) == 0x000000, "Member 'WBP_ActionBar_C_LinkToInventory::Inventory' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_LinkToInventory, NewRowCount) == 0x000008, "Member 'WBP_ActionBar_C_LinkToInventory::NewRowCount' has a wrong offset!");

// Function WBP_ActionBar.WBP_ActionBar_C.MA_OnPopin
// 0x0058 (0x0058 - 0x0000)
struct WBP_ActionBar_C_MA_OnPopin final
{
public:
	class UWidget*                                ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class US6UI_UIManagerWidgetBase*              CallFunc_GetUIManagerWidget_ReturnValue;           // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_GameplayUIManagerTutorial_CM_C> K2Node_DynamicCast_AsBPI_Gameplay_UIManager_Tutorial_CM; // 0x0018(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4FD9[0x7];                                     // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_FTUEPopin_CM_C*                    CallFunc_Redirect_FTUEPopin_Type_FTUEPopin;        // 0x0030(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UPanelSlot*                             CallFunc_SetContent_ReturnValue;                   // 0x0038(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4FDA[0x7];                                     // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UWBP_PopinCalloutWidget_C*              CallFunc_Create_ReturnValue;                       // 0x0050(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ActionBar_C_MA_OnPopin) == 0x000008, "Wrong alignment on WBP_ActionBar_C_MA_OnPopin");
static_assert(sizeof(WBP_ActionBar_C_MA_OnPopin) == 0x000058, "Wrong size on WBP_ActionBar_C_MA_OnPopin");
static_assert(offsetof(WBP_ActionBar_C_MA_OnPopin, ReturnValue) == 0x000000, "Member 'WBP_ActionBar_C_MA_OnPopin::ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_MA_OnPopin, CallFunc_GetPlayerController_ReturnValue) == 0x000008, "Member 'WBP_ActionBar_C_MA_OnPopin::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_MA_OnPopin, CallFunc_GetUIManagerWidget_ReturnValue) == 0x000010, "Member 'WBP_ActionBar_C_MA_OnPopin::CallFunc_GetUIManagerWidget_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_MA_OnPopin, K2Node_DynamicCast_AsBPI_Gameplay_UIManager_Tutorial_CM) == 0x000018, "Member 'WBP_ActionBar_C_MA_OnPopin::K2Node_DynamicCast_AsBPI_Gameplay_UIManager_Tutorial_CM' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_MA_OnPopin, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'WBP_ActionBar_C_MA_OnPopin::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_MA_OnPopin, CallFunc_Redirect_FTUEPopin_Type_FTUEPopin) == 0x000030, "Member 'WBP_ActionBar_C_MA_OnPopin::CallFunc_Redirect_FTUEPopin_Type_FTUEPopin' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_MA_OnPopin, CallFunc_SetContent_ReturnValue) == 0x000038, "Member 'WBP_ActionBar_C_MA_OnPopin::CallFunc_SetContent_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_MA_OnPopin, CallFunc_IsValid_ReturnValue) == 0x000040, "Member 'WBP_ActionBar_C_MA_OnPopin::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_MA_OnPopin, CallFunc_GetOwningPlayer_ReturnValue) == 0x000048, "Member 'WBP_ActionBar_C_MA_OnPopin::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_MA_OnPopin, CallFunc_Create_ReturnValue) == 0x000050, "Member 'WBP_ActionBar_C_MA_OnPopin::CallFunc_Create_ReturnValue' has a wrong offset!");

// Function WBP_ActionBar.WBP_ActionBar_C.On_MenuAnchor_Popin_FoundItemQuest_GetUserMenuContent_0
// 0x0068 (0x0068 - 0x0000)
struct WBP_ActionBar_C_On_MenuAnchor_Popin_FoundItemQuest_GetUserMenuContent_0 final
{
public:
	class UUserWidget*                            ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0010(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class US6UI_UIManagerWidgetBase*              CallFunc_GetUIManagerWidget_ReturnValue;           // 0x0020(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_GameplayUIManagerTutorial_CM_C> K2Node_DynamicCast_AsBPI_Gameplay_UIManager_Tutorial_CM; // 0x0028(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4FDB[0x7];                                     // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_FTUEPopin_CM_C*                    CallFunc_Redirect_FTUEPopin_Type_FTUEPopin;        // 0x0040(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4FDC[0x7];                                     // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPanelSlot*                             CallFunc_SetContent_ReturnValue;                   // 0x0050(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x0058(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UWBP_PopinCalloutWidget_C*              CallFunc_Create_ReturnValue;                       // 0x0060(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ActionBar_C_On_MenuAnchor_Popin_FoundItemQuest_GetUserMenuContent_0) == 0x000008, "Wrong alignment on WBP_ActionBar_C_On_MenuAnchor_Popin_FoundItemQuest_GetUserMenuContent_0");
static_assert(sizeof(WBP_ActionBar_C_On_MenuAnchor_Popin_FoundItemQuest_GetUserMenuContent_0) == 0x000068, "Wrong size on WBP_ActionBar_C_On_MenuAnchor_Popin_FoundItemQuest_GetUserMenuContent_0");
static_assert(offsetof(WBP_ActionBar_C_On_MenuAnchor_Popin_FoundItemQuest_GetUserMenuContent_0, ReturnValue) == 0x000000, "Member 'WBP_ActionBar_C_On_MenuAnchor_Popin_FoundItemQuest_GetUserMenuContent_0::ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_On_MenuAnchor_Popin_FoundItemQuest_GetUserMenuContent_0, CallFunc_GetPlayerController_ReturnValue) == 0x000008, "Member 'WBP_ActionBar_C_On_MenuAnchor_Popin_FoundItemQuest_GetUserMenuContent_0::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_On_MenuAnchor_Popin_FoundItemQuest_GetUserMenuContent_0, K2Node_CreateDelegate_OutputDelegate) == 0x000010, "Member 'WBP_ActionBar_C_On_MenuAnchor_Popin_FoundItemQuest_GetUserMenuContent_0::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_On_MenuAnchor_Popin_FoundItemQuest_GetUserMenuContent_0, CallFunc_GetUIManagerWidget_ReturnValue) == 0x000020, "Member 'WBP_ActionBar_C_On_MenuAnchor_Popin_FoundItemQuest_GetUserMenuContent_0::CallFunc_GetUIManagerWidget_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_On_MenuAnchor_Popin_FoundItemQuest_GetUserMenuContent_0, K2Node_DynamicCast_AsBPI_Gameplay_UIManager_Tutorial_CM) == 0x000028, "Member 'WBP_ActionBar_C_On_MenuAnchor_Popin_FoundItemQuest_GetUserMenuContent_0::K2Node_DynamicCast_AsBPI_Gameplay_UIManager_Tutorial_CM' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_On_MenuAnchor_Popin_FoundItemQuest_GetUserMenuContent_0, K2Node_DynamicCast_bSuccess) == 0x000038, "Member 'WBP_ActionBar_C_On_MenuAnchor_Popin_FoundItemQuest_GetUserMenuContent_0::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_On_MenuAnchor_Popin_FoundItemQuest_GetUserMenuContent_0, CallFunc_Redirect_FTUEPopin_Type_FTUEPopin) == 0x000040, "Member 'WBP_ActionBar_C_On_MenuAnchor_Popin_FoundItemQuest_GetUserMenuContent_0::CallFunc_Redirect_FTUEPopin_Type_FTUEPopin' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_On_MenuAnchor_Popin_FoundItemQuest_GetUserMenuContent_0, CallFunc_IsValid_ReturnValue) == 0x000048, "Member 'WBP_ActionBar_C_On_MenuAnchor_Popin_FoundItemQuest_GetUserMenuContent_0::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_On_MenuAnchor_Popin_FoundItemQuest_GetUserMenuContent_0, CallFunc_SetContent_ReturnValue) == 0x000050, "Member 'WBP_ActionBar_C_On_MenuAnchor_Popin_FoundItemQuest_GetUserMenuContent_0::CallFunc_SetContent_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_On_MenuAnchor_Popin_FoundItemQuest_GetUserMenuContent_0, CallFunc_GetOwningPlayer_ReturnValue) == 0x000058, "Member 'WBP_ActionBar_C_On_MenuAnchor_Popin_FoundItemQuest_GetUserMenuContent_0::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_On_MenuAnchor_Popin_FoundItemQuest_GetUserMenuContent_0, CallFunc_Create_ReturnValue) == 0x000060, "Member 'WBP_ActionBar_C_On_MenuAnchor_Popin_FoundItemQuest_GetUserMenuContent_0::CallFunc_Create_ReturnValue' has a wrong offset!");

// Function WBP_ActionBar.WBP_ActionBar_C.On_MenuAnchor_Popin_GetUserMenuContent_0
// 0x0068 (0x0068 - 0x0000)
struct WBP_ActionBar_C_On_MenuAnchor_Popin_GetUserMenuContent_0 final
{
public:
	class UUserWidget*                            ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0010(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class US6UI_UIManagerWidgetBase*              CallFunc_GetUIManagerWidget_ReturnValue;           // 0x0020(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_GameplayUIManagerTutorial_CM_C> K2Node_DynamicCast_AsBPI_Gameplay_UIManager_Tutorial_CM; // 0x0028(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4FDD[0x7];                                     // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_FTUEPopin_CM_C*                    CallFunc_Redirect_FTUEPopin_Type_FTUEPopin;        // 0x0040(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UPanelSlot*                             CallFunc_SetContent_ReturnValue;                   // 0x0048(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4FDE[0x7];                                     // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x0058(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UWBP_PopinCalloutWidget_C*              CallFunc_Create_ReturnValue;                       // 0x0060(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ActionBar_C_On_MenuAnchor_Popin_GetUserMenuContent_0) == 0x000008, "Wrong alignment on WBP_ActionBar_C_On_MenuAnchor_Popin_GetUserMenuContent_0");
static_assert(sizeof(WBP_ActionBar_C_On_MenuAnchor_Popin_GetUserMenuContent_0) == 0x000068, "Wrong size on WBP_ActionBar_C_On_MenuAnchor_Popin_GetUserMenuContent_0");
static_assert(offsetof(WBP_ActionBar_C_On_MenuAnchor_Popin_GetUserMenuContent_0, ReturnValue) == 0x000000, "Member 'WBP_ActionBar_C_On_MenuAnchor_Popin_GetUserMenuContent_0::ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_On_MenuAnchor_Popin_GetUserMenuContent_0, CallFunc_GetPlayerController_ReturnValue) == 0x000008, "Member 'WBP_ActionBar_C_On_MenuAnchor_Popin_GetUserMenuContent_0::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_On_MenuAnchor_Popin_GetUserMenuContent_0, K2Node_CreateDelegate_OutputDelegate) == 0x000010, "Member 'WBP_ActionBar_C_On_MenuAnchor_Popin_GetUserMenuContent_0::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_On_MenuAnchor_Popin_GetUserMenuContent_0, CallFunc_GetUIManagerWidget_ReturnValue) == 0x000020, "Member 'WBP_ActionBar_C_On_MenuAnchor_Popin_GetUserMenuContent_0::CallFunc_GetUIManagerWidget_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_On_MenuAnchor_Popin_GetUserMenuContent_0, K2Node_DynamicCast_AsBPI_Gameplay_UIManager_Tutorial_CM) == 0x000028, "Member 'WBP_ActionBar_C_On_MenuAnchor_Popin_GetUserMenuContent_0::K2Node_DynamicCast_AsBPI_Gameplay_UIManager_Tutorial_CM' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_On_MenuAnchor_Popin_GetUserMenuContent_0, K2Node_DynamicCast_bSuccess) == 0x000038, "Member 'WBP_ActionBar_C_On_MenuAnchor_Popin_GetUserMenuContent_0::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_On_MenuAnchor_Popin_GetUserMenuContent_0, CallFunc_Redirect_FTUEPopin_Type_FTUEPopin) == 0x000040, "Member 'WBP_ActionBar_C_On_MenuAnchor_Popin_GetUserMenuContent_0::CallFunc_Redirect_FTUEPopin_Type_FTUEPopin' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_On_MenuAnchor_Popin_GetUserMenuContent_0, CallFunc_SetContent_ReturnValue) == 0x000048, "Member 'WBP_ActionBar_C_On_MenuAnchor_Popin_GetUserMenuContent_0::CallFunc_SetContent_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_On_MenuAnchor_Popin_GetUserMenuContent_0, CallFunc_IsValid_ReturnValue) == 0x000050, "Member 'WBP_ActionBar_C_On_MenuAnchor_Popin_GetUserMenuContent_0::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_On_MenuAnchor_Popin_GetUserMenuContent_0, CallFunc_GetOwningPlayer_ReturnValue) == 0x000058, "Member 'WBP_ActionBar_C_On_MenuAnchor_Popin_GetUserMenuContent_0::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_On_MenuAnchor_Popin_GetUserMenuContent_0, CallFunc_Create_ReturnValue) == 0x000060, "Member 'WBP_ActionBar_C_On_MenuAnchor_Popin_GetUserMenuContent_0::CallFunc_Create_ReturnValue' has a wrong offset!");

// Function WBP_ActionBar.WBP_ActionBar_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct WBP_ActionBar_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ActionBar_C_PreConstruct) == 0x000001, "Wrong alignment on WBP_ActionBar_C_PreConstruct");
static_assert(sizeof(WBP_ActionBar_C_PreConstruct) == 0x000001, "Wrong size on WBP_ActionBar_C_PreConstruct");
static_assert(offsetof(WBP_ActionBar_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'WBP_ActionBar_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function WBP_ActionBar.WBP_ActionBar_C.SelectSlotByIndex
// 0x0098 (0x0098 - 0x0000)
struct WBP_ActionBar_C_SelectSlotByIndex final
{
public:
	int32                                         SlotIndex;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EValeriaFuncResult                            CallFunc_GetValeriaCharacter_OutResult;            // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4FDF[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AValeriaCharacter*                      CallFunc_GetValeriaCharacter_ReturnValue;          // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPlayerInventoryComponent*              CallFunc_GetInventory_ReturnValue;                 // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CanChangeActionBar_ReturnValue;           // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECharacterState                               CallFunc_GetCurrentStateType_ReturnValue;          // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x001B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x001D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4FE0[0x2];                                     // 0x001E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FBagSlotLocation                       CallFunc_GetLocationAtActionBarIndex_ReturnValue;  // 0x0020(0x0008)(NoDestructor)
	int32                                         CallFunc_SetColumnIndex_NewSlotIndex;              // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4FE1[0x4];                                     // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FValeriaItem                           CallFunc_GetItemAt_ReturnValue;                    // 0x0030(0x0060)()
	bool                                          CallFunc_ItemIsEmpty_ReturnValue;                  // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0091(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ActionBar_C_SelectSlotByIndex) == 0x000008, "Wrong alignment on WBP_ActionBar_C_SelectSlotByIndex");
static_assert(sizeof(WBP_ActionBar_C_SelectSlotByIndex) == 0x000098, "Wrong size on WBP_ActionBar_C_SelectSlotByIndex");
static_assert(offsetof(WBP_ActionBar_C_SelectSlotByIndex, SlotIndex) == 0x000000, "Member 'WBP_ActionBar_C_SelectSlotByIndex::SlotIndex' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_SelectSlotByIndex, CallFunc_GetValeriaCharacter_OutResult) == 0x000004, "Member 'WBP_ActionBar_C_SelectSlotByIndex::CallFunc_GetValeriaCharacter_OutResult' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_SelectSlotByIndex, CallFunc_GetValeriaCharacter_ReturnValue) == 0x000008, "Member 'WBP_ActionBar_C_SelectSlotByIndex::CallFunc_GetValeriaCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_SelectSlotByIndex, CallFunc_GetInventory_ReturnValue) == 0x000010, "Member 'WBP_ActionBar_C_SelectSlotByIndex::CallFunc_GetInventory_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_SelectSlotByIndex, CallFunc_CanChangeActionBar_ReturnValue) == 0x000018, "Member 'WBP_ActionBar_C_SelectSlotByIndex::CallFunc_CanChangeActionBar_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_SelectSlotByIndex, CallFunc_GetCurrentStateType_ReturnValue) == 0x000019, "Member 'WBP_ActionBar_C_SelectSlotByIndex::CallFunc_GetCurrentStateType_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_SelectSlotByIndex, K2Node_SwitchEnum_CmpSuccess) == 0x00001A, "Member 'WBP_ActionBar_C_SelectSlotByIndex::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_SelectSlotByIndex, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x00001B, "Member 'WBP_ActionBar_C_SelectSlotByIndex::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_SelectSlotByIndex, CallFunc_BooleanOR_ReturnValue) == 0x00001C, "Member 'WBP_ActionBar_C_SelectSlotByIndex::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_SelectSlotByIndex, CallFunc_NotEqual_IntInt_ReturnValue) == 0x00001D, "Member 'WBP_ActionBar_C_SelectSlotByIndex::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_SelectSlotByIndex, CallFunc_GetLocationAtActionBarIndex_ReturnValue) == 0x000020, "Member 'WBP_ActionBar_C_SelectSlotByIndex::CallFunc_GetLocationAtActionBarIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_SelectSlotByIndex, CallFunc_SetColumnIndex_NewSlotIndex) == 0x000028, "Member 'WBP_ActionBar_C_SelectSlotByIndex::CallFunc_SetColumnIndex_NewSlotIndex' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_SelectSlotByIndex, CallFunc_GetItemAt_ReturnValue) == 0x000030, "Member 'WBP_ActionBar_C_SelectSlotByIndex::CallFunc_GetItemAt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_SelectSlotByIndex, CallFunc_ItemIsEmpty_ReturnValue) == 0x000090, "Member 'WBP_ActionBar_C_SelectSlotByIndex::CallFunc_ItemIsEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_SelectSlotByIndex, CallFunc_Not_PreBool_ReturnValue) == 0x000091, "Member 'WBP_ActionBar_C_SelectSlotByIndex::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function WBP_ActionBar.WBP_ActionBar_C.SetColumnIndex
// 0x0068 (0x0068 - 0x0000)
struct WBP_ActionBar_C_SetColumnIndex final
{
public:
	int32                                         SlotIndex;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ShouldUpdateEquipped;                              // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4FE2[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         NewSlotIndex;                                      // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetConsoleVariableBoolValue_ReturnValue;  // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EValeriaFuncResult                            CallFunc_GetValeriaCharacter_OutResult;            // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4FE3[0x2];                                     // 0x000E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class AValeriaCharacter*                      CallFunc_GetValeriaCharacter_ReturnValue;          // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPlayerInventoryComponent*              CallFunc_GetInventory_ReturnValue;                 // 0x0018(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4FE4[0x3];                                     // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_CheckNextSlot_OutIndex;                   // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue_1;            // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x002A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4FE5[0x1];                                     // 0x002B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetChildrenCount_ReturnValue;             // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWidget*                                CallFunc_GetChildAt_ReturnValue;                   // 0x0038(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UWBP_ActionBarSlot_C*                   K2Node_DynamicCast_AsWBP_Action_Bar_Slot;          // 0x0040(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4FE6[0x2];                                     // 0x004A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWidget*                                CallFunc_GetChildAt_ReturnValue_1;                 // 0x0050(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UWBP_ActionBarSlot_C*                   K2Node_DynamicCast_AsWBP_Action_Bar_Slot_1;        // 0x0058(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ActionBar_C_SetColumnIndex) == 0x000008, "Wrong alignment on WBP_ActionBar_C_SetColumnIndex");
static_assert(sizeof(WBP_ActionBar_C_SetColumnIndex) == 0x000068, "Wrong size on WBP_ActionBar_C_SetColumnIndex");
static_assert(offsetof(WBP_ActionBar_C_SetColumnIndex, SlotIndex) == 0x000000, "Member 'WBP_ActionBar_C_SetColumnIndex::SlotIndex' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_SetColumnIndex, ShouldUpdateEquipped) == 0x000004, "Member 'WBP_ActionBar_C_SetColumnIndex::ShouldUpdateEquipped' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_SetColumnIndex, NewSlotIndex) == 0x000008, "Member 'WBP_ActionBar_C_SetColumnIndex::NewSlotIndex' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_SetColumnIndex, CallFunc_GetConsoleVariableBoolValue_ReturnValue) == 0x00000C, "Member 'WBP_ActionBar_C_SetColumnIndex::CallFunc_GetConsoleVariableBoolValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_SetColumnIndex, CallFunc_GetValeriaCharacter_OutResult) == 0x00000D, "Member 'WBP_ActionBar_C_SetColumnIndex::CallFunc_GetValeriaCharacter_OutResult' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_SetColumnIndex, CallFunc_GetValeriaCharacter_ReturnValue) == 0x000010, "Member 'WBP_ActionBar_C_SetColumnIndex::CallFunc_GetValeriaCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_SetColumnIndex, CallFunc_GetInventory_ReturnValue) == 0x000018, "Member 'WBP_ActionBar_C_SetColumnIndex::CallFunc_GetInventory_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_SetColumnIndex, K2Node_SwitchEnum_CmpSuccess) == 0x000020, "Member 'WBP_ActionBar_C_SetColumnIndex::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_SetColumnIndex, CallFunc_CheckNextSlot_OutIndex) == 0x000024, "Member 'WBP_ActionBar_C_SetColumnIndex::CallFunc_CheckNextSlot_OutIndex' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_SetColumnIndex, CallFunc_NotEqual_IntInt_ReturnValue) == 0x000028, "Member 'WBP_ActionBar_C_SetColumnIndex::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_SetColumnIndex, CallFunc_NotEqual_IntInt_ReturnValue_1) == 0x000029, "Member 'WBP_ActionBar_C_SetColumnIndex::CallFunc_NotEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_SetColumnIndex, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x00002A, "Member 'WBP_ActionBar_C_SetColumnIndex::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_SetColumnIndex, CallFunc_GetChildrenCount_ReturnValue) == 0x00002C, "Member 'WBP_ActionBar_C_SetColumnIndex::CallFunc_GetChildrenCount_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_SetColumnIndex, CallFunc_Subtract_IntInt_ReturnValue) == 0x000030, "Member 'WBP_ActionBar_C_SetColumnIndex::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_SetColumnIndex, Temp_int_Variable) == 0x000034, "Member 'WBP_ActionBar_C_SetColumnIndex::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_SetColumnIndex, CallFunc_GetChildAt_ReturnValue) == 0x000038, "Member 'WBP_ActionBar_C_SetColumnIndex::CallFunc_GetChildAt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_SetColumnIndex, K2Node_DynamicCast_AsWBP_Action_Bar_Slot) == 0x000040, "Member 'WBP_ActionBar_C_SetColumnIndex::K2Node_DynamicCast_AsWBP_Action_Bar_Slot' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_SetColumnIndex, K2Node_DynamicCast_bSuccess) == 0x000048, "Member 'WBP_ActionBar_C_SetColumnIndex::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_SetColumnIndex, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000049, "Member 'WBP_ActionBar_C_SetColumnIndex::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_SetColumnIndex, CallFunc_Add_IntInt_ReturnValue) == 0x00004C, "Member 'WBP_ActionBar_C_SetColumnIndex::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_SetColumnIndex, CallFunc_GetChildAt_ReturnValue_1) == 0x000050, "Member 'WBP_ActionBar_C_SetColumnIndex::CallFunc_GetChildAt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_SetColumnIndex, K2Node_DynamicCast_AsWBP_Action_Bar_Slot_1) == 0x000058, "Member 'WBP_ActionBar_C_SetColumnIndex::K2Node_DynamicCast_AsWBP_Action_Bar_Slot_1' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_SetColumnIndex, K2Node_DynamicCast_bSuccess_1) == 0x000060, "Member 'WBP_ActionBar_C_SetColumnIndex::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");

// Function WBP_ActionBar.WBP_ActionBar_C.SetSelectedItem
// 0x0038 (0x0038 - 0x0000)
struct WBP_ActionBar_C_SetSelectedItem final
{
public:
	bool                                          ClearSelected;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          AllowQuickUse;                                     // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4FE7[0x6];                                     // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UEquipmentComponent*                    LocalEquipment;                                    // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EValeriaFuncResult                            CallFunc_GetValeriaCharacter_OutResult;            // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4FE8[0x6];                                     // 0x0012(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AValeriaCharacter*                      CallFunc_GetValeriaCharacter_ReturnValue;          // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UEquipmentComponent*                    CallFunc_GetEquipment_ReturnValue;                 // 0x0020(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4FE9[0x3];                                     // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FBagSlotLocation                       CallFunc_GetLocationAtActionBarIndex_ReturnValue;  // 0x002C(0x0008)(NoDestructor)
	bool                                          CallFunc_Client_TrySelectItemFromInventory_ReturnValue; // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ActionBar_C_SetSelectedItem) == 0x000008, "Wrong alignment on WBP_ActionBar_C_SetSelectedItem");
static_assert(sizeof(WBP_ActionBar_C_SetSelectedItem) == 0x000038, "Wrong size on WBP_ActionBar_C_SetSelectedItem");
static_assert(offsetof(WBP_ActionBar_C_SetSelectedItem, ClearSelected) == 0x000000, "Member 'WBP_ActionBar_C_SetSelectedItem::ClearSelected' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_SetSelectedItem, AllowQuickUse) == 0x000001, "Member 'WBP_ActionBar_C_SetSelectedItem::AllowQuickUse' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_SetSelectedItem, LocalEquipment) == 0x000008, "Member 'WBP_ActionBar_C_SetSelectedItem::LocalEquipment' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_SetSelectedItem, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'WBP_ActionBar_C_SetSelectedItem::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_SetSelectedItem, CallFunc_GetValeriaCharacter_OutResult) == 0x000011, "Member 'WBP_ActionBar_C_SetSelectedItem::CallFunc_GetValeriaCharacter_OutResult' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_SetSelectedItem, CallFunc_GetValeriaCharacter_ReturnValue) == 0x000018, "Member 'WBP_ActionBar_C_SetSelectedItem::CallFunc_GetValeriaCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_SetSelectedItem, CallFunc_GetEquipment_ReturnValue) == 0x000020, "Member 'WBP_ActionBar_C_SetSelectedItem::CallFunc_GetEquipment_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_SetSelectedItem, K2Node_SwitchEnum_CmpSuccess) == 0x000028, "Member 'WBP_ActionBar_C_SetSelectedItem::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_SetSelectedItem, CallFunc_GetLocationAtActionBarIndex_ReturnValue) == 0x00002C, "Member 'WBP_ActionBar_C_SetSelectedItem::CallFunc_GetLocationAtActionBarIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_SetSelectedItem, CallFunc_Client_TrySelectItemFromInventory_ReturnValue) == 0x000034, "Member 'WBP_ActionBar_C_SetSelectedItem::CallFunc_Client_TrySelectItemFromInventory_ReturnValue' has a wrong offset!");

// Function WBP_ActionBar.WBP_ActionBar_C.SetTickColorForActionBarIndex
// 0x0010 (0x0010 - 0x0000)
struct WBP_ActionBar_C_SetTickColorForActionBarIndex final
{
public:
	int32                                         ActionBarRowIndex;                                 // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4FEA[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUserWidget*                            TickWidget;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ActionBar_C_SetTickColorForActionBarIndex) == 0x000008, "Wrong alignment on WBP_ActionBar_C_SetTickColorForActionBarIndex");
static_assert(sizeof(WBP_ActionBar_C_SetTickColorForActionBarIndex) == 0x000010, "Wrong size on WBP_ActionBar_C_SetTickColorForActionBarIndex");
static_assert(offsetof(WBP_ActionBar_C_SetTickColorForActionBarIndex, ActionBarRowIndex) == 0x000000, "Member 'WBP_ActionBar_C_SetTickColorForActionBarIndex::ActionBarRowIndex' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_SetTickColorForActionBarIndex, TickWidget) == 0x000008, "Member 'WBP_ActionBar_C_SetTickColorForActionBarIndex::TickWidget' has a wrong offset!");

// Function WBP_ActionBar.WBP_ActionBar_C.SetVisibilityOfFullActionBar
// 0x0005 (0x0005 - 0x0000)
struct WBP_ActionBar_C_SetVisibilityOfFullActionBar final
{
public:
	bool                                          Param_IsVisible;                                   // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ActionBar_C_SetVisibilityOfFullActionBar) == 0x000001, "Wrong alignment on WBP_ActionBar_C_SetVisibilityOfFullActionBar");
static_assert(sizeof(WBP_ActionBar_C_SetVisibilityOfFullActionBar) == 0x000005, "Wrong size on WBP_ActionBar_C_SetVisibilityOfFullActionBar");
static_assert(offsetof(WBP_ActionBar_C_SetVisibilityOfFullActionBar, Param_IsVisible) == 0x000000, "Member 'WBP_ActionBar_C_SetVisibilityOfFullActionBar::Param_IsVisible' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_SetVisibilityOfFullActionBar, Temp_bool_Variable) == 0x000001, "Member 'WBP_ActionBar_C_SetVisibilityOfFullActionBar::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_SetVisibilityOfFullActionBar, Temp_byte_Variable) == 0x000002, "Member 'WBP_ActionBar_C_SetVisibilityOfFullActionBar::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_SetVisibilityOfFullActionBar, Temp_byte_Variable_1) == 0x000003, "Member 'WBP_ActionBar_C_SetVisibilityOfFullActionBar::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_SetVisibilityOfFullActionBar, K2Node_Select_Default) == 0x000004, "Member 'WBP_ActionBar_C_SetVisibilityOfFullActionBar::K2Node_Select_Default' has a wrong offset!");

// Function WBP_ActionBar.WBP_ActionBar_C.TabColumnIndex
// 0x0058 (0x0058 - 0x0000)
struct WBP_ActionBar_C_TabColumnIndex final
{
public:
	bool                                          MoveForward;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ShouldTryEquip;                                    // 0x0001(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4FEB[0x2];                                     // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4FEC[0x2];                                     // 0x000A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_1;                               // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_2;                               // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EValeriaFuncResult                            CallFunc_GetValeriaCharacter_OutResult;            // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4FED[0x3];                                     // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AValeriaCharacter*                      CallFunc_GetValeriaCharacter_ReturnValue;          // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPlacementPickupModeActive_ReturnValue;  // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4FEE[0x1];                                     // 0x0023(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Select_Default;                             // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4FEF[0x3];                                     // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_SelectInt_ReturnValue;                    // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_1;            // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Select_Default_1;                           // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_SetColumnIndex_NewSlotIndex;              // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0045(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0046(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4FF0[0x1];                                     // 0x0047(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Select_Default_2;                           // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_SetColumnIndex_NewSlotIndex_1;            // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ActionBar_C_TabColumnIndex) == 0x000008, "Wrong alignment on WBP_ActionBar_C_TabColumnIndex");
static_assert(sizeof(WBP_ActionBar_C_TabColumnIndex) == 0x000058, "Wrong size on WBP_ActionBar_C_TabColumnIndex");
static_assert(offsetof(WBP_ActionBar_C_TabColumnIndex, MoveForward) == 0x000000, "Member 'WBP_ActionBar_C_TabColumnIndex::MoveForward' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_TabColumnIndex, ShouldTryEquip) == 0x000001, "Member 'WBP_ActionBar_C_TabColumnIndex::ShouldTryEquip' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_TabColumnIndex, Temp_int_Variable) == 0x000004, "Member 'WBP_ActionBar_C_TabColumnIndex::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_TabColumnIndex, Temp_bool_Variable) == 0x000008, "Member 'WBP_ActionBar_C_TabColumnIndex::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_TabColumnIndex, Temp_bool_Variable_1) == 0x000009, "Member 'WBP_ActionBar_C_TabColumnIndex::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_TabColumnIndex, Temp_int_Variable_1) == 0x00000C, "Member 'WBP_ActionBar_C_TabColumnIndex::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_TabColumnIndex, Temp_int_Variable_2) == 0x000010, "Member 'WBP_ActionBar_C_TabColumnIndex::Temp_int_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_TabColumnIndex, CallFunc_GetValeriaCharacter_OutResult) == 0x000014, "Member 'WBP_ActionBar_C_TabColumnIndex::CallFunc_GetValeriaCharacter_OutResult' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_TabColumnIndex, CallFunc_GetValeriaCharacter_ReturnValue) == 0x000018, "Member 'WBP_ActionBar_C_TabColumnIndex::CallFunc_GetValeriaCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_TabColumnIndex, CallFunc_IsPlacementPickupModeActive_ReturnValue) == 0x000020, "Member 'WBP_ActionBar_C_TabColumnIndex::CallFunc_IsPlacementPickupModeActive_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_TabColumnIndex, K2Node_SwitchEnum_CmpSuccess) == 0x000021, "Member 'WBP_ActionBar_C_TabColumnIndex::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_TabColumnIndex, CallFunc_Not_PreBool_ReturnValue) == 0x000022, "Member 'WBP_ActionBar_C_TabColumnIndex::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_TabColumnIndex, K2Node_Select_Default) == 0x000024, "Member 'WBP_ActionBar_C_TabColumnIndex::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_TabColumnIndex, CallFunc_Subtract_IntInt_ReturnValue) == 0x000028, "Member 'WBP_ActionBar_C_TabColumnIndex::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_TabColumnIndex, Temp_bool_Variable_2) == 0x00002C, "Member 'WBP_ActionBar_C_TabColumnIndex::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_TabColumnIndex, CallFunc_SelectInt_ReturnValue) == 0x000030, "Member 'WBP_ActionBar_C_TabColumnIndex::CallFunc_SelectInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_TabColumnIndex, CallFunc_Subtract_IntInt_ReturnValue_1) == 0x000034, "Member 'WBP_ActionBar_C_TabColumnIndex::CallFunc_Subtract_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_TabColumnIndex, K2Node_Select_Default_1) == 0x000038, "Member 'WBP_ActionBar_C_TabColumnIndex::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_TabColumnIndex, CallFunc_SetColumnIndex_NewSlotIndex) == 0x00003C, "Member 'WBP_ActionBar_C_TabColumnIndex::CallFunc_SetColumnIndex_NewSlotIndex' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_TabColumnIndex, CallFunc_Add_IntInt_ReturnValue) == 0x000040, "Member 'WBP_ActionBar_C_TabColumnIndex::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_TabColumnIndex, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000044, "Member 'WBP_ActionBar_C_TabColumnIndex::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_TabColumnIndex, CallFunc_Less_IntInt_ReturnValue) == 0x000045, "Member 'WBP_ActionBar_C_TabColumnIndex::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_TabColumnIndex, CallFunc_BooleanAND_ReturnValue) == 0x000046, "Member 'WBP_ActionBar_C_TabColumnIndex::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_TabColumnIndex, K2Node_Select_Default_2) == 0x000048, "Member 'WBP_ActionBar_C_TabColumnIndex::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_TabColumnIndex, CallFunc_SetColumnIndex_NewSlotIndex_1) == 0x00004C, "Member 'WBP_ActionBar_C_TabColumnIndex::CallFunc_SetColumnIndex_NewSlotIndex_1' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_TabColumnIndex, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000050, "Member 'WBP_ActionBar_C_TabColumnIndex::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");

// Function WBP_ActionBar.WBP_ActionBar_C.TabRowIndex
// 0x0080 (0x0080 - 0x0000)
struct WBP_ActionBar_C_TabRowIndex final
{
public:
	bool                                          MoveForward;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4FF1[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         NumActionBarRows;                                  // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         MaxActionBarRow;                                   // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         NewRowIndex;                                       // 0x000C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetChildrenCount_ReturnValue;             // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4FF2[0x4];                                     // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UValeriaGameUserSettings*               CallFunc_GetValeriaGameUserSettings_ReturnValue;   // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x002D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4FF3[0x2];                                     // 0x002E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Select_Default;                             // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4FF4[0x3];                                     // 0x0035(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Clamp_ReturnValue;                        // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetConsoleVariableBoolValue_ReturnValue;  // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x003D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4FF5[0x2];                                     // 0x003E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetNumberOfActionBarRows_ReturnValue;     // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Clamp_ReturnValue_1;                      // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_1;            // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_AkEventGlobal_ReturnValue;                // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_SetColumnIndex_NewSlotIndex;              // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue_1;            // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4FF6[0x3];                                     // 0x0055(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_2;                               // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x005C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4FF7[0x3];                                     // 0x005D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                CallFunc_GetChildAt_ReturnValue;                   // 0x0060(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UWBP_ActionBarRowTick_C*                K2Node_DynamicCast_AsWBP_Action_Bar_Row_Tick;      // 0x0068(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0071(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4FF8[0x2];                                     // 0x0072(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetNumberOfActionBarRows_ReturnValue_1;   // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ActionBar_C_TabRowIndex) == 0x000008, "Wrong alignment on WBP_ActionBar_C_TabRowIndex");
static_assert(sizeof(WBP_ActionBar_C_TabRowIndex) == 0x000080, "Wrong size on WBP_ActionBar_C_TabRowIndex");
static_assert(offsetof(WBP_ActionBar_C_TabRowIndex, MoveForward) == 0x000000, "Member 'WBP_ActionBar_C_TabRowIndex::MoveForward' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_TabRowIndex, NumActionBarRows) == 0x000004, "Member 'WBP_ActionBar_C_TabRowIndex::NumActionBarRows' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_TabRowIndex, MaxActionBarRow) == 0x000008, "Member 'WBP_ActionBar_C_TabRowIndex::MaxActionBarRow' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_TabRowIndex, NewRowIndex) == 0x00000C, "Member 'WBP_ActionBar_C_TabRowIndex::NewRowIndex' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_TabRowIndex, CallFunc_GetChildrenCount_ReturnValue) == 0x000010, "Member 'WBP_ActionBar_C_TabRowIndex::CallFunc_GetChildrenCount_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_TabRowIndex, CallFunc_GetValeriaGameUserSettings_ReturnValue) == 0x000018, "Member 'WBP_ActionBar_C_TabRowIndex::CallFunc_GetValeriaGameUserSettings_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_TabRowIndex, Temp_int_Variable) == 0x000020, "Member 'WBP_ActionBar_C_TabRowIndex::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_TabRowIndex, Temp_int_Variable_1) == 0x000024, "Member 'WBP_ActionBar_C_TabRowIndex::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_TabRowIndex, CallFunc_Subtract_IntInt_ReturnValue) == 0x000028, "Member 'WBP_ActionBar_C_TabRowIndex::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_TabRowIndex, Temp_bool_Variable) == 0x00002C, "Member 'WBP_ActionBar_C_TabRowIndex::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_TabRowIndex, CallFunc_Less_IntInt_ReturnValue) == 0x00002D, "Member 'WBP_ActionBar_C_TabRowIndex::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_TabRowIndex, K2Node_Select_Default) == 0x000030, "Member 'WBP_ActionBar_C_TabRowIndex::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_TabRowIndex, CallFunc_Greater_IntInt_ReturnValue) == 0x000034, "Member 'WBP_ActionBar_C_TabRowIndex::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_TabRowIndex, CallFunc_Clamp_ReturnValue) == 0x000038, "Member 'WBP_ActionBar_C_TabRowIndex::CallFunc_Clamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_TabRowIndex, CallFunc_GetConsoleVariableBoolValue_ReturnValue) == 0x00003C, "Member 'WBP_ActionBar_C_TabRowIndex::CallFunc_GetConsoleVariableBoolValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_TabRowIndex, CallFunc_NotEqual_IntInt_ReturnValue) == 0x00003D, "Member 'WBP_ActionBar_C_TabRowIndex::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_TabRowIndex, CallFunc_GetNumberOfActionBarRows_ReturnValue) == 0x000040, "Member 'WBP_ActionBar_C_TabRowIndex::CallFunc_GetNumberOfActionBarRows_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_TabRowIndex, CallFunc_Clamp_ReturnValue_1) == 0x000044, "Member 'WBP_ActionBar_C_TabRowIndex::CallFunc_Clamp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_TabRowIndex, CallFunc_Subtract_IntInt_ReturnValue_1) == 0x000048, "Member 'WBP_ActionBar_C_TabRowIndex::CallFunc_Subtract_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_TabRowIndex, CallFunc_AkEventGlobal_ReturnValue) == 0x00004C, "Member 'WBP_ActionBar_C_TabRowIndex::CallFunc_AkEventGlobal_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_TabRowIndex, CallFunc_SetColumnIndex_NewSlotIndex) == 0x000050, "Member 'WBP_ActionBar_C_TabRowIndex::CallFunc_SetColumnIndex_NewSlotIndex' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_TabRowIndex, CallFunc_NotEqual_IntInt_ReturnValue_1) == 0x000054, "Member 'WBP_ActionBar_C_TabRowIndex::CallFunc_NotEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_TabRowIndex, Temp_int_Variable_2) == 0x000058, "Member 'WBP_ActionBar_C_TabRowIndex::Temp_int_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_TabRowIndex, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x00005C, "Member 'WBP_ActionBar_C_TabRowIndex::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_TabRowIndex, CallFunc_GetChildAt_ReturnValue) == 0x000060, "Member 'WBP_ActionBar_C_TabRowIndex::CallFunc_GetChildAt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_TabRowIndex, K2Node_DynamicCast_AsWBP_Action_Bar_Row_Tick) == 0x000068, "Member 'WBP_ActionBar_C_TabRowIndex::K2Node_DynamicCast_AsWBP_Action_Bar_Row_Tick' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_TabRowIndex, K2Node_DynamicCast_bSuccess) == 0x000070, "Member 'WBP_ActionBar_C_TabRowIndex::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_TabRowIndex, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000071, "Member 'WBP_ActionBar_C_TabRowIndex::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_TabRowIndex, CallFunc_Add_IntInt_ReturnValue) == 0x000074, "Member 'WBP_ActionBar_C_TabRowIndex::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_TabRowIndex, CallFunc_Add_IntInt_ReturnValue_1) == 0x000078, "Member 'WBP_ActionBar_C_TabRowIndex::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_TabRowIndex, CallFunc_GetNumberOfActionBarRows_ReturnValue_1) == 0x00007C, "Member 'WBP_ActionBar_C_TabRowIndex::CallFunc_GetNumberOfActionBarRows_ReturnValue_1' has a wrong offset!");

// Function WBP_ActionBar.WBP_ActionBar_C.TryShowFullInventoryFTUE
// 0x0050 (0x0050 - 0x0000)
struct WBP_ActionBar_C_TryShowFullInventoryFTUE final
{
public:
	class UVAL_TutorialFlagsManager*              CallFunc_GetLocalPlayerSubsystem_ReturnValue;      // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UVAL_TutorialFlagsManager*              CallFunc_GetLocalPlayerSubsystem_ReturnValue_1;    // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CanStartTutorialForFlag_ReturnValue;      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4FF9[0x7];                                     // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class US6UI_UIManagerWidgetBase*              CallFunc_GetUIManagerWidget_ReturnValue;           // 0x0020(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UUserWidget* ModalWidget, TArray<class UUserWidget*>& TutorialWidgets)> K2Node_CreateDelegate_OutputDelegate;              // 0x0028(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_GameplayUIManagerTutorial_CM_C> K2Node_DynamicCast_AsBPI_Gameplay_UIManager_Tutorial_CM; // 0x0038(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_RedirectTutorialModalType_bSuccess;       // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ActionBar_C_TryShowFullInventoryFTUE) == 0x000008, "Wrong alignment on WBP_ActionBar_C_TryShowFullInventoryFTUE");
static_assert(sizeof(WBP_ActionBar_C_TryShowFullInventoryFTUE) == 0x000050, "Wrong size on WBP_ActionBar_C_TryShowFullInventoryFTUE");
static_assert(offsetof(WBP_ActionBar_C_TryShowFullInventoryFTUE, CallFunc_GetLocalPlayerSubsystem_ReturnValue) == 0x000000, "Member 'WBP_ActionBar_C_TryShowFullInventoryFTUE::CallFunc_GetLocalPlayerSubsystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_TryShowFullInventoryFTUE, CallFunc_GetLocalPlayerSubsystem_ReturnValue_1) == 0x000008, "Member 'WBP_ActionBar_C_TryShowFullInventoryFTUE::CallFunc_GetLocalPlayerSubsystem_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_TryShowFullInventoryFTUE, CallFunc_CanStartTutorialForFlag_ReturnValue) == 0x000010, "Member 'WBP_ActionBar_C_TryShowFullInventoryFTUE::CallFunc_CanStartTutorialForFlag_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_TryShowFullInventoryFTUE, CallFunc_GetPlayerController_ReturnValue) == 0x000018, "Member 'WBP_ActionBar_C_TryShowFullInventoryFTUE::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_TryShowFullInventoryFTUE, CallFunc_GetUIManagerWidget_ReturnValue) == 0x000020, "Member 'WBP_ActionBar_C_TryShowFullInventoryFTUE::CallFunc_GetUIManagerWidget_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_TryShowFullInventoryFTUE, K2Node_CreateDelegate_OutputDelegate) == 0x000028, "Member 'WBP_ActionBar_C_TryShowFullInventoryFTUE::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_TryShowFullInventoryFTUE, K2Node_DynamicCast_AsBPI_Gameplay_UIManager_Tutorial_CM) == 0x000038, "Member 'WBP_ActionBar_C_TryShowFullInventoryFTUE::K2Node_DynamicCast_AsBPI_Gameplay_UIManager_Tutorial_CM' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_TryShowFullInventoryFTUE, K2Node_DynamicCast_bSuccess) == 0x000048, "Member 'WBP_ActionBar_C_TryShowFullInventoryFTUE::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_TryShowFullInventoryFTUE, CallFunc_RedirectTutorialModalType_bSuccess) == 0x000049, "Member 'WBP_ActionBar_C_TryShowFullInventoryFTUE::CallFunc_RedirectTutorialModalType_bSuccess' has a wrong offset!");

// Function WBP_ActionBar.WBP_ActionBar_C.TryShowMedalsFTUE
// 0x0040 (0x0040 - 0x0000)
struct WBP_ActionBar_C_TryShowMedalsFTUE final
{
public:
	class UVAL_TutorialFlagsManager*              CallFunc_GetLocalPlayerSubsystem_ReturnValue;      // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class US6UI_UIManagerWidgetBase*              CallFunc_GetUIManagerWidget_ReturnValue;           // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UUserWidget* ModalWidget, TArray<class UUserWidget*>& TutorialWidgets)> K2Node_CreateDelegate_OutputDelegate;              // 0x0018(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_GameplayUIManagerTutorial_CM_C> K2Node_DynamicCast_AsBPI_Gameplay_UIManager_Tutorial_CM; // 0x0028(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_RedirectTutorialModalType_bSuccess;       // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ActionBar_C_TryShowMedalsFTUE) == 0x000008, "Wrong alignment on WBP_ActionBar_C_TryShowMedalsFTUE");
static_assert(sizeof(WBP_ActionBar_C_TryShowMedalsFTUE) == 0x000040, "Wrong size on WBP_ActionBar_C_TryShowMedalsFTUE");
static_assert(offsetof(WBP_ActionBar_C_TryShowMedalsFTUE, CallFunc_GetLocalPlayerSubsystem_ReturnValue) == 0x000000, "Member 'WBP_ActionBar_C_TryShowMedalsFTUE::CallFunc_GetLocalPlayerSubsystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_TryShowMedalsFTUE, CallFunc_GetPlayerController_ReturnValue) == 0x000008, "Member 'WBP_ActionBar_C_TryShowMedalsFTUE::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_TryShowMedalsFTUE, CallFunc_GetUIManagerWidget_ReturnValue) == 0x000010, "Member 'WBP_ActionBar_C_TryShowMedalsFTUE::CallFunc_GetUIManagerWidget_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_TryShowMedalsFTUE, K2Node_CreateDelegate_OutputDelegate) == 0x000018, "Member 'WBP_ActionBar_C_TryShowMedalsFTUE::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_TryShowMedalsFTUE, K2Node_DynamicCast_AsBPI_Gameplay_UIManager_Tutorial_CM) == 0x000028, "Member 'WBP_ActionBar_C_TryShowMedalsFTUE::K2Node_DynamicCast_AsBPI_Gameplay_UIManager_Tutorial_CM' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_TryShowMedalsFTUE, K2Node_DynamicCast_bSuccess) == 0x000038, "Member 'WBP_ActionBar_C_TryShowMedalsFTUE::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_TryShowMedalsFTUE, CallFunc_RedirectTutorialModalType_bSuccess) == 0x000039, "Member 'WBP_ActionBar_C_TryShowMedalsFTUE::CallFunc_RedirectTutorialModalType_bSuccess' has a wrong offset!");

// Function WBP_ActionBar.WBP_ActionBar_C.TryShowMultipleActionBarsFTUE
// 0x0050 (0x0050 - 0x0000)
struct WBP_ActionBar_C_TryShowMultipleActionBarsFTUE final
{
public:
	class UVAL_TutorialFlagsManager*              CallFunc_GetLocalPlayerSubsystem_ReturnValue;      // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UVAL_TutorialFlagsManager*              CallFunc_GetLocalPlayerSubsystem_ReturnValue_1;    // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CanStartTutorialForFlag_ReturnValue;      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4FFA[0x7];                                     // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class US6UI_UIManagerWidgetBase*              CallFunc_GetUIManagerWidget_ReturnValue;           // 0x0020(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UUserWidget* ModalWidget, TArray<class UUserWidget*>& TutorialWidgets)> K2Node_CreateDelegate_OutputDelegate;              // 0x0028(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_GameplayUIManagerTutorial_CM_C> K2Node_DynamicCast_AsBPI_Gameplay_UIManager_Tutorial_CM; // 0x0038(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_RedirectTutorialModalType_bSuccess;       // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ActionBar_C_TryShowMultipleActionBarsFTUE) == 0x000008, "Wrong alignment on WBP_ActionBar_C_TryShowMultipleActionBarsFTUE");
static_assert(sizeof(WBP_ActionBar_C_TryShowMultipleActionBarsFTUE) == 0x000050, "Wrong size on WBP_ActionBar_C_TryShowMultipleActionBarsFTUE");
static_assert(offsetof(WBP_ActionBar_C_TryShowMultipleActionBarsFTUE, CallFunc_GetLocalPlayerSubsystem_ReturnValue) == 0x000000, "Member 'WBP_ActionBar_C_TryShowMultipleActionBarsFTUE::CallFunc_GetLocalPlayerSubsystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_TryShowMultipleActionBarsFTUE, CallFunc_GetLocalPlayerSubsystem_ReturnValue_1) == 0x000008, "Member 'WBP_ActionBar_C_TryShowMultipleActionBarsFTUE::CallFunc_GetLocalPlayerSubsystem_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_TryShowMultipleActionBarsFTUE, CallFunc_CanStartTutorialForFlag_ReturnValue) == 0x000010, "Member 'WBP_ActionBar_C_TryShowMultipleActionBarsFTUE::CallFunc_CanStartTutorialForFlag_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_TryShowMultipleActionBarsFTUE, CallFunc_GetPlayerController_ReturnValue) == 0x000018, "Member 'WBP_ActionBar_C_TryShowMultipleActionBarsFTUE::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_TryShowMultipleActionBarsFTUE, CallFunc_GetUIManagerWidget_ReturnValue) == 0x000020, "Member 'WBP_ActionBar_C_TryShowMultipleActionBarsFTUE::CallFunc_GetUIManagerWidget_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_TryShowMultipleActionBarsFTUE, K2Node_CreateDelegate_OutputDelegate) == 0x000028, "Member 'WBP_ActionBar_C_TryShowMultipleActionBarsFTUE::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_TryShowMultipleActionBarsFTUE, K2Node_DynamicCast_AsBPI_Gameplay_UIManager_Tutorial_CM) == 0x000038, "Member 'WBP_ActionBar_C_TryShowMultipleActionBarsFTUE::K2Node_DynamicCast_AsBPI_Gameplay_UIManager_Tutorial_CM' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_TryShowMultipleActionBarsFTUE, K2Node_DynamicCast_bSuccess) == 0x000048, "Member 'WBP_ActionBar_C_TryShowMultipleActionBarsFTUE::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_TryShowMultipleActionBarsFTUE, CallFunc_RedirectTutorialModalType_bSuccess) == 0x000049, "Member 'WBP_ActionBar_C_TryShowMultipleActionBarsFTUE::CallFunc_RedirectTutorialModalType_bSuccess' has a wrong offset!");

// Function WBP_ActionBar.WBP_ActionBar_C.UpdateActionBarTicks
// 0x0070 (0x0070 - 0x0000)
struct WBP_ActionBar_C_UpdateActionBarTicks final
{
public:
	int32                                         NumberOfRows;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4FFB[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_ActionBarRowTick_C*                CurrentActionBarTick;                              // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CurrentIndex;                                      // 0x0010(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4FFC[0x4];                                     // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                CallFunc_GetChildAt_ReturnValue;                   // 0x0018(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UHorizontalBoxSlot*                     CallFunc_SlotAsHorizontalBoxSlot_ReturnValue;      // 0x0020(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4FFD[0x7];                                     // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_ActionBarRowTick_C*                K2Node_DynamicCast_AsWBP_Action_Bar_Row_Tick;      // 0x0030(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4FFE[0x3];                                     // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4FFF[0x3];                                     // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5000[0x3];                                     // 0x0049(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FMargin                                K2Node_MakeStruct_Margin;                          // 0x0050(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_GetNumberOfActionBarRows_ReturnValue;     // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Min_ReturnValue;                          // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Min_ReturnValue_1;                        // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ActionBar_C_UpdateActionBarTicks) == 0x000008, "Wrong alignment on WBP_ActionBar_C_UpdateActionBarTicks");
static_assert(sizeof(WBP_ActionBar_C_UpdateActionBarTicks) == 0x000070, "Wrong size on WBP_ActionBar_C_UpdateActionBarTicks");
static_assert(offsetof(WBP_ActionBar_C_UpdateActionBarTicks, NumberOfRows) == 0x000000, "Member 'WBP_ActionBar_C_UpdateActionBarTicks::NumberOfRows' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_UpdateActionBarTicks, CurrentActionBarTick) == 0x000008, "Member 'WBP_ActionBar_C_UpdateActionBarTicks::CurrentActionBarTick' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_UpdateActionBarTicks, CurrentIndex) == 0x000010, "Member 'WBP_ActionBar_C_UpdateActionBarTicks::CurrentIndex' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_UpdateActionBarTicks, CallFunc_GetChildAt_ReturnValue) == 0x000018, "Member 'WBP_ActionBar_C_UpdateActionBarTicks::CallFunc_GetChildAt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_UpdateActionBarTicks, CallFunc_SlotAsHorizontalBoxSlot_ReturnValue) == 0x000020, "Member 'WBP_ActionBar_C_UpdateActionBarTicks::CallFunc_SlotAsHorizontalBoxSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_UpdateActionBarTicks, CallFunc_NotEqual_IntInt_ReturnValue) == 0x000028, "Member 'WBP_ActionBar_C_UpdateActionBarTicks::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_UpdateActionBarTicks, K2Node_DynamicCast_AsWBP_Action_Bar_Row_Tick) == 0x000030, "Member 'WBP_ActionBar_C_UpdateActionBarTicks::K2Node_DynamicCast_AsWBP_Action_Bar_Row_Tick' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_UpdateActionBarTicks, K2Node_DynamicCast_bSuccess) == 0x000038, "Member 'WBP_ActionBar_C_UpdateActionBarTicks::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_UpdateActionBarTicks, CallFunc_Subtract_IntInt_ReturnValue) == 0x00003C, "Member 'WBP_ActionBar_C_UpdateActionBarTicks::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_UpdateActionBarTicks, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000040, "Member 'WBP_ActionBar_C_UpdateActionBarTicks::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_UpdateActionBarTicks, Temp_int_Variable) == 0x000044, "Member 'WBP_ActionBar_C_UpdateActionBarTicks::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_UpdateActionBarTicks, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000048, "Member 'WBP_ActionBar_C_UpdateActionBarTicks::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_UpdateActionBarTicks, CallFunc_Add_IntInt_ReturnValue) == 0x00004C, "Member 'WBP_ActionBar_C_UpdateActionBarTicks::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_UpdateActionBarTicks, K2Node_MakeStruct_Margin) == 0x000050, "Member 'WBP_ActionBar_C_UpdateActionBarTicks::K2Node_MakeStruct_Margin' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_UpdateActionBarTicks, CallFunc_GetNumberOfActionBarRows_ReturnValue) == 0x000060, "Member 'WBP_ActionBar_C_UpdateActionBarTicks::CallFunc_GetNumberOfActionBarRows_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_UpdateActionBarTicks, CallFunc_Min_ReturnValue) == 0x000064, "Member 'WBP_ActionBar_C_UpdateActionBarTicks::CallFunc_Min_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_UpdateActionBarTicks, CallFunc_Min_ReturnValue_1) == 0x000068, "Member 'WBP_ActionBar_C_UpdateActionBarTicks::CallFunc_Min_ReturnValue_1' has a wrong offset!");

// Function WBP_ActionBar.WBP_ActionBar_C.UpdateActionBarUsedType
// 0x0001 (0x0001 - 0x0000)
struct WBP_ActionBar_C_UpdateActionBarUsedType final
{
public:
	bool                                          bIsActionBarActivated;                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ActionBar_C_UpdateActionBarUsedType) == 0x000001, "Wrong alignment on WBP_ActionBar_C_UpdateActionBarUsedType");
static_assert(sizeof(WBP_ActionBar_C_UpdateActionBarUsedType) == 0x000001, "Wrong size on WBP_ActionBar_C_UpdateActionBarUsedType");
static_assert(offsetof(WBP_ActionBar_C_UpdateActionBarUsedType, bIsActionBarActivated) == 0x000000, "Member 'WBP_ActionBar_C_UpdateActionBarUsedType::bIsActionBarActivated' has a wrong offset!");

// Function WBP_ActionBar.WBP_ActionBar_C.UpdateEquippedItem
// 0x00A8 (0x00A8 - 0x0000)
struct WBP_ActionBar_C_UpdateEquippedItem final
{
public:
	class UWidget*                                HudSlotToActivate;                                 // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FBagSlotLocation                       ActionBarIndexInventoryLocation;                   // 0x0008(0x0008)(Edit, BlueprintVisible, DisableEditOnTemplate, NoDestructor)
	class AValeriaCharacter*                      ValeriaCharacter;                                  // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)
	class UEquipmentComponent*                    CallFunc_GetEquipment_ReturnValue;                 // 0x0018(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UEquipmentComponent*                    CallFunc_GetEquipment_ReturnValue_1;               // 0x0020(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FEquipmentItem                         CallFunc_GetEquippedItem_ReturnValue;              // 0x0028(0x0050)()
	bool                                          CallFunc_Client_TryUnequip_ReturnValue;            // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0079(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5001[0x6];                                     // 0x007A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UEquipmentComponent*                    CallFunc_GetEquipment_ReturnValue_2;               // 0x0080(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Client_TryEquipItemFromInventory_ReturnValue; // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0089(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5002[0x2];                                     // 0x008A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FBagSlotLocation                       CallFunc_GetLocationAtActionBarIndex_ReturnValue;  // 0x008C(0x0008)(NoDestructor)
	EValeriaFuncResult                            CallFunc_GetValeriaCharacter_OutResult;            // 0x0094(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5003[0x3];                                     // 0x0095(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AValeriaCharacter*                      CallFunc_GetValeriaCharacter_ReturnValue;          // 0x0098(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ActionBar_C_UpdateEquippedItem) == 0x000008, "Wrong alignment on WBP_ActionBar_C_UpdateEquippedItem");
static_assert(sizeof(WBP_ActionBar_C_UpdateEquippedItem) == 0x0000A8, "Wrong size on WBP_ActionBar_C_UpdateEquippedItem");
static_assert(offsetof(WBP_ActionBar_C_UpdateEquippedItem, HudSlotToActivate) == 0x000000, "Member 'WBP_ActionBar_C_UpdateEquippedItem::HudSlotToActivate' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_UpdateEquippedItem, ActionBarIndexInventoryLocation) == 0x000008, "Member 'WBP_ActionBar_C_UpdateEquippedItem::ActionBarIndexInventoryLocation' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_UpdateEquippedItem, ValeriaCharacter) == 0x000010, "Member 'WBP_ActionBar_C_UpdateEquippedItem::ValeriaCharacter' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_UpdateEquippedItem, CallFunc_GetEquipment_ReturnValue) == 0x000018, "Member 'WBP_ActionBar_C_UpdateEquippedItem::CallFunc_GetEquipment_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_UpdateEquippedItem, CallFunc_GetEquipment_ReturnValue_1) == 0x000020, "Member 'WBP_ActionBar_C_UpdateEquippedItem::CallFunc_GetEquipment_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_UpdateEquippedItem, CallFunc_GetEquippedItem_ReturnValue) == 0x000028, "Member 'WBP_ActionBar_C_UpdateEquippedItem::CallFunc_GetEquippedItem_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_UpdateEquippedItem, CallFunc_Client_TryUnequip_ReturnValue) == 0x000078, "Member 'WBP_ActionBar_C_UpdateEquippedItem::CallFunc_Client_TryUnequip_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_UpdateEquippedItem, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000079, "Member 'WBP_ActionBar_C_UpdateEquippedItem::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_UpdateEquippedItem, CallFunc_GetEquipment_ReturnValue_2) == 0x000080, "Member 'WBP_ActionBar_C_UpdateEquippedItem::CallFunc_GetEquipment_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_UpdateEquippedItem, CallFunc_Client_TryEquipItemFromInventory_ReturnValue) == 0x000088, "Member 'WBP_ActionBar_C_UpdateEquippedItem::CallFunc_Client_TryEquipItemFromInventory_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_UpdateEquippedItem, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000089, "Member 'WBP_ActionBar_C_UpdateEquippedItem::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_UpdateEquippedItem, CallFunc_GetLocationAtActionBarIndex_ReturnValue) == 0x00008C, "Member 'WBP_ActionBar_C_UpdateEquippedItem::CallFunc_GetLocationAtActionBarIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_UpdateEquippedItem, CallFunc_GetValeriaCharacter_OutResult) == 0x000094, "Member 'WBP_ActionBar_C_UpdateEquippedItem::CallFunc_GetValeriaCharacter_OutResult' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_UpdateEquippedItem, CallFunc_GetValeriaCharacter_ReturnValue) == 0x000098, "Member 'WBP_ActionBar_C_UpdateEquippedItem::CallFunc_GetValeriaCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_UpdateEquippedItem, K2Node_SwitchEnum_CmpSuccess) == 0x0000A0, "Member 'WBP_ActionBar_C_UpdateEquippedItem::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function WBP_ActionBar.WBP_ActionBar_C.UpdateInventoryBagIndex
// 0x0020 (0x0020 - 0x0000)
struct WBP_ActionBar_C_UpdateInventoryBagIndex final
{
public:
	int32                                         BagIndex;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x0008(0x0018)()
};
static_assert(alignof(WBP_ActionBar_C_UpdateInventoryBagIndex) == 0x000008, "Wrong alignment on WBP_ActionBar_C_UpdateInventoryBagIndex");
static_assert(sizeof(WBP_ActionBar_C_UpdateInventoryBagIndex) == 0x000020, "Wrong size on WBP_ActionBar_C_UpdateInventoryBagIndex");
static_assert(offsetof(WBP_ActionBar_C_UpdateInventoryBagIndex, BagIndex) == 0x000000, "Member 'WBP_ActionBar_C_UpdateInventoryBagIndex::BagIndex' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_UpdateInventoryBagIndex, CallFunc_Add_IntInt_ReturnValue) == 0x000004, "Member 'WBP_ActionBar_C_UpdateInventoryBagIndex::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_UpdateInventoryBagIndex, CallFunc_Conv_IntToText_ReturnValue) == 0x000008, "Member 'WBP_ActionBar_C_UpdateInventoryBagIndex::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");

// Function WBP_ActionBar.WBP_ActionBar_C.UpdateUI
// 0x0008 (0x0008 - 0x0000)
struct WBP_ActionBar_C_UpdateUI final
{
public:
	class UInventoryComponent*                    Inventory;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ActionBar_C_UpdateUI) == 0x000008, "Wrong alignment on WBP_ActionBar_C_UpdateUI");
static_assert(sizeof(WBP_ActionBar_C_UpdateUI) == 0x000008, "Wrong size on WBP_ActionBar_C_UpdateUI");
static_assert(offsetof(WBP_ActionBar_C_UpdateUI, Inventory) == 0x000000, "Member 'WBP_ActionBar_C_UpdateUI::Inventory' has a wrong offset!");

// Function WBP_ActionBar.WBP_ActionBar_C.UpdateUI_Internal
// 0x0548 (0x0548 - 0x0000)
struct WBP_ActionBar_C_UpdateUI_Internal final
{
public:
	class UInventoryComponent*                    UsedInv;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TArray<class UCurrencyConfig*>                CurrencyTypes;                                     // 0x0008(0x0010)(Edit, BlueprintVisible)
	TSet<TSoftObjectPtr<class UVAL_ItemTypeDefinitionAsset>> InsectCatchingItemTypes;                           // 0x0018(0x0050)(Edit, BlueprintVisible)
	TSet<TSoftObjectPtr<class UVAL_ItemTypeDefinitionAsset>> GardenTypes;                                       // 0x0068(0x0050)(Edit, BlueprintVisible)
	TSet<TSoftObjectPtr<class UVAL_ItemTypeDefinitionAsset>> FoundItemQuestStartingItemTypes;                   // 0x00B8(0x0050)(Edit, BlueprintVisible)
	TSet<TSoftObjectPtr<class UVAL_ItemTypeDefinitionAsset>> FishingRodItemTypes;                               // 0x0108(0x0050)(Edit, BlueprintVisible)
	struct FValeriaItem                           ToolItem;                                          // 0x0158(0x0060)(Edit, BlueprintVisible)
	TSet<TSoftObjectPtr<class UVAL_ItemTypeDefinitionAsset>> K2Node_MakeVariable_MakeVariableOutput;            // 0x01B8(0x0050)()
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x0208(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5004[0x3];                                     // 0x0209(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x020C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0210(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5005[0x7];                                     // 0x0211(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UVAL_TutorialFlagsManager*              CallFunc_GetLocalPlayerSubsystem_ReturnValue;      // 0x0218(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0220(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CanStartTutorialForFlag_ReturnValue;      // 0x0224(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5006[0x3];                                     // 0x0225(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0228(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x022C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0230(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable_1;        // 0x0234(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5007[0x3];                                     // 0x0235(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0238(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x023C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5008[0x3];                                     // 0x023D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TSet<TSoftObjectPtr<class UVAL_ItemTypeDefinitionAsset>> K2Node_MakeVariable_MakeVariableOutput_1;          // 0x0240(0x0050)()
	int32                                         Temp_int_Variable;                                 // 0x0290(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0294(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TSet<TSoftObjectPtr<class UVAL_ItemTypeDefinitionAsset>> K2Node_MakeVariable_MakeVariableOutput_2;          // 0x0298(0x0050)()
	int32                                         CallFunc_GetNumberOfActionBarRows_ReturnValue;     // 0x02E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x02EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Is_Action_Bar_Full_IsFull;                // 0x02F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5009[0x7];                                     // 0x02F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSet<TSoftObjectPtr<class UVAL_ItemTypeDefinitionAsset>> K2Node_MakeVariable_MakeVariableOutput_3;          // 0x02F8(0x0050)()
	bool                                          CallFunc_AreStorageSlotsFull_ReturnValue;          // 0x0348(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_500A[0x7];                                     // 0x0349(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UCurrencyConfig*>                K2Node_MakeArray_Array;                            // 0x0350(0x0010)(ReferenceParm)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0360(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0361(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0362(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_500B[0x5];                                     // 0x0363(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Temp_text_Variable;                                // 0x0368(0x0018)()
	class UCurrencyConfig*                        CallFunc_Array_Get_Item;                           // 0x0380(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0388(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EValeriaFuncResult                            CallFunc_GetValeriaCharacter_OutResult;            // 0x038C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_500C[0x3];                                     // 0x038D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AValeriaCharacter*                      CallFunc_GetValeriaCharacter_ReturnValue;          // 0x0390(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0398(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0399(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_500D[0x2];                                     // 0x039A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetCurrencyAmount_ReturnValue;            // 0x039C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x03A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x03A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_500E[0x6];                                     // 0x03A2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Temp_text_Variable_1;                              // 0x03A8(0x0018)()
	int32                                         Temp_int_Variable_1;                               // 0x03C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasItemsInActionBar_HasItems;             // 0x03C4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_500F[0x3];                                     // 0x03C5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x03C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x03CC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x03CD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5010[0x2];                                     // 0x03CE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<TSoftObjectPtr<class UVAL_ItemTypeDefinitionAsset>> CallFunc_Set_ToArray_Result;                       // 0x03D0(0x0010)(ReferenceParm)
	TSoftObjectPtr<class UVAL_ItemTypeDefinitionAsset> CallFunc_Array_Get_Item_1;                         // 0x03E0(0x0028)(HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0408(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x040C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x040D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x040E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5011[0x1];                                     // 0x040F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FValeriaItem                           CallFunc_GetItemAtActionBarIndex_ReturnValue;      // 0x0410(0x0060)()
	bool                                          CallFunc_ItemIsEmpty_ReturnValue;                  // 0x0470(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x0471(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EValeriaFuncResult                            CallFunc_GetValeriaCharacter_OutResult_1;          // 0x0472(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5012[0x5];                                     // 0x0473(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class AValeriaCharacter*                      CallFunc_GetValeriaCharacter_ReturnValue_1;        // 0x0478(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess_1;                    // 0x0480(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ContainsItemByType_ReturnValue;           // 0x0481(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x0482(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5013[0x1];                                     // 0x0483(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetNumberOfActionBarRows_ReturnValue_1;   // 0x0484(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_1;            // 0x0488(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetNumberOfOverflowSlots_ReturnValue;     // 0x048C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Clamp_ReturnValue;                        // 0x0490(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_1;             // 0x0494(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_AreStorageSlotsFull_ReturnValue_1;        // 0x0495(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5014[0x2];                                     // 0x0496(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select_Default;                             // 0x0498(0x0018)()
	ESlateVisibility                              K2Node_Select_Default_1;                           // 0x04B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x04B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5015[0x6];                                     // 0x04B2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UVAL_TutorialFlagsManager*              CallFunc_GetLocalPlayerSubsystem_ReturnValue_1;    // 0x04B8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CanStartTutorialForFlag_ReturnValue_1;    // 0x04C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5016[0x7];                                     // 0x04C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                CallFunc_GetChildAt_ReturnValue;                   // 0x04C8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UWBP_ActionBarSlot_C*                   K2Node_DynamicCast_AsWBP_Action_Bar_Slot;          // 0x04D0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x04D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5017[0x3];                                     // 0x04D9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_2;            // 0x04DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_1;           // 0x04E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5018[0x7];                                     // 0x04E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FValeriaItem                           CallFunc_GetItemAtActionBarIndex_ReturnValue_1;    // 0x04E8(0x0060)()
};
static_assert(alignof(WBP_ActionBar_C_UpdateUI_Internal) == 0x000008, "Wrong alignment on WBP_ActionBar_C_UpdateUI_Internal");
static_assert(sizeof(WBP_ActionBar_C_UpdateUI_Internal) == 0x000548, "Wrong size on WBP_ActionBar_C_UpdateUI_Internal");
static_assert(offsetof(WBP_ActionBar_C_UpdateUI_Internal, UsedInv) == 0x000000, "Member 'WBP_ActionBar_C_UpdateUI_Internal::UsedInv' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_UpdateUI_Internal, CurrencyTypes) == 0x000008, "Member 'WBP_ActionBar_C_UpdateUI_Internal::CurrencyTypes' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_UpdateUI_Internal, InsectCatchingItemTypes) == 0x000018, "Member 'WBP_ActionBar_C_UpdateUI_Internal::InsectCatchingItemTypes' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_UpdateUI_Internal, GardenTypes) == 0x000068, "Member 'WBP_ActionBar_C_UpdateUI_Internal::GardenTypes' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_UpdateUI_Internal, FoundItemQuestStartingItemTypes) == 0x0000B8, "Member 'WBP_ActionBar_C_UpdateUI_Internal::FoundItemQuestStartingItemTypes' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_UpdateUI_Internal, FishingRodItemTypes) == 0x000108, "Member 'WBP_ActionBar_C_UpdateUI_Internal::FishingRodItemTypes' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_UpdateUI_Internal, ToolItem) == 0x000158, "Member 'WBP_ActionBar_C_UpdateUI_Internal::ToolItem' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_UpdateUI_Internal, K2Node_MakeVariable_MakeVariableOutput) == 0x0001B8, "Member 'WBP_ActionBar_C_UpdateUI_Internal::K2Node_MakeVariable_MakeVariableOutput' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_UpdateUI_Internal, Temp_bool_True_if_break_was_hit_Variable) == 0x000208, "Member 'WBP_ActionBar_C_UpdateUI_Internal::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_UpdateUI_Internal, Temp_int_Array_Index_Variable) == 0x00020C, "Member 'WBP_ActionBar_C_UpdateUI_Internal::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_UpdateUI_Internal, CallFunc_Not_PreBool_ReturnValue) == 0x000210, "Member 'WBP_ActionBar_C_UpdateUI_Internal::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_UpdateUI_Internal, CallFunc_GetLocalPlayerSubsystem_ReturnValue) == 0x000218, "Member 'WBP_ActionBar_C_UpdateUI_Internal::CallFunc_GetLocalPlayerSubsystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_UpdateUI_Internal, Temp_int_Loop_Counter_Variable) == 0x000220, "Member 'WBP_ActionBar_C_UpdateUI_Internal::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_UpdateUI_Internal, CallFunc_CanStartTutorialForFlag_ReturnValue) == 0x000224, "Member 'WBP_ActionBar_C_UpdateUI_Internal::CallFunc_CanStartTutorialForFlag_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_UpdateUI_Internal, CallFunc_Add_IntInt_ReturnValue) == 0x000228, "Member 'WBP_ActionBar_C_UpdateUI_Internal::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_UpdateUI_Internal, Temp_int_Loop_Counter_Variable_1) == 0x00022C, "Member 'WBP_ActionBar_C_UpdateUI_Internal::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_UpdateUI_Internal, CallFunc_Add_IntInt_ReturnValue_1) == 0x000230, "Member 'WBP_ActionBar_C_UpdateUI_Internal::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_UpdateUI_Internal, Temp_bool_True_if_break_was_hit_Variable_1) == 0x000234, "Member 'WBP_ActionBar_C_UpdateUI_Internal::Temp_bool_True_if_break_was_hit_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_UpdateUI_Internal, Temp_int_Array_Index_Variable_1) == 0x000238, "Member 'WBP_ActionBar_C_UpdateUI_Internal::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_UpdateUI_Internal, CallFunc_Not_PreBool_ReturnValue_1) == 0x00023C, "Member 'WBP_ActionBar_C_UpdateUI_Internal::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_UpdateUI_Internal, K2Node_MakeVariable_MakeVariableOutput_1) == 0x000240, "Member 'WBP_ActionBar_C_UpdateUI_Internal::K2Node_MakeVariable_MakeVariableOutput_1' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_UpdateUI_Internal, Temp_int_Variable) == 0x000290, "Member 'WBP_ActionBar_C_UpdateUI_Internal::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_UpdateUI_Internal, CallFunc_Add_IntInt_ReturnValue_2) == 0x000294, "Member 'WBP_ActionBar_C_UpdateUI_Internal::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_UpdateUI_Internal, K2Node_MakeVariable_MakeVariableOutput_2) == 0x000298, "Member 'WBP_ActionBar_C_UpdateUI_Internal::K2Node_MakeVariable_MakeVariableOutput_2' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_UpdateUI_Internal, CallFunc_GetNumberOfActionBarRows_ReturnValue) == 0x0002E8, "Member 'WBP_ActionBar_C_UpdateUI_Internal::CallFunc_GetNumberOfActionBarRows_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_UpdateUI_Internal, CallFunc_Subtract_IntInt_ReturnValue) == 0x0002EC, "Member 'WBP_ActionBar_C_UpdateUI_Internal::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_UpdateUI_Internal, CallFunc_Is_Action_Bar_Full_IsFull) == 0x0002F0, "Member 'WBP_ActionBar_C_UpdateUI_Internal::CallFunc_Is_Action_Bar_Full_IsFull' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_UpdateUI_Internal, K2Node_MakeVariable_MakeVariableOutput_3) == 0x0002F8, "Member 'WBP_ActionBar_C_UpdateUI_Internal::K2Node_MakeVariable_MakeVariableOutput_3' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_UpdateUI_Internal, CallFunc_AreStorageSlotsFull_ReturnValue) == 0x000348, "Member 'WBP_ActionBar_C_UpdateUI_Internal::CallFunc_AreStorageSlotsFull_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_UpdateUI_Internal, K2Node_MakeArray_Array) == 0x000350, "Member 'WBP_ActionBar_C_UpdateUI_Internal::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_UpdateUI_Internal, Temp_byte_Variable) == 0x000360, "Member 'WBP_ActionBar_C_UpdateUI_Internal::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_UpdateUI_Internal, Temp_byte_Variable_1) == 0x000361, "Member 'WBP_ActionBar_C_UpdateUI_Internal::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_UpdateUI_Internal, Temp_bool_Variable) == 0x000362, "Member 'WBP_ActionBar_C_UpdateUI_Internal::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_UpdateUI_Internal, Temp_text_Variable) == 0x000368, "Member 'WBP_ActionBar_C_UpdateUI_Internal::Temp_text_Variable' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_UpdateUI_Internal, CallFunc_Array_Get_Item) == 0x000380, "Member 'WBP_ActionBar_C_UpdateUI_Internal::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_UpdateUI_Internal, CallFunc_Array_Length_ReturnValue) == 0x000388, "Member 'WBP_ActionBar_C_UpdateUI_Internal::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_UpdateUI_Internal, CallFunc_GetValeriaCharacter_OutResult) == 0x00038C, "Member 'WBP_ActionBar_C_UpdateUI_Internal::CallFunc_GetValeriaCharacter_OutResult' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_UpdateUI_Internal, CallFunc_GetValeriaCharacter_ReturnValue) == 0x000390, "Member 'WBP_ActionBar_C_UpdateUI_Internal::CallFunc_GetValeriaCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_UpdateUI_Internal, CallFunc_Less_IntInt_ReturnValue) == 0x000398, "Member 'WBP_ActionBar_C_UpdateUI_Internal::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_UpdateUI_Internal, CallFunc_BooleanAND_ReturnValue) == 0x000399, "Member 'WBP_ActionBar_C_UpdateUI_Internal::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_UpdateUI_Internal, CallFunc_GetCurrencyAmount_ReturnValue) == 0x00039C, "Member 'WBP_ActionBar_C_UpdateUI_Internal::CallFunc_GetCurrencyAmount_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_UpdateUI_Internal, CallFunc_Greater_IntInt_ReturnValue) == 0x0003A0, "Member 'WBP_ActionBar_C_UpdateUI_Internal::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_UpdateUI_Internal, K2Node_SwitchEnum_CmpSuccess) == 0x0003A1, "Member 'WBP_ActionBar_C_UpdateUI_Internal::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_UpdateUI_Internal, Temp_text_Variable_1) == 0x0003A8, "Member 'WBP_ActionBar_C_UpdateUI_Internal::Temp_text_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_UpdateUI_Internal, Temp_int_Variable_1) == 0x0003C0, "Member 'WBP_ActionBar_C_UpdateUI_Internal::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_UpdateUI_Internal, CallFunc_HasItemsInActionBar_HasItems) == 0x0003C4, "Member 'WBP_ActionBar_C_UpdateUI_Internal::CallFunc_HasItemsInActionBar_HasItems' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_UpdateUI_Internal, CallFunc_Add_IntInt_ReturnValue_3) == 0x0003C8, "Member 'WBP_ActionBar_C_UpdateUI_Internal::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_UpdateUI_Internal, CallFunc_LessEqual_IntInt_ReturnValue) == 0x0003CC, "Member 'WBP_ActionBar_C_UpdateUI_Internal::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_UpdateUI_Internal, Temp_bool_Variable_1) == 0x0003CD, "Member 'WBP_ActionBar_C_UpdateUI_Internal::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_UpdateUI_Internal, CallFunc_Set_ToArray_Result) == 0x0003D0, "Member 'WBP_ActionBar_C_UpdateUI_Internal::CallFunc_Set_ToArray_Result' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_UpdateUI_Internal, CallFunc_Array_Get_Item_1) == 0x0003E0, "Member 'WBP_ActionBar_C_UpdateUI_Internal::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_UpdateUI_Internal, CallFunc_Array_Length_ReturnValue_1) == 0x000408, "Member 'WBP_ActionBar_C_UpdateUI_Internal::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_UpdateUI_Internal, CallFunc_Less_IntInt_ReturnValue_1) == 0x00040C, "Member 'WBP_ActionBar_C_UpdateUI_Internal::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_UpdateUI_Internal, CallFunc_BooleanAND_ReturnValue_1) == 0x00040D, "Member 'WBP_ActionBar_C_UpdateUI_Internal::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_UpdateUI_Internal, Temp_bool_Variable_2) == 0x00040E, "Member 'WBP_ActionBar_C_UpdateUI_Internal::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_UpdateUI_Internal, CallFunc_GetItemAtActionBarIndex_ReturnValue) == 0x000410, "Member 'WBP_ActionBar_C_UpdateUI_Internal::CallFunc_GetItemAtActionBarIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_UpdateUI_Internal, CallFunc_ItemIsEmpty_ReturnValue) == 0x000470, "Member 'WBP_ActionBar_C_UpdateUI_Internal::CallFunc_ItemIsEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_UpdateUI_Internal, CallFunc_Not_PreBool_ReturnValue_2) == 0x000471, "Member 'WBP_ActionBar_C_UpdateUI_Internal::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_UpdateUI_Internal, CallFunc_GetValeriaCharacter_OutResult_1) == 0x000472, "Member 'WBP_ActionBar_C_UpdateUI_Internal::CallFunc_GetValeriaCharacter_OutResult_1' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_UpdateUI_Internal, CallFunc_GetValeriaCharacter_ReturnValue_1) == 0x000478, "Member 'WBP_ActionBar_C_UpdateUI_Internal::CallFunc_GetValeriaCharacter_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_UpdateUI_Internal, K2Node_SwitchEnum_CmpSuccess_1) == 0x000480, "Member 'WBP_ActionBar_C_UpdateUI_Internal::K2Node_SwitchEnum_CmpSuccess_1' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_UpdateUI_Internal, CallFunc_ContainsItemByType_ReturnValue) == 0x000481, "Member 'WBP_ActionBar_C_UpdateUI_Internal::CallFunc_ContainsItemByType_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_UpdateUI_Internal, CallFunc_BooleanAND_ReturnValue_2) == 0x000482, "Member 'WBP_ActionBar_C_UpdateUI_Internal::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_UpdateUI_Internal, CallFunc_GetNumberOfActionBarRows_ReturnValue_1) == 0x000484, "Member 'WBP_ActionBar_C_UpdateUI_Internal::CallFunc_GetNumberOfActionBarRows_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_UpdateUI_Internal, CallFunc_Subtract_IntInt_ReturnValue_1) == 0x000488, "Member 'WBP_ActionBar_C_UpdateUI_Internal::CallFunc_Subtract_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_UpdateUI_Internal, CallFunc_GetNumberOfOverflowSlots_ReturnValue) == 0x00048C, "Member 'WBP_ActionBar_C_UpdateUI_Internal::CallFunc_GetNumberOfOverflowSlots_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_UpdateUI_Internal, CallFunc_Clamp_ReturnValue) == 0x000490, "Member 'WBP_ActionBar_C_UpdateUI_Internal::CallFunc_Clamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_UpdateUI_Internal, CallFunc_Greater_IntInt_ReturnValue_1) == 0x000494, "Member 'WBP_ActionBar_C_UpdateUI_Internal::CallFunc_Greater_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_UpdateUI_Internal, CallFunc_AreStorageSlotsFull_ReturnValue_1) == 0x000495, "Member 'WBP_ActionBar_C_UpdateUI_Internal::CallFunc_AreStorageSlotsFull_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_UpdateUI_Internal, K2Node_Select_Default) == 0x000498, "Member 'WBP_ActionBar_C_UpdateUI_Internal::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_UpdateUI_Internal, K2Node_Select_Default_1) == 0x0004B0, "Member 'WBP_ActionBar_C_UpdateUI_Internal::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_UpdateUI_Internal, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x0004B1, "Member 'WBP_ActionBar_C_UpdateUI_Internal::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_UpdateUI_Internal, CallFunc_GetLocalPlayerSubsystem_ReturnValue_1) == 0x0004B8, "Member 'WBP_ActionBar_C_UpdateUI_Internal::CallFunc_GetLocalPlayerSubsystem_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_UpdateUI_Internal, CallFunc_CanStartTutorialForFlag_ReturnValue_1) == 0x0004C0, "Member 'WBP_ActionBar_C_UpdateUI_Internal::CallFunc_CanStartTutorialForFlag_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_UpdateUI_Internal, CallFunc_GetChildAt_ReturnValue) == 0x0004C8, "Member 'WBP_ActionBar_C_UpdateUI_Internal::CallFunc_GetChildAt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_UpdateUI_Internal, K2Node_DynamicCast_AsWBP_Action_Bar_Slot) == 0x0004D0, "Member 'WBP_ActionBar_C_UpdateUI_Internal::K2Node_DynamicCast_AsWBP_Action_Bar_Slot' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_UpdateUI_Internal, K2Node_DynamicCast_bSuccess) == 0x0004D8, "Member 'WBP_ActionBar_C_UpdateUI_Internal::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_UpdateUI_Internal, CallFunc_Subtract_IntInt_ReturnValue_2) == 0x0004DC, "Member 'WBP_ActionBar_C_UpdateUI_Internal::CallFunc_Subtract_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_UpdateUI_Internal, CallFunc_LessEqual_IntInt_ReturnValue_1) == 0x0004E0, "Member 'WBP_ActionBar_C_UpdateUI_Internal::CallFunc_LessEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_ActionBar_C_UpdateUI_Internal, CallFunc_GetItemAtActionBarIndex_ReturnValue_1) == 0x0004E8, "Member 'WBP_ActionBar_C_UpdateUI_Internal::CallFunc_GetItemAtActionBarIndex_ReturnValue_1' has a wrong offset!");

// Function WBP_ActionBar.WBP_ActionBar_C.WBP_ActionBar_AutoGenFunc
// 0x0008 (0x0008 - 0x0000)
struct WBP_ActionBar_C_WBP_ActionBar_AutoGenFunc final
{
public:
	class UVAL_TutorialFlagsManager*              CallFunc_GetLocalPlayerSubsystem_ReturnValue;      // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ActionBar_C_WBP_ActionBar_AutoGenFunc) == 0x000008, "Wrong alignment on WBP_ActionBar_C_WBP_ActionBar_AutoGenFunc");
static_assert(sizeof(WBP_ActionBar_C_WBP_ActionBar_AutoGenFunc) == 0x000008, "Wrong size on WBP_ActionBar_C_WBP_ActionBar_AutoGenFunc");
static_assert(offsetof(WBP_ActionBar_C_WBP_ActionBar_AutoGenFunc, CallFunc_GetLocalPlayerSubsystem_ReturnValue) == 0x000000, "Member 'WBP_ActionBar_C_WBP_ActionBar_AutoGenFunc::CallFunc_GetLocalPlayerSubsystem_ReturnValue' has a wrong offset!");

// Function WBP_ActionBar.WBP_ActionBar_C.WBP_ActionBar_AutoGenFunc1
// 0x0008 (0x0008 - 0x0000)
struct WBP_ActionBar_C_WBP_ActionBar_AutoGenFunc1 final
{
public:
	class UVAL_TutorialFlagsManager*              CallFunc_GetLocalPlayerSubsystem_ReturnValue;      // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ActionBar_C_WBP_ActionBar_AutoGenFunc1) == 0x000008, "Wrong alignment on WBP_ActionBar_C_WBP_ActionBar_AutoGenFunc1");
static_assert(sizeof(WBP_ActionBar_C_WBP_ActionBar_AutoGenFunc1) == 0x000008, "Wrong size on WBP_ActionBar_C_WBP_ActionBar_AutoGenFunc1");
static_assert(offsetof(WBP_ActionBar_C_WBP_ActionBar_AutoGenFunc1, CallFunc_GetLocalPlayerSubsystem_ReturnValue) == 0x000000, "Member 'WBP_ActionBar_C_WBP_ActionBar_AutoGenFunc1::CallFunc_GetLocalPlayerSubsystem_ReturnValue' has a wrong offset!");

}

