#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_Slider_Settings_CM

#include "Basic.hpp"

#include "FSettingsItemSlider_structs.hpp"
#include "UMG_structs.hpp"


namespace SDK::Params
{

// Function WBP_Slider_Settings_CM.WBP_Slider_Settings_CM_C.BndEvt__WBP_Slider_Settings_CM_WBP_Slider_CM_K2Node_ComponentBoundEvent_5_OnSliderValueChanged__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct WBP_Slider_Settings_CM_C_BndEvt__WBP_Slider_Settings_CM_WBP_Slider_CM_K2Node_ComponentBoundEvent_5_OnSliderValueChanged__DelegateSignature final
{
public:
	double                                        Value;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Slider_Settings_CM_C_BndEvt__WBP_Slider_Settings_CM_WBP_Slider_CM_K2Node_ComponentBoundEvent_5_OnSliderValueChanged__DelegateSignature) == 0x000008, "Wrong alignment on WBP_Slider_Settings_CM_C_BndEvt__WBP_Slider_Settings_CM_WBP_Slider_CM_K2Node_ComponentBoundEvent_5_OnSliderValueChanged__DelegateSignature");
static_assert(sizeof(WBP_Slider_Settings_CM_C_BndEvt__WBP_Slider_Settings_CM_WBP_Slider_CM_K2Node_ComponentBoundEvent_5_OnSliderValueChanged__DelegateSignature) == 0x000008, "Wrong size on WBP_Slider_Settings_CM_C_BndEvt__WBP_Slider_Settings_CM_WBP_Slider_CM_K2Node_ComponentBoundEvent_5_OnSliderValueChanged__DelegateSignature");
static_assert(offsetof(WBP_Slider_Settings_CM_C_BndEvt__WBP_Slider_Settings_CM_WBP_Slider_CM_K2Node_ComponentBoundEvent_5_OnSliderValueChanged__DelegateSignature, Value) == 0x000000, "Member 'WBP_Slider_Settings_CM_C_BndEvt__WBP_Slider_Settings_CM_WBP_Slider_CM_K2Node_ComponentBoundEvent_5_OnSliderValueChanged__DelegateSignature::Value' has a wrong offset!");

// Function WBP_Slider_Settings_CM.WBP_Slider_Settings_CM_C.ExecuteUbergraph_WBP_Slider_Settings_CM
// 0x0030 (0x0030 - 0x0000)
struct WBP_Slider_Settings_CM_C_ExecuteUbergraph_WBP_Slider_Settings_CM final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_52F4[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_ComponentBoundEvent_Value;                  // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_DoubleToText_ReturnValue;            // 0x0018(0x0018)()
};
static_assert(alignof(WBP_Slider_Settings_CM_C_ExecuteUbergraph_WBP_Slider_Settings_CM) == 0x000008, "Wrong alignment on WBP_Slider_Settings_CM_C_ExecuteUbergraph_WBP_Slider_Settings_CM");
static_assert(sizeof(WBP_Slider_Settings_CM_C_ExecuteUbergraph_WBP_Slider_Settings_CM) == 0x000030, "Wrong size on WBP_Slider_Settings_CM_C_ExecuteUbergraph_WBP_Slider_Settings_CM");
static_assert(offsetof(WBP_Slider_Settings_CM_C_ExecuteUbergraph_WBP_Slider_Settings_CM, EntryPoint) == 0x000000, "Member 'WBP_Slider_Settings_CM_C_ExecuteUbergraph_WBP_Slider_Settings_CM::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_Slider_Settings_CM_C_ExecuteUbergraph_WBP_Slider_Settings_CM, K2Node_Event_IsDesignTime) == 0x000004, "Member 'WBP_Slider_Settings_CM_C_ExecuteUbergraph_WBP_Slider_Settings_CM::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(WBP_Slider_Settings_CM_C_ExecuteUbergraph_WBP_Slider_Settings_CM, K2Node_ComponentBoundEvent_Value) == 0x000008, "Member 'WBP_Slider_Settings_CM_C_ExecuteUbergraph_WBP_Slider_Settings_CM::K2Node_ComponentBoundEvent_Value' has a wrong offset!");
static_assert(offsetof(WBP_Slider_Settings_CM_C_ExecuteUbergraph_WBP_Slider_Settings_CM, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000010, "Member 'WBP_Slider_Settings_CM_C_ExecuteUbergraph_WBP_Slider_Settings_CM::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Slider_Settings_CM_C_ExecuteUbergraph_WBP_Slider_Settings_CM, CallFunc_Conv_DoubleToText_ReturnValue) == 0x000018, "Member 'WBP_Slider_Settings_CM_C_ExecuteUbergraph_WBP_Slider_Settings_CM::CallFunc_Conv_DoubleToText_ReturnValue' has a wrong offset!");

// Function WBP_Slider_Settings_CM.WBP_Slider_Settings_CM_C.OnSliderValueChanged__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct WBP_Slider_Settings_CM_C_OnSliderValueChanged__DelegateSignature final
{
public:
	double                                        Value;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Slider_Settings_CM_C_OnSliderValueChanged__DelegateSignature) == 0x000008, "Wrong alignment on WBP_Slider_Settings_CM_C_OnSliderValueChanged__DelegateSignature");
static_assert(sizeof(WBP_Slider_Settings_CM_C_OnSliderValueChanged__DelegateSignature) == 0x000008, "Wrong size on WBP_Slider_Settings_CM_C_OnSliderValueChanged__DelegateSignature");
static_assert(offsetof(WBP_Slider_Settings_CM_C_OnSliderValueChanged__DelegateSignature, Value) == 0x000000, "Member 'WBP_Slider_Settings_CM_C_OnSliderValueChanged__DelegateSignature::Value' has a wrong offset!");

// Function WBP_Slider_Settings_CM.WBP_Slider_Settings_CM_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct WBP_Slider_Settings_CM_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Slider_Settings_CM_C_PreConstruct) == 0x000001, "Wrong alignment on WBP_Slider_Settings_CM_C_PreConstruct");
static_assert(sizeof(WBP_Slider_Settings_CM_C_PreConstruct) == 0x000001, "Wrong size on WBP_Slider_Settings_CM_C_PreConstruct");
static_assert(offsetof(WBP_Slider_Settings_CM_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'WBP_Slider_Settings_CM_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function WBP_Slider_Settings_CM.WBP_Slider_Settings_CM_C.SetDefaultNotchValue
// 0x0004 (0x0004 - 0x0000)
struct WBP_Slider_Settings_CM_C_SetDefaultNotchValue final
{
public:
	float                                         InValue;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Slider_Settings_CM_C_SetDefaultNotchValue) == 0x000004, "Wrong alignment on WBP_Slider_Settings_CM_C_SetDefaultNotchValue");
static_assert(sizeof(WBP_Slider_Settings_CM_C_SetDefaultNotchValue) == 0x000004, "Wrong size on WBP_Slider_Settings_CM_C_SetDefaultNotchValue");
static_assert(offsetof(WBP_Slider_Settings_CM_C_SetDefaultNotchValue, InValue) == 0x000000, "Member 'WBP_Slider_Settings_CM_C_SetDefaultNotchValue::InValue' has a wrong offset!");

// Function WBP_Slider_Settings_CM.WBP_Slider_Settings_CM_C.SetMinMaxValues
// 0x0020 (0x0020 - 0x0000)
struct WBP_Slider_Settings_CM_C_SetMinMaxValues final
{
public:
	double                                        InMinValue;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        InMaxValue;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetMinValue_InValue_ImplicitCast;         // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetMinValue_InValue_ImplicitCast_1;       // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetMaxValue_InValue_ImplicitCast;         // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetMaxValue_InValue_ImplicitCast_1;       // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Slider_Settings_CM_C_SetMinMaxValues) == 0x000008, "Wrong alignment on WBP_Slider_Settings_CM_C_SetMinMaxValues");
static_assert(sizeof(WBP_Slider_Settings_CM_C_SetMinMaxValues) == 0x000020, "Wrong size on WBP_Slider_Settings_CM_C_SetMinMaxValues");
static_assert(offsetof(WBP_Slider_Settings_CM_C_SetMinMaxValues, InMinValue) == 0x000000, "Member 'WBP_Slider_Settings_CM_C_SetMinMaxValues::InMinValue' has a wrong offset!");
static_assert(offsetof(WBP_Slider_Settings_CM_C_SetMinMaxValues, InMaxValue) == 0x000008, "Member 'WBP_Slider_Settings_CM_C_SetMinMaxValues::InMaxValue' has a wrong offset!");
static_assert(offsetof(WBP_Slider_Settings_CM_C_SetMinMaxValues, CallFunc_SetMinValue_InValue_ImplicitCast) == 0x000010, "Member 'WBP_Slider_Settings_CM_C_SetMinMaxValues::CallFunc_SetMinValue_InValue_ImplicitCast' has a wrong offset!");
static_assert(offsetof(WBP_Slider_Settings_CM_C_SetMinMaxValues, CallFunc_SetMinValue_InValue_ImplicitCast_1) == 0x000014, "Member 'WBP_Slider_Settings_CM_C_SetMinMaxValues::CallFunc_SetMinValue_InValue_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(WBP_Slider_Settings_CM_C_SetMinMaxValues, CallFunc_SetMaxValue_InValue_ImplicitCast) == 0x000018, "Member 'WBP_Slider_Settings_CM_C_SetMinMaxValues::CallFunc_SetMaxValue_InValue_ImplicitCast' has a wrong offset!");
static_assert(offsetof(WBP_Slider_Settings_CM_C_SetMinMaxValues, CallFunc_SetMaxValue_InValue_ImplicitCast_1) == 0x00001C, "Member 'WBP_Slider_Settings_CM_C_SetMinMaxValues::CallFunc_SetMaxValue_InValue_ImplicitCast_1' has a wrong offset!");

// Function WBP_Slider_Settings_CM.WBP_Slider_Settings_CM_C.SetSliderSettings
// 0x0030 (0x0030 - 0x0000)
struct WBP_Slider_Settings_CM_C_SetSliderSettings final
{
public:
	struct FFSettingsItemSlider                   Param_SliderSettings;                              // 0x0000(0x0028)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x002A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x002B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetDefaultNotchValue_InValue_ImplicitCast; // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Slider_Settings_CM_C_SetSliderSettings) == 0x000008, "Wrong alignment on WBP_Slider_Settings_CM_C_SetSliderSettings");
static_assert(sizeof(WBP_Slider_Settings_CM_C_SetSliderSettings) == 0x000030, "Wrong size on WBP_Slider_Settings_CM_C_SetSliderSettings");
static_assert(offsetof(WBP_Slider_Settings_CM_C_SetSliderSettings, Param_SliderSettings) == 0x000000, "Member 'WBP_Slider_Settings_CM_C_SetSliderSettings::Param_SliderSettings' has a wrong offset!");
static_assert(offsetof(WBP_Slider_Settings_CM_C_SetSliderSettings, Temp_byte_Variable) == 0x000028, "Member 'WBP_Slider_Settings_CM_C_SetSliderSettings::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Slider_Settings_CM_C_SetSliderSettings, Temp_byte_Variable_1) == 0x000029, "Member 'WBP_Slider_Settings_CM_C_SetSliderSettings::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_Slider_Settings_CM_C_SetSliderSettings, Temp_bool_Variable) == 0x00002A, "Member 'WBP_Slider_Settings_CM_C_SetSliderSettings::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Slider_Settings_CM_C_SetSliderSettings, K2Node_Select_Default) == 0x00002B, "Member 'WBP_Slider_Settings_CM_C_SetSliderSettings::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_Slider_Settings_CM_C_SetSliderSettings, CallFunc_SetDefaultNotchValue_InValue_ImplicitCast) == 0x00002C, "Member 'WBP_Slider_Settings_CM_C_SetSliderSettings::CallFunc_SetDefaultNotchValue_InValue_ImplicitCast' has a wrong offset!");

// Function WBP_Slider_Settings_CM.WBP_Slider_Settings_CM_C.SetValue
// 0x0028 (0x0028 - 0x0000)
struct WBP_Slider_Settings_CM_C_SetValue final
{
public:
	double                                        InValue;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_DoubleToText_ReturnValue;            // 0x0010(0x0018)()
};
static_assert(alignof(WBP_Slider_Settings_CM_C_SetValue) == 0x000008, "Wrong alignment on WBP_Slider_Settings_CM_C_SetValue");
static_assert(sizeof(WBP_Slider_Settings_CM_C_SetValue) == 0x000028, "Wrong size on WBP_Slider_Settings_CM_C_SetValue");
static_assert(offsetof(WBP_Slider_Settings_CM_C_SetValue, InValue) == 0x000000, "Member 'WBP_Slider_Settings_CM_C_SetValue::InValue' has a wrong offset!");
static_assert(offsetof(WBP_Slider_Settings_CM_C_SetValue, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000008, "Member 'WBP_Slider_Settings_CM_C_SetValue::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Slider_Settings_CM_C_SetValue, CallFunc_Conv_DoubleToText_ReturnValue) == 0x000010, "Member 'WBP_Slider_Settings_CM_C_SetValue::CallFunc_Conv_DoubleToText_ReturnValue' has a wrong offset!");

}

