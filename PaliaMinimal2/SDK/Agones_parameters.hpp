#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Agones

#include "Basic.hpp"

#include "Agones_structs.hpp"


namespace SDK::Params
{

// Function Agones.AgonesComponent.Allocate
// 0x0020 (0x0020 - 0x0000)
struct AgonesComponent_Allocate final
{
public:
	TDelegate<void(struct FEmptyResponse& Response)> SuccessDelegate;                                   // 0x0000(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(struct FAgonesError& Error)>   ErrorDelegate;                                     // 0x0010(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(AgonesComponent_Allocate) == 0x000004, "Wrong alignment on AgonesComponent_Allocate");
static_assert(sizeof(AgonesComponent_Allocate) == 0x000020, "Wrong size on AgonesComponent_Allocate");
static_assert(offsetof(AgonesComponent_Allocate, SuccessDelegate) == 0x000000, "Member 'AgonesComponent_Allocate::SuccessDelegate' has a wrong offset!");
static_assert(offsetof(AgonesComponent_Allocate, ErrorDelegate) == 0x000010, "Member 'AgonesComponent_Allocate::ErrorDelegate' has a wrong offset!");

// Function Agones.AgonesComponent.ConnectFail
// 0x0010 (0x0010 - 0x0000)
struct AgonesComponent_ConnectFail final
{
public:
	struct FAgonesError                           Error;                                             // 0x0000(0x0010)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(AgonesComponent_ConnectFail) == 0x000008, "Wrong alignment on AgonesComponent_ConnectFail");
static_assert(sizeof(AgonesComponent_ConnectFail) == 0x000010, "Wrong size on AgonesComponent_ConnectFail");
static_assert(offsetof(AgonesComponent_ConnectFail, Error) == 0x000000, "Member 'AgonesComponent_ConnectFail::Error' has a wrong offset!");

// Function Agones.AgonesComponent.ConnectSuccess
// 0x0138 (0x0138 - 0x0000)
struct AgonesComponent_ConnectSuccess final
{
public:
	struct FGameServerResponse                    GameServerResponse;                                // 0x0000(0x0138)(Parm, NativeAccessSpecifierPublic)
};
static_assert(alignof(AgonesComponent_ConnectSuccess) == 0x000008, "Wrong alignment on AgonesComponent_ConnectSuccess");
static_assert(sizeof(AgonesComponent_ConnectSuccess) == 0x000138, "Wrong size on AgonesComponent_ConnectSuccess");
static_assert(offsetof(AgonesComponent_ConnectSuccess, GameServerResponse) == 0x000000, "Member 'AgonesComponent_ConnectSuccess::GameServerResponse' has a wrong offset!");

// Function Agones.AgonesComponent.GameServer
// 0x0020 (0x0020 - 0x0000)
struct AgonesComponent_GameServer final
{
public:
	TDelegate<void(struct FGameServerResponse& Response)> SuccessDelegate;                                   // 0x0000(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(struct FAgonesError& Error)>   ErrorDelegate;                                     // 0x0010(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(AgonesComponent_GameServer) == 0x000004, "Wrong alignment on AgonesComponent_GameServer");
static_assert(sizeof(AgonesComponent_GameServer) == 0x000020, "Wrong size on AgonesComponent_GameServer");
static_assert(offsetof(AgonesComponent_GameServer, SuccessDelegate) == 0x000000, "Member 'AgonesComponent_GameServer::SuccessDelegate' has a wrong offset!");
static_assert(offsetof(AgonesComponent_GameServer, ErrorDelegate) == 0x000010, "Member 'AgonesComponent_GameServer::ErrorDelegate' has a wrong offset!");

// Function Agones.AgonesComponent.GetConnectedPlayers
// 0x0020 (0x0020 - 0x0000)
struct AgonesComponent_GetConnectedPlayers final
{
public:
	TDelegate<void(struct FConnectedPlayersResponse& Response)> SuccessDelegate;                                   // 0x0000(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(struct FAgonesError& Error)>   ErrorDelegate;                                     // 0x0010(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(AgonesComponent_GetConnectedPlayers) == 0x000004, "Wrong alignment on AgonesComponent_GetConnectedPlayers");
static_assert(sizeof(AgonesComponent_GetConnectedPlayers) == 0x000020, "Wrong size on AgonesComponent_GetConnectedPlayers");
static_assert(offsetof(AgonesComponent_GetConnectedPlayers, SuccessDelegate) == 0x000000, "Member 'AgonesComponent_GetConnectedPlayers::SuccessDelegate' has a wrong offset!");
static_assert(offsetof(AgonesComponent_GetConnectedPlayers, ErrorDelegate) == 0x000010, "Member 'AgonesComponent_GetConnectedPlayers::ErrorDelegate' has a wrong offset!");

// Function Agones.AgonesComponent.GetPlayerCapacity
// 0x0020 (0x0020 - 0x0000)
struct AgonesComponent_GetPlayerCapacity final
{
public:
	TDelegate<void(struct FCountResponse& Response)> SuccessDelegate;                                   // 0x0000(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(struct FAgonesError& Error)>   ErrorDelegate;                                     // 0x0010(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(AgonesComponent_GetPlayerCapacity) == 0x000004, "Wrong alignment on AgonesComponent_GetPlayerCapacity");
static_assert(sizeof(AgonesComponent_GetPlayerCapacity) == 0x000020, "Wrong size on AgonesComponent_GetPlayerCapacity");
static_assert(offsetof(AgonesComponent_GetPlayerCapacity, SuccessDelegate) == 0x000000, "Member 'AgonesComponent_GetPlayerCapacity::SuccessDelegate' has a wrong offset!");
static_assert(offsetof(AgonesComponent_GetPlayerCapacity, ErrorDelegate) == 0x000010, "Member 'AgonesComponent_GetPlayerCapacity::ErrorDelegate' has a wrong offset!");

// Function Agones.AgonesComponent.GetPlayerCount
// 0x0020 (0x0020 - 0x0000)
struct AgonesComponent_GetPlayerCount final
{
public:
	TDelegate<void(struct FCountResponse& Response)> SuccessDelegate;                                   // 0x0000(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(struct FAgonesError& Error)>   ErrorDelegate;                                     // 0x0010(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(AgonesComponent_GetPlayerCount) == 0x000004, "Wrong alignment on AgonesComponent_GetPlayerCount");
static_assert(sizeof(AgonesComponent_GetPlayerCount) == 0x000020, "Wrong size on AgonesComponent_GetPlayerCount");
static_assert(offsetof(AgonesComponent_GetPlayerCount, SuccessDelegate) == 0x000000, "Member 'AgonesComponent_GetPlayerCount::SuccessDelegate' has a wrong offset!");
static_assert(offsetof(AgonesComponent_GetPlayerCount, ErrorDelegate) == 0x000010, "Member 'AgonesComponent_GetPlayerCount::ErrorDelegate' has a wrong offset!");

// Function Agones.AgonesComponent.Health
// 0x0020 (0x0020 - 0x0000)
struct AgonesComponent_Health final
{
public:
	TDelegate<void(struct FEmptyResponse& Response)> SuccessDelegate;                                   // 0x0000(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(struct FAgonesError& Error)>   ErrorDelegate;                                     // 0x0010(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(AgonesComponent_Health) == 0x000004, "Wrong alignment on AgonesComponent_Health");
static_assert(sizeof(AgonesComponent_Health) == 0x000020, "Wrong size on AgonesComponent_Health");
static_assert(offsetof(AgonesComponent_Health, SuccessDelegate) == 0x000000, "Member 'AgonesComponent_Health::SuccessDelegate' has a wrong offset!");
static_assert(offsetof(AgonesComponent_Health, ErrorDelegate) == 0x000010, "Member 'AgonesComponent_Health::ErrorDelegate' has a wrong offset!");

// Function Agones.AgonesComponent.HealthPing
// 0x0004 (0x0004 - 0x0000)
struct AgonesComponent_HealthPing final
{
public:
	float                                         RateSeconds;                                       // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(AgonesComponent_HealthPing) == 0x000004, "Wrong alignment on AgonesComponent_HealthPing");
static_assert(sizeof(AgonesComponent_HealthPing) == 0x000004, "Wrong size on AgonesComponent_HealthPing");
static_assert(offsetof(AgonesComponent_HealthPing, RateSeconds) == 0x000000, "Member 'AgonesComponent_HealthPing::RateSeconds' has a wrong offset!");

// Function Agones.AgonesComponent.IsPlayerConnected
// 0x0030 (0x0030 - 0x0000)
struct AgonesComponent_IsPlayerConnected final
{
public:
	class FString                                 PlayerId;                                          // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(struct FConnectedResponse& Response)> SuccessDelegate;                                   // 0x0010(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(struct FAgonesError& Error)>   ErrorDelegate;                                     // 0x0020(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(AgonesComponent_IsPlayerConnected) == 0x000008, "Wrong alignment on AgonesComponent_IsPlayerConnected");
static_assert(sizeof(AgonesComponent_IsPlayerConnected) == 0x000030, "Wrong size on AgonesComponent_IsPlayerConnected");
static_assert(offsetof(AgonesComponent_IsPlayerConnected, PlayerId) == 0x000000, "Member 'AgonesComponent_IsPlayerConnected::PlayerId' has a wrong offset!");
static_assert(offsetof(AgonesComponent_IsPlayerConnected, SuccessDelegate) == 0x000010, "Member 'AgonesComponent_IsPlayerConnected::SuccessDelegate' has a wrong offset!");
static_assert(offsetof(AgonesComponent_IsPlayerConnected, ErrorDelegate) == 0x000020, "Member 'AgonesComponent_IsPlayerConnected::ErrorDelegate' has a wrong offset!");

// Function Agones.AgonesComponent.PlayerConnect
// 0x0030 (0x0030 - 0x0000)
struct AgonesComponent_PlayerConnect final
{
public:
	class FString                                 PlayerId;                                          // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(struct FConnectedResponse& Response)> SuccessDelegate;                                   // 0x0010(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(struct FAgonesError& Error)>   ErrorDelegate;                                     // 0x0020(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(AgonesComponent_PlayerConnect) == 0x000008, "Wrong alignment on AgonesComponent_PlayerConnect");
static_assert(sizeof(AgonesComponent_PlayerConnect) == 0x000030, "Wrong size on AgonesComponent_PlayerConnect");
static_assert(offsetof(AgonesComponent_PlayerConnect, PlayerId) == 0x000000, "Member 'AgonesComponent_PlayerConnect::PlayerId' has a wrong offset!");
static_assert(offsetof(AgonesComponent_PlayerConnect, SuccessDelegate) == 0x000010, "Member 'AgonesComponent_PlayerConnect::SuccessDelegate' has a wrong offset!");
static_assert(offsetof(AgonesComponent_PlayerConnect, ErrorDelegate) == 0x000020, "Member 'AgonesComponent_PlayerConnect::ErrorDelegate' has a wrong offset!");

// Function Agones.AgonesComponent.PlayerDisconnect
// 0x0030 (0x0030 - 0x0000)
struct AgonesComponent_PlayerDisconnect final
{
public:
	class FString                                 PlayerId;                                          // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(struct FDisconnectResponse& Response)> SuccessDelegate;                                   // 0x0010(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(struct FAgonesError& Error)>   ErrorDelegate;                                     // 0x0020(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(AgonesComponent_PlayerDisconnect) == 0x000008, "Wrong alignment on AgonesComponent_PlayerDisconnect");
static_assert(sizeof(AgonesComponent_PlayerDisconnect) == 0x000030, "Wrong size on AgonesComponent_PlayerDisconnect");
static_assert(offsetof(AgonesComponent_PlayerDisconnect, PlayerId) == 0x000000, "Member 'AgonesComponent_PlayerDisconnect::PlayerId' has a wrong offset!");
static_assert(offsetof(AgonesComponent_PlayerDisconnect, SuccessDelegate) == 0x000010, "Member 'AgonesComponent_PlayerDisconnect::SuccessDelegate' has a wrong offset!");
static_assert(offsetof(AgonesComponent_PlayerDisconnect, ErrorDelegate) == 0x000020, "Member 'AgonesComponent_PlayerDisconnect::ErrorDelegate' has a wrong offset!");

// Function Agones.AgonesComponent.Ready
// 0x0020 (0x0020 - 0x0000)
struct AgonesComponent_Ready final
{
public:
	TDelegate<void(struct FEmptyResponse& Response)> SuccessDelegate;                                   // 0x0000(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(struct FAgonesError& Error)>   ErrorDelegate;                                     // 0x0010(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(AgonesComponent_Ready) == 0x000004, "Wrong alignment on AgonesComponent_Ready");
static_assert(sizeof(AgonesComponent_Ready) == 0x000020, "Wrong size on AgonesComponent_Ready");
static_assert(offsetof(AgonesComponent_Ready, SuccessDelegate) == 0x000000, "Member 'AgonesComponent_Ready::SuccessDelegate' has a wrong offset!");
static_assert(offsetof(AgonesComponent_Ready, ErrorDelegate) == 0x000010, "Member 'AgonesComponent_Ready::ErrorDelegate' has a wrong offset!");

// Function Agones.AgonesComponent.Reserve
// 0x0028 (0x0028 - 0x0000)
struct AgonesComponent_Reserve final
{
public:
	int64                                         Seconds;                                           // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(struct FEmptyResponse& Response)> SuccessDelegate;                                   // 0x0008(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(struct FAgonesError& Error)>   ErrorDelegate;                                     // 0x0018(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(AgonesComponent_Reserve) == 0x000008, "Wrong alignment on AgonesComponent_Reserve");
static_assert(sizeof(AgonesComponent_Reserve) == 0x000028, "Wrong size on AgonesComponent_Reserve");
static_assert(offsetof(AgonesComponent_Reserve, Seconds) == 0x000000, "Member 'AgonesComponent_Reserve::Seconds' has a wrong offset!");
static_assert(offsetof(AgonesComponent_Reserve, SuccessDelegate) == 0x000008, "Member 'AgonesComponent_Reserve::SuccessDelegate' has a wrong offset!");
static_assert(offsetof(AgonesComponent_Reserve, ErrorDelegate) == 0x000018, "Member 'AgonesComponent_Reserve::ErrorDelegate' has a wrong offset!");

// Function Agones.AgonesComponent.SetAnnotation
// 0x0040 (0x0040 - 0x0000)
struct AgonesComponent_SetAnnotation final
{
public:
	class FString                                 Key;                                               // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Value;                                             // 0x0010(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(struct FEmptyResponse& Response)> SuccessDelegate;                                   // 0x0020(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(struct FAgonesError& Error)>   ErrorDelegate;                                     // 0x0030(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(AgonesComponent_SetAnnotation) == 0x000008, "Wrong alignment on AgonesComponent_SetAnnotation");
static_assert(sizeof(AgonesComponent_SetAnnotation) == 0x000040, "Wrong size on AgonesComponent_SetAnnotation");
static_assert(offsetof(AgonesComponent_SetAnnotation, Key) == 0x000000, "Member 'AgonesComponent_SetAnnotation::Key' has a wrong offset!");
static_assert(offsetof(AgonesComponent_SetAnnotation, Value) == 0x000010, "Member 'AgonesComponent_SetAnnotation::Value' has a wrong offset!");
static_assert(offsetof(AgonesComponent_SetAnnotation, SuccessDelegate) == 0x000020, "Member 'AgonesComponent_SetAnnotation::SuccessDelegate' has a wrong offset!");
static_assert(offsetof(AgonesComponent_SetAnnotation, ErrorDelegate) == 0x000030, "Member 'AgonesComponent_SetAnnotation::ErrorDelegate' has a wrong offset!");

// Function Agones.AgonesComponent.SetLabel
// 0x0040 (0x0040 - 0x0000)
struct AgonesComponent_SetLabel final
{
public:
	class FString                                 Key;                                               // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Value;                                             // 0x0010(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(struct FEmptyResponse& Response)> SuccessDelegate;                                   // 0x0020(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(struct FAgonesError& Error)>   ErrorDelegate;                                     // 0x0030(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(AgonesComponent_SetLabel) == 0x000008, "Wrong alignment on AgonesComponent_SetLabel");
static_assert(sizeof(AgonesComponent_SetLabel) == 0x000040, "Wrong size on AgonesComponent_SetLabel");
static_assert(offsetof(AgonesComponent_SetLabel, Key) == 0x000000, "Member 'AgonesComponent_SetLabel::Key' has a wrong offset!");
static_assert(offsetof(AgonesComponent_SetLabel, Value) == 0x000010, "Member 'AgonesComponent_SetLabel::Value' has a wrong offset!");
static_assert(offsetof(AgonesComponent_SetLabel, SuccessDelegate) == 0x000020, "Member 'AgonesComponent_SetLabel::SuccessDelegate' has a wrong offset!");
static_assert(offsetof(AgonesComponent_SetLabel, ErrorDelegate) == 0x000030, "Member 'AgonesComponent_SetLabel::ErrorDelegate' has a wrong offset!");

// Function Agones.AgonesComponent.SetPlayerCapacity
// 0x0028 (0x0028 - 0x0000)
struct AgonesComponent_SetPlayerCapacity final
{
public:
	int64                                         Count;                                             // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(struct FEmptyResponse& Response)> SuccessDelegate;                                   // 0x0008(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(struct FAgonesError& Error)>   ErrorDelegate;                                     // 0x0018(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(AgonesComponent_SetPlayerCapacity) == 0x000008, "Wrong alignment on AgonesComponent_SetPlayerCapacity");
static_assert(sizeof(AgonesComponent_SetPlayerCapacity) == 0x000028, "Wrong size on AgonesComponent_SetPlayerCapacity");
static_assert(offsetof(AgonesComponent_SetPlayerCapacity, Count) == 0x000000, "Member 'AgonesComponent_SetPlayerCapacity::Count' has a wrong offset!");
static_assert(offsetof(AgonesComponent_SetPlayerCapacity, SuccessDelegate) == 0x000008, "Member 'AgonesComponent_SetPlayerCapacity::SuccessDelegate' has a wrong offset!");
static_assert(offsetof(AgonesComponent_SetPlayerCapacity, ErrorDelegate) == 0x000018, "Member 'AgonesComponent_SetPlayerCapacity::ErrorDelegate' has a wrong offset!");

// Function Agones.AgonesComponent.Shutdown
// 0x0020 (0x0020 - 0x0000)
struct AgonesComponent_Shutdown final
{
public:
	TDelegate<void(struct FEmptyResponse& Response)> SuccessDelegate;                                   // 0x0000(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(struct FAgonesError& Error)>   ErrorDelegate;                                     // 0x0010(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(AgonesComponent_Shutdown) == 0x000004, "Wrong alignment on AgonesComponent_Shutdown");
static_assert(sizeof(AgonesComponent_Shutdown) == 0x000020, "Wrong size on AgonesComponent_Shutdown");
static_assert(offsetof(AgonesComponent_Shutdown, SuccessDelegate) == 0x000000, "Member 'AgonesComponent_Shutdown::SuccessDelegate' has a wrong offset!");
static_assert(offsetof(AgonesComponent_Shutdown, ErrorDelegate) == 0x000010, "Member 'AgonesComponent_Shutdown::ErrorDelegate' has a wrong offset!");

// Function Agones.AgonesComponent.WatchGameServer
// 0x0010 (0x0010 - 0x0000)
struct AgonesComponent_WatchGameServer final
{
public:
	TDelegate<void(struct FGameServerResponse& Response)> WatchDelegate;                                     // 0x0000(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(AgonesComponent_WatchGameServer) == 0x000004, "Wrong alignment on AgonesComponent_WatchGameServer");
static_assert(sizeof(AgonesComponent_WatchGameServer) == 0x000010, "Wrong size on AgonesComponent_WatchGameServer");
static_assert(offsetof(AgonesComponent_WatchGameServer, WatchDelegate) == 0x000000, "Member 'AgonesComponent_WatchGameServer::WatchDelegate' has a wrong offset!");

}

