#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: S6Telemetry

#include "Basic.hpp"


namespace SDK
{

// ScriptStruct S6Telemetry.S6TelemtryPendingEnvelope
// 0x0088 (0x0088 - 0x0000)
struct FS6TelemtryPendingEnvelope final
{
public:
	class FString                                 EventId;                                           // 0x0000(0x0010)(ZeroConstructor, Transient, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 CorrelationId;                                     // 0x0010(0x0010)(ZeroConstructor, Transient, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 EventType;                                         // 0x0020(0x0010)(ZeroConstructor, Transient, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int64                                         EventTimestamp;                                    // 0x0030(0x0008)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ProducerType;                                      // 0x0038(0x0004)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ProducerEnv;                                       // 0x003C(0x0004)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         AgentType;                                         // 0x0040(0x0004)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1D24[0x4];                                     // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 AgentVersion;                                      // 0x0048(0x0010)(ZeroConstructor, Transient, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 AgentComment;                                      // 0x0058(0x0010)(ZeroConstructor, Transient, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 AgentRegion;                                       // 0x0068(0x0010)(ZeroConstructor, Transient, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<uint8>                                 PayloadBytes;                                      // 0x0078(0x0010)(ZeroConstructor, Transient, NativeAccessSpecifierPublic)
};
static_assert(alignof(FS6TelemtryPendingEnvelope) == 0x000008, "Wrong alignment on FS6TelemtryPendingEnvelope");
static_assert(sizeof(FS6TelemtryPendingEnvelope) == 0x000088, "Wrong size on FS6TelemtryPendingEnvelope");
static_assert(offsetof(FS6TelemtryPendingEnvelope, EventId) == 0x000000, "Member 'FS6TelemtryPendingEnvelope::EventId' has a wrong offset!");
static_assert(offsetof(FS6TelemtryPendingEnvelope, CorrelationId) == 0x000010, "Member 'FS6TelemtryPendingEnvelope::CorrelationId' has a wrong offset!");
static_assert(offsetof(FS6TelemtryPendingEnvelope, EventType) == 0x000020, "Member 'FS6TelemtryPendingEnvelope::EventType' has a wrong offset!");
static_assert(offsetof(FS6TelemtryPendingEnvelope, EventTimestamp) == 0x000030, "Member 'FS6TelemtryPendingEnvelope::EventTimestamp' has a wrong offset!");
static_assert(offsetof(FS6TelemtryPendingEnvelope, ProducerType) == 0x000038, "Member 'FS6TelemtryPendingEnvelope::ProducerType' has a wrong offset!");
static_assert(offsetof(FS6TelemtryPendingEnvelope, ProducerEnv) == 0x00003C, "Member 'FS6TelemtryPendingEnvelope::ProducerEnv' has a wrong offset!");
static_assert(offsetof(FS6TelemtryPendingEnvelope, AgentType) == 0x000040, "Member 'FS6TelemtryPendingEnvelope::AgentType' has a wrong offset!");
static_assert(offsetof(FS6TelemtryPendingEnvelope, AgentVersion) == 0x000048, "Member 'FS6TelemtryPendingEnvelope::AgentVersion' has a wrong offset!");
static_assert(offsetof(FS6TelemtryPendingEnvelope, AgentComment) == 0x000058, "Member 'FS6TelemtryPendingEnvelope::AgentComment' has a wrong offset!");
static_assert(offsetof(FS6TelemtryPendingEnvelope, AgentRegion) == 0x000068, "Member 'FS6TelemtryPendingEnvelope::AgentRegion' has a wrong offset!");
static_assert(offsetof(FS6TelemtryPendingEnvelope, PayloadBytes) == 0x000078, "Member 'FS6TelemtryPendingEnvelope::PayloadBytes' has a wrong offset!");

}

