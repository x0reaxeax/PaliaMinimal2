#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_Cooking_Minigame_Chopping

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Palia_structs.hpp"
#include "UMG_structs.hpp"
#include "SlateCore_structs.hpp"


namespace SDK::Params
{

// Function WBP_Cooking_Minigame_Chopping.WBP_Cooking_Minigame_Chopping_C._Internal_KickMarkerConsiderAddingTicks
// 0x0138 (0x0138 - 0x0000)
struct WBP_Cooking_Minigame_Chopping_C__Internal_KickMarkerConsiderAddingTicks final
{
public:
	double                                        NextTimerDelay;                                    // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         MaxCanBeDisplayed;                                 // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5A18[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        UpdateDeltaTimeConstrained;                        // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         NewMarkerCount;                                    // 0x0018(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ActiveConfigInputPeriodTime;                       // 0x001C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        TimeFromFirstNewMarker;                            // 0x0020(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        UpdateDeltaTime;                                   // 0x0028(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        OldLastTimerKickTime;                              // 0x0030(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWBP_Cooking_Minigame_Chopping_Marker_C* IndicatorToUse;                                    // 0x0038(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5A19[0x3];                                     // 0x0045(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SafeDivide_ReturnValue;                   // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue;                       // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Min_ReturnValue;                          // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_DoubleDouble_ReturnValue;    // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5A1A[0x7];                                     // 0x0071(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_IntFloat_ReturnValue;            // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue;            // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5A1B[0x3];                                     // 0x0081(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5A1C[0x3];                                     // 0x0089(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FMax_ReturnValue;                         // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0099(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5A1D[0x6];                                     // 0x009A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SafeDivide_ReturnValue_1;                 // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FFloor_ReturnValue;                       // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_1;      // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_2;      // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Percent_FloatFloat_ReturnValue;           // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_3;      // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWBP_Cooking_Minigame_Chopping_Marker_C* CallFunc_Get_Next_Inactive_Indicator_Indicator;    // 0x00D0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5A1E[0x7];                                     // 0x00D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_4;      // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_1;           // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetTimeElapsed_ReturnValue;               // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5A1F[0x4];                                     // 0x00F4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_2;           // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetCenterPositionOfSuccessMarker_X_Position; // 0x0100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SafeDivide_B_ImplicitCast;                // 0x0108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_IntFloat_B_ImplicitCast;         // 0x0110(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_A_ImplicitCast;     // 0x0118(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SafeDivide_B_ImplicitCast_1;              // 0x0120(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Percent_FloatFloat_B_ImplicitCast;        // 0x0128(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_VariableSet_LastTimerKickTime_ImplicitCast; // 0x0130(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Cooking_Minigame_Chopping_C__Internal_KickMarkerConsiderAddingTicks) == 0x000008, "Wrong alignment on WBP_Cooking_Minigame_Chopping_C__Internal_KickMarkerConsiderAddingTicks");
static_assert(sizeof(WBP_Cooking_Minigame_Chopping_C__Internal_KickMarkerConsiderAddingTicks) == 0x000138, "Wrong size on WBP_Cooking_Minigame_Chopping_C__Internal_KickMarkerConsiderAddingTicks");
static_assert(offsetof(WBP_Cooking_Minigame_Chopping_C__Internal_KickMarkerConsiderAddingTicks, NextTimerDelay) == 0x000000, "Member 'WBP_Cooking_Minigame_Chopping_C__Internal_KickMarkerConsiderAddingTicks::NextTimerDelay' has a wrong offset!");
static_assert(offsetof(WBP_Cooking_Minigame_Chopping_C__Internal_KickMarkerConsiderAddingTicks, MaxCanBeDisplayed) == 0x000008, "Member 'WBP_Cooking_Minigame_Chopping_C__Internal_KickMarkerConsiderAddingTicks::MaxCanBeDisplayed' has a wrong offset!");
static_assert(offsetof(WBP_Cooking_Minigame_Chopping_C__Internal_KickMarkerConsiderAddingTicks, UpdateDeltaTimeConstrained) == 0x000010, "Member 'WBP_Cooking_Minigame_Chopping_C__Internal_KickMarkerConsiderAddingTicks::UpdateDeltaTimeConstrained' has a wrong offset!");
static_assert(offsetof(WBP_Cooking_Minigame_Chopping_C__Internal_KickMarkerConsiderAddingTicks, NewMarkerCount) == 0x000018, "Member 'WBP_Cooking_Minigame_Chopping_C__Internal_KickMarkerConsiderAddingTicks::NewMarkerCount' has a wrong offset!");
static_assert(offsetof(WBP_Cooking_Minigame_Chopping_C__Internal_KickMarkerConsiderAddingTicks, ActiveConfigInputPeriodTime) == 0x00001C, "Member 'WBP_Cooking_Minigame_Chopping_C__Internal_KickMarkerConsiderAddingTicks::ActiveConfigInputPeriodTime' has a wrong offset!");
static_assert(offsetof(WBP_Cooking_Minigame_Chopping_C__Internal_KickMarkerConsiderAddingTicks, TimeFromFirstNewMarker) == 0x000020, "Member 'WBP_Cooking_Minigame_Chopping_C__Internal_KickMarkerConsiderAddingTicks::TimeFromFirstNewMarker' has a wrong offset!");
static_assert(offsetof(WBP_Cooking_Minigame_Chopping_C__Internal_KickMarkerConsiderAddingTicks, UpdateDeltaTime) == 0x000028, "Member 'WBP_Cooking_Minigame_Chopping_C__Internal_KickMarkerConsiderAddingTicks::UpdateDeltaTime' has a wrong offset!");
static_assert(offsetof(WBP_Cooking_Minigame_Chopping_C__Internal_KickMarkerConsiderAddingTicks, OldLastTimerKickTime) == 0x000030, "Member 'WBP_Cooking_Minigame_Chopping_C__Internal_KickMarkerConsiderAddingTicks::OldLastTimerKickTime' has a wrong offset!");
static_assert(offsetof(WBP_Cooking_Minigame_Chopping_C__Internal_KickMarkerConsiderAddingTicks, IndicatorToUse) == 0x000038, "Member 'WBP_Cooking_Minigame_Chopping_C__Internal_KickMarkerConsiderAddingTicks::IndicatorToUse' has a wrong offset!");
static_assert(offsetof(WBP_Cooking_Minigame_Chopping_C__Internal_KickMarkerConsiderAddingTicks, Temp_int_Variable) == 0x000040, "Member 'WBP_Cooking_Minigame_Chopping_C__Internal_KickMarkerConsiderAddingTicks::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Cooking_Minigame_Chopping_C__Internal_KickMarkerConsiderAddingTicks, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000044, "Member 'WBP_Cooking_Minigame_Chopping_C__Internal_KickMarkerConsiderAddingTicks::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Cooking_Minigame_Chopping_C__Internal_KickMarkerConsiderAddingTicks, CallFunc_Add_IntInt_ReturnValue) == 0x000048, "Member 'WBP_Cooking_Minigame_Chopping_C__Internal_KickMarkerConsiderAddingTicks::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Cooking_Minigame_Chopping_C__Internal_KickMarkerConsiderAddingTicks, Temp_int_Variable_1) == 0x00004C, "Member 'WBP_Cooking_Minigame_Chopping_C__Internal_KickMarkerConsiderAddingTicks::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_Cooking_Minigame_Chopping_C__Internal_KickMarkerConsiderAddingTicks, CallFunc_SafeDivide_ReturnValue) == 0x000050, "Member 'WBP_Cooking_Minigame_Chopping_C__Internal_KickMarkerConsiderAddingTicks::CallFunc_SafeDivide_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Cooking_Minigame_Chopping_C__Internal_KickMarkerConsiderAddingTicks, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000058, "Member 'WBP_Cooking_Minigame_Chopping_C__Internal_KickMarkerConsiderAddingTicks::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Cooking_Minigame_Chopping_C__Internal_KickMarkerConsiderAddingTicks, CallFunc_FTrunc_ReturnValue) == 0x000060, "Member 'WBP_Cooking_Minigame_Chopping_C__Internal_KickMarkerConsiderAddingTicks::CallFunc_FTrunc_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Cooking_Minigame_Chopping_C__Internal_KickMarkerConsiderAddingTicks, CallFunc_Min_ReturnValue) == 0x000064, "Member 'WBP_Cooking_Minigame_Chopping_C__Internal_KickMarkerConsiderAddingTicks::CallFunc_Min_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Cooking_Minigame_Chopping_C__Internal_KickMarkerConsiderAddingTicks, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000068, "Member 'WBP_Cooking_Minigame_Chopping_C__Internal_KickMarkerConsiderAddingTicks::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Cooking_Minigame_Chopping_C__Internal_KickMarkerConsiderAddingTicks, CallFunc_GreaterEqual_DoubleDouble_ReturnValue) == 0x000070, "Member 'WBP_Cooking_Minigame_Chopping_C__Internal_KickMarkerConsiderAddingTicks::CallFunc_GreaterEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Cooking_Minigame_Chopping_C__Internal_KickMarkerConsiderAddingTicks, CallFunc_Multiply_IntFloat_ReturnValue) == 0x000078, "Member 'WBP_Cooking_Minigame_Chopping_C__Internal_KickMarkerConsiderAddingTicks::CallFunc_Multiply_IntFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Cooking_Minigame_Chopping_C__Internal_KickMarkerConsiderAddingTicks, CallFunc_Less_DoubleDouble_ReturnValue) == 0x000080, "Member 'WBP_Cooking_Minigame_Chopping_C__Internal_KickMarkerConsiderAddingTicks::CallFunc_Less_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Cooking_Minigame_Chopping_C__Internal_KickMarkerConsiderAddingTicks, CallFunc_Add_IntInt_ReturnValue_1) == 0x000084, "Member 'WBP_Cooking_Minigame_Chopping_C__Internal_KickMarkerConsiderAddingTicks::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_Cooking_Minigame_Chopping_C__Internal_KickMarkerConsiderAddingTicks, CallFunc_BooleanAND_ReturnValue) == 0x000088, "Member 'WBP_Cooking_Minigame_Chopping_C__Internal_KickMarkerConsiderAddingTicks::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Cooking_Minigame_Chopping_C__Internal_KickMarkerConsiderAddingTicks, CallFunc_Subtract_IntInt_ReturnValue) == 0x00008C, "Member 'WBP_Cooking_Minigame_Chopping_C__Internal_KickMarkerConsiderAddingTicks::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Cooking_Minigame_Chopping_C__Internal_KickMarkerConsiderAddingTicks, CallFunc_FMax_ReturnValue) == 0x000090, "Member 'WBP_Cooking_Minigame_Chopping_C__Internal_KickMarkerConsiderAddingTicks::CallFunc_FMax_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Cooking_Minigame_Chopping_C__Internal_KickMarkerConsiderAddingTicks, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000098, "Member 'WBP_Cooking_Minigame_Chopping_C__Internal_KickMarkerConsiderAddingTicks::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Cooking_Minigame_Chopping_C__Internal_KickMarkerConsiderAddingTicks, CallFunc_Greater_IntInt_ReturnValue) == 0x000099, "Member 'WBP_Cooking_Minigame_Chopping_C__Internal_KickMarkerConsiderAddingTicks::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Cooking_Minigame_Chopping_C__Internal_KickMarkerConsiderAddingTicks, CallFunc_SafeDivide_ReturnValue_1) == 0x0000A0, "Member 'WBP_Cooking_Minigame_Chopping_C__Internal_KickMarkerConsiderAddingTicks::CallFunc_SafeDivide_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_Cooking_Minigame_Chopping_C__Internal_KickMarkerConsiderAddingTicks, CallFunc_FFloor_ReturnValue) == 0x0000A8, "Member 'WBP_Cooking_Minigame_Chopping_C__Internal_KickMarkerConsiderAddingTicks::CallFunc_FFloor_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Cooking_Minigame_Chopping_C__Internal_KickMarkerConsiderAddingTicks, CallFunc_Add_IntInt_ReturnValue_2) == 0x0000AC, "Member 'WBP_Cooking_Minigame_Chopping_C__Internal_KickMarkerConsiderAddingTicks::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_Cooking_Minigame_Chopping_C__Internal_KickMarkerConsiderAddingTicks, CallFunc_Subtract_DoubleDouble_ReturnValue_1) == 0x0000B0, "Member 'WBP_Cooking_Minigame_Chopping_C__Internal_KickMarkerConsiderAddingTicks::CallFunc_Subtract_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_Cooking_Minigame_Chopping_C__Internal_KickMarkerConsiderAddingTicks, CallFunc_Subtract_DoubleDouble_ReturnValue_2) == 0x0000B8, "Member 'WBP_Cooking_Minigame_Chopping_C__Internal_KickMarkerConsiderAddingTicks::CallFunc_Subtract_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_Cooking_Minigame_Chopping_C__Internal_KickMarkerConsiderAddingTicks, CallFunc_Percent_FloatFloat_ReturnValue) == 0x0000C0, "Member 'WBP_Cooking_Minigame_Chopping_C__Internal_KickMarkerConsiderAddingTicks::CallFunc_Percent_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Cooking_Minigame_Chopping_C__Internal_KickMarkerConsiderAddingTicks, CallFunc_Subtract_DoubleDouble_ReturnValue_3) == 0x0000C8, "Member 'WBP_Cooking_Minigame_Chopping_C__Internal_KickMarkerConsiderAddingTicks::CallFunc_Subtract_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WBP_Cooking_Minigame_Chopping_C__Internal_KickMarkerConsiderAddingTicks, CallFunc_Get_Next_Inactive_Indicator_Indicator) == 0x0000D0, "Member 'WBP_Cooking_Minigame_Chopping_C__Internal_KickMarkerConsiderAddingTicks::CallFunc_Get_Next_Inactive_Indicator_Indicator' has a wrong offset!");
static_assert(offsetof(WBP_Cooking_Minigame_Chopping_C__Internal_KickMarkerConsiderAddingTicks, CallFunc_IsValid_ReturnValue) == 0x0000D8, "Member 'WBP_Cooking_Minigame_Chopping_C__Internal_KickMarkerConsiderAddingTicks::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Cooking_Minigame_Chopping_C__Internal_KickMarkerConsiderAddingTicks, CallFunc_Subtract_DoubleDouble_ReturnValue_4) == 0x0000E0, "Member 'WBP_Cooking_Minigame_Chopping_C__Internal_KickMarkerConsiderAddingTicks::CallFunc_Subtract_DoubleDouble_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(WBP_Cooking_Minigame_Chopping_C__Internal_KickMarkerConsiderAddingTicks, CallFunc_Add_DoubleDouble_ReturnValue_1) == 0x0000E8, "Member 'WBP_Cooking_Minigame_Chopping_C__Internal_KickMarkerConsiderAddingTicks::CallFunc_Add_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_Cooking_Minigame_Chopping_C__Internal_KickMarkerConsiderAddingTicks, CallFunc_GetTimeElapsed_ReturnValue) == 0x0000F0, "Member 'WBP_Cooking_Minigame_Chopping_C__Internal_KickMarkerConsiderAddingTicks::CallFunc_GetTimeElapsed_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Cooking_Minigame_Chopping_C__Internal_KickMarkerConsiderAddingTicks, CallFunc_Add_DoubleDouble_ReturnValue_2) == 0x0000F8, "Member 'WBP_Cooking_Minigame_Chopping_C__Internal_KickMarkerConsiderAddingTicks::CallFunc_Add_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_Cooking_Minigame_Chopping_C__Internal_KickMarkerConsiderAddingTicks, CallFunc_GetCenterPositionOfSuccessMarker_X_Position) == 0x000100, "Member 'WBP_Cooking_Minigame_Chopping_C__Internal_KickMarkerConsiderAddingTicks::CallFunc_GetCenterPositionOfSuccessMarker_X_Position' has a wrong offset!");
static_assert(offsetof(WBP_Cooking_Minigame_Chopping_C__Internal_KickMarkerConsiderAddingTicks, CallFunc_SafeDivide_B_ImplicitCast) == 0x000108, "Member 'WBP_Cooking_Minigame_Chopping_C__Internal_KickMarkerConsiderAddingTicks::CallFunc_SafeDivide_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(WBP_Cooking_Minigame_Chopping_C__Internal_KickMarkerConsiderAddingTicks, CallFunc_Multiply_IntFloat_B_ImplicitCast) == 0x000110, "Member 'WBP_Cooking_Minigame_Chopping_C__Internal_KickMarkerConsiderAddingTicks::CallFunc_Multiply_IntFloat_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(WBP_Cooking_Minigame_Chopping_C__Internal_KickMarkerConsiderAddingTicks, CallFunc_Subtract_DoubleDouble_A_ImplicitCast) == 0x000118, "Member 'WBP_Cooking_Minigame_Chopping_C__Internal_KickMarkerConsiderAddingTicks::CallFunc_Subtract_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(WBP_Cooking_Minigame_Chopping_C__Internal_KickMarkerConsiderAddingTicks, CallFunc_SafeDivide_B_ImplicitCast_1) == 0x000120, "Member 'WBP_Cooking_Minigame_Chopping_C__Internal_KickMarkerConsiderAddingTicks::CallFunc_SafeDivide_B_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(WBP_Cooking_Minigame_Chopping_C__Internal_KickMarkerConsiderAddingTicks, CallFunc_Percent_FloatFloat_B_ImplicitCast) == 0x000128, "Member 'WBP_Cooking_Minigame_Chopping_C__Internal_KickMarkerConsiderAddingTicks::CallFunc_Percent_FloatFloat_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(WBP_Cooking_Minigame_Chopping_C__Internal_KickMarkerConsiderAddingTicks, K2Node_VariableSet_LastTimerKickTime_ImplicitCast) == 0x000130, "Member 'WBP_Cooking_Minigame_Chopping_C__Internal_KickMarkerConsiderAddingTicks::K2Node_VariableSet_LastTimerKickTime_ImplicitCast' has a wrong offset!");

// Function WBP_Cooking_Minigame_Chopping.WBP_Cooking_Minigame_Chopping_C.CheckForCollidingMarkers
// 0x0088 (0x0088 - 0x0000)
struct WBP_Cooking_Minigame_Chopping_C_CheckForCollidingMarkers final
{
public:
	class UWidget*                                Widget;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5A20[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UCanvasPanelSlot*                       CallFunc_SlotAsCanvasSlot_ReturnValue;             // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_GetPosition_ReturnValue;                  // 0x0018(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5A21[0x4];                                     // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_BreakVector2D_X;                          // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y;                          // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5A22[0x4];                                     // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_Cooking_Minigame_Chopping_Marker_C* CallFunc_Array_Get_Item;                           // 0x0048(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ObjectObject_ReturnValue;        // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0055(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsVisible_ReturnValue;                    // 0x0056(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5A23[0x1];                                     // 0x0057(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class UCanvasPanelSlot*                       CallFunc_SlotAsCanvasSlot_ReturnValue_1;           // 0x0058(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_GetPosition_ReturnValue_1;                // 0x0060(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_X_1;                        // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y_1;                        // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NearlyEqual_FloatFloat_ReturnValue;       // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0081(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0082(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Cooking_Minigame_Chopping_C_CheckForCollidingMarkers) == 0x000008, "Wrong alignment on WBP_Cooking_Minigame_Chopping_C_CheckForCollidingMarkers");
static_assert(sizeof(WBP_Cooking_Minigame_Chopping_C_CheckForCollidingMarkers) == 0x000088, "Wrong size on WBP_Cooking_Minigame_Chopping_C_CheckForCollidingMarkers");
static_assert(offsetof(WBP_Cooking_Minigame_Chopping_C_CheckForCollidingMarkers, Widget) == 0x000000, "Member 'WBP_Cooking_Minigame_Chopping_C_CheckForCollidingMarkers::Widget' has a wrong offset!");
static_assert(offsetof(WBP_Cooking_Minigame_Chopping_C_CheckForCollidingMarkers, Temp_int_Array_Index_Variable) == 0x000008, "Member 'WBP_Cooking_Minigame_Chopping_C_CheckForCollidingMarkers::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Cooking_Minigame_Chopping_C_CheckForCollidingMarkers, CallFunc_SlotAsCanvasSlot_ReturnValue) == 0x000010, "Member 'WBP_Cooking_Minigame_Chopping_C_CheckForCollidingMarkers::CallFunc_SlotAsCanvasSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Cooking_Minigame_Chopping_C_CheckForCollidingMarkers, CallFunc_GetPosition_ReturnValue) == 0x000018, "Member 'WBP_Cooking_Minigame_Chopping_C_CheckForCollidingMarkers::CallFunc_GetPosition_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Cooking_Minigame_Chopping_C_CheckForCollidingMarkers, Temp_int_Loop_Counter_Variable) == 0x000028, "Member 'WBP_Cooking_Minigame_Chopping_C_CheckForCollidingMarkers::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Cooking_Minigame_Chopping_C_CheckForCollidingMarkers, CallFunc_BreakVector2D_X) == 0x000030, "Member 'WBP_Cooking_Minigame_Chopping_C_CheckForCollidingMarkers::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(WBP_Cooking_Minigame_Chopping_C_CheckForCollidingMarkers, CallFunc_BreakVector2D_Y) == 0x000038, "Member 'WBP_Cooking_Minigame_Chopping_C_CheckForCollidingMarkers::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(WBP_Cooking_Minigame_Chopping_C_CheckForCollidingMarkers, CallFunc_Add_IntInt_ReturnValue) == 0x000040, "Member 'WBP_Cooking_Minigame_Chopping_C_CheckForCollidingMarkers::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Cooking_Minigame_Chopping_C_CheckForCollidingMarkers, CallFunc_Array_Get_Item) == 0x000048, "Member 'WBP_Cooking_Minigame_Chopping_C_CheckForCollidingMarkers::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_Cooking_Minigame_Chopping_C_CheckForCollidingMarkers, CallFunc_Array_Length_ReturnValue) == 0x000050, "Member 'WBP_Cooking_Minigame_Chopping_C_CheckForCollidingMarkers::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Cooking_Minigame_Chopping_C_CheckForCollidingMarkers, CallFunc_NotEqual_ObjectObject_ReturnValue) == 0x000054, "Member 'WBP_Cooking_Minigame_Chopping_C_CheckForCollidingMarkers::CallFunc_NotEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Cooking_Minigame_Chopping_C_CheckForCollidingMarkers, CallFunc_Less_IntInt_ReturnValue) == 0x000055, "Member 'WBP_Cooking_Minigame_Chopping_C_CheckForCollidingMarkers::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Cooking_Minigame_Chopping_C_CheckForCollidingMarkers, CallFunc_IsVisible_ReturnValue) == 0x000056, "Member 'WBP_Cooking_Minigame_Chopping_C_CheckForCollidingMarkers::CallFunc_IsVisible_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Cooking_Minigame_Chopping_C_CheckForCollidingMarkers, CallFunc_SlotAsCanvasSlot_ReturnValue_1) == 0x000058, "Member 'WBP_Cooking_Minigame_Chopping_C_CheckForCollidingMarkers::CallFunc_SlotAsCanvasSlot_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_Cooking_Minigame_Chopping_C_CheckForCollidingMarkers, CallFunc_GetPosition_ReturnValue_1) == 0x000060, "Member 'WBP_Cooking_Minigame_Chopping_C_CheckForCollidingMarkers::CallFunc_GetPosition_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_Cooking_Minigame_Chopping_C_CheckForCollidingMarkers, CallFunc_BreakVector2D_X_1) == 0x000070, "Member 'WBP_Cooking_Minigame_Chopping_C_CheckForCollidingMarkers::CallFunc_BreakVector2D_X_1' has a wrong offset!");
static_assert(offsetof(WBP_Cooking_Minigame_Chopping_C_CheckForCollidingMarkers, CallFunc_BreakVector2D_Y_1) == 0x000078, "Member 'WBP_Cooking_Minigame_Chopping_C_CheckForCollidingMarkers::CallFunc_BreakVector2D_Y_1' has a wrong offset!");
static_assert(offsetof(WBP_Cooking_Minigame_Chopping_C_CheckForCollidingMarkers, CallFunc_NearlyEqual_FloatFloat_ReturnValue) == 0x000080, "Member 'WBP_Cooking_Minigame_Chopping_C_CheckForCollidingMarkers::CallFunc_NearlyEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Cooking_Minigame_Chopping_C_CheckForCollidingMarkers, CallFunc_BooleanAND_ReturnValue) == 0x000081, "Member 'WBP_Cooking_Minigame_Chopping_C_CheckForCollidingMarkers::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Cooking_Minigame_Chopping_C_CheckForCollidingMarkers, CallFunc_BooleanAND_ReturnValue_1) == 0x000082, "Member 'WBP_Cooking_Minigame_Chopping_C_CheckForCollidingMarkers::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");

// Function WBP_Cooking_Minigame_Chopping.WBP_Cooking_Minigame_Chopping_C.ExecuteUbergraph_WBP_Cooking_Minigame_Chopping
// 0x0130 (0x0130 - 0x0000)
struct WBP_Cooking_Minigame_Chopping_C_ExecuteUbergraph_WBP_Cooking_Minigame_Chopping final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable;                       // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Has_Been_Initd_Variable;                 // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPaused_ReturnValue;                     // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPlaying_ReturnValue;                    // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5A24[0x1];                                     // 0x000B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5A25[0x3];                                     // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_AkEventGlobal_ReturnValue;                // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_AkEventGlobal_ReturnValue_1;              // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_AkEventGlobal_ReturnValue_2;              // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_AkEventGlobal_ReturnValue_3;              // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGeometry                              K2Node_Event_MyGeometry;                           // 0x002C(0x0038)(IsPlainOldData, NoDestructor)
	float                                         K2Node_Event_InDeltaTime;                          // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess_1;                    // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess_2;                    // 0x0069(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5A26[0x6];                                     // 0x006A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0078(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPaused_ReturnValue_1;                   // 0x0089(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x008A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5A27[0x5];                                     // 0x008B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationForward_ReturnValue;         // 0x0090(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_CreatePlayAnimationProxyObject_Result;    // 0x0098(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimationPlayCallbackProxy*      CallFunc_CreatePlayAnimationProxyObject_ReturnValue; // 0x00A0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPlaying_ReturnValue_1;                  // 0x00A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x00AA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x00AB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_AkEventGlobal_ReturnValue_4;              // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FMod_Remainder;                           // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FMod_ReturnValue;                         // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPaused_ReturnValue_2;                   // 0x00BC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5A28[0x3];                                     // 0x00BD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5A29[0x7];                                     // 0x00C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_1;      // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWBP_Cooking_Minigame_Chopping_Marker_C* CallFunc_Array_Get_Item;                           // 0x00D8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00E4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5A2A[0x3];                                     // 0x00E5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc__Internal_KickMarkerConsiderAddingTicks_NextTimerDelay; // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPlaying_ReturnValue_2;                  // 0x00F1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x00F2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5A2B[0x1];                                     // 0x00F3(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_AkEventGlobal_ReturnValue_5;              // 0x00F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_A_ImplicitCast;     // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Delay_Duration_ImplicitCast;              // 0x0100(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5A2C[0x4];                                     // 0x0104(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_FMod_Divisor_ImplicitCast;                // 0x0108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_AkSetRTPC_Value_ImplicitCast;             // 0x0110(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_B_ImplicitCast;          // 0x0118(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FMod_Dividend_ImplicitCast;               // 0x0120(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RetriggerableDelay_Duration_ImplicitCast; // 0x0128(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Cooking_Minigame_Chopping_C_ExecuteUbergraph_WBP_Cooking_Minigame_Chopping) == 0x000008, "Wrong alignment on WBP_Cooking_Minigame_Chopping_C_ExecuteUbergraph_WBP_Cooking_Minigame_Chopping");
static_assert(sizeof(WBP_Cooking_Minigame_Chopping_C_ExecuteUbergraph_WBP_Cooking_Minigame_Chopping) == 0x000130, "Wrong size on WBP_Cooking_Minigame_Chopping_C_ExecuteUbergraph_WBP_Cooking_Minigame_Chopping");
static_assert(offsetof(WBP_Cooking_Minigame_Chopping_C_ExecuteUbergraph_WBP_Cooking_Minigame_Chopping, EntryPoint) == 0x000000, "Member 'WBP_Cooking_Minigame_Chopping_C_ExecuteUbergraph_WBP_Cooking_Minigame_Chopping::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_Cooking_Minigame_Chopping_C_ExecuteUbergraph_WBP_Cooking_Minigame_Chopping, Temp_bool_IsClosed_Variable) == 0x000004, "Member 'WBP_Cooking_Minigame_Chopping_C_ExecuteUbergraph_WBP_Cooking_Minigame_Chopping::Temp_bool_IsClosed_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Cooking_Minigame_Chopping_C_ExecuteUbergraph_WBP_Cooking_Minigame_Chopping, Temp_bool_Has_Been_Initd_Variable) == 0x000005, "Member 'WBP_Cooking_Minigame_Chopping_C_ExecuteUbergraph_WBP_Cooking_Minigame_Chopping::Temp_bool_Has_Been_Initd_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Cooking_Minigame_Chopping_C_ExecuteUbergraph_WBP_Cooking_Minigame_Chopping, CallFunc_IsPaused_ReturnValue) == 0x000006, "Member 'WBP_Cooking_Minigame_Chopping_C_ExecuteUbergraph_WBP_Cooking_Minigame_Chopping::CallFunc_IsPaused_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Cooking_Minigame_Chopping_C_ExecuteUbergraph_WBP_Cooking_Minigame_Chopping, CallFunc_IsValid_ReturnValue) == 0x000007, "Member 'WBP_Cooking_Minigame_Chopping_C_ExecuteUbergraph_WBP_Cooking_Minigame_Chopping::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Cooking_Minigame_Chopping_C_ExecuteUbergraph_WBP_Cooking_Minigame_Chopping, CallFunc_Not_PreBool_ReturnValue) == 0x000008, "Member 'WBP_Cooking_Minigame_Chopping_C_ExecuteUbergraph_WBP_Cooking_Minigame_Chopping::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Cooking_Minigame_Chopping_C_ExecuteUbergraph_WBP_Cooking_Minigame_Chopping, CallFunc_IsPlaying_ReturnValue) == 0x000009, "Member 'WBP_Cooking_Minigame_Chopping_C_ExecuteUbergraph_WBP_Cooking_Minigame_Chopping::CallFunc_IsPlaying_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Cooking_Minigame_Chopping_C_ExecuteUbergraph_WBP_Cooking_Minigame_Chopping, CallFunc_BooleanAND_ReturnValue) == 0x00000A, "Member 'WBP_Cooking_Minigame_Chopping_C_ExecuteUbergraph_WBP_Cooking_Minigame_Chopping::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Cooking_Minigame_Chopping_C_ExecuteUbergraph_WBP_Cooking_Minigame_Chopping, Temp_int_Loop_Counter_Variable) == 0x00000C, "Member 'WBP_Cooking_Minigame_Chopping_C_ExecuteUbergraph_WBP_Cooking_Minigame_Chopping::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Cooking_Minigame_Chopping_C_ExecuteUbergraph_WBP_Cooking_Minigame_Chopping, CallFunc_Add_IntInt_ReturnValue) == 0x000010, "Member 'WBP_Cooking_Minigame_Chopping_C_ExecuteUbergraph_WBP_Cooking_Minigame_Chopping::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Cooking_Minigame_Chopping_C_ExecuteUbergraph_WBP_Cooking_Minigame_Chopping, K2Node_SwitchEnum_CmpSuccess) == 0x000014, "Member 'WBP_Cooking_Minigame_Chopping_C_ExecuteUbergraph_WBP_Cooking_Minigame_Chopping::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(WBP_Cooking_Minigame_Chopping_C_ExecuteUbergraph_WBP_Cooking_Minigame_Chopping, Temp_int_Array_Index_Variable) == 0x000018, "Member 'WBP_Cooking_Minigame_Chopping_C_ExecuteUbergraph_WBP_Cooking_Minigame_Chopping::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Cooking_Minigame_Chopping_C_ExecuteUbergraph_WBP_Cooking_Minigame_Chopping, CallFunc_AkEventGlobal_ReturnValue) == 0x00001C, "Member 'WBP_Cooking_Minigame_Chopping_C_ExecuteUbergraph_WBP_Cooking_Minigame_Chopping::CallFunc_AkEventGlobal_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Cooking_Minigame_Chopping_C_ExecuteUbergraph_WBP_Cooking_Minigame_Chopping, CallFunc_AkEventGlobal_ReturnValue_1) == 0x000020, "Member 'WBP_Cooking_Minigame_Chopping_C_ExecuteUbergraph_WBP_Cooking_Minigame_Chopping::CallFunc_AkEventGlobal_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_Cooking_Minigame_Chopping_C_ExecuteUbergraph_WBP_Cooking_Minigame_Chopping, CallFunc_AkEventGlobal_ReturnValue_2) == 0x000024, "Member 'WBP_Cooking_Minigame_Chopping_C_ExecuteUbergraph_WBP_Cooking_Minigame_Chopping::CallFunc_AkEventGlobal_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_Cooking_Minigame_Chopping_C_ExecuteUbergraph_WBP_Cooking_Minigame_Chopping, CallFunc_AkEventGlobal_ReturnValue_3) == 0x000028, "Member 'WBP_Cooking_Minigame_Chopping_C_ExecuteUbergraph_WBP_Cooking_Minigame_Chopping::CallFunc_AkEventGlobal_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WBP_Cooking_Minigame_Chopping_C_ExecuteUbergraph_WBP_Cooking_Minigame_Chopping, K2Node_Event_MyGeometry) == 0x00002C, "Member 'WBP_Cooking_Minigame_Chopping_C_ExecuteUbergraph_WBP_Cooking_Minigame_Chopping::K2Node_Event_MyGeometry' has a wrong offset!");
static_assert(offsetof(WBP_Cooking_Minigame_Chopping_C_ExecuteUbergraph_WBP_Cooking_Minigame_Chopping, K2Node_Event_InDeltaTime) == 0x000064, "Member 'WBP_Cooking_Minigame_Chopping_C_ExecuteUbergraph_WBP_Cooking_Minigame_Chopping::K2Node_Event_InDeltaTime' has a wrong offset!");
static_assert(offsetof(WBP_Cooking_Minigame_Chopping_C_ExecuteUbergraph_WBP_Cooking_Minigame_Chopping, K2Node_SwitchEnum_CmpSuccess_1) == 0x000068, "Member 'WBP_Cooking_Minigame_Chopping_C_ExecuteUbergraph_WBP_Cooking_Minigame_Chopping::K2Node_SwitchEnum_CmpSuccess_1' has a wrong offset!");
static_assert(offsetof(WBP_Cooking_Minigame_Chopping_C_ExecuteUbergraph_WBP_Cooking_Minigame_Chopping, K2Node_SwitchEnum_CmpSuccess_2) == 0x000069, "Member 'WBP_Cooking_Minigame_Chopping_C_ExecuteUbergraph_WBP_Cooking_Minigame_Chopping::K2Node_SwitchEnum_CmpSuccess_2' has a wrong offset!");
static_assert(offsetof(WBP_Cooking_Minigame_Chopping_C_ExecuteUbergraph_WBP_Cooking_Minigame_Chopping, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000070, "Member 'WBP_Cooking_Minigame_Chopping_C_ExecuteUbergraph_WBP_Cooking_Minigame_Chopping::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Cooking_Minigame_Chopping_C_ExecuteUbergraph_WBP_Cooking_Minigame_Chopping, K2Node_CreateDelegate_OutputDelegate) == 0x000078, "Member 'WBP_Cooking_Minigame_Chopping_C_ExecuteUbergraph_WBP_Cooking_Minigame_Chopping::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WBP_Cooking_Minigame_Chopping_C_ExecuteUbergraph_WBP_Cooking_Minigame_Chopping, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000088, "Member 'WBP_Cooking_Minigame_Chopping_C_ExecuteUbergraph_WBP_Cooking_Minigame_Chopping::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Cooking_Minigame_Chopping_C_ExecuteUbergraph_WBP_Cooking_Minigame_Chopping, CallFunc_IsPaused_ReturnValue_1) == 0x000089, "Member 'WBP_Cooking_Minigame_Chopping_C_ExecuteUbergraph_WBP_Cooking_Minigame_Chopping::CallFunc_IsPaused_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_Cooking_Minigame_Chopping_C_ExecuteUbergraph_WBP_Cooking_Minigame_Chopping, CallFunc_Not_PreBool_ReturnValue_1) == 0x00008A, "Member 'WBP_Cooking_Minigame_Chopping_C_ExecuteUbergraph_WBP_Cooking_Minigame_Chopping::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_Cooking_Minigame_Chopping_C_ExecuteUbergraph_WBP_Cooking_Minigame_Chopping, CallFunc_PlayAnimationForward_ReturnValue) == 0x000090, "Member 'WBP_Cooking_Minigame_Chopping_C_ExecuteUbergraph_WBP_Cooking_Minigame_Chopping::CallFunc_PlayAnimationForward_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Cooking_Minigame_Chopping_C_ExecuteUbergraph_WBP_Cooking_Minigame_Chopping, CallFunc_CreatePlayAnimationProxyObject_Result) == 0x000098, "Member 'WBP_Cooking_Minigame_Chopping_C_ExecuteUbergraph_WBP_Cooking_Minigame_Chopping::CallFunc_CreatePlayAnimationProxyObject_Result' has a wrong offset!");
static_assert(offsetof(WBP_Cooking_Minigame_Chopping_C_ExecuteUbergraph_WBP_Cooking_Minigame_Chopping, CallFunc_CreatePlayAnimationProxyObject_ReturnValue) == 0x0000A0, "Member 'WBP_Cooking_Minigame_Chopping_C_ExecuteUbergraph_WBP_Cooking_Minigame_Chopping::CallFunc_CreatePlayAnimationProxyObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Cooking_Minigame_Chopping_C_ExecuteUbergraph_WBP_Cooking_Minigame_Chopping, CallFunc_IsValid_ReturnValue_1) == 0x0000A8, "Member 'WBP_Cooking_Minigame_Chopping_C_ExecuteUbergraph_WBP_Cooking_Minigame_Chopping::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_Cooking_Minigame_Chopping_C_ExecuteUbergraph_WBP_Cooking_Minigame_Chopping, CallFunc_IsPlaying_ReturnValue_1) == 0x0000A9, "Member 'WBP_Cooking_Minigame_Chopping_C_ExecuteUbergraph_WBP_Cooking_Minigame_Chopping::CallFunc_IsPlaying_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_Cooking_Minigame_Chopping_C_ExecuteUbergraph_WBP_Cooking_Minigame_Chopping, CallFunc_BooleanAND_ReturnValue_1) == 0x0000AA, "Member 'WBP_Cooking_Minigame_Chopping_C_ExecuteUbergraph_WBP_Cooking_Minigame_Chopping::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_Cooking_Minigame_Chopping_C_ExecuteUbergraph_WBP_Cooking_Minigame_Chopping, CallFunc_IsValid_ReturnValue_2) == 0x0000AB, "Member 'WBP_Cooking_Minigame_Chopping_C_ExecuteUbergraph_WBP_Cooking_Minigame_Chopping::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_Cooking_Minigame_Chopping_C_ExecuteUbergraph_WBP_Cooking_Minigame_Chopping, CallFunc_AkEventGlobal_ReturnValue_4) == 0x0000AC, "Member 'WBP_Cooking_Minigame_Chopping_C_ExecuteUbergraph_WBP_Cooking_Minigame_Chopping::CallFunc_AkEventGlobal_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(WBP_Cooking_Minigame_Chopping_C_ExecuteUbergraph_WBP_Cooking_Minigame_Chopping, CallFunc_FMod_Remainder) == 0x0000B0, "Member 'WBP_Cooking_Minigame_Chopping_C_ExecuteUbergraph_WBP_Cooking_Minigame_Chopping::CallFunc_FMod_Remainder' has a wrong offset!");
static_assert(offsetof(WBP_Cooking_Minigame_Chopping_C_ExecuteUbergraph_WBP_Cooking_Minigame_Chopping, CallFunc_FMod_ReturnValue) == 0x0000B8, "Member 'WBP_Cooking_Minigame_Chopping_C_ExecuteUbergraph_WBP_Cooking_Minigame_Chopping::CallFunc_FMod_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Cooking_Minigame_Chopping_C_ExecuteUbergraph_WBP_Cooking_Minigame_Chopping, CallFunc_IsPaused_ReturnValue_2) == 0x0000BC, "Member 'WBP_Cooking_Minigame_Chopping_C_ExecuteUbergraph_WBP_Cooking_Minigame_Chopping::CallFunc_IsPaused_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_Cooking_Minigame_Chopping_C_ExecuteUbergraph_WBP_Cooking_Minigame_Chopping, CallFunc_Add_DoubleDouble_ReturnValue) == 0x0000C0, "Member 'WBP_Cooking_Minigame_Chopping_C_ExecuteUbergraph_WBP_Cooking_Minigame_Chopping::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Cooking_Minigame_Chopping_C_ExecuteUbergraph_WBP_Cooking_Minigame_Chopping, CallFunc_Not_PreBool_ReturnValue_2) == 0x0000C8, "Member 'WBP_Cooking_Minigame_Chopping_C_ExecuteUbergraph_WBP_Cooking_Minigame_Chopping::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_Cooking_Minigame_Chopping_C_ExecuteUbergraph_WBP_Cooking_Minigame_Chopping, CallFunc_Subtract_DoubleDouble_ReturnValue_1) == 0x0000D0, "Member 'WBP_Cooking_Minigame_Chopping_C_ExecuteUbergraph_WBP_Cooking_Minigame_Chopping::CallFunc_Subtract_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_Cooking_Minigame_Chopping_C_ExecuteUbergraph_WBP_Cooking_Minigame_Chopping, CallFunc_Array_Get_Item) == 0x0000D8, "Member 'WBP_Cooking_Minigame_Chopping_C_ExecuteUbergraph_WBP_Cooking_Minigame_Chopping::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_Cooking_Minigame_Chopping_C_ExecuteUbergraph_WBP_Cooking_Minigame_Chopping, CallFunc_Array_Length_ReturnValue) == 0x0000E0, "Member 'WBP_Cooking_Minigame_Chopping_C_ExecuteUbergraph_WBP_Cooking_Minigame_Chopping::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Cooking_Minigame_Chopping_C_ExecuteUbergraph_WBP_Cooking_Minigame_Chopping, CallFunc_Less_IntInt_ReturnValue) == 0x0000E4, "Member 'WBP_Cooking_Minigame_Chopping_C_ExecuteUbergraph_WBP_Cooking_Minigame_Chopping::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Cooking_Minigame_Chopping_C_ExecuteUbergraph_WBP_Cooking_Minigame_Chopping, CallFunc__Internal_KickMarkerConsiderAddingTicks_NextTimerDelay) == 0x0000E8, "Member 'WBP_Cooking_Minigame_Chopping_C_ExecuteUbergraph_WBP_Cooking_Minigame_Chopping::CallFunc__Internal_KickMarkerConsiderAddingTicks_NextTimerDelay' has a wrong offset!");
static_assert(offsetof(WBP_Cooking_Minigame_Chopping_C_ExecuteUbergraph_WBP_Cooking_Minigame_Chopping, CallFunc_IsValid_ReturnValue_3) == 0x0000F0, "Member 'WBP_Cooking_Minigame_Chopping_C_ExecuteUbergraph_WBP_Cooking_Minigame_Chopping::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WBP_Cooking_Minigame_Chopping_C_ExecuteUbergraph_WBP_Cooking_Minigame_Chopping, CallFunc_IsPlaying_ReturnValue_2) == 0x0000F1, "Member 'WBP_Cooking_Minigame_Chopping_C_ExecuteUbergraph_WBP_Cooking_Minigame_Chopping::CallFunc_IsPlaying_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_Cooking_Minigame_Chopping_C_ExecuteUbergraph_WBP_Cooking_Minigame_Chopping, CallFunc_BooleanAND_ReturnValue_2) == 0x0000F2, "Member 'WBP_Cooking_Minigame_Chopping_C_ExecuteUbergraph_WBP_Cooking_Minigame_Chopping::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_Cooking_Minigame_Chopping_C_ExecuteUbergraph_WBP_Cooking_Minigame_Chopping, CallFunc_AkEventGlobal_ReturnValue_5) == 0x0000F4, "Member 'WBP_Cooking_Minigame_Chopping_C_ExecuteUbergraph_WBP_Cooking_Minigame_Chopping::CallFunc_AkEventGlobal_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(WBP_Cooking_Minigame_Chopping_C_ExecuteUbergraph_WBP_Cooking_Minigame_Chopping, CallFunc_Subtract_DoubleDouble_A_ImplicitCast) == 0x0000F8, "Member 'WBP_Cooking_Minigame_Chopping_C_ExecuteUbergraph_WBP_Cooking_Minigame_Chopping::CallFunc_Subtract_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(WBP_Cooking_Minigame_Chopping_C_ExecuteUbergraph_WBP_Cooking_Minigame_Chopping, CallFunc_Delay_Duration_ImplicitCast) == 0x000100, "Member 'WBP_Cooking_Minigame_Chopping_C_ExecuteUbergraph_WBP_Cooking_Minigame_Chopping::CallFunc_Delay_Duration_ImplicitCast' has a wrong offset!");
static_assert(offsetof(WBP_Cooking_Minigame_Chopping_C_ExecuteUbergraph_WBP_Cooking_Minigame_Chopping, CallFunc_FMod_Divisor_ImplicitCast) == 0x000108, "Member 'WBP_Cooking_Minigame_Chopping_C_ExecuteUbergraph_WBP_Cooking_Minigame_Chopping::CallFunc_FMod_Divisor_ImplicitCast' has a wrong offset!");
static_assert(offsetof(WBP_Cooking_Minigame_Chopping_C_ExecuteUbergraph_WBP_Cooking_Minigame_Chopping, CallFunc_AkSetRTPC_Value_ImplicitCast) == 0x000110, "Member 'WBP_Cooking_Minigame_Chopping_C_ExecuteUbergraph_WBP_Cooking_Minigame_Chopping::CallFunc_AkSetRTPC_Value_ImplicitCast' has a wrong offset!");
static_assert(offsetof(WBP_Cooking_Minigame_Chopping_C_ExecuteUbergraph_WBP_Cooking_Minigame_Chopping, CallFunc_Add_DoubleDouble_B_ImplicitCast) == 0x000118, "Member 'WBP_Cooking_Minigame_Chopping_C_ExecuteUbergraph_WBP_Cooking_Minigame_Chopping::CallFunc_Add_DoubleDouble_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(WBP_Cooking_Minigame_Chopping_C_ExecuteUbergraph_WBP_Cooking_Minigame_Chopping, CallFunc_FMod_Dividend_ImplicitCast) == 0x000120, "Member 'WBP_Cooking_Minigame_Chopping_C_ExecuteUbergraph_WBP_Cooking_Minigame_Chopping::CallFunc_FMod_Dividend_ImplicitCast' has a wrong offset!");
static_assert(offsetof(WBP_Cooking_Minigame_Chopping_C_ExecuteUbergraph_WBP_Cooking_Minigame_Chopping, CallFunc_RetriggerableDelay_Duration_ImplicitCast) == 0x000128, "Member 'WBP_Cooking_Minigame_Chopping_C_ExecuteUbergraph_WBP_Cooking_Minigame_Chopping::CallFunc_RetriggerableDelay_Duration_ImplicitCast' has a wrong offset!");

// Function WBP_Cooking_Minigame_Chopping.WBP_Cooking_Minigame_Chopping_C.ExpectedInputMissed
// 0x0008 (0x0008 - 0x0000)
struct WBP_Cooking_Minigame_Chopping_C_ExpectedInputMissed final
{
public:
	class UMinigameComponentMasterQTE*            Comp;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Cooking_Minigame_Chopping_C_ExpectedInputMissed) == 0x000008, "Wrong alignment on WBP_Cooking_Minigame_Chopping_C_ExpectedInputMissed");
static_assert(sizeof(WBP_Cooking_Minigame_Chopping_C_ExpectedInputMissed) == 0x000008, "Wrong size on WBP_Cooking_Minigame_Chopping_C_ExpectedInputMissed");
static_assert(offsetof(WBP_Cooking_Minigame_Chopping_C_ExpectedInputMissed, Comp) == 0x000000, "Member 'WBP_Cooking_Minigame_Chopping_C_ExpectedInputMissed::Comp' has a wrong offset!");

// Function WBP_Cooking_Minigame_Chopping.WBP_Cooking_Minigame_Chopping_C.Get Next Inactive Indicator
// 0x0060 (0x0060 - 0x0000)
struct WBP_Cooking_Minigame_Chopping_C_Get_Next_Inactive_Indicator final
{
public:
	class UWBP_Cooking_Minigame_Chopping_Marker_C* Indicator;                                         // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5A2D[0x4];                                     // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UWBP_Cooking_Minigame_Chopping_Marker_C* CallFunc_Create_ReturnValue;                       // 0x0020(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UWBP_Cooking_Minigame_Chopping_Marker_C* CallFunc_Array_Get_Item;                           // 0x0028(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsVisible_ReturnValue;                    // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5A2E[0x6];                                     // 0x0032(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UPanelSlot*                             CallFunc_AddChild_ReturnValue;                     // 0x0038(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5A2F[0x4];                                     // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UCanvasPanelSlot*                       K2Node_DynamicCast_AsCanvas_Panel_Slot;            // 0x0048(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5A30[0x3];                                     // 0x0051(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Cooking_Minigame_Chopping_C_Get_Next_Inactive_Indicator) == 0x000008, "Wrong alignment on WBP_Cooking_Minigame_Chopping_C_Get_Next_Inactive_Indicator");
static_assert(sizeof(WBP_Cooking_Minigame_Chopping_C_Get_Next_Inactive_Indicator) == 0x000060, "Wrong size on WBP_Cooking_Minigame_Chopping_C_Get_Next_Inactive_Indicator");
static_assert(offsetof(WBP_Cooking_Minigame_Chopping_C_Get_Next_Inactive_Indicator, Indicator) == 0x000000, "Member 'WBP_Cooking_Minigame_Chopping_C_Get_Next_Inactive_Indicator::Indicator' has a wrong offset!");
static_assert(offsetof(WBP_Cooking_Minigame_Chopping_C_Get_Next_Inactive_Indicator, Temp_int_Array_Index_Variable) == 0x000008, "Member 'WBP_Cooking_Minigame_Chopping_C_Get_Next_Inactive_Indicator::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Cooking_Minigame_Chopping_C_Get_Next_Inactive_Indicator, Temp_int_Loop_Counter_Variable) == 0x00000C, "Member 'WBP_Cooking_Minigame_Chopping_C_Get_Next_Inactive_Indicator::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Cooking_Minigame_Chopping_C_Get_Next_Inactive_Indicator, CallFunc_Add_IntInt_ReturnValue) == 0x000010, "Member 'WBP_Cooking_Minigame_Chopping_C_Get_Next_Inactive_Indicator::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Cooking_Minigame_Chopping_C_Get_Next_Inactive_Indicator, CallFunc_GetOwningPlayer_ReturnValue) == 0x000018, "Member 'WBP_Cooking_Minigame_Chopping_C_Get_Next_Inactive_Indicator::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Cooking_Minigame_Chopping_C_Get_Next_Inactive_Indicator, CallFunc_Create_ReturnValue) == 0x000020, "Member 'WBP_Cooking_Minigame_Chopping_C_Get_Next_Inactive_Indicator::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Cooking_Minigame_Chopping_C_Get_Next_Inactive_Indicator, CallFunc_Array_Get_Item) == 0x000028, "Member 'WBP_Cooking_Minigame_Chopping_C_Get_Next_Inactive_Indicator::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_Cooking_Minigame_Chopping_C_Get_Next_Inactive_Indicator, CallFunc_IsVisible_ReturnValue) == 0x000030, "Member 'WBP_Cooking_Minigame_Chopping_C_Get_Next_Inactive_Indicator::CallFunc_IsVisible_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Cooking_Minigame_Chopping_C_Get_Next_Inactive_Indicator, CallFunc_IsValid_ReturnValue) == 0x000031, "Member 'WBP_Cooking_Minigame_Chopping_C_Get_Next_Inactive_Indicator::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Cooking_Minigame_Chopping_C_Get_Next_Inactive_Indicator, CallFunc_AddChild_ReturnValue) == 0x000038, "Member 'WBP_Cooking_Minigame_Chopping_C_Get_Next_Inactive_Indicator::CallFunc_AddChild_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Cooking_Minigame_Chopping_C_Get_Next_Inactive_Indicator, CallFunc_Array_Add_ReturnValue) == 0x000040, "Member 'WBP_Cooking_Minigame_Chopping_C_Get_Next_Inactive_Indicator::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Cooking_Minigame_Chopping_C_Get_Next_Inactive_Indicator, K2Node_DynamicCast_AsCanvas_Panel_Slot) == 0x000048, "Member 'WBP_Cooking_Minigame_Chopping_C_Get_Next_Inactive_Indicator::K2Node_DynamicCast_AsCanvas_Panel_Slot' has a wrong offset!");
static_assert(offsetof(WBP_Cooking_Minigame_Chopping_C_Get_Next_Inactive_Indicator, K2Node_DynamicCast_bSuccess) == 0x000050, "Member 'WBP_Cooking_Minigame_Chopping_C_Get_Next_Inactive_Indicator::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_Cooking_Minigame_Chopping_C_Get_Next_Inactive_Indicator, CallFunc_Array_Length_ReturnValue) == 0x000054, "Member 'WBP_Cooking_Minigame_Chopping_C_Get_Next_Inactive_Indicator::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Cooking_Minigame_Chopping_C_Get_Next_Inactive_Indicator, CallFunc_Less_IntInt_ReturnValue) == 0x000058, "Member 'WBP_Cooking_Minigame_Chopping_C_Get_Next_Inactive_Indicator::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function WBP_Cooking_Minigame_Chopping.WBP_Cooking_Minigame_Chopping_C.GetCenterPositionOfSuccessMarker
// 0x0048 (0x0048 - 0x0000)
struct WBP_Cooking_Minigame_Chopping_C_GetCenterPositionOfSuccessMarker final
{
public:
	double                                        X_Position;                                        // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UOverlaySlot*                           CallFunc_SlotAsOverlaySlot_ReturnValue;            // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_GetDesiredSize_ReturnValue;               // 0x0010(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_X;                          // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y;                          // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_A_ImplicitCast;          // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Cooking_Minigame_Chopping_C_GetCenterPositionOfSuccessMarker) == 0x000008, "Wrong alignment on WBP_Cooking_Minigame_Chopping_C_GetCenterPositionOfSuccessMarker");
static_assert(sizeof(WBP_Cooking_Minigame_Chopping_C_GetCenterPositionOfSuccessMarker) == 0x000048, "Wrong size on WBP_Cooking_Minigame_Chopping_C_GetCenterPositionOfSuccessMarker");
static_assert(offsetof(WBP_Cooking_Minigame_Chopping_C_GetCenterPositionOfSuccessMarker, X_Position) == 0x000000, "Member 'WBP_Cooking_Minigame_Chopping_C_GetCenterPositionOfSuccessMarker::X_Position' has a wrong offset!");
static_assert(offsetof(WBP_Cooking_Minigame_Chopping_C_GetCenterPositionOfSuccessMarker, CallFunc_SlotAsOverlaySlot_ReturnValue) == 0x000008, "Member 'WBP_Cooking_Minigame_Chopping_C_GetCenterPositionOfSuccessMarker::CallFunc_SlotAsOverlaySlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Cooking_Minigame_Chopping_C_GetCenterPositionOfSuccessMarker, CallFunc_GetDesiredSize_ReturnValue) == 0x000010, "Member 'WBP_Cooking_Minigame_Chopping_C_GetCenterPositionOfSuccessMarker::CallFunc_GetDesiredSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Cooking_Minigame_Chopping_C_GetCenterPositionOfSuccessMarker, CallFunc_BreakVector2D_X) == 0x000020, "Member 'WBP_Cooking_Minigame_Chopping_C_GetCenterPositionOfSuccessMarker::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(WBP_Cooking_Minigame_Chopping_C_GetCenterPositionOfSuccessMarker, CallFunc_BreakVector2D_Y) == 0x000028, "Member 'WBP_Cooking_Minigame_Chopping_C_GetCenterPositionOfSuccessMarker::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(WBP_Cooking_Minigame_Chopping_C_GetCenterPositionOfSuccessMarker, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000030, "Member 'WBP_Cooking_Minigame_Chopping_C_GetCenterPositionOfSuccessMarker::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Cooking_Minigame_Chopping_C_GetCenterPositionOfSuccessMarker, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000038, "Member 'WBP_Cooking_Minigame_Chopping_C_GetCenterPositionOfSuccessMarker::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Cooking_Minigame_Chopping_C_GetCenterPositionOfSuccessMarker, CallFunc_Add_DoubleDouble_A_ImplicitCast) == 0x000040, "Member 'WBP_Cooking_Minigame_Chopping_C_GetCenterPositionOfSuccessMarker::CallFunc_Add_DoubleDouble_A_ImplicitCast' has a wrong offset!");

// Function WBP_Cooking_Minigame_Chopping.WBP_Cooking_Minigame_Chopping_C.GetNearbyWinningTick
// 0x0090 (0x0090 - 0x0000)
struct WBP_Cooking_Minigame_Chopping_C_GetNearbyWinningTick final
{
public:
	class UWBP_Cooking_Minigame_Chopping_Marker_C* Marker;                                            // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	double                                        LocationOfInterest;                                // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        ClosestDistance;                                   // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWBP_Cooking_Minigame_Chopping_Marker_C* ClosestMarker;                                     // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetCenterPositionOfSuccessMarker_X_Position; // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWBP_Cooking_Minigame_Chopping_Marker_C* CallFunc_Array_Get_Item;                           // 0x0030(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5A31[0x3];                                     // 0x003D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UCanvasPanelSlot*                       CallFunc_SlotAsCanvasSlot_ReturnValue;             // 0x0040(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_GetPosition_ReturnValue;                  // 0x0048(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsVisible_ReturnValue;                    // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5A32[0x7];                                     // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_BreakVector2D_X;                          // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y;                          // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5A33[0x7];                                     // 0x0079(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Abs_ReturnValue;                          // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue;            // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5A34[0x3];                                     // 0x0089(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Cooking_Minigame_Chopping_C_GetNearbyWinningTick) == 0x000008, "Wrong alignment on WBP_Cooking_Minigame_Chopping_C_GetNearbyWinningTick");
static_assert(sizeof(WBP_Cooking_Minigame_Chopping_C_GetNearbyWinningTick) == 0x000090, "Wrong size on WBP_Cooking_Minigame_Chopping_C_GetNearbyWinningTick");
static_assert(offsetof(WBP_Cooking_Minigame_Chopping_C_GetNearbyWinningTick, Marker) == 0x000000, "Member 'WBP_Cooking_Minigame_Chopping_C_GetNearbyWinningTick::Marker' has a wrong offset!");
static_assert(offsetof(WBP_Cooking_Minigame_Chopping_C_GetNearbyWinningTick, LocationOfInterest) == 0x000008, "Member 'WBP_Cooking_Minigame_Chopping_C_GetNearbyWinningTick::LocationOfInterest' has a wrong offset!");
static_assert(offsetof(WBP_Cooking_Minigame_Chopping_C_GetNearbyWinningTick, ClosestDistance) == 0x000010, "Member 'WBP_Cooking_Minigame_Chopping_C_GetNearbyWinningTick::ClosestDistance' has a wrong offset!");
static_assert(offsetof(WBP_Cooking_Minigame_Chopping_C_GetNearbyWinningTick, ClosestMarker) == 0x000018, "Member 'WBP_Cooking_Minigame_Chopping_C_GetNearbyWinningTick::ClosestMarker' has a wrong offset!");
static_assert(offsetof(WBP_Cooking_Minigame_Chopping_C_GetNearbyWinningTick, CallFunc_GetCenterPositionOfSuccessMarker_X_Position) == 0x000020, "Member 'WBP_Cooking_Minigame_Chopping_C_GetNearbyWinningTick::CallFunc_GetCenterPositionOfSuccessMarker_X_Position' has a wrong offset!");
static_assert(offsetof(WBP_Cooking_Minigame_Chopping_C_GetNearbyWinningTick, Temp_int_Array_Index_Variable) == 0x000028, "Member 'WBP_Cooking_Minigame_Chopping_C_GetNearbyWinningTick::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Cooking_Minigame_Chopping_C_GetNearbyWinningTick, Temp_int_Loop_Counter_Variable) == 0x00002C, "Member 'WBP_Cooking_Minigame_Chopping_C_GetNearbyWinningTick::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Cooking_Minigame_Chopping_C_GetNearbyWinningTick, CallFunc_Array_Get_Item) == 0x000030, "Member 'WBP_Cooking_Minigame_Chopping_C_GetNearbyWinningTick::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_Cooking_Minigame_Chopping_C_GetNearbyWinningTick, CallFunc_Array_Length_ReturnValue) == 0x000038, "Member 'WBP_Cooking_Minigame_Chopping_C_GetNearbyWinningTick::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Cooking_Minigame_Chopping_C_GetNearbyWinningTick, CallFunc_Less_IntInt_ReturnValue) == 0x00003C, "Member 'WBP_Cooking_Minigame_Chopping_C_GetNearbyWinningTick::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Cooking_Minigame_Chopping_C_GetNearbyWinningTick, CallFunc_SlotAsCanvasSlot_ReturnValue) == 0x000040, "Member 'WBP_Cooking_Minigame_Chopping_C_GetNearbyWinningTick::CallFunc_SlotAsCanvasSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Cooking_Minigame_Chopping_C_GetNearbyWinningTick, CallFunc_GetPosition_ReturnValue) == 0x000048, "Member 'WBP_Cooking_Minigame_Chopping_C_GetNearbyWinningTick::CallFunc_GetPosition_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Cooking_Minigame_Chopping_C_GetNearbyWinningTick, CallFunc_IsVisible_ReturnValue) == 0x000058, "Member 'WBP_Cooking_Minigame_Chopping_C_GetNearbyWinningTick::CallFunc_IsVisible_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Cooking_Minigame_Chopping_C_GetNearbyWinningTick, CallFunc_BreakVector2D_X) == 0x000060, "Member 'WBP_Cooking_Minigame_Chopping_C_GetNearbyWinningTick::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(WBP_Cooking_Minigame_Chopping_C_GetNearbyWinningTick, CallFunc_BreakVector2D_Y) == 0x000068, "Member 'WBP_Cooking_Minigame_Chopping_C_GetNearbyWinningTick::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(WBP_Cooking_Minigame_Chopping_C_GetNearbyWinningTick, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000070, "Member 'WBP_Cooking_Minigame_Chopping_C_GetNearbyWinningTick::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Cooking_Minigame_Chopping_C_GetNearbyWinningTick, CallFunc_IsValid_ReturnValue) == 0x000078, "Member 'WBP_Cooking_Minigame_Chopping_C_GetNearbyWinningTick::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Cooking_Minigame_Chopping_C_GetNearbyWinningTick, CallFunc_Abs_ReturnValue) == 0x000080, "Member 'WBP_Cooking_Minigame_Chopping_C_GetNearbyWinningTick::CallFunc_Abs_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Cooking_Minigame_Chopping_C_GetNearbyWinningTick, CallFunc_Less_DoubleDouble_ReturnValue) == 0x000088, "Member 'WBP_Cooking_Minigame_Chopping_C_GetNearbyWinningTick::CallFunc_Less_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Cooking_Minigame_Chopping_C_GetNearbyWinningTick, CallFunc_Add_IntInt_ReturnValue) == 0x00008C, "Member 'WBP_Cooking_Minigame_Chopping_C_GetNearbyWinningTick::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function WBP_Cooking_Minigame_Chopping.WBP_Cooking_Minigame_Chopping_C.MinigameOnStateChanged
// 0x0018 (0x0018 - 0x0000)
struct WBP_Cooking_Minigame_Chopping_C_MinigameOnStateChanged final
{
public:
	class UMinigameComponentBase*                 Comp;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	EMinigameState                                PrevState;                                         // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EMinigameState                                NewState;                                          // 0x0009(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess_1;                    // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5A35[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationForward_ReturnValue;         // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Cooking_Minigame_Chopping_C_MinigameOnStateChanged) == 0x000008, "Wrong alignment on WBP_Cooking_Minigame_Chopping_C_MinigameOnStateChanged");
static_assert(sizeof(WBP_Cooking_Minigame_Chopping_C_MinigameOnStateChanged) == 0x000018, "Wrong size on WBP_Cooking_Minigame_Chopping_C_MinigameOnStateChanged");
static_assert(offsetof(WBP_Cooking_Minigame_Chopping_C_MinigameOnStateChanged, Comp) == 0x000000, "Member 'WBP_Cooking_Minigame_Chopping_C_MinigameOnStateChanged::Comp' has a wrong offset!");
static_assert(offsetof(WBP_Cooking_Minigame_Chopping_C_MinigameOnStateChanged, PrevState) == 0x000008, "Member 'WBP_Cooking_Minigame_Chopping_C_MinigameOnStateChanged::PrevState' has a wrong offset!");
static_assert(offsetof(WBP_Cooking_Minigame_Chopping_C_MinigameOnStateChanged, NewState) == 0x000009, "Member 'WBP_Cooking_Minigame_Chopping_C_MinigameOnStateChanged::NewState' has a wrong offset!");
static_assert(offsetof(WBP_Cooking_Minigame_Chopping_C_MinigameOnStateChanged, K2Node_SwitchEnum_CmpSuccess) == 0x00000A, "Member 'WBP_Cooking_Minigame_Chopping_C_MinigameOnStateChanged::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(WBP_Cooking_Minigame_Chopping_C_MinigameOnStateChanged, K2Node_SwitchEnum_CmpSuccess_1) == 0x00000B, "Member 'WBP_Cooking_Minigame_Chopping_C_MinigameOnStateChanged::K2Node_SwitchEnum_CmpSuccess_1' has a wrong offset!");
static_assert(offsetof(WBP_Cooking_Minigame_Chopping_C_MinigameOnStateChanged, CallFunc_PlayAnimationForward_ReturnValue) == 0x000010, "Member 'WBP_Cooking_Minigame_Chopping_C_MinigameOnStateChanged::CallFunc_PlayAnimationForward_ReturnValue' has a wrong offset!");

// Function WBP_Cooking_Minigame_Chopping.WBP_Cooking_Minigame_Chopping_C.MistimedInputReceived
// 0x0018 (0x0018 - 0x0000)
struct WBP_Cooking_Minigame_Chopping_C_MistimedInputReceived final
{
public:
	class UMinigameComponentMasterQTE*            Comp;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_AkEventGlobal_ReturnValue;                // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5A36[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationForward_ReturnValue;         // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Cooking_Minigame_Chopping_C_MistimedInputReceived) == 0x000008, "Wrong alignment on WBP_Cooking_Minigame_Chopping_C_MistimedInputReceived");
static_assert(sizeof(WBP_Cooking_Minigame_Chopping_C_MistimedInputReceived) == 0x000018, "Wrong size on WBP_Cooking_Minigame_Chopping_C_MistimedInputReceived");
static_assert(offsetof(WBP_Cooking_Minigame_Chopping_C_MistimedInputReceived, Comp) == 0x000000, "Member 'WBP_Cooking_Minigame_Chopping_C_MistimedInputReceived::Comp' has a wrong offset!");
static_assert(offsetof(WBP_Cooking_Minigame_Chopping_C_MistimedInputReceived, CallFunc_AkEventGlobal_ReturnValue) == 0x000008, "Member 'WBP_Cooking_Minigame_Chopping_C_MistimedInputReceived::CallFunc_AkEventGlobal_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Cooking_Minigame_Chopping_C_MistimedInputReceived, CallFunc_PlayAnimationForward_ReturnValue) == 0x000010, "Member 'WBP_Cooking_Minigame_Chopping_C_MistimedInputReceived::CallFunc_PlayAnimationForward_ReturnValue' has a wrong offset!");

// Function WBP_Cooking_Minigame_Chopping.WBP_Cooking_Minigame_Chopping_C.OnMinigameLinked
// 0x0090 (0x0090 - 0x0000)
struct WBP_Cooking_Minigame_Chopping_C_OnMinigameLinked final
{
public:
	class UCrafterComponent*                      Crafter;                                           // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5A37[0x4];                                     // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_Cooking_Minigame_Chopping_Marker_C* CallFunc_Array_Get_Item;                           // 0x0020(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5A38[0x3];                                     // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5A39[0x3];                                     // 0x0035(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMargin                                K2Node_MakeStruct_Margin;                          // 0x0038(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TArray<class UWidget*>                        CallFunc_GetAllChildren_ReturnValue;               // 0x0048(0x0010)(ReferenceParm, ContainsInstancedReference)
	class UWidget*                                CallFunc_Array_Get_Item_1;                         // 0x0058(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UWBP_Cooking_Minigame_Chopping_ProgressMarker_C* K2Node_DynamicCast_AsWBP_Cooking_Minigame_Chopping_Progress_Marker; // 0x0060(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5A3A[0x7];                                     // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UHorizontalBoxSlot*                     CallFunc_SlotAsHorizontalBoxSlot_ReturnValue;      // 0x0070(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x007C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5A3B[0x3];                                     // 0x007D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	const class UWBP_Cooking_Minigame_Chopping_Marker_C* Temp_object_Variable;                              // 0x0080(0x0008)(ConstParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_RemoveItem_ReturnValue;             // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Cooking_Minigame_Chopping_C_OnMinigameLinked) == 0x000008, "Wrong alignment on WBP_Cooking_Minigame_Chopping_C_OnMinigameLinked");
static_assert(sizeof(WBP_Cooking_Minigame_Chopping_C_OnMinigameLinked) == 0x000090, "Wrong size on WBP_Cooking_Minigame_Chopping_C_OnMinigameLinked");
static_assert(offsetof(WBP_Cooking_Minigame_Chopping_C_OnMinigameLinked, Crafter) == 0x000000, "Member 'WBP_Cooking_Minigame_Chopping_C_OnMinigameLinked::Crafter' has a wrong offset!");
static_assert(offsetof(WBP_Cooking_Minigame_Chopping_C_OnMinigameLinked, Temp_int_Array_Index_Variable) == 0x000008, "Member 'WBP_Cooking_Minigame_Chopping_C_OnMinigameLinked::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Cooking_Minigame_Chopping_C_OnMinigameLinked, Temp_int_Array_Index_Variable_1) == 0x00000C, "Member 'WBP_Cooking_Minigame_Chopping_C_OnMinigameLinked::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_Cooking_Minigame_Chopping_C_OnMinigameLinked, Temp_int_Loop_Counter_Variable) == 0x000010, "Member 'WBP_Cooking_Minigame_Chopping_C_OnMinigameLinked::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Cooking_Minigame_Chopping_C_OnMinigameLinked, CallFunc_Add_IntInt_ReturnValue) == 0x000014, "Member 'WBP_Cooking_Minigame_Chopping_C_OnMinigameLinked::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Cooking_Minigame_Chopping_C_OnMinigameLinked, Temp_int_Loop_Counter_Variable_1) == 0x000018, "Member 'WBP_Cooking_Minigame_Chopping_C_OnMinigameLinked::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_Cooking_Minigame_Chopping_C_OnMinigameLinked, CallFunc_Array_Get_Item) == 0x000020, "Member 'WBP_Cooking_Minigame_Chopping_C_OnMinigameLinked::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_Cooking_Minigame_Chopping_C_OnMinigameLinked, CallFunc_IsValid_ReturnValue) == 0x000028, "Member 'WBP_Cooking_Minigame_Chopping_C_OnMinigameLinked::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Cooking_Minigame_Chopping_C_OnMinigameLinked, CallFunc_Add_IntInt_ReturnValue_1) == 0x00002C, "Member 'WBP_Cooking_Minigame_Chopping_C_OnMinigameLinked::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_Cooking_Minigame_Chopping_C_OnMinigameLinked, CallFunc_Array_Length_ReturnValue) == 0x000030, "Member 'WBP_Cooking_Minigame_Chopping_C_OnMinigameLinked::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Cooking_Minigame_Chopping_C_OnMinigameLinked, CallFunc_Less_IntInt_ReturnValue) == 0x000034, "Member 'WBP_Cooking_Minigame_Chopping_C_OnMinigameLinked::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Cooking_Minigame_Chopping_C_OnMinigameLinked, K2Node_MakeStruct_Margin) == 0x000038, "Member 'WBP_Cooking_Minigame_Chopping_C_OnMinigameLinked::K2Node_MakeStruct_Margin' has a wrong offset!");
static_assert(offsetof(WBP_Cooking_Minigame_Chopping_C_OnMinigameLinked, CallFunc_GetAllChildren_ReturnValue) == 0x000048, "Member 'WBP_Cooking_Minigame_Chopping_C_OnMinigameLinked::CallFunc_GetAllChildren_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Cooking_Minigame_Chopping_C_OnMinigameLinked, CallFunc_Array_Get_Item_1) == 0x000058, "Member 'WBP_Cooking_Minigame_Chopping_C_OnMinigameLinked::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(WBP_Cooking_Minigame_Chopping_C_OnMinigameLinked, K2Node_DynamicCast_AsWBP_Cooking_Minigame_Chopping_Progress_Marker) == 0x000060, "Member 'WBP_Cooking_Minigame_Chopping_C_OnMinigameLinked::K2Node_DynamicCast_AsWBP_Cooking_Minigame_Chopping_Progress_Marker' has a wrong offset!");
static_assert(offsetof(WBP_Cooking_Minigame_Chopping_C_OnMinigameLinked, K2Node_DynamicCast_bSuccess) == 0x000068, "Member 'WBP_Cooking_Minigame_Chopping_C_OnMinigameLinked::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_Cooking_Minigame_Chopping_C_OnMinigameLinked, CallFunc_SlotAsHorizontalBoxSlot_ReturnValue) == 0x000070, "Member 'WBP_Cooking_Minigame_Chopping_C_OnMinigameLinked::CallFunc_SlotAsHorizontalBoxSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Cooking_Minigame_Chopping_C_OnMinigameLinked, CallFunc_Array_Length_ReturnValue_1) == 0x000078, "Member 'WBP_Cooking_Minigame_Chopping_C_OnMinigameLinked::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_Cooking_Minigame_Chopping_C_OnMinigameLinked, CallFunc_Less_IntInt_ReturnValue_1) == 0x00007C, "Member 'WBP_Cooking_Minigame_Chopping_C_OnMinigameLinked::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_Cooking_Minigame_Chopping_C_OnMinigameLinked, Temp_object_Variable) == 0x000080, "Member 'WBP_Cooking_Minigame_Chopping_C_OnMinigameLinked::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Cooking_Minigame_Chopping_C_OnMinigameLinked, CallFunc_Array_RemoveItem_ReturnValue) == 0x000088, "Member 'WBP_Cooking_Minigame_Chopping_C_OnMinigameLinked::CallFunc_Array_RemoveItem_ReturnValue' has a wrong offset!");

// Function WBP_Cooking_Minigame_Chopping.WBP_Cooking_Minigame_Chopping_C.OnMinigameLinkedAndUIFocus
// 0x0005 (0x0005 - 0x0000)
struct WBP_Cooking_Minigame_Chopping_C_OnMinigameLinkedAndUIFocus final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPaused_ReturnValue;                     // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPlaying_ReturnValue;                    // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Cooking_Minigame_Chopping_C_OnMinigameLinkedAndUIFocus) == 0x000001, "Wrong alignment on WBP_Cooking_Minigame_Chopping_C_OnMinigameLinkedAndUIFocus");
static_assert(sizeof(WBP_Cooking_Minigame_Chopping_C_OnMinigameLinkedAndUIFocus) == 0x000005, "Wrong size on WBP_Cooking_Minigame_Chopping_C_OnMinigameLinkedAndUIFocus");
static_assert(offsetof(WBP_Cooking_Minigame_Chopping_C_OnMinigameLinkedAndUIFocus, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'WBP_Cooking_Minigame_Chopping_C_OnMinigameLinkedAndUIFocus::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Cooking_Minigame_Chopping_C_OnMinigameLinkedAndUIFocus, CallFunc_IsPaused_ReturnValue) == 0x000001, "Member 'WBP_Cooking_Minigame_Chopping_C_OnMinigameLinkedAndUIFocus::CallFunc_IsPaused_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Cooking_Minigame_Chopping_C_OnMinigameLinkedAndUIFocus, CallFunc_Not_PreBool_ReturnValue) == 0x000002, "Member 'WBP_Cooking_Minigame_Chopping_C_OnMinigameLinkedAndUIFocus::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Cooking_Minigame_Chopping_C_OnMinigameLinkedAndUIFocus, CallFunc_IsPlaying_ReturnValue) == 0x000003, "Member 'WBP_Cooking_Minigame_Chopping_C_OnMinigameLinkedAndUIFocus::CallFunc_IsPlaying_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Cooking_Minigame_Chopping_C_OnMinigameLinkedAndUIFocus, CallFunc_BooleanAND_ReturnValue) == 0x000004, "Member 'WBP_Cooking_Minigame_Chopping_C_OnMinigameLinkedAndUIFocus::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function WBP_Cooking_Minigame_Chopping.WBP_Cooking_Minigame_Chopping_C.PrintState
// 0x00E0 (0x00E0 - 0x0000)
struct WBP_Cooking_Minigame_Chopping_C_PrintState final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue;             // 0x0008(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Conv_StringToName_ReturnValue;            // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWBP_Cooking_Minigame_Chopping_Marker_C* CallFunc_Array_Get_Item;                           // 0x0028(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsVisible_ReturnValue;                    // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5A3C[0x6];                                     // 0x0032(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_BoolToString_ReturnValue;            // 0x0038(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class UCanvasPanelSlot*                       CallFunc_SlotAsCanvasSlot_ReturnValue;             // 0x0048(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0050(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_GetPosition_ReturnValue;                  // 0x0060(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x0070(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_X;                          // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y;                          // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetDisplayName_ReturnValue;               // 0x0090(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_DoubleToString_ReturnValue;          // 0x00A0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_2;              // 0x00B0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_3;              // 0x00C0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_4;              // 0x00D0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Cooking_Minigame_Chopping_C_PrintState) == 0x000008, "Wrong alignment on WBP_Cooking_Minigame_Chopping_C_PrintState");
static_assert(sizeof(WBP_Cooking_Minigame_Chopping_C_PrintState) == 0x0000E0, "Wrong size on WBP_Cooking_Minigame_Chopping_C_PrintState");
static_assert(offsetof(WBP_Cooking_Minigame_Chopping_C_PrintState, Temp_int_Array_Index_Variable) == 0x000000, "Member 'WBP_Cooking_Minigame_Chopping_C_PrintState::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Cooking_Minigame_Chopping_C_PrintState, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'WBP_Cooking_Minigame_Chopping_C_PrintState::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Cooking_Minigame_Chopping_C_PrintState, CallFunc_Conv_IntToString_ReturnValue) == 0x000008, "Member 'WBP_Cooking_Minigame_Chopping_C_PrintState::CallFunc_Conv_IntToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Cooking_Minigame_Chopping_C_PrintState, CallFunc_Conv_StringToName_ReturnValue) == 0x000018, "Member 'WBP_Cooking_Minigame_Chopping_C_PrintState::CallFunc_Conv_StringToName_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Cooking_Minigame_Chopping_C_PrintState, CallFunc_Add_IntInt_ReturnValue) == 0x000020, "Member 'WBP_Cooking_Minigame_Chopping_C_PrintState::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Cooking_Minigame_Chopping_C_PrintState, CallFunc_Array_Length_ReturnValue) == 0x000024, "Member 'WBP_Cooking_Minigame_Chopping_C_PrintState::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Cooking_Minigame_Chopping_C_PrintState, CallFunc_Array_Get_Item) == 0x000028, "Member 'WBP_Cooking_Minigame_Chopping_C_PrintState::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_Cooking_Minigame_Chopping_C_PrintState, CallFunc_Less_IntInt_ReturnValue) == 0x000030, "Member 'WBP_Cooking_Minigame_Chopping_C_PrintState::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Cooking_Minigame_Chopping_C_PrintState, CallFunc_IsVisible_ReturnValue) == 0x000031, "Member 'WBP_Cooking_Minigame_Chopping_C_PrintState::CallFunc_IsVisible_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Cooking_Minigame_Chopping_C_PrintState, CallFunc_Conv_BoolToString_ReturnValue) == 0x000038, "Member 'WBP_Cooking_Minigame_Chopping_C_PrintState::CallFunc_Conv_BoolToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Cooking_Minigame_Chopping_C_PrintState, CallFunc_SlotAsCanvasSlot_ReturnValue) == 0x000048, "Member 'WBP_Cooking_Minigame_Chopping_C_PrintState::CallFunc_SlotAsCanvasSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Cooking_Minigame_Chopping_C_PrintState, CallFunc_Concat_StrStr_ReturnValue) == 0x000050, "Member 'WBP_Cooking_Minigame_Chopping_C_PrintState::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Cooking_Minigame_Chopping_C_PrintState, CallFunc_GetPosition_ReturnValue) == 0x000060, "Member 'WBP_Cooking_Minigame_Chopping_C_PrintState::CallFunc_GetPosition_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Cooking_Minigame_Chopping_C_PrintState, CallFunc_Concat_StrStr_ReturnValue_1) == 0x000070, "Member 'WBP_Cooking_Minigame_Chopping_C_PrintState::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_Cooking_Minigame_Chopping_C_PrintState, CallFunc_BreakVector2D_X) == 0x000080, "Member 'WBP_Cooking_Minigame_Chopping_C_PrintState::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(WBP_Cooking_Minigame_Chopping_C_PrintState, CallFunc_BreakVector2D_Y) == 0x000088, "Member 'WBP_Cooking_Minigame_Chopping_C_PrintState::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(WBP_Cooking_Minigame_Chopping_C_PrintState, CallFunc_GetDisplayName_ReturnValue) == 0x000090, "Member 'WBP_Cooking_Minigame_Chopping_C_PrintState::CallFunc_GetDisplayName_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Cooking_Minigame_Chopping_C_PrintState, CallFunc_Conv_DoubleToString_ReturnValue) == 0x0000A0, "Member 'WBP_Cooking_Minigame_Chopping_C_PrintState::CallFunc_Conv_DoubleToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Cooking_Minigame_Chopping_C_PrintState, CallFunc_Concat_StrStr_ReturnValue_2) == 0x0000B0, "Member 'WBP_Cooking_Minigame_Chopping_C_PrintState::CallFunc_Concat_StrStr_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_Cooking_Minigame_Chopping_C_PrintState, CallFunc_Concat_StrStr_ReturnValue_3) == 0x0000C0, "Member 'WBP_Cooking_Minigame_Chopping_C_PrintState::CallFunc_Concat_StrStr_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WBP_Cooking_Minigame_Chopping_C_PrintState, CallFunc_Concat_StrStr_ReturnValue_4) == 0x0000D0, "Member 'WBP_Cooking_Minigame_Chopping_C_PrintState::CallFunc_Concat_StrStr_ReturnValue_4' has a wrong offset!");

// Function WBP_Cooking_Minigame_Chopping.WBP_Cooking_Minigame_Chopping_C.SuccessfulInputReceived
// 0x0080 (0x0080 - 0x0000)
struct WBP_Cooking_Minigame_Chopping_C_SuccessfulInputReceived final
{
public:
	class UMinigameComponentMasterQTE*            Comp;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	EUMGSequencePlayMode                          Temp_byte_Variable;                                // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUMGSequencePlayMode                          Temp_byte_Variable_1;                              // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5A3D[0x2];                                     // 0x000A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_PostGlobalEvent_ReturnValue;              // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5A3E[0x7];                                     // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_MapRangeClamped_ReturnValue;              // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5A3F[0x7];                                     // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_MapRangeClamped_ReturnValue_1;            // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUMGSequencePlayMode                          K2Node_Select_Default;                             // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5A40[0x7];                                     // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationForward_ReturnValue;         // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UWBP_Cooking_Minigame_Chopping_Marker_C* CallFunc_GetNearbyWinningTick_Marker;              // 0x0048(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationForward_ReturnValue_1;       // 0x0050(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5A41[0x7];                                     // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_MapRangeClamped_Value_ImplicitCast;       // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_PlayAnimation_PlaybackSpeed_ImplicitCast; // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5A42[0x4];                                     // 0x006C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_MapRangeClamped_Value_ImplicitCast_1;     // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_PlayAnimationForward_PlaybackSpeed_ImplicitCast; // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Cooking_Minigame_Chopping_C_SuccessfulInputReceived) == 0x000008, "Wrong alignment on WBP_Cooking_Minigame_Chopping_C_SuccessfulInputReceived");
static_assert(sizeof(WBP_Cooking_Minigame_Chopping_C_SuccessfulInputReceived) == 0x000080, "Wrong size on WBP_Cooking_Minigame_Chopping_C_SuccessfulInputReceived");
static_assert(offsetof(WBP_Cooking_Minigame_Chopping_C_SuccessfulInputReceived, Comp) == 0x000000, "Member 'WBP_Cooking_Minigame_Chopping_C_SuccessfulInputReceived::Comp' has a wrong offset!");
static_assert(offsetof(WBP_Cooking_Minigame_Chopping_C_SuccessfulInputReceived, Temp_byte_Variable) == 0x000008, "Member 'WBP_Cooking_Minigame_Chopping_C_SuccessfulInputReceived::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Cooking_Minigame_Chopping_C_SuccessfulInputReceived, Temp_byte_Variable_1) == 0x000009, "Member 'WBP_Cooking_Minigame_Chopping_C_SuccessfulInputReceived::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_Cooking_Minigame_Chopping_C_SuccessfulInputReceived, CallFunc_PostGlobalEvent_ReturnValue) == 0x00000C, "Member 'WBP_Cooking_Minigame_Chopping_C_SuccessfulInputReceived::CallFunc_PostGlobalEvent_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Cooking_Minigame_Chopping_C_SuccessfulInputReceived, CallFunc_Not_PreBool_ReturnValue) == 0x000010, "Member 'WBP_Cooking_Minigame_Chopping_C_SuccessfulInputReceived::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Cooking_Minigame_Chopping_C_SuccessfulInputReceived, CallFunc_MapRangeClamped_ReturnValue) == 0x000018, "Member 'WBP_Cooking_Minigame_Chopping_C_SuccessfulInputReceived::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Cooking_Minigame_Chopping_C_SuccessfulInputReceived, Temp_bool_Variable) == 0x000020, "Member 'WBP_Cooking_Minigame_Chopping_C_SuccessfulInputReceived::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Cooking_Minigame_Chopping_C_SuccessfulInputReceived, CallFunc_MapRangeClamped_ReturnValue_1) == 0x000028, "Member 'WBP_Cooking_Minigame_Chopping_C_SuccessfulInputReceived::CallFunc_MapRangeClamped_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_Cooking_Minigame_Chopping_C_SuccessfulInputReceived, K2Node_Select_Default) == 0x000030, "Member 'WBP_Cooking_Minigame_Chopping_C_SuccessfulInputReceived::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_Cooking_Minigame_Chopping_C_SuccessfulInputReceived, CallFunc_PlayAnimationForward_ReturnValue) == 0x000038, "Member 'WBP_Cooking_Minigame_Chopping_C_SuccessfulInputReceived::CallFunc_PlayAnimationForward_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Cooking_Minigame_Chopping_C_SuccessfulInputReceived, CallFunc_PlayAnimation_ReturnValue) == 0x000040, "Member 'WBP_Cooking_Minigame_Chopping_C_SuccessfulInputReceived::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Cooking_Minigame_Chopping_C_SuccessfulInputReceived, CallFunc_GetNearbyWinningTick_Marker) == 0x000048, "Member 'WBP_Cooking_Minigame_Chopping_C_SuccessfulInputReceived::CallFunc_GetNearbyWinningTick_Marker' has a wrong offset!");
static_assert(offsetof(WBP_Cooking_Minigame_Chopping_C_SuccessfulInputReceived, CallFunc_PlayAnimationForward_ReturnValue_1) == 0x000050, "Member 'WBP_Cooking_Minigame_Chopping_C_SuccessfulInputReceived::CallFunc_PlayAnimationForward_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_Cooking_Minigame_Chopping_C_SuccessfulInputReceived, CallFunc_IsValid_ReturnValue) == 0x000058, "Member 'WBP_Cooking_Minigame_Chopping_C_SuccessfulInputReceived::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Cooking_Minigame_Chopping_C_SuccessfulInputReceived, CallFunc_MapRangeClamped_Value_ImplicitCast) == 0x000060, "Member 'WBP_Cooking_Minigame_Chopping_C_SuccessfulInputReceived::CallFunc_MapRangeClamped_Value_ImplicitCast' has a wrong offset!");
static_assert(offsetof(WBP_Cooking_Minigame_Chopping_C_SuccessfulInputReceived, CallFunc_PlayAnimation_PlaybackSpeed_ImplicitCast) == 0x000068, "Member 'WBP_Cooking_Minigame_Chopping_C_SuccessfulInputReceived::CallFunc_PlayAnimation_PlaybackSpeed_ImplicitCast' has a wrong offset!");
static_assert(offsetof(WBP_Cooking_Minigame_Chopping_C_SuccessfulInputReceived, CallFunc_MapRangeClamped_Value_ImplicitCast_1) == 0x000070, "Member 'WBP_Cooking_Minigame_Chopping_C_SuccessfulInputReceived::CallFunc_MapRangeClamped_Value_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(WBP_Cooking_Minigame_Chopping_C_SuccessfulInputReceived, CallFunc_PlayAnimationForward_PlaybackSpeed_ImplicitCast) == 0x000078, "Member 'WBP_Cooking_Minigame_Chopping_C_SuccessfulInputReceived::CallFunc_PlayAnimationForward_PlaybackSpeed_ImplicitCast' has a wrong offset!");

// Function WBP_Cooking_Minigame_Chopping.WBP_Cooking_Minigame_Chopping_C.Tick
// 0x003C (0x003C - 0x0000)
struct WBP_Cooking_Minigame_Chopping_C_Tick final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	float                                         InDeltaTime;                                       // 0x0038(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Cooking_Minigame_Chopping_C_Tick) == 0x000004, "Wrong alignment on WBP_Cooking_Minigame_Chopping_C_Tick");
static_assert(sizeof(WBP_Cooking_Minigame_Chopping_C_Tick) == 0x00003C, "Wrong size on WBP_Cooking_Minigame_Chopping_C_Tick");
static_assert(offsetof(WBP_Cooking_Minigame_Chopping_C_Tick, MyGeometry) == 0x000000, "Member 'WBP_Cooking_Minigame_Chopping_C_Tick::MyGeometry' has a wrong offset!");
static_assert(offsetof(WBP_Cooking_Minigame_Chopping_C_Tick, InDeltaTime) == 0x000038, "Member 'WBP_Cooking_Minigame_Chopping_C_Tick::InDeltaTime' has a wrong offset!");

// Function WBP_Cooking_Minigame_Chopping.WBP_Cooking_Minigame_Chopping_C.UpdateMarkers
// 0x0038 (0x0038 - 0x0000)
struct WBP_Cooking_Minigame_Chopping_C_UpdateMarkers final
{
public:
	double                                        MinigameTimeElapsedSec;                            // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetTimeElapsed_ReturnValue;               // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWBP_Cooking_Minigame_Chopping_Marker_C* CallFunc_Array_Get_Item;                           // 0x0018(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsVisible_ReturnValue;                    // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5A43[0x3];                                     // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5A44[0x7];                                     // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_VariableSet_minigameTimeElapsedSec_ImplicitCast; // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Cooking_Minigame_Chopping_C_UpdateMarkers) == 0x000008, "Wrong alignment on WBP_Cooking_Minigame_Chopping_C_UpdateMarkers");
static_assert(sizeof(WBP_Cooking_Minigame_Chopping_C_UpdateMarkers) == 0x000038, "Wrong size on WBP_Cooking_Minigame_Chopping_C_UpdateMarkers");
static_assert(offsetof(WBP_Cooking_Minigame_Chopping_C_UpdateMarkers, MinigameTimeElapsedSec) == 0x000000, "Member 'WBP_Cooking_Minigame_Chopping_C_UpdateMarkers::MinigameTimeElapsedSec' has a wrong offset!");
static_assert(offsetof(WBP_Cooking_Minigame_Chopping_C_UpdateMarkers, Temp_int_Array_Index_Variable) == 0x000008, "Member 'WBP_Cooking_Minigame_Chopping_C_UpdateMarkers::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Cooking_Minigame_Chopping_C_UpdateMarkers, Temp_int_Loop_Counter_Variable) == 0x00000C, "Member 'WBP_Cooking_Minigame_Chopping_C_UpdateMarkers::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Cooking_Minigame_Chopping_C_UpdateMarkers, CallFunc_Add_IntInt_ReturnValue) == 0x000010, "Member 'WBP_Cooking_Minigame_Chopping_C_UpdateMarkers::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Cooking_Minigame_Chopping_C_UpdateMarkers, CallFunc_GetTimeElapsed_ReturnValue) == 0x000014, "Member 'WBP_Cooking_Minigame_Chopping_C_UpdateMarkers::CallFunc_GetTimeElapsed_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Cooking_Minigame_Chopping_C_UpdateMarkers, CallFunc_Array_Get_Item) == 0x000018, "Member 'WBP_Cooking_Minigame_Chopping_C_UpdateMarkers::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_Cooking_Minigame_Chopping_C_UpdateMarkers, CallFunc_IsVisible_ReturnValue) == 0x000020, "Member 'WBP_Cooking_Minigame_Chopping_C_UpdateMarkers::CallFunc_IsVisible_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Cooking_Minigame_Chopping_C_UpdateMarkers, CallFunc_Array_Length_ReturnValue) == 0x000024, "Member 'WBP_Cooking_Minigame_Chopping_C_UpdateMarkers::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Cooking_Minigame_Chopping_C_UpdateMarkers, CallFunc_Less_IntInt_ReturnValue) == 0x000028, "Member 'WBP_Cooking_Minigame_Chopping_C_UpdateMarkers::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Cooking_Minigame_Chopping_C_UpdateMarkers, K2Node_VariableSet_minigameTimeElapsedSec_ImplicitCast) == 0x000030, "Member 'WBP_Cooking_Minigame_Chopping_C_UpdateMarkers::K2Node_VariableSet_minigameTimeElapsedSec_ImplicitCast' has a wrong offset!");

// Function WBP_Cooking_Minigame_Chopping.WBP_Cooking_Minigame_Chopping_C.UpdateSuccessCount
// 0x00A8 (0x00A8 - 0x0000)
struct WBP_Cooking_Minigame_Chopping_C_UpdateSuccessCount final
{
public:
	bool                                          UpdateRightNow;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CachedFinished;                                    // 0x0001(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5A45[0x2];                                     // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CachedSuccess;                                     // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Alpha;                                             // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5A46[0x2];                                     // 0x0012(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWidget*                                CallFunc_GetChildAt_ReturnValue;                   // 0x0018(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UWBP_Cooking_Minigame_Chopping_ProgressMarker_C* K2Node_DynamicCast_AsWBP_Cooking_Minigame_Chopping_Progress_Marker; // 0x0020(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5A47[0x3];                                     // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetChildrenCount_ReturnValue;             // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0032(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5A48[0x5];                                     // 0x0033(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UTextBlock*                             K2Node_Select_Default;                             // 0x0038(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5A49[0x7];                                     // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_IntToString_ReturnValue;             // 0x0048(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0058(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5A4A[0x7];                                     // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_IntToString_ReturnValue_1;           // 0x0070(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x0080(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0090(0x0018)()
};
static_assert(alignof(WBP_Cooking_Minigame_Chopping_C_UpdateSuccessCount) == 0x000008, "Wrong alignment on WBP_Cooking_Minigame_Chopping_C_UpdateSuccessCount");
static_assert(sizeof(WBP_Cooking_Minigame_Chopping_C_UpdateSuccessCount) == 0x0000A8, "Wrong size on WBP_Cooking_Minigame_Chopping_C_UpdateSuccessCount");
static_assert(offsetof(WBP_Cooking_Minigame_Chopping_C_UpdateSuccessCount, UpdateRightNow) == 0x000000, "Member 'WBP_Cooking_Minigame_Chopping_C_UpdateSuccessCount::UpdateRightNow' has a wrong offset!");
static_assert(offsetof(WBP_Cooking_Minigame_Chopping_C_UpdateSuccessCount, CachedFinished) == 0x000001, "Member 'WBP_Cooking_Minigame_Chopping_C_UpdateSuccessCount::CachedFinished' has a wrong offset!");
static_assert(offsetof(WBP_Cooking_Minigame_Chopping_C_UpdateSuccessCount, CachedSuccess) == 0x000004, "Member 'WBP_Cooking_Minigame_Chopping_C_UpdateSuccessCount::CachedSuccess' has a wrong offset!");
static_assert(offsetof(WBP_Cooking_Minigame_Chopping_C_UpdateSuccessCount, Alpha) == 0x000008, "Member 'WBP_Cooking_Minigame_Chopping_C_UpdateSuccessCount::Alpha' has a wrong offset!");
static_assert(offsetof(WBP_Cooking_Minigame_Chopping_C_UpdateSuccessCount, CallFunc_Not_PreBool_ReturnValue) == 0x000010, "Member 'WBP_Cooking_Minigame_Chopping_C_UpdateSuccessCount::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Cooking_Minigame_Chopping_C_UpdateSuccessCount, CallFunc_BooleanAND_ReturnValue) == 0x000011, "Member 'WBP_Cooking_Minigame_Chopping_C_UpdateSuccessCount::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Cooking_Minigame_Chopping_C_UpdateSuccessCount, CallFunc_Subtract_IntInt_ReturnValue) == 0x000014, "Member 'WBP_Cooking_Minigame_Chopping_C_UpdateSuccessCount::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Cooking_Minigame_Chopping_C_UpdateSuccessCount, CallFunc_GetChildAt_ReturnValue) == 0x000018, "Member 'WBP_Cooking_Minigame_Chopping_C_UpdateSuccessCount::CallFunc_GetChildAt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Cooking_Minigame_Chopping_C_UpdateSuccessCount, K2Node_DynamicCast_AsWBP_Cooking_Minigame_Chopping_Progress_Marker) == 0x000020, "Member 'WBP_Cooking_Minigame_Chopping_C_UpdateSuccessCount::K2Node_DynamicCast_AsWBP_Cooking_Minigame_Chopping_Progress_Marker' has a wrong offset!");
static_assert(offsetof(WBP_Cooking_Minigame_Chopping_C_UpdateSuccessCount, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'WBP_Cooking_Minigame_Chopping_C_UpdateSuccessCount::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_Cooking_Minigame_Chopping_C_UpdateSuccessCount, CallFunc_GetChildrenCount_ReturnValue) == 0x00002C, "Member 'WBP_Cooking_Minigame_Chopping_C_UpdateSuccessCount::CallFunc_GetChildrenCount_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Cooking_Minigame_Chopping_C_UpdateSuccessCount, Temp_bool_Variable) == 0x000030, "Member 'WBP_Cooking_Minigame_Chopping_C_UpdateSuccessCount::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Cooking_Minigame_Chopping_C_UpdateSuccessCount, CallFunc_Greater_IntInt_ReturnValue) == 0x000031, "Member 'WBP_Cooking_Minigame_Chopping_C_UpdateSuccessCount::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Cooking_Minigame_Chopping_C_UpdateSuccessCount, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000032, "Member 'WBP_Cooking_Minigame_Chopping_C_UpdateSuccessCount::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Cooking_Minigame_Chopping_C_UpdateSuccessCount, K2Node_Select_Default) == 0x000038, "Member 'WBP_Cooking_Minigame_Chopping_C_UpdateSuccessCount::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_Cooking_Minigame_Chopping_C_UpdateSuccessCount, CallFunc_BooleanAND_ReturnValue_1) == 0x000040, "Member 'WBP_Cooking_Minigame_Chopping_C_UpdateSuccessCount::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_Cooking_Minigame_Chopping_C_UpdateSuccessCount, CallFunc_Conv_IntToString_ReturnValue) == 0x000048, "Member 'WBP_Cooking_Minigame_Chopping_C_UpdateSuccessCount::CallFunc_Conv_IntToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Cooking_Minigame_Chopping_C_UpdateSuccessCount, CallFunc_Concat_StrStr_ReturnValue) == 0x000058, "Member 'WBP_Cooking_Minigame_Chopping_C_UpdateSuccessCount::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Cooking_Minigame_Chopping_C_UpdateSuccessCount, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000068, "Member 'WBP_Cooking_Minigame_Chopping_C_UpdateSuccessCount::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Cooking_Minigame_Chopping_C_UpdateSuccessCount, CallFunc_Conv_IntToString_ReturnValue_1) == 0x000070, "Member 'WBP_Cooking_Minigame_Chopping_C_UpdateSuccessCount::CallFunc_Conv_IntToString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_Cooking_Minigame_Chopping_C_UpdateSuccessCount, CallFunc_Concat_StrStr_ReturnValue_1) == 0x000080, "Member 'WBP_Cooking_Minigame_Chopping_C_UpdateSuccessCount::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_Cooking_Minigame_Chopping_C_UpdateSuccessCount, CallFunc_Conv_StringToText_ReturnValue) == 0x000090, "Member 'WBP_Cooking_Minigame_Chopping_C_UpdateSuccessCount::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");

}

