#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_RadioSlider_Template_01_CM

#include "Basic.hpp"

#include "UMG_structs.hpp"
#include "BP_RadioSliderPregisteredElement_structs.hpp"


namespace SDK::Params
{

// Function WBP_RadioSlider_Template_01_CM.WBP_RadioSlider_Template_01_CM_C.BindIA
// 0x0088 (0x0088 - 0x0000)
struct WBP_RadioSlider_Template_01_CM_C_BindIA final
{
public:
	int32                                         Idx;                                               // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5119[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UInputAction*                           IA;                                                // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_511A[0x7];                                     // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<int32, class UUserWidget*>               CallFunc_GetElementWidgetsTable_ReturnValue;       // 0x0018(0x0050)(ConstParm, ContainsInstancedReference)
	class UUserWidget*                            CallFunc_Map_Find_Value;                           // 0x0068(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_511B[0x7];                                     // 0x0071(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_RadioSlider_ButtonWithIconText_CM_C* K2Node_DynamicCast_AsWBP_Radio_Slider_Button_with_Icon_Text_CM; // 0x0078(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_RadioSlider_Template_01_CM_C_BindIA) == 0x000008, "Wrong alignment on WBP_RadioSlider_Template_01_CM_C_BindIA");
static_assert(sizeof(WBP_RadioSlider_Template_01_CM_C_BindIA) == 0x000088, "Wrong size on WBP_RadioSlider_Template_01_CM_C_BindIA");
static_assert(offsetof(WBP_RadioSlider_Template_01_CM_C_BindIA, Idx) == 0x000000, "Member 'WBP_RadioSlider_Template_01_CM_C_BindIA::Idx' has a wrong offset!");
static_assert(offsetof(WBP_RadioSlider_Template_01_CM_C_BindIA, IA) == 0x000008, "Member 'WBP_RadioSlider_Template_01_CM_C_BindIA::IA' has a wrong offset!");
static_assert(offsetof(WBP_RadioSlider_Template_01_CM_C_BindIA, CallFunc_Array_IsValidIndex_ReturnValue) == 0x000010, "Member 'WBP_RadioSlider_Template_01_CM_C_BindIA::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_RadioSlider_Template_01_CM_C_BindIA, CallFunc_GetElementWidgetsTable_ReturnValue) == 0x000018, "Member 'WBP_RadioSlider_Template_01_CM_C_BindIA::CallFunc_GetElementWidgetsTable_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_RadioSlider_Template_01_CM_C_BindIA, CallFunc_Map_Find_Value) == 0x000068, "Member 'WBP_RadioSlider_Template_01_CM_C_BindIA::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(WBP_RadioSlider_Template_01_CM_C_BindIA, CallFunc_Map_Find_ReturnValue) == 0x000070, "Member 'WBP_RadioSlider_Template_01_CM_C_BindIA::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_RadioSlider_Template_01_CM_C_BindIA, K2Node_DynamicCast_AsWBP_Radio_Slider_Button_with_Icon_Text_CM) == 0x000078, "Member 'WBP_RadioSlider_Template_01_CM_C_BindIA::K2Node_DynamicCast_AsWBP_Radio_Slider_Button_with_Icon_Text_CM' has a wrong offset!");
static_assert(offsetof(WBP_RadioSlider_Template_01_CM_C_BindIA, K2Node_DynamicCast_bSuccess) == 0x000080, "Member 'WBP_RadioSlider_Template_01_CM_C_BindIA::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function WBP_RadioSlider_Template_01_CM.WBP_RadioSlider_Template_01_CM_C.BndEvt__WBP_RadioSlider_01_VALUI_RadioSlider_22_K2Node_ComponentBoundEvent_0_OnElementWidgetCreated__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct WBP_RadioSlider_Template_01_CM_C_BndEvt__WBP_RadioSlider_01_VALUI_RadioSlider_22_K2Node_ComponentBoundEvent_0_OnElementWidgetCreated__DelegateSignature final
{
public:
	class UUserWidget*                            ElementWidget;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         ElementIndex;                                      // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_RadioSlider_Template_01_CM_C_BndEvt__WBP_RadioSlider_01_VALUI_RadioSlider_22_K2Node_ComponentBoundEvent_0_OnElementWidgetCreated__DelegateSignature) == 0x000008, "Wrong alignment on WBP_RadioSlider_Template_01_CM_C_BndEvt__WBP_RadioSlider_01_VALUI_RadioSlider_22_K2Node_ComponentBoundEvent_0_OnElementWidgetCreated__DelegateSignature");
static_assert(sizeof(WBP_RadioSlider_Template_01_CM_C_BndEvt__WBP_RadioSlider_01_VALUI_RadioSlider_22_K2Node_ComponentBoundEvent_0_OnElementWidgetCreated__DelegateSignature) == 0x000010, "Wrong size on WBP_RadioSlider_Template_01_CM_C_BndEvt__WBP_RadioSlider_01_VALUI_RadioSlider_22_K2Node_ComponentBoundEvent_0_OnElementWidgetCreated__DelegateSignature");
static_assert(offsetof(WBP_RadioSlider_Template_01_CM_C_BndEvt__WBP_RadioSlider_01_VALUI_RadioSlider_22_K2Node_ComponentBoundEvent_0_OnElementWidgetCreated__DelegateSignature, ElementWidget) == 0x000000, "Member 'WBP_RadioSlider_Template_01_CM_C_BndEvt__WBP_RadioSlider_01_VALUI_RadioSlider_22_K2Node_ComponentBoundEvent_0_OnElementWidgetCreated__DelegateSignature::ElementWidget' has a wrong offset!");
static_assert(offsetof(WBP_RadioSlider_Template_01_CM_C_BndEvt__WBP_RadioSlider_01_VALUI_RadioSlider_22_K2Node_ComponentBoundEvent_0_OnElementWidgetCreated__DelegateSignature, ElementIndex) == 0x000008, "Member 'WBP_RadioSlider_Template_01_CM_C_BndEvt__WBP_RadioSlider_01_VALUI_RadioSlider_22_K2Node_ComponentBoundEvent_0_OnElementWidgetCreated__DelegateSignature::ElementIndex' has a wrong offset!");

// Function WBP_RadioSlider_Template_01_CM.WBP_RadioSlider_Template_01_CM_C.BndEvt__WBP_RadioSlider_Template_01_CM_Button_LeftArrow_K2Node_ComponentBoundEvent_6_CommonButtonBaseClicked__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct WBP_RadioSlider_Template_01_CM_C_BndEvt__WBP_RadioSlider_Template_01_CM_Button_LeftArrow_K2Node_ComponentBoundEvent_6_CommonButtonBaseClicked__DelegateSignature final
{
public:
	class UCommonButtonBase*                      Button;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_RadioSlider_Template_01_CM_C_BndEvt__WBP_RadioSlider_Template_01_CM_Button_LeftArrow_K2Node_ComponentBoundEvent_6_CommonButtonBaseClicked__DelegateSignature) == 0x000008, "Wrong alignment on WBP_RadioSlider_Template_01_CM_C_BndEvt__WBP_RadioSlider_Template_01_CM_Button_LeftArrow_K2Node_ComponentBoundEvent_6_CommonButtonBaseClicked__DelegateSignature");
static_assert(sizeof(WBP_RadioSlider_Template_01_CM_C_BndEvt__WBP_RadioSlider_Template_01_CM_Button_LeftArrow_K2Node_ComponentBoundEvent_6_CommonButtonBaseClicked__DelegateSignature) == 0x000008, "Wrong size on WBP_RadioSlider_Template_01_CM_C_BndEvt__WBP_RadioSlider_Template_01_CM_Button_LeftArrow_K2Node_ComponentBoundEvent_6_CommonButtonBaseClicked__DelegateSignature");
static_assert(offsetof(WBP_RadioSlider_Template_01_CM_C_BndEvt__WBP_RadioSlider_Template_01_CM_Button_LeftArrow_K2Node_ComponentBoundEvent_6_CommonButtonBaseClicked__DelegateSignature, Button) == 0x000000, "Member 'WBP_RadioSlider_Template_01_CM_C_BndEvt__WBP_RadioSlider_Template_01_CM_Button_LeftArrow_K2Node_ComponentBoundEvent_6_CommonButtonBaseClicked__DelegateSignature::Button' has a wrong offset!");

// Function WBP_RadioSlider_Template_01_CM.WBP_RadioSlider_Template_01_CM_C.BndEvt__WBP_RadioSlider_Template_01_CM_Button_RightArrow_K2Node_ComponentBoundEvent_7_CommonButtonBaseClicked__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct WBP_RadioSlider_Template_01_CM_C_BndEvt__WBP_RadioSlider_Template_01_CM_Button_RightArrow_K2Node_ComponentBoundEvent_7_CommonButtonBaseClicked__DelegateSignature final
{
public:
	class UCommonButtonBase*                      Button;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_RadioSlider_Template_01_CM_C_BndEvt__WBP_RadioSlider_Template_01_CM_Button_RightArrow_K2Node_ComponentBoundEvent_7_CommonButtonBaseClicked__DelegateSignature) == 0x000008, "Wrong alignment on WBP_RadioSlider_Template_01_CM_C_BndEvt__WBP_RadioSlider_Template_01_CM_Button_RightArrow_K2Node_ComponentBoundEvent_7_CommonButtonBaseClicked__DelegateSignature");
static_assert(sizeof(WBP_RadioSlider_Template_01_CM_C_BndEvt__WBP_RadioSlider_Template_01_CM_Button_RightArrow_K2Node_ComponentBoundEvent_7_CommonButtonBaseClicked__DelegateSignature) == 0x000008, "Wrong size on WBP_RadioSlider_Template_01_CM_C_BndEvt__WBP_RadioSlider_Template_01_CM_Button_RightArrow_K2Node_ComponentBoundEvent_7_CommonButtonBaseClicked__DelegateSignature");
static_assert(offsetof(WBP_RadioSlider_Template_01_CM_C_BndEvt__WBP_RadioSlider_Template_01_CM_Button_RightArrow_K2Node_ComponentBoundEvent_7_CommonButtonBaseClicked__DelegateSignature, Button) == 0x000000, "Member 'WBP_RadioSlider_Template_01_CM_C_BndEvt__WBP_RadioSlider_Template_01_CM_Button_RightArrow_K2Node_ComponentBoundEvent_7_CommonButtonBaseClicked__DelegateSignature::Button' has a wrong offset!");

// Function WBP_RadioSlider_Template_01_CM.WBP_RadioSlider_Template_01_CM_C.BndEvt__WBP_RadioSlider_Template_01_RadioSlider_K2Node_ComponentBoundEvent_2_OnSliderChanged__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct WBP_RadioSlider_Template_01_CM_C_BndEvt__WBP_RadioSlider_Template_01_RadioSlider_K2Node_ComponentBoundEvent_2_OnSliderChanged__DelegateSignature final
{
public:
	class UUserWidget*                            PreviousElementWidget;                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         PreviousElementIndex;                              // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_511C[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUserWidget*                            NewElementWidget;                                  // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         NewElementIndex;                                   // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_RadioSlider_Template_01_CM_C_BndEvt__WBP_RadioSlider_Template_01_RadioSlider_K2Node_ComponentBoundEvent_2_OnSliderChanged__DelegateSignature) == 0x000008, "Wrong alignment on WBP_RadioSlider_Template_01_CM_C_BndEvt__WBP_RadioSlider_Template_01_RadioSlider_K2Node_ComponentBoundEvent_2_OnSliderChanged__DelegateSignature");
static_assert(sizeof(WBP_RadioSlider_Template_01_CM_C_BndEvt__WBP_RadioSlider_Template_01_RadioSlider_K2Node_ComponentBoundEvent_2_OnSliderChanged__DelegateSignature) == 0x000020, "Wrong size on WBP_RadioSlider_Template_01_CM_C_BndEvt__WBP_RadioSlider_Template_01_RadioSlider_K2Node_ComponentBoundEvent_2_OnSliderChanged__DelegateSignature");
static_assert(offsetof(WBP_RadioSlider_Template_01_CM_C_BndEvt__WBP_RadioSlider_Template_01_RadioSlider_K2Node_ComponentBoundEvent_2_OnSliderChanged__DelegateSignature, PreviousElementWidget) == 0x000000, "Member 'WBP_RadioSlider_Template_01_CM_C_BndEvt__WBP_RadioSlider_Template_01_RadioSlider_K2Node_ComponentBoundEvent_2_OnSliderChanged__DelegateSignature::PreviousElementWidget' has a wrong offset!");
static_assert(offsetof(WBP_RadioSlider_Template_01_CM_C_BndEvt__WBP_RadioSlider_Template_01_RadioSlider_K2Node_ComponentBoundEvent_2_OnSliderChanged__DelegateSignature, PreviousElementIndex) == 0x000008, "Member 'WBP_RadioSlider_Template_01_CM_C_BndEvt__WBP_RadioSlider_Template_01_RadioSlider_K2Node_ComponentBoundEvent_2_OnSliderChanged__DelegateSignature::PreviousElementIndex' has a wrong offset!");
static_assert(offsetof(WBP_RadioSlider_Template_01_CM_C_BndEvt__WBP_RadioSlider_Template_01_RadioSlider_K2Node_ComponentBoundEvent_2_OnSliderChanged__DelegateSignature, NewElementWidget) == 0x000010, "Member 'WBP_RadioSlider_Template_01_CM_C_BndEvt__WBP_RadioSlider_Template_01_RadioSlider_K2Node_ComponentBoundEvent_2_OnSliderChanged__DelegateSignature::NewElementWidget' has a wrong offset!");
static_assert(offsetof(WBP_RadioSlider_Template_01_CM_C_BndEvt__WBP_RadioSlider_Template_01_RadioSlider_K2Node_ComponentBoundEvent_2_OnSliderChanged__DelegateSignature, NewElementIndex) == 0x000018, "Member 'WBP_RadioSlider_Template_01_CM_C_BndEvt__WBP_RadioSlider_Template_01_RadioSlider_K2Node_ComponentBoundEvent_2_OnSliderChanged__DelegateSignature::NewElementIndex' has a wrong offset!");

// Function WBP_RadioSlider_Template_01_CM.WBP_RadioSlider_Template_01_CM_C.BndEvt__WBP_RadioSlider_Template_01_RadioSlider_K2Node_ComponentBoundEvent_4_OnPageChanged__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct WBP_RadioSlider_Template_01_CM_C_BndEvt__WBP_RadioSlider_Template_01_RadioSlider_K2Node_ComponentBoundEvent_4_OnPageChanged__DelegateSignature final
{
public:
	int32                                         PageIndex;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         TotalNumPages;                                     // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_RadioSlider_Template_01_CM_C_BndEvt__WBP_RadioSlider_Template_01_RadioSlider_K2Node_ComponentBoundEvent_4_OnPageChanged__DelegateSignature) == 0x000004, "Wrong alignment on WBP_RadioSlider_Template_01_CM_C_BndEvt__WBP_RadioSlider_Template_01_RadioSlider_K2Node_ComponentBoundEvent_4_OnPageChanged__DelegateSignature");
static_assert(sizeof(WBP_RadioSlider_Template_01_CM_C_BndEvt__WBP_RadioSlider_Template_01_RadioSlider_K2Node_ComponentBoundEvent_4_OnPageChanged__DelegateSignature) == 0x000008, "Wrong size on WBP_RadioSlider_Template_01_CM_C_BndEvt__WBP_RadioSlider_Template_01_RadioSlider_K2Node_ComponentBoundEvent_4_OnPageChanged__DelegateSignature");
static_assert(offsetof(WBP_RadioSlider_Template_01_CM_C_BndEvt__WBP_RadioSlider_Template_01_RadioSlider_K2Node_ComponentBoundEvent_4_OnPageChanged__DelegateSignature, PageIndex) == 0x000000, "Member 'WBP_RadioSlider_Template_01_CM_C_BndEvt__WBP_RadioSlider_Template_01_RadioSlider_K2Node_ComponentBoundEvent_4_OnPageChanged__DelegateSignature::PageIndex' has a wrong offset!");
static_assert(offsetof(WBP_RadioSlider_Template_01_CM_C_BndEvt__WBP_RadioSlider_Template_01_RadioSlider_K2Node_ComponentBoundEvent_4_OnPageChanged__DelegateSignature, TotalNumPages) == 0x000004, "Member 'WBP_RadioSlider_Template_01_CM_C_BndEvt__WBP_RadioSlider_Template_01_RadioSlider_K2Node_ComponentBoundEvent_4_OnPageChanged__DelegateSignature::TotalNumPages' has a wrong offset!");

// Function WBP_RadioSlider_Template_01_CM.WBP_RadioSlider_Template_01_CM_C.BndEvt__WBP_RadioSlider_Template_01_RadioSlider_K2Node_ComponentBoundEvent_5_OnSliderWidgetCreated__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct WBP_RadioSlider_Template_01_CM_C_BndEvt__WBP_RadioSlider_Template_01_RadioSlider_K2Node_ComponentBoundEvent_5_OnSliderWidgetCreated__DelegateSignature final
{
public:
	class UUserWidget*                            SliderWidget;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_RadioSlider_Template_01_CM_C_BndEvt__WBP_RadioSlider_Template_01_RadioSlider_K2Node_ComponentBoundEvent_5_OnSliderWidgetCreated__DelegateSignature) == 0x000008, "Wrong alignment on WBP_RadioSlider_Template_01_CM_C_BndEvt__WBP_RadioSlider_Template_01_RadioSlider_K2Node_ComponentBoundEvent_5_OnSliderWidgetCreated__DelegateSignature");
static_assert(sizeof(WBP_RadioSlider_Template_01_CM_C_BndEvt__WBP_RadioSlider_Template_01_RadioSlider_K2Node_ComponentBoundEvent_5_OnSliderWidgetCreated__DelegateSignature) == 0x000008, "Wrong size on WBP_RadioSlider_Template_01_CM_C_BndEvt__WBP_RadioSlider_Template_01_RadioSlider_K2Node_ComponentBoundEvent_5_OnSliderWidgetCreated__DelegateSignature");
static_assert(offsetof(WBP_RadioSlider_Template_01_CM_C_BndEvt__WBP_RadioSlider_Template_01_RadioSlider_K2Node_ComponentBoundEvent_5_OnSliderWidgetCreated__DelegateSignature, SliderWidget) == 0x000000, "Member 'WBP_RadioSlider_Template_01_CM_C_BndEvt__WBP_RadioSlider_Template_01_RadioSlider_K2Node_ComponentBoundEvent_5_OnSliderWidgetCreated__DelegateSignature::SliderWidget' has a wrong offset!");

// Function WBP_RadioSlider_Template_01_CM.WBP_RadioSlider_Template_01_CM_C.DoSelected
// 0x0024 (0x0024 - 0x0000)
struct WBP_RadioSlider_Template_01_CM_C_DoSelected final
{
public:
	bool                                          IsForward;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_511D[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetCurrentIndex_ReturnValue;              // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Clamp_ReturnValue;                        // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Clamp_ReturnValue_1;                      // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_1;            // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_RadioSlider_Template_01_CM_C_DoSelected) == 0x000004, "Wrong alignment on WBP_RadioSlider_Template_01_CM_C_DoSelected");
static_assert(sizeof(WBP_RadioSlider_Template_01_CM_C_DoSelected) == 0x000024, "Wrong size on WBP_RadioSlider_Template_01_CM_C_DoSelected");
static_assert(offsetof(WBP_RadioSlider_Template_01_CM_C_DoSelected, IsForward) == 0x000000, "Member 'WBP_RadioSlider_Template_01_CM_C_DoSelected::IsForward' has a wrong offset!");
static_assert(offsetof(WBP_RadioSlider_Template_01_CM_C_DoSelected, Temp_int_Variable) == 0x000004, "Member 'WBP_RadioSlider_Template_01_CM_C_DoSelected::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(WBP_RadioSlider_Template_01_CM_C_DoSelected, Temp_int_Variable_1) == 0x000008, "Member 'WBP_RadioSlider_Template_01_CM_C_DoSelected::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_RadioSlider_Template_01_CM_C_DoSelected, CallFunc_GetCurrentIndex_ReturnValue) == 0x00000C, "Member 'WBP_RadioSlider_Template_01_CM_C_DoSelected::CallFunc_GetCurrentIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_RadioSlider_Template_01_CM_C_DoSelected, CallFunc_Subtract_IntInt_ReturnValue) == 0x000010, "Member 'WBP_RadioSlider_Template_01_CM_C_DoSelected::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_RadioSlider_Template_01_CM_C_DoSelected, CallFunc_Clamp_ReturnValue) == 0x000014, "Member 'WBP_RadioSlider_Template_01_CM_C_DoSelected::CallFunc_Clamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_RadioSlider_Template_01_CM_C_DoSelected, CallFunc_Clamp_ReturnValue_1) == 0x000018, "Member 'WBP_RadioSlider_Template_01_CM_C_DoSelected::CallFunc_Clamp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_RadioSlider_Template_01_CM_C_DoSelected, CallFunc_Subtract_IntInt_ReturnValue_1) == 0x00001C, "Member 'WBP_RadioSlider_Template_01_CM_C_DoSelected::CallFunc_Subtract_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_RadioSlider_Template_01_CM_C_DoSelected, CallFunc_Add_IntInt_ReturnValue) == 0x000020, "Member 'WBP_RadioSlider_Template_01_CM_C_DoSelected::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function WBP_RadioSlider_Template_01_CM.WBP_RadioSlider_Template_01_CM_C.ExecuteUbergraph_WBP_RadioSlider_Template_01_CM
// 0x0098 (0x0098 - 0x0000)
struct WBP_RadioSlider_Template_01_CM_C_ExecuteUbergraph_WBP_RadioSlider_Template_01_CM final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_511E[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUserWidget*                            K2Node_ComponentBoundEvent_ElementWidget;          // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_ElementIndex;           // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_511F[0x3];                                     // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_RadioSlider_ButtonWithIconText_CM_C* K2Node_DynamicCast_AsWBP_Radio_Slider_Button_with_Icon_Text_CM; // 0x0018(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5120[0x3];                                     // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5121[0x3];                                     // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class UWBP_RadioSlider_ButtonWithIconText_CM_C* Button)> K2Node_CreateDelegate_OutputDelegate;              // 0x002C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5122[0x4];                                     // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUserWidget*                            K2Node_ComponentBoundEvent_PreviousElementWidget;  // 0x0040(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_PreviousElementIndex;   // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5123[0x4];                                     // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUserWidget*                            K2Node_ComponentBoundEvent_NewElementWidget;       // 0x0050(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_NewElementIndex;        // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x005C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5124[0x3];                                     // 0x005D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_ComponentBoundEvent_PageIndex;              // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_TotalNumPages;          // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUserWidget*                            K2Node_ComponentBoundEvent_SliderWidget;           // 0x0068(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UWBP_RadioSlider_GenericSlider_C*       K2Node_DynamicCast_AsWBP_Radio_Slider_Generic_Slider; // 0x0070(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0079(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x007A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5125[0x5];                                     // 0x007B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UCommonButtonBase*                      K2Node_ComponentBoundEvent_Button_1;               // 0x0080(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Select_Default;                             // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5126[0x7];                                     // 0x0089(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UCommonButtonBase*                      K2Node_ComponentBoundEvent_Button;                 // 0x0090(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_RadioSlider_Template_01_CM_C_ExecuteUbergraph_WBP_RadioSlider_Template_01_CM) == 0x000008, "Wrong alignment on WBP_RadioSlider_Template_01_CM_C_ExecuteUbergraph_WBP_RadioSlider_Template_01_CM");
static_assert(sizeof(WBP_RadioSlider_Template_01_CM_C_ExecuteUbergraph_WBP_RadioSlider_Template_01_CM) == 0x000098, "Wrong size on WBP_RadioSlider_Template_01_CM_C_ExecuteUbergraph_WBP_RadioSlider_Template_01_CM");
static_assert(offsetof(WBP_RadioSlider_Template_01_CM_C_ExecuteUbergraph_WBP_RadioSlider_Template_01_CM, EntryPoint) == 0x000000, "Member 'WBP_RadioSlider_Template_01_CM_C_ExecuteUbergraph_WBP_RadioSlider_Template_01_CM::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_RadioSlider_Template_01_CM_C_ExecuteUbergraph_WBP_RadioSlider_Template_01_CM, K2Node_ComponentBoundEvent_ElementWidget) == 0x000008, "Member 'WBP_RadioSlider_Template_01_CM_C_ExecuteUbergraph_WBP_RadioSlider_Template_01_CM::K2Node_ComponentBoundEvent_ElementWidget' has a wrong offset!");
static_assert(offsetof(WBP_RadioSlider_Template_01_CM_C_ExecuteUbergraph_WBP_RadioSlider_Template_01_CM, K2Node_ComponentBoundEvent_ElementIndex) == 0x000010, "Member 'WBP_RadioSlider_Template_01_CM_C_ExecuteUbergraph_WBP_RadioSlider_Template_01_CM::K2Node_ComponentBoundEvent_ElementIndex' has a wrong offset!");
static_assert(offsetof(WBP_RadioSlider_Template_01_CM_C_ExecuteUbergraph_WBP_RadioSlider_Template_01_CM, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000014, "Member 'WBP_RadioSlider_Template_01_CM_C_ExecuteUbergraph_WBP_RadioSlider_Template_01_CM::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_RadioSlider_Template_01_CM_C_ExecuteUbergraph_WBP_RadioSlider_Template_01_CM, K2Node_DynamicCast_AsWBP_Radio_Slider_Button_with_Icon_Text_CM) == 0x000018, "Member 'WBP_RadioSlider_Template_01_CM_C_ExecuteUbergraph_WBP_RadioSlider_Template_01_CM::K2Node_DynamicCast_AsWBP_Radio_Slider_Button_with_Icon_Text_CM' has a wrong offset!");
static_assert(offsetof(WBP_RadioSlider_Template_01_CM_C_ExecuteUbergraph_WBP_RadioSlider_Template_01_CM, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'WBP_RadioSlider_Template_01_CM_C_ExecuteUbergraph_WBP_RadioSlider_Template_01_CM::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_RadioSlider_Template_01_CM_C_ExecuteUbergraph_WBP_RadioSlider_Template_01_CM, CallFunc_Array_Length_ReturnValue) == 0x000024, "Member 'WBP_RadioSlider_Template_01_CM_C_ExecuteUbergraph_WBP_RadioSlider_Template_01_CM::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_RadioSlider_Template_01_CM_C_ExecuteUbergraph_WBP_RadioSlider_Template_01_CM, K2Node_Event_IsDesignTime) == 0x000028, "Member 'WBP_RadioSlider_Template_01_CM_C_ExecuteUbergraph_WBP_RadioSlider_Template_01_CM::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(WBP_RadioSlider_Template_01_CM_C_ExecuteUbergraph_WBP_RadioSlider_Template_01_CM, K2Node_CreateDelegate_OutputDelegate) == 0x00002C, "Member 'WBP_RadioSlider_Template_01_CM_C_ExecuteUbergraph_WBP_RadioSlider_Template_01_CM::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WBP_RadioSlider_Template_01_CM_C_ExecuteUbergraph_WBP_RadioSlider_Template_01_CM, K2Node_ComponentBoundEvent_PreviousElementWidget) == 0x000040, "Member 'WBP_RadioSlider_Template_01_CM_C_ExecuteUbergraph_WBP_RadioSlider_Template_01_CM::K2Node_ComponentBoundEvent_PreviousElementWidget' has a wrong offset!");
static_assert(offsetof(WBP_RadioSlider_Template_01_CM_C_ExecuteUbergraph_WBP_RadioSlider_Template_01_CM, K2Node_ComponentBoundEvent_PreviousElementIndex) == 0x000048, "Member 'WBP_RadioSlider_Template_01_CM_C_ExecuteUbergraph_WBP_RadioSlider_Template_01_CM::K2Node_ComponentBoundEvent_PreviousElementIndex' has a wrong offset!");
static_assert(offsetof(WBP_RadioSlider_Template_01_CM_C_ExecuteUbergraph_WBP_RadioSlider_Template_01_CM, K2Node_ComponentBoundEvent_NewElementWidget) == 0x000050, "Member 'WBP_RadioSlider_Template_01_CM_C_ExecuteUbergraph_WBP_RadioSlider_Template_01_CM::K2Node_ComponentBoundEvent_NewElementWidget' has a wrong offset!");
static_assert(offsetof(WBP_RadioSlider_Template_01_CM_C_ExecuteUbergraph_WBP_RadioSlider_Template_01_CM, K2Node_ComponentBoundEvent_NewElementIndex) == 0x000058, "Member 'WBP_RadioSlider_Template_01_CM_C_ExecuteUbergraph_WBP_RadioSlider_Template_01_CM::K2Node_ComponentBoundEvent_NewElementIndex' has a wrong offset!");
static_assert(offsetof(WBP_RadioSlider_Template_01_CM_C_ExecuteUbergraph_WBP_RadioSlider_Template_01_CM, Temp_bool_Variable) == 0x00005C, "Member 'WBP_RadioSlider_Template_01_CM_C_ExecuteUbergraph_WBP_RadioSlider_Template_01_CM::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_RadioSlider_Template_01_CM_C_ExecuteUbergraph_WBP_RadioSlider_Template_01_CM, K2Node_ComponentBoundEvent_PageIndex) == 0x000060, "Member 'WBP_RadioSlider_Template_01_CM_C_ExecuteUbergraph_WBP_RadioSlider_Template_01_CM::K2Node_ComponentBoundEvent_PageIndex' has a wrong offset!");
static_assert(offsetof(WBP_RadioSlider_Template_01_CM_C_ExecuteUbergraph_WBP_RadioSlider_Template_01_CM, K2Node_ComponentBoundEvent_TotalNumPages) == 0x000064, "Member 'WBP_RadioSlider_Template_01_CM_C_ExecuteUbergraph_WBP_RadioSlider_Template_01_CM::K2Node_ComponentBoundEvent_TotalNumPages' has a wrong offset!");
static_assert(offsetof(WBP_RadioSlider_Template_01_CM_C_ExecuteUbergraph_WBP_RadioSlider_Template_01_CM, K2Node_ComponentBoundEvent_SliderWidget) == 0x000068, "Member 'WBP_RadioSlider_Template_01_CM_C_ExecuteUbergraph_WBP_RadioSlider_Template_01_CM::K2Node_ComponentBoundEvent_SliderWidget' has a wrong offset!");
static_assert(offsetof(WBP_RadioSlider_Template_01_CM_C_ExecuteUbergraph_WBP_RadioSlider_Template_01_CM, K2Node_DynamicCast_AsWBP_Radio_Slider_Generic_Slider) == 0x000070, "Member 'WBP_RadioSlider_Template_01_CM_C_ExecuteUbergraph_WBP_RadioSlider_Template_01_CM::K2Node_DynamicCast_AsWBP_Radio_Slider_Generic_Slider' has a wrong offset!");
static_assert(offsetof(WBP_RadioSlider_Template_01_CM_C_ExecuteUbergraph_WBP_RadioSlider_Template_01_CM, K2Node_DynamicCast_bSuccess_1) == 0x000078, "Member 'WBP_RadioSlider_Template_01_CM_C_ExecuteUbergraph_WBP_RadioSlider_Template_01_CM::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(WBP_RadioSlider_Template_01_CM_C_ExecuteUbergraph_WBP_RadioSlider_Template_01_CM, Temp_bool_Variable_1) == 0x000079, "Member 'WBP_RadioSlider_Template_01_CM_C_ExecuteUbergraph_WBP_RadioSlider_Template_01_CM::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_RadioSlider_Template_01_CM_C_ExecuteUbergraph_WBP_RadioSlider_Template_01_CM, Temp_bool_Variable_2) == 0x00007A, "Member 'WBP_RadioSlider_Template_01_CM_C_ExecuteUbergraph_WBP_RadioSlider_Template_01_CM::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_RadioSlider_Template_01_CM_C_ExecuteUbergraph_WBP_RadioSlider_Template_01_CM, K2Node_ComponentBoundEvent_Button_1) == 0x000080, "Member 'WBP_RadioSlider_Template_01_CM_C_ExecuteUbergraph_WBP_RadioSlider_Template_01_CM::K2Node_ComponentBoundEvent_Button_1' has a wrong offset!");
static_assert(offsetof(WBP_RadioSlider_Template_01_CM_C_ExecuteUbergraph_WBP_RadioSlider_Template_01_CM, K2Node_Select_Default) == 0x000088, "Member 'WBP_RadioSlider_Template_01_CM_C_ExecuteUbergraph_WBP_RadioSlider_Template_01_CM::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_RadioSlider_Template_01_CM_C_ExecuteUbergraph_WBP_RadioSlider_Template_01_CM, K2Node_ComponentBoundEvent_Button) == 0x000090, "Member 'WBP_RadioSlider_Template_01_CM_C_ExecuteUbergraph_WBP_RadioSlider_Template_01_CM::K2Node_ComponentBoundEvent_Button' has a wrong offset!");

// Function WBP_RadioSlider_Template_01_CM.WBP_RadioSlider_Template_01_CM_C.GetCurrentElementNum
// 0x0004 (0x0004 - 0x0000)
struct WBP_RadioSlider_Template_01_CM_C_GetCurrentElementNum final
{
public:
	int32                                         Element_Count;                                     // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_RadioSlider_Template_01_CM_C_GetCurrentElementNum) == 0x000004, "Wrong alignment on WBP_RadioSlider_Template_01_CM_C_GetCurrentElementNum");
static_assert(sizeof(WBP_RadioSlider_Template_01_CM_C_GetCurrentElementNum) == 0x000004, "Wrong size on WBP_RadioSlider_Template_01_CM_C_GetCurrentElementNum");
static_assert(offsetof(WBP_RadioSlider_Template_01_CM_C_GetCurrentElementNum, Element_Count) == 0x000000, "Member 'WBP_RadioSlider_Template_01_CM_C_GetCurrentElementNum::Element_Count' has a wrong offset!");

// Function WBP_RadioSlider_Template_01_CM.WBP_RadioSlider_Template_01_CM_C.GetCurrentTabId
// 0x0068 (0x0068 - 0x0000)
struct WBP_RadioSlider_Template_01_CM_C_GetCurrentTabId final
{
public:
	class FName                                   Current_Tab_Id;                                    // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetCurrentIndex_ReturnValue;              // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5127[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FBP_RadioSliderPregisteredElement      CallFunc_Array_Get_Item;                           // 0x0010(0x0058)(ContainsInstancedReference, HasGetValueTypeHash)
};
static_assert(alignof(WBP_RadioSlider_Template_01_CM_C_GetCurrentTabId) == 0x000008, "Wrong alignment on WBP_RadioSlider_Template_01_CM_C_GetCurrentTabId");
static_assert(sizeof(WBP_RadioSlider_Template_01_CM_C_GetCurrentTabId) == 0x000068, "Wrong size on WBP_RadioSlider_Template_01_CM_C_GetCurrentTabId");
static_assert(offsetof(WBP_RadioSlider_Template_01_CM_C_GetCurrentTabId, Current_Tab_Id) == 0x000000, "Member 'WBP_RadioSlider_Template_01_CM_C_GetCurrentTabId::Current_Tab_Id' has a wrong offset!");
static_assert(offsetof(WBP_RadioSlider_Template_01_CM_C_GetCurrentTabId, CallFunc_GetCurrentIndex_ReturnValue) == 0x000008, "Member 'WBP_RadioSlider_Template_01_CM_C_GetCurrentTabId::CallFunc_GetCurrentIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_RadioSlider_Template_01_CM_C_GetCurrentTabId, CallFunc_Array_Get_Item) == 0x000010, "Member 'WBP_RadioSlider_Template_01_CM_C_GetCurrentTabId::CallFunc_Array_Get_Item' has a wrong offset!");

// Function WBP_RadioSlider_Template_01_CM.WBP_RadioSlider_Template_01_CM_C.GetElementsCount
// 0x0008 (0x0008 - 0x0000)
struct WBP_RadioSlider_Template_01_CM_C_GetElementsCount final
{
public:
	int32                                         Count;                                             // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_RadioSlider_Template_01_CM_C_GetElementsCount) == 0x000004, "Wrong alignment on WBP_RadioSlider_Template_01_CM_C_GetElementsCount");
static_assert(sizeof(WBP_RadioSlider_Template_01_CM_C_GetElementsCount) == 0x000008, "Wrong size on WBP_RadioSlider_Template_01_CM_C_GetElementsCount");
static_assert(offsetof(WBP_RadioSlider_Template_01_CM_C_GetElementsCount, Count) == 0x000000, "Member 'WBP_RadioSlider_Template_01_CM_C_GetElementsCount::Count' has a wrong offset!");
static_assert(offsetof(WBP_RadioSlider_Template_01_CM_C_GetElementsCount, CallFunc_Array_Length_ReturnValue) == 0x000004, "Member 'WBP_RadioSlider_Template_01_CM_C_GetElementsCount::CallFunc_Array_Length_ReturnValue' has a wrong offset!");

// Function WBP_RadioSlider_Template_01_CM.WBP_RadioSlider_Template_01_CM_C.GetRadioSliderIndex
// 0x0008 (0x0008 - 0x0000)
struct WBP_RadioSlider_Template_01_CM_C_GetRadioSliderIndex final
{
public:
	int32                                         Param_Index;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetCurrentIndex_ReturnValue;              // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_RadioSlider_Template_01_CM_C_GetRadioSliderIndex) == 0x000004, "Wrong alignment on WBP_RadioSlider_Template_01_CM_C_GetRadioSliderIndex");
static_assert(sizeof(WBP_RadioSlider_Template_01_CM_C_GetRadioSliderIndex) == 0x000008, "Wrong size on WBP_RadioSlider_Template_01_CM_C_GetRadioSliderIndex");
static_assert(offsetof(WBP_RadioSlider_Template_01_CM_C_GetRadioSliderIndex, Param_Index) == 0x000000, "Member 'WBP_RadioSlider_Template_01_CM_C_GetRadioSliderIndex::Param_Index' has a wrong offset!");
static_assert(offsetof(WBP_RadioSlider_Template_01_CM_C_GetRadioSliderIndex, CallFunc_GetCurrentIndex_ReturnValue) == 0x000004, "Member 'WBP_RadioSlider_Template_01_CM_C_GetRadioSliderIndex::CallFunc_GetCurrentIndex_ReturnValue' has a wrong offset!");

// Function WBP_RadioSlider_Template_01_CM.WBP_RadioSlider_Template_01_CM_C.HandleOnButtonClicked
// 0x0008 (0x0008 - 0x0000)
struct WBP_RadioSlider_Template_01_CM_C_HandleOnButtonClicked final
{
public:
	class UWBP_RadioSlider_ButtonWithIconText_CM_C* Button;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_RadioSlider_Template_01_CM_C_HandleOnButtonClicked) == 0x000008, "Wrong alignment on WBP_RadioSlider_Template_01_CM_C_HandleOnButtonClicked");
static_assert(sizeof(WBP_RadioSlider_Template_01_CM_C_HandleOnButtonClicked) == 0x000008, "Wrong size on WBP_RadioSlider_Template_01_CM_C_HandleOnButtonClicked");
static_assert(offsetof(WBP_RadioSlider_Template_01_CM_C_HandleOnButtonClicked, Button) == 0x000000, "Member 'WBP_RadioSlider_Template_01_CM_C_HandleOnButtonClicked::Button' has a wrong offset!");

// Function WBP_RadioSlider_Template_01_CM.WBP_RadioSlider_Template_01_CM_C.OnElementWidgetCreated__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct WBP_RadioSlider_Template_01_CM_C_OnElementWidgetCreated__DelegateSignature final
{
public:
	class UWBP_RadioSlider_ButtonWithIconText_CM_C* ElementWidget;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         ElementIndex;                                      // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_RadioSlider_Template_01_CM_C_OnElementWidgetCreated__DelegateSignature) == 0x000008, "Wrong alignment on WBP_RadioSlider_Template_01_CM_C_OnElementWidgetCreated__DelegateSignature");
static_assert(sizeof(WBP_RadioSlider_Template_01_CM_C_OnElementWidgetCreated__DelegateSignature) == 0x000010, "Wrong size on WBP_RadioSlider_Template_01_CM_C_OnElementWidgetCreated__DelegateSignature");
static_assert(offsetof(WBP_RadioSlider_Template_01_CM_C_OnElementWidgetCreated__DelegateSignature, ElementWidget) == 0x000000, "Member 'WBP_RadioSlider_Template_01_CM_C_OnElementWidgetCreated__DelegateSignature::ElementWidget' has a wrong offset!");
static_assert(offsetof(WBP_RadioSlider_Template_01_CM_C_OnElementWidgetCreated__DelegateSignature, ElementIndex) == 0x000008, "Member 'WBP_RadioSlider_Template_01_CM_C_OnElementWidgetCreated__DelegateSignature::ElementIndex' has a wrong offset!");

// Function WBP_RadioSlider_Template_01_CM.WBP_RadioSlider_Template_01_CM_C.OnSliderMoved__DelegateSignature
// 0x0060 (0x0060 - 0x0000)
struct WBP_RadioSlider_Template_01_CM_C_OnSliderMoved__DelegateSignature final
{
public:
	class UUserWidget*                            ElementWidget;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FBP_RadioSliderPregisteredElement      ElementData;                                       // 0x0008(0x0058)(BlueprintVisible, BlueprintReadOnly, Parm, ContainsInstancedReference, HasGetValueTypeHash)
};
static_assert(alignof(WBP_RadioSlider_Template_01_CM_C_OnSliderMoved__DelegateSignature) == 0x000008, "Wrong alignment on WBP_RadioSlider_Template_01_CM_C_OnSliderMoved__DelegateSignature");
static_assert(sizeof(WBP_RadioSlider_Template_01_CM_C_OnSliderMoved__DelegateSignature) == 0x000060, "Wrong size on WBP_RadioSlider_Template_01_CM_C_OnSliderMoved__DelegateSignature");
static_assert(offsetof(WBP_RadioSlider_Template_01_CM_C_OnSliderMoved__DelegateSignature, ElementWidget) == 0x000000, "Member 'WBP_RadioSlider_Template_01_CM_C_OnSliderMoved__DelegateSignature::ElementWidget' has a wrong offset!");
static_assert(offsetof(WBP_RadioSlider_Template_01_CM_C_OnSliderMoved__DelegateSignature, ElementData) == 0x000008, "Member 'WBP_RadioSlider_Template_01_CM_C_OnSliderMoved__DelegateSignature::ElementData' has a wrong offset!");

// Function WBP_RadioSlider_Template_01_CM.WBP_RadioSlider_Template_01_CM_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct WBP_RadioSlider_Template_01_CM_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_RadioSlider_Template_01_CM_C_PreConstruct) == 0x000001, "Wrong alignment on WBP_RadioSlider_Template_01_CM_C_PreConstruct");
static_assert(sizeof(WBP_RadioSlider_Template_01_CM_C_PreConstruct) == 0x000001, "Wrong size on WBP_RadioSlider_Template_01_CM_C_PreConstruct");
static_assert(offsetof(WBP_RadioSlider_Template_01_CM_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'WBP_RadioSlider_Template_01_CM_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function WBP_RadioSlider_Template_01_CM.WBP_RadioSlider_Template_01_CM_C.RefreshTabOptionsFromElementList
// 0x0070 (0x0070 - 0x0000)
struct WBP_RadioSlider_Template_01_CM_C_RefreshTabOptionsFromElementList final
{
public:
	TArray<struct FBP_RadioSliderPregisteredElement> NewRegisteredElements;                             // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5128[0x4];                                     // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FBP_RadioSliderPregisteredElement      CallFunc_Array_Get_Item;                           // 0x0018(0x0058)(ContainsInstancedReference, HasGetValueTypeHash)
};
static_assert(alignof(WBP_RadioSlider_Template_01_CM_C_RefreshTabOptionsFromElementList) == 0x000008, "Wrong alignment on WBP_RadioSlider_Template_01_CM_C_RefreshTabOptionsFromElementList");
static_assert(sizeof(WBP_RadioSlider_Template_01_CM_C_RefreshTabOptionsFromElementList) == 0x000070, "Wrong size on WBP_RadioSlider_Template_01_CM_C_RefreshTabOptionsFromElementList");
static_assert(offsetof(WBP_RadioSlider_Template_01_CM_C_RefreshTabOptionsFromElementList, NewRegisteredElements) == 0x000000, "Member 'WBP_RadioSlider_Template_01_CM_C_RefreshTabOptionsFromElementList::NewRegisteredElements' has a wrong offset!");
static_assert(offsetof(WBP_RadioSlider_Template_01_CM_C_RefreshTabOptionsFromElementList, CallFunc_Array_Length_ReturnValue) == 0x000010, "Member 'WBP_RadioSlider_Template_01_CM_C_RefreshTabOptionsFromElementList::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_RadioSlider_Template_01_CM_C_RefreshTabOptionsFromElementList, CallFunc_Array_Get_Item) == 0x000018, "Member 'WBP_RadioSlider_Template_01_CM_C_RefreshTabOptionsFromElementList::CallFunc_Array_Get_Item' has a wrong offset!");

// Function WBP_RadioSlider_Template_01_CM.WBP_RadioSlider_Template_01_CM_C.RefreshTabOptionsFromIdSet
// 0x00E0 (0x00E0 - 0x0000)
struct WBP_RadioSlider_Template_01_CM_C_RefreshTabOptionsFromIdSet final
{
public:
	TSet<class FName>                             Set_of_Ids;                                        // 0x0000(0x0050)(BlueprintVisible, BlueprintReadOnly, Parm)
	bool                                          IsFresh;                                           // 0x0050(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5129[0x7];                                     // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FBP_RadioSliderPregisteredElement> EnabledElements;                                   // 0x0058(0x0010)(Edit, BlueprintVisible, ContainsInstancedReference)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_512A[0x4];                                     // 0x0074(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FBP_RadioSliderPregisteredElement      CallFunc_Array_Get_Item;                           // 0x0078(0x0058)(ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00D4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Set_Contains_ReturnValue;                 // 0x00D5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_512B[0x2];                                     // 0x00D6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_RadioSlider_Template_01_CM_C_RefreshTabOptionsFromIdSet) == 0x000008, "Wrong alignment on WBP_RadioSlider_Template_01_CM_C_RefreshTabOptionsFromIdSet");
static_assert(sizeof(WBP_RadioSlider_Template_01_CM_C_RefreshTabOptionsFromIdSet) == 0x0000E0, "Wrong size on WBP_RadioSlider_Template_01_CM_C_RefreshTabOptionsFromIdSet");
static_assert(offsetof(WBP_RadioSlider_Template_01_CM_C_RefreshTabOptionsFromIdSet, Set_of_Ids) == 0x000000, "Member 'WBP_RadioSlider_Template_01_CM_C_RefreshTabOptionsFromIdSet::Set_of_Ids' has a wrong offset!");
static_assert(offsetof(WBP_RadioSlider_Template_01_CM_C_RefreshTabOptionsFromIdSet, IsFresh) == 0x000050, "Member 'WBP_RadioSlider_Template_01_CM_C_RefreshTabOptionsFromIdSet::IsFresh' has a wrong offset!");
static_assert(offsetof(WBP_RadioSlider_Template_01_CM_C_RefreshTabOptionsFromIdSet, EnabledElements) == 0x000058, "Member 'WBP_RadioSlider_Template_01_CM_C_RefreshTabOptionsFromIdSet::EnabledElements' has a wrong offset!");
static_assert(offsetof(WBP_RadioSlider_Template_01_CM_C_RefreshTabOptionsFromIdSet, Temp_int_Array_Index_Variable) == 0x000068, "Member 'WBP_RadioSlider_Template_01_CM_C_RefreshTabOptionsFromIdSet::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WBP_RadioSlider_Template_01_CM_C_RefreshTabOptionsFromIdSet, Temp_int_Loop_Counter_Variable) == 0x00006C, "Member 'WBP_RadioSlider_Template_01_CM_C_RefreshTabOptionsFromIdSet::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WBP_RadioSlider_Template_01_CM_C_RefreshTabOptionsFromIdSet, CallFunc_Add_IntInt_ReturnValue) == 0x000070, "Member 'WBP_RadioSlider_Template_01_CM_C_RefreshTabOptionsFromIdSet::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_RadioSlider_Template_01_CM_C_RefreshTabOptionsFromIdSet, CallFunc_Array_Get_Item) == 0x000078, "Member 'WBP_RadioSlider_Template_01_CM_C_RefreshTabOptionsFromIdSet::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_RadioSlider_Template_01_CM_C_RefreshTabOptionsFromIdSet, CallFunc_Array_Length_ReturnValue) == 0x0000D0, "Member 'WBP_RadioSlider_Template_01_CM_C_RefreshTabOptionsFromIdSet::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_RadioSlider_Template_01_CM_C_RefreshTabOptionsFromIdSet, CallFunc_Less_IntInt_ReturnValue) == 0x0000D4, "Member 'WBP_RadioSlider_Template_01_CM_C_RefreshTabOptionsFromIdSet::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_RadioSlider_Template_01_CM_C_RefreshTabOptionsFromIdSet, CallFunc_Set_Contains_ReturnValue) == 0x0000D5, "Member 'WBP_RadioSlider_Template_01_CM_C_RefreshTabOptionsFromIdSet::CallFunc_Set_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_RadioSlider_Template_01_CM_C_RefreshTabOptionsFromIdSet, CallFunc_Array_Add_ReturnValue) == 0x0000D8, "Member 'WBP_RadioSlider_Template_01_CM_C_RefreshTabOptionsFromIdSet::CallFunc_Array_Add_ReturnValue' has a wrong offset!");

// Function WBP_RadioSlider_Template_01_CM.WBP_RadioSlider_Template_01_CM_C.SelectButton
// 0x00B0 (0x00B0 - 0x0000)
struct WBP_RadioSlider_Template_01_CM_C_SelectButton final
{
public:
	class UWBP_RadioSlider_ButtonWithIconText_CM_C* Button;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          SkipAnimation;                                     // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_AkEventGlobal_ReturnValue;                // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_512C[0x4];                                     // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<int32, class UUserWidget*>               CallFunc_GetElementWidgetsTable_ReturnValue;       // 0x0020(0x0050)(ConstParm, ContainsInstancedReference)
	int32                                         CallFunc_GetIndexFromWidget_Index;                 // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetIndexFromWidget_ReturnValue;           // 0x0074(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_512D[0x3];                                     // 0x0075(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 CallFunc_Map_Keys_Keys;                            // 0x0078(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Get_Item;                           // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUserWidget*                            CallFunc_Map_Find_Value;                           // 0x0090(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0099(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_512E[0x6];                                     // 0x009A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_RadioSlider_ButtonWithIconText_CM_C* K2Node_DynamicCast_AsWBP_Radio_Slider_Button_with_Icon_Text_CM; // 0x00A0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x00A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Select_Default;                             // 0x00AA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_RadioSlider_Template_01_CM_C_SelectButton) == 0x000008, "Wrong alignment on WBP_RadioSlider_Template_01_CM_C_SelectButton");
static_assert(sizeof(WBP_RadioSlider_Template_01_CM_C_SelectButton) == 0x0000B0, "Wrong size on WBP_RadioSlider_Template_01_CM_C_SelectButton");
static_assert(offsetof(WBP_RadioSlider_Template_01_CM_C_SelectButton, Button) == 0x000000, "Member 'WBP_RadioSlider_Template_01_CM_C_SelectButton::Button' has a wrong offset!");
static_assert(offsetof(WBP_RadioSlider_Template_01_CM_C_SelectButton, SkipAnimation) == 0x000008, "Member 'WBP_RadioSlider_Template_01_CM_C_SelectButton::SkipAnimation' has a wrong offset!");
static_assert(offsetof(WBP_RadioSlider_Template_01_CM_C_SelectButton, Temp_bool_Variable) == 0x000009, "Member 'WBP_RadioSlider_Template_01_CM_C_SelectButton::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_RadioSlider_Template_01_CM_C_SelectButton, Temp_bool_Variable_1) == 0x00000A, "Member 'WBP_RadioSlider_Template_01_CM_C_SelectButton::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_RadioSlider_Template_01_CM_C_SelectButton, Temp_bool_Variable_2) == 0x00000B, "Member 'WBP_RadioSlider_Template_01_CM_C_SelectButton::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_RadioSlider_Template_01_CM_C_SelectButton, Temp_int_Array_Index_Variable) == 0x00000C, "Member 'WBP_RadioSlider_Template_01_CM_C_SelectButton::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WBP_RadioSlider_Template_01_CM_C_SelectButton, Temp_int_Loop_Counter_Variable) == 0x000010, "Member 'WBP_RadioSlider_Template_01_CM_C_SelectButton::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WBP_RadioSlider_Template_01_CM_C_SelectButton, CallFunc_Add_IntInt_ReturnValue) == 0x000014, "Member 'WBP_RadioSlider_Template_01_CM_C_SelectButton::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_RadioSlider_Template_01_CM_C_SelectButton, CallFunc_AkEventGlobal_ReturnValue) == 0x000018, "Member 'WBP_RadioSlider_Template_01_CM_C_SelectButton::CallFunc_AkEventGlobal_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_RadioSlider_Template_01_CM_C_SelectButton, CallFunc_GetElementWidgetsTable_ReturnValue) == 0x000020, "Member 'WBP_RadioSlider_Template_01_CM_C_SelectButton::CallFunc_GetElementWidgetsTable_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_RadioSlider_Template_01_CM_C_SelectButton, CallFunc_GetIndexFromWidget_Index) == 0x000070, "Member 'WBP_RadioSlider_Template_01_CM_C_SelectButton::CallFunc_GetIndexFromWidget_Index' has a wrong offset!");
static_assert(offsetof(WBP_RadioSlider_Template_01_CM_C_SelectButton, CallFunc_GetIndexFromWidget_ReturnValue) == 0x000074, "Member 'WBP_RadioSlider_Template_01_CM_C_SelectButton::CallFunc_GetIndexFromWidget_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_RadioSlider_Template_01_CM_C_SelectButton, CallFunc_Map_Keys_Keys) == 0x000078, "Member 'WBP_RadioSlider_Template_01_CM_C_SelectButton::CallFunc_Map_Keys_Keys' has a wrong offset!");
static_assert(offsetof(WBP_RadioSlider_Template_01_CM_C_SelectButton, CallFunc_Array_Get_Item) == 0x000088, "Member 'WBP_RadioSlider_Template_01_CM_C_SelectButton::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_RadioSlider_Template_01_CM_C_SelectButton, CallFunc_Array_Length_ReturnValue) == 0x00008C, "Member 'WBP_RadioSlider_Template_01_CM_C_SelectButton::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_RadioSlider_Template_01_CM_C_SelectButton, CallFunc_Map_Find_Value) == 0x000090, "Member 'WBP_RadioSlider_Template_01_CM_C_SelectButton::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(WBP_RadioSlider_Template_01_CM_C_SelectButton, CallFunc_Map_Find_ReturnValue) == 0x000098, "Member 'WBP_RadioSlider_Template_01_CM_C_SelectButton::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_RadioSlider_Template_01_CM_C_SelectButton, CallFunc_Less_IntInt_ReturnValue) == 0x000099, "Member 'WBP_RadioSlider_Template_01_CM_C_SelectButton::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_RadioSlider_Template_01_CM_C_SelectButton, K2Node_DynamicCast_AsWBP_Radio_Slider_Button_with_Icon_Text_CM) == 0x0000A0, "Member 'WBP_RadioSlider_Template_01_CM_C_SelectButton::K2Node_DynamicCast_AsWBP_Radio_Slider_Button_with_Icon_Text_CM' has a wrong offset!");
static_assert(offsetof(WBP_RadioSlider_Template_01_CM_C_SelectButton, K2Node_DynamicCast_bSuccess) == 0x0000A8, "Member 'WBP_RadioSlider_Template_01_CM_C_SelectButton::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_RadioSlider_Template_01_CM_C_SelectButton, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x0000A9, "Member 'WBP_RadioSlider_Template_01_CM_C_SelectButton::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_RadioSlider_Template_01_CM_C_SelectButton, K2Node_Select_Default) == 0x0000AA, "Member 'WBP_RadioSlider_Template_01_CM_C_SelectButton::K2Node_Select_Default' has a wrong offset!");

// Function WBP_RadioSlider_Template_01_CM.WBP_RadioSlider_Template_01_CM_C.SelectButtonAtIndex
// 0x0020 (0x0020 - 0x0000)
struct WBP_RadioSlider_Template_01_CM_C_SelectButtonAtIndex final
{
public:
	int32                                         Param_Index;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          SkipAnimation;                                     // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_512F[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UUserWidget*                            CallFunc_GetWidgetAtIndex_ReturnValue;             // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UWBP_RadioSlider_ButtonWithIconText_CM_C* K2Node_DynamicCast_AsWBP_Radio_Slider_Button_with_Icon_Text_CM; // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_RadioSlider_Template_01_CM_C_SelectButtonAtIndex) == 0x000008, "Wrong alignment on WBP_RadioSlider_Template_01_CM_C_SelectButtonAtIndex");
static_assert(sizeof(WBP_RadioSlider_Template_01_CM_C_SelectButtonAtIndex) == 0x000020, "Wrong size on WBP_RadioSlider_Template_01_CM_C_SelectButtonAtIndex");
static_assert(offsetof(WBP_RadioSlider_Template_01_CM_C_SelectButtonAtIndex, Param_Index) == 0x000000, "Member 'WBP_RadioSlider_Template_01_CM_C_SelectButtonAtIndex::Param_Index' has a wrong offset!");
static_assert(offsetof(WBP_RadioSlider_Template_01_CM_C_SelectButtonAtIndex, SkipAnimation) == 0x000004, "Member 'WBP_RadioSlider_Template_01_CM_C_SelectButtonAtIndex::SkipAnimation' has a wrong offset!");
static_assert(offsetof(WBP_RadioSlider_Template_01_CM_C_SelectButtonAtIndex, CallFunc_GetWidgetAtIndex_ReturnValue) == 0x000008, "Member 'WBP_RadioSlider_Template_01_CM_C_SelectButtonAtIndex::CallFunc_GetWidgetAtIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_RadioSlider_Template_01_CM_C_SelectButtonAtIndex, K2Node_DynamicCast_AsWBP_Radio_Slider_Button_with_Icon_Text_CM) == 0x000010, "Member 'WBP_RadioSlider_Template_01_CM_C_SelectButtonAtIndex::K2Node_DynamicCast_AsWBP_Radio_Slider_Button_with_Icon_Text_CM' has a wrong offset!");
static_assert(offsetof(WBP_RadioSlider_Template_01_CM_C_SelectButtonAtIndex, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'WBP_RadioSlider_Template_01_CM_C_SelectButtonAtIndex::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function WBP_RadioSlider_Template_01_CM.WBP_RadioSlider_Template_01_CM_C.SetRadioSliderIndex
// 0x0004 (0x0004 - 0x0000)
struct WBP_RadioSlider_Template_01_CM_C_SetRadioSliderIndex final
{
public:
	int32                                         Param_Index;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_RadioSlider_Template_01_CM_C_SetRadioSliderIndex) == 0x000004, "Wrong alignment on WBP_RadioSlider_Template_01_CM_C_SetRadioSliderIndex");
static_assert(sizeof(WBP_RadioSlider_Template_01_CM_C_SetRadioSliderIndex) == 0x000004, "Wrong size on WBP_RadioSlider_Template_01_CM_C_SetRadioSliderIndex");
static_assert(offsetof(WBP_RadioSlider_Template_01_CM_C_SetRadioSliderIndex, Param_Index) == 0x000000, "Member 'WBP_RadioSlider_Template_01_CM_C_SetRadioSliderIndex::Param_Index' has a wrong offset!");

// Function WBP_RadioSlider_Template_01_CM.WBP_RadioSlider_Template_01_CM_C.Update Pagination Button Visibility
// 0x0018 (0x0018 - 0x0000)
struct WBP_RadioSlider_Template_01_CM_C_Update_Pagination_Button_Visibility final
{
public:
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_2;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_3;                              // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5130[0x2];                                     // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetTotalNumPages_ReturnValue;             // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetCurrentPageIndex_ReturnValue;          // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_1;          // 0x0015(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0016(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_1;                           // 0x0017(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_RadioSlider_Template_01_CM_C_Update_Pagination_Button_Visibility) == 0x000004, "Wrong alignment on WBP_RadioSlider_Template_01_CM_C_Update_Pagination_Button_Visibility");
static_assert(sizeof(WBP_RadioSlider_Template_01_CM_C_Update_Pagination_Button_Visibility) == 0x000018, "Wrong size on WBP_RadioSlider_Template_01_CM_C_Update_Pagination_Button_Visibility");
static_assert(offsetof(WBP_RadioSlider_Template_01_CM_C_Update_Pagination_Button_Visibility, Temp_byte_Variable) == 0x000000, "Member 'WBP_RadioSlider_Template_01_CM_C_Update_Pagination_Button_Visibility::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_RadioSlider_Template_01_CM_C_Update_Pagination_Button_Visibility, Temp_byte_Variable_1) == 0x000001, "Member 'WBP_RadioSlider_Template_01_CM_C_Update_Pagination_Button_Visibility::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_RadioSlider_Template_01_CM_C_Update_Pagination_Button_Visibility, Temp_bool_Variable) == 0x000002, "Member 'WBP_RadioSlider_Template_01_CM_C_Update_Pagination_Button_Visibility::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_RadioSlider_Template_01_CM_C_Update_Pagination_Button_Visibility, Temp_byte_Variable_2) == 0x000003, "Member 'WBP_RadioSlider_Template_01_CM_C_Update_Pagination_Button_Visibility::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_RadioSlider_Template_01_CM_C_Update_Pagination_Button_Visibility, Temp_byte_Variable_3) == 0x000004, "Member 'WBP_RadioSlider_Template_01_CM_C_Update_Pagination_Button_Visibility::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(WBP_RadioSlider_Template_01_CM_C_Update_Pagination_Button_Visibility, Temp_bool_Variable_1) == 0x000005, "Member 'WBP_RadioSlider_Template_01_CM_C_Update_Pagination_Button_Visibility::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_RadioSlider_Template_01_CM_C_Update_Pagination_Button_Visibility, CallFunc_GetTotalNumPages_ReturnValue) == 0x000008, "Member 'WBP_RadioSlider_Template_01_CM_C_Update_Pagination_Button_Visibility::CallFunc_GetTotalNumPages_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_RadioSlider_Template_01_CM_C_Update_Pagination_Button_Visibility, CallFunc_GetCurrentPageIndex_ReturnValue) == 0x00000C, "Member 'WBP_RadioSlider_Template_01_CM_C_Update_Pagination_Button_Visibility::CallFunc_GetCurrentPageIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_RadioSlider_Template_01_CM_C_Update_Pagination_Button_Visibility, CallFunc_Subtract_IntInt_ReturnValue) == 0x000010, "Member 'WBP_RadioSlider_Template_01_CM_C_Update_Pagination_Button_Visibility::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_RadioSlider_Template_01_CM_C_Update_Pagination_Button_Visibility, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000014, "Member 'WBP_RadioSlider_Template_01_CM_C_Update_Pagination_Button_Visibility::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_RadioSlider_Template_01_CM_C_Update_Pagination_Button_Visibility, CallFunc_EqualEqual_IntInt_ReturnValue_1) == 0x000015, "Member 'WBP_RadioSlider_Template_01_CM_C_Update_Pagination_Button_Visibility::CallFunc_EqualEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_RadioSlider_Template_01_CM_C_Update_Pagination_Button_Visibility, K2Node_Select_Default) == 0x000016, "Member 'WBP_RadioSlider_Template_01_CM_C_Update_Pagination_Button_Visibility::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_RadioSlider_Template_01_CM_C_Update_Pagination_Button_Visibility, K2Node_Select_Default_1) == 0x000017, "Member 'WBP_RadioSlider_Template_01_CM_C_Update_Pagination_Button_Visibility::K2Node_Select_Default_1' has a wrong offset!");

// Function WBP_RadioSlider_Template_01_CM.WBP_RadioSlider_Template_01_CM_C.UpdateElementStyle
// 0x0078 (0x0078 - 0x0000)
struct WBP_RadioSlider_Template_01_CM_C_UpdateElementStyle final
{
public:
	int32                                         Param_Index;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5131[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<int32, class UUserWidget*>               CallFunc_GetElementWidgetsTable_ReturnValue;       // 0x0008(0x0050)(ConstParm, ContainsInstancedReference)
	class UUserWidget*                            CallFunc_Map_Find_Value;                           // 0x0058(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5132[0x7];                                     // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_RadioSlider_ButtonWithIconText_CM_C* K2Node_DynamicCast_AsWBP_Radio_Slider_Button_with_Icon_Text_CM; // 0x0068(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_RadioSlider_Template_01_CM_C_UpdateElementStyle) == 0x000008, "Wrong alignment on WBP_RadioSlider_Template_01_CM_C_UpdateElementStyle");
static_assert(sizeof(WBP_RadioSlider_Template_01_CM_C_UpdateElementStyle) == 0x000078, "Wrong size on WBP_RadioSlider_Template_01_CM_C_UpdateElementStyle");
static_assert(offsetof(WBP_RadioSlider_Template_01_CM_C_UpdateElementStyle, Param_Index) == 0x000000, "Member 'WBP_RadioSlider_Template_01_CM_C_UpdateElementStyle::Param_Index' has a wrong offset!");
static_assert(offsetof(WBP_RadioSlider_Template_01_CM_C_UpdateElementStyle, CallFunc_Array_IsValidIndex_ReturnValue) == 0x000004, "Member 'WBP_RadioSlider_Template_01_CM_C_UpdateElementStyle::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_RadioSlider_Template_01_CM_C_UpdateElementStyle, CallFunc_GetElementWidgetsTable_ReturnValue) == 0x000008, "Member 'WBP_RadioSlider_Template_01_CM_C_UpdateElementStyle::CallFunc_GetElementWidgetsTable_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_RadioSlider_Template_01_CM_C_UpdateElementStyle, CallFunc_Map_Find_Value) == 0x000058, "Member 'WBP_RadioSlider_Template_01_CM_C_UpdateElementStyle::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(WBP_RadioSlider_Template_01_CM_C_UpdateElementStyle, CallFunc_Map_Find_ReturnValue) == 0x000060, "Member 'WBP_RadioSlider_Template_01_CM_C_UpdateElementStyle::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_RadioSlider_Template_01_CM_C_UpdateElementStyle, K2Node_DynamicCast_AsWBP_Radio_Slider_Button_with_Icon_Text_CM) == 0x000068, "Member 'WBP_RadioSlider_Template_01_CM_C_UpdateElementStyle::K2Node_DynamicCast_AsWBP_Radio_Slider_Button_with_Icon_Text_CM' has a wrong offset!");
static_assert(offsetof(WBP_RadioSlider_Template_01_CM_C_UpdateElementStyle, K2Node_DynamicCast_bSuccess) == 0x000070, "Member 'WBP_RadioSlider_Template_01_CM_C_UpdateElementStyle::K2Node_DynamicCast_bSuccess' has a wrong offset!");

}

