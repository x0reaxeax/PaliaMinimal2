#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Libsodium

#include "Basic.hpp"

#include "Libsodium_classes.hpp"
#include "Libsodium_parameters.hpp"


namespace SDK
{

// Function Libsodium.LibSd_CryptoLibrary.GenerateKeyPair
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<uint8>                           OutPublicKey                                           (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
// TArray<uint8>                           OutSecretKey                                           (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ULibSd_CryptoLibrary::GenerateKeyPair(TArray<uint8>* OutPublicKey, TArray<uint8>* OutSecretKey)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("LibSd_CryptoLibrary", "GenerateKeyPair");

	Params::LibSd_CryptoLibrary_GenerateKeyPair Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutPublicKey != nullptr)
		*OutPublicKey = std::move(Parms.OutPublicKey);

	if (OutSecretKey != nullptr)
		*OutSecretKey = std::move(Parms.OutSecretKey);

	return Parms.ReturnValue;
}


// Function Libsodium.LibSd_CryptoLibrary.InitSodium
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ULibSd_CryptoLibrary::InitSodium()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("LibSd_CryptoLibrary", "InitSodium");

	Params::LibSd_CryptoLibrary_InitSodium Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Libsodium.LibSd_CryptoLibrary.SignMessageWithSecretKey
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<uint8>                           Message                                                (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// TArray<uint8>                           SecretKey                                              (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// TArray<uint8>                           SignedMessage                                          (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ULibSd_CryptoLibrary::SignMessageWithSecretKey(TArray<uint8>& Message, TArray<uint8>& SecretKey, TArray<uint8>* SignedMessage)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("LibSd_CryptoLibrary", "SignMessageWithSecretKey");

	Params::LibSd_CryptoLibrary_SignMessageWithSecretKey Parms{};

	Parms.Message = std::move(Message);
	Parms.SecretKey = std::move(SecretKey);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (SignedMessage != nullptr)
		*SignedMessage = std::move(Parms.SignedMessage);

	return Parms.ReturnValue;
}


// Function Libsodium.LibSd_CryptoLibrary.SignMessageWithSecretKey_Detached
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<uint8>                           Message                                                (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// TArray<uint8>                           SecretKey                                              (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// TArray<uint8>                           Signature                                              (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ULibSd_CryptoLibrary::SignMessageWithSecretKey_Detached(TArray<uint8>& Message, TArray<uint8>& SecretKey, TArray<uint8>* Signature)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("LibSd_CryptoLibrary", "SignMessageWithSecretKey_Detached");

	Params::LibSd_CryptoLibrary_SignMessageWithSecretKey_Detached Parms{};

	Parms.Message = std::move(Message);
	Parms.SecretKey = std::move(SecretKey);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (Signature != nullptr)
		*Signature = std::move(Parms.Signature);

	return Parms.ReturnValue;
}


// Function Libsodium.LibSd_CryptoLibrary.VerifyMessageWithPublicKey
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<uint8>                           SignedMessage                                          (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// TArray<uint8>                           PublicKey                                              (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// TArray<uint8>                           Message                                                (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ULibSd_CryptoLibrary::VerifyMessageWithPublicKey(TArray<uint8>& SignedMessage, TArray<uint8>& PublicKey, TArray<uint8>* Message)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("LibSd_CryptoLibrary", "VerifyMessageWithPublicKey");

	Params::LibSd_CryptoLibrary_VerifyMessageWithPublicKey Parms{};

	Parms.SignedMessage = std::move(SignedMessage);
	Parms.PublicKey = std::move(PublicKey);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (Message != nullptr)
		*Message = std::move(Parms.Message);

	return Parms.ReturnValue;
}


// Function Libsodium.LibSd_CryptoLibrary.VerifyMessageWithPublicKey_Detached
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<uint8>                           Signature                                              (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// TArray<uint8>                           Message                                                (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// TArray<uint8>                           PublicKey                                              (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ULibSd_CryptoLibrary::VerifyMessageWithPublicKey_Detached(TArray<uint8>& Signature, TArray<uint8>& Message, TArray<uint8>& PublicKey)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("LibSd_CryptoLibrary", "VerifyMessageWithPublicKey_Detached");

	Params::LibSd_CryptoLibrary_VerifyMessageWithPublicKey_Detached Parms{};

	Parms.Signature = std::move(Signature);
	Parms.Message = std::move(Message);
	Parms.PublicKey = std::move(PublicKey);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}

}

