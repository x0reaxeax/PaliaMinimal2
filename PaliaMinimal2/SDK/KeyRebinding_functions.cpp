#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: KeyRebinding

#include "Basic.hpp"

#include "KeyRebinding_classes.hpp"
#include "KeyRebinding_parameters.hpp"


namespace SDK
{

// Function KeyRebinding.BindingKeyListenerWidget.DisableInput
// (Final, Native, Public, BlueprintCallable)

void UBindingKeyListenerWidget::DisableInput()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BindingKeyListenerWidget", "DisableInput");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function KeyRebinding.BindingKeyListenerWidget.EnableInput
// (Final, Native, Public, BlueprintCallable)

void UBindingKeyListenerWidget::EnableInput()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BindingKeyListenerWidget", "EnableInput");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// DelegateFunction KeyRebinding.BindingKeyListenerWidget.OnAnyKeyTriggered__DelegateSignature
// (MulticastDelegate, Public, Delegate, HasOutParams)
// Parameters:
// struct FKeyRebind_InputKey              InTriggeredKey                                         (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UBindingKeyListenerWidget::OnAnyKeyTriggered__DelegateSignature(struct FKeyRebind_InputKey& InTriggeredKey)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BindingKeyListenerWidget", "OnAnyKeyTriggered__DelegateSignature");

	Params::BindingKeyListenerWidget_OnAnyKeyTriggered__DelegateSignature Parms{};

	Parms.InTriggeredKey = std::move(InTriggeredKey);

	UObject::ProcessEvent(Func, &Parms);
}


// Function KeyRebinding.BindingKeyListenerWidget.GetPlayerInputKey
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FKeyRebind_InputKey              ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FKeyRebind_InputKey UBindingKeyListenerWidget::GetPlayerInputKey() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BindingKeyListenerWidget", "GetPlayerInputKey");

	Params::BindingKeyListenerWidget_GetPlayerInputKey Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function KeyRebinding.CommonInputActionWidget.HandleControlMappingsRebuilt
// (Final, Native, Protected)

void UCommonInputActionWidget::HandleControlMappingsRebuilt()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CommonInputActionWidget", "HandleControlMappingsRebuilt");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function KeyRebinding.CommonInputActionWidget.HandleInputMethodChanged
// (Final, Native, Protected)
// Parameters:
// ECommonInputType                        InInputType                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UCommonInputActionWidget::HandleInputMethodChanged(ECommonInputType InInputType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CommonInputActionWidget", "HandleInputMethodChanged");

	Params::CommonInputActionWidget_HandleInputMethodChanged Parms{};

	Parms.InInputType = InInputType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function KeyRebinding.CommonInputActionWidget.K2_UpdateActionWidget
// (Event, Protected, BlueprintEvent)
// Parameters:
// ECommonInputType                        InInputType                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UCommonInputActionWidget::K2_UpdateActionWidget(ECommonInputType InInputType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CommonInputActionWidget", "K2_UpdateActionWidget");

	Params::CommonInputActionWidget_K2_UpdateActionWidget Parms{};

	Parms.InInputType = InInputType;

	UObject::ProcessEvent(Func, &Parms);
}


// Function KeyRebinding.CommonInputActionWidget.SetDefaultInputMappingContext
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UInputMappingContext*             InIMC                                                  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UCommonInputActionWidget::SetDefaultInputMappingContext(class UInputMappingContext* InIMC)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CommonInputActionWidget", "SetDefaultInputMappingContext");

	Params::CommonInputActionWidget_SetDefaultInputMappingContext Parms{};

	Parms.InIMC = InIMC;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function KeyRebinding.CommonInputActionWidget.SetEnhancedInputAction
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UInputAction*                     InInputAction                                          (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UCommonInputActionWidget::SetEnhancedInputAction(class UInputAction* InInputAction)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CommonInputActionWidget", "SetEnhancedInputAction");

	Params::CommonInputActionWidget_SetEnhancedInputAction Parms{};

	Parms.InInputAction = InInputAction;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function KeyRebinding.CommonInputActionWidget.UpdateActionWidget
// (Final, Native, Protected, BlueprintCallable)

void UCommonInputActionWidget::UpdateActionWidget()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CommonInputActionWidget", "UpdateActionWidget");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function KeyRebinding.CommonInputActionWidget.UpdateWidgetBySpecialGameplayTag
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FGameplayTag                     GameplayTag                                            (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UCommonInputActionWidget::UpdateWidgetBySpecialGameplayTag(struct FGameplayTag& GameplayTag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CommonInputActionWidget", "UpdateWidgetBySpecialGameplayTag");

	Params::CommonInputActionWidget_UpdateWidgetBySpecialGameplayTag Parms{};

	Parms.GameplayTag = std::move(GameplayTag);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function KeyRebinding.KeyRebindGroupEntryWidget.BP_OnWidgetCreated
// (Event, Public, BlueprintEvent)

void UKeyRebindGroupEntryWidget::BP_OnWidgetCreated()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("KeyRebindGroupEntryWidget", "BP_OnWidgetCreated");

	UObject::ProcessEvent(Func, nullptr);
}


// Function KeyRebinding.KeyRebindGroupEntryWidget.InitializeRebindKey
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UWidget*                          Widget                                                 (ConstParm, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EKeyRebind_KeySlot                      InSlotNum                                              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UKeyRebindGroupEntryWidget::InitializeRebindKey(class UWidget* Widget, EKeyRebind_KeySlot InSlotNum)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("KeyRebindGroupEntryWidget", "InitializeRebindKey");

	Params::KeyRebindGroupEntryWidget_InitializeRebindKey Parms{};

	Parms.Widget = Widget;
	Parms.InSlotNum = InSlotNum;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function KeyRebinding.KeyRebindGroupEntryWidget.InitializeUnbindKey
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UWidget*                          Widget                                                 (ConstParm, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EKeyRebind_KeySlot                      InSlotNum                                              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UKeyRebindGroupEntryWidget::InitializeUnbindKey(class UWidget* Widget, EKeyRebind_KeySlot InSlotNum)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("KeyRebindGroupEntryWidget", "InitializeUnbindKey");

	Params::KeyRebindGroupEntryWidget_InitializeUnbindKey Parms{};

	Parms.Widget = Widget;
	Parms.InSlotNum = InSlotNum;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function KeyRebinding.KeyRebindGroupEntryWidget.InitKeyRebindEntryDesc
// (Native, Event, Public, BlueprintEvent)

void UKeyRebindGroupEntryWidget::InitKeyRebindEntryDesc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("KeyRebindGroupEntryWidget", "InitKeyRebindEntryDesc");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function KeyRebinding.KeyRebindGroupEntryWidget.IsInputActionMatched
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UInputAction*                     InputAction                                            (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UKeyRebindGroupEntryWidget::IsInputActionMatched(class UInputAction* InputAction)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("KeyRebindGroupEntryWidget", "IsInputActionMatched");

	Params::KeyRebindGroupEntryWidget_IsInputActionMatched Parms{};

	Parms.InputAction = InputAction;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function KeyRebinding.KeyRebindGroupEntryWidget.OnIconRefreshed
// (Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// TArray<struct FInputKeysIcon>           RefreshIcons                                           (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void UKeyRebindGroupEntryWidget::OnIconRefreshed(TArray<struct FInputKeysIcon>& RefreshIcons)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("KeyRebindGroupEntryWidget", "OnIconRefreshed");

	Params::KeyRebindGroupEntryWidget_OnIconRefreshed Parms{};

	Parms.RefreshIcons = std::move(RefreshIcons);

	UObject::ProcessEvent(Func, &Parms);
}


// Function KeyRebinding.KeyRebindGroupEntryWidget.RefreshIcon
// (Final, Native, Public, BlueprintCallable)

void UKeyRebindGroupEntryWidget::RefreshIcon()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("KeyRebindGroupEntryWidget", "RefreshIcon");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function KeyRebinding.KeyRebindGroupEntryWidget.GetKeyRebindEntryDesc
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

class FText UKeyRebindGroupEntryWidget::GetKeyRebindEntryDesc() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("KeyRebindGroupEntryWidget", "GetKeyRebindEntryDesc");

	Params::KeyRebindGroupEntryWidget_GetKeyRebindEntryDesc Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function KeyRebinding.KeyRebindGroupEntryWidget.GetKeyRebindEntryDescWithCore
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

class FText UKeyRebindGroupEntryWidget::GetKeyRebindEntryDescWithCore() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("KeyRebindGroupEntryWidget", "GetKeyRebindEntryDescWithCore");

	Params::KeyRebindGroupEntryWidget_GetKeyRebindEntryDescWithCore Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function KeyRebinding.KeyRebindGroupWidget.BP_OnWidgetCreated
// (Event, Public, BlueprintEvent)

void UKeyRebindGroupWidget::BP_OnWidgetCreated()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("KeyRebindGroupWidget", "BP_OnWidgetCreated");

	UObject::ProcessEvent(Func, nullptr);
}


// Function KeyRebinding.KeyRebindGroupWidget.IsEqualGroup
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   InGroup                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UKeyRebindGroupWidget::IsEqualGroup(int32 InGroup)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("KeyRebindGroupWidget", "IsEqualGroup");

	Params::KeyRebindGroupWidget_IsEqualGroup Parms{};

	Parms.InGroup = InGroup;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function KeyRebinding.KeyRebindingSubsystem.ApplyCustomKeyMappings
// (Final, Native, Public, BlueprintCallable)

void UKeyRebindingSubsystem::ApplyCustomKeyMappings()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("KeyRebindingSubsystem", "ApplyCustomKeyMappings");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function KeyRebinding.KeyRebindingSubsystem.AttemptRebinding
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UInputAction*                     InputAction                                            (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EKeyRebind_KeySlot                      Slot                                                   (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FKeyRebind_InputKey              Keys                                                   (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// ECommonInputType                        InputType                                              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FKeyRebind_BindingResult         OutResult                                              (Parm, OutParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UKeyRebindingSubsystem::AttemptRebinding(class UInputAction* InputAction, EKeyRebind_KeySlot Slot, struct FKeyRebind_InputKey& Keys, ECommonInputType InputType, struct FKeyRebind_BindingResult* OutResult)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("KeyRebindingSubsystem", "AttemptRebinding");

	Params::KeyRebindingSubsystem_AttemptRebinding Parms{};

	Parms.InputAction = InputAction;
	Parms.Slot = Slot;
	Parms.Keys = std::move(Keys);
	Parms.InputType = InputType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutResult != nullptr)
		*OutResult = std::move(Parms.OutResult);

	return Parms.ReturnValue;
}


// Function KeyRebinding.KeyRebindingSubsystem.AttemptUnbinding
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UInputAction*                     InputAction                                            (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EKeyRebind_KeySlot                      Slot                                                   (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ECommonInputType                        InputType                                              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FKeyRebind_UnbindingResult       OutResult                                              (Parm, OutParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UKeyRebindingSubsystem::AttemptUnbinding(class UInputAction* InputAction, EKeyRebind_KeySlot Slot, ECommonInputType InputType, struct FKeyRebind_UnbindingResult* OutResult)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("KeyRebindingSubsystem", "AttemptUnbinding");

	Params::KeyRebindingSubsystem_AttemptUnbinding Parms{};

	Parms.InputAction = InputAction;
	Parms.Slot = Slot;
	Parms.InputType = InputType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutResult != nullptr)
		*OutResult = std::move(Parms.OutResult);

	return Parms.ReturnValue;
}


// DelegateFunction KeyRebinding.KeyRebindingSubsystem.KeyRebindingResultDelegate__DelegateSignature
// (MulticastDelegate, Public, Delegate, HasOutParams)
// Parameters:
// ECommonInputType                        InputType                                              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FKeyRebind_BindingResult         BindingResult                                          (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UKeyRebindingSubsystem::KeyRebindingResultDelegate__DelegateSignature(ECommonInputType InputType, struct FKeyRebind_BindingResult& BindingResult)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("KeyRebindingSubsystem", "KeyRebindingResultDelegate__DelegateSignature");

	Params::KeyRebindingSubsystem_KeyRebindingResultDelegate__DelegateSignature Parms{};

	Parms.InputType = InputType;
	Parms.BindingResult = std::move(BindingResult);

	UObject::ProcessEvent(Func, &Parms);
}


// DelegateFunction KeyRebinding.KeyRebindingSubsystem.KeyUnbindingResultDelegate__DelegateSignature
// (MulticastDelegate, Public, Delegate, HasOutParams)
// Parameters:
// ECommonInputType                        InputType                                              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FKeyRebind_UnbindingResult       UnbindingResult                                        (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UKeyRebindingSubsystem::KeyUnbindingResultDelegate__DelegateSignature(ECommonInputType InputType, struct FKeyRebind_UnbindingResult& UnbindingResult)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("KeyRebindingSubsystem", "KeyUnbindingResultDelegate__DelegateSignature");

	Params::KeyRebindingSubsystem_KeyUnbindingResultDelegate__DelegateSignature Parms{};

	Parms.InputType = InputType;
	Parms.UnbindingResult = std::move(UnbindingResult);

	UObject::ProcessEvent(Func, &Parms);
}


// Function KeyRebinding.KeyRebindingSubsystem.ResetToDefaultMappings
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// ECommonInputType                        InputType                                              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bEffectImmediately                                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UKeyRebindingSubsystem::ResetToDefaultMappings(ECommonInputType InputType, bool bEffectImmediately)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("KeyRebindingSubsystem", "ResetToDefaultMappings");

	Params::KeyRebindingSubsystem_ResetToDefaultMappings Parms{};

	Parms.InputType = InputType;
	Parms.bEffectImmediately = bEffectImmediately;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// DelegateFunction KeyRebinding.KeyRebindingSubsystem.SimpleKeyRebindingSystemDelegate__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// ECommonInputType                        InputType                                              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UKeyRebindingSubsystem::SimpleKeyRebindingSystemDelegate__DelegateSignature(ECommonInputType InputType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("KeyRebindingSubsystem", "SimpleKeyRebindingSystemDelegate__DelegateSignature");

	Params::KeyRebindingSubsystem_SimpleKeyRebindingSystemDelegate__DelegateSignature Parms{};

	Parms.InputType = InputType;

	UObject::ProcessEvent(Func, &Parms);
}


// Function KeyRebinding.KeyRebindingSubsystem.GetInputActionKeys
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UInputAction*                     InputAction                                            (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ECommonInputType                        InputType                                              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<struct FKeyRebind_InputKey>      OutKeys                                                (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void UKeyRebindingSubsystem::GetInputActionKeys(class UInputAction* InputAction, ECommonInputType InputType, TArray<struct FKeyRebind_InputKey>* OutKeys) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("KeyRebindingSubsystem", "GetInputActionKeys");

	Params::KeyRebindingSubsystem_GetInputActionKeys Parms{};

	Parms.InputAction = InputAction;
	Parms.InputType = InputType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutKeys != nullptr)
		*OutKeys = std::move(Parms.OutKeys);
}


// Function KeyRebinding.KeyRebindingSubsystem.GetRebindings
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// ECommonInputType                        InputType                                              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<struct FKeyRebind_KeyMappingEntry>ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, ContainsInstancedReference, NativeAccessSpecifierPublic)

TArray<struct FKeyRebind_KeyMappingEntry> UKeyRebindingSubsystem::GetRebindings(ECommonInputType InputType) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("KeyRebindingSubsystem", "GetRebindings");

	Params::KeyRebindingSubsystem_GetRebindings Parms{};

	Parms.InputType = InputType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function KeyRebinding.KeyRebindingUtils.GetCommonInputSystem
// (Final, BlueprintCosmetic, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class UCommonInputSubsystem*      ReturnValue                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const class UCommonInputSubsystem* UKeyRebindingUtils::GetCommonInputSystem(class UObject* WorldContextObject)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("KeyRebindingUtils", "GetCommonInputSystem");

	Params::KeyRebindingUtils_GetCommonInputSystem Parms{};

	Parms.WorldContextObject = WorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function KeyRebinding.KeyRebindingUtils.GetEnhancedInputSubsystem
// (Final, BlueprintCosmetic, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UEnhancedInputSubsystemWithKeyRebinding*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UEnhancedInputSubsystemWithKeyRebinding* UKeyRebindingUtils::GetEnhancedInputSubsystem(class UObject* WorldContextObject)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("KeyRebindingUtils", "GetEnhancedInputSubsystem");

	Params::KeyRebindingUtils_GetEnhancedInputSubsystem Parms{};

	Parms.WorldContextObject = WorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function KeyRebinding.KeyRebindingUtils.GetIconForEnhancedInputAction
// (Final, BlueprintCosmetic, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UInputAction*                     InputAction                                            (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ECommonInputType                        InputType                                              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGameplayTag                     SpecialTag                                             (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FSlateBrush                      OutMainKeyBrush                                        (Parm, OutParm, NativeAccessSpecifierPublic)
// struct FSlateBrush                      OutChordKeyBrush                                       (Parm, OutParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UKeyRebindingUtils::GetIconForEnhancedInputAction(class UObject* WorldContextObject, class UInputAction* InputAction, ECommonInputType InputType, struct FGameplayTag& SpecialTag, struct FSlateBrush* OutMainKeyBrush, struct FSlateBrush* OutChordKeyBrush)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("KeyRebindingUtils", "GetIconForEnhancedInputAction");

	Params::KeyRebindingUtils_GetIconForEnhancedInputAction Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.InputAction = InputAction;
	Parms.InputType = InputType;
	Parms.SpecialTag = std::move(SpecialTag);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutMainKeyBrush != nullptr)
		*OutMainKeyBrush = std::move(Parms.OutMainKeyBrush);

	if (OutChordKeyBrush != nullptr)
		*OutChordKeyBrush = std::move(Parms.OutChordKeyBrush);

	return Parms.ReturnValue;
}


// Function KeyRebinding.KeyRebindingUtils.GetInputType
// (Final, BlueprintCosmetic, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class FName                             IMCInputTypeIdentification                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FKey                             TestKey                                                (ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ECommonInputType                        OutInputTyp                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UKeyRebindingUtils::GetInputType(class FName IMCInputTypeIdentification, struct FKey& TestKey, ECommonInputType* OutInputTyp)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("KeyRebindingUtils", "GetInputType");

	Params::KeyRebindingUtils_GetInputType Parms{};

	Parms.IMCInputTypeIdentification = IMCInputTypeIdentification;
	Parms.TestKey = std::move(TestKey);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutInputTyp != nullptr)
		*OutInputTyp = Parms.OutInputTyp;

	return Parms.ReturnValue;
}


// Function KeyRebinding.KeyRebindingUtils.GetKeyIcons
// (Final, BlueprintCosmetic, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FInputKeys                       InputKeys                                              (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// ECommonInputType                        InputType                                              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGameplayTag                     SpecialTag                                             (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FSlateBrush                      OutMainKeyBrush                                        (Parm, OutParm, NativeAccessSpecifierPublic)
// struct FSlateBrush                      OutChordKeyBrush                                       (Parm, OutParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UKeyRebindingUtils::GetKeyIcons(class UObject* WorldContextObject, struct FInputKeys& InputKeys, ECommonInputType InputType, struct FGameplayTag& SpecialTag, struct FSlateBrush* OutMainKeyBrush, struct FSlateBrush* OutChordKeyBrush)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("KeyRebindingUtils", "GetKeyIcons");

	Params::KeyRebindingUtils_GetKeyIcons Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.InputKeys = std::move(InputKeys);
	Parms.InputType = InputType;
	Parms.SpecialTag = std::move(SpecialTag);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutMainKeyBrush != nullptr)
		*OutMainKeyBrush = std::move(Parms.OutMainKeyBrush);

	if (OutChordKeyBrush != nullptr)
		*OutChordKeyBrush = std::move(Parms.OutChordKeyBrush);

	return Parms.ReturnValue;
}


// Function KeyRebinding.KeyRebindingUtils.GetKeyIconsWithIMC
// (Final, BlueprintCosmetic, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UInputMappingContext*             MappingContext                                         (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UInputAction*                     InputAction                                            (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ECommonInputType                        InputType                                              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGameplayTag                     SpecialTag                                             (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FSlateBrush                      OutMainKeyBrush                                        (Parm, OutParm, NativeAccessSpecifierPublic)
// struct FSlateBrush                      OutChordKeyBrush                                       (Parm, OutParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UKeyRebindingUtils::GetKeyIconsWithIMC(class UObject* WorldContextObject, class UInputMappingContext* MappingContext, class UInputAction* InputAction, ECommonInputType InputType, struct FGameplayTag& SpecialTag, struct FSlateBrush* OutMainKeyBrush, struct FSlateBrush* OutChordKeyBrush)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("KeyRebindingUtils", "GetKeyIconsWithIMC");

	Params::KeyRebindingUtils_GetKeyIconsWithIMC Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.MappingContext = MappingContext;
	Parms.InputAction = InputAction;
	Parms.InputType = InputType;
	Parms.SpecialTag = std::move(SpecialTag);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutMainKeyBrush != nullptr)
		*OutMainKeyBrush = std::move(Parms.OutMainKeyBrush);

	if (OutChordKeyBrush != nullptr)
		*OutChordKeyBrush = std::move(Parms.OutChordKeyBrush);

	return Parms.ReturnValue;
}


// Function KeyRebinding.KeyRebindingUtils.GetKeyName
// (Final, BlueprintCosmetic, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FKey                             Key                                                    (ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

class FText UKeyRebindingUtils::GetKeyName(struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("KeyRebindingUtils", "GetKeyName");

	Params::KeyRebindingUtils_GetKeyName Parms{};

	Parms.Key = std::move(Key);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function KeyRebinding.KeyRebindingUtils.GetKeyRebindingSystem
// (Final, BlueprintCosmetic, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UKeyRebindingSubsystem*           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UKeyRebindingSubsystem* UKeyRebindingUtils::GetKeyRebindingSystem(class UObject* WorldContextObject)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("KeyRebindingUtils", "GetKeyRebindingSystem");

	Params::KeyRebindingUtils_GetKeyRebindingSystem Parms{};

	Parms.WorldContextObject = WorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function KeyRebinding.KeyRebindingUtils.GetKeysForEnhancedInputAction
// (Final, BlueprintCosmetic, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UInputAction*                     InputAction                                            (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ECommonInputType                        InputType                                              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FInputKeys                       OutKeys                                                (Parm, OutParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UKeyRebindingUtils::GetKeysForEnhancedInputAction(class UObject* WorldContextObject, class UInputAction* InputAction, ECommonInputType InputType, struct FInputKeys* OutKeys)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("KeyRebindingUtils", "GetKeysForEnhancedInputAction");

	Params::KeyRebindingUtils_GetKeysForEnhancedInputAction Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.InputAction = InputAction;
	Parms.InputType = InputType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutKeys != nullptr)
		*OutKeys = std::move(Parms.OutKeys);

	return Parms.ReturnValue;
}


// Function KeyRebinding.KeyRebindingUtils.GetLocalPlayer
// (Final, BlueprintCosmetic, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class ULocalPlayer*               ReturnValue                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const class ULocalPlayer* UKeyRebindingUtils::GetLocalPlayer(class UObject* WorldContextObject)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("KeyRebindingUtils", "GetLocalPlayer");

	Params::KeyRebindingUtils_GetLocalPlayer Parms{};

	Parms.WorldContextObject = WorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function KeyRebinding.KeyRebindingUtils.GetPromptDelayTime
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UKeyRebindingUtils::GetPromptDelayTime()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("KeyRebindingUtils", "GetPromptDelayTime");

	Params::KeyRebindingUtils_GetPromptDelayTime Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function KeyRebinding.KeyRebindingUtils.GetSpecialKeys
// (Final, BlueprintCosmetic, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// ECommonInputType                        TestInputType                                          (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<struct FKey>                     OutSpecialKeys                                         (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void UKeyRebindingUtils::GetSpecialKeys(ECommonInputType TestInputType, TArray<struct FKey>* OutSpecialKeys)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("KeyRebindingUtils", "GetSpecialKeys");

	Params::KeyRebindingUtils_GetSpecialKeys Parms{};

	Parms.TestInputType = TestInputType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutSpecialKeys != nullptr)
		*OutSpecialKeys = std::move(Parms.OutSpecialKeys);
}


// Function KeyRebinding.KeyRebindingUtils.IsMatchingInputType
// (Final, BlueprintCosmetic, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// ECommonInputType                        InputType                                              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FKey                             TestKey                                                (ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UKeyRebindingUtils::IsMatchingInputType(ECommonInputType InputType, struct FKey& TestKey)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("KeyRebindingUtils", "IsMatchingInputType");

	Params::KeyRebindingUtils_IsMatchingInputType Parms{};

	Parms.InputType = InputType;
	Parms.TestKey = std::move(TestKey);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function KeyRebinding.KeyRebindSettingsWidgetBase.ApplyCustomConfig
// (Final, Native, Public, BlueprintCallable)

void UKeyRebindSettingsWidgetBase::ApplyCustomConfig()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("KeyRebindSettingsWidgetBase", "ApplyCustomConfig");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function KeyRebinding.KeyRebindSettingsWidgetBase.BP_OnSubWidgetInitCompleted
// (Event, Public, BlueprintEvent)

void UKeyRebindSettingsWidgetBase::BP_OnSubWidgetInitCompleted()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("KeyRebindSettingsWidgetBase", "BP_OnSubWidgetInitCompleted");

	UObject::ProcessEvent(Func, nullptr);
}


// Function KeyRebinding.KeyRebindSettingsWidgetBase.CreateKeyRebindGroupWidget
// (Native, Event, Protected, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<struct FKeyRebind_KeyMappingEntry>InKeyRebindInfo                                        (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, ContainsInstancedReference, NativeAccessSpecifierPublic)

void UKeyRebindSettingsWidgetBase::CreateKeyRebindGroupWidget(TArray<struct FKeyRebind_KeyMappingEntry>& InKeyRebindInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("KeyRebindSettingsWidgetBase", "CreateKeyRebindGroupWidget");

	Params::KeyRebindSettingsWidgetBase_CreateKeyRebindGroupWidget Parms{};

	Parms.InKeyRebindInfo = std::move(InKeyRebindInfo);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function KeyRebinding.KeyRebindSettingsWidgetBase.InitializeRebindKey
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UWidget*                          Widget                                                 (ConstParm, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UInputAction*                     InInputAction                                          (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EKeyRebind_KeySlot                      InSlotNum                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UKeyRebindSettingsWidgetBase::InitializeRebindKey(class UWidget* Widget, class UInputAction* InInputAction, EKeyRebind_KeySlot InSlotNum)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("KeyRebindSettingsWidgetBase", "InitializeRebindKey");

	Params::KeyRebindSettingsWidgetBase_InitializeRebindKey Parms{};

	Parms.Widget = Widget;
	Parms.InInputAction = InInputAction;
	Parms.InSlotNum = InSlotNum;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function KeyRebinding.KeyRebindSettingsWidgetBase.InitializeUnbindKey
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UWidget*                          Widget                                                 (ConstParm, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UInputAction*                     InInputAction                                          (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EKeyRebind_KeySlot                      InSlotNum                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UKeyRebindSettingsWidgetBase::InitializeUnbindKey(class UWidget* Widget, class UInputAction* InInputAction, EKeyRebind_KeySlot InSlotNum)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("KeyRebindSettingsWidgetBase", "InitializeUnbindKey");

	Params::KeyRebindSettingsWidgetBase_InitializeUnbindKey Parms{};

	Parms.Widget = Widget;
	Parms.InInputAction = InInputAction;
	Parms.InSlotNum = InSlotNum;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function KeyRebinding.KeyRebindSettingsWidgetBase.OnAnyKeyTriggered
// (Native, Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// struct FKeyRebind_InputKey              InInputKeys                                            (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UKeyRebindSettingsWidgetBase::OnAnyKeyTriggered(struct FKeyRebind_InputKey& InInputKeys)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("KeyRebindSettingsWidgetBase", "OnAnyKeyTriggered");

	Params::KeyRebindSettingsWidgetBase_OnAnyKeyTriggered Parms{};

	Parms.InInputKeys = std::move(InInputKeys);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function KeyRebinding.KeyRebindSettingsWidgetBase.OnKeyRebindBegin
// (Event, Public, BlueprintEvent)
// Parameters:
// class UWidget*                          Widget                                                 (ConstParm, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bIsRebinding                                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UKeyRebindSettingsWidgetBase::OnKeyRebindBegin(class UWidget* Widget, bool bIsRebinding)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("KeyRebindSettingsWidgetBase", "OnKeyRebindBegin");

	Params::KeyRebindSettingsWidgetBase_OnKeyRebindBegin Parms{};

	Parms.Widget = Widget;
	Parms.bIsRebinding = bIsRebinding;

	UObject::ProcessEvent(Func, &Parms);
}


// Function KeyRebinding.KeyRebindSettingsWidgetBase.OnKeyRebindEnd
// (Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// struct FKeyRebind_DisplayResult         ResultInfo                                             (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    bIsRebinding                                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UKeyRebindSettingsWidgetBase::OnKeyRebindEnd(struct FKeyRebind_DisplayResult& ResultInfo, bool bIsRebinding)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("KeyRebindSettingsWidgetBase", "OnKeyRebindEnd");

	Params::KeyRebindSettingsWidgetBase_OnKeyRebindEnd Parms{};

	Parms.ResultInfo = std::move(ResultInfo);
	Parms.bIsRebinding = bIsRebinding;

	UObject::ProcessEvent(Func, &Parms);
}


// Function KeyRebinding.KeyRebindSettingsWidgetBase.RefreshSubWidget
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FKeyRebind_DisplayResult         ResultInfo                                             (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    bRefreshAll                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UKeyRebindSettingsWidgetBase::RefreshSubWidget(struct FKeyRebind_DisplayResult& ResultInfo, bool bRefreshAll)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("KeyRebindSettingsWidgetBase", "RefreshSubWidget");

	Params::KeyRebindSettingsWidgetBase_RefreshSubWidget Parms{};

	Parms.ResultInfo = std::move(ResultInfo);
	Parms.bRefreshAll = bRefreshAll;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function KeyRebinding.KeyRebindSettingsWidgetBase.ResetToDefaultConfig
// (Final, Native, Public, BlueprintCallable)

void UKeyRebindSettingsWidgetBase::ResetToDefaultConfig()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("KeyRebindSettingsWidgetBase", "ResetToDefaultConfig");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function KeyRebinding.KeyRebindSettingsWidgetBase.GetDescriptionofInputAction
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UInputAction*                     InInputAction                                          (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

class FText UKeyRebindSettingsWidgetBase::GetDescriptionofInputAction(class UInputAction* InInputAction) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("KeyRebindSettingsWidgetBase", "GetDescriptionofInputAction");

	Params::KeyRebindSettingsWidgetBase_GetDescriptionofInputAction Parms{};

	Parms.InInputAction = InInputAction;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function KeyRebinding.KeyRebindSettingsWidgetBase.HasAnyKeyNotBound
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UKeyRebindSettingsWidgetBase::HasAnyKeyNotBound() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("KeyRebindSettingsWidgetBase", "HasAnyKeyNotBound");

	Params::KeyRebindSettingsWidgetBase_HasAnyKeyNotBound Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function KeyRebinding.KeyRebindValidatorBase.TestReBindingValidation
// (Native, Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// ECommonInputType                        InputType                                              (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UInputAction*                     InputAction                                            (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EKeyRebind_KeySlot                      Slot                                                   (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FKeyRebind_InputKey              Keys                                                   (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// TArray<class FText>                     OutErrorMessages                                       (Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// EKeyRebindValidationResult              ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EKeyRebindValidationResult UKeyRebindValidatorBase::TestReBindingValidation(ECommonInputType& InputType, class UInputAction* InputAction, EKeyRebind_KeySlot& Slot, struct FKeyRebind_InputKey& Keys, TArray<class FText>& OutErrorMessages)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("KeyRebindValidatorBase", "TestReBindingValidation");

	Params::KeyRebindValidatorBase_TestReBindingValidation Parms{};

	Parms.InputType = InputType;
	Parms.InputAction = InputAction;
	Parms.Slot = Slot;
	Parms.Keys = std::move(Keys);
	Parms.OutErrorMessages = std::move(OutErrorMessages);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	OutErrorMessages = std::move(Parms.OutErrorMessages);

	return Parms.ReturnValue;
}


// Function KeyRebinding.KeyRebindValidatorBase.TestUnBindingValidation
// (Native, Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// ECommonInputType                        InputType                                              (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UInputAction*                     InputAction                                            (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EKeyRebind_KeySlot                      Slot                                                   (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class FText>                     OutErrorMessages                                       (Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// EKeyRebindValidationResult              ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EKeyRebindValidationResult UKeyRebindValidatorBase::TestUnBindingValidation(ECommonInputType& InputType, class UInputAction* InputAction, EKeyRebind_KeySlot& Slot, TArray<class FText>& OutErrorMessages)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("KeyRebindValidatorBase", "TestUnBindingValidation");

	Params::KeyRebindValidatorBase_TestUnBindingValidation Parms{};

	Parms.InputType = InputType;
	Parms.InputAction = InputAction;
	Parms.Slot = Slot;
	Parms.OutErrorMessages = std::move(OutErrorMessages);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	OutErrorMessages = std::move(Parms.OutErrorMessages);

	return Parms.ReturnValue;
}


// Function KeyRebinding.KeyRebindValidatorBase.CanValidate
// (Native, Event, Public, HasOutParams, BlueprintEvent, Const)
// Parameters:
// EKeyRebindValidationExcuteType          InExcuteType                                           (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UKeyRebindValidatorBase::CanValidate(EKeyRebindValidationExcuteType& InExcuteType) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("KeyRebindValidatorBase", "CanValidate");

	Params::KeyRebindValidatorBase_CanValidate Parms{};

	Parms.InExcuteType = InExcuteType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}

}

