#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_Compass

#include "Basic.hpp"

#include "Palia_structs.hpp"
#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "Slate_structs.hpp"
#include "SlateCore_structs.hpp"


namespace SDK::Params
{

// Function WBP_Compass.WBP_Compass_C.AddToTrackerPanel
// 0x0068 (0x0068 - 0x0000)
struct WBP_Compass_C_AddToTrackerPanel final
{
public:
	class UWBP_Compass_Tick_ActorTracker_C*       Tracker;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x0008(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCanvasPanelSlot*                       CallFunc_SlotAsCanvasSlot_ReturnValue;             // 0x0018(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UPanelSlot*                             CallFunc_AddChild_ReturnValue;                     // 0x0020(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue_1;               // 0x0028(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue_2;               // 0x0038(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FAnchors                               K2Node_MakeStruct_Anchors;                         // 0x0048(0x0020)(NoDestructor)
};
static_assert(alignof(WBP_Compass_C_AddToTrackerPanel) == 0x000008, "Wrong alignment on WBP_Compass_C_AddToTrackerPanel");
static_assert(sizeof(WBP_Compass_C_AddToTrackerPanel) == 0x000068, "Wrong size on WBP_Compass_C_AddToTrackerPanel");
static_assert(offsetof(WBP_Compass_C_AddToTrackerPanel, Tracker) == 0x000000, "Member 'WBP_Compass_C_AddToTrackerPanel::Tracker' has a wrong offset!");
static_assert(offsetof(WBP_Compass_C_AddToTrackerPanel, CallFunc_MakeVector2D_ReturnValue) == 0x000008, "Member 'WBP_Compass_C_AddToTrackerPanel::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Compass_C_AddToTrackerPanel, CallFunc_SlotAsCanvasSlot_ReturnValue) == 0x000018, "Member 'WBP_Compass_C_AddToTrackerPanel::CallFunc_SlotAsCanvasSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Compass_C_AddToTrackerPanel, CallFunc_AddChild_ReturnValue) == 0x000020, "Member 'WBP_Compass_C_AddToTrackerPanel::CallFunc_AddChild_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Compass_C_AddToTrackerPanel, CallFunc_MakeVector2D_ReturnValue_1) == 0x000028, "Member 'WBP_Compass_C_AddToTrackerPanel::CallFunc_MakeVector2D_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_Compass_C_AddToTrackerPanel, CallFunc_MakeVector2D_ReturnValue_2) == 0x000038, "Member 'WBP_Compass_C_AddToTrackerPanel::CallFunc_MakeVector2D_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_Compass_C_AddToTrackerPanel, K2Node_MakeStruct_Anchors) == 0x000048, "Member 'WBP_Compass_C_AddToTrackerPanel::K2Node_MakeStruct_Anchors' has a wrong offset!");

// Function WBP_Compass.WBP_Compass_C.AddTracker
// 0x01F0 (0x01F0 - 0x0000)
struct WBP_Compass_C_AddTracker final
{
public:
	class UTrackingComponent*                     TrackingComponentObject;                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, InstancedReference, ReferenceParm, NoDestructor, HasGetValueTypeHash)
	struct FTrackedItemInfo                       TrackedItemInfo;                                   // 0x0008(0x0148)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	bool                                          bIsFocused;                                        // 0x0150(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ShouldShowOnCompass_bShouldShow;          // 0x0151(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4F4E[0x6];                                     // 0x0152(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x0158(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UUserWidget*                            CallFunc_GetWidgetFromPool_ReturnValue;            // 0x0160(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UWBP_Compass_Tick_ActorTracker_C*       K2Node_DynamicCast_AsWBP_Compass_Tick_Actor_Tracker; // 0x0168(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0170(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4F4F[0x7];                                     // 0x0171(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUserWidget*                            CallFunc_GetWidgetFromPool_ReturnValue_1;          // 0x0178(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UWBP_Compass_Tick_ActorTracker_C*       K2Node_DynamicCast_AsWBP_Compass_Tick_Actor_Tracker_1; // 0x0180(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0188(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4F50[0x7];                                     // 0x0189(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPanelSlot*                             CallFunc_AddChild_ReturnValue;                     // 0x0190(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UWBP_Compass_Tick_ActorTracker_C*       CallFunc_Map_Find_Value;                           // 0x0198(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x01A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4F51[0x7];                                     // 0x01A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_Compass_Tick_ActorTracker_C*       CallFunc_Map_Find_Value_1;                         // 0x01A8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue_1;                   // 0x01B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x01B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4F52[0x6];                                     // 0x01B2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue_1;            // 0x01B8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TSoftObjectPtr<class UTexture2D>              K2Node_Select_Default;                             // 0x01C0(0x0028)(UObjectWrapper, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidSoftObjectReference_ReturnValue;   // 0x01E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Compass_C_AddTracker) == 0x000008, "Wrong alignment on WBP_Compass_C_AddTracker");
static_assert(sizeof(WBP_Compass_C_AddTracker) == 0x0001F0, "Wrong size on WBP_Compass_C_AddTracker");
static_assert(offsetof(WBP_Compass_C_AddTracker, TrackingComponentObject) == 0x000000, "Member 'WBP_Compass_C_AddTracker::TrackingComponentObject' has a wrong offset!");
static_assert(offsetof(WBP_Compass_C_AddTracker, TrackedItemInfo) == 0x000008, "Member 'WBP_Compass_C_AddTracker::TrackedItemInfo' has a wrong offset!");
static_assert(offsetof(WBP_Compass_C_AddTracker, bIsFocused) == 0x000150, "Member 'WBP_Compass_C_AddTracker::bIsFocused' has a wrong offset!");
static_assert(offsetof(WBP_Compass_C_AddTracker, CallFunc_ShouldShowOnCompass_bShouldShow) == 0x000151, "Member 'WBP_Compass_C_AddTracker::CallFunc_ShouldShowOnCompass_bShouldShow' has a wrong offset!");
static_assert(offsetof(WBP_Compass_C_AddTracker, CallFunc_GetOwningPlayer_ReturnValue) == 0x000158, "Member 'WBP_Compass_C_AddTracker::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Compass_C_AddTracker, CallFunc_GetWidgetFromPool_ReturnValue) == 0x000160, "Member 'WBP_Compass_C_AddTracker::CallFunc_GetWidgetFromPool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Compass_C_AddTracker, K2Node_DynamicCast_AsWBP_Compass_Tick_Actor_Tracker) == 0x000168, "Member 'WBP_Compass_C_AddTracker::K2Node_DynamicCast_AsWBP_Compass_Tick_Actor_Tracker' has a wrong offset!");
static_assert(offsetof(WBP_Compass_C_AddTracker, K2Node_DynamicCast_bSuccess) == 0x000170, "Member 'WBP_Compass_C_AddTracker::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_Compass_C_AddTracker, CallFunc_GetWidgetFromPool_ReturnValue_1) == 0x000178, "Member 'WBP_Compass_C_AddTracker::CallFunc_GetWidgetFromPool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_Compass_C_AddTracker, K2Node_DynamicCast_AsWBP_Compass_Tick_Actor_Tracker_1) == 0x000180, "Member 'WBP_Compass_C_AddTracker::K2Node_DynamicCast_AsWBP_Compass_Tick_Actor_Tracker_1' has a wrong offset!");
static_assert(offsetof(WBP_Compass_C_AddTracker, K2Node_DynamicCast_bSuccess_1) == 0x000188, "Member 'WBP_Compass_C_AddTracker::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(WBP_Compass_C_AddTracker, CallFunc_AddChild_ReturnValue) == 0x000190, "Member 'WBP_Compass_C_AddTracker::CallFunc_AddChild_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Compass_C_AddTracker, CallFunc_Map_Find_Value) == 0x000198, "Member 'WBP_Compass_C_AddTracker::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(WBP_Compass_C_AddTracker, CallFunc_Map_Find_ReturnValue) == 0x0001A0, "Member 'WBP_Compass_C_AddTracker::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Compass_C_AddTracker, CallFunc_Map_Find_Value_1) == 0x0001A8, "Member 'WBP_Compass_C_AddTracker::CallFunc_Map_Find_Value_1' has a wrong offset!");
static_assert(offsetof(WBP_Compass_C_AddTracker, CallFunc_Map_Find_ReturnValue_1) == 0x0001B0, "Member 'WBP_Compass_C_AddTracker::CallFunc_Map_Find_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_Compass_C_AddTracker, Temp_bool_Variable) == 0x0001B1, "Member 'WBP_Compass_C_AddTracker::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Compass_C_AddTracker, CallFunc_GetOwningPlayer_ReturnValue_1) == 0x0001B8, "Member 'WBP_Compass_C_AddTracker::CallFunc_GetOwningPlayer_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_Compass_C_AddTracker, K2Node_Select_Default) == 0x0001C0, "Member 'WBP_Compass_C_AddTracker::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_Compass_C_AddTracker, CallFunc_IsValidSoftObjectReference_ReturnValue) == 0x0001E8, "Member 'WBP_Compass_C_AddTracker::CallFunc_IsValidSoftObjectReference_ReturnValue' has a wrong offset!");

// Function WBP_Compass.WBP_Compass_C.ClearAllTrackers
// 0x0058 (0x0058 - 0x0000)
struct WBP_Compass_C_ClearAllTrackers final
{
public:
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UWBP_Compass_Tick_ActorTracker_C*> CallFunc_Map_Values_Values;                        // 0x0018(0x0010)(ReferenceParm, ContainsInstancedReference)
	TArray<class UWBP_Compass_Tick_ActorTracker_C*> CallFunc_Map_Values_Values_1;                      // 0x0028(0x0010)(ReferenceParm, ContainsInstancedReference)
	class UWBP_Compass_Tick_ActorTracker_C*       CallFunc_Array_Get_Item;                           // 0x0038(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UWBP_Compass_Tick_ActorTracker_C*       CallFunc_Array_Get_Item_1;                         // 0x0040(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Compass_C_ClearAllTrackers) == 0x000008, "Wrong alignment on WBP_Compass_C_ClearAllTrackers");
static_assert(sizeof(WBP_Compass_C_ClearAllTrackers) == 0x000058, "Wrong size on WBP_Compass_C_ClearAllTrackers");
static_assert(offsetof(WBP_Compass_C_ClearAllTrackers, Temp_int_Loop_Counter_Variable) == 0x000000, "Member 'WBP_Compass_C_ClearAllTrackers::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Compass_C_ClearAllTrackers, CallFunc_Add_IntInt_ReturnValue) == 0x000004, "Member 'WBP_Compass_C_ClearAllTrackers::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Compass_C_ClearAllTrackers, Temp_int_Array_Index_Variable) == 0x000008, "Member 'WBP_Compass_C_ClearAllTrackers::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Compass_C_ClearAllTrackers, Temp_int_Array_Index_Variable_1) == 0x00000C, "Member 'WBP_Compass_C_ClearAllTrackers::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_Compass_C_ClearAllTrackers, Temp_int_Loop_Counter_Variable_1) == 0x000010, "Member 'WBP_Compass_C_ClearAllTrackers::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_Compass_C_ClearAllTrackers, CallFunc_Add_IntInt_ReturnValue_1) == 0x000014, "Member 'WBP_Compass_C_ClearAllTrackers::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_Compass_C_ClearAllTrackers, CallFunc_Map_Values_Values) == 0x000018, "Member 'WBP_Compass_C_ClearAllTrackers::CallFunc_Map_Values_Values' has a wrong offset!");
static_assert(offsetof(WBP_Compass_C_ClearAllTrackers, CallFunc_Map_Values_Values_1) == 0x000028, "Member 'WBP_Compass_C_ClearAllTrackers::CallFunc_Map_Values_Values_1' has a wrong offset!");
static_assert(offsetof(WBP_Compass_C_ClearAllTrackers, CallFunc_Array_Get_Item) == 0x000038, "Member 'WBP_Compass_C_ClearAllTrackers::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_Compass_C_ClearAllTrackers, CallFunc_Array_Get_Item_1) == 0x000040, "Member 'WBP_Compass_C_ClearAllTrackers::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(WBP_Compass_C_ClearAllTrackers, CallFunc_Array_Length_ReturnValue) == 0x000048, "Member 'WBP_Compass_C_ClearAllTrackers::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Compass_C_ClearAllTrackers, CallFunc_Array_Length_ReturnValue_1) == 0x00004C, "Member 'WBP_Compass_C_ClearAllTrackers::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_Compass_C_ClearAllTrackers, CallFunc_Less_IntInt_ReturnValue) == 0x000050, "Member 'WBP_Compass_C_ClearAllTrackers::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Compass_C_ClearAllTrackers, CallFunc_Less_IntInt_ReturnValue_1) == 0x000051, "Member 'WBP_Compass_C_ClearAllTrackers::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");

// Function WBP_Compass.WBP_Compass_C.ExecuteUbergraph_WBP_Compass
// 0x06E0 (0x06E0 - 0x0000)
struct WBP_Compass_C_ExecuteUbergraph_WBP_Compass final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EValeriaFuncResult                            CallFunc_GetValeriaPlayerController_OutResult;     // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4F53[0x2];                                     // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class AValeriaPlayerController*               CallFunc_GetValeriaPlayerController_ReturnValue;   // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTrackingComponent*                     CallFunc_GetTrackingComponent_ReturnValue;         // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UTrackingComponent* Compass, struct FTrackedItemInfo& TrackedItemInfo)> K2Node_CreateDelegate_OutputDelegate;              // 0x0018(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EValeriaFuncResult                            CallFunc_GetValeriaCharacter_OutResult;            // 0x002A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4F54[0x5];                                     // 0x002B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class AValeriaCharacter*                      CallFunc_GetValeriaCharacter_ReturnValue;          // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UValeriaCharacterTeleportComponent*     CallFunc_GetComponentByClass_ReturnValue;          // 0x0038(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess_1;                    // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0042(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4F55[0x5];                                     // 0x0043(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UTrackingComponent*                     K2Node_CustomEvent_compass_2;                      // 0x0048(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FTrackedItemInfo                       K2Node_CustomEvent_trackedItemInfo_2;              // 0x0050(0x0148)(ConstParm)
	class UTrackingComponent*                     K2Node_CustomEvent_compass_1;                      // 0x0198(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FTrackedItemInfo                       K2Node_CustomEvent_trackedItemInfo_1;              // 0x01A0(0x0148)(ConstParm)
	bool                                          CallFunc_Client_IsFocusedItem_ReturnValue;         // 0x02E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4F56[0x7];                                     // 0x02E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTrackingComponent*                     K2Node_CustomEvent_compass;                        // 0x02F0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FTrackedItemInfo                       K2Node_CustomEvent_trackedItemInfo;                // 0x02F8(0x0148)(ConstParm)
	class UWBP_Compass_Tick_ActorTracker_C*       CallFunc_FindBestWidgetForDistance_CompassMarkerWidget; // 0x0440(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ObjectObject_ReturnValue;        // 0x0448(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0449(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4F57[0x2];                                     // 0x044A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class AValeriaCharacter* InValeriaCharacter, ETeleportTravelType TeleportTravelType, TSoftObjectPtr<class UPrivateSpaceConfig> PrivateSpaceConfig)> K2Node_CreateDelegate_OutputDelegate_1;            // 0x044C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x045C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x045D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x045E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x045F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UTrackingComponent* Compass, struct FTrackedItemInfo& TrackedItemInfo)> K2Node_CreateDelegate_OutputDelegate_2;            // 0x0460(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(const struct FVector2D& NewWindowSize)> K2Node_CreateDelegate_OutputDelegate_3;            // 0x0470(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(const struct FVector2D& NewWindowSize)> K2Node_CreateDelegate_OutputDelegate_4;            // 0x0480(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x0490(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue_1;               // 0x0498(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AValeriaGameState*                      K2Node_DynamicCast_AsValeria_Game_State;           // 0x04A0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x04A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4F58[0x7];                                     // 0x04A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AValeriaGameState*                      K2Node_DynamicCast_AsValeria_Game_State_1;         // 0x04B0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x04B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4F59[0x7];                                     // 0x04B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UValeriaGameUserSettings*               CallFunc_GetValeriaGameUserSettings_ReturnValue;   // 0x04C0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(struct FValeriaGraphicSettings& GraphicSettings)> K2Node_CreateDelegate_OutputDelegate_5;            // 0x04C8(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_4;                    // 0x04D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4F5A[0x7];                                     // 0x04D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UValeriaGameUserSettings*               CallFunc_GetValeriaGameUserSettings_ReturnValue_1; // 0x04E0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(struct FValeriaGraphicSettings& GraphicSettings)> K2Node_CreateDelegate_OutputDelegate_6;            // 0x04E8(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_5;                    // 0x04F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4F5B[0x7];                                     // 0x04F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_GetCameraYaw_Rotation;                    // 0x0500(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UTrackingComponent* Compass, struct FTrackedItemInfo& TrackedItemInfo)> K2Node_CreateDelegate_OutputDelegate_7;            // 0x0508(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4F5C[0x8];                                     // 0x0518(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetCameraTransform_Transform;             // 0x0520(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGeometry                              CallFunc_GetCachedGeometry_ReturnValue;            // 0x0580(0x0038)(ConstParm, IsPlainOldData, NoDestructor)
	struct FVector2D                              CallFunc_GetLocalSize_ReturnValue;                 // 0x05B8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_8;            // 0x05C8(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_X;                          // 0x05D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y;                          // 0x05E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x05E8(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x05F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4F5D[0x3];                                     // 0x05F1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGeometry                              K2Node_Event_MyGeometry;                           // 0x05F4(0x0038)(IsPlainOldData, NoDestructor)
	float                                         K2Node_Event_InDeltaTime;                          // 0x062C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_6;                    // 0x0630(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4F5E[0x7];                                     // 0x0631(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class US6UI_WidgetPoolManager*                CallFunc_SpawnObject_ReturnValue;                  // 0x0638(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsCompassDisplaySettingEnabled_IsEnabled; // 0x0640(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x0641(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_7;                    // 0x0642(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4F5F[0x1];                                     // 0x0643(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class AValeriaCharacter* InValeriaCharacter, class UPrivateSpaceConfig* PrivateSpaceConfig)> K2Node_CreateDelegate_OutputDelegate_9;            // 0x0644(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class AValeriaCharacter* InValeriaCharacter, class UPrivateSpaceConfig* PrivateSpaceConfig)> K2Node_CreateDelegate_OutputDelegate_10;           // 0x0654(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	EValeriaFuncResult                            CallFunc_GetValeriaPlayerController_OutResult_1;   // 0x0664(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4F60[0x3];                                     // 0x0665(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AValeriaPlayerController*               CallFunc_GetValeriaPlayerController_ReturnValue_1; // 0x0668(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	EValeriaFuncResult                            CallFunc_GetValeriaPlayerController_OutResult_2;   // 0x0670(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4F61[0x7];                                     // 0x0671(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AValeriaPlayerController*               CallFunc_GetValeriaPlayerController_ReturnValue_2; // 0x0678(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTrackingComponent*                     CallFunc_GetTrackingComponent_ReturnValue_1;       // 0x0680(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UTrackingComponent*                     CallFunc_GetTrackingComponent_ReturnValue_2;       // 0x0688(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess_2;                    // 0x0690(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess_3;                    // 0x0691(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4F62[0x2];                                     // 0x0692(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(bool bActive)>                 K2Node_CreateDelegate_OutputDelegate_11;           // 0x0694(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_bActive;                        // 0x06A4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4F63[0x3];                                     // 0x06A5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(bool bActive)>                 K2Node_CreateDelegate_OutputDelegate_12;           // 0x06A8(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x06B8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue_1;              // 0x06C0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue_2;              // 0x06C8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_8;                    // 0x06D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Compass_C_ExecuteUbergraph_WBP_Compass) == 0x000010, "Wrong alignment on WBP_Compass_C_ExecuteUbergraph_WBP_Compass");
static_assert(sizeof(WBP_Compass_C_ExecuteUbergraph_WBP_Compass) == 0x0006E0, "Wrong size on WBP_Compass_C_ExecuteUbergraph_WBP_Compass");
static_assert(offsetof(WBP_Compass_C_ExecuteUbergraph_WBP_Compass, EntryPoint) == 0x000000, "Member 'WBP_Compass_C_ExecuteUbergraph_WBP_Compass::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_Compass_C_ExecuteUbergraph_WBP_Compass, K2Node_Event_IsDesignTime) == 0x000004, "Member 'WBP_Compass_C_ExecuteUbergraph_WBP_Compass::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(WBP_Compass_C_ExecuteUbergraph_WBP_Compass, CallFunc_GetValeriaPlayerController_OutResult) == 0x000005, "Member 'WBP_Compass_C_ExecuteUbergraph_WBP_Compass::CallFunc_GetValeriaPlayerController_OutResult' has a wrong offset!");
static_assert(offsetof(WBP_Compass_C_ExecuteUbergraph_WBP_Compass, CallFunc_GetValeriaPlayerController_ReturnValue) == 0x000008, "Member 'WBP_Compass_C_ExecuteUbergraph_WBP_Compass::CallFunc_GetValeriaPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Compass_C_ExecuteUbergraph_WBP_Compass, CallFunc_GetTrackingComponent_ReturnValue) == 0x000010, "Member 'WBP_Compass_C_ExecuteUbergraph_WBP_Compass::CallFunc_GetTrackingComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Compass_C_ExecuteUbergraph_WBP_Compass, K2Node_CreateDelegate_OutputDelegate) == 0x000018, "Member 'WBP_Compass_C_ExecuteUbergraph_WBP_Compass::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WBP_Compass_C_ExecuteUbergraph_WBP_Compass, CallFunc_IsValid_ReturnValue) == 0x000028, "Member 'WBP_Compass_C_ExecuteUbergraph_WBP_Compass::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Compass_C_ExecuteUbergraph_WBP_Compass, K2Node_SwitchEnum_CmpSuccess) == 0x000029, "Member 'WBP_Compass_C_ExecuteUbergraph_WBP_Compass::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(WBP_Compass_C_ExecuteUbergraph_WBP_Compass, CallFunc_GetValeriaCharacter_OutResult) == 0x00002A, "Member 'WBP_Compass_C_ExecuteUbergraph_WBP_Compass::CallFunc_GetValeriaCharacter_OutResult' has a wrong offset!");
static_assert(offsetof(WBP_Compass_C_ExecuteUbergraph_WBP_Compass, CallFunc_GetValeriaCharacter_ReturnValue) == 0x000030, "Member 'WBP_Compass_C_ExecuteUbergraph_WBP_Compass::CallFunc_GetValeriaCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Compass_C_ExecuteUbergraph_WBP_Compass, CallFunc_GetComponentByClass_ReturnValue) == 0x000038, "Member 'WBP_Compass_C_ExecuteUbergraph_WBP_Compass::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Compass_C_ExecuteUbergraph_WBP_Compass, CallFunc_HasAuthority_ReturnValue) == 0x000040, "Member 'WBP_Compass_C_ExecuteUbergraph_WBP_Compass::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Compass_C_ExecuteUbergraph_WBP_Compass, K2Node_SwitchEnum_CmpSuccess_1) == 0x000041, "Member 'WBP_Compass_C_ExecuteUbergraph_WBP_Compass::K2Node_SwitchEnum_CmpSuccess_1' has a wrong offset!");
static_assert(offsetof(WBP_Compass_C_ExecuteUbergraph_WBP_Compass, CallFunc_Not_PreBool_ReturnValue) == 0x000042, "Member 'WBP_Compass_C_ExecuteUbergraph_WBP_Compass::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Compass_C_ExecuteUbergraph_WBP_Compass, K2Node_CustomEvent_compass_2) == 0x000048, "Member 'WBP_Compass_C_ExecuteUbergraph_WBP_Compass::K2Node_CustomEvent_compass_2' has a wrong offset!");
static_assert(offsetof(WBP_Compass_C_ExecuteUbergraph_WBP_Compass, K2Node_CustomEvent_trackedItemInfo_2) == 0x000050, "Member 'WBP_Compass_C_ExecuteUbergraph_WBP_Compass::K2Node_CustomEvent_trackedItemInfo_2' has a wrong offset!");
static_assert(offsetof(WBP_Compass_C_ExecuteUbergraph_WBP_Compass, K2Node_CustomEvent_compass_1) == 0x000198, "Member 'WBP_Compass_C_ExecuteUbergraph_WBP_Compass::K2Node_CustomEvent_compass_1' has a wrong offset!");
static_assert(offsetof(WBP_Compass_C_ExecuteUbergraph_WBP_Compass, K2Node_CustomEvent_trackedItemInfo_1) == 0x0001A0, "Member 'WBP_Compass_C_ExecuteUbergraph_WBP_Compass::K2Node_CustomEvent_trackedItemInfo_1' has a wrong offset!");
static_assert(offsetof(WBP_Compass_C_ExecuteUbergraph_WBP_Compass, CallFunc_Client_IsFocusedItem_ReturnValue) == 0x0002E8, "Member 'WBP_Compass_C_ExecuteUbergraph_WBP_Compass::CallFunc_Client_IsFocusedItem_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Compass_C_ExecuteUbergraph_WBP_Compass, K2Node_CustomEvent_compass) == 0x0002F0, "Member 'WBP_Compass_C_ExecuteUbergraph_WBP_Compass::K2Node_CustomEvent_compass' has a wrong offset!");
static_assert(offsetof(WBP_Compass_C_ExecuteUbergraph_WBP_Compass, K2Node_CustomEvent_trackedItemInfo) == 0x0002F8, "Member 'WBP_Compass_C_ExecuteUbergraph_WBP_Compass::K2Node_CustomEvent_trackedItemInfo' has a wrong offset!");
static_assert(offsetof(WBP_Compass_C_ExecuteUbergraph_WBP_Compass, CallFunc_FindBestWidgetForDistance_CompassMarkerWidget) == 0x000440, "Member 'WBP_Compass_C_ExecuteUbergraph_WBP_Compass::CallFunc_FindBestWidgetForDistance_CompassMarkerWidget' has a wrong offset!");
static_assert(offsetof(WBP_Compass_C_ExecuteUbergraph_WBP_Compass, CallFunc_NotEqual_ObjectObject_ReturnValue) == 0x000448, "Member 'WBP_Compass_C_ExecuteUbergraph_WBP_Compass::CallFunc_NotEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Compass_C_ExecuteUbergraph_WBP_Compass, CallFunc_IsValid_ReturnValue_1) == 0x000449, "Member 'WBP_Compass_C_ExecuteUbergraph_WBP_Compass::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_Compass_C_ExecuteUbergraph_WBP_Compass, K2Node_CreateDelegate_OutputDelegate_1) == 0x00044C, "Member 'WBP_Compass_C_ExecuteUbergraph_WBP_Compass::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(WBP_Compass_C_ExecuteUbergraph_WBP_Compass, CallFunc_IsValid_ReturnValue_2) == 0x00045C, "Member 'WBP_Compass_C_ExecuteUbergraph_WBP_Compass::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_Compass_C_ExecuteUbergraph_WBP_Compass, Temp_bool_Variable) == 0x00045D, "Member 'WBP_Compass_C_ExecuteUbergraph_WBP_Compass::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Compass_C_ExecuteUbergraph_WBP_Compass, CallFunc_Not_PreBool_ReturnValue_1) == 0x00045E, "Member 'WBP_Compass_C_ExecuteUbergraph_WBP_Compass::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_Compass_C_ExecuteUbergraph_WBP_Compass, CallFunc_IsValid_ReturnValue_3) == 0x00045F, "Member 'WBP_Compass_C_ExecuteUbergraph_WBP_Compass::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WBP_Compass_C_ExecuteUbergraph_WBP_Compass, K2Node_CreateDelegate_OutputDelegate_2) == 0x000460, "Member 'WBP_Compass_C_ExecuteUbergraph_WBP_Compass::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(WBP_Compass_C_ExecuteUbergraph_WBP_Compass, K2Node_CreateDelegate_OutputDelegate_3) == 0x000470, "Member 'WBP_Compass_C_ExecuteUbergraph_WBP_Compass::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");
static_assert(offsetof(WBP_Compass_C_ExecuteUbergraph_WBP_Compass, K2Node_CreateDelegate_OutputDelegate_4) == 0x000480, "Member 'WBP_Compass_C_ExecuteUbergraph_WBP_Compass::K2Node_CreateDelegate_OutputDelegate_4' has a wrong offset!");
static_assert(offsetof(WBP_Compass_C_ExecuteUbergraph_WBP_Compass, CallFunc_GetGameState_ReturnValue) == 0x000490, "Member 'WBP_Compass_C_ExecuteUbergraph_WBP_Compass::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Compass_C_ExecuteUbergraph_WBP_Compass, CallFunc_GetGameState_ReturnValue_1) == 0x000498, "Member 'WBP_Compass_C_ExecuteUbergraph_WBP_Compass::CallFunc_GetGameState_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_Compass_C_ExecuteUbergraph_WBP_Compass, K2Node_DynamicCast_AsValeria_Game_State) == 0x0004A0, "Member 'WBP_Compass_C_ExecuteUbergraph_WBP_Compass::K2Node_DynamicCast_AsValeria_Game_State' has a wrong offset!");
static_assert(offsetof(WBP_Compass_C_ExecuteUbergraph_WBP_Compass, K2Node_DynamicCast_bSuccess) == 0x0004A8, "Member 'WBP_Compass_C_ExecuteUbergraph_WBP_Compass::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_Compass_C_ExecuteUbergraph_WBP_Compass, K2Node_DynamicCast_AsValeria_Game_State_1) == 0x0004B0, "Member 'WBP_Compass_C_ExecuteUbergraph_WBP_Compass::K2Node_DynamicCast_AsValeria_Game_State_1' has a wrong offset!");
static_assert(offsetof(WBP_Compass_C_ExecuteUbergraph_WBP_Compass, K2Node_DynamicCast_bSuccess_1) == 0x0004B8, "Member 'WBP_Compass_C_ExecuteUbergraph_WBP_Compass::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(WBP_Compass_C_ExecuteUbergraph_WBP_Compass, CallFunc_GetValeriaGameUserSettings_ReturnValue) == 0x0004C0, "Member 'WBP_Compass_C_ExecuteUbergraph_WBP_Compass::CallFunc_GetValeriaGameUserSettings_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Compass_C_ExecuteUbergraph_WBP_Compass, K2Node_CreateDelegate_OutputDelegate_5) == 0x0004C8, "Member 'WBP_Compass_C_ExecuteUbergraph_WBP_Compass::K2Node_CreateDelegate_OutputDelegate_5' has a wrong offset!");
static_assert(offsetof(WBP_Compass_C_ExecuteUbergraph_WBP_Compass, CallFunc_IsValid_ReturnValue_4) == 0x0004D8, "Member 'WBP_Compass_C_ExecuteUbergraph_WBP_Compass::CallFunc_IsValid_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(WBP_Compass_C_ExecuteUbergraph_WBP_Compass, CallFunc_GetValeriaGameUserSettings_ReturnValue_1) == 0x0004E0, "Member 'WBP_Compass_C_ExecuteUbergraph_WBP_Compass::CallFunc_GetValeriaGameUserSettings_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_Compass_C_ExecuteUbergraph_WBP_Compass, K2Node_CreateDelegate_OutputDelegate_6) == 0x0004E8, "Member 'WBP_Compass_C_ExecuteUbergraph_WBP_Compass::K2Node_CreateDelegate_OutputDelegate_6' has a wrong offset!");
static_assert(offsetof(WBP_Compass_C_ExecuteUbergraph_WBP_Compass, CallFunc_IsValid_ReturnValue_5) == 0x0004F8, "Member 'WBP_Compass_C_ExecuteUbergraph_WBP_Compass::CallFunc_IsValid_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(WBP_Compass_C_ExecuteUbergraph_WBP_Compass, CallFunc_GetCameraYaw_Rotation) == 0x000500, "Member 'WBP_Compass_C_ExecuteUbergraph_WBP_Compass::CallFunc_GetCameraYaw_Rotation' has a wrong offset!");
static_assert(offsetof(WBP_Compass_C_ExecuteUbergraph_WBP_Compass, K2Node_CreateDelegate_OutputDelegate_7) == 0x000508, "Member 'WBP_Compass_C_ExecuteUbergraph_WBP_Compass::K2Node_CreateDelegate_OutputDelegate_7' has a wrong offset!");
static_assert(offsetof(WBP_Compass_C_ExecuteUbergraph_WBP_Compass, CallFunc_GetCameraTransform_Transform) == 0x000520, "Member 'WBP_Compass_C_ExecuteUbergraph_WBP_Compass::CallFunc_GetCameraTransform_Transform' has a wrong offset!");
static_assert(offsetof(WBP_Compass_C_ExecuteUbergraph_WBP_Compass, CallFunc_GetCachedGeometry_ReturnValue) == 0x000580, "Member 'WBP_Compass_C_ExecuteUbergraph_WBP_Compass::CallFunc_GetCachedGeometry_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Compass_C_ExecuteUbergraph_WBP_Compass, CallFunc_GetLocalSize_ReturnValue) == 0x0005B8, "Member 'WBP_Compass_C_ExecuteUbergraph_WBP_Compass::CallFunc_GetLocalSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Compass_C_ExecuteUbergraph_WBP_Compass, K2Node_CreateDelegate_OutputDelegate_8) == 0x0005C8, "Member 'WBP_Compass_C_ExecuteUbergraph_WBP_Compass::K2Node_CreateDelegate_OutputDelegate_8' has a wrong offset!");
static_assert(offsetof(WBP_Compass_C_ExecuteUbergraph_WBP_Compass, CallFunc_BreakVector2D_X) == 0x0005D8, "Member 'WBP_Compass_C_ExecuteUbergraph_WBP_Compass::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(WBP_Compass_C_ExecuteUbergraph_WBP_Compass, CallFunc_BreakVector2D_Y) == 0x0005E0, "Member 'WBP_Compass_C_ExecuteUbergraph_WBP_Compass::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(WBP_Compass_C_ExecuteUbergraph_WBP_Compass, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x0005E8, "Member 'WBP_Compass_C_ExecuteUbergraph_WBP_Compass::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Compass_C_ExecuteUbergraph_WBP_Compass, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x0005F0, "Member 'WBP_Compass_C_ExecuteUbergraph_WBP_Compass::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Compass_C_ExecuteUbergraph_WBP_Compass, K2Node_Event_MyGeometry) == 0x0005F4, "Member 'WBP_Compass_C_ExecuteUbergraph_WBP_Compass::K2Node_Event_MyGeometry' has a wrong offset!");
static_assert(offsetof(WBP_Compass_C_ExecuteUbergraph_WBP_Compass, K2Node_Event_InDeltaTime) == 0x00062C, "Member 'WBP_Compass_C_ExecuteUbergraph_WBP_Compass::K2Node_Event_InDeltaTime' has a wrong offset!");
static_assert(offsetof(WBP_Compass_C_ExecuteUbergraph_WBP_Compass, CallFunc_IsValid_ReturnValue_6) == 0x000630, "Member 'WBP_Compass_C_ExecuteUbergraph_WBP_Compass::CallFunc_IsValid_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(WBP_Compass_C_ExecuteUbergraph_WBP_Compass, CallFunc_SpawnObject_ReturnValue) == 0x000638, "Member 'WBP_Compass_C_ExecuteUbergraph_WBP_Compass::CallFunc_SpawnObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Compass_C_ExecuteUbergraph_WBP_Compass, CallFunc_IsCompassDisplaySettingEnabled_IsEnabled) == 0x000640, "Member 'WBP_Compass_C_ExecuteUbergraph_WBP_Compass::CallFunc_IsCompassDisplaySettingEnabled_IsEnabled' has a wrong offset!");
static_assert(offsetof(WBP_Compass_C_ExecuteUbergraph_WBP_Compass, CallFunc_Not_PreBool_ReturnValue_2) == 0x000641, "Member 'WBP_Compass_C_ExecuteUbergraph_WBP_Compass::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_Compass_C_ExecuteUbergraph_WBP_Compass, CallFunc_IsValid_ReturnValue_7) == 0x000642, "Member 'WBP_Compass_C_ExecuteUbergraph_WBP_Compass::CallFunc_IsValid_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(WBP_Compass_C_ExecuteUbergraph_WBP_Compass, K2Node_CreateDelegate_OutputDelegate_9) == 0x000644, "Member 'WBP_Compass_C_ExecuteUbergraph_WBP_Compass::K2Node_CreateDelegate_OutputDelegate_9' has a wrong offset!");
static_assert(offsetof(WBP_Compass_C_ExecuteUbergraph_WBP_Compass, K2Node_CreateDelegate_OutputDelegate_10) == 0x000654, "Member 'WBP_Compass_C_ExecuteUbergraph_WBP_Compass::K2Node_CreateDelegate_OutputDelegate_10' has a wrong offset!");
static_assert(offsetof(WBP_Compass_C_ExecuteUbergraph_WBP_Compass, CallFunc_GetValeriaPlayerController_OutResult_1) == 0x000664, "Member 'WBP_Compass_C_ExecuteUbergraph_WBP_Compass::CallFunc_GetValeriaPlayerController_OutResult_1' has a wrong offset!");
static_assert(offsetof(WBP_Compass_C_ExecuteUbergraph_WBP_Compass, CallFunc_GetValeriaPlayerController_ReturnValue_1) == 0x000668, "Member 'WBP_Compass_C_ExecuteUbergraph_WBP_Compass::CallFunc_GetValeriaPlayerController_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_Compass_C_ExecuteUbergraph_WBP_Compass, CallFunc_GetValeriaPlayerController_OutResult_2) == 0x000670, "Member 'WBP_Compass_C_ExecuteUbergraph_WBP_Compass::CallFunc_GetValeriaPlayerController_OutResult_2' has a wrong offset!");
static_assert(offsetof(WBP_Compass_C_ExecuteUbergraph_WBP_Compass, CallFunc_GetValeriaPlayerController_ReturnValue_2) == 0x000678, "Member 'WBP_Compass_C_ExecuteUbergraph_WBP_Compass::CallFunc_GetValeriaPlayerController_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_Compass_C_ExecuteUbergraph_WBP_Compass, CallFunc_GetTrackingComponent_ReturnValue_1) == 0x000680, "Member 'WBP_Compass_C_ExecuteUbergraph_WBP_Compass::CallFunc_GetTrackingComponent_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_Compass_C_ExecuteUbergraph_WBP_Compass, CallFunc_GetTrackingComponent_ReturnValue_2) == 0x000688, "Member 'WBP_Compass_C_ExecuteUbergraph_WBP_Compass::CallFunc_GetTrackingComponent_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_Compass_C_ExecuteUbergraph_WBP_Compass, K2Node_SwitchEnum_CmpSuccess_2) == 0x000690, "Member 'WBP_Compass_C_ExecuteUbergraph_WBP_Compass::K2Node_SwitchEnum_CmpSuccess_2' has a wrong offset!");
static_assert(offsetof(WBP_Compass_C_ExecuteUbergraph_WBP_Compass, K2Node_SwitchEnum_CmpSuccess_3) == 0x000691, "Member 'WBP_Compass_C_ExecuteUbergraph_WBP_Compass::K2Node_SwitchEnum_CmpSuccess_3' has a wrong offset!");
static_assert(offsetof(WBP_Compass_C_ExecuteUbergraph_WBP_Compass, K2Node_CreateDelegate_OutputDelegate_11) == 0x000694, "Member 'WBP_Compass_C_ExecuteUbergraph_WBP_Compass::K2Node_CreateDelegate_OutputDelegate_11' has a wrong offset!");
static_assert(offsetof(WBP_Compass_C_ExecuteUbergraph_WBP_Compass, K2Node_CustomEvent_bActive) == 0x0006A4, "Member 'WBP_Compass_C_ExecuteUbergraph_WBP_Compass::K2Node_CustomEvent_bActive' has a wrong offset!");
static_assert(offsetof(WBP_Compass_C_ExecuteUbergraph_WBP_Compass, K2Node_CreateDelegate_OutputDelegate_12) == 0x0006A8, "Member 'WBP_Compass_C_ExecuteUbergraph_WBP_Compass::K2Node_CreateDelegate_OutputDelegate_12' has a wrong offset!");
static_assert(offsetof(WBP_Compass_C_ExecuteUbergraph_WBP_Compass, CallFunc_PlayAnimation_ReturnValue) == 0x0006B8, "Member 'WBP_Compass_C_ExecuteUbergraph_WBP_Compass::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Compass_C_ExecuteUbergraph_WBP_Compass, CallFunc_PlayAnimation_ReturnValue_1) == 0x0006C0, "Member 'WBP_Compass_C_ExecuteUbergraph_WBP_Compass::CallFunc_PlayAnimation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_Compass_C_ExecuteUbergraph_WBP_Compass, CallFunc_PlayAnimation_ReturnValue_2) == 0x0006C8, "Member 'WBP_Compass_C_ExecuteUbergraph_WBP_Compass::CallFunc_PlayAnimation_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_Compass_C_ExecuteUbergraph_WBP_Compass, CallFunc_IsValid_ReturnValue_8) == 0x0006D0, "Member 'WBP_Compass_C_ExecuteUbergraph_WBP_Compass::CallFunc_IsValid_ReturnValue_8' has a wrong offset!");

// Function WBP_Compass.WBP_Compass_C.FindBestWidgetForDistance
// 0x0140 (0x0140 - 0x0000)
struct WBP_Compass_C_FindBestWidgetForDistance final
{
public:
	class UWBP_Compass_Tick_ActorTracker_C*       CompassMarkerWidget;                               // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FVector                                PlayerForwardVector;                               // 0x0008(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWBP_Compass_Tick_ActorTracker_C*       BestWidget;                                        // 0x0020(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	double                                        BestDegreesFromCenter;                             // 0x0028(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4F64[0x4];                                     // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UWBP_Compass_Tick_ActorTracker_C*> CallFunc_Map_Values_Values;                        // 0x0038(0x0010)(ReferenceParm, ContainsInstancedReference)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4F65[0x4];                                     // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_Compass_Tick_ActorTracker_C*       CallFunc_Array_Get_Item;                           // 0x0050(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4F66[0x4];                                     // 0x005C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_BreakVector_X;                            // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0078(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue;                       // 0x0090(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00AC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x00AD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4F67[0x2];                                     // 0x00AE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Dot_VectorVector_ReturnValue;             // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_GetOwningPlayerPawn_ReturnValue;          // 0x00B8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4F68[0x7];                                     // 0x00C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_GetControlRotation_ReturnValue;           // 0x00C8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_GetForwardVector_ReturnValue;             // 0x00E0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X_1;                          // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_1;                          // 0x0100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_1;                          // 0x0108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_1;                 // 0x0110(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue_1;                     // 0x0128(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Compass_C_FindBestWidgetForDistance) == 0x000008, "Wrong alignment on WBP_Compass_C_FindBestWidgetForDistance");
static_assert(sizeof(WBP_Compass_C_FindBestWidgetForDistance) == 0x000140, "Wrong size on WBP_Compass_C_FindBestWidgetForDistance");
static_assert(offsetof(WBP_Compass_C_FindBestWidgetForDistance, CompassMarkerWidget) == 0x000000, "Member 'WBP_Compass_C_FindBestWidgetForDistance::CompassMarkerWidget' has a wrong offset!");
static_assert(offsetof(WBP_Compass_C_FindBestWidgetForDistance, PlayerForwardVector) == 0x000008, "Member 'WBP_Compass_C_FindBestWidgetForDistance::PlayerForwardVector' has a wrong offset!");
static_assert(offsetof(WBP_Compass_C_FindBestWidgetForDistance, BestWidget) == 0x000020, "Member 'WBP_Compass_C_FindBestWidgetForDistance::BestWidget' has a wrong offset!");
static_assert(offsetof(WBP_Compass_C_FindBestWidgetForDistance, BestDegreesFromCenter) == 0x000028, "Member 'WBP_Compass_C_FindBestWidgetForDistance::BestDegreesFromCenter' has a wrong offset!");
static_assert(offsetof(WBP_Compass_C_FindBestWidgetForDistance, Temp_int_Array_Index_Variable) == 0x000030, "Member 'WBP_Compass_C_FindBestWidgetForDistance::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Compass_C_FindBestWidgetForDistance, CallFunc_Map_Values_Values) == 0x000038, "Member 'WBP_Compass_C_FindBestWidgetForDistance::CallFunc_Map_Values_Values' has a wrong offset!");
static_assert(offsetof(WBP_Compass_C_FindBestWidgetForDistance, Temp_int_Loop_Counter_Variable) == 0x000048, "Member 'WBP_Compass_C_FindBestWidgetForDistance::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Compass_C_FindBestWidgetForDistance, CallFunc_Array_Get_Item) == 0x000050, "Member 'WBP_Compass_C_FindBestWidgetForDistance::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_Compass_C_FindBestWidgetForDistance, CallFunc_Add_IntInt_ReturnValue) == 0x000058, "Member 'WBP_Compass_C_FindBestWidgetForDistance::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Compass_C_FindBestWidgetForDistance, CallFunc_BreakVector_X) == 0x000060, "Member 'WBP_Compass_C_FindBestWidgetForDistance::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(WBP_Compass_C_FindBestWidgetForDistance, CallFunc_BreakVector_Y) == 0x000068, "Member 'WBP_Compass_C_FindBestWidgetForDistance::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(WBP_Compass_C_FindBestWidgetForDistance, CallFunc_BreakVector_Z) == 0x000070, "Member 'WBP_Compass_C_FindBestWidgetForDistance::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(WBP_Compass_C_FindBestWidgetForDistance, CallFunc_MakeVector_ReturnValue) == 0x000078, "Member 'WBP_Compass_C_FindBestWidgetForDistance::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Compass_C_FindBestWidgetForDistance, CallFunc_Normal_ReturnValue) == 0x000090, "Member 'WBP_Compass_C_FindBestWidgetForDistance::CallFunc_Normal_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Compass_C_FindBestWidgetForDistance, CallFunc_Array_Length_ReturnValue) == 0x0000A8, "Member 'WBP_Compass_C_FindBestWidgetForDistance::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Compass_C_FindBestWidgetForDistance, CallFunc_Less_IntInt_ReturnValue) == 0x0000AC, "Member 'WBP_Compass_C_FindBestWidgetForDistance::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Compass_C_FindBestWidgetForDistance, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x0000AD, "Member 'WBP_Compass_C_FindBestWidgetForDistance::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Compass_C_FindBestWidgetForDistance, CallFunc_Dot_VectorVector_ReturnValue) == 0x0000B0, "Member 'WBP_Compass_C_FindBestWidgetForDistance::CallFunc_Dot_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Compass_C_FindBestWidgetForDistance, CallFunc_GetOwningPlayerPawn_ReturnValue) == 0x0000B8, "Member 'WBP_Compass_C_FindBestWidgetForDistance::CallFunc_GetOwningPlayerPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Compass_C_FindBestWidgetForDistance, CallFunc_IsValid_ReturnValue) == 0x0000C0, "Member 'WBP_Compass_C_FindBestWidgetForDistance::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Compass_C_FindBestWidgetForDistance, CallFunc_GetControlRotation_ReturnValue) == 0x0000C8, "Member 'WBP_Compass_C_FindBestWidgetForDistance::CallFunc_GetControlRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Compass_C_FindBestWidgetForDistance, CallFunc_GetForwardVector_ReturnValue) == 0x0000E0, "Member 'WBP_Compass_C_FindBestWidgetForDistance::CallFunc_GetForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Compass_C_FindBestWidgetForDistance, CallFunc_BreakVector_X_1) == 0x0000F8, "Member 'WBP_Compass_C_FindBestWidgetForDistance::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(WBP_Compass_C_FindBestWidgetForDistance, CallFunc_BreakVector_Y_1) == 0x000100, "Member 'WBP_Compass_C_FindBestWidgetForDistance::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(WBP_Compass_C_FindBestWidgetForDistance, CallFunc_BreakVector_Z_1) == 0x000108, "Member 'WBP_Compass_C_FindBestWidgetForDistance::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(WBP_Compass_C_FindBestWidgetForDistance, CallFunc_MakeVector_ReturnValue_1) == 0x000110, "Member 'WBP_Compass_C_FindBestWidgetForDistance::CallFunc_MakeVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_Compass_C_FindBestWidgetForDistance, CallFunc_Normal_ReturnValue_1) == 0x000128, "Member 'WBP_Compass_C_FindBestWidgetForDistance::CallFunc_Normal_ReturnValue_1' has a wrong offset!");

// Function WBP_Compass.WBP_Compass_C.FindTrackerForInstance
// 0x0028 (0x0028 - 0x0000)
struct WBP_Compass_C_FindTrackerForInstance final
{
public:
	int32                                         InstanceId;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4F69[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_Compass_Tick_ActorTracker_C*       TrackerWidget;                                     // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UWBP_Compass_Tick_ActorTracker_C*       FoundTracker;                                      // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UWBP_Compass_Tick_ActorTracker_C*       CallFunc_Map_Find_Value;                           // 0x0018(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Compass_C_FindTrackerForInstance) == 0x000008, "Wrong alignment on WBP_Compass_C_FindTrackerForInstance");
static_assert(sizeof(WBP_Compass_C_FindTrackerForInstance) == 0x000028, "Wrong size on WBP_Compass_C_FindTrackerForInstance");
static_assert(offsetof(WBP_Compass_C_FindTrackerForInstance, InstanceId) == 0x000000, "Member 'WBP_Compass_C_FindTrackerForInstance::InstanceId' has a wrong offset!");
static_assert(offsetof(WBP_Compass_C_FindTrackerForInstance, TrackerWidget) == 0x000008, "Member 'WBP_Compass_C_FindTrackerForInstance::TrackerWidget' has a wrong offset!");
static_assert(offsetof(WBP_Compass_C_FindTrackerForInstance, FoundTracker) == 0x000010, "Member 'WBP_Compass_C_FindTrackerForInstance::FoundTracker' has a wrong offset!");
static_assert(offsetof(WBP_Compass_C_FindTrackerForInstance, CallFunc_Map_Find_Value) == 0x000018, "Member 'WBP_Compass_C_FindTrackerForInstance::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(WBP_Compass_C_FindTrackerForInstance, CallFunc_Map_Find_ReturnValue) == 0x000020, "Member 'WBP_Compass_C_FindTrackerForInstance::CallFunc_Map_Find_ReturnValue' has a wrong offset!");

// Function WBP_Compass.WBP_Compass_C.GetCameraTransform
// 0x0100 (0x0100 - 0x0000)
struct WBP_Compass_C_GetCameraTransform final
{
public:
	struct FTransform                             Transform;                                         // 0x0000(0x0060)(Parm, OutParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x0060(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_GetCameraRotation_ReturnValue;            // 0x0068(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_GetCameraLocation_ReturnValue;            // 0x0080(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4F6A[0x8];                                     // 0x0098(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x00A0(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Compass_C_GetCameraTransform) == 0x000010, "Wrong alignment on WBP_Compass_C_GetCameraTransform");
static_assert(sizeof(WBP_Compass_C_GetCameraTransform) == 0x000100, "Wrong size on WBP_Compass_C_GetCameraTransform");
static_assert(offsetof(WBP_Compass_C_GetCameraTransform, Transform) == 0x000000, "Member 'WBP_Compass_C_GetCameraTransform::Transform' has a wrong offset!");
static_assert(offsetof(WBP_Compass_C_GetCameraTransform, CallFunc_GetOwningPlayer_ReturnValue) == 0x000060, "Member 'WBP_Compass_C_GetCameraTransform::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Compass_C_GetCameraTransform, CallFunc_GetCameraRotation_ReturnValue) == 0x000068, "Member 'WBP_Compass_C_GetCameraTransform::CallFunc_GetCameraRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Compass_C_GetCameraTransform, CallFunc_GetCameraLocation_ReturnValue) == 0x000080, "Member 'WBP_Compass_C_GetCameraTransform::CallFunc_GetCameraLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Compass_C_GetCameraTransform, CallFunc_MakeTransform_ReturnValue) == 0x0000A0, "Member 'WBP_Compass_C_GetCameraTransform::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");

// Function WBP_Compass.WBP_Compass_C.GetCameraYaw
// 0x0060 (0x0060 - 0x0000)
struct WBP_Compass_C_GetCameraYaw final
{
public:
	double                                        Rotation;                                          // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_GetCameraRotation_ReturnValue;            // 0x0010(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4F6B[0x4];                                     // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_NormalizeDegrees_ReturnValue;             // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4F6C[0x4];                                     // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_FunctionResult_Rotation_ImplicitCast;       // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_A_ImplicitCast;          // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_NormalizeDegrees_degrees_ImplicitCast;    // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Compass_C_GetCameraYaw) == 0x000008, "Wrong alignment on WBP_Compass_C_GetCameraYaw");
static_assert(sizeof(WBP_Compass_C_GetCameraYaw) == 0x000060, "Wrong size on WBP_Compass_C_GetCameraYaw");
static_assert(offsetof(WBP_Compass_C_GetCameraYaw, Rotation) == 0x000000, "Member 'WBP_Compass_C_GetCameraYaw::Rotation' has a wrong offset!");
static_assert(offsetof(WBP_Compass_C_GetCameraYaw, CallFunc_GetOwningPlayer_ReturnValue) == 0x000008, "Member 'WBP_Compass_C_GetCameraYaw::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Compass_C_GetCameraYaw, CallFunc_GetCameraRotation_ReturnValue) == 0x000010, "Member 'WBP_Compass_C_GetCameraYaw::CallFunc_GetCameraRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Compass_C_GetCameraYaw, CallFunc_BreakRotator_Roll) == 0x000028, "Member 'WBP_Compass_C_GetCameraYaw::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(WBP_Compass_C_GetCameraYaw, CallFunc_BreakRotator_Pitch) == 0x00002C, "Member 'WBP_Compass_C_GetCameraYaw::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(WBP_Compass_C_GetCameraYaw, CallFunc_BreakRotator_Yaw) == 0x000030, "Member 'WBP_Compass_C_GetCameraYaw::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(WBP_Compass_C_GetCameraYaw, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000038, "Member 'WBP_Compass_C_GetCameraYaw::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Compass_C_GetCameraYaw, CallFunc_NormalizeDegrees_ReturnValue) == 0x000040, "Member 'WBP_Compass_C_GetCameraYaw::CallFunc_NormalizeDegrees_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Compass_C_GetCameraYaw, K2Node_FunctionResult_Rotation_ImplicitCast) == 0x000048, "Member 'WBP_Compass_C_GetCameraYaw::K2Node_FunctionResult_Rotation_ImplicitCast' has a wrong offset!");
static_assert(offsetof(WBP_Compass_C_GetCameraYaw, CallFunc_Add_DoubleDouble_A_ImplicitCast) == 0x000050, "Member 'WBP_Compass_C_GetCameraYaw::CallFunc_Add_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(WBP_Compass_C_GetCameraYaw, CallFunc_NormalizeDegrees_degrees_ImplicitCast) == 0x000058, "Member 'WBP_Compass_C_GetCameraYaw::CallFunc_NormalizeDegrees_degrees_ImplicitCast' has a wrong offset!");

// Function WBP_Compass.WBP_Compass_C.GetMaxVisibleDistance
// 0x0190 (0x0190 - 0x0000)
struct WBP_Compass_C_GetMaxVisibleDistance final
{
public:
	struct FTrackedItemInfo                       TrackedItem;                                       // 0x0000(0x0148)(BlueprintVisible, BlueprintReadOnly, Parm)
	double                                        MaxVisibleDistance;                                // 0x0148(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_DoubleDouble_ReturnValue;       // 0x0150(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4F6D[0x7];                                     // 0x0151(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_FMin_ReturnValue;                         // 0x0158(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0160(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsCompassDisplaySettingEnabled_IsEnabled; // 0x0161(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4F6E[0x6];                                     // 0x0162(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_FunctionResult_MaxVisibleDistance_ImplicitCast; // 0x0168(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_FunctionResult_MaxVisibleDistance_ImplicitCast_1; // 0x0170(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FMin_A_ImplicitCast;                      // 0x0178(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FMin_B_ImplicitCast;                      // 0x0180(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_LessEqual_DoubleDouble_A_ImplicitCast;    // 0x0188(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Compass_C_GetMaxVisibleDistance) == 0x000008, "Wrong alignment on WBP_Compass_C_GetMaxVisibleDistance");
static_assert(sizeof(WBP_Compass_C_GetMaxVisibleDistance) == 0x000190, "Wrong size on WBP_Compass_C_GetMaxVisibleDistance");
static_assert(offsetof(WBP_Compass_C_GetMaxVisibleDistance, TrackedItem) == 0x000000, "Member 'WBP_Compass_C_GetMaxVisibleDistance::TrackedItem' has a wrong offset!");
static_assert(offsetof(WBP_Compass_C_GetMaxVisibleDistance, MaxVisibleDistance) == 0x000148, "Member 'WBP_Compass_C_GetMaxVisibleDistance::MaxVisibleDistance' has a wrong offset!");
static_assert(offsetof(WBP_Compass_C_GetMaxVisibleDistance, CallFunc_LessEqual_DoubleDouble_ReturnValue) == 0x000150, "Member 'WBP_Compass_C_GetMaxVisibleDistance::CallFunc_LessEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Compass_C_GetMaxVisibleDistance, CallFunc_FMin_ReturnValue) == 0x000158, "Member 'WBP_Compass_C_GetMaxVisibleDistance::CallFunc_FMin_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Compass_C_GetMaxVisibleDistance, CallFunc_IsValid_ReturnValue) == 0x000160, "Member 'WBP_Compass_C_GetMaxVisibleDistance::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Compass_C_GetMaxVisibleDistance, CallFunc_IsCompassDisplaySettingEnabled_IsEnabled) == 0x000161, "Member 'WBP_Compass_C_GetMaxVisibleDistance::CallFunc_IsCompassDisplaySettingEnabled_IsEnabled' has a wrong offset!");
static_assert(offsetof(WBP_Compass_C_GetMaxVisibleDistance, K2Node_FunctionResult_MaxVisibleDistance_ImplicitCast) == 0x000168, "Member 'WBP_Compass_C_GetMaxVisibleDistance::K2Node_FunctionResult_MaxVisibleDistance_ImplicitCast' has a wrong offset!");
static_assert(offsetof(WBP_Compass_C_GetMaxVisibleDistance, K2Node_FunctionResult_MaxVisibleDistance_ImplicitCast_1) == 0x000170, "Member 'WBP_Compass_C_GetMaxVisibleDistance::K2Node_FunctionResult_MaxVisibleDistance_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(WBP_Compass_C_GetMaxVisibleDistance, CallFunc_FMin_A_ImplicitCast) == 0x000178, "Member 'WBP_Compass_C_GetMaxVisibleDistance::CallFunc_FMin_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(WBP_Compass_C_GetMaxVisibleDistance, CallFunc_FMin_B_ImplicitCast) == 0x000180, "Member 'WBP_Compass_C_GetMaxVisibleDistance::CallFunc_FMin_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(WBP_Compass_C_GetMaxVisibleDistance, CallFunc_LessEqual_DoubleDouble_A_ImplicitCast) == 0x000188, "Member 'WBP_Compass_C_GetMaxVisibleDistance::CallFunc_LessEqual_DoubleDouble_A_ImplicitCast' has a wrong offset!");

// Function WBP_Compass.WBP_Compass_C.GetModifiedCameraFOV
// 0x0070 (0x0070 - 0x0000)
struct WBP_Compass_C_GetModifiedCameraFOV final
{
public:
	double                                        FOV;                                               // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4F6F[0x7];                                     // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Temp_real_Variable;                                // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_1;                              // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerCameraManager*                   CallFunc_GetOwningPlayerCameraManager_ReturnValue; // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetFOVAngle_ReturnValue;                  // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4F70[0x4];                                     // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_DegCos_ReturnValue;                       // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4F71[0x7];                                     // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_Select_Default;                             // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_DegCos_A_ImplicitCast;                    // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_A_ImplicitCast;       // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Compass_C_GetModifiedCameraFOV) == 0x000008, "Wrong alignment on WBP_Compass_C_GetModifiedCameraFOV");
static_assert(sizeof(WBP_Compass_C_GetModifiedCameraFOV) == 0x000070, "Wrong size on WBP_Compass_C_GetModifiedCameraFOV");
static_assert(offsetof(WBP_Compass_C_GetModifiedCameraFOV, FOV) == 0x000000, "Member 'WBP_Compass_C_GetModifiedCameraFOV::FOV' has a wrong offset!");
static_assert(offsetof(WBP_Compass_C_GetModifiedCameraFOV, Temp_bool_Variable) == 0x000008, "Member 'WBP_Compass_C_GetModifiedCameraFOV::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Compass_C_GetModifiedCameraFOV, Temp_real_Variable) == 0x000010, "Member 'WBP_Compass_C_GetModifiedCameraFOV::Temp_real_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Compass_C_GetModifiedCameraFOV, Temp_real_Variable_1) == 0x000018, "Member 'WBP_Compass_C_GetModifiedCameraFOV::Temp_real_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_Compass_C_GetModifiedCameraFOV, CallFunc_GetOwningPlayerCameraManager_ReturnValue) == 0x000020, "Member 'WBP_Compass_C_GetModifiedCameraFOV::CallFunc_GetOwningPlayerCameraManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Compass_C_GetModifiedCameraFOV, CallFunc_GetFOVAngle_ReturnValue) == 0x000028, "Member 'WBP_Compass_C_GetModifiedCameraFOV::CallFunc_GetFOVAngle_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Compass_C_GetModifiedCameraFOV, CallFunc_DegCos_ReturnValue) == 0x000030, "Member 'WBP_Compass_C_GetModifiedCameraFOV::CallFunc_DegCos_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Compass_C_GetModifiedCameraFOV, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000038, "Member 'WBP_Compass_C_GetModifiedCameraFOV::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Compass_C_GetModifiedCameraFOV, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000040, "Member 'WBP_Compass_C_GetModifiedCameraFOV::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Compass_C_GetModifiedCameraFOV, K2Node_Select_Default) == 0x000048, "Member 'WBP_Compass_C_GetModifiedCameraFOV::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_Compass_C_GetModifiedCameraFOV, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000050, "Member 'WBP_Compass_C_GetModifiedCameraFOV::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Compass_C_GetModifiedCameraFOV, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000058, "Member 'WBP_Compass_C_GetModifiedCameraFOV::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Compass_C_GetModifiedCameraFOV, CallFunc_DegCos_A_ImplicitCast) == 0x000060, "Member 'WBP_Compass_C_GetModifiedCameraFOV::CallFunc_DegCos_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(WBP_Compass_C_GetModifiedCameraFOV, CallFunc_Divide_DoubleDouble_A_ImplicitCast) == 0x000068, "Member 'WBP_Compass_C_GetModifiedCameraFOV::CallFunc_Divide_DoubleDouble_A_ImplicitCast' has a wrong offset!");

// Function WBP_Compass.WBP_Compass_C.GetScrollBoxAdjustedSize
// 0x00C8 (0x00C8 - 0x0000)
struct WBP_Compass_C_GetScrollBoxAdjustedSize final
{
public:
	double                                        AdjustedSize;                                      // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGeometry                              CallFunc_GetCachedGeometry_ReturnValue;            // 0x0008(0x0038)(ConstParm, IsPlainOldData, NoDestructor)
	struct FGeometry                              CallFunc_GetCachedGeometry_ReturnValue_1;          // 0x0040(0x0038)(ConstParm, IsPlainOldData, NoDestructor)
	struct FVector2D                              CallFunc_GetLocalSize_ReturnValue;                 // 0x0078(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_GetLocalSize_ReturnValue_1;               // 0x0088(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_X;                          // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y;                          // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_X_1;                        // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y_1;                        // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FMax_ReturnValue;                         // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Compass_C_GetScrollBoxAdjustedSize) == 0x000008, "Wrong alignment on WBP_Compass_C_GetScrollBoxAdjustedSize");
static_assert(sizeof(WBP_Compass_C_GetScrollBoxAdjustedSize) == 0x0000C8, "Wrong size on WBP_Compass_C_GetScrollBoxAdjustedSize");
static_assert(offsetof(WBP_Compass_C_GetScrollBoxAdjustedSize, AdjustedSize) == 0x000000, "Member 'WBP_Compass_C_GetScrollBoxAdjustedSize::AdjustedSize' has a wrong offset!");
static_assert(offsetof(WBP_Compass_C_GetScrollBoxAdjustedSize, CallFunc_GetCachedGeometry_ReturnValue) == 0x000008, "Member 'WBP_Compass_C_GetScrollBoxAdjustedSize::CallFunc_GetCachedGeometry_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Compass_C_GetScrollBoxAdjustedSize, CallFunc_GetCachedGeometry_ReturnValue_1) == 0x000040, "Member 'WBP_Compass_C_GetScrollBoxAdjustedSize::CallFunc_GetCachedGeometry_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_Compass_C_GetScrollBoxAdjustedSize, CallFunc_GetLocalSize_ReturnValue) == 0x000078, "Member 'WBP_Compass_C_GetScrollBoxAdjustedSize::CallFunc_GetLocalSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Compass_C_GetScrollBoxAdjustedSize, CallFunc_GetLocalSize_ReturnValue_1) == 0x000088, "Member 'WBP_Compass_C_GetScrollBoxAdjustedSize::CallFunc_GetLocalSize_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_Compass_C_GetScrollBoxAdjustedSize, CallFunc_BreakVector2D_X) == 0x000098, "Member 'WBP_Compass_C_GetScrollBoxAdjustedSize::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(WBP_Compass_C_GetScrollBoxAdjustedSize, CallFunc_BreakVector2D_Y) == 0x0000A0, "Member 'WBP_Compass_C_GetScrollBoxAdjustedSize::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(WBP_Compass_C_GetScrollBoxAdjustedSize, CallFunc_BreakVector2D_X_1) == 0x0000A8, "Member 'WBP_Compass_C_GetScrollBoxAdjustedSize::CallFunc_BreakVector2D_X_1' has a wrong offset!");
static_assert(offsetof(WBP_Compass_C_GetScrollBoxAdjustedSize, CallFunc_BreakVector2D_Y_1) == 0x0000B0, "Member 'WBP_Compass_C_GetScrollBoxAdjustedSize::CallFunc_BreakVector2D_Y_1' has a wrong offset!");
static_assert(offsetof(WBP_Compass_C_GetScrollBoxAdjustedSize, CallFunc_FMax_ReturnValue) == 0x0000B8, "Member 'WBP_Compass_C_GetScrollBoxAdjustedSize::CallFunc_FMax_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Compass_C_GetScrollBoxAdjustedSize, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x0000C0, "Member 'WBP_Compass_C_GetScrollBoxAdjustedSize::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");

// Function WBP_Compass.WBP_Compass_C.GraphicsSettingsChanged
// 0x0008 (0x0008 - 0x0000)
struct WBP_Compass_C_GraphicsSettingsChanged final
{
public:
	struct FValeriaGraphicSettings                GraphicSettings;                                   // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor)
};
static_assert(alignof(WBP_Compass_C_GraphicsSettingsChanged) == 0x000004, "Wrong alignment on WBP_Compass_C_GraphicsSettingsChanged");
static_assert(sizeof(WBP_Compass_C_GraphicsSettingsChanged) == 0x000008, "Wrong size on WBP_Compass_C_GraphicsSettingsChanged");
static_assert(offsetof(WBP_Compass_C_GraphicsSettingsChanged, GraphicSettings) == 0x000000, "Member 'WBP_Compass_C_GraphicsSettingsChanged::GraphicSettings' has a wrong offset!");

// Function WBP_Compass.WBP_Compass_C.HandleItemTracked
// 0x0150 (0x0150 - 0x0000)
struct WBP_Compass_C_HandleItemTracked final
{
public:
	class UTrackingComponent*                     Compass;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FTrackedItemInfo                       TrackedItemInfo;                                   // 0x0008(0x0148)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(WBP_Compass_C_HandleItemTracked) == 0x000008, "Wrong alignment on WBP_Compass_C_HandleItemTracked");
static_assert(sizeof(WBP_Compass_C_HandleItemTracked) == 0x000150, "Wrong size on WBP_Compass_C_HandleItemTracked");
static_assert(offsetof(WBP_Compass_C_HandleItemTracked, Compass) == 0x000000, "Member 'WBP_Compass_C_HandleItemTracked::Compass' has a wrong offset!");
static_assert(offsetof(WBP_Compass_C_HandleItemTracked, TrackedItemInfo) == 0x000008, "Member 'WBP_Compass_C_HandleItemTracked::TrackedItemInfo' has a wrong offset!");

// Function WBP_Compass.WBP_Compass_C.HandleItemUntracked
// 0x0150 (0x0150 - 0x0000)
struct WBP_Compass_C_HandleItemUntracked final
{
public:
	class UTrackingComponent*                     Compass;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FTrackedItemInfo                       TrackedItemInfo;                                   // 0x0008(0x0148)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(WBP_Compass_C_HandleItemUntracked) == 0x000008, "Wrong alignment on WBP_Compass_C_HandleItemUntracked");
static_assert(sizeof(WBP_Compass_C_HandleItemUntracked) == 0x000150, "Wrong size on WBP_Compass_C_HandleItemUntracked");
static_assert(offsetof(WBP_Compass_C_HandleItemUntracked, Compass) == 0x000000, "Member 'WBP_Compass_C_HandleItemUntracked::Compass' has a wrong offset!");
static_assert(offsetof(WBP_Compass_C_HandleItemUntracked, TrackedItemInfo) == 0x000008, "Member 'WBP_Compass_C_HandleItemUntracked::TrackedItemInfo' has a wrong offset!");

// Function WBP_Compass.WBP_Compass_C.HandleTrackedItemChanged
// 0x0150 (0x0150 - 0x0000)
struct WBP_Compass_C_HandleTrackedItemChanged final
{
public:
	class UTrackingComponent*                     Compass;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FTrackedItemInfo                       TrackedItemInfo;                                   // 0x0008(0x0148)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(WBP_Compass_C_HandleTrackedItemChanged) == 0x000008, "Wrong alignment on WBP_Compass_C_HandleTrackedItemChanged");
static_assert(sizeof(WBP_Compass_C_HandleTrackedItemChanged) == 0x000150, "Wrong size on WBP_Compass_C_HandleTrackedItemChanged");
static_assert(offsetof(WBP_Compass_C_HandleTrackedItemChanged, Compass) == 0x000000, "Member 'WBP_Compass_C_HandleTrackedItemChanged::Compass' has a wrong offset!");
static_assert(offsetof(WBP_Compass_C_HandleTrackedItemChanged, TrackedItemInfo) == 0x000008, "Member 'WBP_Compass_C_HandleTrackedItemChanged::TrackedItemInfo' has a wrong offset!");

// Function WBP_Compass.WBP_Compass_C.InitializeTrackerList
// 0x01A0 (0x01A0 - 0x0000)
struct WBP_Compass_C_InitializeTrackerList final
{
public:
	TArray<struct FTrackedItemInfo>               TrackedItems;                                      // 0x0000(0x0010)(Edit, BlueprintVisible)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4F72[0x4];                                     // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTrackedItemInfo                       CallFunc_Array_Get_Item;                           // 0x0018(0x0148)()
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0160(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0164(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EValeriaFuncResult                            CallFunc_GetValeriaPlayerController_OutResult;     // 0x0168(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4F73[0x7];                                     // 0x0169(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AValeriaPlayerController*               CallFunc_GetValeriaPlayerController_ReturnValue;   // 0x0170(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTrackingComponent*                     CallFunc_GetTrackingComponent_ReturnValue;         // 0x0178(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0180(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4F74[0x7];                                     // 0x0181(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FTrackedItemInfo>               CallFunc_GetTrackedItems_ReturnValue;              // 0x0188(0x0010)(ConstParm, ReferenceParm)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0198(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0199(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4F75[0x2];                                     // 0x019A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x019C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Compass_C_InitializeTrackerList) == 0x000008, "Wrong alignment on WBP_Compass_C_InitializeTrackerList");
static_assert(sizeof(WBP_Compass_C_InitializeTrackerList) == 0x0001A0, "Wrong size on WBP_Compass_C_InitializeTrackerList");
static_assert(offsetof(WBP_Compass_C_InitializeTrackerList, TrackedItems) == 0x000000, "Member 'WBP_Compass_C_InitializeTrackerList::TrackedItems' has a wrong offset!");
static_assert(offsetof(WBP_Compass_C_InitializeTrackerList, Temp_int_Array_Index_Variable) == 0x000010, "Member 'WBP_Compass_C_InitializeTrackerList::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Compass_C_InitializeTrackerList, CallFunc_Array_Get_Item) == 0x000018, "Member 'WBP_Compass_C_InitializeTrackerList::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_Compass_C_InitializeTrackerList, CallFunc_Array_Length_ReturnValue) == 0x000160, "Member 'WBP_Compass_C_InitializeTrackerList::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Compass_C_InitializeTrackerList, Temp_int_Loop_Counter_Variable) == 0x000164, "Member 'WBP_Compass_C_InitializeTrackerList::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Compass_C_InitializeTrackerList, CallFunc_GetValeriaPlayerController_OutResult) == 0x000168, "Member 'WBP_Compass_C_InitializeTrackerList::CallFunc_GetValeriaPlayerController_OutResult' has a wrong offset!");
static_assert(offsetof(WBP_Compass_C_InitializeTrackerList, CallFunc_GetValeriaPlayerController_ReturnValue) == 0x000170, "Member 'WBP_Compass_C_InitializeTrackerList::CallFunc_GetValeriaPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Compass_C_InitializeTrackerList, CallFunc_GetTrackingComponent_ReturnValue) == 0x000178, "Member 'WBP_Compass_C_InitializeTrackerList::CallFunc_GetTrackingComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Compass_C_InitializeTrackerList, K2Node_SwitchEnum_CmpSuccess) == 0x000180, "Member 'WBP_Compass_C_InitializeTrackerList::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(WBP_Compass_C_InitializeTrackerList, CallFunc_GetTrackedItems_ReturnValue) == 0x000188, "Member 'WBP_Compass_C_InitializeTrackerList::CallFunc_GetTrackedItems_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Compass_C_InitializeTrackerList, CallFunc_IsValid_ReturnValue) == 0x000198, "Member 'WBP_Compass_C_InitializeTrackerList::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Compass_C_InitializeTrackerList, CallFunc_Less_IntInt_ReturnValue) == 0x000199, "Member 'WBP_Compass_C_InitializeTrackerList::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Compass_C_InitializeTrackerList, CallFunc_Add_IntInt_ReturnValue) == 0x00019C, "Member 'WBP_Compass_C_InitializeTrackerList::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function WBP_Compass.WBP_Compass_C.MA_OnPopin
// 0x0068 (0x0068 - 0x0000)
struct WBP_Compass_C_MA_OnPopin final
{
public:
	class UWidget*                                ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0010(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class US6UI_UIManagerWidgetBase*              CallFunc_GetUIManagerWidget_ReturnValue;           // 0x0020(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_GameplayUIManagerTutorial_CM_C> K2Node_DynamicCast_AsBPI_Gameplay_UIManager_Tutorial_CM; // 0x0028(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4F76[0x7];                                     // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_FTUEPopin_CM_C*                    CallFunc_Redirect_FTUEPopin_Type_FTUEPopin;        // 0x0040(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4F77[0x7];                                     // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPanelSlot*                             CallFunc_SetContent_ReturnValue;                   // 0x0050(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x0058(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UWBP_PopinCalloutWidget_C*              CallFunc_Create_ReturnValue;                       // 0x0060(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Compass_C_MA_OnPopin) == 0x000008, "Wrong alignment on WBP_Compass_C_MA_OnPopin");
static_assert(sizeof(WBP_Compass_C_MA_OnPopin) == 0x000068, "Wrong size on WBP_Compass_C_MA_OnPopin");
static_assert(offsetof(WBP_Compass_C_MA_OnPopin, ReturnValue) == 0x000000, "Member 'WBP_Compass_C_MA_OnPopin::ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Compass_C_MA_OnPopin, CallFunc_GetPlayerController_ReturnValue) == 0x000008, "Member 'WBP_Compass_C_MA_OnPopin::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Compass_C_MA_OnPopin, K2Node_CreateDelegate_OutputDelegate) == 0x000010, "Member 'WBP_Compass_C_MA_OnPopin::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WBP_Compass_C_MA_OnPopin, CallFunc_GetUIManagerWidget_ReturnValue) == 0x000020, "Member 'WBP_Compass_C_MA_OnPopin::CallFunc_GetUIManagerWidget_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Compass_C_MA_OnPopin, K2Node_DynamicCast_AsBPI_Gameplay_UIManager_Tutorial_CM) == 0x000028, "Member 'WBP_Compass_C_MA_OnPopin::K2Node_DynamicCast_AsBPI_Gameplay_UIManager_Tutorial_CM' has a wrong offset!");
static_assert(offsetof(WBP_Compass_C_MA_OnPopin, K2Node_DynamicCast_bSuccess) == 0x000038, "Member 'WBP_Compass_C_MA_OnPopin::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_Compass_C_MA_OnPopin, CallFunc_Redirect_FTUEPopin_Type_FTUEPopin) == 0x000040, "Member 'WBP_Compass_C_MA_OnPopin::CallFunc_Redirect_FTUEPopin_Type_FTUEPopin' has a wrong offset!");
static_assert(offsetof(WBP_Compass_C_MA_OnPopin, CallFunc_IsValid_ReturnValue) == 0x000048, "Member 'WBP_Compass_C_MA_OnPopin::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Compass_C_MA_OnPopin, CallFunc_SetContent_ReturnValue) == 0x000050, "Member 'WBP_Compass_C_MA_OnPopin::CallFunc_SetContent_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Compass_C_MA_OnPopin, CallFunc_GetOwningPlayer_ReturnValue) == 0x000058, "Member 'WBP_Compass_C_MA_OnPopin::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Compass_C_MA_OnPopin, CallFunc_Create_ReturnValue) == 0x000060, "Member 'WBP_Compass_C_MA_OnPopin::CallFunc_Create_ReturnValue' has a wrong offset!");

// Function WBP_Compass.WBP_Compass_C.MapDgreeToCompassLocation
// 0x0058 (0x0058 - 0x0000)
struct WBP_Compass_C_MapDgreeToCompassLocation final
{
public:
	double                                        PanelWidth;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Dgree;                                             // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        LocationX;                                         // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsInBound;                                         // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4F78[0x7];                                     // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_1;        // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_1;           // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_2;           // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_InRange_FloatFloat_ReturnValue;           // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Compass_C_MapDgreeToCompassLocation) == 0x000008, "Wrong alignment on WBP_Compass_C_MapDgreeToCompassLocation");
static_assert(sizeof(WBP_Compass_C_MapDgreeToCompassLocation) == 0x000058, "Wrong size on WBP_Compass_C_MapDgreeToCompassLocation");
static_assert(offsetof(WBP_Compass_C_MapDgreeToCompassLocation, PanelWidth) == 0x000000, "Member 'WBP_Compass_C_MapDgreeToCompassLocation::PanelWidth' has a wrong offset!");
static_assert(offsetof(WBP_Compass_C_MapDgreeToCompassLocation, Dgree) == 0x000008, "Member 'WBP_Compass_C_MapDgreeToCompassLocation::Dgree' has a wrong offset!");
static_assert(offsetof(WBP_Compass_C_MapDgreeToCompassLocation, LocationX) == 0x000010, "Member 'WBP_Compass_C_MapDgreeToCompassLocation::LocationX' has a wrong offset!");
static_assert(offsetof(WBP_Compass_C_MapDgreeToCompassLocation, IsInBound) == 0x000018, "Member 'WBP_Compass_C_MapDgreeToCompassLocation::IsInBound' has a wrong offset!");
static_assert(offsetof(WBP_Compass_C_MapDgreeToCompassLocation, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000020, "Member 'WBP_Compass_C_MapDgreeToCompassLocation::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Compass_C_MapDgreeToCompassLocation, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000028, "Member 'WBP_Compass_C_MapDgreeToCompassLocation::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Compass_C_MapDgreeToCompassLocation, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000030, "Member 'WBP_Compass_C_MapDgreeToCompassLocation::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Compass_C_MapDgreeToCompassLocation, CallFunc_Divide_DoubleDouble_ReturnValue_1) == 0x000038, "Member 'WBP_Compass_C_MapDgreeToCompassLocation::CallFunc_Divide_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_Compass_C_MapDgreeToCompassLocation, CallFunc_Add_DoubleDouble_ReturnValue_1) == 0x000040, "Member 'WBP_Compass_C_MapDgreeToCompassLocation::CallFunc_Add_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_Compass_C_MapDgreeToCompassLocation, CallFunc_Add_DoubleDouble_ReturnValue_2) == 0x000048, "Member 'WBP_Compass_C_MapDgreeToCompassLocation::CallFunc_Add_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_Compass_C_MapDgreeToCompassLocation, CallFunc_InRange_FloatFloat_ReturnValue) == 0x000050, "Member 'WBP_Compass_C_MapDgreeToCompassLocation::CallFunc_InRange_FloatFloat_ReturnValue' has a wrong offset!");

// Function WBP_Compass.WBP_Compass_C.OnEnterPrivateSpace
// 0x0010 (0x0010 - 0x0000)
struct WBP_Compass_C_OnEnterPrivateSpace final
{
public:
	class AValeriaCharacter*                      InValeriaCharacter;                                // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	const class UPrivateSpaceConfig*              PrivateSpaceConfig;                                // 0x0008(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Compass_C_OnEnterPrivateSpace) == 0x000008, "Wrong alignment on WBP_Compass_C_OnEnterPrivateSpace");
static_assert(sizeof(WBP_Compass_C_OnEnterPrivateSpace) == 0x000010, "Wrong size on WBP_Compass_C_OnEnterPrivateSpace");
static_assert(offsetof(WBP_Compass_C_OnEnterPrivateSpace, InValeriaCharacter) == 0x000000, "Member 'WBP_Compass_C_OnEnterPrivateSpace::InValeriaCharacter' has a wrong offset!");
static_assert(offsetof(WBP_Compass_C_OnEnterPrivateSpace, PrivateSpaceConfig) == 0x000008, "Member 'WBP_Compass_C_OnEnterPrivateSpace::PrivateSpaceConfig' has a wrong offset!");

// Function WBP_Compass.WBP_Compass_C.OnExitPrivateSpace
// 0x0010 (0x0010 - 0x0000)
struct WBP_Compass_C_OnExitPrivateSpace final
{
public:
	class AValeriaCharacter*                      ValeriaCharacter;                                  // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrivateSpaceConfig*                    PrivateSpaceConfig;                                // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Compass_C_OnExitPrivateSpace) == 0x000008, "Wrong alignment on WBP_Compass_C_OnExitPrivateSpace");
static_assert(sizeof(WBP_Compass_C_OnExitPrivateSpace) == 0x000010, "Wrong size on WBP_Compass_C_OnExitPrivateSpace");
static_assert(offsetof(WBP_Compass_C_OnExitPrivateSpace, ValeriaCharacter) == 0x000000, "Member 'WBP_Compass_C_OnExitPrivateSpace::ValeriaCharacter' has a wrong offset!");
static_assert(offsetof(WBP_Compass_C_OnExitPrivateSpace, PrivateSpaceConfig) == 0x000008, "Member 'WBP_Compass_C_OnExitPrivateSpace::PrivateSpaceConfig' has a wrong offset!");

// Function WBP_Compass.WBP_Compass_C.OnTeleportComplete
// 0x0040 (0x0040 - 0x0000)
struct WBP_Compass_C_OnTeleportComplete final
{
public:
	class AValeriaCharacter*                      ValeriaCharacter;                                  // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	ETeleportTravelType                           TravelType;                                        // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4F79[0x7];                                     // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UPrivateSpaceConfig>     PrivateSpaceConfig;                                // 0x0010(0x0028)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Compass_C_OnTeleportComplete) == 0x000008, "Wrong alignment on WBP_Compass_C_OnTeleportComplete");
static_assert(sizeof(WBP_Compass_C_OnTeleportComplete) == 0x000040, "Wrong size on WBP_Compass_C_OnTeleportComplete");
static_assert(offsetof(WBP_Compass_C_OnTeleportComplete, ValeriaCharacter) == 0x000000, "Member 'WBP_Compass_C_OnTeleportComplete::ValeriaCharacter' has a wrong offset!");
static_assert(offsetof(WBP_Compass_C_OnTeleportComplete, TravelType) == 0x000008, "Member 'WBP_Compass_C_OnTeleportComplete::TravelType' has a wrong offset!");
static_assert(offsetof(WBP_Compass_C_OnTeleportComplete, PrivateSpaceConfig) == 0x000010, "Member 'WBP_Compass_C_OnTeleportComplete::PrivateSpaceConfig' has a wrong offset!");
static_assert(offsetof(WBP_Compass_C_OnTeleportComplete, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000038, "Member 'WBP_Compass_C_OnTeleportComplete::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Compass_C_OnTeleportComplete, CallFunc_Not_PreBool_ReturnValue) == 0x000039, "Member 'WBP_Compass_C_OnTeleportComplete::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function WBP_Compass.WBP_Compass_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct WBP_Compass_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Compass_C_PreConstruct) == 0x000001, "Wrong alignment on WBP_Compass_C_PreConstruct");
static_assert(sizeof(WBP_Compass_C_PreConstruct) == 0x000001, "Wrong size on WBP_Compass_C_PreConstruct");
static_assert(offsetof(WBP_Compass_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'WBP_Compass_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function WBP_Compass.WBP_Compass_C.RecalculateActiveCompassFOV
// 0x0050 (0x0050 - 0x0000)
struct WBP_Compass_C_RecalculateActiveCompassFOV final
{
public:
	class APlayerCameraManager*                   CallFunc_GetOwningPlayerCameraManager_ReturnValue; // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetScrollBoxAdjustedSize_AdjustedSize;    // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetFOVAngle_ReturnValue;                  // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4F7A[0x4];                                     // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_GetModifiedCameraFOV_FOV;                 // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_1;        // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_2;      // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_A_ImplicitCast;       // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Compass_C_RecalculateActiveCompassFOV) == 0x000008, "Wrong alignment on WBP_Compass_C_RecalculateActiveCompassFOV");
static_assert(sizeof(WBP_Compass_C_RecalculateActiveCompassFOV) == 0x000050, "Wrong size on WBP_Compass_C_RecalculateActiveCompassFOV");
static_assert(offsetof(WBP_Compass_C_RecalculateActiveCompassFOV, CallFunc_GetOwningPlayerCameraManager_ReturnValue) == 0x000000, "Member 'WBP_Compass_C_RecalculateActiveCompassFOV::CallFunc_GetOwningPlayerCameraManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Compass_C_RecalculateActiveCompassFOV, CallFunc_GetScrollBoxAdjustedSize_AdjustedSize) == 0x000008, "Member 'WBP_Compass_C_RecalculateActiveCompassFOV::CallFunc_GetScrollBoxAdjustedSize_AdjustedSize' has a wrong offset!");
static_assert(offsetof(WBP_Compass_C_RecalculateActiveCompassFOV, CallFunc_GetFOVAngle_ReturnValue) == 0x000010, "Member 'WBP_Compass_C_RecalculateActiveCompassFOV::CallFunc_GetFOVAngle_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Compass_C_RecalculateActiveCompassFOV, CallFunc_GetModifiedCameraFOV_FOV) == 0x000018, "Member 'WBP_Compass_C_RecalculateActiveCompassFOV::CallFunc_GetModifiedCameraFOV_FOV' has a wrong offset!");
static_assert(offsetof(WBP_Compass_C_RecalculateActiveCompassFOV, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000020, "Member 'WBP_Compass_C_RecalculateActiveCompassFOV::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Compass_C_RecalculateActiveCompassFOV, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000028, "Member 'WBP_Compass_C_RecalculateActiveCompassFOV::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Compass_C_RecalculateActiveCompassFOV, CallFunc_Divide_DoubleDouble_ReturnValue_1) == 0x000030, "Member 'WBP_Compass_C_RecalculateActiveCompassFOV::CallFunc_Divide_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_Compass_C_RecalculateActiveCompassFOV, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000038, "Member 'WBP_Compass_C_RecalculateActiveCompassFOV::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_Compass_C_RecalculateActiveCompassFOV, CallFunc_Multiply_DoubleDouble_ReturnValue_2) == 0x000040, "Member 'WBP_Compass_C_RecalculateActiveCompassFOV::CallFunc_Multiply_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_Compass_C_RecalculateActiveCompassFOV, CallFunc_Divide_DoubleDouble_A_ImplicitCast) == 0x000048, "Member 'WBP_Compass_C_RecalculateActiveCompassFOV::CallFunc_Divide_DoubleDouble_A_ImplicitCast' has a wrong offset!");

// Function WBP_Compass.WBP_Compass_C.RemoveTracker
// 0x0170 (0x0170 - 0x0000)
struct WBP_Compass_C_RemoveTracker final
{
public:
	struct FTrackedItemInfo                       TrackedItem;                                       // 0x0000(0x0148)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class UWBP_Compass_Tick_ActorTracker_C*       CachedTracker;                                     // 0x0148(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         InstanceId;                                        // 0x0150(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Remove_ReturnValue;                   // 0x0154(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Remove_ReturnValue_1;                 // 0x0155(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4F7B[0x2];                                     // 0x0156(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_Compass_Tick_ActorTracker_C*       CallFunc_FindTrackerForInstance_TrackerWidget;     // 0x0158(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UWBP_Compass_Tick_ActorTracker_C*       CallFunc_Map_Find_Value;                           // 0x0160(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0168(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_RemoveChild_ReturnValue;                  // 0x0169(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x016A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Compass_C_RemoveTracker) == 0x000008, "Wrong alignment on WBP_Compass_C_RemoveTracker");
static_assert(sizeof(WBP_Compass_C_RemoveTracker) == 0x000170, "Wrong size on WBP_Compass_C_RemoveTracker");
static_assert(offsetof(WBP_Compass_C_RemoveTracker, TrackedItem) == 0x000000, "Member 'WBP_Compass_C_RemoveTracker::TrackedItem' has a wrong offset!");
static_assert(offsetof(WBP_Compass_C_RemoveTracker, CachedTracker) == 0x000148, "Member 'WBP_Compass_C_RemoveTracker::CachedTracker' has a wrong offset!");
static_assert(offsetof(WBP_Compass_C_RemoveTracker, InstanceId) == 0x000150, "Member 'WBP_Compass_C_RemoveTracker::InstanceId' has a wrong offset!");
static_assert(offsetof(WBP_Compass_C_RemoveTracker, CallFunc_Map_Remove_ReturnValue) == 0x000154, "Member 'WBP_Compass_C_RemoveTracker::CallFunc_Map_Remove_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Compass_C_RemoveTracker, CallFunc_Map_Remove_ReturnValue_1) == 0x000155, "Member 'WBP_Compass_C_RemoveTracker::CallFunc_Map_Remove_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_Compass_C_RemoveTracker, CallFunc_FindTrackerForInstance_TrackerWidget) == 0x000158, "Member 'WBP_Compass_C_RemoveTracker::CallFunc_FindTrackerForInstance_TrackerWidget' has a wrong offset!");
static_assert(offsetof(WBP_Compass_C_RemoveTracker, CallFunc_Map_Find_Value) == 0x000160, "Member 'WBP_Compass_C_RemoveTracker::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(WBP_Compass_C_RemoveTracker, CallFunc_Map_Find_ReturnValue) == 0x000168, "Member 'WBP_Compass_C_RemoveTracker::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Compass_C_RemoveTracker, CallFunc_RemoveChild_ReturnValue) == 0x000169, "Member 'WBP_Compass_C_RemoveTracker::CallFunc_RemoveChild_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Compass_C_RemoveTracker, CallFunc_IsValid_ReturnValue) == 0x00016A, "Member 'WBP_Compass_C_RemoveTracker::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function WBP_Compass.WBP_Compass_C.RepositionSideTrackers
// 0x0110 (0x0110 - 0x0000)
struct WBP_Compass_C_RepositionSideTrackers final
{
public:
	class UCanvasPanel*                           ParentPanel;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TArray<class UWBP_Compass_Tick_ActorTracker_C*> Trackers;                                          // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
	class UImage*                                 AnchorImage;                                       // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              TrackerAlignment;                                  // 0x0020(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        StartOffset;                                       // 0x0030(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Spacing;                                           // 0x0038(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        OffsetStep;                                        // 0x0040(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsNotEmpty_ReturnValue;             // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4F7C[0x3];                                     // 0x0051(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class UObject* A, class UObject* B)> K2Node_CreateDelegate_OutputDelegate;              // 0x0054(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4F7D[0x4];                                     // 0x0064(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UObject*>                        CallFunc_SortObjectArray_ReturnValue;              // 0x0068(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4F7E[0x4];                                     // 0x007C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UCanvasPanelSlot*                       CallFunc_SlotAsCanvasSlot_ReturnValue;             // 0x0080(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4F7F[0x7];                                     // 0x0089(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FAnchors                               CallFunc_GetAnchors_ReturnValue;                   // 0x0090(0x0020)(NoDestructor)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4F80[0x4];                                     // 0x00B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_Array_Get_Item;                           // 0x00B8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4F81[0x7];                                     // 0x00C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_Compass_Tick_ActorTracker_C*       K2Node_DynamicCast_AsWBP_Compass_Tick_Actor_Tracker; // 0x00C8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4F82[0x7];                                     // 0x00D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UCanvasPanelSlot*                       CallFunc_SlotAsCanvasSlot_ReturnValue_1;           // 0x00D8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Multiply_IntInt_ReturnValue;              // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4F83[0x4];                                     // 0x00E4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Conv_IntToDouble_ReturnValue;             // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x0100(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Compass_C_RepositionSideTrackers) == 0x000008, "Wrong alignment on WBP_Compass_C_RepositionSideTrackers");
static_assert(sizeof(WBP_Compass_C_RepositionSideTrackers) == 0x000110, "Wrong size on WBP_Compass_C_RepositionSideTrackers");
static_assert(offsetof(WBP_Compass_C_RepositionSideTrackers, ParentPanel) == 0x000000, "Member 'WBP_Compass_C_RepositionSideTrackers::ParentPanel' has a wrong offset!");
static_assert(offsetof(WBP_Compass_C_RepositionSideTrackers, Trackers) == 0x000008, "Member 'WBP_Compass_C_RepositionSideTrackers::Trackers' has a wrong offset!");
static_assert(offsetof(WBP_Compass_C_RepositionSideTrackers, AnchorImage) == 0x000018, "Member 'WBP_Compass_C_RepositionSideTrackers::AnchorImage' has a wrong offset!");
static_assert(offsetof(WBP_Compass_C_RepositionSideTrackers, TrackerAlignment) == 0x000020, "Member 'WBP_Compass_C_RepositionSideTrackers::TrackerAlignment' has a wrong offset!");
static_assert(offsetof(WBP_Compass_C_RepositionSideTrackers, StartOffset) == 0x000030, "Member 'WBP_Compass_C_RepositionSideTrackers::StartOffset' has a wrong offset!");
static_assert(offsetof(WBP_Compass_C_RepositionSideTrackers, Spacing) == 0x000038, "Member 'WBP_Compass_C_RepositionSideTrackers::Spacing' has a wrong offset!");
static_assert(offsetof(WBP_Compass_C_RepositionSideTrackers, OffsetStep) == 0x000040, "Member 'WBP_Compass_C_RepositionSideTrackers::OffsetStep' has a wrong offset!");
static_assert(offsetof(WBP_Compass_C_RepositionSideTrackers, Temp_int_Loop_Counter_Variable) == 0x000048, "Member 'WBP_Compass_C_RepositionSideTrackers::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Compass_C_RepositionSideTrackers, CallFunc_Add_IntInt_ReturnValue) == 0x00004C, "Member 'WBP_Compass_C_RepositionSideTrackers::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Compass_C_RepositionSideTrackers, CallFunc_Array_IsNotEmpty_ReturnValue) == 0x000050, "Member 'WBP_Compass_C_RepositionSideTrackers::CallFunc_Array_IsNotEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Compass_C_RepositionSideTrackers, K2Node_CreateDelegate_OutputDelegate) == 0x000054, "Member 'WBP_Compass_C_RepositionSideTrackers::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WBP_Compass_C_RepositionSideTrackers, CallFunc_SortObjectArray_ReturnValue) == 0x000068, "Member 'WBP_Compass_C_RepositionSideTrackers::CallFunc_SortObjectArray_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Compass_C_RepositionSideTrackers, CallFunc_Array_Length_ReturnValue) == 0x000078, "Member 'WBP_Compass_C_RepositionSideTrackers::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Compass_C_RepositionSideTrackers, CallFunc_SlotAsCanvasSlot_ReturnValue) == 0x000080, "Member 'WBP_Compass_C_RepositionSideTrackers::CallFunc_SlotAsCanvasSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Compass_C_RepositionSideTrackers, CallFunc_Less_IntInt_ReturnValue) == 0x000088, "Member 'WBP_Compass_C_RepositionSideTrackers::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Compass_C_RepositionSideTrackers, CallFunc_GetAnchors_ReturnValue) == 0x000090, "Member 'WBP_Compass_C_RepositionSideTrackers::CallFunc_GetAnchors_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Compass_C_RepositionSideTrackers, Temp_int_Array_Index_Variable) == 0x0000B0, "Member 'WBP_Compass_C_RepositionSideTrackers::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Compass_C_RepositionSideTrackers, CallFunc_Array_Get_Item) == 0x0000B8, "Member 'WBP_Compass_C_RepositionSideTrackers::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_Compass_C_RepositionSideTrackers, CallFunc_Less_IntInt_ReturnValue_1) == 0x0000C0, "Member 'WBP_Compass_C_RepositionSideTrackers::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_Compass_C_RepositionSideTrackers, K2Node_DynamicCast_AsWBP_Compass_Tick_Actor_Tracker) == 0x0000C8, "Member 'WBP_Compass_C_RepositionSideTrackers::K2Node_DynamicCast_AsWBP_Compass_Tick_Actor_Tracker' has a wrong offset!");
static_assert(offsetof(WBP_Compass_C_RepositionSideTrackers, K2Node_DynamicCast_bSuccess) == 0x0000D0, "Member 'WBP_Compass_C_RepositionSideTrackers::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_Compass_C_RepositionSideTrackers, CallFunc_SlotAsCanvasSlot_ReturnValue_1) == 0x0000D8, "Member 'WBP_Compass_C_RepositionSideTrackers::CallFunc_SlotAsCanvasSlot_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_Compass_C_RepositionSideTrackers, CallFunc_Multiply_IntInt_ReturnValue) == 0x0000E0, "Member 'WBP_Compass_C_RepositionSideTrackers::CallFunc_Multiply_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Compass_C_RepositionSideTrackers, CallFunc_Conv_IntToDouble_ReturnValue) == 0x0000E8, "Member 'WBP_Compass_C_RepositionSideTrackers::CallFunc_Conv_IntToDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Compass_C_RepositionSideTrackers, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x0000F0, "Member 'WBP_Compass_C_RepositionSideTrackers::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Compass_C_RepositionSideTrackers, CallFunc_Add_DoubleDouble_ReturnValue) == 0x0000F8, "Member 'WBP_Compass_C_RepositionSideTrackers::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Compass_C_RepositionSideTrackers, CallFunc_MakeVector2D_ReturnValue) == 0x000100, "Member 'WBP_Compass_C_RepositionSideTrackers::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");

// Function WBP_Compass.WBP_Compass_C.SearchAreaActiveStateChanged
// 0x0001 (0x0001 - 0x0000)
struct WBP_Compass_C_SearchAreaActiveStateChanged final
{
public:
	bool                                          bActive;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Compass_C_SearchAreaActiveStateChanged) == 0x000001, "Wrong alignment on WBP_Compass_C_SearchAreaActiveStateChanged");
static_assert(sizeof(WBP_Compass_C_SearchAreaActiveStateChanged) == 0x000001, "Wrong size on WBP_Compass_C_SearchAreaActiveStateChanged");
static_assert(offsetof(WBP_Compass_C_SearchAreaActiveStateChanged, bActive) == 0x000000, "Member 'WBP_Compass_C_SearchAreaActiveStateChanged::bActive' has a wrong offset!");

// Function WBP_Compass.WBP_Compass_C.SetUpTickTimer
// 0x0020 (0x0020 - 0x0000)
struct WBP_Compass_C_SetUpTickTimer final
{
public:
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0000(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0010(0x0008)(NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_K2_SetTimerDelegate_Time_ImplicitCast;    // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Compass_C_SetUpTickTimer) == 0x000008, "Wrong alignment on WBP_Compass_C_SetUpTickTimer");
static_assert(sizeof(WBP_Compass_C_SetUpTickTimer) == 0x000020, "Wrong size on WBP_Compass_C_SetUpTickTimer");
static_assert(offsetof(WBP_Compass_C_SetUpTickTimer, K2Node_CreateDelegate_OutputDelegate) == 0x000000, "Member 'WBP_Compass_C_SetUpTickTimer::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WBP_Compass_C_SetUpTickTimer, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000010, "Member 'WBP_Compass_C_SetUpTickTimer::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Compass_C_SetUpTickTimer, CallFunc_K2_SetTimerDelegate_Time_ImplicitCast) == 0x000018, "Member 'WBP_Compass_C_SetUpTickTimer::CallFunc_K2_SetTimerDelegate_Time_ImplicitCast' has a wrong offset!");

// Function WBP_Compass.WBP_Compass_C.ShouldShowOnCompass
// 0x0158 (0x0158 - 0x0000)
struct WBP_Compass_C_ShouldShowOnCompass final
{
public:
	class UTrackingComponent*                     Tracking;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FTrackedItemInfo                       TrackedItemInfo;                                   // 0x0008(0x0148)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	bool                                          bShouldShow;                                       // 0x0150(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Client_IsFocusedItem_ReturnValue;         // 0x0151(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0152(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Compass_C_ShouldShowOnCompass) == 0x000008, "Wrong alignment on WBP_Compass_C_ShouldShowOnCompass");
static_assert(sizeof(WBP_Compass_C_ShouldShowOnCompass) == 0x000158, "Wrong size on WBP_Compass_C_ShouldShowOnCompass");
static_assert(offsetof(WBP_Compass_C_ShouldShowOnCompass, Tracking) == 0x000000, "Member 'WBP_Compass_C_ShouldShowOnCompass::Tracking' has a wrong offset!");
static_assert(offsetof(WBP_Compass_C_ShouldShowOnCompass, TrackedItemInfo) == 0x000008, "Member 'WBP_Compass_C_ShouldShowOnCompass::TrackedItemInfo' has a wrong offset!");
static_assert(offsetof(WBP_Compass_C_ShouldShowOnCompass, bShouldShow) == 0x000150, "Member 'WBP_Compass_C_ShouldShowOnCompass::bShouldShow' has a wrong offset!");
static_assert(offsetof(WBP_Compass_C_ShouldShowOnCompass, CallFunc_Client_IsFocusedItem_ReturnValue) == 0x000151, "Member 'WBP_Compass_C_ShouldShowOnCompass::CallFunc_Client_IsFocusedItem_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Compass_C_ShouldShowOnCompass, CallFunc_BooleanOR_ReturnValue) == 0x000152, "Member 'WBP_Compass_C_ShouldShowOnCompass::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");

// Function WBP_Compass.WBP_Compass_C.SortSideTrackers
// 0x0038 (0x0038 - 0x0000)
struct WBP_Compass_C_SortSideTrackers final
{
public:
	class UObject*                                A;                                                 // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UObject*                                B;                                                 // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4F84[0x7];                                     // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_Compass_Tick_ActorTracker_C*       K2Node_DynamicCast_AsWBP_Compass_Tick_Actor_Tracker; // 0x0018(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4F85[0x7];                                     // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_Compass_Tick_ActorTracker_C*       K2Node_DynamicCast_AsWBP_Compass_Tick_Actor_Tracker_1; // 0x0028(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue;            // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Compass_C_SortSideTrackers) == 0x000008, "Wrong alignment on WBP_Compass_C_SortSideTrackers");
static_assert(sizeof(WBP_Compass_C_SortSideTrackers) == 0x000038, "Wrong size on WBP_Compass_C_SortSideTrackers");
static_assert(offsetof(WBP_Compass_C_SortSideTrackers, A) == 0x000000, "Member 'WBP_Compass_C_SortSideTrackers::A' has a wrong offset!");
static_assert(offsetof(WBP_Compass_C_SortSideTrackers, B) == 0x000008, "Member 'WBP_Compass_C_SortSideTrackers::B' has a wrong offset!");
static_assert(offsetof(WBP_Compass_C_SortSideTrackers, ReturnValue) == 0x000010, "Member 'WBP_Compass_C_SortSideTrackers::ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Compass_C_SortSideTrackers, K2Node_DynamicCast_AsWBP_Compass_Tick_Actor_Tracker) == 0x000018, "Member 'WBP_Compass_C_SortSideTrackers::K2Node_DynamicCast_AsWBP_Compass_Tick_Actor_Tracker' has a wrong offset!");
static_assert(offsetof(WBP_Compass_C_SortSideTrackers, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'WBP_Compass_C_SortSideTrackers::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_Compass_C_SortSideTrackers, K2Node_DynamicCast_AsWBP_Compass_Tick_Actor_Tracker_1) == 0x000028, "Member 'WBP_Compass_C_SortSideTrackers::K2Node_DynamicCast_AsWBP_Compass_Tick_Actor_Tracker_1' has a wrong offset!");
static_assert(offsetof(WBP_Compass_C_SortSideTrackers, K2Node_DynamicCast_bSuccess_1) == 0x000030, "Member 'WBP_Compass_C_SortSideTrackers::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(WBP_Compass_C_SortSideTrackers, CallFunc_Less_DoubleDouble_ReturnValue) == 0x000031, "Member 'WBP_Compass_C_SortSideTrackers::CallFunc_Less_DoubleDouble_ReturnValue' has a wrong offset!");

// Function WBP_Compass.WBP_Compass_C.Tick
// 0x003C (0x003C - 0x0000)
struct WBP_Compass_C_Tick final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	float                                         InDeltaTime;                                       // 0x0038(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Compass_C_Tick) == 0x000004, "Wrong alignment on WBP_Compass_C_Tick");
static_assert(sizeof(WBP_Compass_C_Tick) == 0x00003C, "Wrong size on WBP_Compass_C_Tick");
static_assert(offsetof(WBP_Compass_C_Tick, MyGeometry) == 0x000000, "Member 'WBP_Compass_C_Tick::MyGeometry' has a wrong offset!");
static_assert(offsetof(WBP_Compass_C_Tick, InDeltaTime) == 0x000038, "Member 'WBP_Compass_C_Tick::InDeltaTime' has a wrong offset!");

// Function WBP_Compass.WBP_Compass_C.Tracked Item Changed
// 0x01B8 (0x01B8 - 0x0000)
struct WBP_Compass_C_Tracked_Item_Changed final
{
public:
	class UTrackingComponent*                     Compass;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FTrackedItemInfo                       Tracked_Item_Info;                                 // 0x0008(0x0148)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class UWBP_Compass_Tick_ActorTracker_C*       SideTrackerWidget;                                 // 0x0150(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UWBP_Compass_Tick_ActorTracker_C*       TrackerWidget;                                     // 0x0158(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ShouldShowOnCompass_bShouldShow;          // 0x0160(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4F86[0x7];                                     // 0x0161(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_Compass_Tick_ActorTracker_C*       CallFunc_Map_Find_Value;                           // 0x0168(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0170(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Client_IsFocusedItem_ReturnValue;         // 0x0171(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4F87[0x6];                                     // 0x0172(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_Compass_Tick_ActorTracker_C*       CallFunc_FindTrackerForInstance_TrackerWidget;     // 0x0178(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0180(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0181(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0182(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4F88[0x5];                                     // 0x0183(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UTexture2D>              K2Node_Select_Default;                             // 0x0188(0x0028)(UObjectWrapper, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidSoftObjectReference_ReturnValue;   // 0x01B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x01B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x01B2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x01B3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Compass_C_Tracked_Item_Changed) == 0x000008, "Wrong alignment on WBP_Compass_C_Tracked_Item_Changed");
static_assert(sizeof(WBP_Compass_C_Tracked_Item_Changed) == 0x0001B8, "Wrong size on WBP_Compass_C_Tracked_Item_Changed");
static_assert(offsetof(WBP_Compass_C_Tracked_Item_Changed, Compass) == 0x000000, "Member 'WBP_Compass_C_Tracked_Item_Changed::Compass' has a wrong offset!");
static_assert(offsetof(WBP_Compass_C_Tracked_Item_Changed, Tracked_Item_Info) == 0x000008, "Member 'WBP_Compass_C_Tracked_Item_Changed::Tracked_Item_Info' has a wrong offset!");
static_assert(offsetof(WBP_Compass_C_Tracked_Item_Changed, SideTrackerWidget) == 0x000150, "Member 'WBP_Compass_C_Tracked_Item_Changed::SideTrackerWidget' has a wrong offset!");
static_assert(offsetof(WBP_Compass_C_Tracked_Item_Changed, TrackerWidget) == 0x000158, "Member 'WBP_Compass_C_Tracked_Item_Changed::TrackerWidget' has a wrong offset!");
static_assert(offsetof(WBP_Compass_C_Tracked_Item_Changed, CallFunc_ShouldShowOnCompass_bShouldShow) == 0x000160, "Member 'WBP_Compass_C_Tracked_Item_Changed::CallFunc_ShouldShowOnCompass_bShouldShow' has a wrong offset!");
static_assert(offsetof(WBP_Compass_C_Tracked_Item_Changed, CallFunc_Map_Find_Value) == 0x000168, "Member 'WBP_Compass_C_Tracked_Item_Changed::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(WBP_Compass_C_Tracked_Item_Changed, CallFunc_Map_Find_ReturnValue) == 0x000170, "Member 'WBP_Compass_C_Tracked_Item_Changed::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Compass_C_Tracked_Item_Changed, CallFunc_Client_IsFocusedItem_ReturnValue) == 0x000171, "Member 'WBP_Compass_C_Tracked_Item_Changed::CallFunc_Client_IsFocusedItem_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Compass_C_Tracked_Item_Changed, CallFunc_FindTrackerForInstance_TrackerWidget) == 0x000178, "Member 'WBP_Compass_C_Tracked_Item_Changed::CallFunc_FindTrackerForInstance_TrackerWidget' has a wrong offset!");
static_assert(offsetof(WBP_Compass_C_Tracked_Item_Changed, CallFunc_IsValid_ReturnValue) == 0x000180, "Member 'WBP_Compass_C_Tracked_Item_Changed::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Compass_C_Tracked_Item_Changed, CallFunc_Not_PreBool_ReturnValue) == 0x000181, "Member 'WBP_Compass_C_Tracked_Item_Changed::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Compass_C_Tracked_Item_Changed, Temp_bool_Variable) == 0x000182, "Member 'WBP_Compass_C_Tracked_Item_Changed::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Compass_C_Tracked_Item_Changed, K2Node_Select_Default) == 0x000188, "Member 'WBP_Compass_C_Tracked_Item_Changed::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_Compass_C_Tracked_Item_Changed, CallFunc_IsValidSoftObjectReference_ReturnValue) == 0x0001B0, "Member 'WBP_Compass_C_Tracked_Item_Changed::CallFunc_IsValidSoftObjectReference_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Compass_C_Tracked_Item_Changed, CallFunc_IsValid_ReturnValue_1) == 0x0001B1, "Member 'WBP_Compass_C_Tracked_Item_Changed::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_Compass_C_Tracked_Item_Changed, CallFunc_Not_PreBool_ReturnValue_1) == 0x0001B2, "Member 'WBP_Compass_C_Tracked_Item_Changed::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_Compass_C_Tracked_Item_Changed, CallFunc_BooleanAND_ReturnValue) == 0x0001B3, "Member 'WBP_Compass_C_Tracked_Item_Changed::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function WBP_Compass.WBP_Compass_C.Update All Trackers
// 0x01B8 (0x01B8 - 0x0000)
struct WBP_Compass_C_Update_All_Trackers final
{
public:
	double                                        PanelWidth;                                        // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCanvasPanelSlot*                       CompassItemCanvasSlot;                             // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UWBP_Compass_Tick_ActorTracker_C*       CurrentCompassItem;                                // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4F89[0x4];                                     // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_GetMaxVisibleDistance_MaxVisibleDistance; // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UWBP_Compass_Tick_ActorTracker_C*> CallFunc_Map_Values_Values;                        // 0x0028(0x0010)(ReferenceParm, ContainsInstancedReference)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue;            // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4F8A[0x7];                                     // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_Compass_Tick_ActorTracker_C*       CallFunc_Array_Get_Item;                           // 0x0040(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4F8B[0x4];                                     // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UCanvasPanelSlot*                       CallFunc_SlotAsCanvasSlot_ReturnValue;             // 0x0050(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_GetSize_ReturnValue;                      // 0x0058(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_X;                          // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y;                          // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue;                       // 0x0078(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotFromX_ReturnValue;                 // 0x0090(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EValeriaFuncResult                            CallFunc_GetValeriaPlayerController_OutResult;     // 0x00B4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4F8C[0x3];                                     // 0x00B5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AValeriaPlayerController*               CallFunc_GetValeriaPlayerController_ReturnValue;   // 0x00B8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_NormalizeAxis_ReturnValue;                // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4F8D[0x4];                                     // 0x00C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UTrackingComponent*                     CallFunc_GetTrackingComponent_ReturnValue;         // 0x00C8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Client_SetFocusedItem_ReturnValue;        // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4F8E[0x3];                                     // 0x00D9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_NormalizeAxis_ReturnValue_1;              // 0x00DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4F8F[0x7];                                     // 0x00E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_MapDgreeToCompassLocation_LocationX;      // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_MapDgreeToCompassLocation_IsInBound;      // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4F90[0x7];                                     // 0x00F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x0100(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetIsFocused_IsFocused;                   // 0x0110(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4F91[0x7];                                     // 0x0111(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0118(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue_1;               // 0x0120(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue_1;          // 0x0130(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4F92[0x7];                                     // 0x0131(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FAnchors                               K2Node_MakeStruct_Anchors;                         // 0x0138(0x0020)(NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0158(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4F93[0x7];                                     // 0x0159(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UCanvasPanelSlot*                       CallFunc_SlotAsCanvasSlot_ReturnValue_1;           // 0x0160(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetIsFocused_IsFocused_1;                 // 0x0168(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4F94[0x3];                                     // 0x0169(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x016C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0170(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4F95[0x7];                                     // 0x0171(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0178(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_1;      // 0x0180(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0188(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_DoubleDouble_ReturnValue;       // 0x0189(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x018A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x018B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x018C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0190(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_DoesWorldLocationContextMatchCurrentTravelType_DoesMatch; // 0x0191(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4F96[0x6];                                     // 0x0192(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Subtract_DoubleDouble_B_ImplicitCast;     // 0x0198(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_A_ImplicitCast;     // 0x01A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_NormalizeAxis_Angle_ImplicitCast;         // 0x01A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4F97[0x4];                                     // 0x01AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_MapDgreeToCompassLocation_Dgree_ImplicitCast; // 0x01B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Compass_C_Update_All_Trackers) == 0x000008, "Wrong alignment on WBP_Compass_C_Update_All_Trackers");
static_assert(sizeof(WBP_Compass_C_Update_All_Trackers) == 0x0001B8, "Wrong size on WBP_Compass_C_Update_All_Trackers");
static_assert(offsetof(WBP_Compass_C_Update_All_Trackers, PanelWidth) == 0x000000, "Member 'WBP_Compass_C_Update_All_Trackers::PanelWidth' has a wrong offset!");
static_assert(offsetof(WBP_Compass_C_Update_All_Trackers, CompassItemCanvasSlot) == 0x000008, "Member 'WBP_Compass_C_Update_All_Trackers::CompassItemCanvasSlot' has a wrong offset!");
static_assert(offsetof(WBP_Compass_C_Update_All_Trackers, CurrentCompassItem) == 0x000010, "Member 'WBP_Compass_C_Update_All_Trackers::CurrentCompassItem' has a wrong offset!");
static_assert(offsetof(WBP_Compass_C_Update_All_Trackers, Temp_int_Array_Index_Variable) == 0x000018, "Member 'WBP_Compass_C_Update_All_Trackers::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Compass_C_Update_All_Trackers, CallFunc_GetMaxVisibleDistance_MaxVisibleDistance) == 0x000020, "Member 'WBP_Compass_C_Update_All_Trackers::CallFunc_GetMaxVisibleDistance_MaxVisibleDistance' has a wrong offset!");
static_assert(offsetof(WBP_Compass_C_Update_All_Trackers, CallFunc_Map_Values_Values) == 0x000028, "Member 'WBP_Compass_C_Update_All_Trackers::CallFunc_Map_Values_Values' has a wrong offset!");
static_assert(offsetof(WBP_Compass_C_Update_All_Trackers, CallFunc_Less_DoubleDouble_ReturnValue) == 0x000038, "Member 'WBP_Compass_C_Update_All_Trackers::CallFunc_Less_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Compass_C_Update_All_Trackers, CallFunc_Array_Get_Item) == 0x000040, "Member 'WBP_Compass_C_Update_All_Trackers::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_Compass_C_Update_All_Trackers, CallFunc_Array_Length_ReturnValue) == 0x000048, "Member 'WBP_Compass_C_Update_All_Trackers::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Compass_C_Update_All_Trackers, CallFunc_SlotAsCanvasSlot_ReturnValue) == 0x000050, "Member 'WBP_Compass_C_Update_All_Trackers::CallFunc_SlotAsCanvasSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Compass_C_Update_All_Trackers, CallFunc_GetSize_ReturnValue) == 0x000058, "Member 'WBP_Compass_C_Update_All_Trackers::CallFunc_GetSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Compass_C_Update_All_Trackers, CallFunc_BreakVector2D_X) == 0x000068, "Member 'WBP_Compass_C_Update_All_Trackers::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(WBP_Compass_C_Update_All_Trackers, CallFunc_BreakVector2D_Y) == 0x000070, "Member 'WBP_Compass_C_Update_All_Trackers::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(WBP_Compass_C_Update_All_Trackers, CallFunc_Normal_ReturnValue) == 0x000078, "Member 'WBP_Compass_C_Update_All_Trackers::CallFunc_Normal_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Compass_C_Update_All_Trackers, CallFunc_MakeRotFromX_ReturnValue) == 0x000090, "Member 'WBP_Compass_C_Update_All_Trackers::CallFunc_MakeRotFromX_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Compass_C_Update_All_Trackers, CallFunc_BreakRotator_Roll) == 0x0000A8, "Member 'WBP_Compass_C_Update_All_Trackers::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(WBP_Compass_C_Update_All_Trackers, CallFunc_BreakRotator_Pitch) == 0x0000AC, "Member 'WBP_Compass_C_Update_All_Trackers::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(WBP_Compass_C_Update_All_Trackers, CallFunc_BreakRotator_Yaw) == 0x0000B0, "Member 'WBP_Compass_C_Update_All_Trackers::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(WBP_Compass_C_Update_All_Trackers, CallFunc_GetValeriaPlayerController_OutResult) == 0x0000B4, "Member 'WBP_Compass_C_Update_All_Trackers::CallFunc_GetValeriaPlayerController_OutResult' has a wrong offset!");
static_assert(offsetof(WBP_Compass_C_Update_All_Trackers, CallFunc_GetValeriaPlayerController_ReturnValue) == 0x0000B8, "Member 'WBP_Compass_C_Update_All_Trackers::CallFunc_GetValeriaPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Compass_C_Update_All_Trackers, CallFunc_NormalizeAxis_ReturnValue) == 0x0000C0, "Member 'WBP_Compass_C_Update_All_Trackers::CallFunc_NormalizeAxis_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Compass_C_Update_All_Trackers, CallFunc_GetTrackingComponent_ReturnValue) == 0x0000C8, "Member 'WBP_Compass_C_Update_All_Trackers::CallFunc_GetTrackingComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Compass_C_Update_All_Trackers, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x0000D0, "Member 'WBP_Compass_C_Update_All_Trackers::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Compass_C_Update_All_Trackers, CallFunc_Client_SetFocusedItem_ReturnValue) == 0x0000D8, "Member 'WBP_Compass_C_Update_All_Trackers::CallFunc_Client_SetFocusedItem_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Compass_C_Update_All_Trackers, CallFunc_NormalizeAxis_ReturnValue_1) == 0x0000DC, "Member 'WBP_Compass_C_Update_All_Trackers::CallFunc_NormalizeAxis_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_Compass_C_Update_All_Trackers, K2Node_SwitchEnum_CmpSuccess) == 0x0000E0, "Member 'WBP_Compass_C_Update_All_Trackers::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(WBP_Compass_C_Update_All_Trackers, CallFunc_MapDgreeToCompassLocation_LocationX) == 0x0000E8, "Member 'WBP_Compass_C_Update_All_Trackers::CallFunc_MapDgreeToCompassLocation_LocationX' has a wrong offset!");
static_assert(offsetof(WBP_Compass_C_Update_All_Trackers, CallFunc_MapDgreeToCompassLocation_IsInBound) == 0x0000F0, "Member 'WBP_Compass_C_Update_All_Trackers::CallFunc_MapDgreeToCompassLocation_IsInBound' has a wrong offset!");
static_assert(offsetof(WBP_Compass_C_Update_All_Trackers, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x0000F8, "Member 'WBP_Compass_C_Update_All_Trackers::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Compass_C_Update_All_Trackers, CallFunc_MakeVector2D_ReturnValue) == 0x000100, "Member 'WBP_Compass_C_Update_All_Trackers::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Compass_C_Update_All_Trackers, CallFunc_GetIsFocused_IsFocused) == 0x000110, "Member 'WBP_Compass_C_Update_All_Trackers::CallFunc_GetIsFocused_IsFocused' has a wrong offset!");
static_assert(offsetof(WBP_Compass_C_Update_All_Trackers, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000118, "Member 'WBP_Compass_C_Update_All_Trackers::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Compass_C_Update_All_Trackers, CallFunc_MakeVector2D_ReturnValue_1) == 0x000120, "Member 'WBP_Compass_C_Update_All_Trackers::CallFunc_MakeVector2D_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_Compass_C_Update_All_Trackers, CallFunc_Less_DoubleDouble_ReturnValue_1) == 0x000130, "Member 'WBP_Compass_C_Update_All_Trackers::CallFunc_Less_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_Compass_C_Update_All_Trackers, K2Node_MakeStruct_Anchors) == 0x000138, "Member 'WBP_Compass_C_Update_All_Trackers::K2Node_MakeStruct_Anchors' has a wrong offset!");
static_assert(offsetof(WBP_Compass_C_Update_All_Trackers, CallFunc_BooleanAND_ReturnValue) == 0x000158, "Member 'WBP_Compass_C_Update_All_Trackers::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Compass_C_Update_All_Trackers, CallFunc_SlotAsCanvasSlot_ReturnValue_1) == 0x000160, "Member 'WBP_Compass_C_Update_All_Trackers::CallFunc_SlotAsCanvasSlot_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_Compass_C_Update_All_Trackers, CallFunc_GetIsFocused_IsFocused_1) == 0x000168, "Member 'WBP_Compass_C_Update_All_Trackers::CallFunc_GetIsFocused_IsFocused_1' has a wrong offset!");
static_assert(offsetof(WBP_Compass_C_Update_All_Trackers, Temp_int_Loop_Counter_Variable) == 0x00016C, "Member 'WBP_Compass_C_Update_All_Trackers::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Compass_C_Update_All_Trackers, CallFunc_Less_IntInt_ReturnValue) == 0x000170, "Member 'WBP_Compass_C_Update_All_Trackers::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Compass_C_Update_All_Trackers, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000178, "Member 'WBP_Compass_C_Update_All_Trackers::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_Compass_C_Update_All_Trackers, CallFunc_Subtract_DoubleDouble_ReturnValue_1) == 0x000180, "Member 'WBP_Compass_C_Update_All_Trackers::CallFunc_Subtract_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_Compass_C_Update_All_Trackers, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000188, "Member 'WBP_Compass_C_Update_All_Trackers::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Compass_C_Update_All_Trackers, CallFunc_LessEqual_DoubleDouble_ReturnValue) == 0x000189, "Member 'WBP_Compass_C_Update_All_Trackers::CallFunc_LessEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Compass_C_Update_All_Trackers, CallFunc_BooleanOR_ReturnValue) == 0x00018A, "Member 'WBP_Compass_C_Update_All_Trackers::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Compass_C_Update_All_Trackers, CallFunc_Not_PreBool_ReturnValue) == 0x00018B, "Member 'WBP_Compass_C_Update_All_Trackers::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Compass_C_Update_All_Trackers, CallFunc_Add_IntInt_ReturnValue) == 0x00018C, "Member 'WBP_Compass_C_Update_All_Trackers::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Compass_C_Update_All_Trackers, CallFunc_BooleanAND_ReturnValue_1) == 0x000190, "Member 'WBP_Compass_C_Update_All_Trackers::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_Compass_C_Update_All_Trackers, CallFunc_DoesWorldLocationContextMatchCurrentTravelType_DoesMatch) == 0x000191, "Member 'WBP_Compass_C_Update_All_Trackers::CallFunc_DoesWorldLocationContextMatchCurrentTravelType_DoesMatch' has a wrong offset!");
static_assert(offsetof(WBP_Compass_C_Update_All_Trackers, CallFunc_Subtract_DoubleDouble_B_ImplicitCast) == 0x000198, "Member 'WBP_Compass_C_Update_All_Trackers::CallFunc_Subtract_DoubleDouble_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(WBP_Compass_C_Update_All_Trackers, CallFunc_Subtract_DoubleDouble_A_ImplicitCast) == 0x0001A0, "Member 'WBP_Compass_C_Update_All_Trackers::CallFunc_Subtract_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(WBP_Compass_C_Update_All_Trackers, CallFunc_NormalizeAxis_Angle_ImplicitCast) == 0x0001A8, "Member 'WBP_Compass_C_Update_All_Trackers::CallFunc_NormalizeAxis_Angle_ImplicitCast' has a wrong offset!");
static_assert(offsetof(WBP_Compass_C_Update_All_Trackers, CallFunc_MapDgreeToCompassLocation_Dgree_ImplicitCast) == 0x0001B0, "Member 'WBP_Compass_C_Update_All_Trackers::CallFunc_MapDgreeToCompassLocation_Dgree_ImplicitCast' has a wrong offset!");

// Function WBP_Compass.WBP_Compass_C.Update Direction
// 0x0050 (0x0050 - 0x0000)
struct WBP_Compass_C_Update_Direction final
{
public:
	double                                        CallFunc_MapRangeClamped_ReturnValue;              // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetCameraYaw_Rotation;                    // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_NormalizeAxis_ReturnValue;                // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FindDeltaAngleDegrees_DeltaAngle;         // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FInterpTo_ReturnValue;                    // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_NormalizeAxis_ReturnValue_1;              // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FindDeltaAngleDegrees_StartAngle_ImplicitCast; // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast; // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_NormalizeAxis_Angle_ImplicitCast;         // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_B_ImplicitCast;          // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_NormalizeAxis_Angle_ImplicitCast_1;       // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4F98[0x4];                                     // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_VariableSet_CurrentCompassDgree_ImplicitCast; // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Compass_C_Update_Direction) == 0x000008, "Wrong alignment on WBP_Compass_C_Update_Direction");
static_assert(sizeof(WBP_Compass_C_Update_Direction) == 0x000050, "Wrong size on WBP_Compass_C_Update_Direction");
static_assert(offsetof(WBP_Compass_C_Update_Direction, CallFunc_MapRangeClamped_ReturnValue) == 0x000000, "Member 'WBP_Compass_C_Update_Direction::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Compass_C_Update_Direction, CallFunc_GetCameraYaw_Rotation) == 0x000008, "Member 'WBP_Compass_C_Update_Direction::CallFunc_GetCameraYaw_Rotation' has a wrong offset!");
static_assert(offsetof(WBP_Compass_C_Update_Direction, CallFunc_NormalizeAxis_ReturnValue) == 0x000010, "Member 'WBP_Compass_C_Update_Direction::CallFunc_NormalizeAxis_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Compass_C_Update_Direction, CallFunc_FindDeltaAngleDegrees_DeltaAngle) == 0x000014, "Member 'WBP_Compass_C_Update_Direction::CallFunc_FindDeltaAngleDegrees_DeltaAngle' has a wrong offset!");
static_assert(offsetof(WBP_Compass_C_Update_Direction, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000018, "Member 'WBP_Compass_C_Update_Direction::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Compass_C_Update_Direction, CallFunc_FInterpTo_ReturnValue) == 0x000020, "Member 'WBP_Compass_C_Update_Direction::CallFunc_FInterpTo_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Compass_C_Update_Direction, CallFunc_NormalizeAxis_ReturnValue_1) == 0x000028, "Member 'WBP_Compass_C_Update_Direction::CallFunc_NormalizeAxis_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_Compass_C_Update_Direction, CallFunc_FindDeltaAngleDegrees_StartAngle_ImplicitCast) == 0x00002C, "Member 'WBP_Compass_C_Update_Direction::CallFunc_FindDeltaAngleDegrees_StartAngle_ImplicitCast' has a wrong offset!");
static_assert(offsetof(WBP_Compass_C_Update_Direction, CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast) == 0x000030, "Member 'WBP_Compass_C_Update_Direction::CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast' has a wrong offset!");
static_assert(offsetof(WBP_Compass_C_Update_Direction, CallFunc_NormalizeAxis_Angle_ImplicitCast) == 0x000034, "Member 'WBP_Compass_C_Update_Direction::CallFunc_NormalizeAxis_Angle_ImplicitCast' has a wrong offset!");
static_assert(offsetof(WBP_Compass_C_Update_Direction, CallFunc_Add_DoubleDouble_B_ImplicitCast) == 0x000038, "Member 'WBP_Compass_C_Update_Direction::CallFunc_Add_DoubleDouble_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(WBP_Compass_C_Update_Direction, CallFunc_NormalizeAxis_Angle_ImplicitCast_1) == 0x000040, "Member 'WBP_Compass_C_Update_Direction::CallFunc_NormalizeAxis_Angle_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(WBP_Compass_C_Update_Direction, K2Node_VariableSet_CurrentCompassDgree_ImplicitCast) == 0x000048, "Member 'WBP_Compass_C_Update_Direction::K2Node_VariableSet_CurrentCompassDgree_ImplicitCast' has a wrong offset!");

// Function WBP_Compass.WBP_Compass_C.UpdateSideTrackers
// 0x01E0 (0x01E0 - 0x0000)
struct WBP_Compass_C_UpdateSideTrackers final
{
public:
	struct FTransform                             ReferenceTransform;                                // 0x0000(0x0060)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CameraAngle;                                       // 0x0060(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UWBP_Compass_Tick_ActorTracker_C*> SideTrackersL;                                     // 0x0068(0x0010)(Edit, BlueprintVisible, ContainsInstancedReference)
	TArray<class UWBP_Compass_Tick_ActorTracker_C*> SideTrackersR;                                     // 0x0078(0x0010)(Edit, BlueprintVisible, ContainsInstancedReference)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4F99[0x4];                                     // 0x008C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4F9A[0x4];                                     // 0x009C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x00A0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x00B8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x00D0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x00EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x00F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x00F8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TArray<class UWBP_Compass_Tick_ActorTracker_C*> CallFunc_Map_Values_Values;                        // 0x0110(0x0010)(ReferenceParm, ContainsInstancedReference)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0120(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4F9B[0x4];                                     // 0x0124(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_Compass_Tick_ActorTracker_C*       CallFunc_Array_Get_Item;                           // 0x0128(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0130(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4F9C[0x3];                                     // 0x0131(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0134(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x0138(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetIsFocused_IsFocused;                   // 0x013C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4F9D[0x3];                                     // 0x013D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Normal_ReturnValue;                       // 0x0140(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotFromX_ReturnValue;                 // 0x0158(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0170(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_NormalizedDeltaRotator_ReturnValue;       // 0x0178(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakRotator_Roll_1;                      // 0x0190(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch_1;                     // 0x0194(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw_1;                       // 0x0198(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4F9E[0x4];                                     // 0x019C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_GetMaxVisibleDistance_MaxVisibleDistance; // 0x01A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_DoubleDouble_ReturnValue;    // 0x01A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue;            // 0x01A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x01AA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_DoubleDouble_ReturnValue;       // 0x01AB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x01AC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4F9F[0x3];                                     // 0x01AD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Abs_ReturnValue;                          // 0x01B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_DoesWorldLocationContextMatchCurrentTravelType_DoesMatch; // 0x01B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4FA0[0x7];                                     // 0x01B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Abs_A_ImplicitCast;                       // 0x01C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_LessEqual_DoubleDouble_A_ImplicitCast;    // 0x01C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GreaterEqual_DoubleDouble_A_ImplicitCast; // 0x01D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Compass_C_UpdateSideTrackers) == 0x000010, "Wrong alignment on WBP_Compass_C_UpdateSideTrackers");
static_assert(sizeof(WBP_Compass_C_UpdateSideTrackers) == 0x0001E0, "Wrong size on WBP_Compass_C_UpdateSideTrackers");
static_assert(offsetof(WBP_Compass_C_UpdateSideTrackers, ReferenceTransform) == 0x000000, "Member 'WBP_Compass_C_UpdateSideTrackers::ReferenceTransform' has a wrong offset!");
static_assert(offsetof(WBP_Compass_C_UpdateSideTrackers, CameraAngle) == 0x000060, "Member 'WBP_Compass_C_UpdateSideTrackers::CameraAngle' has a wrong offset!");
static_assert(offsetof(WBP_Compass_C_UpdateSideTrackers, SideTrackersL) == 0x000068, "Member 'WBP_Compass_C_UpdateSideTrackers::SideTrackersL' has a wrong offset!");
static_assert(offsetof(WBP_Compass_C_UpdateSideTrackers, SideTrackersR) == 0x000078, "Member 'WBP_Compass_C_UpdateSideTrackers::SideTrackersR' has a wrong offset!");
static_assert(offsetof(WBP_Compass_C_UpdateSideTrackers, Temp_int_Array_Index_Variable) == 0x000088, "Member 'WBP_Compass_C_UpdateSideTrackers::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Compass_C_UpdateSideTrackers, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000090, "Member 'WBP_Compass_C_UpdateSideTrackers::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Compass_C_UpdateSideTrackers, Temp_int_Loop_Counter_Variable) == 0x000098, "Member 'WBP_Compass_C_UpdateSideTrackers::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Compass_C_UpdateSideTrackers, CallFunc_BreakTransform_Location) == 0x0000A0, "Member 'WBP_Compass_C_UpdateSideTrackers::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(WBP_Compass_C_UpdateSideTrackers, CallFunc_BreakTransform_Rotation) == 0x0000B8, "Member 'WBP_Compass_C_UpdateSideTrackers::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(WBP_Compass_C_UpdateSideTrackers, CallFunc_BreakTransform_Scale) == 0x0000D0, "Member 'WBP_Compass_C_UpdateSideTrackers::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(WBP_Compass_C_UpdateSideTrackers, CallFunc_Add_IntInt_ReturnValue) == 0x0000E8, "Member 'WBP_Compass_C_UpdateSideTrackers::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Compass_C_UpdateSideTrackers, CallFunc_BreakRotator_Roll) == 0x0000EC, "Member 'WBP_Compass_C_UpdateSideTrackers::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(WBP_Compass_C_UpdateSideTrackers, CallFunc_BreakRotator_Pitch) == 0x0000F0, "Member 'WBP_Compass_C_UpdateSideTrackers::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(WBP_Compass_C_UpdateSideTrackers, CallFunc_BreakRotator_Yaw) == 0x0000F4, "Member 'WBP_Compass_C_UpdateSideTrackers::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(WBP_Compass_C_UpdateSideTrackers, CallFunc_MakeRotator_ReturnValue) == 0x0000F8, "Member 'WBP_Compass_C_UpdateSideTrackers::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Compass_C_UpdateSideTrackers, CallFunc_Map_Values_Values) == 0x000110, "Member 'WBP_Compass_C_UpdateSideTrackers::CallFunc_Map_Values_Values' has a wrong offset!");
static_assert(offsetof(WBP_Compass_C_UpdateSideTrackers, CallFunc_Array_Length_ReturnValue) == 0x000120, "Member 'WBP_Compass_C_UpdateSideTrackers::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Compass_C_UpdateSideTrackers, CallFunc_Array_Get_Item) == 0x000128, "Member 'WBP_Compass_C_UpdateSideTrackers::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_Compass_C_UpdateSideTrackers, CallFunc_Less_IntInt_ReturnValue) == 0x000130, "Member 'WBP_Compass_C_UpdateSideTrackers::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Compass_C_UpdateSideTrackers, CallFunc_Array_Add_ReturnValue) == 0x000134, "Member 'WBP_Compass_C_UpdateSideTrackers::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Compass_C_UpdateSideTrackers, CallFunc_Array_Add_ReturnValue_1) == 0x000138, "Member 'WBP_Compass_C_UpdateSideTrackers::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_Compass_C_UpdateSideTrackers, CallFunc_GetIsFocused_IsFocused) == 0x00013C, "Member 'WBP_Compass_C_UpdateSideTrackers::CallFunc_GetIsFocused_IsFocused' has a wrong offset!");
static_assert(offsetof(WBP_Compass_C_UpdateSideTrackers, CallFunc_Normal_ReturnValue) == 0x000140, "Member 'WBP_Compass_C_UpdateSideTrackers::CallFunc_Normal_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Compass_C_UpdateSideTrackers, CallFunc_MakeRotFromX_ReturnValue) == 0x000158, "Member 'WBP_Compass_C_UpdateSideTrackers::CallFunc_MakeRotFromX_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Compass_C_UpdateSideTrackers, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000170, "Member 'WBP_Compass_C_UpdateSideTrackers::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_Compass_C_UpdateSideTrackers, CallFunc_NormalizedDeltaRotator_ReturnValue) == 0x000178, "Member 'WBP_Compass_C_UpdateSideTrackers::CallFunc_NormalizedDeltaRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Compass_C_UpdateSideTrackers, CallFunc_BreakRotator_Roll_1) == 0x000190, "Member 'WBP_Compass_C_UpdateSideTrackers::CallFunc_BreakRotator_Roll_1' has a wrong offset!");
static_assert(offsetof(WBP_Compass_C_UpdateSideTrackers, CallFunc_BreakRotator_Pitch_1) == 0x000194, "Member 'WBP_Compass_C_UpdateSideTrackers::CallFunc_BreakRotator_Pitch_1' has a wrong offset!");
static_assert(offsetof(WBP_Compass_C_UpdateSideTrackers, CallFunc_BreakRotator_Yaw_1) == 0x000198, "Member 'WBP_Compass_C_UpdateSideTrackers::CallFunc_BreakRotator_Yaw_1' has a wrong offset!");
static_assert(offsetof(WBP_Compass_C_UpdateSideTrackers, CallFunc_GetMaxVisibleDistance_MaxVisibleDistance) == 0x0001A0, "Member 'WBP_Compass_C_UpdateSideTrackers::CallFunc_GetMaxVisibleDistance_MaxVisibleDistance' has a wrong offset!");
static_assert(offsetof(WBP_Compass_C_UpdateSideTrackers, CallFunc_GreaterEqual_DoubleDouble_ReturnValue) == 0x0001A8, "Member 'WBP_Compass_C_UpdateSideTrackers::CallFunc_GreaterEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Compass_C_UpdateSideTrackers, CallFunc_Less_DoubleDouble_ReturnValue) == 0x0001A9, "Member 'WBP_Compass_C_UpdateSideTrackers::CallFunc_Less_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Compass_C_UpdateSideTrackers, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x0001AA, "Member 'WBP_Compass_C_UpdateSideTrackers::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Compass_C_UpdateSideTrackers, CallFunc_LessEqual_DoubleDouble_ReturnValue) == 0x0001AB, "Member 'WBP_Compass_C_UpdateSideTrackers::CallFunc_LessEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Compass_C_UpdateSideTrackers, CallFunc_BooleanOR_ReturnValue) == 0x0001AC, "Member 'WBP_Compass_C_UpdateSideTrackers::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Compass_C_UpdateSideTrackers, CallFunc_Abs_ReturnValue) == 0x0001B0, "Member 'WBP_Compass_C_UpdateSideTrackers::CallFunc_Abs_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Compass_C_UpdateSideTrackers, CallFunc_DoesWorldLocationContextMatchCurrentTravelType_DoesMatch) == 0x0001B8, "Member 'WBP_Compass_C_UpdateSideTrackers::CallFunc_DoesWorldLocationContextMatchCurrentTravelType_DoesMatch' has a wrong offset!");
static_assert(offsetof(WBP_Compass_C_UpdateSideTrackers, CallFunc_Abs_A_ImplicitCast) == 0x0001C0, "Member 'WBP_Compass_C_UpdateSideTrackers::CallFunc_Abs_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(WBP_Compass_C_UpdateSideTrackers, CallFunc_LessEqual_DoubleDouble_A_ImplicitCast) == 0x0001C8, "Member 'WBP_Compass_C_UpdateSideTrackers::CallFunc_LessEqual_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(WBP_Compass_C_UpdateSideTrackers, CallFunc_GreaterEqual_DoubleDouble_A_ImplicitCast) == 0x0001D0, "Member 'WBP_Compass_C_UpdateSideTrackers::CallFunc_GreaterEqual_DoubleDouble_A_ImplicitCast' has a wrong offset!");

// Function WBP_Compass.WBP_Compass_C.WBP_Compass_AutoGenFunc
// 0x0008 (0x0008 - 0x0000)
struct WBP_Compass_C_WBP_Compass_AutoGenFunc final
{
public:
	class UVAL_TutorialFlagsManager*              CallFunc_GetLocalPlayerSubsystem_ReturnValue;      // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Compass_C_WBP_Compass_AutoGenFunc) == 0x000008, "Wrong alignment on WBP_Compass_C_WBP_Compass_AutoGenFunc");
static_assert(sizeof(WBP_Compass_C_WBP_Compass_AutoGenFunc) == 0x000008, "Wrong size on WBP_Compass_C_WBP_Compass_AutoGenFunc");
static_assert(offsetof(WBP_Compass_C_WBP_Compass_AutoGenFunc, CallFunc_GetLocalPlayerSubsystem_ReturnValue) == 0x000000, "Member 'WBP_Compass_C_WBP_Compass_AutoGenFunc::CallFunc_GetLocalPlayerSubsystem_ReturnValue' has a wrong offset!");

// Function WBP_Compass.WBP_Compass_C.WindowSizeUpdated
// 0x0010 (0x0010 - 0x0000)
struct WBP_Compass_C_WindowSizeUpdated final
{
public:
	struct FVector2D                              NewWindowSize;                                     // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Compass_C_WindowSizeUpdated) == 0x000008, "Wrong alignment on WBP_Compass_C_WindowSizeUpdated");
static_assert(sizeof(WBP_Compass_C_WindowSizeUpdated) == 0x000010, "Wrong size on WBP_Compass_C_WindowSizeUpdated");
static_assert(offsetof(WBP_Compass_C_WindowSizeUpdated, NewWindowSize) == 0x000000, "Member 'WBP_Compass_C_WindowSizeUpdated::NewWindowSize' has a wrong offset!");

}

