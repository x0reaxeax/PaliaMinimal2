#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Ak_OneShotByMapping

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "E_AudioMappingName_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass Ak_OneShotByMapping.Ak_OneShotByMapping_C
// 0x0020 (0x0058 - 0x0038)
class UAk_OneShotByMapping_C final : public UAnimNotify
{
public:
	class FName                                   DEPRECATED_MappingName;                            // 0x0038(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_AudioMappingName                            MappingName;                                       // 0x0040(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Follow;                                            // 0x0041(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3364[0x2];                                     // 0x0042(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   SpecificMappingQualifier;                          // 0x0044(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3365[0x4];                                     // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UDataTable*                             FallbackTable;                                     // 0x0050(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)

public:
	struct FAudioMappingConfig FindAudioMapping(class UAbilityAnimationComponent* AbilityAnimComp, class FName MappingQualifier, class UDataTable* MappingTable, const class FString& CallFunc_GetEnumeratorUserFriendlyName_ReturnValue, class UDataTable* CallFunc_Map_Find_Value, bool CallFunc_Map_Find_ReturnValue, class FName CallFunc_Conv_StringToName_ReturnValue, const struct FAudioMappingConfig& CallFunc_GetDataTableRowFromName_OutRow, bool CallFunc_GetDataTableRowFromName_ReturnValue, bool CallFunc_IsValid_ReturnValue) const;
	class FString GetNotifyName(const class FString& CallFunc_GetEnumeratorUserFriendlyName_ReturnValue, const class FString& CallFunc_Concat_StrStr_ReturnValue) const;
	void PlayAudio(class USkeletalMeshComponent* MeshComp, bool* Success, EAttachLocation AttachRule, const struct FVector& AttachOffset, class FName SocketName, class UAkAudioEvent* AkEvent, class UAbilityAnimationComponent* AbilityAnimComp, bool SuccessfulPlay, int32 Temp_int_Array_Index_Variable, class AActor* CallFunc_GetOwner_ReturnValue, class AValeriaCharacter* K2Node_DynamicCast_AsValeria_Character, bool K2Node_DynamicCast_bSuccess, class UAbilityAnimationComponent* CallFunc_GetAbilityAnimation_ReturnValue, int32 Temp_int_Loop_Counter_Variable, class AActor* CallFunc_GetOwner_ReturnValue_1, int32 CallFunc_Add_IntInt_ReturnValue, bool CallFunc_IsValid_ReturnValue, bool CallFunc_AkGetComponent_ComponentCreated, class UAkComponent* CallFunc_AkGetComponent_AkComponent, int32 CallFunc_AkEventComponent_ReturnValue, const struct FTransform& CallFunc_GetSocketTransform_ReturnValue, bool CallFunc_IsValid_ReturnValue_1, const struct FVector& CallFunc_BreakTransform_Location, const struct FRotator& CallFunc_BreakTransform_Rotation, const struct FVector& CallFunc_BreakTransform_Scale, const struct FVector& CallFunc_Add_VectorVector_ReturnValue, class UAkComponent* CallFunc_AkEventLocationWithActor_AkComponent, int32 CallFunc_AkEventLocationWithActor_Playing_ID, const class FString& CallFunc_GetEnumeratorUserFriendlyName_ReturnValue, class FName CallFunc_Conv_StringToName_ReturnValue, const struct FAudioMappingConfig& CallFunc_GetDataTableRowFromName_OutRow, bool CallFunc_GetDataTableRowFromName_ReturnValue, TArray<class FName>& CallFunc_Map_Keys_Keys, class FName CallFunc_Array_Get_Item, int32 CallFunc_Array_Length_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue, bool CallFunc_PlayAudioMappingHelper_Success, bool CallFunc_PlayAudioMappingHelper_Success_1, bool CallFunc_NotEqual_NameName_ReturnValue) const;
	void PlayAudioMappingHelper(class UAbilityAnimationComponent* AbilityAnimComp, class USceneComponent* AttachToComponent, class FName MappingQualifier, bool* Success, EAttachLocation AttachRule, const struct FVector& AttachOffset, class FName SocketName, class UAkAudioEvent* AkEvent, const struct FAudioMappingConfig& CallFunc_FindAudioMapping_ReturnValue, bool CallFunc_IsValid_ReturnValue, class AActor* CallFunc_GetOwner_ReturnValue, bool CallFunc_AkGetComponent_ComponentCreated, class UAkComponent* CallFunc_AkGetComponent_AkComponent, const struct FTransform& CallFunc_GetSocketTransform_ReturnValue, int32 CallFunc_AkEventComponent_ReturnValue, const struct FVector& CallFunc_BreakTransform_Location, const struct FRotator& CallFunc_BreakTransform_Rotation, const struct FVector& CallFunc_BreakTransform_Scale, const struct FVector& CallFunc_Add_VectorVector_ReturnValue, class UAkComponent* CallFunc_AkEventLocationWithActor_AkComponent, int32 CallFunc_AkEventLocationWithActor_Playing_ID) const;
	bool Received_Notify(class USkeletalMeshComponent* MeshComp, class UAnimSequenceBase* Animation, struct FAnimNotifyEventReference& EventReference, bool CallFunc_IsDedicatedServer_ReturnValue, bool CallFunc_PlayAudio_Success) const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"Ak_OneShotByMapping_C">();
	}
	static class UAk_OneShotByMapping_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAk_OneShotByMapping_C>();
	}
};
static_assert(alignof(UAk_OneShotByMapping_C) == 0x000008, "Wrong alignment on UAk_OneShotByMapping_C");
static_assert(sizeof(UAk_OneShotByMapping_C) == 0x000058, "Wrong size on UAk_OneShotByMapping_C");
static_assert(offsetof(UAk_OneShotByMapping_C, DEPRECATED_MappingName) == 0x000038, "Member 'UAk_OneShotByMapping_C::DEPRECATED_MappingName' has a wrong offset!");
static_assert(offsetof(UAk_OneShotByMapping_C, MappingName) == 0x000040, "Member 'UAk_OneShotByMapping_C::MappingName' has a wrong offset!");
static_assert(offsetof(UAk_OneShotByMapping_C, Follow) == 0x000041, "Member 'UAk_OneShotByMapping_C::Follow' has a wrong offset!");
static_assert(offsetof(UAk_OneShotByMapping_C, SpecificMappingQualifier) == 0x000044, "Member 'UAk_OneShotByMapping_C::SpecificMappingQualifier' has a wrong offset!");
static_assert(offsetof(UAk_OneShotByMapping_C, FallbackTable) == 0x000050, "Member 'UAk_OneShotByMapping_C::FallbackTable' has a wrong offset!");

}

