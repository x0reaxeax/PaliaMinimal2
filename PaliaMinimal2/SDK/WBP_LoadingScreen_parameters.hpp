#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_LoadingScreen

#include "Basic.hpp"

#include "Palia_structs.hpp"


namespace SDK::Params
{

// Function WBP_LoadingScreen.WBP_LoadingScreen_C.AddLoadingExtension
// 0x0008 (0x0008 - 0x0000)
struct WBP_LoadingScreen_C_AddLoadingExtension final
{
public:
	class UUserWidget*                            Widget;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_LoadingScreen_C_AddLoadingExtension) == 0x000008, "Wrong alignment on WBP_LoadingScreen_C_AddLoadingExtension");
static_assert(sizeof(WBP_LoadingScreen_C_AddLoadingExtension) == 0x000008, "Wrong size on WBP_LoadingScreen_C_AddLoadingExtension");
static_assert(offsetof(WBP_LoadingScreen_C_AddLoadingExtension, Widget) == 0x000000, "Member 'WBP_LoadingScreen_C_AddLoadingExtension::Widget' has a wrong offset!");

// Function WBP_LoadingScreen.WBP_LoadingScreen_C.BndEvt__WBP_LoadingScreen_LoadingScreenBlackWidget_K2Node_ComponentBoundEvent_0_OnNoneToBlackAnimationPlayed__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct WBP_LoadingScreen_C_BndEvt__WBP_LoadingScreen_LoadingScreenBlackWidget_K2Node_ComponentBoundEvent_0_OnNoneToBlackAnimationPlayed__DelegateSignature final
{
public:
	double                                        Duration;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_LoadingScreen_C_BndEvt__WBP_LoadingScreen_LoadingScreenBlackWidget_K2Node_ComponentBoundEvent_0_OnNoneToBlackAnimationPlayed__DelegateSignature) == 0x000008, "Wrong alignment on WBP_LoadingScreen_C_BndEvt__WBP_LoadingScreen_LoadingScreenBlackWidget_K2Node_ComponentBoundEvent_0_OnNoneToBlackAnimationPlayed__DelegateSignature");
static_assert(sizeof(WBP_LoadingScreen_C_BndEvt__WBP_LoadingScreen_LoadingScreenBlackWidget_K2Node_ComponentBoundEvent_0_OnNoneToBlackAnimationPlayed__DelegateSignature) == 0x000008, "Wrong size on WBP_LoadingScreen_C_BndEvt__WBP_LoadingScreen_LoadingScreenBlackWidget_K2Node_ComponentBoundEvent_0_OnNoneToBlackAnimationPlayed__DelegateSignature");
static_assert(offsetof(WBP_LoadingScreen_C_BndEvt__WBP_LoadingScreen_LoadingScreenBlackWidget_K2Node_ComponentBoundEvent_0_OnNoneToBlackAnimationPlayed__DelegateSignature, Duration) == 0x000000, "Member 'WBP_LoadingScreen_C_BndEvt__WBP_LoadingScreen_LoadingScreenBlackWidget_K2Node_ComponentBoundEvent_0_OnNoneToBlackAnimationPlayed__DelegateSignature::Duration' has a wrong offset!");

// Function WBP_LoadingScreen.WBP_LoadingScreen_C.BndEvt__WBP_LoadingScreen_LoadingScreenBlackWidget_K2Node_ComponentBoundEvent_1_OnBlackToNoneAnimationPlayed__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct WBP_LoadingScreen_C_BndEvt__WBP_LoadingScreen_LoadingScreenBlackWidget_K2Node_ComponentBoundEvent_1_OnBlackToNoneAnimationPlayed__DelegateSignature final
{
public:
	double                                        Duration;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_LoadingScreen_C_BndEvt__WBP_LoadingScreen_LoadingScreenBlackWidget_K2Node_ComponentBoundEvent_1_OnBlackToNoneAnimationPlayed__DelegateSignature) == 0x000008, "Wrong alignment on WBP_LoadingScreen_C_BndEvt__WBP_LoadingScreen_LoadingScreenBlackWidget_K2Node_ComponentBoundEvent_1_OnBlackToNoneAnimationPlayed__DelegateSignature");
static_assert(sizeof(WBP_LoadingScreen_C_BndEvt__WBP_LoadingScreen_LoadingScreenBlackWidget_K2Node_ComponentBoundEvent_1_OnBlackToNoneAnimationPlayed__DelegateSignature) == 0x000008, "Wrong size on WBP_LoadingScreen_C_BndEvt__WBP_LoadingScreen_LoadingScreenBlackWidget_K2Node_ComponentBoundEvent_1_OnBlackToNoneAnimationPlayed__DelegateSignature");
static_assert(offsetof(WBP_LoadingScreen_C_BndEvt__WBP_LoadingScreen_LoadingScreenBlackWidget_K2Node_ComponentBoundEvent_1_OnBlackToNoneAnimationPlayed__DelegateSignature, Duration) == 0x000000, "Member 'WBP_LoadingScreen_C_BndEvt__WBP_LoadingScreen_LoadingScreenBlackWidget_K2Node_ComponentBoundEvent_1_OnBlackToNoneAnimationPlayed__DelegateSignature::Duration' has a wrong offset!");

// Function WBP_LoadingScreen.WBP_LoadingScreen_C.DisplayLoadingExtension
// 0x0001 (0x0001 - 0x0000)
struct WBP_LoadingScreen_C_DisplayLoadingExtension final
{
public:
	bool                                          Display;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_LoadingScreen_C_DisplayLoadingExtension) == 0x000001, "Wrong alignment on WBP_LoadingScreen_C_DisplayLoadingExtension");
static_assert(sizeof(WBP_LoadingScreen_C_DisplayLoadingExtension) == 0x000001, "Wrong size on WBP_LoadingScreen_C_DisplayLoadingExtension");
static_assert(offsetof(WBP_LoadingScreen_C_DisplayLoadingExtension, Display) == 0x000000, "Member 'WBP_LoadingScreen_C_DisplayLoadingExtension::Display' has a wrong offset!");

// Function WBP_LoadingScreen.WBP_LoadingScreen_C.ExecuteUbergraph_WBP_LoadingScreen
// 0x0070 (0x0070 - 0x0000)
struct WBP_LoadingScreen_C_ExecuteUbergraph_WBP_LoadingScreen final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1350[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture2D*                             K2Node_Event_Texture;                              // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FPaliaLoadingScreenTip                 K2Node_Event_Tip;                                  // 0x0010(0x0030)(ConstParm)
	double                                        K2Node_ComponentBoundEvent_Duration_1;             // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_ComponentBoundEvent_Duration;               // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_Display;                              // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1351[0x6];                                     // 0x0052(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UUserWidget*                            K2Node_Event_Widget;                               // 0x0058(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UWidget*                                K2Node_Select_Default;                             // 0x0060(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UPanelSlot*                             CallFunc_AddChild_ReturnValue;                     // 0x0068(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_LoadingScreen_C_ExecuteUbergraph_WBP_LoadingScreen) == 0x000008, "Wrong alignment on WBP_LoadingScreen_C_ExecuteUbergraph_WBP_LoadingScreen");
static_assert(sizeof(WBP_LoadingScreen_C_ExecuteUbergraph_WBP_LoadingScreen) == 0x000070, "Wrong size on WBP_LoadingScreen_C_ExecuteUbergraph_WBP_LoadingScreen");
static_assert(offsetof(WBP_LoadingScreen_C_ExecuteUbergraph_WBP_LoadingScreen, EntryPoint) == 0x000000, "Member 'WBP_LoadingScreen_C_ExecuteUbergraph_WBP_LoadingScreen::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_LoadingScreen_C_ExecuteUbergraph_WBP_LoadingScreen, K2Node_Event_Texture) == 0x000008, "Member 'WBP_LoadingScreen_C_ExecuteUbergraph_WBP_LoadingScreen::K2Node_Event_Texture' has a wrong offset!");
static_assert(offsetof(WBP_LoadingScreen_C_ExecuteUbergraph_WBP_LoadingScreen, K2Node_Event_Tip) == 0x000010, "Member 'WBP_LoadingScreen_C_ExecuteUbergraph_WBP_LoadingScreen::K2Node_Event_Tip' has a wrong offset!");
static_assert(offsetof(WBP_LoadingScreen_C_ExecuteUbergraph_WBP_LoadingScreen, K2Node_ComponentBoundEvent_Duration_1) == 0x000040, "Member 'WBP_LoadingScreen_C_ExecuteUbergraph_WBP_LoadingScreen::K2Node_ComponentBoundEvent_Duration_1' has a wrong offset!");
static_assert(offsetof(WBP_LoadingScreen_C_ExecuteUbergraph_WBP_LoadingScreen, K2Node_ComponentBoundEvent_Duration) == 0x000048, "Member 'WBP_LoadingScreen_C_ExecuteUbergraph_WBP_LoadingScreen::K2Node_ComponentBoundEvent_Duration' has a wrong offset!");
static_assert(offsetof(WBP_LoadingScreen_C_ExecuteUbergraph_WBP_LoadingScreen, K2Node_Event_Display) == 0x000050, "Member 'WBP_LoadingScreen_C_ExecuteUbergraph_WBP_LoadingScreen::K2Node_Event_Display' has a wrong offset!");
static_assert(offsetof(WBP_LoadingScreen_C_ExecuteUbergraph_WBP_LoadingScreen, Temp_bool_Variable) == 0x000051, "Member 'WBP_LoadingScreen_C_ExecuteUbergraph_WBP_LoadingScreen::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_LoadingScreen_C_ExecuteUbergraph_WBP_LoadingScreen, K2Node_Event_Widget) == 0x000058, "Member 'WBP_LoadingScreen_C_ExecuteUbergraph_WBP_LoadingScreen::K2Node_Event_Widget' has a wrong offset!");
static_assert(offsetof(WBP_LoadingScreen_C_ExecuteUbergraph_WBP_LoadingScreen, K2Node_Select_Default) == 0x000060, "Member 'WBP_LoadingScreen_C_ExecuteUbergraph_WBP_LoadingScreen::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_LoadingScreen_C_ExecuteUbergraph_WBP_LoadingScreen, CallFunc_AddChild_ReturnValue) == 0x000068, "Member 'WBP_LoadingScreen_C_ExecuteUbergraph_WBP_LoadingScreen::CallFunc_AddChild_ReturnValue' has a wrong offset!");

// Function WBP_LoadingScreen.WBP_LoadingScreen_C.HandleFadeAudioValues
// 0x0050 (0x0050 - 0x0000)
struct WBP_LoadingScreen_C_HandleFadeAudioValues final
{
public:
	double                                        Duration;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          FadeToBlack;                                       // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1352[0x7];                                     // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAkAudioEvent*                          Temp_object_Variable;                              // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAkAudioEvent*                          Temp_object_Variable_1;                            // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1353[0x7];                                     // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAkAudioEvent*                          K2Node_Select_Default;                             // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_AkEventGlobal_ReturnValue;                // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1354[0x4];                                     // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue;                       // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetRTPCValue_Value_ImplicitCast;          // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_LoadingScreen_C_HandleFadeAudioValues) == 0x000008, "Wrong alignment on WBP_LoadingScreen_C_HandleFadeAudioValues");
static_assert(sizeof(WBP_LoadingScreen_C_HandleFadeAudioValues) == 0x000050, "Wrong size on WBP_LoadingScreen_C_HandleFadeAudioValues");
static_assert(offsetof(WBP_LoadingScreen_C_HandleFadeAudioValues, Duration) == 0x000000, "Member 'WBP_LoadingScreen_C_HandleFadeAudioValues::Duration' has a wrong offset!");
static_assert(offsetof(WBP_LoadingScreen_C_HandleFadeAudioValues, FadeToBlack) == 0x000008, "Member 'WBP_LoadingScreen_C_HandleFadeAudioValues::FadeToBlack' has a wrong offset!");
static_assert(offsetof(WBP_LoadingScreen_C_HandleFadeAudioValues, Temp_object_Variable) == 0x000010, "Member 'WBP_LoadingScreen_C_HandleFadeAudioValues::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(WBP_LoadingScreen_C_HandleFadeAudioValues, CallFunc_SelectFloat_ReturnValue) == 0x000018, "Member 'WBP_LoadingScreen_C_HandleFadeAudioValues::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_LoadingScreen_C_HandleFadeAudioValues, Temp_object_Variable_1) == 0x000020, "Member 'WBP_LoadingScreen_C_HandleFadeAudioValues::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_LoadingScreen_C_HandleFadeAudioValues, Temp_bool_Variable) == 0x000028, "Member 'WBP_LoadingScreen_C_HandleFadeAudioValues::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_LoadingScreen_C_HandleFadeAudioValues, K2Node_Select_Default) == 0x000030, "Member 'WBP_LoadingScreen_C_HandleFadeAudioValues::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_LoadingScreen_C_HandleFadeAudioValues, CallFunc_AkEventGlobal_ReturnValue) == 0x000038, "Member 'WBP_LoadingScreen_C_HandleFadeAudioValues::CallFunc_AkEventGlobal_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_LoadingScreen_C_HandleFadeAudioValues, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000040, "Member 'WBP_LoadingScreen_C_HandleFadeAudioValues::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_LoadingScreen_C_HandleFadeAudioValues, CallFunc_FTrunc_ReturnValue) == 0x000048, "Member 'WBP_LoadingScreen_C_HandleFadeAudioValues::CallFunc_FTrunc_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_LoadingScreen_C_HandleFadeAudioValues, CallFunc_SetRTPCValue_Value_ImplicitCast) == 0x00004C, "Member 'WBP_LoadingScreen_C_HandleFadeAudioValues::CallFunc_SetRTPCValue_Value_ImplicitCast' has a wrong offset!");

// Function WBP_LoadingScreen.WBP_LoadingScreen_C.HandleSetBackgroundImage
// 0x0008 (0x0008 - 0x0000)
struct WBP_LoadingScreen_C_HandleSetBackgroundImage final
{
public:
	class UTexture2D*                             Texture;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_LoadingScreen_C_HandleSetBackgroundImage) == 0x000008, "Wrong alignment on WBP_LoadingScreen_C_HandleSetBackgroundImage");
static_assert(sizeof(WBP_LoadingScreen_C_HandleSetBackgroundImage) == 0x000008, "Wrong size on WBP_LoadingScreen_C_HandleSetBackgroundImage");
static_assert(offsetof(WBP_LoadingScreen_C_HandleSetBackgroundImage, Texture) == 0x000000, "Member 'WBP_LoadingScreen_C_HandleSetBackgroundImage::Texture' has a wrong offset!");

// Function WBP_LoadingScreen.WBP_LoadingScreen_C.HandleSetLoadingScreenTip
// 0x0030 (0x0030 - 0x0000)
struct WBP_LoadingScreen_C_HandleSetLoadingScreenTip final
{
public:
	struct FPaliaLoadingScreenTip                 Tip;                                               // 0x0000(0x0030)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(WBP_LoadingScreen_C_HandleSetLoadingScreenTip) == 0x000008, "Wrong alignment on WBP_LoadingScreen_C_HandleSetLoadingScreenTip");
static_assert(sizeof(WBP_LoadingScreen_C_HandleSetLoadingScreenTip) == 0x000030, "Wrong size on WBP_LoadingScreen_C_HandleSetLoadingScreenTip");
static_assert(offsetof(WBP_LoadingScreen_C_HandleSetLoadingScreenTip, Tip) == 0x000000, "Member 'WBP_LoadingScreen_C_HandleSetLoadingScreenTip::Tip' has a wrong offset!");

}

