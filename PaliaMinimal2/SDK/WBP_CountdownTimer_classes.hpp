#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_CountdownTimer

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "UMG_structs.hpp"
#include "UMG_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_CountdownTimer.WBP_CountdownTimer_C
// 0x0028 (0x02E8 - 0x02C0)
class UWBP_CountdownTimer_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02C0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UVALUI_TextBlock_Styled*                Text_Timer;                                        // 0x02C8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UVALUI_ProgressBar_Styled*              TimerProgress;                                     // 0x02D0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	int32                                         StartValeriaTimeSecs;                              // 0x02D8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         EndValeriaTimeSecs;                                // 0x02DC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CurrValeriaTimeSecs;                               // 0x02E0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Reverse;                                           // 0x02E4(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_WBP_CountdownTimer(int32 EntryPoint, int32 CallFunc_Subtract_IntInt_ReturnValue, int32 CallFunc_Subtract_IntInt_ReturnValue_1, int32 K2Node_CustomEvent_StartValeriaTimeSecs, int32 K2Node_CustomEvent_EndValeriaTimeSecs, bool K2Node_CustomEvent_ShouldBeReverse, const struct FGeometry& K2Node_Event_MyGeometry, float K2Node_Event_InDeltaTime, int32 CallFunc_GetValeriaTimestampSecs_ReturnValue, bool CallFunc_NotEqual_IntInt_ReturnValue);
	void SetCountdownTimer(int32 Param_StartValeriaTimeSecs, int32 Param_EndValeriaTimeSecs, bool ShouldBeReverse);
	void SetTimerTextVisible(ESlateVisibility Visible);
	void Tick(const struct FGeometry& MyGeometry, float InDeltaTime);
	void UpdateUI(int32 TimePassed, int32 TotalTime, double Alpha, double CallFunc_Subtract_DoubleDouble_ReturnValue, double CallFunc_Conv_IntToDouble_ReturnValue, double CallFunc_Conv_IntToDouble_ReturnValue_1, double CallFunc_FMax_ReturnValue, double CallFunc_Divide_DoubleDouble_ReturnValue, int32 CallFunc_Subtract_IntInt_ReturnValue, int32 CallFunc_Max_ReturnValue, const class FString& CallFunc_FormatDuration_ReturnValue, class FText CallFunc_Conv_StringToText_ReturnValue, float CallFunc_SetPercent_InPercent_ImplicitCast);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_CountdownTimer_C">();
	}
	static class UWBP_CountdownTimer_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_CountdownTimer_C>();
	}
};
static_assert(alignof(UWBP_CountdownTimer_C) == 0x000008, "Wrong alignment on UWBP_CountdownTimer_C");
static_assert(sizeof(UWBP_CountdownTimer_C) == 0x0002E8, "Wrong size on UWBP_CountdownTimer_C");
static_assert(offsetof(UWBP_CountdownTimer_C, UberGraphFrame) == 0x0002C0, "Member 'UWBP_CountdownTimer_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWBP_CountdownTimer_C, Text_Timer) == 0x0002C8, "Member 'UWBP_CountdownTimer_C::Text_Timer' has a wrong offset!");
static_assert(offsetof(UWBP_CountdownTimer_C, TimerProgress) == 0x0002D0, "Member 'UWBP_CountdownTimer_C::TimerProgress' has a wrong offset!");
static_assert(offsetof(UWBP_CountdownTimer_C, StartValeriaTimeSecs) == 0x0002D8, "Member 'UWBP_CountdownTimer_C::StartValeriaTimeSecs' has a wrong offset!");
static_assert(offsetof(UWBP_CountdownTimer_C, EndValeriaTimeSecs) == 0x0002DC, "Member 'UWBP_CountdownTimer_C::EndValeriaTimeSecs' has a wrong offset!");
static_assert(offsetof(UWBP_CountdownTimer_C, CurrValeriaTimeSecs) == 0x0002E0, "Member 'UWBP_CountdownTimer_C::CurrValeriaTimeSecs' has a wrong offset!");
static_assert(offsetof(UWBP_CountdownTimer_C, Reverse) == 0x0002E4, "Member 'UWBP_CountdownTimer_C::Reverse' has a wrong offset!");

}

