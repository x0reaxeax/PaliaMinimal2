#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_KeyRebindGroupEntry

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "KeyRebinding_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_KeyRebindGroupEntry.WBP_KeyRebindGroupEntry_C
// 0x0070 (0x0390 - 0x0320)
class UWBP_KeyRebindGroupEntry_C final : public UKeyRebindGroupEntryWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0320(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UHorizontalBox*                         HB_Gamepad;                                        // 0x0328(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHorizontalBox*                         HB_Keyboard;                                       // 0x0330(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class US6UI_CustomNavigationGroup*            NavigationGroup;                                   // 0x0338(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UVALUI_TextBlock_Styled*                TextBlock_InputActionDesc_Gamepad;                 // 0x0340(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UVALUI_TextBlock_Styled*                TextBlock_InputActionDesc_KB;                      // 0x0348(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonVisibilitySwitcher*              VisiblilitySwitcher;                               // 0x0350(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_KeyRebind_Button_C*                WBP_Button1;                                       // 0x0358(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_KeyRebind_Button_C*                WBP_Button2;                                       // 0x0360(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_KeyRebind_Button_C*                WBP_Button_Gamepad;                                // 0x0368(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_FocusTip_CM_C*                     WBP_FocusTip_CM;                                   // 0x0370(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_Template_Button_CM_C*              WBP_Template_Button_Gamepad;                       // 0x0378(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_Template_Button_CM_C*              WBP_Template_Button_KB;                            // 0x0380(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWidget*                                FocusedWidget;                                     // 0x0388(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)

public:
	void BndEvt__WBP_KeyRebindGroupEntry_NavigationGroup_K2Node_ComponentBoundEvent_12_OnNavigated__DelegateSignature(class US6UI_CustomNavigationGroup* NavGroup);
	void BndEvt__WBP_KeyRebindGroupEntry_NavigationGroup_K2Node_ComponentBoundEvent_9_OnCustomNavigationGroupInitialized__DelegateSignature(class US6UI_CustomNavigationGroup* NavGroup);
	void BndEvt__WBP_KeyRebindGroupEntry_WBP_Button1_K2Node_ComponentBoundEvent_0_OnLeftMouseClicked__DelegateSignature();
	void BndEvt__WBP_KeyRebindGroupEntry_WBP_Button1_K2Node_ComponentBoundEvent_1_OnRightMouseClicked__DelegateSignature();
	void BndEvt__WBP_KeyRebindGroupEntry_WBP_Button2_K2Node_ComponentBoundEvent_2_OnLeftMouseClicked__DelegateSignature();
	void BndEvt__WBP_KeyRebindGroupEntry_WBP_Button2_K2Node_ComponentBoundEvent_3_OnRightMouseClicked__DelegateSignature();
	void BndEvt__WBP_KeyRebindGroupEntry_WBP_Button_Gamepad_K2Node_ComponentBoundEvent_4_OnLeftMouseClicked__DelegateSignature();
	void BndEvt__WBP_KeyRebindGroupEntry_WBP_Button_Gamepad_K2Node_ComponentBoundEvent_5_OnRightMouseClicked__DelegateSignature();
	void BndEvt__WBP_TestGroupEntry_WBP_Button_Gamepad_K2Node_ComponentBoundEvent_6_OnFocused__DelegateSignature(class UWidget* Widget);
	void BndEvt__WBP_TestGroupEntry_WBP_Button_Gamepad_K2Node_ComponentBoundEvent_7_OnLostFocus__DelegateSignature(class UWidget* Widget);
	void BP_OnWidgetCreated();
	void Construct();
	void Destruct();
	void ExecuteUbergraph_WBP_KeyRebindGroupEntry(int32 EntryPoint, bool K2Node_Event_IsDesignTime, TArray<struct FInputKeysIcon>& K2Node_Event_RefreshIcons, class UWidget* K2Node_ComponentBoundEvent_Widget_1, class UWidget* K2Node_ComponentBoundEvent_Widget, class US6UI_CustomNavigationGroup* K2Node_ComponentBoundEvent_NavGroup_1, bool K2Node_SwitchEnum_CmpSuccess, TDelegate<void()> K2Node_CreateDelegate_OutputDelegate, TDelegate<void()> K2Node_CreateDelegate_OutputDelegate_1, TDelegate<void()> K2Node_CreateDelegate_OutputDelegate_2, class UWidget* CallFunc_GetFocusedWidget_FocusedWidget, class UWidget* CallFunc_GetFocusedWidget_FocusedWidget_1, class UWidget* CallFunc_GetFocusedWidget_FocusedWidget_2, class UWidget* CallFunc_GetFocusedWidget_FocusedWidget_3, const struct FFocusEvent& K2Node_Event_InFocusEvent, class US6UI_CustomNavigationGroup* K2Node_ComponentBoundEvent_NavGroup, TArray<class UWidget*>& K2Node_MakeArray_Array, class FText CallFunc_GetKeyRebindEntryDescWithCore_ReturnValue);
	void GetFocusedWidget(class UWidget** Param_FocusedWidget);
	void OnButton1Focused();
	void OnButton2Focused();
	void OnFocusLost(const struct FFocusEvent& InFocusEvent);
	struct FEventReply OnFocusReceived(const struct FGeometry& MyGeometry, const struct FFocusEvent& InFocusEvent, const struct FEventReply& CallFunc_Handled_ReturnValue, int32 CallFunc_GetActiveWidgetIndex_ReturnValue, bool K2Node_SwitchInteger_CmpSuccess);
	void OnGamepadButtonFocused();
	void OnIconRefreshed(TArray<struct FInputKeysIcon>& RefreshIcons);
	void PreConstruct(bool IsDesignTime);
	void RefreshButtonImage(TArray<struct FInputKeysIcon>& InputPin, const struct FInputKeysIcon& SecondIcons, const struct FInputKeysIcon& FirstIcons, int32 Temp_int_Loop_Counter_Variable, int32 CallFunc_Array_Length_ReturnValue, int32 CallFunc_Add_IntInt_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue, int32 Temp_int_Array_Index_Variable, const struct FInputKeysIcon& CallFunc_Array_Get_Item, bool K2Node_SwitchInteger_CmpSuccess, bool K2Node_SwitchEnum_CmpSuccess);
	void RefreshFocusedWidget(class UWidget* InFocusedWidget, bool CallFunc_NotEqual_ObjectObject_ReturnValue);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_KeyRebindGroupEntry_C">();
	}
	static class UWBP_KeyRebindGroupEntry_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_KeyRebindGroupEntry_C>();
	}
};
static_assert(alignof(UWBP_KeyRebindGroupEntry_C) == 0x000008, "Wrong alignment on UWBP_KeyRebindGroupEntry_C");
static_assert(sizeof(UWBP_KeyRebindGroupEntry_C) == 0x000390, "Wrong size on UWBP_KeyRebindGroupEntry_C");
static_assert(offsetof(UWBP_KeyRebindGroupEntry_C, UberGraphFrame) == 0x000320, "Member 'UWBP_KeyRebindGroupEntry_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWBP_KeyRebindGroupEntry_C, HB_Gamepad) == 0x000328, "Member 'UWBP_KeyRebindGroupEntry_C::HB_Gamepad' has a wrong offset!");
static_assert(offsetof(UWBP_KeyRebindGroupEntry_C, HB_Keyboard) == 0x000330, "Member 'UWBP_KeyRebindGroupEntry_C::HB_Keyboard' has a wrong offset!");
static_assert(offsetof(UWBP_KeyRebindGroupEntry_C, NavigationGroup) == 0x000338, "Member 'UWBP_KeyRebindGroupEntry_C::NavigationGroup' has a wrong offset!");
static_assert(offsetof(UWBP_KeyRebindGroupEntry_C, TextBlock_InputActionDesc_Gamepad) == 0x000340, "Member 'UWBP_KeyRebindGroupEntry_C::TextBlock_InputActionDesc_Gamepad' has a wrong offset!");
static_assert(offsetof(UWBP_KeyRebindGroupEntry_C, TextBlock_InputActionDesc_KB) == 0x000348, "Member 'UWBP_KeyRebindGroupEntry_C::TextBlock_InputActionDesc_KB' has a wrong offset!");
static_assert(offsetof(UWBP_KeyRebindGroupEntry_C, VisiblilitySwitcher) == 0x000350, "Member 'UWBP_KeyRebindGroupEntry_C::VisiblilitySwitcher' has a wrong offset!");
static_assert(offsetof(UWBP_KeyRebindGroupEntry_C, WBP_Button1) == 0x000358, "Member 'UWBP_KeyRebindGroupEntry_C::WBP_Button1' has a wrong offset!");
static_assert(offsetof(UWBP_KeyRebindGroupEntry_C, WBP_Button2) == 0x000360, "Member 'UWBP_KeyRebindGroupEntry_C::WBP_Button2' has a wrong offset!");
static_assert(offsetof(UWBP_KeyRebindGroupEntry_C, WBP_Button_Gamepad) == 0x000368, "Member 'UWBP_KeyRebindGroupEntry_C::WBP_Button_Gamepad' has a wrong offset!");
static_assert(offsetof(UWBP_KeyRebindGroupEntry_C, WBP_FocusTip_CM) == 0x000370, "Member 'UWBP_KeyRebindGroupEntry_C::WBP_FocusTip_CM' has a wrong offset!");
static_assert(offsetof(UWBP_KeyRebindGroupEntry_C, WBP_Template_Button_Gamepad) == 0x000378, "Member 'UWBP_KeyRebindGroupEntry_C::WBP_Template_Button_Gamepad' has a wrong offset!");
static_assert(offsetof(UWBP_KeyRebindGroupEntry_C, WBP_Template_Button_KB) == 0x000380, "Member 'UWBP_KeyRebindGroupEntry_C::WBP_Template_Button_KB' has a wrong offset!");
static_assert(offsetof(UWBP_KeyRebindGroupEntry_C, FocusedWidget) == 0x000388, "Member 'UWBP_KeyRebindGroupEntry_C::FocusedWidget' has a wrong offset!");

}

