#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GA_LoopableEvent_Base

#include "Basic.hpp"

#include "GameplayTags_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "Palia_structs.hpp"
#include "GameplayAbilities_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function GA_LoopableEvent_Base.GA_LoopableEvent_Base_C.Callback_InputPressed
// 0x0010 (0x0010 - 0x0000)
struct GA_LoopableEvent_Base_C_Callback_InputPressed final
{
public:
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_43E0[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	int64                                         CallFunc_GetValeriaTimestampMs64_ReturnValue;      // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_LoopableEvent_Base_C_Callback_InputPressed) == 0x000008, "Wrong alignment on GA_LoopableEvent_Base_C_Callback_InputPressed");
static_assert(sizeof(GA_LoopableEvent_Base_C_Callback_InputPressed) == 0x000010, "Wrong size on GA_LoopableEvent_Base_C_Callback_InputPressed");
static_assert(offsetof(GA_LoopableEvent_Base_C_Callback_InputPressed, CallFunc_BooleanAND_ReturnValue) == 0x000000, "Member 'GA_LoopableEvent_Base_C_Callback_InputPressed::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_LoopableEvent_Base_C_Callback_InputPressed, CallFunc_GetValeriaTimestampMs64_ReturnValue) == 0x000008, "Member 'GA_LoopableEvent_Base_C_Callback_InputPressed::CallFunc_GetValeriaTimestampMs64_ReturnValue' has a wrong offset!");

// Function GA_LoopableEvent_Base.GA_LoopableEvent_Base_C.ConsiderCancellingLoop
// 0x0007 (0x0007 - 0x0000)
struct GA_LoopableEvent_Base_C_ConsiderCancellingLoop final
{
public:
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsButtonPressed_ButtonPressed;            // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsAbilityLockedIn_ReturnValue;            // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_3;                // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_LoopableEvent_Base_C_ConsiderCancellingLoop) == 0x000001, "Wrong alignment on GA_LoopableEvent_Base_C_ConsiderCancellingLoop");
static_assert(sizeof(GA_LoopableEvent_Base_C_ConsiderCancellingLoop) == 0x000007, "Wrong size on GA_LoopableEvent_Base_C_ConsiderCancellingLoop");
static_assert(offsetof(GA_LoopableEvent_Base_C_ConsiderCancellingLoop, CallFunc_Not_PreBool_ReturnValue) == 0x000000, "Member 'GA_LoopableEvent_Base_C_ConsiderCancellingLoop::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_LoopableEvent_Base_C_ConsiderCancellingLoop, CallFunc_Not_PreBool_ReturnValue_1) == 0x000001, "Member 'GA_LoopableEvent_Base_C_ConsiderCancellingLoop::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_LoopableEvent_Base_C_ConsiderCancellingLoop, CallFunc_IsButtonPressed_ButtonPressed) == 0x000002, "Member 'GA_LoopableEvent_Base_C_ConsiderCancellingLoop::CallFunc_IsButtonPressed_ButtonPressed' has a wrong offset!");
static_assert(offsetof(GA_LoopableEvent_Base_C_ConsiderCancellingLoop, CallFunc_Not_PreBool_ReturnValue_2) == 0x000003, "Member 'GA_LoopableEvent_Base_C_ConsiderCancellingLoop::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(GA_LoopableEvent_Base_C_ConsiderCancellingLoop, CallFunc_IsAbilityLockedIn_ReturnValue) == 0x000004, "Member 'GA_LoopableEvent_Base_C_ConsiderCancellingLoop::CallFunc_IsAbilityLockedIn_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_LoopableEvent_Base_C_ConsiderCancellingLoop, CallFunc_Not_PreBool_ReturnValue_3) == 0x000005, "Member 'GA_LoopableEvent_Base_C_ConsiderCancellingLoop::CallFunc_Not_PreBool_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(GA_LoopableEvent_Base_C_ConsiderCancellingLoop, CallFunc_BooleanAND_ReturnValue) == 0x000006, "Member 'GA_LoopableEvent_Base_C_ConsiderCancellingLoop::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function GA_LoopableEvent_Base.GA_LoopableEvent_Base_C.DoGatherSFX
// 0x00C0 (0x00C0 - 0x0000)
struct GA_LoopableEvent_Base_C_DoGatherSFX final
{
public:
	bool                                          CanDamage;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_43E1[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 Object;                                            // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 Instigator;                                        // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         NewLocalVar_0;                                     // 0x0018(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_43E2[0x4];                                     // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwningActorFromActorInfo_ReturnValue;  // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_43E3[0x6];                                     // 0x002A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwningActorFromActorInfo_ReturnValue_1; // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AValeriaCharacter*                      K2Node_DynamicCast_AsValeria_Character;            // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_43E4[0x7];                                     // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AValeriaPlayerController*               CallFunc_GetValeriaPlayerController_ReturnValue;   // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FValeriaItem                           CallFunc_GetEquippedItem_ReturnValue;              // 0x0050(0x0060)()
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_43E5[0x7];                                     // 0x00B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_Select_Default;                             // 0x00B8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_LoopableEvent_Base_C_DoGatherSFX) == 0x000008, "Wrong alignment on GA_LoopableEvent_Base_C_DoGatherSFX");
static_assert(sizeof(GA_LoopableEvent_Base_C_DoGatherSFX) == 0x0000C0, "Wrong size on GA_LoopableEvent_Base_C_DoGatherSFX");
static_assert(offsetof(GA_LoopableEvent_Base_C_DoGatherSFX, CanDamage) == 0x000000, "Member 'GA_LoopableEvent_Base_C_DoGatherSFX::CanDamage' has a wrong offset!");
static_assert(offsetof(GA_LoopableEvent_Base_C_DoGatherSFX, Object) == 0x000008, "Member 'GA_LoopableEvent_Base_C_DoGatherSFX::Object' has a wrong offset!");
static_assert(offsetof(GA_LoopableEvent_Base_C_DoGatherSFX, Instigator) == 0x000010, "Member 'GA_LoopableEvent_Base_C_DoGatherSFX::Instigator' has a wrong offset!");
static_assert(offsetof(GA_LoopableEvent_Base_C_DoGatherSFX, NewLocalVar_0) == 0x000018, "Member 'GA_LoopableEvent_Base_C_DoGatherSFX::NewLocalVar_0' has a wrong offset!");
static_assert(offsetof(GA_LoopableEvent_Base_C_DoGatherSFX, CallFunc_GetOwningActorFromActorInfo_ReturnValue) == 0x000020, "Member 'GA_LoopableEvent_Base_C_DoGatherSFX::CallFunc_GetOwningActorFromActorInfo_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_LoopableEvent_Base_C_DoGatherSFX, CallFunc_HasAuthority_ReturnValue) == 0x000028, "Member 'GA_LoopableEvent_Base_C_DoGatherSFX::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_LoopableEvent_Base_C_DoGatherSFX, Temp_bool_Variable) == 0x000029, "Member 'GA_LoopableEvent_Base_C_DoGatherSFX::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(GA_LoopableEvent_Base_C_DoGatherSFX, CallFunc_GetOwningActorFromActorInfo_ReturnValue_1) == 0x000030, "Member 'GA_LoopableEvent_Base_C_DoGatherSFX::CallFunc_GetOwningActorFromActorInfo_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_LoopableEvent_Base_C_DoGatherSFX, K2Node_DynamicCast_AsValeria_Character) == 0x000038, "Member 'GA_LoopableEvent_Base_C_DoGatherSFX::K2Node_DynamicCast_AsValeria_Character' has a wrong offset!");
static_assert(offsetof(GA_LoopableEvent_Base_C_DoGatherSFX, K2Node_DynamicCast_bSuccess) == 0x000040, "Member 'GA_LoopableEvent_Base_C_DoGatherSFX::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(GA_LoopableEvent_Base_C_DoGatherSFX, CallFunc_GetValeriaPlayerController_ReturnValue) == 0x000048, "Member 'GA_LoopableEvent_Base_C_DoGatherSFX::CallFunc_GetValeriaPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_LoopableEvent_Base_C_DoGatherSFX, CallFunc_GetEquippedItem_ReturnValue) == 0x000050, "Member 'GA_LoopableEvent_Base_C_DoGatherSFX::CallFunc_GetEquippedItem_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_LoopableEvent_Base_C_DoGatherSFX, CallFunc_IsValid_ReturnValue) == 0x0000B0, "Member 'GA_LoopableEvent_Base_C_DoGatherSFX::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_LoopableEvent_Base_C_DoGatherSFX, K2Node_Select_Default) == 0x0000B8, "Member 'GA_LoopableEvent_Base_C_DoGatherSFX::K2Node_Select_Default' has a wrong offset!");

// Function GA_LoopableEvent_Base.GA_LoopableEvent_Base_C.DoLoopWithMontage
// 0x0010 (0x0010 - 0x0000)
struct GA_LoopableEvent_Base_C_DoLoopWithMontage final
{
public:
	class FName                                   Param_AnimationName;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Param_MontageSection;                              // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_LoopableEvent_Base_C_DoLoopWithMontage) == 0x000004, "Wrong alignment on GA_LoopableEvent_Base_C_DoLoopWithMontage");
static_assert(sizeof(GA_LoopableEvent_Base_C_DoLoopWithMontage) == 0x000010, "Wrong size on GA_LoopableEvent_Base_C_DoLoopWithMontage");
static_assert(offsetof(GA_LoopableEvent_Base_C_DoLoopWithMontage, Param_AnimationName) == 0x000000, "Member 'GA_LoopableEvent_Base_C_DoLoopWithMontage::Param_AnimationName' has a wrong offset!");
static_assert(offsetof(GA_LoopableEvent_Base_C_DoLoopWithMontage, Param_MontageSection) == 0x000008, "Member 'GA_LoopableEvent_Base_C_DoLoopWithMontage::Param_MontageSection' has a wrong offset!");

// Function GA_LoopableEvent_Base.GA_LoopableEvent_Base_C.EndTaskAndClearReference
// 0x0001 (0x0001 - 0x0000)
struct GA_LoopableEvent_Base_C_EndTaskAndClearReference final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_LoopableEvent_Base_C_EndTaskAndClearReference) == 0x000001, "Wrong alignment on GA_LoopableEvent_Base_C_EndTaskAndClearReference");
static_assert(sizeof(GA_LoopableEvent_Base_C_EndTaskAndClearReference) == 0x000001, "Wrong size on GA_LoopableEvent_Base_C_EndTaskAndClearReference");
static_assert(offsetof(GA_LoopableEvent_Base_C_EndTaskAndClearReference, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'GA_LoopableEvent_Base_C_EndTaskAndClearReference::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function GA_LoopableEvent_Base.GA_LoopableEvent_Base_C.EventReceived_61604B204A52FE55D07E178D4DC2F376
// 0x00B8 (0x00B8 - 0x0000)
struct GA_LoopableEvent_Base_C_EventReceived_61604B204A52FE55D07E178D4DC2F376 final
{
public:
	struct FGameplayTag                           EventTag;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	struct FGameplayEventData                     EventData;                                         // 0x0008(0x00B0)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(GA_LoopableEvent_Base_C_EventReceived_61604B204A52FE55D07E178D4DC2F376) == 0x000008, "Wrong alignment on GA_LoopableEvent_Base_C_EventReceived_61604B204A52FE55D07E178D4DC2F376");
static_assert(sizeof(GA_LoopableEvent_Base_C_EventReceived_61604B204A52FE55D07E178D4DC2F376) == 0x0000B8, "Wrong size on GA_LoopableEvent_Base_C_EventReceived_61604B204A52FE55D07E178D4DC2F376");
static_assert(offsetof(GA_LoopableEvent_Base_C_EventReceived_61604B204A52FE55D07E178D4DC2F376, EventTag) == 0x000000, "Member 'GA_LoopableEvent_Base_C_EventReceived_61604B204A52FE55D07E178D4DC2F376::EventTag' has a wrong offset!");
static_assert(offsetof(GA_LoopableEvent_Base_C_EventReceived_61604B204A52FE55D07E178D4DC2F376, EventData) == 0x000008, "Member 'GA_LoopableEvent_Base_C_EventReceived_61604B204A52FE55D07E178D4DC2F376::EventData' has a wrong offset!");

// Function GA_LoopableEvent_Base.GA_LoopableEvent_Base_C.EventReceived_77447BC74D3381190AD07DB52A7C9C1E
// 0x00B8 (0x00B8 - 0x0000)
struct GA_LoopableEvent_Base_C_EventReceived_77447BC74D3381190AD07DB52A7C9C1E final
{
public:
	struct FGameplayTag                           EventTag;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	struct FGameplayEventData                     EventData;                                         // 0x0008(0x00B0)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(GA_LoopableEvent_Base_C_EventReceived_77447BC74D3381190AD07DB52A7C9C1E) == 0x000008, "Wrong alignment on GA_LoopableEvent_Base_C_EventReceived_77447BC74D3381190AD07DB52A7C9C1E");
static_assert(sizeof(GA_LoopableEvent_Base_C_EventReceived_77447BC74D3381190AD07DB52A7C9C1E) == 0x0000B8, "Wrong size on GA_LoopableEvent_Base_C_EventReceived_77447BC74D3381190AD07DB52A7C9C1E");
static_assert(offsetof(GA_LoopableEvent_Base_C_EventReceived_77447BC74D3381190AD07DB52A7C9C1E, EventTag) == 0x000000, "Member 'GA_LoopableEvent_Base_C_EventReceived_77447BC74D3381190AD07DB52A7C9C1E::EventTag' has a wrong offset!");
static_assert(offsetof(GA_LoopableEvent_Base_C_EventReceived_77447BC74D3381190AD07DB52A7C9C1E, EventData) == 0x000008, "Member 'GA_LoopableEvent_Base_C_EventReceived_77447BC74D3381190AD07DB52A7C9C1E::EventData' has a wrong offset!");

// Function GA_LoopableEvent_Base.GA_LoopableEvent_Base_C.EventReceived_87B0B7C040C0EF4C9F67D9AD4E32ED36
// 0x00B8 (0x00B8 - 0x0000)
struct GA_LoopableEvent_Base_C_EventReceived_87B0B7C040C0EF4C9F67D9AD4E32ED36 final
{
public:
	struct FGameplayTag                           EventTag;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	struct FGameplayEventData                     EventData;                                         // 0x0008(0x00B0)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(GA_LoopableEvent_Base_C_EventReceived_87B0B7C040C0EF4C9F67D9AD4E32ED36) == 0x000008, "Wrong alignment on GA_LoopableEvent_Base_C_EventReceived_87B0B7C040C0EF4C9F67D9AD4E32ED36");
static_assert(sizeof(GA_LoopableEvent_Base_C_EventReceived_87B0B7C040C0EF4C9F67D9AD4E32ED36) == 0x0000B8, "Wrong size on GA_LoopableEvent_Base_C_EventReceived_87B0B7C040C0EF4C9F67D9AD4E32ED36");
static_assert(offsetof(GA_LoopableEvent_Base_C_EventReceived_87B0B7C040C0EF4C9F67D9AD4E32ED36, EventTag) == 0x000000, "Member 'GA_LoopableEvent_Base_C_EventReceived_87B0B7C040C0EF4C9F67D9AD4E32ED36::EventTag' has a wrong offset!");
static_assert(offsetof(GA_LoopableEvent_Base_C_EventReceived_87B0B7C040C0EF4C9F67D9AD4E32ED36, EventData) == 0x000008, "Member 'GA_LoopableEvent_Base_C_EventReceived_87B0B7C040C0EF4C9F67D9AD4E32ED36::EventData' has a wrong offset!");

// Function GA_LoopableEvent_Base.GA_LoopableEvent_Base_C.ExecuteUbergraph_GA_LoopableEvent_Base
// 0x0EC0 (0x0EC0 - 0x0000)
struct GA_LoopableEvent_Base_C_ExecuteUbergraph_GA_LoopableEvent_Base final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           K2Node_CustomEvent_EventTag_10;                    // 0x0004(0x0008)(NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_43E6[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayEventData                     K2Node_CustomEvent_EventData_10;                   // 0x0010(0x00B0)()
	TDelegate<void(const struct FGameplayTag& EventTag, const struct FGameplayEventData& EventData)> K2Node_CreateDelegate_OutputDelegate;              // 0x00C0(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGameplayEventData                     Temp_struct_Variable;                              // 0x00D0(0x00B0)()
	struct FGameplayTag                           Temp_struct_Variable_1;                            // 0x0180(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           K2Node_CustomEvent_EventTag_9;                     // 0x0188(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FGameplayEventData                     K2Node_CustomEvent_EventData_9;                    // 0x0190(0x00B0)()
	TDelegate<void(const struct FGameplayTag& EventTag, const struct FGameplayEventData& EventData)> K2Node_CreateDelegate_OutputDelegate_1;            // 0x0240(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           K2Node_CustomEvent_EventTag_8;                     // 0x0250(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FGameplayEventData                     K2Node_CustomEvent_EventData_8;                    // 0x0258(0x00B0)()
	TDelegate<void(const struct FGameplayTag& EventTag, const struct FGameplayEventData& EventData)> K2Node_CreateDelegate_OutputDelegate_2;            // 0x0308(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           K2Node_CustomEvent_EventTag_7;                     // 0x0318(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FGameplayEventData                     K2Node_CustomEvent_EventData_7;                    // 0x0320(0x00B0)()
	TDelegate<void(const struct FGameplayTag& EventTag, const struct FGameplayEventData& EventData)> K2Node_CreateDelegate_OutputDelegate_3;            // 0x03D0(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           K2Node_CustomEvent_EventTag_6;                     // 0x03E0(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FGameplayEventData                     K2Node_CustomEvent_EventData_6;                    // 0x03E8(0x00B0)()
	TDelegate<void(const struct FGameplayTag& EventTag, const struct FGameplayEventData& EventData)> K2Node_CreateDelegate_OutputDelegate_4;            // 0x0498(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           K2Node_CustomEvent_EventTag_5;                     // 0x04A8(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FGameplayEventData                     K2Node_CustomEvent_EventData_5;                    // 0x04B0(0x00B0)()
	TDelegate<void(const struct FGameplayTag& EventTag, const struct FGameplayEventData& EventData)> K2Node_CreateDelegate_OutputDelegate_5;            // 0x0560(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGameplayEventData                     Temp_struct_Variable_2;                            // 0x0570(0x00B0)()
	struct FGameplayTag                           Temp_struct_Variable_3;                            // 0x0620(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           K2Node_CustomEvent_EventTag_4;                     // 0x0628(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FGameplayEventData                     K2Node_CustomEvent_EventData_4;                    // 0x0630(0x00B0)()
	TDelegate<void(const struct FGameplayTag& EventTag, const struct FGameplayEventData& EventData)> K2Node_CreateDelegate_OutputDelegate_6;            // 0x06E0(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           K2Node_CustomEvent_EventTag_3;                     // 0x06F0(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FGameplayEventData                     K2Node_CustomEvent_EventData_3;                    // 0x06F8(0x00B0)()
	TDelegate<void(const struct FGameplayTag& EventTag, const struct FGameplayEventData& EventData)> K2Node_CreateDelegate_OutputDelegate_7;            // 0x07A8(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           K2Node_CustomEvent_EventTag_2;                     // 0x07B8(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FGameplayEventData                     K2Node_CustomEvent_EventData_2;                    // 0x07C0(0x00B0)()
	TDelegate<void(const struct FGameplayTag& EventTag, const struct FGameplayEventData& EventData)> K2Node_CreateDelegate_OutputDelegate_8;            // 0x0870(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           K2Node_CustomEvent_EventTag_1;                     // 0x0880(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FGameplayEventData                     K2Node_CustomEvent_EventData_1;                    // 0x0888(0x00B0)()
	TDelegate<void(const struct FGameplayTag& EventTag, const struct FGameplayEventData& EventData)> K2Node_CreateDelegate_OutputDelegate_9;            // 0x0938(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           K2Node_CustomEvent_EventTag;                       // 0x0948(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FGameplayEventData                     K2Node_CustomEvent_EventData;                      // 0x0950(0x00B0)()
	TDelegate<void(const struct FGameplayTag& EventTag, const struct FGameplayEventData& EventData)> K2Node_CreateDelegate_OutputDelegate_10;           // 0x0A00(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGameplayEventData                     Temp_struct_Variable_4;                            // 0x0A10(0x00B0)()
	struct FGameplayTag                           Temp_struct_Variable_5;                            // 0x0AC0(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_FNameIsNone_ReturnValue;                  // 0x0AC8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_43E7[0x3];                                     // 0x0AC9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(float DeltaSeconds, const struct FVector& OldLocation, const struct FVector& OldVelocity)> K2Node_CreateDelegate_OutputDelegate_11;           // 0x0ACC(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0ADC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ShouldLoop_ShouldLoop;                    // 0x0ADD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_43E8[0x2];                                     // 0x0ADE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           K2Node_CustomEvent_EventTag_11;                    // 0x0AE0(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FGameplayEventData                     K2Node_CustomEvent_EventData_11;                   // 0x0AE8(0x00B0)()
	TDelegate<void(const struct FGameplayTag& EventTag, const struct FGameplayEventData& EventData)> K2Node_CreateDelegate_OutputDelegate_12;           // 0x0B98(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           K2Node_CustomEvent_EventTag_12;                    // 0x0BA8(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FGameplayEventData                     K2Node_CustomEvent_EventData_12;                   // 0x0BB0(0x00B0)()
	TDelegate<void(const struct FGameplayTag& EventTag, const struct FGameplayEventData& EventData)> K2Node_CreateDelegate_OutputDelegate_13;           // 0x0C60(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           K2Node_CustomEvent_EventTag_13;                    // 0x0C70(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FGameplayEventData                     K2Node_CustomEvent_EventData_13;                   // 0x0C78(0x00B0)()
	TDelegate<void(const struct FGameplayTag& EventTag, const struct FGameplayEventData& EventData)> K2Node_CreateDelegate_OutputDelegate_14;           // 0x0D28(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UVAL_TaskProxy_PlayMontageAndWaitForEvent* CallFunc_PlayMontageByMappingAndWaitForEvent_ReturnValue; // 0x0D38(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0D40(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_43E9[0x7];                                     // 0x0D41(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UVAL_TaskProxy_PlayMontageAndWaitForEvent* CallFunc_PlayMontageByMappingAndWaitForEvent_ReturnValue_1; // 0x0D48(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0D50(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_FNameIsNone_ReturnValue_1;                // 0x0D51(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_43EA[0x6];                                     // 0x0D52(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UVAL_TaskProxy_PlayMontageAndWaitForEvent* CallFunc_PlayMontageByMappingAndWaitForEvent_ReturnValue_2; // 0x0D58(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0D60(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0D61(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_FNameIsNone_ReturnValue_2;                // 0x0D62(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x0D63(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_FNameIsNone_ReturnValue_3;                // 0x0D64(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_3;                // 0x0D65(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_43EB[0x2];                                     // 0x0D66(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_CustomEvent_AnimationName;                  // 0x0D68(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_MontageSection;                 // 0x0D70(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_FNameIsNone_ReturnValue_4;                // 0x0D78(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_4;                // 0x0D79(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0D7A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_43EC[0x1];                                     // 0x0D7B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           K2Node_CustomEvent_EventTag_14;                    // 0x0D7C(0x0008)(NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_43ED[0x4];                                     // 0x0D84(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayEventData                     K2Node_CustomEvent_EventData_14;                   // 0x0D88(0x00B0)()
	float                                         K2Node_CustomEvent_DeltaSeconds;                   // 0x0E38(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_43EE[0x4];                                     // 0x0E3C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                K2Node_CustomEvent_OldLocation;                    // 0x0E40(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_CustomEvent_OldVelocity;                    // 0x0E58(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_VSizeSquared_ReturnValue;                 // 0x0E70(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0E78(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_43EF[0x7];                                     // 0x0E79(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwningActorFromActorInfo_ReturnValue;  // 0x0E80(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AValeriaCharacter*                      K2Node_DynamicCast_AsValeria_Character;            // 0x0E88(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0E90(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_CommitAbility_ReturnValue;             // 0x0E91(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bWasCancelled;                        // 0x0E92(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_43F0[0x5];                                     // 0x0E93(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwningActorFromActorInfo_ReturnValue_1; // 0x0E98(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AValeriaCharacter*                      K2Node_DynamicCast_AsValeria_Character_1;          // 0x0EA0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0EA8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_43F1[0x3];                                     // 0x0EA9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(const struct FGameplayTag& EventTag, const struct FGameplayEventData& EventData)> K2Node_CreateDelegate_OutputDelegate_15;           // 0x0EAC(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_LoopableEvent_Base_C_ExecuteUbergraph_GA_LoopableEvent_Base) == 0x000008, "Wrong alignment on GA_LoopableEvent_Base_C_ExecuteUbergraph_GA_LoopableEvent_Base");
static_assert(sizeof(GA_LoopableEvent_Base_C_ExecuteUbergraph_GA_LoopableEvent_Base) == 0x000EC0, "Wrong size on GA_LoopableEvent_Base_C_ExecuteUbergraph_GA_LoopableEvent_Base");
static_assert(offsetof(GA_LoopableEvent_Base_C_ExecuteUbergraph_GA_LoopableEvent_Base, EntryPoint) == 0x000000, "Member 'GA_LoopableEvent_Base_C_ExecuteUbergraph_GA_LoopableEvent_Base::EntryPoint' has a wrong offset!");
static_assert(offsetof(GA_LoopableEvent_Base_C_ExecuteUbergraph_GA_LoopableEvent_Base, K2Node_CustomEvent_EventTag_10) == 0x000004, "Member 'GA_LoopableEvent_Base_C_ExecuteUbergraph_GA_LoopableEvent_Base::K2Node_CustomEvent_EventTag_10' has a wrong offset!");
static_assert(offsetof(GA_LoopableEvent_Base_C_ExecuteUbergraph_GA_LoopableEvent_Base, K2Node_CustomEvent_EventData_10) == 0x000010, "Member 'GA_LoopableEvent_Base_C_ExecuteUbergraph_GA_LoopableEvent_Base::K2Node_CustomEvent_EventData_10' has a wrong offset!");
static_assert(offsetof(GA_LoopableEvent_Base_C_ExecuteUbergraph_GA_LoopableEvent_Base, K2Node_CreateDelegate_OutputDelegate) == 0x0000C0, "Member 'GA_LoopableEvent_Base_C_ExecuteUbergraph_GA_LoopableEvent_Base::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(GA_LoopableEvent_Base_C_ExecuteUbergraph_GA_LoopableEvent_Base, Temp_struct_Variable) == 0x0000D0, "Member 'GA_LoopableEvent_Base_C_ExecuteUbergraph_GA_LoopableEvent_Base::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(GA_LoopableEvent_Base_C_ExecuteUbergraph_GA_LoopableEvent_Base, Temp_struct_Variable_1) == 0x000180, "Member 'GA_LoopableEvent_Base_C_ExecuteUbergraph_GA_LoopableEvent_Base::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(GA_LoopableEvent_Base_C_ExecuteUbergraph_GA_LoopableEvent_Base, K2Node_CustomEvent_EventTag_9) == 0x000188, "Member 'GA_LoopableEvent_Base_C_ExecuteUbergraph_GA_LoopableEvent_Base::K2Node_CustomEvent_EventTag_9' has a wrong offset!");
static_assert(offsetof(GA_LoopableEvent_Base_C_ExecuteUbergraph_GA_LoopableEvent_Base, K2Node_CustomEvent_EventData_9) == 0x000190, "Member 'GA_LoopableEvent_Base_C_ExecuteUbergraph_GA_LoopableEvent_Base::K2Node_CustomEvent_EventData_9' has a wrong offset!");
static_assert(offsetof(GA_LoopableEvent_Base_C_ExecuteUbergraph_GA_LoopableEvent_Base, K2Node_CreateDelegate_OutputDelegate_1) == 0x000240, "Member 'GA_LoopableEvent_Base_C_ExecuteUbergraph_GA_LoopableEvent_Base::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(GA_LoopableEvent_Base_C_ExecuteUbergraph_GA_LoopableEvent_Base, K2Node_CustomEvent_EventTag_8) == 0x000250, "Member 'GA_LoopableEvent_Base_C_ExecuteUbergraph_GA_LoopableEvent_Base::K2Node_CustomEvent_EventTag_8' has a wrong offset!");
static_assert(offsetof(GA_LoopableEvent_Base_C_ExecuteUbergraph_GA_LoopableEvent_Base, K2Node_CustomEvent_EventData_8) == 0x000258, "Member 'GA_LoopableEvent_Base_C_ExecuteUbergraph_GA_LoopableEvent_Base::K2Node_CustomEvent_EventData_8' has a wrong offset!");
static_assert(offsetof(GA_LoopableEvent_Base_C_ExecuteUbergraph_GA_LoopableEvent_Base, K2Node_CreateDelegate_OutputDelegate_2) == 0x000308, "Member 'GA_LoopableEvent_Base_C_ExecuteUbergraph_GA_LoopableEvent_Base::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(GA_LoopableEvent_Base_C_ExecuteUbergraph_GA_LoopableEvent_Base, K2Node_CustomEvent_EventTag_7) == 0x000318, "Member 'GA_LoopableEvent_Base_C_ExecuteUbergraph_GA_LoopableEvent_Base::K2Node_CustomEvent_EventTag_7' has a wrong offset!");
static_assert(offsetof(GA_LoopableEvent_Base_C_ExecuteUbergraph_GA_LoopableEvent_Base, K2Node_CustomEvent_EventData_7) == 0x000320, "Member 'GA_LoopableEvent_Base_C_ExecuteUbergraph_GA_LoopableEvent_Base::K2Node_CustomEvent_EventData_7' has a wrong offset!");
static_assert(offsetof(GA_LoopableEvent_Base_C_ExecuteUbergraph_GA_LoopableEvent_Base, K2Node_CreateDelegate_OutputDelegate_3) == 0x0003D0, "Member 'GA_LoopableEvent_Base_C_ExecuteUbergraph_GA_LoopableEvent_Base::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");
static_assert(offsetof(GA_LoopableEvent_Base_C_ExecuteUbergraph_GA_LoopableEvent_Base, K2Node_CustomEvent_EventTag_6) == 0x0003E0, "Member 'GA_LoopableEvent_Base_C_ExecuteUbergraph_GA_LoopableEvent_Base::K2Node_CustomEvent_EventTag_6' has a wrong offset!");
static_assert(offsetof(GA_LoopableEvent_Base_C_ExecuteUbergraph_GA_LoopableEvent_Base, K2Node_CustomEvent_EventData_6) == 0x0003E8, "Member 'GA_LoopableEvent_Base_C_ExecuteUbergraph_GA_LoopableEvent_Base::K2Node_CustomEvent_EventData_6' has a wrong offset!");
static_assert(offsetof(GA_LoopableEvent_Base_C_ExecuteUbergraph_GA_LoopableEvent_Base, K2Node_CreateDelegate_OutputDelegate_4) == 0x000498, "Member 'GA_LoopableEvent_Base_C_ExecuteUbergraph_GA_LoopableEvent_Base::K2Node_CreateDelegate_OutputDelegate_4' has a wrong offset!");
static_assert(offsetof(GA_LoopableEvent_Base_C_ExecuteUbergraph_GA_LoopableEvent_Base, K2Node_CustomEvent_EventTag_5) == 0x0004A8, "Member 'GA_LoopableEvent_Base_C_ExecuteUbergraph_GA_LoopableEvent_Base::K2Node_CustomEvent_EventTag_5' has a wrong offset!");
static_assert(offsetof(GA_LoopableEvent_Base_C_ExecuteUbergraph_GA_LoopableEvent_Base, K2Node_CustomEvent_EventData_5) == 0x0004B0, "Member 'GA_LoopableEvent_Base_C_ExecuteUbergraph_GA_LoopableEvent_Base::K2Node_CustomEvent_EventData_5' has a wrong offset!");
static_assert(offsetof(GA_LoopableEvent_Base_C_ExecuteUbergraph_GA_LoopableEvent_Base, K2Node_CreateDelegate_OutputDelegate_5) == 0x000560, "Member 'GA_LoopableEvent_Base_C_ExecuteUbergraph_GA_LoopableEvent_Base::K2Node_CreateDelegate_OutputDelegate_5' has a wrong offset!");
static_assert(offsetof(GA_LoopableEvent_Base_C_ExecuteUbergraph_GA_LoopableEvent_Base, Temp_struct_Variable_2) == 0x000570, "Member 'GA_LoopableEvent_Base_C_ExecuteUbergraph_GA_LoopableEvent_Base::Temp_struct_Variable_2' has a wrong offset!");
static_assert(offsetof(GA_LoopableEvent_Base_C_ExecuteUbergraph_GA_LoopableEvent_Base, Temp_struct_Variable_3) == 0x000620, "Member 'GA_LoopableEvent_Base_C_ExecuteUbergraph_GA_LoopableEvent_Base::Temp_struct_Variable_3' has a wrong offset!");
static_assert(offsetof(GA_LoopableEvent_Base_C_ExecuteUbergraph_GA_LoopableEvent_Base, K2Node_CustomEvent_EventTag_4) == 0x000628, "Member 'GA_LoopableEvent_Base_C_ExecuteUbergraph_GA_LoopableEvent_Base::K2Node_CustomEvent_EventTag_4' has a wrong offset!");
static_assert(offsetof(GA_LoopableEvent_Base_C_ExecuteUbergraph_GA_LoopableEvent_Base, K2Node_CustomEvent_EventData_4) == 0x000630, "Member 'GA_LoopableEvent_Base_C_ExecuteUbergraph_GA_LoopableEvent_Base::K2Node_CustomEvent_EventData_4' has a wrong offset!");
static_assert(offsetof(GA_LoopableEvent_Base_C_ExecuteUbergraph_GA_LoopableEvent_Base, K2Node_CreateDelegate_OutputDelegate_6) == 0x0006E0, "Member 'GA_LoopableEvent_Base_C_ExecuteUbergraph_GA_LoopableEvent_Base::K2Node_CreateDelegate_OutputDelegate_6' has a wrong offset!");
static_assert(offsetof(GA_LoopableEvent_Base_C_ExecuteUbergraph_GA_LoopableEvent_Base, K2Node_CustomEvent_EventTag_3) == 0x0006F0, "Member 'GA_LoopableEvent_Base_C_ExecuteUbergraph_GA_LoopableEvent_Base::K2Node_CustomEvent_EventTag_3' has a wrong offset!");
static_assert(offsetof(GA_LoopableEvent_Base_C_ExecuteUbergraph_GA_LoopableEvent_Base, K2Node_CustomEvent_EventData_3) == 0x0006F8, "Member 'GA_LoopableEvent_Base_C_ExecuteUbergraph_GA_LoopableEvent_Base::K2Node_CustomEvent_EventData_3' has a wrong offset!");
static_assert(offsetof(GA_LoopableEvent_Base_C_ExecuteUbergraph_GA_LoopableEvent_Base, K2Node_CreateDelegate_OutputDelegate_7) == 0x0007A8, "Member 'GA_LoopableEvent_Base_C_ExecuteUbergraph_GA_LoopableEvent_Base::K2Node_CreateDelegate_OutputDelegate_7' has a wrong offset!");
static_assert(offsetof(GA_LoopableEvent_Base_C_ExecuteUbergraph_GA_LoopableEvent_Base, K2Node_CustomEvent_EventTag_2) == 0x0007B8, "Member 'GA_LoopableEvent_Base_C_ExecuteUbergraph_GA_LoopableEvent_Base::K2Node_CustomEvent_EventTag_2' has a wrong offset!");
static_assert(offsetof(GA_LoopableEvent_Base_C_ExecuteUbergraph_GA_LoopableEvent_Base, K2Node_CustomEvent_EventData_2) == 0x0007C0, "Member 'GA_LoopableEvent_Base_C_ExecuteUbergraph_GA_LoopableEvent_Base::K2Node_CustomEvent_EventData_2' has a wrong offset!");
static_assert(offsetof(GA_LoopableEvent_Base_C_ExecuteUbergraph_GA_LoopableEvent_Base, K2Node_CreateDelegate_OutputDelegate_8) == 0x000870, "Member 'GA_LoopableEvent_Base_C_ExecuteUbergraph_GA_LoopableEvent_Base::K2Node_CreateDelegate_OutputDelegate_8' has a wrong offset!");
static_assert(offsetof(GA_LoopableEvent_Base_C_ExecuteUbergraph_GA_LoopableEvent_Base, K2Node_CustomEvent_EventTag_1) == 0x000880, "Member 'GA_LoopableEvent_Base_C_ExecuteUbergraph_GA_LoopableEvent_Base::K2Node_CustomEvent_EventTag_1' has a wrong offset!");
static_assert(offsetof(GA_LoopableEvent_Base_C_ExecuteUbergraph_GA_LoopableEvent_Base, K2Node_CustomEvent_EventData_1) == 0x000888, "Member 'GA_LoopableEvent_Base_C_ExecuteUbergraph_GA_LoopableEvent_Base::K2Node_CustomEvent_EventData_1' has a wrong offset!");
static_assert(offsetof(GA_LoopableEvent_Base_C_ExecuteUbergraph_GA_LoopableEvent_Base, K2Node_CreateDelegate_OutputDelegate_9) == 0x000938, "Member 'GA_LoopableEvent_Base_C_ExecuteUbergraph_GA_LoopableEvent_Base::K2Node_CreateDelegate_OutputDelegate_9' has a wrong offset!");
static_assert(offsetof(GA_LoopableEvent_Base_C_ExecuteUbergraph_GA_LoopableEvent_Base, K2Node_CustomEvent_EventTag) == 0x000948, "Member 'GA_LoopableEvent_Base_C_ExecuteUbergraph_GA_LoopableEvent_Base::K2Node_CustomEvent_EventTag' has a wrong offset!");
static_assert(offsetof(GA_LoopableEvent_Base_C_ExecuteUbergraph_GA_LoopableEvent_Base, K2Node_CustomEvent_EventData) == 0x000950, "Member 'GA_LoopableEvent_Base_C_ExecuteUbergraph_GA_LoopableEvent_Base::K2Node_CustomEvent_EventData' has a wrong offset!");
static_assert(offsetof(GA_LoopableEvent_Base_C_ExecuteUbergraph_GA_LoopableEvent_Base, K2Node_CreateDelegate_OutputDelegate_10) == 0x000A00, "Member 'GA_LoopableEvent_Base_C_ExecuteUbergraph_GA_LoopableEvent_Base::K2Node_CreateDelegate_OutputDelegate_10' has a wrong offset!");
static_assert(offsetof(GA_LoopableEvent_Base_C_ExecuteUbergraph_GA_LoopableEvent_Base, Temp_struct_Variable_4) == 0x000A10, "Member 'GA_LoopableEvent_Base_C_ExecuteUbergraph_GA_LoopableEvent_Base::Temp_struct_Variable_4' has a wrong offset!");
static_assert(offsetof(GA_LoopableEvent_Base_C_ExecuteUbergraph_GA_LoopableEvent_Base, Temp_struct_Variable_5) == 0x000AC0, "Member 'GA_LoopableEvent_Base_C_ExecuteUbergraph_GA_LoopableEvent_Base::Temp_struct_Variable_5' has a wrong offset!");
static_assert(offsetof(GA_LoopableEvent_Base_C_ExecuteUbergraph_GA_LoopableEvent_Base, CallFunc_FNameIsNone_ReturnValue) == 0x000AC8, "Member 'GA_LoopableEvent_Base_C_ExecuteUbergraph_GA_LoopableEvent_Base::CallFunc_FNameIsNone_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_LoopableEvent_Base_C_ExecuteUbergraph_GA_LoopableEvent_Base, K2Node_CreateDelegate_OutputDelegate_11) == 0x000ACC, "Member 'GA_LoopableEvent_Base_C_ExecuteUbergraph_GA_LoopableEvent_Base::K2Node_CreateDelegate_OutputDelegate_11' has a wrong offset!");
static_assert(offsetof(GA_LoopableEvent_Base_C_ExecuteUbergraph_GA_LoopableEvent_Base, CallFunc_Not_PreBool_ReturnValue) == 0x000ADC, "Member 'GA_LoopableEvent_Base_C_ExecuteUbergraph_GA_LoopableEvent_Base::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_LoopableEvent_Base_C_ExecuteUbergraph_GA_LoopableEvent_Base, CallFunc_ShouldLoop_ShouldLoop) == 0x000ADD, "Member 'GA_LoopableEvent_Base_C_ExecuteUbergraph_GA_LoopableEvent_Base::CallFunc_ShouldLoop_ShouldLoop' has a wrong offset!");
static_assert(offsetof(GA_LoopableEvent_Base_C_ExecuteUbergraph_GA_LoopableEvent_Base, K2Node_CustomEvent_EventTag_11) == 0x000AE0, "Member 'GA_LoopableEvent_Base_C_ExecuteUbergraph_GA_LoopableEvent_Base::K2Node_CustomEvent_EventTag_11' has a wrong offset!");
static_assert(offsetof(GA_LoopableEvent_Base_C_ExecuteUbergraph_GA_LoopableEvent_Base, K2Node_CustomEvent_EventData_11) == 0x000AE8, "Member 'GA_LoopableEvent_Base_C_ExecuteUbergraph_GA_LoopableEvent_Base::K2Node_CustomEvent_EventData_11' has a wrong offset!");
static_assert(offsetof(GA_LoopableEvent_Base_C_ExecuteUbergraph_GA_LoopableEvent_Base, K2Node_CreateDelegate_OutputDelegate_12) == 0x000B98, "Member 'GA_LoopableEvent_Base_C_ExecuteUbergraph_GA_LoopableEvent_Base::K2Node_CreateDelegate_OutputDelegate_12' has a wrong offset!");
static_assert(offsetof(GA_LoopableEvent_Base_C_ExecuteUbergraph_GA_LoopableEvent_Base, K2Node_CustomEvent_EventTag_12) == 0x000BA8, "Member 'GA_LoopableEvent_Base_C_ExecuteUbergraph_GA_LoopableEvent_Base::K2Node_CustomEvent_EventTag_12' has a wrong offset!");
static_assert(offsetof(GA_LoopableEvent_Base_C_ExecuteUbergraph_GA_LoopableEvent_Base, K2Node_CustomEvent_EventData_12) == 0x000BB0, "Member 'GA_LoopableEvent_Base_C_ExecuteUbergraph_GA_LoopableEvent_Base::K2Node_CustomEvent_EventData_12' has a wrong offset!");
static_assert(offsetof(GA_LoopableEvent_Base_C_ExecuteUbergraph_GA_LoopableEvent_Base, K2Node_CreateDelegate_OutputDelegate_13) == 0x000C60, "Member 'GA_LoopableEvent_Base_C_ExecuteUbergraph_GA_LoopableEvent_Base::K2Node_CreateDelegate_OutputDelegate_13' has a wrong offset!");
static_assert(offsetof(GA_LoopableEvent_Base_C_ExecuteUbergraph_GA_LoopableEvent_Base, K2Node_CustomEvent_EventTag_13) == 0x000C70, "Member 'GA_LoopableEvent_Base_C_ExecuteUbergraph_GA_LoopableEvent_Base::K2Node_CustomEvent_EventTag_13' has a wrong offset!");
static_assert(offsetof(GA_LoopableEvent_Base_C_ExecuteUbergraph_GA_LoopableEvent_Base, K2Node_CustomEvent_EventData_13) == 0x000C78, "Member 'GA_LoopableEvent_Base_C_ExecuteUbergraph_GA_LoopableEvent_Base::K2Node_CustomEvent_EventData_13' has a wrong offset!");
static_assert(offsetof(GA_LoopableEvent_Base_C_ExecuteUbergraph_GA_LoopableEvent_Base, K2Node_CreateDelegate_OutputDelegate_14) == 0x000D28, "Member 'GA_LoopableEvent_Base_C_ExecuteUbergraph_GA_LoopableEvent_Base::K2Node_CreateDelegate_OutputDelegate_14' has a wrong offset!");
static_assert(offsetof(GA_LoopableEvent_Base_C_ExecuteUbergraph_GA_LoopableEvent_Base, CallFunc_PlayMontageByMappingAndWaitForEvent_ReturnValue) == 0x000D38, "Member 'GA_LoopableEvent_Base_C_ExecuteUbergraph_GA_LoopableEvent_Base::CallFunc_PlayMontageByMappingAndWaitForEvent_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_LoopableEvent_Base_C_ExecuteUbergraph_GA_LoopableEvent_Base, CallFunc_IsValid_ReturnValue) == 0x000D40, "Member 'GA_LoopableEvent_Base_C_ExecuteUbergraph_GA_LoopableEvent_Base::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_LoopableEvent_Base_C_ExecuteUbergraph_GA_LoopableEvent_Base, CallFunc_PlayMontageByMappingAndWaitForEvent_ReturnValue_1) == 0x000D48, "Member 'GA_LoopableEvent_Base_C_ExecuteUbergraph_GA_LoopableEvent_Base::CallFunc_PlayMontageByMappingAndWaitForEvent_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_LoopableEvent_Base_C_ExecuteUbergraph_GA_LoopableEvent_Base, CallFunc_IsValid_ReturnValue_1) == 0x000D50, "Member 'GA_LoopableEvent_Base_C_ExecuteUbergraph_GA_LoopableEvent_Base::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_LoopableEvent_Base_C_ExecuteUbergraph_GA_LoopableEvent_Base, CallFunc_FNameIsNone_ReturnValue_1) == 0x000D51, "Member 'GA_LoopableEvent_Base_C_ExecuteUbergraph_GA_LoopableEvent_Base::CallFunc_FNameIsNone_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_LoopableEvent_Base_C_ExecuteUbergraph_GA_LoopableEvent_Base, CallFunc_PlayMontageByMappingAndWaitForEvent_ReturnValue_2) == 0x000D58, "Member 'GA_LoopableEvent_Base_C_ExecuteUbergraph_GA_LoopableEvent_Base::CallFunc_PlayMontageByMappingAndWaitForEvent_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(GA_LoopableEvent_Base_C_ExecuteUbergraph_GA_LoopableEvent_Base, CallFunc_Not_PreBool_ReturnValue_1) == 0x000D60, "Member 'GA_LoopableEvent_Base_C_ExecuteUbergraph_GA_LoopableEvent_Base::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_LoopableEvent_Base_C_ExecuteUbergraph_GA_LoopableEvent_Base, CallFunc_IsValid_ReturnValue_2) == 0x000D61, "Member 'GA_LoopableEvent_Base_C_ExecuteUbergraph_GA_LoopableEvent_Base::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(GA_LoopableEvent_Base_C_ExecuteUbergraph_GA_LoopableEvent_Base, CallFunc_FNameIsNone_ReturnValue_2) == 0x000D62, "Member 'GA_LoopableEvent_Base_C_ExecuteUbergraph_GA_LoopableEvent_Base::CallFunc_FNameIsNone_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(GA_LoopableEvent_Base_C_ExecuteUbergraph_GA_LoopableEvent_Base, CallFunc_Not_PreBool_ReturnValue_2) == 0x000D63, "Member 'GA_LoopableEvent_Base_C_ExecuteUbergraph_GA_LoopableEvent_Base::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(GA_LoopableEvent_Base_C_ExecuteUbergraph_GA_LoopableEvent_Base, CallFunc_FNameIsNone_ReturnValue_3) == 0x000D64, "Member 'GA_LoopableEvent_Base_C_ExecuteUbergraph_GA_LoopableEvent_Base::CallFunc_FNameIsNone_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(GA_LoopableEvent_Base_C_ExecuteUbergraph_GA_LoopableEvent_Base, CallFunc_Not_PreBool_ReturnValue_3) == 0x000D65, "Member 'GA_LoopableEvent_Base_C_ExecuteUbergraph_GA_LoopableEvent_Base::CallFunc_Not_PreBool_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(GA_LoopableEvent_Base_C_ExecuteUbergraph_GA_LoopableEvent_Base, K2Node_CustomEvent_AnimationName) == 0x000D68, "Member 'GA_LoopableEvent_Base_C_ExecuteUbergraph_GA_LoopableEvent_Base::K2Node_CustomEvent_AnimationName' has a wrong offset!");
static_assert(offsetof(GA_LoopableEvent_Base_C_ExecuteUbergraph_GA_LoopableEvent_Base, K2Node_CustomEvent_MontageSection) == 0x000D70, "Member 'GA_LoopableEvent_Base_C_ExecuteUbergraph_GA_LoopableEvent_Base::K2Node_CustomEvent_MontageSection' has a wrong offset!");
static_assert(offsetof(GA_LoopableEvent_Base_C_ExecuteUbergraph_GA_LoopableEvent_Base, CallFunc_FNameIsNone_ReturnValue_4) == 0x000D78, "Member 'GA_LoopableEvent_Base_C_ExecuteUbergraph_GA_LoopableEvent_Base::CallFunc_FNameIsNone_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(GA_LoopableEvent_Base_C_ExecuteUbergraph_GA_LoopableEvent_Base, CallFunc_Not_PreBool_ReturnValue_4) == 0x000D79, "Member 'GA_LoopableEvent_Base_C_ExecuteUbergraph_GA_LoopableEvent_Base::CallFunc_Not_PreBool_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(GA_LoopableEvent_Base_C_ExecuteUbergraph_GA_LoopableEvent_Base, CallFunc_BooleanOR_ReturnValue) == 0x000D7A, "Member 'GA_LoopableEvent_Base_C_ExecuteUbergraph_GA_LoopableEvent_Base::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_LoopableEvent_Base_C_ExecuteUbergraph_GA_LoopableEvent_Base, K2Node_CustomEvent_EventTag_14) == 0x000D7C, "Member 'GA_LoopableEvent_Base_C_ExecuteUbergraph_GA_LoopableEvent_Base::K2Node_CustomEvent_EventTag_14' has a wrong offset!");
static_assert(offsetof(GA_LoopableEvent_Base_C_ExecuteUbergraph_GA_LoopableEvent_Base, K2Node_CustomEvent_EventData_14) == 0x000D88, "Member 'GA_LoopableEvent_Base_C_ExecuteUbergraph_GA_LoopableEvent_Base::K2Node_CustomEvent_EventData_14' has a wrong offset!");
static_assert(offsetof(GA_LoopableEvent_Base_C_ExecuteUbergraph_GA_LoopableEvent_Base, K2Node_CustomEvent_DeltaSeconds) == 0x000E38, "Member 'GA_LoopableEvent_Base_C_ExecuteUbergraph_GA_LoopableEvent_Base::K2Node_CustomEvent_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(GA_LoopableEvent_Base_C_ExecuteUbergraph_GA_LoopableEvent_Base, K2Node_CustomEvent_OldLocation) == 0x000E40, "Member 'GA_LoopableEvent_Base_C_ExecuteUbergraph_GA_LoopableEvent_Base::K2Node_CustomEvent_OldLocation' has a wrong offset!");
static_assert(offsetof(GA_LoopableEvent_Base_C_ExecuteUbergraph_GA_LoopableEvent_Base, K2Node_CustomEvent_OldVelocity) == 0x000E58, "Member 'GA_LoopableEvent_Base_C_ExecuteUbergraph_GA_LoopableEvent_Base::K2Node_CustomEvent_OldVelocity' has a wrong offset!");
static_assert(offsetof(GA_LoopableEvent_Base_C_ExecuteUbergraph_GA_LoopableEvent_Base, CallFunc_VSizeSquared_ReturnValue) == 0x000E70, "Member 'GA_LoopableEvent_Base_C_ExecuteUbergraph_GA_LoopableEvent_Base::CallFunc_VSizeSquared_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_LoopableEvent_Base_C_ExecuteUbergraph_GA_LoopableEvent_Base, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000E78, "Member 'GA_LoopableEvent_Base_C_ExecuteUbergraph_GA_LoopableEvent_Base::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_LoopableEvent_Base_C_ExecuteUbergraph_GA_LoopableEvent_Base, CallFunc_GetOwningActorFromActorInfo_ReturnValue) == 0x000E80, "Member 'GA_LoopableEvent_Base_C_ExecuteUbergraph_GA_LoopableEvent_Base::CallFunc_GetOwningActorFromActorInfo_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_LoopableEvent_Base_C_ExecuteUbergraph_GA_LoopableEvent_Base, K2Node_DynamicCast_AsValeria_Character) == 0x000E88, "Member 'GA_LoopableEvent_Base_C_ExecuteUbergraph_GA_LoopableEvent_Base::K2Node_DynamicCast_AsValeria_Character' has a wrong offset!");
static_assert(offsetof(GA_LoopableEvent_Base_C_ExecuteUbergraph_GA_LoopableEvent_Base, K2Node_DynamicCast_bSuccess) == 0x000E90, "Member 'GA_LoopableEvent_Base_C_ExecuteUbergraph_GA_LoopableEvent_Base::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(GA_LoopableEvent_Base_C_ExecuteUbergraph_GA_LoopableEvent_Base, CallFunc_K2_CommitAbility_ReturnValue) == 0x000E91, "Member 'GA_LoopableEvent_Base_C_ExecuteUbergraph_GA_LoopableEvent_Base::CallFunc_K2_CommitAbility_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_LoopableEvent_Base_C_ExecuteUbergraph_GA_LoopableEvent_Base, K2Node_Event_bWasCancelled) == 0x000E92, "Member 'GA_LoopableEvent_Base_C_ExecuteUbergraph_GA_LoopableEvent_Base::K2Node_Event_bWasCancelled' has a wrong offset!");
static_assert(offsetof(GA_LoopableEvent_Base_C_ExecuteUbergraph_GA_LoopableEvent_Base, CallFunc_GetOwningActorFromActorInfo_ReturnValue_1) == 0x000E98, "Member 'GA_LoopableEvent_Base_C_ExecuteUbergraph_GA_LoopableEvent_Base::CallFunc_GetOwningActorFromActorInfo_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_LoopableEvent_Base_C_ExecuteUbergraph_GA_LoopableEvent_Base, K2Node_DynamicCast_AsValeria_Character_1) == 0x000EA0, "Member 'GA_LoopableEvent_Base_C_ExecuteUbergraph_GA_LoopableEvent_Base::K2Node_DynamicCast_AsValeria_Character_1' has a wrong offset!");
static_assert(offsetof(GA_LoopableEvent_Base_C_ExecuteUbergraph_GA_LoopableEvent_Base, K2Node_DynamicCast_bSuccess_1) == 0x000EA8, "Member 'GA_LoopableEvent_Base_C_ExecuteUbergraph_GA_LoopableEvent_Base::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(GA_LoopableEvent_Base_C_ExecuteUbergraph_GA_LoopableEvent_Base, K2Node_CreateDelegate_OutputDelegate_15) == 0x000EAC, "Member 'GA_LoopableEvent_Base_C_ExecuteUbergraph_GA_LoopableEvent_Base::K2Node_CreateDelegate_OutputDelegate_15' has a wrong offset!");

// Function GA_LoopableEvent_Base.GA_LoopableEvent_Base_C.FilterActor
// 0x0020 (0x0020 - 0x0000)
struct GA_LoopableEvent_Base_C_FilterActor final
{
public:
	class AActor*                                 Actor;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          IncludeActor;                                      // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_43F2[0x7];                                     // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 CallFunc_GetObjectClass_ReturnValue;               // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ClassIsChildOf_ReturnValue;               // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_LoopableEvent_Base_C_FilterActor) == 0x000008, "Wrong alignment on GA_LoopableEvent_Base_C_FilterActor");
static_assert(sizeof(GA_LoopableEvent_Base_C_FilterActor) == 0x000020, "Wrong size on GA_LoopableEvent_Base_C_FilterActor");
static_assert(offsetof(GA_LoopableEvent_Base_C_FilterActor, Actor) == 0x000000, "Member 'GA_LoopableEvent_Base_C_FilterActor::Actor' has a wrong offset!");
static_assert(offsetof(GA_LoopableEvent_Base_C_FilterActor, IncludeActor) == 0x000008, "Member 'GA_LoopableEvent_Base_C_FilterActor::IncludeActor' has a wrong offset!");
static_assert(offsetof(GA_LoopableEvent_Base_C_FilterActor, CallFunc_GetObjectClass_ReturnValue) == 0x000010, "Member 'GA_LoopableEvent_Base_C_FilterActor::CallFunc_GetObjectClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_LoopableEvent_Base_C_FilterActor, CallFunc_ClassIsChildOf_ReturnValue) == 0x000018, "Member 'GA_LoopableEvent_Base_C_FilterActor::CallFunc_ClassIsChildOf_ReturnValue' has a wrong offset!");

// Function GA_LoopableEvent_Base.GA_LoopableEvent_Base_C.GetGASComponentForTargetActor
// 0x0018 (0x0018 - 0x0000)
struct GA_LoopableEvent_Base_C_GetGASComponentForTargetActor final
{
public:
	class AActor*                                 Actor;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UValeriaGASComponent*                   GasComponent;                                      // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UValeriaGASComponent*                   CallFunc_GetComponentByClass_ReturnValue;          // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_LoopableEvent_Base_C_GetGASComponentForTargetActor) == 0x000008, "Wrong alignment on GA_LoopableEvent_Base_C_GetGASComponentForTargetActor");
static_assert(sizeof(GA_LoopableEvent_Base_C_GetGASComponentForTargetActor) == 0x000018, "Wrong size on GA_LoopableEvent_Base_C_GetGASComponentForTargetActor");
static_assert(offsetof(GA_LoopableEvent_Base_C_GetGASComponentForTargetActor, Actor) == 0x000000, "Member 'GA_LoopableEvent_Base_C_GetGASComponentForTargetActor::Actor' has a wrong offset!");
static_assert(offsetof(GA_LoopableEvent_Base_C_GetGASComponentForTargetActor, GasComponent) == 0x000008, "Member 'GA_LoopableEvent_Base_C_GetGASComponentForTargetActor::GasComponent' has a wrong offset!");
static_assert(offsetof(GA_LoopableEvent_Base_C_GetGASComponentForTargetActor, CallFunc_GetComponentByClass_ReturnValue) == 0x000010, "Member 'GA_LoopableEvent_Base_C_GetGASComponentForTargetActor::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");

// Function GA_LoopableEvent_Base.GA_LoopableEvent_Base_C.GetProbeSphere
// 0x0038 (0x0038 - 0x0000)
struct GA_LoopableEvent_Base_C_GetProbeSphere final
{
public:
	struct FBoxSphereBounds                       NewParam;                                          // 0x0000(0x0038)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(GA_LoopableEvent_Base_C_GetProbeSphere) == 0x000008, "Wrong alignment on GA_LoopableEvent_Base_C_GetProbeSphere");
static_assert(sizeof(GA_LoopableEvent_Base_C_GetProbeSphere) == 0x000038, "Wrong size on GA_LoopableEvent_Base_C_GetProbeSphere");
static_assert(offsetof(GA_LoopableEvent_Base_C_GetProbeSphere, NewParam) == 0x000000, "Member 'GA_LoopableEvent_Base_C_GetProbeSphere::NewParam' has a wrong offset!");

// Function GA_LoopableEvent_Base.GA_LoopableEvent_Base_C.GetTargetActor
// 0x0018 (0x0018 - 0x0000)
struct GA_LoopableEvent_Base_C_GetTargetActor final
{
public:
	class AActor*                                 Actor;                                             // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         TmpResultingActors;                                // 0x0008(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate)
};
static_assert(alignof(GA_LoopableEvent_Base_C_GetTargetActor) == 0x000008, "Wrong alignment on GA_LoopableEvent_Base_C_GetTargetActor");
static_assert(sizeof(GA_LoopableEvent_Base_C_GetTargetActor) == 0x000018, "Wrong size on GA_LoopableEvent_Base_C_GetTargetActor");
static_assert(offsetof(GA_LoopableEvent_Base_C_GetTargetActor, Actor) == 0x000000, "Member 'GA_LoopableEvent_Base_C_GetTargetActor::Actor' has a wrong offset!");
static_assert(offsetof(GA_LoopableEvent_Base_C_GetTargetActor, TmpResultingActors) == 0x000008, "Member 'GA_LoopableEvent_Base_C_GetTargetActor::TmpResultingActors' has a wrong offset!");

// Function GA_LoopableEvent_Base.GA_LoopableEvent_Base_C.GetTriggerAlpha
// 0x0010 (0x0010 - 0x0000)
struct GA_LoopableEvent_Base_C_GetTriggerAlpha final
{
public:
	bool                                          AbilityIntroTrigger;                               // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_43F3[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Alpha;                                             // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_LoopableEvent_Base_C_GetTriggerAlpha) == 0x000008, "Wrong alignment on GA_LoopableEvent_Base_C_GetTriggerAlpha");
static_assert(sizeof(GA_LoopableEvent_Base_C_GetTriggerAlpha) == 0x000010, "Wrong size on GA_LoopableEvent_Base_C_GetTriggerAlpha");
static_assert(offsetof(GA_LoopableEvent_Base_C_GetTriggerAlpha, AbilityIntroTrigger) == 0x000000, "Member 'GA_LoopableEvent_Base_C_GetTriggerAlpha::AbilityIntroTrigger' has a wrong offset!");
static_assert(offsetof(GA_LoopableEvent_Base_C_GetTriggerAlpha, Alpha) == 0x000008, "Member 'GA_LoopableEvent_Base_C_GetTriggerAlpha::Alpha' has a wrong offset!");

// Function GA_LoopableEvent_Base.GA_LoopableEvent_Base_C.GetTriggerTimeFromMontage
// 0x0038 (0x0038 - 0x0000)
struct GA_LoopableEvent_Base_C_GetTriggerTimeFromMontage final
{
public:
	class UAnimMontage*                           NewParam;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        Alpha;                                             // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        TimeSeconds;                                       // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetPlayLength_ReturnValue;                // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_43F4[0x4];                                     // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue;                       // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_A_ImplicitCast;     // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_LoopableEvent_Base_C_GetTriggerTimeFromMontage) == 0x000008, "Wrong alignment on GA_LoopableEvent_Base_C_GetTriggerTimeFromMontage");
static_assert(sizeof(GA_LoopableEvent_Base_C_GetTriggerTimeFromMontage) == 0x000038, "Wrong size on GA_LoopableEvent_Base_C_GetTriggerTimeFromMontage");
static_assert(offsetof(GA_LoopableEvent_Base_C_GetTriggerTimeFromMontage, NewParam) == 0x000000, "Member 'GA_LoopableEvent_Base_C_GetTriggerTimeFromMontage::NewParam' has a wrong offset!");
static_assert(offsetof(GA_LoopableEvent_Base_C_GetTriggerTimeFromMontage, Alpha) == 0x000008, "Member 'GA_LoopableEvent_Base_C_GetTriggerTimeFromMontage::Alpha' has a wrong offset!");
static_assert(offsetof(GA_LoopableEvent_Base_C_GetTriggerTimeFromMontage, TimeSeconds) == 0x000010, "Member 'GA_LoopableEvent_Base_C_GetTriggerTimeFromMontage::TimeSeconds' has a wrong offset!");
static_assert(offsetof(GA_LoopableEvent_Base_C_GetTriggerTimeFromMontage, CallFunc_GetPlayLength_ReturnValue) == 0x000018, "Member 'GA_LoopableEvent_Base_C_GetTriggerTimeFromMontage::CallFunc_GetPlayLength_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_LoopableEvent_Base_C_GetTriggerTimeFromMontage, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000020, "Member 'GA_LoopableEvent_Base_C_GetTriggerTimeFromMontage::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_LoopableEvent_Base_C_GetTriggerTimeFromMontage, CallFunc_FClamp_ReturnValue) == 0x000028, "Member 'GA_LoopableEvent_Base_C_GetTriggerTimeFromMontage::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_LoopableEvent_Base_C_GetTriggerTimeFromMontage, CallFunc_Multiply_DoubleDouble_A_ImplicitCast) == 0x000030, "Member 'GA_LoopableEvent_Base_C_GetTriggerTimeFromMontage::CallFunc_Multiply_DoubleDouble_A_ImplicitCast' has a wrong offset!");

// Function GA_LoopableEvent_Base.GA_LoopableEvent_Base_C.GetVitalsComponentForTargetActor
// 0x0018 (0x0018 - 0x0000)
struct GA_LoopableEvent_Base_C_GetVitalsComponentForTargetActor final
{
public:
	class AActor*                                 Actor;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UVitalsComponent*                       VitalsComponent;                                   // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UVitalsComponent*                       CallFunc_GetComponentByClass_ReturnValue;          // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_LoopableEvent_Base_C_GetVitalsComponentForTargetActor) == 0x000008, "Wrong alignment on GA_LoopableEvent_Base_C_GetVitalsComponentForTargetActor");
static_assert(sizeof(GA_LoopableEvent_Base_C_GetVitalsComponentForTargetActor) == 0x000018, "Wrong size on GA_LoopableEvent_Base_C_GetVitalsComponentForTargetActor");
static_assert(offsetof(GA_LoopableEvent_Base_C_GetVitalsComponentForTargetActor, Actor) == 0x000000, "Member 'GA_LoopableEvent_Base_C_GetVitalsComponentForTargetActor::Actor' has a wrong offset!");
static_assert(offsetof(GA_LoopableEvent_Base_C_GetVitalsComponentForTargetActor, VitalsComponent) == 0x000008, "Member 'GA_LoopableEvent_Base_C_GetVitalsComponentForTargetActor::VitalsComponent' has a wrong offset!");
static_assert(offsetof(GA_LoopableEvent_Base_C_GetVitalsComponentForTargetActor, CallFunc_GetComponentByClass_ReturnValue) == 0x000010, "Member 'GA_LoopableEvent_Base_C_GetVitalsComponentForTargetActor::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");

// Function GA_LoopableEvent_Base.GA_LoopableEvent_Base_C.HandleEvent
// 0x0100 (0x0100 - 0x0000)
struct GA_LoopableEvent_Base_C_HandleEvent final
{
public:
	struct FGameplayTag                           EventTag;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	struct FGameplayEventData                     EventData;                                         // 0x0008(0x00B0)(BlueprintVisible, BlueprintReadOnly, Parm)
	bool                                          CallFunc_ShouldLoop_ShouldLoop;                    // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          GameplayTagsK2Node_SwitchGameplayTag_CmpSuccess;   // 0x00B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x00BA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_43F5[0x5];                                     // 0x00BB(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwningActorFromActorInfo_ReturnValue;  // 0x00C0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AValeriaCharacter*                      K2Node_DynamicCast_AsValeria_Character;            // 0x00C8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_43F6[0x7];                                     // 0x00D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UValeriaCharacterMoveComponent*         CallFunc_GetValeriaCharacterMovementComponent_ReturnValue; // 0x00D8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int64                                         CallFunc_GetValeriaTimestampMs64_ReturnValue;      // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int64                                         CallFunc_Subtract_Int64Int64_ReturnValue;          // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_Int64Int64_ReturnValue;              // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_43F7[0x7];                                     // 0x00F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_TriggerGather_TargetActor;                // 0x00F8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_LoopableEvent_Base_C_HandleEvent) == 0x000008, "Wrong alignment on GA_LoopableEvent_Base_C_HandleEvent");
static_assert(sizeof(GA_LoopableEvent_Base_C_HandleEvent) == 0x000100, "Wrong size on GA_LoopableEvent_Base_C_HandleEvent");
static_assert(offsetof(GA_LoopableEvent_Base_C_HandleEvent, EventTag) == 0x000000, "Member 'GA_LoopableEvent_Base_C_HandleEvent::EventTag' has a wrong offset!");
static_assert(offsetof(GA_LoopableEvent_Base_C_HandleEvent, EventData) == 0x000008, "Member 'GA_LoopableEvent_Base_C_HandleEvent::EventData' has a wrong offset!");
static_assert(offsetof(GA_LoopableEvent_Base_C_HandleEvent, CallFunc_ShouldLoop_ShouldLoop) == 0x0000B8, "Member 'GA_LoopableEvent_Base_C_HandleEvent::CallFunc_ShouldLoop_ShouldLoop' has a wrong offset!");
static_assert(offsetof(GA_LoopableEvent_Base_C_HandleEvent, GameplayTagsK2Node_SwitchGameplayTag_CmpSuccess) == 0x0000B9, "Member 'GA_LoopableEvent_Base_C_HandleEvent::GameplayTagsK2Node_SwitchGameplayTag_CmpSuccess' has a wrong offset!");
static_assert(offsetof(GA_LoopableEvent_Base_C_HandleEvent, CallFunc_Not_PreBool_ReturnValue) == 0x0000BA, "Member 'GA_LoopableEvent_Base_C_HandleEvent::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_LoopableEvent_Base_C_HandleEvent, CallFunc_GetOwningActorFromActorInfo_ReturnValue) == 0x0000C0, "Member 'GA_LoopableEvent_Base_C_HandleEvent::CallFunc_GetOwningActorFromActorInfo_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_LoopableEvent_Base_C_HandleEvent, K2Node_DynamicCast_AsValeria_Character) == 0x0000C8, "Member 'GA_LoopableEvent_Base_C_HandleEvent::K2Node_DynamicCast_AsValeria_Character' has a wrong offset!");
static_assert(offsetof(GA_LoopableEvent_Base_C_HandleEvent, K2Node_DynamicCast_bSuccess) == 0x0000D0, "Member 'GA_LoopableEvent_Base_C_HandleEvent::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(GA_LoopableEvent_Base_C_HandleEvent, CallFunc_GetValeriaCharacterMovementComponent_ReturnValue) == 0x0000D8, "Member 'GA_LoopableEvent_Base_C_HandleEvent::CallFunc_GetValeriaCharacterMovementComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_LoopableEvent_Base_C_HandleEvent, CallFunc_GetValeriaTimestampMs64_ReturnValue) == 0x0000E0, "Member 'GA_LoopableEvent_Base_C_HandleEvent::CallFunc_GetValeriaTimestampMs64_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_LoopableEvent_Base_C_HandleEvent, CallFunc_Subtract_Int64Int64_ReturnValue) == 0x0000E8, "Member 'GA_LoopableEvent_Base_C_HandleEvent::CallFunc_Subtract_Int64Int64_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_LoopableEvent_Base_C_HandleEvent, CallFunc_Less_Int64Int64_ReturnValue) == 0x0000F0, "Member 'GA_LoopableEvent_Base_C_HandleEvent::CallFunc_Less_Int64Int64_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_LoopableEvent_Base_C_HandleEvent, CallFunc_TriggerGather_TargetActor) == 0x0000F8, "Member 'GA_LoopableEvent_Base_C_HandleEvent::CallFunc_TriggerGather_TargetActor' has a wrong offset!");

// Function GA_LoopableEvent_Base.GA_LoopableEvent_Base_C.IsAbilityLockedIn
// 0x0040 (0x0040 - 0x0000)
struct GA_LoopableEvent_Base_C_IsAbilityLockedIn final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_43F8[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwningActorFromActorInfo_ReturnValue;  // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AValeriaCharacter*                      K2Node_DynamicCast_AsValeria_Character;            // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_43F9[0x7];                                     // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UValeriaGASComponent*                   CallFunc_GetGAS_ReturnValue;                       // 0x0020(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IGameplayTagAssetInterface> CallFunc_HasMatchingGameplayTag_self_CastInput;    // 0x0028(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasMatchingGameplayTag_ReturnValue;       // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsAbilityMarkedLockedIn_ReturnValue;      // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x003A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x003B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_LoopableEvent_Base_C_IsAbilityLockedIn) == 0x000008, "Wrong alignment on GA_LoopableEvent_Base_C_IsAbilityLockedIn");
static_assert(sizeof(GA_LoopableEvent_Base_C_IsAbilityLockedIn) == 0x000040, "Wrong size on GA_LoopableEvent_Base_C_IsAbilityLockedIn");
static_assert(offsetof(GA_LoopableEvent_Base_C_IsAbilityLockedIn, ReturnValue) == 0x000000, "Member 'GA_LoopableEvent_Base_C_IsAbilityLockedIn::ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_LoopableEvent_Base_C_IsAbilityLockedIn, CallFunc_GetOwningActorFromActorInfo_ReturnValue) == 0x000008, "Member 'GA_LoopableEvent_Base_C_IsAbilityLockedIn::CallFunc_GetOwningActorFromActorInfo_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_LoopableEvent_Base_C_IsAbilityLockedIn, K2Node_DynamicCast_AsValeria_Character) == 0x000010, "Member 'GA_LoopableEvent_Base_C_IsAbilityLockedIn::K2Node_DynamicCast_AsValeria_Character' has a wrong offset!");
static_assert(offsetof(GA_LoopableEvent_Base_C_IsAbilityLockedIn, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'GA_LoopableEvent_Base_C_IsAbilityLockedIn::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(GA_LoopableEvent_Base_C_IsAbilityLockedIn, CallFunc_GetGAS_ReturnValue) == 0x000020, "Member 'GA_LoopableEvent_Base_C_IsAbilityLockedIn::CallFunc_GetGAS_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_LoopableEvent_Base_C_IsAbilityLockedIn, CallFunc_HasMatchingGameplayTag_self_CastInput) == 0x000028, "Member 'GA_LoopableEvent_Base_C_IsAbilityLockedIn::CallFunc_HasMatchingGameplayTag_self_CastInput' has a wrong offset!");
static_assert(offsetof(GA_LoopableEvent_Base_C_IsAbilityLockedIn, CallFunc_HasMatchingGameplayTag_ReturnValue) == 0x000038, "Member 'GA_LoopableEvent_Base_C_IsAbilityLockedIn::CallFunc_HasMatchingGameplayTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_LoopableEvent_Base_C_IsAbilityLockedIn, CallFunc_IsAbilityMarkedLockedIn_ReturnValue) == 0x000039, "Member 'GA_LoopableEvent_Base_C_IsAbilityLockedIn::CallFunc_IsAbilityMarkedLockedIn_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_LoopableEvent_Base_C_IsAbilityLockedIn, CallFunc_BooleanOR_ReturnValue) == 0x00003A, "Member 'GA_LoopableEvent_Base_C_IsAbilityLockedIn::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_LoopableEvent_Base_C_IsAbilityLockedIn, CallFunc_BooleanOR_ReturnValue_1) == 0x00003B, "Member 'GA_LoopableEvent_Base_C_IsAbilityLockedIn::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");

// Function GA_LoopableEvent_Base.GA_LoopableEvent_Base_C.IsButtonPressed
// 0x0001 (0x0001 - 0x0000)
struct GA_LoopableEvent_Base_C_IsButtonPressed final
{
public:
	bool                                          Param_ButtonPressed;                               // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_LoopableEvent_Base_C_IsButtonPressed) == 0x000001, "Wrong alignment on GA_LoopableEvent_Base_C_IsButtonPressed");
static_assert(sizeof(GA_LoopableEvent_Base_C_IsButtonPressed) == 0x000001, "Wrong size on GA_LoopableEvent_Base_C_IsButtonPressed");
static_assert(offsetof(GA_LoopableEvent_Base_C_IsButtonPressed, Param_ButtonPressed) == 0x000000, "Member 'GA_LoopableEvent_Base_C_IsButtonPressed::Param_ButtonPressed' has a wrong offset!");

// Function GA_LoopableEvent_Base.GA_LoopableEvent_Base_C.K2_OnEndAbility
// 0x0001 (0x0001 - 0x0000)
struct GA_LoopableEvent_Base_C_K2_OnEndAbility final
{
public:
	bool                                          bWasCancelled;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_LoopableEvent_Base_C_K2_OnEndAbility) == 0x000001, "Wrong alignment on GA_LoopableEvent_Base_C_K2_OnEndAbility");
static_assert(sizeof(GA_LoopableEvent_Base_C_K2_OnEndAbility) == 0x000001, "Wrong size on GA_LoopableEvent_Base_C_K2_OnEndAbility");
static_assert(offsetof(GA_LoopableEvent_Base_C_K2_OnEndAbility, bWasCancelled) == 0x000000, "Member 'GA_LoopableEvent_Base_C_K2_OnEndAbility::bWasCancelled' has a wrong offset!");

// Function GA_LoopableEvent_Base.GA_LoopableEvent_Base_C.LoadAbilityAssets
// 0x0008 (0x0008 - 0x0000)
struct GA_LoopableEvent_Base_C_LoadAbilityAssets final
{
public:
	const class AValeriaCharacter*                ValeriaCharacter;                                  // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_LoopableEvent_Base_C_LoadAbilityAssets) == 0x000008, "Wrong alignment on GA_LoopableEvent_Base_C_LoadAbilityAssets");
static_assert(sizeof(GA_LoopableEvent_Base_C_LoadAbilityAssets) == 0x000008, "Wrong size on GA_LoopableEvent_Base_C_LoadAbilityAssets");
static_assert(offsetof(GA_LoopableEvent_Base_C_LoadAbilityAssets, ValeriaCharacter) == 0x000000, "Member 'GA_LoopableEvent_Base_C_LoadAbilityAssets::ValeriaCharacter' has a wrong offset!");

// Function GA_LoopableEvent_Base.GA_LoopableEvent_Base_C.OnAbilityActivated
// 0x00A0 (0x00A0 - 0x0000)
struct GA_LoopableEvent_Base_C_OnAbilityActivated final
{
public:
	class AActor*                                 CallFunc_GetOwningActorFromActorInfo_ReturnValue;  // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AValeriaCharacter*                      K2Node_DynamicCast_AsValeria_Character;            // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_43FA[0x7];                                     // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_K2_GetActorRotation_ReturnValue;          // 0x0018(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0030(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_43FB[0x4];                                     // 0x0054(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UValeriaCharacterMoveComponent*         CallFunc_GetValeriaCharacterMovementComponent_ReturnValue; // 0x0058(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0060(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x0070(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_1;            // 0x0088(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeRotator_Yaw_ImplicitCast;             // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_LoopableEvent_Base_C_OnAbilityActivated) == 0x000008, "Wrong alignment on GA_LoopableEvent_Base_C_OnAbilityActivated");
static_assert(sizeof(GA_LoopableEvent_Base_C_OnAbilityActivated) == 0x0000A0, "Wrong size on GA_LoopableEvent_Base_C_OnAbilityActivated");
static_assert(offsetof(GA_LoopableEvent_Base_C_OnAbilityActivated, CallFunc_GetOwningActorFromActorInfo_ReturnValue) == 0x000000, "Member 'GA_LoopableEvent_Base_C_OnAbilityActivated::CallFunc_GetOwningActorFromActorInfo_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_LoopableEvent_Base_C_OnAbilityActivated, K2Node_DynamicCast_AsValeria_Character) == 0x000008, "Member 'GA_LoopableEvent_Base_C_OnAbilityActivated::K2Node_DynamicCast_AsValeria_Character' has a wrong offset!");
static_assert(offsetof(GA_LoopableEvent_Base_C_OnAbilityActivated, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'GA_LoopableEvent_Base_C_OnAbilityActivated::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(GA_LoopableEvent_Base_C_OnAbilityActivated, CallFunc_K2_GetActorRotation_ReturnValue) == 0x000018, "Member 'GA_LoopableEvent_Base_C_OnAbilityActivated::CallFunc_K2_GetActorRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_LoopableEvent_Base_C_OnAbilityActivated, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000030, "Member 'GA_LoopableEvent_Base_C_OnAbilityActivated::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_LoopableEvent_Base_C_OnAbilityActivated, CallFunc_BreakRotator_Roll) == 0x000048, "Member 'GA_LoopableEvent_Base_C_OnAbilityActivated::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(GA_LoopableEvent_Base_C_OnAbilityActivated, CallFunc_BreakRotator_Pitch) == 0x00004C, "Member 'GA_LoopableEvent_Base_C_OnAbilityActivated::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(GA_LoopableEvent_Base_C_OnAbilityActivated, CallFunc_BreakRotator_Yaw) == 0x000050, "Member 'GA_LoopableEvent_Base_C_OnAbilityActivated::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(GA_LoopableEvent_Base_C_OnAbilityActivated, CallFunc_GetValeriaCharacterMovementComponent_ReturnValue) == 0x000058, "Member 'GA_LoopableEvent_Base_C_OnAbilityActivated::CallFunc_GetValeriaCharacterMovementComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_LoopableEvent_Base_C_OnAbilityActivated, K2Node_CreateDelegate_OutputDelegate) == 0x000060, "Member 'GA_LoopableEvent_Base_C_OnAbilityActivated::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(GA_LoopableEvent_Base_C_OnAbilityActivated, CallFunc_MakeRotator_ReturnValue) == 0x000070, "Member 'GA_LoopableEvent_Base_C_OnAbilityActivated::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_LoopableEvent_Base_C_OnAbilityActivated, K2Node_CreateDelegate_OutputDelegate_1) == 0x000088, "Member 'GA_LoopableEvent_Base_C_OnAbilityActivated::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(GA_LoopableEvent_Base_C_OnAbilityActivated, CallFunc_MakeRotator_Yaw_ImplicitCast) == 0x000098, "Member 'GA_LoopableEvent_Base_C_OnAbilityActivated::CallFunc_MakeRotator_Yaw_ImplicitCast' has a wrong offset!");

// Function GA_LoopableEvent_Base.GA_LoopableEvent_Base_C.OnAbilityEnded
// 0x0038 (0x0038 - 0x0000)
struct GA_LoopableEvent_Base_C_OnAbilityEnded final
{
public:
	bool                                          CallFunc_FNameIsNone_ReturnValue;                  // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_43FC[0x6];                                     // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimMontage*                           CallFunc_GetCurrentMontage_ReturnValue;            // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0010(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_43FD[0x3];                                     // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_1;            // 0x0024(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_LoopableEvent_Base_C_OnAbilityEnded) == 0x000008, "Wrong alignment on GA_LoopableEvent_Base_C_OnAbilityEnded");
static_assert(sizeof(GA_LoopableEvent_Base_C_OnAbilityEnded) == 0x000038, "Wrong size on GA_LoopableEvent_Base_C_OnAbilityEnded");
static_assert(offsetof(GA_LoopableEvent_Base_C_OnAbilityEnded, CallFunc_FNameIsNone_ReturnValue) == 0x000000, "Member 'GA_LoopableEvent_Base_C_OnAbilityEnded::CallFunc_FNameIsNone_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_LoopableEvent_Base_C_OnAbilityEnded, CallFunc_Not_PreBool_ReturnValue) == 0x000001, "Member 'GA_LoopableEvent_Base_C_OnAbilityEnded::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_LoopableEvent_Base_C_OnAbilityEnded, CallFunc_GetCurrentMontage_ReturnValue) == 0x000008, "Member 'GA_LoopableEvent_Base_C_OnAbilityEnded::CallFunc_GetCurrentMontage_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_LoopableEvent_Base_C_OnAbilityEnded, K2Node_CreateDelegate_OutputDelegate) == 0x000010, "Member 'GA_LoopableEvent_Base_C_OnAbilityEnded::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(GA_LoopableEvent_Base_C_OnAbilityEnded, CallFunc_IsValid_ReturnValue) == 0x000020, "Member 'GA_LoopableEvent_Base_C_OnAbilityEnded::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_LoopableEvent_Base_C_OnAbilityEnded, K2Node_CreateDelegate_OutputDelegate_1) == 0x000024, "Member 'GA_LoopableEvent_Base_C_OnAbilityEnded::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");

// Function GA_LoopableEvent_Base.GA_LoopableEvent_Base_C.OnBlendOut_61604B204A52FE55D07E178D4DC2F376
// 0x00B8 (0x00B8 - 0x0000)
struct GA_LoopableEvent_Base_C_OnBlendOut_61604B204A52FE55D07E178D4DC2F376 final
{
public:
	struct FGameplayTag                           EventTag;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	struct FGameplayEventData                     EventData;                                         // 0x0008(0x00B0)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(GA_LoopableEvent_Base_C_OnBlendOut_61604B204A52FE55D07E178D4DC2F376) == 0x000008, "Wrong alignment on GA_LoopableEvent_Base_C_OnBlendOut_61604B204A52FE55D07E178D4DC2F376");
static_assert(sizeof(GA_LoopableEvent_Base_C_OnBlendOut_61604B204A52FE55D07E178D4DC2F376) == 0x0000B8, "Wrong size on GA_LoopableEvent_Base_C_OnBlendOut_61604B204A52FE55D07E178D4DC2F376");
static_assert(offsetof(GA_LoopableEvent_Base_C_OnBlendOut_61604B204A52FE55D07E178D4DC2F376, EventTag) == 0x000000, "Member 'GA_LoopableEvent_Base_C_OnBlendOut_61604B204A52FE55D07E178D4DC2F376::EventTag' has a wrong offset!");
static_assert(offsetof(GA_LoopableEvent_Base_C_OnBlendOut_61604B204A52FE55D07E178D4DC2F376, EventData) == 0x000008, "Member 'GA_LoopableEvent_Base_C_OnBlendOut_61604B204A52FE55D07E178D4DC2F376::EventData' has a wrong offset!");

// Function GA_LoopableEvent_Base.GA_LoopableEvent_Base_C.OnBlendOut_77447BC74D3381190AD07DB52A7C9C1E
// 0x00B8 (0x00B8 - 0x0000)
struct GA_LoopableEvent_Base_C_OnBlendOut_77447BC74D3381190AD07DB52A7C9C1E final
{
public:
	struct FGameplayTag                           EventTag;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	struct FGameplayEventData                     EventData;                                         // 0x0008(0x00B0)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(GA_LoopableEvent_Base_C_OnBlendOut_77447BC74D3381190AD07DB52A7C9C1E) == 0x000008, "Wrong alignment on GA_LoopableEvent_Base_C_OnBlendOut_77447BC74D3381190AD07DB52A7C9C1E");
static_assert(sizeof(GA_LoopableEvent_Base_C_OnBlendOut_77447BC74D3381190AD07DB52A7C9C1E) == 0x0000B8, "Wrong size on GA_LoopableEvent_Base_C_OnBlendOut_77447BC74D3381190AD07DB52A7C9C1E");
static_assert(offsetof(GA_LoopableEvent_Base_C_OnBlendOut_77447BC74D3381190AD07DB52A7C9C1E, EventTag) == 0x000000, "Member 'GA_LoopableEvent_Base_C_OnBlendOut_77447BC74D3381190AD07DB52A7C9C1E::EventTag' has a wrong offset!");
static_assert(offsetof(GA_LoopableEvent_Base_C_OnBlendOut_77447BC74D3381190AD07DB52A7C9C1E, EventData) == 0x000008, "Member 'GA_LoopableEvent_Base_C_OnBlendOut_77447BC74D3381190AD07DB52A7C9C1E::EventData' has a wrong offset!");

// Function GA_LoopableEvent_Base.GA_LoopableEvent_Base_C.OnBlendOut_87B0B7C040C0EF4C9F67D9AD4E32ED36
// 0x00B8 (0x00B8 - 0x0000)
struct GA_LoopableEvent_Base_C_OnBlendOut_87B0B7C040C0EF4C9F67D9AD4E32ED36 final
{
public:
	struct FGameplayTag                           EventTag;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	struct FGameplayEventData                     EventData;                                         // 0x0008(0x00B0)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(GA_LoopableEvent_Base_C_OnBlendOut_87B0B7C040C0EF4C9F67D9AD4E32ED36) == 0x000008, "Wrong alignment on GA_LoopableEvent_Base_C_OnBlendOut_87B0B7C040C0EF4C9F67D9AD4E32ED36");
static_assert(sizeof(GA_LoopableEvent_Base_C_OnBlendOut_87B0B7C040C0EF4C9F67D9AD4E32ED36) == 0x0000B8, "Wrong size on GA_LoopableEvent_Base_C_OnBlendOut_87B0B7C040C0EF4C9F67D9AD4E32ED36");
static_assert(offsetof(GA_LoopableEvent_Base_C_OnBlendOut_87B0B7C040C0EF4C9F67D9AD4E32ED36, EventTag) == 0x000000, "Member 'GA_LoopableEvent_Base_C_OnBlendOut_87B0B7C040C0EF4C9F67D9AD4E32ED36::EventTag' has a wrong offset!");
static_assert(offsetof(GA_LoopableEvent_Base_C_OnBlendOut_87B0B7C040C0EF4C9F67D9AD4E32ED36, EventData) == 0x000008, "Member 'GA_LoopableEvent_Base_C_OnBlendOut_87B0B7C040C0EF4C9F67D9AD4E32ED36::EventData' has a wrong offset!");

// Function GA_LoopableEvent_Base.GA_LoopableEvent_Base_C.OnCancelled_61604B204A52FE55D07E178D4DC2F376
// 0x00B8 (0x00B8 - 0x0000)
struct GA_LoopableEvent_Base_C_OnCancelled_61604B204A52FE55D07E178D4DC2F376 final
{
public:
	struct FGameplayTag                           EventTag;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	struct FGameplayEventData                     EventData;                                         // 0x0008(0x00B0)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(GA_LoopableEvent_Base_C_OnCancelled_61604B204A52FE55D07E178D4DC2F376) == 0x000008, "Wrong alignment on GA_LoopableEvent_Base_C_OnCancelled_61604B204A52FE55D07E178D4DC2F376");
static_assert(sizeof(GA_LoopableEvent_Base_C_OnCancelled_61604B204A52FE55D07E178D4DC2F376) == 0x0000B8, "Wrong size on GA_LoopableEvent_Base_C_OnCancelled_61604B204A52FE55D07E178D4DC2F376");
static_assert(offsetof(GA_LoopableEvent_Base_C_OnCancelled_61604B204A52FE55D07E178D4DC2F376, EventTag) == 0x000000, "Member 'GA_LoopableEvent_Base_C_OnCancelled_61604B204A52FE55D07E178D4DC2F376::EventTag' has a wrong offset!");
static_assert(offsetof(GA_LoopableEvent_Base_C_OnCancelled_61604B204A52FE55D07E178D4DC2F376, EventData) == 0x000008, "Member 'GA_LoopableEvent_Base_C_OnCancelled_61604B204A52FE55D07E178D4DC2F376::EventData' has a wrong offset!");

// Function GA_LoopableEvent_Base.GA_LoopableEvent_Base_C.OnCancelled_77447BC74D3381190AD07DB52A7C9C1E
// 0x00B8 (0x00B8 - 0x0000)
struct GA_LoopableEvent_Base_C_OnCancelled_77447BC74D3381190AD07DB52A7C9C1E final
{
public:
	struct FGameplayTag                           EventTag;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	struct FGameplayEventData                     EventData;                                         // 0x0008(0x00B0)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(GA_LoopableEvent_Base_C_OnCancelled_77447BC74D3381190AD07DB52A7C9C1E) == 0x000008, "Wrong alignment on GA_LoopableEvent_Base_C_OnCancelled_77447BC74D3381190AD07DB52A7C9C1E");
static_assert(sizeof(GA_LoopableEvent_Base_C_OnCancelled_77447BC74D3381190AD07DB52A7C9C1E) == 0x0000B8, "Wrong size on GA_LoopableEvent_Base_C_OnCancelled_77447BC74D3381190AD07DB52A7C9C1E");
static_assert(offsetof(GA_LoopableEvent_Base_C_OnCancelled_77447BC74D3381190AD07DB52A7C9C1E, EventTag) == 0x000000, "Member 'GA_LoopableEvent_Base_C_OnCancelled_77447BC74D3381190AD07DB52A7C9C1E::EventTag' has a wrong offset!");
static_assert(offsetof(GA_LoopableEvent_Base_C_OnCancelled_77447BC74D3381190AD07DB52A7C9C1E, EventData) == 0x000008, "Member 'GA_LoopableEvent_Base_C_OnCancelled_77447BC74D3381190AD07DB52A7C9C1E::EventData' has a wrong offset!");

// Function GA_LoopableEvent_Base.GA_LoopableEvent_Base_C.OnCancelled_87B0B7C040C0EF4C9F67D9AD4E32ED36
// 0x00B8 (0x00B8 - 0x0000)
struct GA_LoopableEvent_Base_C_OnCancelled_87B0B7C040C0EF4C9F67D9AD4E32ED36 final
{
public:
	struct FGameplayTag                           EventTag;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	struct FGameplayEventData                     EventData;                                         // 0x0008(0x00B0)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(GA_LoopableEvent_Base_C_OnCancelled_87B0B7C040C0EF4C9F67D9AD4E32ED36) == 0x000008, "Wrong alignment on GA_LoopableEvent_Base_C_OnCancelled_87B0B7C040C0EF4C9F67D9AD4E32ED36");
static_assert(sizeof(GA_LoopableEvent_Base_C_OnCancelled_87B0B7C040C0EF4C9F67D9AD4E32ED36) == 0x0000B8, "Wrong size on GA_LoopableEvent_Base_C_OnCancelled_87B0B7C040C0EF4C9F67D9AD4E32ED36");
static_assert(offsetof(GA_LoopableEvent_Base_C_OnCancelled_87B0B7C040C0EF4C9F67D9AD4E32ED36, EventTag) == 0x000000, "Member 'GA_LoopableEvent_Base_C_OnCancelled_87B0B7C040C0EF4C9F67D9AD4E32ED36::EventTag' has a wrong offset!");
static_assert(offsetof(GA_LoopableEvent_Base_C_OnCancelled_87B0B7C040C0EF4C9F67D9AD4E32ED36, EventData) == 0x000008, "Member 'GA_LoopableEvent_Base_C_OnCancelled_87B0B7C040C0EF4C9F67D9AD4E32ED36::EventData' has a wrong offset!");

// Function GA_LoopableEvent_Base.GA_LoopableEvent_Base_C.OnCharacterMoved
// 0x0038 (0x0038 - 0x0000)
struct GA_LoopableEvent_Base_C_OnCharacterMoved final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_43FE[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                OldLocation;                                       // 0x0008(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                OldVelocity;                                       // 0x0020(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_LoopableEvent_Base_C_OnCharacterMoved) == 0x000008, "Wrong alignment on GA_LoopableEvent_Base_C_OnCharacterMoved");
static_assert(sizeof(GA_LoopableEvent_Base_C_OnCharacterMoved) == 0x000038, "Wrong size on GA_LoopableEvent_Base_C_OnCharacterMoved");
static_assert(offsetof(GA_LoopableEvent_Base_C_OnCharacterMoved, DeltaSeconds) == 0x000000, "Member 'GA_LoopableEvent_Base_C_OnCharacterMoved::DeltaSeconds' has a wrong offset!");
static_assert(offsetof(GA_LoopableEvent_Base_C_OnCharacterMoved, OldLocation) == 0x000008, "Member 'GA_LoopableEvent_Base_C_OnCharacterMoved::OldLocation' has a wrong offset!");
static_assert(offsetof(GA_LoopableEvent_Base_C_OnCharacterMoved, OldVelocity) == 0x000020, "Member 'GA_LoopableEvent_Base_C_OnCharacterMoved::OldVelocity' has a wrong offset!");

// Function GA_LoopableEvent_Base.GA_LoopableEvent_Base_C.OnCompleted_61604B204A52FE55D07E178D4DC2F376
// 0x00B8 (0x00B8 - 0x0000)
struct GA_LoopableEvent_Base_C_OnCompleted_61604B204A52FE55D07E178D4DC2F376 final
{
public:
	struct FGameplayTag                           EventTag;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	struct FGameplayEventData                     EventData;                                         // 0x0008(0x00B0)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(GA_LoopableEvent_Base_C_OnCompleted_61604B204A52FE55D07E178D4DC2F376) == 0x000008, "Wrong alignment on GA_LoopableEvent_Base_C_OnCompleted_61604B204A52FE55D07E178D4DC2F376");
static_assert(sizeof(GA_LoopableEvent_Base_C_OnCompleted_61604B204A52FE55D07E178D4DC2F376) == 0x0000B8, "Wrong size on GA_LoopableEvent_Base_C_OnCompleted_61604B204A52FE55D07E178D4DC2F376");
static_assert(offsetof(GA_LoopableEvent_Base_C_OnCompleted_61604B204A52FE55D07E178D4DC2F376, EventTag) == 0x000000, "Member 'GA_LoopableEvent_Base_C_OnCompleted_61604B204A52FE55D07E178D4DC2F376::EventTag' has a wrong offset!");
static_assert(offsetof(GA_LoopableEvent_Base_C_OnCompleted_61604B204A52FE55D07E178D4DC2F376, EventData) == 0x000008, "Member 'GA_LoopableEvent_Base_C_OnCompleted_61604B204A52FE55D07E178D4DC2F376::EventData' has a wrong offset!");

// Function GA_LoopableEvent_Base.GA_LoopableEvent_Base_C.OnCompleted_77447BC74D3381190AD07DB52A7C9C1E
// 0x00B8 (0x00B8 - 0x0000)
struct GA_LoopableEvent_Base_C_OnCompleted_77447BC74D3381190AD07DB52A7C9C1E final
{
public:
	struct FGameplayTag                           EventTag;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	struct FGameplayEventData                     EventData;                                         // 0x0008(0x00B0)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(GA_LoopableEvent_Base_C_OnCompleted_77447BC74D3381190AD07DB52A7C9C1E) == 0x000008, "Wrong alignment on GA_LoopableEvent_Base_C_OnCompleted_77447BC74D3381190AD07DB52A7C9C1E");
static_assert(sizeof(GA_LoopableEvent_Base_C_OnCompleted_77447BC74D3381190AD07DB52A7C9C1E) == 0x0000B8, "Wrong size on GA_LoopableEvent_Base_C_OnCompleted_77447BC74D3381190AD07DB52A7C9C1E");
static_assert(offsetof(GA_LoopableEvent_Base_C_OnCompleted_77447BC74D3381190AD07DB52A7C9C1E, EventTag) == 0x000000, "Member 'GA_LoopableEvent_Base_C_OnCompleted_77447BC74D3381190AD07DB52A7C9C1E::EventTag' has a wrong offset!");
static_assert(offsetof(GA_LoopableEvent_Base_C_OnCompleted_77447BC74D3381190AD07DB52A7C9C1E, EventData) == 0x000008, "Member 'GA_LoopableEvent_Base_C_OnCompleted_77447BC74D3381190AD07DB52A7C9C1E::EventData' has a wrong offset!");

// Function GA_LoopableEvent_Base.GA_LoopableEvent_Base_C.OnCompleted_87B0B7C040C0EF4C9F67D9AD4E32ED36
// 0x00B8 (0x00B8 - 0x0000)
struct GA_LoopableEvent_Base_C_OnCompleted_87B0B7C040C0EF4C9F67D9AD4E32ED36 final
{
public:
	struct FGameplayTag                           EventTag;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	struct FGameplayEventData                     EventData;                                         // 0x0008(0x00B0)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(GA_LoopableEvent_Base_C_OnCompleted_87B0B7C040C0EF4C9F67D9AD4E32ED36) == 0x000008, "Wrong alignment on GA_LoopableEvent_Base_C_OnCompleted_87B0B7C040C0EF4C9F67D9AD4E32ED36");
static_assert(sizeof(GA_LoopableEvent_Base_C_OnCompleted_87B0B7C040C0EF4C9F67D9AD4E32ED36) == 0x0000B8, "Wrong size on GA_LoopableEvent_Base_C_OnCompleted_87B0B7C040C0EF4C9F67D9AD4E32ED36");
static_assert(offsetof(GA_LoopableEvent_Base_C_OnCompleted_87B0B7C040C0EF4C9F67D9AD4E32ED36, EventTag) == 0x000000, "Member 'GA_LoopableEvent_Base_C_OnCompleted_87B0B7C040C0EF4C9F67D9AD4E32ED36::EventTag' has a wrong offset!");
static_assert(offsetof(GA_LoopableEvent_Base_C_OnCompleted_87B0B7C040C0EF4C9F67D9AD4E32ED36, EventData) == 0x000008, "Member 'GA_LoopableEvent_Base_C_OnCompleted_87B0B7C040C0EF4C9F67D9AD4E32ED36::EventData' has a wrong offset!");

// Function GA_LoopableEvent_Base.GA_LoopableEvent_Base_C.OnGather
// 0x0128 (0x0128 - 0x0000)
struct GA_LoopableEvent_Base_C_OnGather final
{
public:
	class AActor*                                 Actor;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          DidProgressGather;                                 // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_43FF[0x7];                                     // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UVitalsComponent*                       VitalsComponent;                                   // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          WasDamageDealt;                                    // 0x0018(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4400[0x7];                                     // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UVitalsComponent*                       CallFunc_GetVitalsComponentForTargetActor_VitalsComponent; // 0x0020(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TSubclassOf<class UGameplayEffect>            Temp_class_Variable;                               // 0x0028(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          CallFunc_IsServer_ReturnValue;                     // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4401[0x2];                                     // 0x0032(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetVital_ReturnValue;                     // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4402[0x7];                                     // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AValeriaCharacter*                      CallFunc_GetValeriaCharacterFromActorInfo_ReturnValue; // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsGodModeEnabled_ReturnValue;             // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4403[0x6];                                     // 0x004A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UValeriaGASComponent*                   CallFunc_GetGAS_ReturnValue;                       // 0x0050(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwningActorFromActorInfo_ReturnValue;  // 0x0058(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4404[0x7];                                     // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0068(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ENetRole                                      CallFunc_GetLocalRole_ReturnValue;                 // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsServer_ReturnValue_1;                   // 0x0081(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0082(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4405[0x5];                                     // 0x0083(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwningActorFromActorInfo_ReturnValue_1; // 0x0088(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UValeriaGASComponent*                   CallFunc_GetGASComponentForTargetActor_GASComponent; // 0x0090(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwningActorFromActorInfo_ReturnValue_2; // 0x0098(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVitalsChangeContext                   K2Node_MakeStruct_VitalsChangeContext;             // 0x00A0(0x0030)()
	TSubclassOf<class UGameplayEffect>            K2Node_Select_Default;                             // 0x00D0(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	struct FVitalsChange                          K2Node_MakeStruct_VitalsChange;                    // 0x00D8(0x0040)()
	struct FActiveGameplayEffectHandle            CallFunc_BP_ApplyGameplayEffectToTarget_ReturnValue; // 0x0118(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_FilterChange_ReturnValue;                 // 0x0120(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_LoopableEvent_Base_C_OnGather) == 0x000008, "Wrong alignment on GA_LoopableEvent_Base_C_OnGather");
static_assert(sizeof(GA_LoopableEvent_Base_C_OnGather) == 0x000128, "Wrong size on GA_LoopableEvent_Base_C_OnGather");
static_assert(offsetof(GA_LoopableEvent_Base_C_OnGather, Actor) == 0x000000, "Member 'GA_LoopableEvent_Base_C_OnGather::Actor' has a wrong offset!");
static_assert(offsetof(GA_LoopableEvent_Base_C_OnGather, DidProgressGather) == 0x000008, "Member 'GA_LoopableEvent_Base_C_OnGather::DidProgressGather' has a wrong offset!");
static_assert(offsetof(GA_LoopableEvent_Base_C_OnGather, VitalsComponent) == 0x000010, "Member 'GA_LoopableEvent_Base_C_OnGather::VitalsComponent' has a wrong offset!");
static_assert(offsetof(GA_LoopableEvent_Base_C_OnGather, WasDamageDealt) == 0x000018, "Member 'GA_LoopableEvent_Base_C_OnGather::WasDamageDealt' has a wrong offset!");
static_assert(offsetof(GA_LoopableEvent_Base_C_OnGather, CallFunc_GetVitalsComponentForTargetActor_VitalsComponent) == 0x000020, "Member 'GA_LoopableEvent_Base_C_OnGather::CallFunc_GetVitalsComponentForTargetActor_VitalsComponent' has a wrong offset!");
static_assert(offsetof(GA_LoopableEvent_Base_C_OnGather, Temp_class_Variable) == 0x000028, "Member 'GA_LoopableEvent_Base_C_OnGather::Temp_class_Variable' has a wrong offset!");
static_assert(offsetof(GA_LoopableEvent_Base_C_OnGather, CallFunc_IsServer_ReturnValue) == 0x000030, "Member 'GA_LoopableEvent_Base_C_OnGather::CallFunc_IsServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_LoopableEvent_Base_C_OnGather, CallFunc_Not_PreBool_ReturnValue) == 0x000031, "Member 'GA_LoopableEvent_Base_C_OnGather::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_LoopableEvent_Base_C_OnGather, CallFunc_GetVital_ReturnValue) == 0x000034, "Member 'GA_LoopableEvent_Base_C_OnGather::CallFunc_GetVital_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_LoopableEvent_Base_C_OnGather, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000038, "Member 'GA_LoopableEvent_Base_C_OnGather::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_LoopableEvent_Base_C_OnGather, CallFunc_GetValeriaCharacterFromActorInfo_ReturnValue) == 0x000040, "Member 'GA_LoopableEvent_Base_C_OnGather::CallFunc_GetValeriaCharacterFromActorInfo_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_LoopableEvent_Base_C_OnGather, CallFunc_Not_PreBool_ReturnValue_1) == 0x000048, "Member 'GA_LoopableEvent_Base_C_OnGather::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_LoopableEvent_Base_C_OnGather, CallFunc_IsGodModeEnabled_ReturnValue) == 0x000049, "Member 'GA_LoopableEvent_Base_C_OnGather::CallFunc_IsGodModeEnabled_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_LoopableEvent_Base_C_OnGather, CallFunc_GetGAS_ReturnValue) == 0x000050, "Member 'GA_LoopableEvent_Base_C_OnGather::CallFunc_GetGAS_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_LoopableEvent_Base_C_OnGather, CallFunc_GetOwningActorFromActorInfo_ReturnValue) == 0x000058, "Member 'GA_LoopableEvent_Base_C_OnGather::CallFunc_GetOwningActorFromActorInfo_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_LoopableEvent_Base_C_OnGather, Temp_bool_Variable) == 0x000060, "Member 'GA_LoopableEvent_Base_C_OnGather::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(GA_LoopableEvent_Base_C_OnGather, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000068, "Member 'GA_LoopableEvent_Base_C_OnGather::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_LoopableEvent_Base_C_OnGather, CallFunc_GetLocalRole_ReturnValue) == 0x000080, "Member 'GA_LoopableEvent_Base_C_OnGather::CallFunc_GetLocalRole_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_LoopableEvent_Base_C_OnGather, CallFunc_IsServer_ReturnValue_1) == 0x000081, "Member 'GA_LoopableEvent_Base_C_OnGather::CallFunc_IsServer_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_LoopableEvent_Base_C_OnGather, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000082, "Member 'GA_LoopableEvent_Base_C_OnGather::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_LoopableEvent_Base_C_OnGather, CallFunc_GetOwningActorFromActorInfo_ReturnValue_1) == 0x000088, "Member 'GA_LoopableEvent_Base_C_OnGather::CallFunc_GetOwningActorFromActorInfo_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_LoopableEvent_Base_C_OnGather, CallFunc_GetGASComponentForTargetActor_GASComponent) == 0x000090, "Member 'GA_LoopableEvent_Base_C_OnGather::CallFunc_GetGASComponentForTargetActor_GASComponent' has a wrong offset!");
static_assert(offsetof(GA_LoopableEvent_Base_C_OnGather, CallFunc_GetOwningActorFromActorInfo_ReturnValue_2) == 0x000098, "Member 'GA_LoopableEvent_Base_C_OnGather::CallFunc_GetOwningActorFromActorInfo_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(GA_LoopableEvent_Base_C_OnGather, K2Node_MakeStruct_VitalsChangeContext) == 0x0000A0, "Member 'GA_LoopableEvent_Base_C_OnGather::K2Node_MakeStruct_VitalsChangeContext' has a wrong offset!");
static_assert(offsetof(GA_LoopableEvent_Base_C_OnGather, K2Node_Select_Default) == 0x0000D0, "Member 'GA_LoopableEvent_Base_C_OnGather::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(GA_LoopableEvent_Base_C_OnGather, K2Node_MakeStruct_VitalsChange) == 0x0000D8, "Member 'GA_LoopableEvent_Base_C_OnGather::K2Node_MakeStruct_VitalsChange' has a wrong offset!");
static_assert(offsetof(GA_LoopableEvent_Base_C_OnGather, CallFunc_BP_ApplyGameplayEffectToTarget_ReturnValue) == 0x000118, "Member 'GA_LoopableEvent_Base_C_OnGather::CallFunc_BP_ApplyGameplayEffectToTarget_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_LoopableEvent_Base_C_OnGather, CallFunc_FilterChange_ReturnValue) == 0x000120, "Member 'GA_LoopableEvent_Base_C_OnGather::CallFunc_FilterChange_ReturnValue' has a wrong offset!");

// Function GA_LoopableEvent_Base.GA_LoopableEvent_Base_C.OnGatherClient
// 0x0008 (0x0008 - 0x0000)
struct GA_LoopableEvent_Base_C_OnGatherClient final
{
public:
	class AActor*                                 Actor;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_LoopableEvent_Base_C_OnGatherClient) == 0x000008, "Wrong alignment on GA_LoopableEvent_Base_C_OnGatherClient");
static_assert(sizeof(GA_LoopableEvent_Base_C_OnGatherClient) == 0x000008, "Wrong size on GA_LoopableEvent_Base_C_OnGatherClient");
static_assert(offsetof(GA_LoopableEvent_Base_C_OnGatherClient, Actor) == 0x000000, "Member 'GA_LoopableEvent_Base_C_OnGatherClient::Actor' has a wrong offset!");

// Function GA_LoopableEvent_Base.GA_LoopableEvent_Base_C.OnGatherServer
// 0x0008 (0x0008 - 0x0000)
struct GA_LoopableEvent_Base_C_OnGatherServer final
{
public:
	class AActor*                                 Actor;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_LoopableEvent_Base_C_OnGatherServer) == 0x000008, "Wrong alignment on GA_LoopableEvent_Base_C_OnGatherServer");
static_assert(sizeof(GA_LoopableEvent_Base_C_OnGatherServer) == 0x000008, "Wrong size on GA_LoopableEvent_Base_C_OnGatherServer");
static_assert(offsetof(GA_LoopableEvent_Base_C_OnGatherServer, Actor) == 0x000000, "Member 'GA_LoopableEvent_Base_C_OnGatherServer::Actor' has a wrong offset!");

// Function GA_LoopableEvent_Base.GA_LoopableEvent_Base_C.OnInterrupted_61604B204A52FE55D07E178D4DC2F376
// 0x00B8 (0x00B8 - 0x0000)
struct GA_LoopableEvent_Base_C_OnInterrupted_61604B204A52FE55D07E178D4DC2F376 final
{
public:
	struct FGameplayTag                           EventTag;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	struct FGameplayEventData                     EventData;                                         // 0x0008(0x00B0)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(GA_LoopableEvent_Base_C_OnInterrupted_61604B204A52FE55D07E178D4DC2F376) == 0x000008, "Wrong alignment on GA_LoopableEvent_Base_C_OnInterrupted_61604B204A52FE55D07E178D4DC2F376");
static_assert(sizeof(GA_LoopableEvent_Base_C_OnInterrupted_61604B204A52FE55D07E178D4DC2F376) == 0x0000B8, "Wrong size on GA_LoopableEvent_Base_C_OnInterrupted_61604B204A52FE55D07E178D4DC2F376");
static_assert(offsetof(GA_LoopableEvent_Base_C_OnInterrupted_61604B204A52FE55D07E178D4DC2F376, EventTag) == 0x000000, "Member 'GA_LoopableEvent_Base_C_OnInterrupted_61604B204A52FE55D07E178D4DC2F376::EventTag' has a wrong offset!");
static_assert(offsetof(GA_LoopableEvent_Base_C_OnInterrupted_61604B204A52FE55D07E178D4DC2F376, EventData) == 0x000008, "Member 'GA_LoopableEvent_Base_C_OnInterrupted_61604B204A52FE55D07E178D4DC2F376::EventData' has a wrong offset!");

// Function GA_LoopableEvent_Base.GA_LoopableEvent_Base_C.OnInterrupted_77447BC74D3381190AD07DB52A7C9C1E
// 0x00B8 (0x00B8 - 0x0000)
struct GA_LoopableEvent_Base_C_OnInterrupted_77447BC74D3381190AD07DB52A7C9C1E final
{
public:
	struct FGameplayTag                           EventTag;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	struct FGameplayEventData                     EventData;                                         // 0x0008(0x00B0)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(GA_LoopableEvent_Base_C_OnInterrupted_77447BC74D3381190AD07DB52A7C9C1E) == 0x000008, "Wrong alignment on GA_LoopableEvent_Base_C_OnInterrupted_77447BC74D3381190AD07DB52A7C9C1E");
static_assert(sizeof(GA_LoopableEvent_Base_C_OnInterrupted_77447BC74D3381190AD07DB52A7C9C1E) == 0x0000B8, "Wrong size on GA_LoopableEvent_Base_C_OnInterrupted_77447BC74D3381190AD07DB52A7C9C1E");
static_assert(offsetof(GA_LoopableEvent_Base_C_OnInterrupted_77447BC74D3381190AD07DB52A7C9C1E, EventTag) == 0x000000, "Member 'GA_LoopableEvent_Base_C_OnInterrupted_77447BC74D3381190AD07DB52A7C9C1E::EventTag' has a wrong offset!");
static_assert(offsetof(GA_LoopableEvent_Base_C_OnInterrupted_77447BC74D3381190AD07DB52A7C9C1E, EventData) == 0x000008, "Member 'GA_LoopableEvent_Base_C_OnInterrupted_77447BC74D3381190AD07DB52A7C9C1E::EventData' has a wrong offset!");

// Function GA_LoopableEvent_Base.GA_LoopableEvent_Base_C.OnInterrupted_87B0B7C040C0EF4C9F67D9AD4E32ED36
// 0x00B8 (0x00B8 - 0x0000)
struct GA_LoopableEvent_Base_C_OnInterrupted_87B0B7C040C0EF4C9F67D9AD4E32ED36 final
{
public:
	struct FGameplayTag                           EventTag;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	struct FGameplayEventData                     EventData;                                         // 0x0008(0x00B0)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(GA_LoopableEvent_Base_C_OnInterrupted_87B0B7C040C0EF4C9F67D9AD4E32ED36) == 0x000008, "Wrong alignment on GA_LoopableEvent_Base_C_OnInterrupted_87B0B7C040C0EF4C9F67D9AD4E32ED36");
static_assert(sizeof(GA_LoopableEvent_Base_C_OnInterrupted_87B0B7C040C0EF4C9F67D9AD4E32ED36) == 0x0000B8, "Wrong size on GA_LoopableEvent_Base_C_OnInterrupted_87B0B7C040C0EF4C9F67D9AD4E32ED36");
static_assert(offsetof(GA_LoopableEvent_Base_C_OnInterrupted_87B0B7C040C0EF4C9F67D9AD4E32ED36, EventTag) == 0x000000, "Member 'GA_LoopableEvent_Base_C_OnInterrupted_87B0B7C040C0EF4C9F67D9AD4E32ED36::EventTag' has a wrong offset!");
static_assert(offsetof(GA_LoopableEvent_Base_C_OnInterrupted_87B0B7C040C0EF4C9F67D9AD4E32ED36, EventData) == 0x000008, "Member 'GA_LoopableEvent_Base_C_OnInterrupted_87B0B7C040C0EF4C9F67D9AD4E32ED36::EventData' has a wrong offset!");

// Function GA_LoopableEvent_Base.GA_LoopableEvent_Base_C.OnLoopBegin
// 0x000C (0x000C - 0x0000)
struct GA_LoopableEvent_Base_C_OnLoopBegin final
{
public:
	class FName                                   Param_AnimationName;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsAbilityIntroTrigger;                             // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_LoopableEvent_Base_C_OnLoopBegin) == 0x000004, "Wrong alignment on GA_LoopableEvent_Base_C_OnLoopBegin");
static_assert(sizeof(GA_LoopableEvent_Base_C_OnLoopBegin) == 0x00000C, "Wrong size on GA_LoopableEvent_Base_C_OnLoopBegin");
static_assert(offsetof(GA_LoopableEvent_Base_C_OnLoopBegin, Param_AnimationName) == 0x000000, "Member 'GA_LoopableEvent_Base_C_OnLoopBegin::Param_AnimationName' has a wrong offset!");
static_assert(offsetof(GA_LoopableEvent_Base_C_OnLoopBegin, IsAbilityIntroTrigger) == 0x000008, "Member 'GA_LoopableEvent_Base_C_OnLoopBegin::IsAbilityIntroTrigger' has a wrong offset!");

// Function GA_LoopableEvent_Base.GA_LoopableEvent_Base_C.OnOutroBegin
// 0x0020 (0x0020 - 0x0000)
struct GA_LoopableEvent_Base_C_OnOutroBegin final
{
public:
	class AActor*                                 CallFunc_GetOwningActorFromActorInfo_ReturnValue;  // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AValeriaCharacter*                      K2Node_DynamicCast_AsValeria_Character;            // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4406[0x7];                                     // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UValeriaCharacterMoveComponent*         CallFunc_GetValeriaCharacterMovementComponent_ReturnValue; // 0x0018(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_LoopableEvent_Base_C_OnOutroBegin) == 0x000008, "Wrong alignment on GA_LoopableEvent_Base_C_OnOutroBegin");
static_assert(sizeof(GA_LoopableEvent_Base_C_OnOutroBegin) == 0x000020, "Wrong size on GA_LoopableEvent_Base_C_OnOutroBegin");
static_assert(offsetof(GA_LoopableEvent_Base_C_OnOutroBegin, CallFunc_GetOwningActorFromActorInfo_ReturnValue) == 0x000000, "Member 'GA_LoopableEvent_Base_C_OnOutroBegin::CallFunc_GetOwningActorFromActorInfo_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_LoopableEvent_Base_C_OnOutroBegin, K2Node_DynamicCast_AsValeria_Character) == 0x000008, "Member 'GA_LoopableEvent_Base_C_OnOutroBegin::K2Node_DynamicCast_AsValeria_Character' has a wrong offset!");
static_assert(offsetof(GA_LoopableEvent_Base_C_OnOutroBegin, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'GA_LoopableEvent_Base_C_OnOutroBegin::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(GA_LoopableEvent_Base_C_OnOutroBegin, CallFunc_GetValeriaCharacterMovementComponent_ReturnValue) == 0x000018, "Member 'GA_LoopableEvent_Base_C_OnOutroBegin::CallFunc_GetValeriaCharacterMovementComponent_ReturnValue' has a wrong offset!");

// Function GA_LoopableEvent_Base.GA_LoopableEvent_Base_C.SetAbilityLockedIn
// 0x0001 (0x0001 - 0x0000)
struct GA_LoopableEvent_Base_C_SetAbilityLockedIn final
{
public:
	bool                                          Param_LockedIn;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_LoopableEvent_Base_C_SetAbilityLockedIn) == 0x000001, "Wrong alignment on GA_LoopableEvent_Base_C_SetAbilityLockedIn");
static_assert(sizeof(GA_LoopableEvent_Base_C_SetAbilityLockedIn) == 0x000001, "Wrong size on GA_LoopableEvent_Base_C_SetAbilityLockedIn");
static_assert(offsetof(GA_LoopableEvent_Base_C_SetAbilityLockedIn, Param_LockedIn) == 0x000000, "Member 'GA_LoopableEvent_Base_C_SetAbilityLockedIn::Param_LockedIn' has a wrong offset!");

// Function GA_LoopableEvent_Base.GA_LoopableEvent_Base_C.SetMovementBlock
// 0x000C (0x000C - 0x0000)
struct GA_LoopableEvent_Base_C_SetMovementBlock final
{
public:
	bool                                          bLock;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4407[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FActiveGameplayEffectHandle            CallFunc_BP_ApplyGameplayEffectToOwner_ReturnValue; // 0x0004(0x0008)(NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_LoopableEvent_Base_C_SetMovementBlock) == 0x000004, "Wrong alignment on GA_LoopableEvent_Base_C_SetMovementBlock");
static_assert(sizeof(GA_LoopableEvent_Base_C_SetMovementBlock) == 0x00000C, "Wrong size on GA_LoopableEvent_Base_C_SetMovementBlock");
static_assert(offsetof(GA_LoopableEvent_Base_C_SetMovementBlock, bLock) == 0x000000, "Member 'GA_LoopableEvent_Base_C_SetMovementBlock::bLock' has a wrong offset!");
static_assert(offsetof(GA_LoopableEvent_Base_C_SetMovementBlock, CallFunc_BP_ApplyGameplayEffectToOwner_ReturnValue) == 0x000004, "Member 'GA_LoopableEvent_Base_C_SetMovementBlock::CallFunc_BP_ApplyGameplayEffectToOwner_ReturnValue' has a wrong offset!");

// Function GA_LoopableEvent_Base.GA_LoopableEvent_Base_C.ShakeCamera
// 0x0018 (0x0018 - 0x0000)
struct GA_LoopableEvent_Base_C_ShakeCamera final
{
public:
	class AValeriaCharacter*                      CallFunc_GetValeriaCharacterFromActorInfo_ReturnValue; // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AValeriaPlayerController*               CallFunc_GetValeriaPlayerController_ReturnValue;   // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_ClientStartCameraShake_Scale_ImplicitCast; // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_LoopableEvent_Base_C_ShakeCamera) == 0x000008, "Wrong alignment on GA_LoopableEvent_Base_C_ShakeCamera");
static_assert(sizeof(GA_LoopableEvent_Base_C_ShakeCamera) == 0x000018, "Wrong size on GA_LoopableEvent_Base_C_ShakeCamera");
static_assert(offsetof(GA_LoopableEvent_Base_C_ShakeCamera, CallFunc_GetValeriaCharacterFromActorInfo_ReturnValue) == 0x000000, "Member 'GA_LoopableEvent_Base_C_ShakeCamera::CallFunc_GetValeriaCharacterFromActorInfo_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_LoopableEvent_Base_C_ShakeCamera, CallFunc_GetValeriaPlayerController_ReturnValue) == 0x000008, "Member 'GA_LoopableEvent_Base_C_ShakeCamera::CallFunc_GetValeriaPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_LoopableEvent_Base_C_ShakeCamera, CallFunc_ClientStartCameraShake_Scale_ImplicitCast) == 0x000010, "Member 'GA_LoopableEvent_Base_C_ShakeCamera::CallFunc_ClientStartCameraShake_Scale_ImplicitCast' has a wrong offset!");

// Function GA_LoopableEvent_Base.GA_LoopableEvent_Base_C.ShouldLoop
// 0x0004 (0x0004 - 0x0000)
struct GA_LoopableEvent_Base_C_ShouldLoop final
{
public:
	bool                                          Param_ShouldLoop;                                  // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_LoopableEvent_Base_C_ShouldLoop) == 0x000001, "Wrong alignment on GA_LoopableEvent_Base_C_ShouldLoop");
static_assert(sizeof(GA_LoopableEvent_Base_C_ShouldLoop) == 0x000004, "Wrong size on GA_LoopableEvent_Base_C_ShouldLoop");
static_assert(offsetof(GA_LoopableEvent_Base_C_ShouldLoop, Param_ShouldLoop) == 0x000000, "Member 'GA_LoopableEvent_Base_C_ShouldLoop::Param_ShouldLoop' has a wrong offset!");
static_assert(offsetof(GA_LoopableEvent_Base_C_ShouldLoop, CallFunc_BooleanAND_ReturnValue) == 0x000001, "Member 'GA_LoopableEvent_Base_C_ShouldLoop::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_LoopableEvent_Base_C_ShouldLoop, CallFunc_BooleanOR_ReturnValue) == 0x000002, "Member 'GA_LoopableEvent_Base_C_ShouldLoop::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_LoopableEvent_Base_C_ShouldLoop, CallFunc_BooleanAND_ReturnValue_1) == 0x000003, "Member 'GA_LoopableEvent_Base_C_ShouldLoop::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");

// Function GA_LoopableEvent_Base.GA_LoopableEvent_Base_C.TriggerGather
// 0x0028 (0x0028 - 0x0000)
struct GA_LoopableEvent_Base_C_TriggerGather final
{
public:
	class AActor*                                 TargetActor;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 LocalTargetActor;                                  // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_HasAuthority_ReturnValue;              // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4408[0x7];                                     // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetTargetActor_Actor;                     // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_LoopableEvent_Base_C_TriggerGather) == 0x000008, "Wrong alignment on GA_LoopableEvent_Base_C_TriggerGather");
static_assert(sizeof(GA_LoopableEvent_Base_C_TriggerGather) == 0x000028, "Wrong size on GA_LoopableEvent_Base_C_TriggerGather");
static_assert(offsetof(GA_LoopableEvent_Base_C_TriggerGather, TargetActor) == 0x000000, "Member 'GA_LoopableEvent_Base_C_TriggerGather::TargetActor' has a wrong offset!");
static_assert(offsetof(GA_LoopableEvent_Base_C_TriggerGather, LocalTargetActor) == 0x000008, "Member 'GA_LoopableEvent_Base_C_TriggerGather::LocalTargetActor' has a wrong offset!");
static_assert(offsetof(GA_LoopableEvent_Base_C_TriggerGather, CallFunc_K2_HasAuthority_ReturnValue) == 0x000010, "Member 'GA_LoopableEvent_Base_C_TriggerGather::CallFunc_K2_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_LoopableEvent_Base_C_TriggerGather, CallFunc_GetTargetActor_Actor) == 0x000018, "Member 'GA_LoopableEvent_Base_C_TriggerGather::CallFunc_GetTargetActor_Actor' has a wrong offset!");
static_assert(offsetof(GA_LoopableEvent_Base_C_TriggerGather, CallFunc_IsValid_ReturnValue) == 0x000020, "Member 'GA_LoopableEvent_Base_C_TriggerGather::CallFunc_IsValid_ReturnValue' has a wrong offset!");

}

