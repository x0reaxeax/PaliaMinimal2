#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_EmoteCollection_Circular

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "EnhancedInput_structs.hpp"
#include "Palia_structs.hpp"
#include "S6UICore_structs.hpp"


namespace SDK::Params
{

// Function WBP_EmoteCollection_Circular.WBP_EmoteCollection_Circular_C.BndEvt__WBP_EmoteCollection_CM_CustomNavigationGroup_EmoteList_K2Node_ComponentBoundEvent_4_OnCustomNavigationGroupInitialized__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct WBP_EmoteCollection_Circular_C_BndEvt__WBP_EmoteCollection_CM_CustomNavigationGroup_EmoteList_K2Node_ComponentBoundEvent_4_OnCustomNavigationGroupInitialized__DelegateSignature final
{
public:
	const class US6UI_CustomNavigationGroup*      NavGroup;                                          // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_EmoteCollection_Circular_C_BndEvt__WBP_EmoteCollection_CM_CustomNavigationGroup_EmoteList_K2Node_ComponentBoundEvent_4_OnCustomNavigationGroupInitialized__DelegateSignature) == 0x000008, "Wrong alignment on WBP_EmoteCollection_Circular_C_BndEvt__WBP_EmoteCollection_CM_CustomNavigationGroup_EmoteList_K2Node_ComponentBoundEvent_4_OnCustomNavigationGroupInitialized__DelegateSignature");
static_assert(sizeof(WBP_EmoteCollection_Circular_C_BndEvt__WBP_EmoteCollection_CM_CustomNavigationGroup_EmoteList_K2Node_ComponentBoundEvent_4_OnCustomNavigationGroupInitialized__DelegateSignature) == 0x000008, "Wrong size on WBP_EmoteCollection_Circular_C_BndEvt__WBP_EmoteCollection_CM_CustomNavigationGroup_EmoteList_K2Node_ComponentBoundEvent_4_OnCustomNavigationGroupInitialized__DelegateSignature");
static_assert(offsetof(WBP_EmoteCollection_Circular_C_BndEvt__WBP_EmoteCollection_CM_CustomNavigationGroup_EmoteList_K2Node_ComponentBoundEvent_4_OnCustomNavigationGroupInitialized__DelegateSignature, NavGroup) == 0x000000, "Member 'WBP_EmoteCollection_Circular_C_BndEvt__WBP_EmoteCollection_CM_CustomNavigationGroup_EmoteList_K2Node_ComponentBoundEvent_4_OnCustomNavigationGroupInitialized__DelegateSignature::NavGroup' has a wrong offset!");

// Function WBP_EmoteCollection_Circular.WBP_EmoteCollection_Circular_C.BndEvt__WBP_EmoteCollection_CM_CustomNavigationGroup_EmoteWheel_K2Node_ComponentBoundEvent_3_OnCustomNavigationGroupInitialized__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct WBP_EmoteCollection_Circular_C_BndEvt__WBP_EmoteCollection_CM_CustomNavigationGroup_EmoteWheel_K2Node_ComponentBoundEvent_3_OnCustomNavigationGroupInitialized__DelegateSignature final
{
public:
	const class US6UI_CustomNavigationGroup*      NavGroup;                                          // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_EmoteCollection_Circular_C_BndEvt__WBP_EmoteCollection_CM_CustomNavigationGroup_EmoteWheel_K2Node_ComponentBoundEvent_3_OnCustomNavigationGroupInitialized__DelegateSignature) == 0x000008, "Wrong alignment on WBP_EmoteCollection_Circular_C_BndEvt__WBP_EmoteCollection_CM_CustomNavigationGroup_EmoteWheel_K2Node_ComponentBoundEvent_3_OnCustomNavigationGroupInitialized__DelegateSignature");
static_assert(sizeof(WBP_EmoteCollection_Circular_C_BndEvt__WBP_EmoteCollection_CM_CustomNavigationGroup_EmoteWheel_K2Node_ComponentBoundEvent_3_OnCustomNavigationGroupInitialized__DelegateSignature) == 0x000008, "Wrong size on WBP_EmoteCollection_Circular_C_BndEvt__WBP_EmoteCollection_CM_CustomNavigationGroup_EmoteWheel_K2Node_ComponentBoundEvent_3_OnCustomNavigationGroupInitialized__DelegateSignature");
static_assert(offsetof(WBP_EmoteCollection_Circular_C_BndEvt__WBP_EmoteCollection_CM_CustomNavigationGroup_EmoteWheel_K2Node_ComponentBoundEvent_3_OnCustomNavigationGroupInitialized__DelegateSignature, NavGroup) == 0x000000, "Member 'WBP_EmoteCollection_Circular_C_BndEvt__WBP_EmoteCollection_CM_CustomNavigationGroup_EmoteWheel_K2Node_ComponentBoundEvent_3_OnCustomNavigationGroupInitialized__DelegateSignature::NavGroup' has a wrong offset!");

// Function WBP_EmoteCollection_Circular.WBP_EmoteCollection_Circular_C.BndEvt__WBP_EmoteCollection_CM_TV_Styled_EmoteCollection_K2Node_ComponentBoundEvent_1_OnListEntryInitializedDynamic__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct WBP_EmoteCollection_Circular_C_BndEvt__WBP_EmoteCollection_CM_TV_Styled_EmoteCollection_K2Node_ComponentBoundEvent_1_OnListEntryInitializedDynamic__DelegateSignature final
{
public:
	class UObject*                                Item;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UUserWidget*                            Widget;                                            // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_EmoteCollection_Circular_C_BndEvt__WBP_EmoteCollection_CM_TV_Styled_EmoteCollection_K2Node_ComponentBoundEvent_1_OnListEntryInitializedDynamic__DelegateSignature) == 0x000008, "Wrong alignment on WBP_EmoteCollection_Circular_C_BndEvt__WBP_EmoteCollection_CM_TV_Styled_EmoteCollection_K2Node_ComponentBoundEvent_1_OnListEntryInitializedDynamic__DelegateSignature");
static_assert(sizeof(WBP_EmoteCollection_Circular_C_BndEvt__WBP_EmoteCollection_CM_TV_Styled_EmoteCollection_K2Node_ComponentBoundEvent_1_OnListEntryInitializedDynamic__DelegateSignature) == 0x000010, "Wrong size on WBP_EmoteCollection_Circular_C_BndEvt__WBP_EmoteCollection_CM_TV_Styled_EmoteCollection_K2Node_ComponentBoundEvent_1_OnListEntryInitializedDynamic__DelegateSignature");
static_assert(offsetof(WBP_EmoteCollection_Circular_C_BndEvt__WBP_EmoteCollection_CM_TV_Styled_EmoteCollection_K2Node_ComponentBoundEvent_1_OnListEntryInitializedDynamic__DelegateSignature, Item) == 0x000000, "Member 'WBP_EmoteCollection_Circular_C_BndEvt__WBP_EmoteCollection_CM_TV_Styled_EmoteCollection_K2Node_ComponentBoundEvent_1_OnListEntryInitializedDynamic__DelegateSignature::Item' has a wrong offset!");
static_assert(offsetof(WBP_EmoteCollection_Circular_C_BndEvt__WBP_EmoteCollection_CM_TV_Styled_EmoteCollection_K2Node_ComponentBoundEvent_1_OnListEntryInitializedDynamic__DelegateSignature, Widget) == 0x000008, "Member 'WBP_EmoteCollection_Circular_C_BndEvt__WBP_EmoteCollection_CM_TV_Styled_EmoteCollection_K2Node_ComponentBoundEvent_1_OnListEntryInitializedDynamic__DelegateSignature::Widget' has a wrong offset!");

// Function WBP_EmoteCollection_Circular.WBP_EmoteCollection_Circular_C.BndEvt__WBP_EmoteCollection_CM_TV_Styled_EmoteCollection_K2Node_ComponentBoundEvent_2_OnListEntryReleasedDynamic__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct WBP_EmoteCollection_Circular_C_BndEvt__WBP_EmoteCollection_CM_TV_Styled_EmoteCollection_K2Node_ComponentBoundEvent_2_OnListEntryReleasedDynamic__DelegateSignature final
{
public:
	class UUserWidget*                            Widget;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_EmoteCollection_Circular_C_BndEvt__WBP_EmoteCollection_CM_TV_Styled_EmoteCollection_K2Node_ComponentBoundEvent_2_OnListEntryReleasedDynamic__DelegateSignature) == 0x000008, "Wrong alignment on WBP_EmoteCollection_Circular_C_BndEvt__WBP_EmoteCollection_CM_TV_Styled_EmoteCollection_K2Node_ComponentBoundEvent_2_OnListEntryReleasedDynamic__DelegateSignature");
static_assert(sizeof(WBP_EmoteCollection_Circular_C_BndEvt__WBP_EmoteCollection_CM_TV_Styled_EmoteCollection_K2Node_ComponentBoundEvent_2_OnListEntryReleasedDynamic__DelegateSignature) == 0x000008, "Wrong size on WBP_EmoteCollection_Circular_C_BndEvt__WBP_EmoteCollection_CM_TV_Styled_EmoteCollection_K2Node_ComponentBoundEvent_2_OnListEntryReleasedDynamic__DelegateSignature");
static_assert(offsetof(WBP_EmoteCollection_Circular_C_BndEvt__WBP_EmoteCollection_CM_TV_Styled_EmoteCollection_K2Node_ComponentBoundEvent_2_OnListEntryReleasedDynamic__DelegateSignature, Widget) == 0x000000, "Member 'WBP_EmoteCollection_Circular_C_BndEvt__WBP_EmoteCollection_CM_TV_Styled_EmoteCollection_K2Node_ComponentBoundEvent_2_OnListEntryReleasedDynamic__DelegateSignature::Widget' has a wrong offset!");

// Function WBP_EmoteCollection_Circular.WBP_EmoteCollection_Circular_C.Cancel Update Emote
// 0x0048 (0x0048 - 0x0000)
struct WBP_EmoteCollection_Circular_C_Cancel_Update_Emote final
{
public:
	bool                                          bCancel;                                           // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_59C2[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUserWidget*                            CallFunc_Get_Emote_Widget_Selected_Emote_Widget;   // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UWBP_EmoteEntry_CM_C*                   K2Node_DynamicCast_AsWBP_Emote_Entry_CM;           // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_59C3[0x7];                                     // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IUserObjectListEntry>  CallFunc_GetListItemObject_UserObjectListEntry_CastInput; // 0x0020(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	class UObject*                                CallFunc_GetListItemObject_ReturnValue;            // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UWBP_EmoteWheelChoice_CM_C*             K2Node_DynamicCast_AsWBP_Emote_Wheel_Choice_CM;    // 0x0038(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_EmoteCollection_Circular_C_Cancel_Update_Emote) == 0x000008, "Wrong alignment on WBP_EmoteCollection_Circular_C_Cancel_Update_Emote");
static_assert(sizeof(WBP_EmoteCollection_Circular_C_Cancel_Update_Emote) == 0x000048, "Wrong size on WBP_EmoteCollection_Circular_C_Cancel_Update_Emote");
static_assert(offsetof(WBP_EmoteCollection_Circular_C_Cancel_Update_Emote, bCancel) == 0x000000, "Member 'WBP_EmoteCollection_Circular_C_Cancel_Update_Emote::bCancel' has a wrong offset!");
static_assert(offsetof(WBP_EmoteCollection_Circular_C_Cancel_Update_Emote, CallFunc_Get_Emote_Widget_Selected_Emote_Widget) == 0x000008, "Member 'WBP_EmoteCollection_Circular_C_Cancel_Update_Emote::CallFunc_Get_Emote_Widget_Selected_Emote_Widget' has a wrong offset!");
static_assert(offsetof(WBP_EmoteCollection_Circular_C_Cancel_Update_Emote, K2Node_DynamicCast_AsWBP_Emote_Entry_CM) == 0x000010, "Member 'WBP_EmoteCollection_Circular_C_Cancel_Update_Emote::K2Node_DynamicCast_AsWBP_Emote_Entry_CM' has a wrong offset!");
static_assert(offsetof(WBP_EmoteCollection_Circular_C_Cancel_Update_Emote, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'WBP_EmoteCollection_Circular_C_Cancel_Update_Emote::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_EmoteCollection_Circular_C_Cancel_Update_Emote, CallFunc_GetListItemObject_UserObjectListEntry_CastInput) == 0x000020, "Member 'WBP_EmoteCollection_Circular_C_Cancel_Update_Emote::CallFunc_GetListItemObject_UserObjectListEntry_CastInput' has a wrong offset!");
static_assert(offsetof(WBP_EmoteCollection_Circular_C_Cancel_Update_Emote, CallFunc_GetListItemObject_ReturnValue) == 0x000030, "Member 'WBP_EmoteCollection_Circular_C_Cancel_Update_Emote::CallFunc_GetListItemObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_EmoteCollection_Circular_C_Cancel_Update_Emote, K2Node_DynamicCast_AsWBP_Emote_Wheel_Choice_CM) == 0x000038, "Member 'WBP_EmoteCollection_Circular_C_Cancel_Update_Emote::K2Node_DynamicCast_AsWBP_Emote_Wheel_Choice_CM' has a wrong offset!");
static_assert(offsetof(WBP_EmoteCollection_Circular_C_Cancel_Update_Emote, K2Node_DynamicCast_bSuccess_1) == 0x000040, "Member 'WBP_EmoteCollection_Circular_C_Cancel_Update_Emote::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(WBP_EmoteCollection_Circular_C_Cancel_Update_Emote, CallFunc_IsValid_ReturnValue) == 0x000041, "Member 'WBP_EmoteCollection_Circular_C_Cancel_Update_Emote::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function WBP_EmoteCollection_Circular.WBP_EmoteCollection_Circular_C.Change Updating Wheel Choice State
// 0x0003 (0x0003 - 0x0000)
struct WBP_EmoteCollection_Circular_C_Change_Updating_Wheel_Choice_State final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanXOR_ReturnValue;                   // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_EmoteCollection_Circular_C_Change_Updating_Wheel_Choice_State) == 0x000001, "Wrong alignment on WBP_EmoteCollection_Circular_C_Change_Updating_Wheel_Choice_State");
static_assert(sizeof(WBP_EmoteCollection_Circular_C_Change_Updating_Wheel_Choice_State) == 0x000003, "Wrong size on WBP_EmoteCollection_Circular_C_Change_Updating_Wheel_Choice_State");
static_assert(offsetof(WBP_EmoteCollection_Circular_C_Change_Updating_Wheel_Choice_State, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'WBP_EmoteCollection_Circular_C_Change_Updating_Wheel_Choice_State::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_EmoteCollection_Circular_C_Change_Updating_Wheel_Choice_State, CallFunc_IsValid_ReturnValue_1) == 0x000001, "Member 'WBP_EmoteCollection_Circular_C_Change_Updating_Wheel_Choice_State::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_EmoteCollection_Circular_C_Change_Updating_Wheel_Choice_State, CallFunc_BooleanXOR_ReturnValue) == 0x000002, "Member 'WBP_EmoteCollection_Circular_C_Change_Updating_Wheel_Choice_State::CallFunc_BooleanXOR_ReturnValue' has a wrong offset!");

// Function WBP_EmoteCollection_Circular.WBP_EmoteCollection_Circular_C.ClearAssignedEmote
// 0x0020 (0x0020 - 0x0000)
struct WBP_EmoteCollection_Circular_C_ClearAssignedEmote final
{
public:
	class UWBP_EmoteWheelChoice_CM_C*             Emote_Wheel_Choice;                                // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_AkEventGlobal_ReturnValue;                // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_59C4[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UValeriaEmoteComponent*                 CallFunc_GetEmoteComponentFN_EmoteComponent;       // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Client_ClearAssignedEmote_ReturnValue;    // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_EmoteCollection_Circular_C_ClearAssignedEmote) == 0x000008, "Wrong alignment on WBP_EmoteCollection_Circular_C_ClearAssignedEmote");
static_assert(sizeof(WBP_EmoteCollection_Circular_C_ClearAssignedEmote) == 0x000020, "Wrong size on WBP_EmoteCollection_Circular_C_ClearAssignedEmote");
static_assert(offsetof(WBP_EmoteCollection_Circular_C_ClearAssignedEmote, Emote_Wheel_Choice) == 0x000000, "Member 'WBP_EmoteCollection_Circular_C_ClearAssignedEmote::Emote_Wheel_Choice' has a wrong offset!");
static_assert(offsetof(WBP_EmoteCollection_Circular_C_ClearAssignedEmote, CallFunc_AkEventGlobal_ReturnValue) == 0x000008, "Member 'WBP_EmoteCollection_Circular_C_ClearAssignedEmote::CallFunc_AkEventGlobal_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_EmoteCollection_Circular_C_ClearAssignedEmote, CallFunc_GetEmoteComponentFN_EmoteComponent) == 0x000010, "Member 'WBP_EmoteCollection_Circular_C_ClearAssignedEmote::CallFunc_GetEmoteComponentFN_EmoteComponent' has a wrong offset!");
static_assert(offsetof(WBP_EmoteCollection_Circular_C_ClearAssignedEmote, CallFunc_Client_ClearAssignedEmote_ReturnValue) == 0x000018, "Member 'WBP_EmoteCollection_Circular_C_ClearAssignedEmote::CallFunc_Client_ClearAssignedEmote_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_EmoteCollection_Circular_C_ClearAssignedEmote, CallFunc_IsValid_ReturnValue) == 0x000019, "Member 'WBP_EmoteCollection_Circular_C_ClearAssignedEmote::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function WBP_EmoteCollection_Circular.WBP_EmoteCollection_Circular_C.CollectionEntryClicked
// 0x0008 (0x0008 - 0x0000)
struct WBP_EmoteCollection_Circular_C_CollectionEntryClicked final
{
public:
	class UWBP_EmoteEntry_CM_C*                   CollectionEntry;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_EmoteCollection_Circular_C_CollectionEntryClicked) == 0x000008, "Wrong alignment on WBP_EmoteCollection_Circular_C_CollectionEntryClicked");
static_assert(sizeof(WBP_EmoteCollection_Circular_C_CollectionEntryClicked) == 0x000008, "Wrong size on WBP_EmoteCollection_Circular_C_CollectionEntryClicked");
static_assert(offsetof(WBP_EmoteCollection_Circular_C_CollectionEntryClicked, CollectionEntry) == 0x000000, "Member 'WBP_EmoteCollection_Circular_C_CollectionEntryClicked::CollectionEntry' has a wrong offset!");

// Function WBP_EmoteCollection_Circular.WBP_EmoteCollection_Circular_C.ExecuteUbergraph_WBP_EmoteCollection_Circular
// 0x0528 (0x0528 - 0x0000)
struct WBP_EmoteCollection_Circular_C_ExecuteUbergraph_WBP_EmoteCollection_Circular final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_59C5[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FInputActionValue                      K2Node_EnhancedInputActionEvent_ActionValue_2;     // 0x0008(0x0020)(NoDestructor)
	float                                         K2Node_EnhancedInputActionEvent_ElapsedTime_2;     // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_EnhancedInputActionEvent_TriggeredTime_2;   // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	const class UInputAction*                     K2Node_EnhancedInputActionEvent_SourceAction_2;    // 0x0030(0x0008)(ConstParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UInputAction*                           Temp_object_Variable;                              // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Conv_InputActionValueToBool_ReturnValue;  // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_59C6[0x7];                                     // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Temp_real_Variable;                                // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_1;                              // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_0;                              // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_1_0;                            // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_59C7[0x7];                                     // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FInputActionValue                      K2Node_EnhancedInputActionEvent_ActionValue_1;     // 0x0070(0x0020)(NoDestructor)
	float                                         K2Node_EnhancedInputActionEvent_ElapsedTime_1;     // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_EnhancedInputActionEvent_TriggeredTime_1;   // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	const class UInputAction*                     K2Node_EnhancedInputActionEvent_SourceAction_1;    // 0x0098(0x0008)(ConstParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_InputActionValueToAxis1D_ReturnValue; // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UInputAction*                           Temp_object_Variable_1;                            // 0x00A8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_2;                              // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_2_0;                            // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_3;                              // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_4;                              // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_3_0;                            // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FInputActionValue                      K2Node_EnhancedInputActionEvent_ActionValue;       // 0x00D8(0x0020)(NoDestructor)
	float                                         K2Node_EnhancedInputActionEvent_ElapsedTime;       // 0x00F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_EnhancedInputActionEvent_TriggeredTime;     // 0x00FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	const class UInputAction*                     K2Node_EnhancedInputActionEvent_SourceAction;      // 0x0100(0x0008)(ConstParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UInputAction*                           Temp_object_Variable_2;                            // 0x0108(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Conv_InputActionValueToBool_ReturnValue_1; // 0x0110(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_59C8[0x7];                                     // 0x0111(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Temp_real_Variable_5;                              // 0x0118(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_6;                              // 0x0120(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_5_0;                            // 0x0128(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_6_0;                            // 0x0130(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0138(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_59C9[0x3];                                     // 0x0139(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x013C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UInputAction*                           Temp_object_Variable_3;                            // 0x0140(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FInputActionValue                      K2Node_EnhancedInputActionEvent_ActionValue_4;     // 0x0148(0x0020)(NoDestructor)
	float                                         K2Node_EnhancedInputActionEvent_ElapsedTime_4;     // 0x0168(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_EnhancedInputActionEvent_TriggeredTime_4;   // 0x016C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	const class UInputAction*                     K2Node_EnhancedInputActionEvent_SourceAction_4;    // 0x0170(0x0008)(ConstParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0178(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x017C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Conv_InputActionValueToBool_ReturnValue_2; // 0x0180(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_59CA[0x3];                                     // 0x0181(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0184(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_2;                  // 0x0188(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x018C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0190(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0194(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0198(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EValeriaFuncResult                            CallFunc_GetValeriaCharacter_OutResult;            // 0x0199(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_59CB[0x6];                                     // 0x019A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AValeriaCharacter*                      CallFunc_GetValeriaCharacter_ReturnValue;          // 0x01A0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	EValeriaFuncResult                            CallFunc_GetValeriaCharacter_OutResult_1;          // 0x01A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_59CC[0x7];                                     // 0x01A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AValeriaCharacter*                      CallFunc_GetValeriaCharacter_ReturnValue_1;        // 0x01B0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UValeriaEmoteComponent*                 CallFunc_GetEmoteComponent_ReturnValue;            // 0x01B8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UValeriaEmoteComponent*                 CallFunc_GetEmoteComponent_ReturnValue_1;          // 0x01C0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Client_ClearAssignedEmotes_ReturnValue;   // 0x01C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x01C9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x01CA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess_1;                    // 0x01CB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x01CC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_59CD[0x3];                                     // 0x01CD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UWidget*>                        CallFunc_GetAllChildren_ReturnValue;               // 0x01D0(0x0010)(ReferenceParm, ContainsInstancedReference)
	TDelegate<void(class UWBP_EmoteWheelChoice_CM_C* EmoteChoice)> K2Node_CreateDelegate_OutputDelegate;              // 0x01E0(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x01F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_59CE[0x4];                                     // 0x01F4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                K2Node_ComponentBoundEvent_Item;                   // 0x01F8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UUserWidget*                            K2Node_ComponentBoundEvent_Widget_1;               // 0x0200(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0208(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_59CF[0x7];                                     // 0x0209(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_EmoteEntry_CM_C*                   K2Node_DynamicCast_AsWBP_Emote_Entry_CM;           // 0x0210(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0218(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_59D0[0x3];                                     // 0x0219(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class UWBP_EmoteEntry_CM_C* Emote_Entry)> K2Node_CreateDelegate_OutputDelegate_1;            // 0x021C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetIsEnabled_ReturnValue;                 // 0x022C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_59D1[0x3];                                     // 0x022D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Temp_real_Variable_7;                              // 0x0230(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUserWidget*                            K2Node_ComponentBoundEvent_Widget;                 // 0x0238(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UWBP_EmoteEntry_CM_C*                   K2Node_DynamicCast_AsWBP_Emote_Entry_CM_1;         // 0x0240(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0248(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_59D2[0x7];                                     // 0x0249(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_EmoteEntry_CM_C*                   K2Node_DynamicCast_AsWBP_Emote_Entry_CM_2;         // 0x0250(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0258(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0259(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_59D3[0x6];                                     // 0x025A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_EmoteWheelChoice_CM_C*             K2Node_DynamicCast_AsWBP_Emote_Wheel_Choice_CM;    // 0x0260(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x0268(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_59D4[0x7];                                     // 0x0269(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Temp_real_Variable_8;                              // 0x0270(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UInputAction*                           Temp_object_Variable_4;                            // 0x0278(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UWBP_EmoteEntry_CM_C* Emote_Entry)> K2Node_CreateDelegate_OutputDelegate_2;            // 0x0280(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	const class US6UI_CustomNavigationGroup*      K2Node_ComponentBoundEvent_NavGroup_1;             // 0x0290(0x0008)(ConstParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	const class US6UI_CustomNavigationGroup*      K2Node_ComponentBoundEvent_NavGroup;               // 0x0298(0x0008)(ConstParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FInputActionValue                      K2Node_EnhancedInputActionEvent_ActionValue_3;     // 0x02A0(0x0020)(NoDestructor)
	float                                         K2Node_EnhancedInputActionEvent_ElapsedTime_3;     // 0x02C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_EnhancedInputActionEvent_TriggeredTime_3;   // 0x02C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	const class UInputAction*                     K2Node_EnhancedInputActionEvent_SourceAction_3;    // 0x02C8(0x0008)(ConstParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TSoftObjectPtr<class US6UI_CustomNavigationGroup> CallFunc_Conv_ObjectToSoftObjectReference_ReturnValue; // 0x02D0(0x0028)(InstancedReference, UObjectWrapper, HasGetValueTypeHash)
	struct FS6UI_NavigationGroupTranstionData     K2Node_MakeStruct_S6UI_NavigationGroupTranstionData; // 0x02F8(0x0040)(ContainsInstancedReference)
	double                                        Temp_real_Variable_8_0;                            // 0x0338(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_7_0;                            // 0x0340(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Conv_InputActionValueToBool_ReturnValue_3; // 0x0348(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_59D5[0x7];                                     // 0x0349(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class US6UI_CustomNavigationGroup> CallFunc_Conv_ObjectToSoftObjectReference_ReturnValue_1; // 0x0350(0x0028)(InstancedReference, UObjectWrapper, HasGetValueTypeHash)
	struct FS6UI_NavigationGroupTranstionData     K2Node_MakeStruct_S6UI_NavigationGroupTranstionData_1; // 0x0378(0x0040)(ContainsInstancedReference)
	TArray<class UWidget*>                        K2Node_MakeArray_Array;                            // 0x03B8(0x0010)(ConstParm, ReferenceParm, ContainsInstancedReference)
	struct FS6UI_NavExplicitData                  CallFunc_Array_Get_Item;                           // 0x03C8(0x0014)(NoDestructor)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_3;            // 0x03DC(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x03EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x03F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_59D6[0x3];                                     // 0x03F1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_AkEventGlobal_ReturnValue;                // 0x03F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TSoftObjectPtr<class US6UI_CustomNavigationGroup> CallFunc_Conv_ObjectToSoftObjectReference_ReturnValue_2; // 0x03F8(0x0028)(InstancedReference, UObjectWrapper, HasGetValueTypeHash)
	struct FS6UI_NavigationGroupTranstionData     K2Node_MakeStruct_S6UI_NavigationGroupTranstionData_2; // 0x0420(0x0040)(ContainsInstancedReference)
	bool                                          Temp_bool_Variable_3;                              // 0x0460(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_59D7[0x3];                                     // 0x0461(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetScrollOffset_ReturnValue;              // 0x0464(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_2;                   // 0x0468(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_59D8[0x4];                                     // 0x046C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0470(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWidget*                                CallFunc_Array_Get_Item_1;                         // 0x0478(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0480(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWBP_EmoteWheelChoice_CM_C*             K2Node_DynamicCast_AsWBP_Emote_Wheel_Choice_CM_1;  // 0x0488(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_4;                     // 0x0490(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsConsole_ReturnValue;                    // 0x0491(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDesktop_ReturnValue;                    // 0x0492(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_59D9[0x5];                                     // 0x0493(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Temp_real_Variable_9;                              // 0x0498(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_10;                             // 0x04A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_9_0;                            // 0x04A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_10_0;                           // 0x04B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UWidget*>                        K2Node_MakeArray_Array_1;                          // 0x04B8(0x0010)(ConstParm, ReferenceParm, ContainsInstancedReference)
	bool                                          CallFunc_IsConsolePlatform_ReturnValue;            // 0x04C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_59DA[0x7];                                     // 0x04C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UUserWidget*>                    K2Node_MakeArray_Array_2;                          // 0x04D0(0x0010)(ReferenceParm, ContainsInstancedReference)
	bool                                          CallFunc_Cancel_Update_Emote_bCancel;              // 0x04E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_59DB[0x7];                                     // 0x04E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUserWidget*                            CallFunc_Array_Get_Item_2;                         // 0x04E8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UWBP_EmoteEntry_CM_C*                   K2Node_DynamicCast_AsWBP_Emote_Entry_CM_3;         // 0x04F0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_5;                     // 0x04F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x04F9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_59DC[0x6];                                     // 0x04FA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_EmoteWheelChoice_CM_C*             K2Node_DynamicCast_AsWBP_Emote_Wheel_Choice_CM_2;  // 0x0500(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_6;                     // 0x0508(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_59DD[0x3];                                     // 0x0509(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x050C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x0510(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_59DE[0x7];                                     // 0x0511(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Add_DoubleDouble_B_ImplicitCast;          // 0x0518(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScrollOffset_InScrollOffset_ImplicitCast; // 0x0520(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_EmoteCollection_Circular_C_ExecuteUbergraph_WBP_EmoteCollection_Circular) == 0x000008, "Wrong alignment on WBP_EmoteCollection_Circular_C_ExecuteUbergraph_WBP_EmoteCollection_Circular");
static_assert(sizeof(WBP_EmoteCollection_Circular_C_ExecuteUbergraph_WBP_EmoteCollection_Circular) == 0x000528, "Wrong size on WBP_EmoteCollection_Circular_C_ExecuteUbergraph_WBP_EmoteCollection_Circular");
static_assert(offsetof(WBP_EmoteCollection_Circular_C_ExecuteUbergraph_WBP_EmoteCollection_Circular, EntryPoint) == 0x000000, "Member 'WBP_EmoteCollection_Circular_C_ExecuteUbergraph_WBP_EmoteCollection_Circular::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_EmoteCollection_Circular_C_ExecuteUbergraph_WBP_EmoteCollection_Circular, K2Node_EnhancedInputActionEvent_ActionValue_2) == 0x000008, "Member 'WBP_EmoteCollection_Circular_C_ExecuteUbergraph_WBP_EmoteCollection_Circular::K2Node_EnhancedInputActionEvent_ActionValue_2' has a wrong offset!");
static_assert(offsetof(WBP_EmoteCollection_Circular_C_ExecuteUbergraph_WBP_EmoteCollection_Circular, K2Node_EnhancedInputActionEvent_ElapsedTime_2) == 0x000028, "Member 'WBP_EmoteCollection_Circular_C_ExecuteUbergraph_WBP_EmoteCollection_Circular::K2Node_EnhancedInputActionEvent_ElapsedTime_2' has a wrong offset!");
static_assert(offsetof(WBP_EmoteCollection_Circular_C_ExecuteUbergraph_WBP_EmoteCollection_Circular, K2Node_EnhancedInputActionEvent_TriggeredTime_2) == 0x00002C, "Member 'WBP_EmoteCollection_Circular_C_ExecuteUbergraph_WBP_EmoteCollection_Circular::K2Node_EnhancedInputActionEvent_TriggeredTime_2' has a wrong offset!");
static_assert(offsetof(WBP_EmoteCollection_Circular_C_ExecuteUbergraph_WBP_EmoteCollection_Circular, K2Node_EnhancedInputActionEvent_SourceAction_2) == 0x000030, "Member 'WBP_EmoteCollection_Circular_C_ExecuteUbergraph_WBP_EmoteCollection_Circular::K2Node_EnhancedInputActionEvent_SourceAction_2' has a wrong offset!");
static_assert(offsetof(WBP_EmoteCollection_Circular_C_ExecuteUbergraph_WBP_EmoteCollection_Circular, Temp_object_Variable) == 0x000038, "Member 'WBP_EmoteCollection_Circular_C_ExecuteUbergraph_WBP_EmoteCollection_Circular::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(WBP_EmoteCollection_Circular_C_ExecuteUbergraph_WBP_EmoteCollection_Circular, CallFunc_Conv_InputActionValueToBool_ReturnValue) == 0x000040, "Member 'WBP_EmoteCollection_Circular_C_ExecuteUbergraph_WBP_EmoteCollection_Circular::CallFunc_Conv_InputActionValueToBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_EmoteCollection_Circular_C_ExecuteUbergraph_WBP_EmoteCollection_Circular, Temp_real_Variable) == 0x000048, "Member 'WBP_EmoteCollection_Circular_C_ExecuteUbergraph_WBP_EmoteCollection_Circular::Temp_real_Variable' has a wrong offset!");
static_assert(offsetof(WBP_EmoteCollection_Circular_C_ExecuteUbergraph_WBP_EmoteCollection_Circular, Temp_real_Variable_1) == 0x000050, "Member 'WBP_EmoteCollection_Circular_C_ExecuteUbergraph_WBP_EmoteCollection_Circular::Temp_real_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_EmoteCollection_Circular_C_ExecuteUbergraph_WBP_EmoteCollection_Circular, Temp_real_Variable_0) == 0x000058, "Member 'WBP_EmoteCollection_Circular_C_ExecuteUbergraph_WBP_EmoteCollection_Circular::Temp_real_Variable_0' has a wrong offset!");
static_assert(offsetof(WBP_EmoteCollection_Circular_C_ExecuteUbergraph_WBP_EmoteCollection_Circular, Temp_real_Variable_1_0) == 0x000060, "Member 'WBP_EmoteCollection_Circular_C_ExecuteUbergraph_WBP_EmoteCollection_Circular::Temp_real_Variable_1_0' has a wrong offset!");
static_assert(offsetof(WBP_EmoteCollection_Circular_C_ExecuteUbergraph_WBP_EmoteCollection_Circular, Temp_bool_Variable) == 0x000068, "Member 'WBP_EmoteCollection_Circular_C_ExecuteUbergraph_WBP_EmoteCollection_Circular::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_EmoteCollection_Circular_C_ExecuteUbergraph_WBP_EmoteCollection_Circular, K2Node_EnhancedInputActionEvent_ActionValue_1) == 0x000070, "Member 'WBP_EmoteCollection_Circular_C_ExecuteUbergraph_WBP_EmoteCollection_Circular::K2Node_EnhancedInputActionEvent_ActionValue_1' has a wrong offset!");
static_assert(offsetof(WBP_EmoteCollection_Circular_C_ExecuteUbergraph_WBP_EmoteCollection_Circular, K2Node_EnhancedInputActionEvent_ElapsedTime_1) == 0x000090, "Member 'WBP_EmoteCollection_Circular_C_ExecuteUbergraph_WBP_EmoteCollection_Circular::K2Node_EnhancedInputActionEvent_ElapsedTime_1' has a wrong offset!");
static_assert(offsetof(WBP_EmoteCollection_Circular_C_ExecuteUbergraph_WBP_EmoteCollection_Circular, K2Node_EnhancedInputActionEvent_TriggeredTime_1) == 0x000094, "Member 'WBP_EmoteCollection_Circular_C_ExecuteUbergraph_WBP_EmoteCollection_Circular::K2Node_EnhancedInputActionEvent_TriggeredTime_1' has a wrong offset!");
static_assert(offsetof(WBP_EmoteCollection_Circular_C_ExecuteUbergraph_WBP_EmoteCollection_Circular, K2Node_EnhancedInputActionEvent_SourceAction_1) == 0x000098, "Member 'WBP_EmoteCollection_Circular_C_ExecuteUbergraph_WBP_EmoteCollection_Circular::K2Node_EnhancedInputActionEvent_SourceAction_1' has a wrong offset!");
static_assert(offsetof(WBP_EmoteCollection_Circular_C_ExecuteUbergraph_WBP_EmoteCollection_Circular, CallFunc_Conv_InputActionValueToAxis1D_ReturnValue) == 0x0000A0, "Member 'WBP_EmoteCollection_Circular_C_ExecuteUbergraph_WBP_EmoteCollection_Circular::CallFunc_Conv_InputActionValueToAxis1D_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_EmoteCollection_Circular_C_ExecuteUbergraph_WBP_EmoteCollection_Circular, Temp_object_Variable_1) == 0x0000A8, "Member 'WBP_EmoteCollection_Circular_C_ExecuteUbergraph_WBP_EmoteCollection_Circular::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_EmoteCollection_Circular_C_ExecuteUbergraph_WBP_EmoteCollection_Circular, Temp_real_Variable_2) == 0x0000B0, "Member 'WBP_EmoteCollection_Circular_C_ExecuteUbergraph_WBP_EmoteCollection_Circular::Temp_real_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_EmoteCollection_Circular_C_ExecuteUbergraph_WBP_EmoteCollection_Circular, Temp_real_Variable_2_0) == 0x0000B8, "Member 'WBP_EmoteCollection_Circular_C_ExecuteUbergraph_WBP_EmoteCollection_Circular::Temp_real_Variable_2_0' has a wrong offset!");
static_assert(offsetof(WBP_EmoteCollection_Circular_C_ExecuteUbergraph_WBP_EmoteCollection_Circular, Temp_real_Variable_3) == 0x0000C0, "Member 'WBP_EmoteCollection_Circular_C_ExecuteUbergraph_WBP_EmoteCollection_Circular::Temp_real_Variable_3' has a wrong offset!");
static_assert(offsetof(WBP_EmoteCollection_Circular_C_ExecuteUbergraph_WBP_EmoteCollection_Circular, Temp_real_Variable_4) == 0x0000C8, "Member 'WBP_EmoteCollection_Circular_C_ExecuteUbergraph_WBP_EmoteCollection_Circular::Temp_real_Variable_4' has a wrong offset!");
static_assert(offsetof(WBP_EmoteCollection_Circular_C_ExecuteUbergraph_WBP_EmoteCollection_Circular, Temp_real_Variable_3_0) == 0x0000D0, "Member 'WBP_EmoteCollection_Circular_C_ExecuteUbergraph_WBP_EmoteCollection_Circular::Temp_real_Variable_3_0' has a wrong offset!");
static_assert(offsetof(WBP_EmoteCollection_Circular_C_ExecuteUbergraph_WBP_EmoteCollection_Circular, K2Node_EnhancedInputActionEvent_ActionValue) == 0x0000D8, "Member 'WBP_EmoteCollection_Circular_C_ExecuteUbergraph_WBP_EmoteCollection_Circular::K2Node_EnhancedInputActionEvent_ActionValue' has a wrong offset!");
static_assert(offsetof(WBP_EmoteCollection_Circular_C_ExecuteUbergraph_WBP_EmoteCollection_Circular, K2Node_EnhancedInputActionEvent_ElapsedTime) == 0x0000F8, "Member 'WBP_EmoteCollection_Circular_C_ExecuteUbergraph_WBP_EmoteCollection_Circular::K2Node_EnhancedInputActionEvent_ElapsedTime' has a wrong offset!");
static_assert(offsetof(WBP_EmoteCollection_Circular_C_ExecuteUbergraph_WBP_EmoteCollection_Circular, K2Node_EnhancedInputActionEvent_TriggeredTime) == 0x0000FC, "Member 'WBP_EmoteCollection_Circular_C_ExecuteUbergraph_WBP_EmoteCollection_Circular::K2Node_EnhancedInputActionEvent_TriggeredTime' has a wrong offset!");
static_assert(offsetof(WBP_EmoteCollection_Circular_C_ExecuteUbergraph_WBP_EmoteCollection_Circular, K2Node_EnhancedInputActionEvent_SourceAction) == 0x000100, "Member 'WBP_EmoteCollection_Circular_C_ExecuteUbergraph_WBP_EmoteCollection_Circular::K2Node_EnhancedInputActionEvent_SourceAction' has a wrong offset!");
static_assert(offsetof(WBP_EmoteCollection_Circular_C_ExecuteUbergraph_WBP_EmoteCollection_Circular, Temp_object_Variable_2) == 0x000108, "Member 'WBP_EmoteCollection_Circular_C_ExecuteUbergraph_WBP_EmoteCollection_Circular::Temp_object_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_EmoteCollection_Circular_C_ExecuteUbergraph_WBP_EmoteCollection_Circular, CallFunc_Conv_InputActionValueToBool_ReturnValue_1) == 0x000110, "Member 'WBP_EmoteCollection_Circular_C_ExecuteUbergraph_WBP_EmoteCollection_Circular::CallFunc_Conv_InputActionValueToBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_EmoteCollection_Circular_C_ExecuteUbergraph_WBP_EmoteCollection_Circular, Temp_real_Variable_5) == 0x000118, "Member 'WBP_EmoteCollection_Circular_C_ExecuteUbergraph_WBP_EmoteCollection_Circular::Temp_real_Variable_5' has a wrong offset!");
static_assert(offsetof(WBP_EmoteCollection_Circular_C_ExecuteUbergraph_WBP_EmoteCollection_Circular, Temp_real_Variable_6) == 0x000120, "Member 'WBP_EmoteCollection_Circular_C_ExecuteUbergraph_WBP_EmoteCollection_Circular::Temp_real_Variable_6' has a wrong offset!");
static_assert(offsetof(WBP_EmoteCollection_Circular_C_ExecuteUbergraph_WBP_EmoteCollection_Circular, Temp_real_Variable_5_0) == 0x000128, "Member 'WBP_EmoteCollection_Circular_C_ExecuteUbergraph_WBP_EmoteCollection_Circular::Temp_real_Variable_5_0' has a wrong offset!");
static_assert(offsetof(WBP_EmoteCollection_Circular_C_ExecuteUbergraph_WBP_EmoteCollection_Circular, Temp_real_Variable_6_0) == 0x000130, "Member 'WBP_EmoteCollection_Circular_C_ExecuteUbergraph_WBP_EmoteCollection_Circular::Temp_real_Variable_6_0' has a wrong offset!");
static_assert(offsetof(WBP_EmoteCollection_Circular_C_ExecuteUbergraph_WBP_EmoteCollection_Circular, Temp_bool_Variable_1) == 0x000138, "Member 'WBP_EmoteCollection_Circular_C_ExecuteUbergraph_WBP_EmoteCollection_Circular::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_EmoteCollection_Circular_C_ExecuteUbergraph_WBP_EmoteCollection_Circular, Temp_int_Array_Index_Variable) == 0x00013C, "Member 'WBP_EmoteCollection_Circular_C_ExecuteUbergraph_WBP_EmoteCollection_Circular::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WBP_EmoteCollection_Circular_C_ExecuteUbergraph_WBP_EmoteCollection_Circular, Temp_object_Variable_3) == 0x000140, "Member 'WBP_EmoteCollection_Circular_C_ExecuteUbergraph_WBP_EmoteCollection_Circular::Temp_object_Variable_3' has a wrong offset!");
static_assert(offsetof(WBP_EmoteCollection_Circular_C_ExecuteUbergraph_WBP_EmoteCollection_Circular, K2Node_EnhancedInputActionEvent_ActionValue_4) == 0x000148, "Member 'WBP_EmoteCollection_Circular_C_ExecuteUbergraph_WBP_EmoteCollection_Circular::K2Node_EnhancedInputActionEvent_ActionValue_4' has a wrong offset!");
static_assert(offsetof(WBP_EmoteCollection_Circular_C_ExecuteUbergraph_WBP_EmoteCollection_Circular, K2Node_EnhancedInputActionEvent_ElapsedTime_4) == 0x000168, "Member 'WBP_EmoteCollection_Circular_C_ExecuteUbergraph_WBP_EmoteCollection_Circular::K2Node_EnhancedInputActionEvent_ElapsedTime_4' has a wrong offset!");
static_assert(offsetof(WBP_EmoteCollection_Circular_C_ExecuteUbergraph_WBP_EmoteCollection_Circular, K2Node_EnhancedInputActionEvent_TriggeredTime_4) == 0x00016C, "Member 'WBP_EmoteCollection_Circular_C_ExecuteUbergraph_WBP_EmoteCollection_Circular::K2Node_EnhancedInputActionEvent_TriggeredTime_4' has a wrong offset!");
static_assert(offsetof(WBP_EmoteCollection_Circular_C_ExecuteUbergraph_WBP_EmoteCollection_Circular, K2Node_EnhancedInputActionEvent_SourceAction_4) == 0x000170, "Member 'WBP_EmoteCollection_Circular_C_ExecuteUbergraph_WBP_EmoteCollection_Circular::K2Node_EnhancedInputActionEvent_SourceAction_4' has a wrong offset!");
static_assert(offsetof(WBP_EmoteCollection_Circular_C_ExecuteUbergraph_WBP_EmoteCollection_Circular, Temp_int_Loop_Counter_Variable) == 0x000178, "Member 'WBP_EmoteCollection_Circular_C_ExecuteUbergraph_WBP_EmoteCollection_Circular::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WBP_EmoteCollection_Circular_C_ExecuteUbergraph_WBP_EmoteCollection_Circular, CallFunc_Add_IntInt_ReturnValue) == 0x00017C, "Member 'WBP_EmoteCollection_Circular_C_ExecuteUbergraph_WBP_EmoteCollection_Circular::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_EmoteCollection_Circular_C_ExecuteUbergraph_WBP_EmoteCollection_Circular, CallFunc_Conv_InputActionValueToBool_ReturnValue_2) == 0x000180, "Member 'WBP_EmoteCollection_Circular_C_ExecuteUbergraph_WBP_EmoteCollection_Circular::CallFunc_Conv_InputActionValueToBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_EmoteCollection_Circular_C_ExecuteUbergraph_WBP_EmoteCollection_Circular, Temp_int_Loop_Counter_Variable_1) == 0x000184, "Member 'WBP_EmoteCollection_Circular_C_ExecuteUbergraph_WBP_EmoteCollection_Circular::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_EmoteCollection_Circular_C_ExecuteUbergraph_WBP_EmoteCollection_Circular, Temp_int_Loop_Counter_Variable_2) == 0x000188, "Member 'WBP_EmoteCollection_Circular_C_ExecuteUbergraph_WBP_EmoteCollection_Circular::Temp_int_Loop_Counter_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_EmoteCollection_Circular_C_ExecuteUbergraph_WBP_EmoteCollection_Circular, CallFunc_Add_IntInt_ReturnValue_1) == 0x00018C, "Member 'WBP_EmoteCollection_Circular_C_ExecuteUbergraph_WBP_EmoteCollection_Circular::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_EmoteCollection_Circular_C_ExecuteUbergraph_WBP_EmoteCollection_Circular, CallFunc_Add_IntInt_ReturnValue_2) == 0x000190, "Member 'WBP_EmoteCollection_Circular_C_ExecuteUbergraph_WBP_EmoteCollection_Circular::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_EmoteCollection_Circular_C_ExecuteUbergraph_WBP_EmoteCollection_Circular, Temp_int_Array_Index_Variable_1) == 0x000194, "Member 'WBP_EmoteCollection_Circular_C_ExecuteUbergraph_WBP_EmoteCollection_Circular::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_EmoteCollection_Circular_C_ExecuteUbergraph_WBP_EmoteCollection_Circular, K2Node_Event_IsDesignTime) == 0x000198, "Member 'WBP_EmoteCollection_Circular_C_ExecuteUbergraph_WBP_EmoteCollection_Circular::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(WBP_EmoteCollection_Circular_C_ExecuteUbergraph_WBP_EmoteCollection_Circular, CallFunc_GetValeriaCharacter_OutResult) == 0x000199, "Member 'WBP_EmoteCollection_Circular_C_ExecuteUbergraph_WBP_EmoteCollection_Circular::CallFunc_GetValeriaCharacter_OutResult' has a wrong offset!");
static_assert(offsetof(WBP_EmoteCollection_Circular_C_ExecuteUbergraph_WBP_EmoteCollection_Circular, CallFunc_GetValeriaCharacter_ReturnValue) == 0x0001A0, "Member 'WBP_EmoteCollection_Circular_C_ExecuteUbergraph_WBP_EmoteCollection_Circular::CallFunc_GetValeriaCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_EmoteCollection_Circular_C_ExecuteUbergraph_WBP_EmoteCollection_Circular, CallFunc_GetValeriaCharacter_OutResult_1) == 0x0001A8, "Member 'WBP_EmoteCollection_Circular_C_ExecuteUbergraph_WBP_EmoteCollection_Circular::CallFunc_GetValeriaCharacter_OutResult_1' has a wrong offset!");
static_assert(offsetof(WBP_EmoteCollection_Circular_C_ExecuteUbergraph_WBP_EmoteCollection_Circular, CallFunc_GetValeriaCharacter_ReturnValue_1) == 0x0001B0, "Member 'WBP_EmoteCollection_Circular_C_ExecuteUbergraph_WBP_EmoteCollection_Circular::CallFunc_GetValeriaCharacter_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_EmoteCollection_Circular_C_ExecuteUbergraph_WBP_EmoteCollection_Circular, CallFunc_GetEmoteComponent_ReturnValue) == 0x0001B8, "Member 'WBP_EmoteCollection_Circular_C_ExecuteUbergraph_WBP_EmoteCollection_Circular::CallFunc_GetEmoteComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_EmoteCollection_Circular_C_ExecuteUbergraph_WBP_EmoteCollection_Circular, CallFunc_GetEmoteComponent_ReturnValue_1) == 0x0001C0, "Member 'WBP_EmoteCollection_Circular_C_ExecuteUbergraph_WBP_EmoteCollection_Circular::CallFunc_GetEmoteComponent_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_EmoteCollection_Circular_C_ExecuteUbergraph_WBP_EmoteCollection_Circular, CallFunc_Client_ClearAssignedEmotes_ReturnValue) == 0x0001C8, "Member 'WBP_EmoteCollection_Circular_C_ExecuteUbergraph_WBP_EmoteCollection_Circular::CallFunc_Client_ClearAssignedEmotes_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_EmoteCollection_Circular_C_ExecuteUbergraph_WBP_EmoteCollection_Circular, CallFunc_IsValid_ReturnValue) == 0x0001C9, "Member 'WBP_EmoteCollection_Circular_C_ExecuteUbergraph_WBP_EmoteCollection_Circular::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_EmoteCollection_Circular_C_ExecuteUbergraph_WBP_EmoteCollection_Circular, K2Node_SwitchEnum_CmpSuccess) == 0x0001CA, "Member 'WBP_EmoteCollection_Circular_C_ExecuteUbergraph_WBP_EmoteCollection_Circular::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(WBP_EmoteCollection_Circular_C_ExecuteUbergraph_WBP_EmoteCollection_Circular, K2Node_SwitchEnum_CmpSuccess_1) == 0x0001CB, "Member 'WBP_EmoteCollection_Circular_C_ExecuteUbergraph_WBP_EmoteCollection_Circular::K2Node_SwitchEnum_CmpSuccess_1' has a wrong offset!");
static_assert(offsetof(WBP_EmoteCollection_Circular_C_ExecuteUbergraph_WBP_EmoteCollection_Circular, Temp_bool_Variable_2) == 0x0001CC, "Member 'WBP_EmoteCollection_Circular_C_ExecuteUbergraph_WBP_EmoteCollection_Circular::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_EmoteCollection_Circular_C_ExecuteUbergraph_WBP_EmoteCollection_Circular, CallFunc_GetAllChildren_ReturnValue) == 0x0001D0, "Member 'WBP_EmoteCollection_Circular_C_ExecuteUbergraph_WBP_EmoteCollection_Circular::CallFunc_GetAllChildren_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_EmoteCollection_Circular_C_ExecuteUbergraph_WBP_EmoteCollection_Circular, K2Node_CreateDelegate_OutputDelegate) == 0x0001E0, "Member 'WBP_EmoteCollection_Circular_C_ExecuteUbergraph_WBP_EmoteCollection_Circular::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WBP_EmoteCollection_Circular_C_ExecuteUbergraph_WBP_EmoteCollection_Circular, CallFunc_Array_Length_ReturnValue) == 0x0001F0, "Member 'WBP_EmoteCollection_Circular_C_ExecuteUbergraph_WBP_EmoteCollection_Circular::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_EmoteCollection_Circular_C_ExecuteUbergraph_WBP_EmoteCollection_Circular, K2Node_ComponentBoundEvent_Item) == 0x0001F8, "Member 'WBP_EmoteCollection_Circular_C_ExecuteUbergraph_WBP_EmoteCollection_Circular::K2Node_ComponentBoundEvent_Item' has a wrong offset!");
static_assert(offsetof(WBP_EmoteCollection_Circular_C_ExecuteUbergraph_WBP_EmoteCollection_Circular, K2Node_ComponentBoundEvent_Widget_1) == 0x000200, "Member 'WBP_EmoteCollection_Circular_C_ExecuteUbergraph_WBP_EmoteCollection_Circular::K2Node_ComponentBoundEvent_Widget_1' has a wrong offset!");
static_assert(offsetof(WBP_EmoteCollection_Circular_C_ExecuteUbergraph_WBP_EmoteCollection_Circular, CallFunc_Less_IntInt_ReturnValue) == 0x000208, "Member 'WBP_EmoteCollection_Circular_C_ExecuteUbergraph_WBP_EmoteCollection_Circular::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_EmoteCollection_Circular_C_ExecuteUbergraph_WBP_EmoteCollection_Circular, K2Node_DynamicCast_AsWBP_Emote_Entry_CM) == 0x000210, "Member 'WBP_EmoteCollection_Circular_C_ExecuteUbergraph_WBP_EmoteCollection_Circular::K2Node_DynamicCast_AsWBP_Emote_Entry_CM' has a wrong offset!");
static_assert(offsetof(WBP_EmoteCollection_Circular_C_ExecuteUbergraph_WBP_EmoteCollection_Circular, K2Node_DynamicCast_bSuccess) == 0x000218, "Member 'WBP_EmoteCollection_Circular_C_ExecuteUbergraph_WBP_EmoteCollection_Circular::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_EmoteCollection_Circular_C_ExecuteUbergraph_WBP_EmoteCollection_Circular, K2Node_CreateDelegate_OutputDelegate_1) == 0x00021C, "Member 'WBP_EmoteCollection_Circular_C_ExecuteUbergraph_WBP_EmoteCollection_Circular::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(WBP_EmoteCollection_Circular_C_ExecuteUbergraph_WBP_EmoteCollection_Circular, CallFunc_GetIsEnabled_ReturnValue) == 0x00022C, "Member 'WBP_EmoteCollection_Circular_C_ExecuteUbergraph_WBP_EmoteCollection_Circular::CallFunc_GetIsEnabled_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_EmoteCollection_Circular_C_ExecuteUbergraph_WBP_EmoteCollection_Circular, Temp_real_Variable_7) == 0x000230, "Member 'WBP_EmoteCollection_Circular_C_ExecuteUbergraph_WBP_EmoteCollection_Circular::Temp_real_Variable_7' has a wrong offset!");
static_assert(offsetof(WBP_EmoteCollection_Circular_C_ExecuteUbergraph_WBP_EmoteCollection_Circular, K2Node_ComponentBoundEvent_Widget) == 0x000238, "Member 'WBP_EmoteCollection_Circular_C_ExecuteUbergraph_WBP_EmoteCollection_Circular::K2Node_ComponentBoundEvent_Widget' has a wrong offset!");
static_assert(offsetof(WBP_EmoteCollection_Circular_C_ExecuteUbergraph_WBP_EmoteCollection_Circular, K2Node_DynamicCast_AsWBP_Emote_Entry_CM_1) == 0x000240, "Member 'WBP_EmoteCollection_Circular_C_ExecuteUbergraph_WBP_EmoteCollection_Circular::K2Node_DynamicCast_AsWBP_Emote_Entry_CM_1' has a wrong offset!");
static_assert(offsetof(WBP_EmoteCollection_Circular_C_ExecuteUbergraph_WBP_EmoteCollection_Circular, K2Node_DynamicCast_bSuccess_1) == 0x000248, "Member 'WBP_EmoteCollection_Circular_C_ExecuteUbergraph_WBP_EmoteCollection_Circular::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(WBP_EmoteCollection_Circular_C_ExecuteUbergraph_WBP_EmoteCollection_Circular, K2Node_DynamicCast_AsWBP_Emote_Entry_CM_2) == 0x000250, "Member 'WBP_EmoteCollection_Circular_C_ExecuteUbergraph_WBP_EmoteCollection_Circular::K2Node_DynamicCast_AsWBP_Emote_Entry_CM_2' has a wrong offset!");
static_assert(offsetof(WBP_EmoteCollection_Circular_C_ExecuteUbergraph_WBP_EmoteCollection_Circular, K2Node_DynamicCast_bSuccess_2) == 0x000258, "Member 'WBP_EmoteCollection_Circular_C_ExecuteUbergraph_WBP_EmoteCollection_Circular::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(WBP_EmoteCollection_Circular_C_ExecuteUbergraph_WBP_EmoteCollection_Circular, CallFunc_IsValid_ReturnValue_1) == 0x000259, "Member 'WBP_EmoteCollection_Circular_C_ExecuteUbergraph_WBP_EmoteCollection_Circular::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_EmoteCollection_Circular_C_ExecuteUbergraph_WBP_EmoteCollection_Circular, K2Node_DynamicCast_AsWBP_Emote_Wheel_Choice_CM) == 0x000260, "Member 'WBP_EmoteCollection_Circular_C_ExecuteUbergraph_WBP_EmoteCollection_Circular::K2Node_DynamicCast_AsWBP_Emote_Wheel_Choice_CM' has a wrong offset!");
static_assert(offsetof(WBP_EmoteCollection_Circular_C_ExecuteUbergraph_WBP_EmoteCollection_Circular, K2Node_DynamicCast_bSuccess_3) == 0x000268, "Member 'WBP_EmoteCollection_Circular_C_ExecuteUbergraph_WBP_EmoteCollection_Circular::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(WBP_EmoteCollection_Circular_C_ExecuteUbergraph_WBP_EmoteCollection_Circular, Temp_real_Variable_8) == 0x000270, "Member 'WBP_EmoteCollection_Circular_C_ExecuteUbergraph_WBP_EmoteCollection_Circular::Temp_real_Variable_8' has a wrong offset!");
static_assert(offsetof(WBP_EmoteCollection_Circular_C_ExecuteUbergraph_WBP_EmoteCollection_Circular, Temp_object_Variable_4) == 0x000278, "Member 'WBP_EmoteCollection_Circular_C_ExecuteUbergraph_WBP_EmoteCollection_Circular::Temp_object_Variable_4' has a wrong offset!");
static_assert(offsetof(WBP_EmoteCollection_Circular_C_ExecuteUbergraph_WBP_EmoteCollection_Circular, K2Node_CreateDelegate_OutputDelegate_2) == 0x000280, "Member 'WBP_EmoteCollection_Circular_C_ExecuteUbergraph_WBP_EmoteCollection_Circular::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(WBP_EmoteCollection_Circular_C_ExecuteUbergraph_WBP_EmoteCollection_Circular, K2Node_ComponentBoundEvent_NavGroup_1) == 0x000290, "Member 'WBP_EmoteCollection_Circular_C_ExecuteUbergraph_WBP_EmoteCollection_Circular::K2Node_ComponentBoundEvent_NavGroup_1' has a wrong offset!");
static_assert(offsetof(WBP_EmoteCollection_Circular_C_ExecuteUbergraph_WBP_EmoteCollection_Circular, K2Node_ComponentBoundEvent_NavGroup) == 0x000298, "Member 'WBP_EmoteCollection_Circular_C_ExecuteUbergraph_WBP_EmoteCollection_Circular::K2Node_ComponentBoundEvent_NavGroup' has a wrong offset!");
static_assert(offsetof(WBP_EmoteCollection_Circular_C_ExecuteUbergraph_WBP_EmoteCollection_Circular, K2Node_EnhancedInputActionEvent_ActionValue_3) == 0x0002A0, "Member 'WBP_EmoteCollection_Circular_C_ExecuteUbergraph_WBP_EmoteCollection_Circular::K2Node_EnhancedInputActionEvent_ActionValue_3' has a wrong offset!");
static_assert(offsetof(WBP_EmoteCollection_Circular_C_ExecuteUbergraph_WBP_EmoteCollection_Circular, K2Node_EnhancedInputActionEvent_ElapsedTime_3) == 0x0002C0, "Member 'WBP_EmoteCollection_Circular_C_ExecuteUbergraph_WBP_EmoteCollection_Circular::K2Node_EnhancedInputActionEvent_ElapsedTime_3' has a wrong offset!");
static_assert(offsetof(WBP_EmoteCollection_Circular_C_ExecuteUbergraph_WBP_EmoteCollection_Circular, K2Node_EnhancedInputActionEvent_TriggeredTime_3) == 0x0002C4, "Member 'WBP_EmoteCollection_Circular_C_ExecuteUbergraph_WBP_EmoteCollection_Circular::K2Node_EnhancedInputActionEvent_TriggeredTime_3' has a wrong offset!");
static_assert(offsetof(WBP_EmoteCollection_Circular_C_ExecuteUbergraph_WBP_EmoteCollection_Circular, K2Node_EnhancedInputActionEvent_SourceAction_3) == 0x0002C8, "Member 'WBP_EmoteCollection_Circular_C_ExecuteUbergraph_WBP_EmoteCollection_Circular::K2Node_EnhancedInputActionEvent_SourceAction_3' has a wrong offset!");
static_assert(offsetof(WBP_EmoteCollection_Circular_C_ExecuteUbergraph_WBP_EmoteCollection_Circular, CallFunc_Conv_ObjectToSoftObjectReference_ReturnValue) == 0x0002D0, "Member 'WBP_EmoteCollection_Circular_C_ExecuteUbergraph_WBP_EmoteCollection_Circular::CallFunc_Conv_ObjectToSoftObjectReference_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_EmoteCollection_Circular_C_ExecuteUbergraph_WBP_EmoteCollection_Circular, K2Node_MakeStruct_S6UI_NavigationGroupTranstionData) == 0x0002F8, "Member 'WBP_EmoteCollection_Circular_C_ExecuteUbergraph_WBP_EmoteCollection_Circular::K2Node_MakeStruct_S6UI_NavigationGroupTranstionData' has a wrong offset!");
static_assert(offsetof(WBP_EmoteCollection_Circular_C_ExecuteUbergraph_WBP_EmoteCollection_Circular, Temp_real_Variable_8_0) == 0x000338, "Member 'WBP_EmoteCollection_Circular_C_ExecuteUbergraph_WBP_EmoteCollection_Circular::Temp_real_Variable_8_0' has a wrong offset!");
static_assert(offsetof(WBP_EmoteCollection_Circular_C_ExecuteUbergraph_WBP_EmoteCollection_Circular, Temp_real_Variable_7_0) == 0x000340, "Member 'WBP_EmoteCollection_Circular_C_ExecuteUbergraph_WBP_EmoteCollection_Circular::Temp_real_Variable_7_0' has a wrong offset!");
static_assert(offsetof(WBP_EmoteCollection_Circular_C_ExecuteUbergraph_WBP_EmoteCollection_Circular, CallFunc_Conv_InputActionValueToBool_ReturnValue_3) == 0x000348, "Member 'WBP_EmoteCollection_Circular_C_ExecuteUbergraph_WBP_EmoteCollection_Circular::CallFunc_Conv_InputActionValueToBool_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WBP_EmoteCollection_Circular_C_ExecuteUbergraph_WBP_EmoteCollection_Circular, CallFunc_Conv_ObjectToSoftObjectReference_ReturnValue_1) == 0x000350, "Member 'WBP_EmoteCollection_Circular_C_ExecuteUbergraph_WBP_EmoteCollection_Circular::CallFunc_Conv_ObjectToSoftObjectReference_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_EmoteCollection_Circular_C_ExecuteUbergraph_WBP_EmoteCollection_Circular, K2Node_MakeStruct_S6UI_NavigationGroupTranstionData_1) == 0x000378, "Member 'WBP_EmoteCollection_Circular_C_ExecuteUbergraph_WBP_EmoteCollection_Circular::K2Node_MakeStruct_S6UI_NavigationGroupTranstionData_1' has a wrong offset!");
static_assert(offsetof(WBP_EmoteCollection_Circular_C_ExecuteUbergraph_WBP_EmoteCollection_Circular, K2Node_MakeArray_Array) == 0x0003B8, "Member 'WBP_EmoteCollection_Circular_C_ExecuteUbergraph_WBP_EmoteCollection_Circular::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(WBP_EmoteCollection_Circular_C_ExecuteUbergraph_WBP_EmoteCollection_Circular, CallFunc_Array_Get_Item) == 0x0003C8, "Member 'WBP_EmoteCollection_Circular_C_ExecuteUbergraph_WBP_EmoteCollection_Circular::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_EmoteCollection_Circular_C_ExecuteUbergraph_WBP_EmoteCollection_Circular, K2Node_CreateDelegate_OutputDelegate_3) == 0x0003DC, "Member 'WBP_EmoteCollection_Circular_C_ExecuteUbergraph_WBP_EmoteCollection_Circular::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");
static_assert(offsetof(WBP_EmoteCollection_Circular_C_ExecuteUbergraph_WBP_EmoteCollection_Circular, CallFunc_Array_Length_ReturnValue_1) == 0x0003EC, "Member 'WBP_EmoteCollection_Circular_C_ExecuteUbergraph_WBP_EmoteCollection_Circular::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_EmoteCollection_Circular_C_ExecuteUbergraph_WBP_EmoteCollection_Circular, CallFunc_Less_IntInt_ReturnValue_1) == 0x0003F0, "Member 'WBP_EmoteCollection_Circular_C_ExecuteUbergraph_WBP_EmoteCollection_Circular::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_EmoteCollection_Circular_C_ExecuteUbergraph_WBP_EmoteCollection_Circular, CallFunc_AkEventGlobal_ReturnValue) == 0x0003F4, "Member 'WBP_EmoteCollection_Circular_C_ExecuteUbergraph_WBP_EmoteCollection_Circular::CallFunc_AkEventGlobal_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_EmoteCollection_Circular_C_ExecuteUbergraph_WBP_EmoteCollection_Circular, CallFunc_Conv_ObjectToSoftObjectReference_ReturnValue_2) == 0x0003F8, "Member 'WBP_EmoteCollection_Circular_C_ExecuteUbergraph_WBP_EmoteCollection_Circular::CallFunc_Conv_ObjectToSoftObjectReference_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_EmoteCollection_Circular_C_ExecuteUbergraph_WBP_EmoteCollection_Circular, K2Node_MakeStruct_S6UI_NavigationGroupTranstionData_2) == 0x000420, "Member 'WBP_EmoteCollection_Circular_C_ExecuteUbergraph_WBP_EmoteCollection_Circular::K2Node_MakeStruct_S6UI_NavigationGroupTranstionData_2' has a wrong offset!");
static_assert(offsetof(WBP_EmoteCollection_Circular_C_ExecuteUbergraph_WBP_EmoteCollection_Circular, Temp_bool_Variable_3) == 0x000460, "Member 'WBP_EmoteCollection_Circular_C_ExecuteUbergraph_WBP_EmoteCollection_Circular::Temp_bool_Variable_3' has a wrong offset!");
static_assert(offsetof(WBP_EmoteCollection_Circular_C_ExecuteUbergraph_WBP_EmoteCollection_Circular, CallFunc_GetScrollOffset_ReturnValue) == 0x000464, "Member 'WBP_EmoteCollection_Circular_C_ExecuteUbergraph_WBP_EmoteCollection_Circular::CallFunc_GetScrollOffset_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_EmoteCollection_Circular_C_ExecuteUbergraph_WBP_EmoteCollection_Circular, Temp_int_Array_Index_Variable_2) == 0x000468, "Member 'WBP_EmoteCollection_Circular_C_ExecuteUbergraph_WBP_EmoteCollection_Circular::Temp_int_Array_Index_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_EmoteCollection_Circular_C_ExecuteUbergraph_WBP_EmoteCollection_Circular, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000470, "Member 'WBP_EmoteCollection_Circular_C_ExecuteUbergraph_WBP_EmoteCollection_Circular::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_EmoteCollection_Circular_C_ExecuteUbergraph_WBP_EmoteCollection_Circular, CallFunc_Array_Get_Item_1) == 0x000478, "Member 'WBP_EmoteCollection_Circular_C_ExecuteUbergraph_WBP_EmoteCollection_Circular::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(WBP_EmoteCollection_Circular_C_ExecuteUbergraph_WBP_EmoteCollection_Circular, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000480, "Member 'WBP_EmoteCollection_Circular_C_ExecuteUbergraph_WBP_EmoteCollection_Circular::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_EmoteCollection_Circular_C_ExecuteUbergraph_WBP_EmoteCollection_Circular, K2Node_DynamicCast_AsWBP_Emote_Wheel_Choice_CM_1) == 0x000488, "Member 'WBP_EmoteCollection_Circular_C_ExecuteUbergraph_WBP_EmoteCollection_Circular::K2Node_DynamicCast_AsWBP_Emote_Wheel_Choice_CM_1' has a wrong offset!");
static_assert(offsetof(WBP_EmoteCollection_Circular_C_ExecuteUbergraph_WBP_EmoteCollection_Circular, K2Node_DynamicCast_bSuccess_4) == 0x000490, "Member 'WBP_EmoteCollection_Circular_C_ExecuteUbergraph_WBP_EmoteCollection_Circular::K2Node_DynamicCast_bSuccess_4' has a wrong offset!");
static_assert(offsetof(WBP_EmoteCollection_Circular_C_ExecuteUbergraph_WBP_EmoteCollection_Circular, CallFunc_IsConsole_ReturnValue) == 0x000491, "Member 'WBP_EmoteCollection_Circular_C_ExecuteUbergraph_WBP_EmoteCollection_Circular::CallFunc_IsConsole_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_EmoteCollection_Circular_C_ExecuteUbergraph_WBP_EmoteCollection_Circular, CallFunc_IsDesktop_ReturnValue) == 0x000492, "Member 'WBP_EmoteCollection_Circular_C_ExecuteUbergraph_WBP_EmoteCollection_Circular::CallFunc_IsDesktop_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_EmoteCollection_Circular_C_ExecuteUbergraph_WBP_EmoteCollection_Circular, Temp_real_Variable_9) == 0x000498, "Member 'WBP_EmoteCollection_Circular_C_ExecuteUbergraph_WBP_EmoteCollection_Circular::Temp_real_Variable_9' has a wrong offset!");
static_assert(offsetof(WBP_EmoteCollection_Circular_C_ExecuteUbergraph_WBP_EmoteCollection_Circular, Temp_real_Variable_10) == 0x0004A0, "Member 'WBP_EmoteCollection_Circular_C_ExecuteUbergraph_WBP_EmoteCollection_Circular::Temp_real_Variable_10' has a wrong offset!");
static_assert(offsetof(WBP_EmoteCollection_Circular_C_ExecuteUbergraph_WBP_EmoteCollection_Circular, Temp_real_Variable_9_0) == 0x0004A8, "Member 'WBP_EmoteCollection_Circular_C_ExecuteUbergraph_WBP_EmoteCollection_Circular::Temp_real_Variable_9_0' has a wrong offset!");
static_assert(offsetof(WBP_EmoteCollection_Circular_C_ExecuteUbergraph_WBP_EmoteCollection_Circular, Temp_real_Variable_10_0) == 0x0004B0, "Member 'WBP_EmoteCollection_Circular_C_ExecuteUbergraph_WBP_EmoteCollection_Circular::Temp_real_Variable_10_0' has a wrong offset!");
static_assert(offsetof(WBP_EmoteCollection_Circular_C_ExecuteUbergraph_WBP_EmoteCollection_Circular, K2Node_MakeArray_Array_1) == 0x0004B8, "Member 'WBP_EmoteCollection_Circular_C_ExecuteUbergraph_WBP_EmoteCollection_Circular::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(WBP_EmoteCollection_Circular_C_ExecuteUbergraph_WBP_EmoteCollection_Circular, CallFunc_IsConsolePlatform_ReturnValue) == 0x0004C8, "Member 'WBP_EmoteCollection_Circular_C_ExecuteUbergraph_WBP_EmoteCollection_Circular::CallFunc_IsConsolePlatform_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_EmoteCollection_Circular_C_ExecuteUbergraph_WBP_EmoteCollection_Circular, K2Node_MakeArray_Array_2) == 0x0004D0, "Member 'WBP_EmoteCollection_Circular_C_ExecuteUbergraph_WBP_EmoteCollection_Circular::K2Node_MakeArray_Array_2' has a wrong offset!");
static_assert(offsetof(WBP_EmoteCollection_Circular_C_ExecuteUbergraph_WBP_EmoteCollection_Circular, CallFunc_Cancel_Update_Emote_bCancel) == 0x0004E0, "Member 'WBP_EmoteCollection_Circular_C_ExecuteUbergraph_WBP_EmoteCollection_Circular::CallFunc_Cancel_Update_Emote_bCancel' has a wrong offset!");
static_assert(offsetof(WBP_EmoteCollection_Circular_C_ExecuteUbergraph_WBP_EmoteCollection_Circular, CallFunc_Array_Get_Item_2) == 0x0004E8, "Member 'WBP_EmoteCollection_Circular_C_ExecuteUbergraph_WBP_EmoteCollection_Circular::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(WBP_EmoteCollection_Circular_C_ExecuteUbergraph_WBP_EmoteCollection_Circular, K2Node_DynamicCast_AsWBP_Emote_Entry_CM_3) == 0x0004F0, "Member 'WBP_EmoteCollection_Circular_C_ExecuteUbergraph_WBP_EmoteCollection_Circular::K2Node_DynamicCast_AsWBP_Emote_Entry_CM_3' has a wrong offset!");
static_assert(offsetof(WBP_EmoteCollection_Circular_C_ExecuteUbergraph_WBP_EmoteCollection_Circular, K2Node_DynamicCast_bSuccess_5) == 0x0004F8, "Member 'WBP_EmoteCollection_Circular_C_ExecuteUbergraph_WBP_EmoteCollection_Circular::K2Node_DynamicCast_bSuccess_5' has a wrong offset!");
static_assert(offsetof(WBP_EmoteCollection_Circular_C_ExecuteUbergraph_WBP_EmoteCollection_Circular, CallFunc_IsValid_ReturnValue_2) == 0x0004F9, "Member 'WBP_EmoteCollection_Circular_C_ExecuteUbergraph_WBP_EmoteCollection_Circular::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_EmoteCollection_Circular_C_ExecuteUbergraph_WBP_EmoteCollection_Circular, K2Node_DynamicCast_AsWBP_Emote_Wheel_Choice_CM_2) == 0x000500, "Member 'WBP_EmoteCollection_Circular_C_ExecuteUbergraph_WBP_EmoteCollection_Circular::K2Node_DynamicCast_AsWBP_Emote_Wheel_Choice_CM_2' has a wrong offset!");
static_assert(offsetof(WBP_EmoteCollection_Circular_C_ExecuteUbergraph_WBP_EmoteCollection_Circular, K2Node_DynamicCast_bSuccess_6) == 0x000508, "Member 'WBP_EmoteCollection_Circular_C_ExecuteUbergraph_WBP_EmoteCollection_Circular::K2Node_DynamicCast_bSuccess_6' has a wrong offset!");
static_assert(offsetof(WBP_EmoteCollection_Circular_C_ExecuteUbergraph_WBP_EmoteCollection_Circular, CallFunc_Array_Length_ReturnValue_2) == 0x00050C, "Member 'WBP_EmoteCollection_Circular_C_ExecuteUbergraph_WBP_EmoteCollection_Circular::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_EmoteCollection_Circular_C_ExecuteUbergraph_WBP_EmoteCollection_Circular, CallFunc_Less_IntInt_ReturnValue_2) == 0x000510, "Member 'WBP_EmoteCollection_Circular_C_ExecuteUbergraph_WBP_EmoteCollection_Circular::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_EmoteCollection_Circular_C_ExecuteUbergraph_WBP_EmoteCollection_Circular, CallFunc_Add_DoubleDouble_B_ImplicitCast) == 0x000518, "Member 'WBP_EmoteCollection_Circular_C_ExecuteUbergraph_WBP_EmoteCollection_Circular::CallFunc_Add_DoubleDouble_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(WBP_EmoteCollection_Circular_C_ExecuteUbergraph_WBP_EmoteCollection_Circular, CallFunc_SetScrollOffset_InScrollOffset_ImplicitCast) == 0x000520, "Member 'WBP_EmoteCollection_Circular_C_ExecuteUbergraph_WBP_EmoteCollection_Circular::CallFunc_SetScrollOffset_InScrollOffset_ImplicitCast' has a wrong offset!");

// Function WBP_EmoteCollection_Circular.WBP_EmoteCollection_Circular_C.Get Emote Widget
// 0x0010 (0x0010 - 0x0000)
struct WBP_EmoteCollection_Circular_C_Get_Emote_Widget final
{
public:
	class UUserWidget*                            Selected_Emote_Widget;                             // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_EmoteCollection_Circular_C_Get_Emote_Widget) == 0x000008, "Wrong alignment on WBP_EmoteCollection_Circular_C_Get_Emote_Widget");
static_assert(sizeof(WBP_EmoteCollection_Circular_C_Get_Emote_Widget) == 0x000010, "Wrong size on WBP_EmoteCollection_Circular_C_Get_Emote_Widget");
static_assert(offsetof(WBP_EmoteCollection_Circular_C_Get_Emote_Widget, Selected_Emote_Widget) == 0x000000, "Member 'WBP_EmoteCollection_Circular_C_Get_Emote_Widget::Selected_Emote_Widget' has a wrong offset!");
static_assert(offsetof(WBP_EmoteCollection_Circular_C_Get_Emote_Widget, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'WBP_EmoteCollection_Circular_C_Get_Emote_Widget::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_EmoteCollection_Circular_C_Get_Emote_Widget, CallFunc_IsValid_ReturnValue_1) == 0x000009, "Member 'WBP_EmoteCollection_Circular_C_Get_Emote_Widget::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");

// Function WBP_EmoteCollection_Circular.WBP_EmoteCollection_Circular_C.Handle Emote Collection Choice Focused
// 0x0008 (0x0008 - 0x0000)
struct WBP_EmoteCollection_Circular_C_Handle_Emote_Collection_Choice_Focused final
{
public:
	class UWBP_EmoteWheelChoice_CM_C*             EmoteChoice;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_EmoteCollection_Circular_C_Handle_Emote_Collection_Choice_Focused) == 0x000008, "Wrong alignment on WBP_EmoteCollection_Circular_C_Handle_Emote_Collection_Choice_Focused");
static_assert(sizeof(WBP_EmoteCollection_Circular_C_Handle_Emote_Collection_Choice_Focused) == 0x000008, "Wrong size on WBP_EmoteCollection_Circular_C_Handle_Emote_Collection_Choice_Focused");
static_assert(offsetof(WBP_EmoteCollection_Circular_C_Handle_Emote_Collection_Choice_Focused, EmoteChoice) == 0x000000, "Member 'WBP_EmoteCollection_Circular_C_Handle_Emote_Collection_Choice_Focused::EmoteChoice' has a wrong offset!");

// Function WBP_EmoteCollection_Circular.WBP_EmoteCollection_Circular_C.Handle Emote Entry Focused
// 0x0008 (0x0008 - 0x0000)
struct WBP_EmoteCollection_Circular_C_Handle_Emote_Entry_Focused final
{
public:
	class UWBP_EmoteEntry_CM_C*                   Emote_Entry;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_EmoteCollection_Circular_C_Handle_Emote_Entry_Focused) == 0x000008, "Wrong alignment on WBP_EmoteCollection_Circular_C_Handle_Emote_Entry_Focused");
static_assert(sizeof(WBP_EmoteCollection_Circular_C_Handle_Emote_Entry_Focused) == 0x000008, "Wrong size on WBP_EmoteCollection_Circular_C_Handle_Emote_Entry_Focused");
static_assert(offsetof(WBP_EmoteCollection_Circular_C_Handle_Emote_Entry_Focused, Emote_Entry) == 0x000000, "Member 'WBP_EmoteCollection_Circular_C_Handle_Emote_Entry_Focused::Emote_Entry' has a wrong offset!");

// Function WBP_EmoteCollection_Circular.WBP_EmoteCollection_Circular_C.Handle Emote Entry Selected
// 0x0050 (0x0050 - 0x0000)
struct WBP_EmoteCollection_Circular_C_Handle_Emote_Entry_Selected final
{
public:
	class UWBP_EmoteEntry_CM_C*                   Emote_Entry;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_59DF[0x4];                                     // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UUserWidget*>                    CallFunc_GetDisplayedEntryWidgets_ReturnValue;     // 0x0018(0x0010)(ConstParm, ReferenceParm, ContainsInstancedReference)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_59E0[0x4];                                     // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUserWidget*                            CallFunc_Array_Get_Item;                           // 0x0030(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_59E1[0x7];                                     // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_EmoteEntry_CM_C*                   K2Node_DynamicCast_AsWBP_Emote_Entry_CM;           // 0x0040(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ObjectObject_ReturnValue;        // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_EmoteCollection_Circular_C_Handle_Emote_Entry_Selected) == 0x000008, "Wrong alignment on WBP_EmoteCollection_Circular_C_Handle_Emote_Entry_Selected");
static_assert(sizeof(WBP_EmoteCollection_Circular_C_Handle_Emote_Entry_Selected) == 0x000050, "Wrong size on WBP_EmoteCollection_Circular_C_Handle_Emote_Entry_Selected");
static_assert(offsetof(WBP_EmoteCollection_Circular_C_Handle_Emote_Entry_Selected, Emote_Entry) == 0x000000, "Member 'WBP_EmoteCollection_Circular_C_Handle_Emote_Entry_Selected::Emote_Entry' has a wrong offset!");
static_assert(offsetof(WBP_EmoteCollection_Circular_C_Handle_Emote_Entry_Selected, Temp_int_Array_Index_Variable) == 0x000008, "Member 'WBP_EmoteCollection_Circular_C_Handle_Emote_Entry_Selected::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WBP_EmoteCollection_Circular_C_Handle_Emote_Entry_Selected, Temp_int_Loop_Counter_Variable) == 0x00000C, "Member 'WBP_EmoteCollection_Circular_C_Handle_Emote_Entry_Selected::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WBP_EmoteCollection_Circular_C_Handle_Emote_Entry_Selected, CallFunc_Add_IntInt_ReturnValue) == 0x000010, "Member 'WBP_EmoteCollection_Circular_C_Handle_Emote_Entry_Selected::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_EmoteCollection_Circular_C_Handle_Emote_Entry_Selected, CallFunc_GetDisplayedEntryWidgets_ReturnValue) == 0x000018, "Member 'WBP_EmoteCollection_Circular_C_Handle_Emote_Entry_Selected::CallFunc_GetDisplayedEntryWidgets_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_EmoteCollection_Circular_C_Handle_Emote_Entry_Selected, CallFunc_Array_Length_ReturnValue) == 0x000028, "Member 'WBP_EmoteCollection_Circular_C_Handle_Emote_Entry_Selected::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_EmoteCollection_Circular_C_Handle_Emote_Entry_Selected, CallFunc_Array_Get_Item) == 0x000030, "Member 'WBP_EmoteCollection_Circular_C_Handle_Emote_Entry_Selected::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_EmoteCollection_Circular_C_Handle_Emote_Entry_Selected, CallFunc_Less_IntInt_ReturnValue) == 0x000038, "Member 'WBP_EmoteCollection_Circular_C_Handle_Emote_Entry_Selected::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_EmoteCollection_Circular_C_Handle_Emote_Entry_Selected, K2Node_DynamicCast_AsWBP_Emote_Entry_CM) == 0x000040, "Member 'WBP_EmoteCollection_Circular_C_Handle_Emote_Entry_Selected::K2Node_DynamicCast_AsWBP_Emote_Entry_CM' has a wrong offset!");
static_assert(offsetof(WBP_EmoteCollection_Circular_C_Handle_Emote_Entry_Selected, K2Node_DynamicCast_bSuccess) == 0x000048, "Member 'WBP_EmoteCollection_Circular_C_Handle_Emote_Entry_Selected::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_EmoteCollection_Circular_C_Handle_Emote_Entry_Selected, CallFunc_NotEqual_ObjectObject_ReturnValue) == 0x000049, "Member 'WBP_EmoteCollection_Circular_C_Handle_Emote_Entry_Selected::CallFunc_NotEqual_ObjectObject_ReturnValue' has a wrong offset!");

// Function WBP_EmoteCollection_Circular.WBP_EmoteCollection_Circular_C.HandleClearAssignedEmoteInput
// 0x0018 (0x0018 - 0x0000)
struct WBP_EmoteCollection_Circular_C_HandleClearAssignedEmoteInput final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_59E2[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_EmoteWheelChoice_CM_C*             K2Node_DynamicCast_AsWBP_Emote_Wheel_Choice_CM;    // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_EmoteCollection_Circular_C_HandleClearAssignedEmoteInput) == 0x000008, "Wrong alignment on WBP_EmoteCollection_Circular_C_HandleClearAssignedEmoteInput");
static_assert(sizeof(WBP_EmoteCollection_Circular_C_HandleClearAssignedEmoteInput) == 0x000018, "Wrong size on WBP_EmoteCollection_Circular_C_HandleClearAssignedEmoteInput");
static_assert(offsetof(WBP_EmoteCollection_Circular_C_HandleClearAssignedEmoteInput, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'WBP_EmoteCollection_Circular_C_HandleClearAssignedEmoteInput::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_EmoteCollection_Circular_C_HandleClearAssignedEmoteInput, K2Node_DynamicCast_AsWBP_Emote_Wheel_Choice_CM) == 0x000008, "Member 'WBP_EmoteCollection_Circular_C_HandleClearAssignedEmoteInput::K2Node_DynamicCast_AsWBP_Emote_Wheel_Choice_CM' has a wrong offset!");
static_assert(offsetof(WBP_EmoteCollection_Circular_C_HandleClearAssignedEmoteInput, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'WBP_EmoteCollection_Circular_C_HandleClearAssignedEmoteInput::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function WBP_EmoteCollection_Circular.WBP_EmoteCollection_Circular_C.Initialize Tracking and References
// 0x0040 (0x0040 - 0x0000)
struct WBP_EmoteCollection_Circular_C_Initialize_Tracking_and_References final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_59E3[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_EmoteWheelChoice_CM_C*             CallFunc_Array_Get_Item;                           // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_59E4[0x3];                                     // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<TSoftObjectPtr<class UEmoteDataAsset>> CallFunc_GetAllEmotes_AllEmotes;                   // 0x0020(0x0010)(ReferenceParm)
	TArray<class UWBP_EmoteWheelChoice_CM_C*>     K2Node_MakeArray_Array;                            // 0x0030(0x0010)(ReferenceParm, ContainsInstancedReference)
};
static_assert(alignof(WBP_EmoteCollection_Circular_C_Initialize_Tracking_and_References) == 0x000008, "Wrong alignment on WBP_EmoteCollection_Circular_C_Initialize_Tracking_and_References");
static_assert(sizeof(WBP_EmoteCollection_Circular_C_Initialize_Tracking_and_References) == 0x000040, "Wrong size on WBP_EmoteCollection_Circular_C_Initialize_Tracking_and_References");
static_assert(offsetof(WBP_EmoteCollection_Circular_C_Initialize_Tracking_and_References, Temp_int_Array_Index_Variable) == 0x000000, "Member 'WBP_EmoteCollection_Circular_C_Initialize_Tracking_and_References::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WBP_EmoteCollection_Circular_C_Initialize_Tracking_and_References, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'WBP_EmoteCollection_Circular_C_Initialize_Tracking_and_References::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WBP_EmoteCollection_Circular_C_Initialize_Tracking_and_References, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'WBP_EmoteCollection_Circular_C_Initialize_Tracking_and_References::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_EmoteCollection_Circular_C_Initialize_Tracking_and_References, CallFunc_Array_Get_Item) == 0x000010, "Member 'WBP_EmoteCollection_Circular_C_Initialize_Tracking_and_References::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_EmoteCollection_Circular_C_Initialize_Tracking_and_References, CallFunc_Array_Length_ReturnValue) == 0x000018, "Member 'WBP_EmoteCollection_Circular_C_Initialize_Tracking_and_References::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_EmoteCollection_Circular_C_Initialize_Tracking_and_References, CallFunc_Less_IntInt_ReturnValue) == 0x00001C, "Member 'WBP_EmoteCollection_Circular_C_Initialize_Tracking_and_References::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_EmoteCollection_Circular_C_Initialize_Tracking_and_References, CallFunc_GetAllEmotes_AllEmotes) == 0x000020, "Member 'WBP_EmoteCollection_Circular_C_Initialize_Tracking_and_References::CallFunc_GetAllEmotes_AllEmotes' has a wrong offset!");
static_assert(offsetof(WBP_EmoteCollection_Circular_C_Initialize_Tracking_and_References, K2Node_MakeArray_Array) == 0x000030, "Member 'WBP_EmoteCollection_Circular_C_Initialize_Tracking_and_References::K2Node_MakeArray_Array' has a wrong offset!");

// Function WBP_EmoteCollection_Circular.WBP_EmoteCollection_Circular_C.InpActEvt_IA_UI_Back_Cancel_K2Node_EnhancedInputActionEvent_2
// 0x0030 (0x0030 - 0x0000)
struct WBP_EmoteCollection_Circular_C_InpActEvt_IA_UI_Back_Cancel_K2Node_EnhancedInputActionEvent_2 final
{
public:
	struct FInputActionValue                      ActionValue;                                       // 0x0000(0x0020)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	float                                         ElapsedTime;                                       // 0x0020(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         TriggeredTime;                                     // 0x0024(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	const class UInputAction*                     SourceAction;                                      // 0x0028(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_EmoteCollection_Circular_C_InpActEvt_IA_UI_Back_Cancel_K2Node_EnhancedInputActionEvent_2) == 0x000008, "Wrong alignment on WBP_EmoteCollection_Circular_C_InpActEvt_IA_UI_Back_Cancel_K2Node_EnhancedInputActionEvent_2");
static_assert(sizeof(WBP_EmoteCollection_Circular_C_InpActEvt_IA_UI_Back_Cancel_K2Node_EnhancedInputActionEvent_2) == 0x000030, "Wrong size on WBP_EmoteCollection_Circular_C_InpActEvt_IA_UI_Back_Cancel_K2Node_EnhancedInputActionEvent_2");
static_assert(offsetof(WBP_EmoteCollection_Circular_C_InpActEvt_IA_UI_Back_Cancel_K2Node_EnhancedInputActionEvent_2, ActionValue) == 0x000000, "Member 'WBP_EmoteCollection_Circular_C_InpActEvt_IA_UI_Back_Cancel_K2Node_EnhancedInputActionEvent_2::ActionValue' has a wrong offset!");
static_assert(offsetof(WBP_EmoteCollection_Circular_C_InpActEvt_IA_UI_Back_Cancel_K2Node_EnhancedInputActionEvent_2, ElapsedTime) == 0x000020, "Member 'WBP_EmoteCollection_Circular_C_InpActEvt_IA_UI_Back_Cancel_K2Node_EnhancedInputActionEvent_2::ElapsedTime' has a wrong offset!");
static_assert(offsetof(WBP_EmoteCollection_Circular_C_InpActEvt_IA_UI_Back_Cancel_K2Node_EnhancedInputActionEvent_2, TriggeredTime) == 0x000024, "Member 'WBP_EmoteCollection_Circular_C_InpActEvt_IA_UI_Back_Cancel_K2Node_EnhancedInputActionEvent_2::TriggeredTime' has a wrong offset!");
static_assert(offsetof(WBP_EmoteCollection_Circular_C_InpActEvt_IA_UI_Back_Cancel_K2Node_EnhancedInputActionEvent_2, SourceAction) == 0x000028, "Member 'WBP_EmoteCollection_Circular_C_InpActEvt_IA_UI_Back_Cancel_K2Node_EnhancedInputActionEvent_2::SourceAction' has a wrong offset!");

// Function WBP_EmoteCollection_Circular.WBP_EmoteCollection_Circular_C.InpActEvt_IA_UI_Confirm_Select_K2Node_EnhancedInputActionEvent_3
// 0x0030 (0x0030 - 0x0000)
struct WBP_EmoteCollection_Circular_C_InpActEvt_IA_UI_Confirm_Select_K2Node_EnhancedInputActionEvent_3 final
{
public:
	struct FInputActionValue                      ActionValue;                                       // 0x0000(0x0020)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	float                                         ElapsedTime;                                       // 0x0020(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         TriggeredTime;                                     // 0x0024(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	const class UInputAction*                     SourceAction;                                      // 0x0028(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_EmoteCollection_Circular_C_InpActEvt_IA_UI_Confirm_Select_K2Node_EnhancedInputActionEvent_3) == 0x000008, "Wrong alignment on WBP_EmoteCollection_Circular_C_InpActEvt_IA_UI_Confirm_Select_K2Node_EnhancedInputActionEvent_3");
static_assert(sizeof(WBP_EmoteCollection_Circular_C_InpActEvt_IA_UI_Confirm_Select_K2Node_EnhancedInputActionEvent_3) == 0x000030, "Wrong size on WBP_EmoteCollection_Circular_C_InpActEvt_IA_UI_Confirm_Select_K2Node_EnhancedInputActionEvent_3");
static_assert(offsetof(WBP_EmoteCollection_Circular_C_InpActEvt_IA_UI_Confirm_Select_K2Node_EnhancedInputActionEvent_3, ActionValue) == 0x000000, "Member 'WBP_EmoteCollection_Circular_C_InpActEvt_IA_UI_Confirm_Select_K2Node_EnhancedInputActionEvent_3::ActionValue' has a wrong offset!");
static_assert(offsetof(WBP_EmoteCollection_Circular_C_InpActEvt_IA_UI_Confirm_Select_K2Node_EnhancedInputActionEvent_3, ElapsedTime) == 0x000020, "Member 'WBP_EmoteCollection_Circular_C_InpActEvt_IA_UI_Confirm_Select_K2Node_EnhancedInputActionEvent_3::ElapsedTime' has a wrong offset!");
static_assert(offsetof(WBP_EmoteCollection_Circular_C_InpActEvt_IA_UI_Confirm_Select_K2Node_EnhancedInputActionEvent_3, TriggeredTime) == 0x000024, "Member 'WBP_EmoteCollection_Circular_C_InpActEvt_IA_UI_Confirm_Select_K2Node_EnhancedInputActionEvent_3::TriggeredTime' has a wrong offset!");
static_assert(offsetof(WBP_EmoteCollection_Circular_C_InpActEvt_IA_UI_Confirm_Select_K2Node_EnhancedInputActionEvent_3, SourceAction) == 0x000028, "Member 'WBP_EmoteCollection_Circular_C_InpActEvt_IA_UI_Confirm_Select_K2Node_EnhancedInputActionEvent_3::SourceAction' has a wrong offset!");

// Function WBP_EmoteCollection_Circular.WBP_EmoteCollection_Circular_C.InpActEvt_IA_UI_RightThumbstick_Y_K2Node_EnhancedInputActionEvent_1
// 0x0030 (0x0030 - 0x0000)
struct WBP_EmoteCollection_Circular_C_InpActEvt_IA_UI_RightThumbstick_Y_K2Node_EnhancedInputActionEvent_1 final
{
public:
	struct FInputActionValue                      ActionValue;                                       // 0x0000(0x0020)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	float                                         ElapsedTime;                                       // 0x0020(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         TriggeredTime;                                     // 0x0024(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	const class UInputAction*                     SourceAction;                                      // 0x0028(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_EmoteCollection_Circular_C_InpActEvt_IA_UI_RightThumbstick_Y_K2Node_EnhancedInputActionEvent_1) == 0x000008, "Wrong alignment on WBP_EmoteCollection_Circular_C_InpActEvt_IA_UI_RightThumbstick_Y_K2Node_EnhancedInputActionEvent_1");
static_assert(sizeof(WBP_EmoteCollection_Circular_C_InpActEvt_IA_UI_RightThumbstick_Y_K2Node_EnhancedInputActionEvent_1) == 0x000030, "Wrong size on WBP_EmoteCollection_Circular_C_InpActEvt_IA_UI_RightThumbstick_Y_K2Node_EnhancedInputActionEvent_1");
static_assert(offsetof(WBP_EmoteCollection_Circular_C_InpActEvt_IA_UI_RightThumbstick_Y_K2Node_EnhancedInputActionEvent_1, ActionValue) == 0x000000, "Member 'WBP_EmoteCollection_Circular_C_InpActEvt_IA_UI_RightThumbstick_Y_K2Node_EnhancedInputActionEvent_1::ActionValue' has a wrong offset!");
static_assert(offsetof(WBP_EmoteCollection_Circular_C_InpActEvt_IA_UI_RightThumbstick_Y_K2Node_EnhancedInputActionEvent_1, ElapsedTime) == 0x000020, "Member 'WBP_EmoteCollection_Circular_C_InpActEvt_IA_UI_RightThumbstick_Y_K2Node_EnhancedInputActionEvent_1::ElapsedTime' has a wrong offset!");
static_assert(offsetof(WBP_EmoteCollection_Circular_C_InpActEvt_IA_UI_RightThumbstick_Y_K2Node_EnhancedInputActionEvent_1, TriggeredTime) == 0x000024, "Member 'WBP_EmoteCollection_Circular_C_InpActEvt_IA_UI_RightThumbstick_Y_K2Node_EnhancedInputActionEvent_1::TriggeredTime' has a wrong offset!");
static_assert(offsetof(WBP_EmoteCollection_Circular_C_InpActEvt_IA_UI_RightThumbstick_Y_K2Node_EnhancedInputActionEvent_1, SourceAction) == 0x000028, "Member 'WBP_EmoteCollection_Circular_C_InpActEvt_IA_UI_RightThumbstick_Y_K2Node_EnhancedInputActionEvent_1::SourceAction' has a wrong offset!");

// Function WBP_EmoteCollection_Circular.WBP_EmoteCollection_Circular_C.InpActEvt_IA_UI_SecondaryAction_K2Node_EnhancedInputActionEvent_4
// 0x0030 (0x0030 - 0x0000)
struct WBP_EmoteCollection_Circular_C_InpActEvt_IA_UI_SecondaryAction_K2Node_EnhancedInputActionEvent_4 final
{
public:
	struct FInputActionValue                      ActionValue;                                       // 0x0000(0x0020)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	float                                         ElapsedTime;                                       // 0x0020(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         TriggeredTime;                                     // 0x0024(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	const class UInputAction*                     SourceAction;                                      // 0x0028(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_EmoteCollection_Circular_C_InpActEvt_IA_UI_SecondaryAction_K2Node_EnhancedInputActionEvent_4) == 0x000008, "Wrong alignment on WBP_EmoteCollection_Circular_C_InpActEvt_IA_UI_SecondaryAction_K2Node_EnhancedInputActionEvent_4");
static_assert(sizeof(WBP_EmoteCollection_Circular_C_InpActEvt_IA_UI_SecondaryAction_K2Node_EnhancedInputActionEvent_4) == 0x000030, "Wrong size on WBP_EmoteCollection_Circular_C_InpActEvt_IA_UI_SecondaryAction_K2Node_EnhancedInputActionEvent_4");
static_assert(offsetof(WBP_EmoteCollection_Circular_C_InpActEvt_IA_UI_SecondaryAction_K2Node_EnhancedInputActionEvent_4, ActionValue) == 0x000000, "Member 'WBP_EmoteCollection_Circular_C_InpActEvt_IA_UI_SecondaryAction_K2Node_EnhancedInputActionEvent_4::ActionValue' has a wrong offset!");
static_assert(offsetof(WBP_EmoteCollection_Circular_C_InpActEvt_IA_UI_SecondaryAction_K2Node_EnhancedInputActionEvent_4, ElapsedTime) == 0x000020, "Member 'WBP_EmoteCollection_Circular_C_InpActEvt_IA_UI_SecondaryAction_K2Node_EnhancedInputActionEvent_4::ElapsedTime' has a wrong offset!");
static_assert(offsetof(WBP_EmoteCollection_Circular_C_InpActEvt_IA_UI_SecondaryAction_K2Node_EnhancedInputActionEvent_4, TriggeredTime) == 0x000024, "Member 'WBP_EmoteCollection_Circular_C_InpActEvt_IA_UI_SecondaryAction_K2Node_EnhancedInputActionEvent_4::TriggeredTime' has a wrong offset!");
static_assert(offsetof(WBP_EmoteCollection_Circular_C_InpActEvt_IA_UI_SecondaryAction_K2Node_EnhancedInputActionEvent_4, SourceAction) == 0x000028, "Member 'WBP_EmoteCollection_Circular_C_InpActEvt_IA_UI_SecondaryAction_K2Node_EnhancedInputActionEvent_4::SourceAction' has a wrong offset!");

// Function WBP_EmoteCollection_Circular.WBP_EmoteCollection_Circular_C.InpActEvt_IA_UI_SwitchItem_K2Node_EnhancedInputActionEvent_0
// 0x0030 (0x0030 - 0x0000)
struct WBP_EmoteCollection_Circular_C_InpActEvt_IA_UI_SwitchItem_K2Node_EnhancedInputActionEvent_0 final
{
public:
	struct FInputActionValue                      ActionValue;                                       // 0x0000(0x0020)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	float                                         ElapsedTime;                                       // 0x0020(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         TriggeredTime;                                     // 0x0024(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	const class UInputAction*                     SourceAction;                                      // 0x0028(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_EmoteCollection_Circular_C_InpActEvt_IA_UI_SwitchItem_K2Node_EnhancedInputActionEvent_0) == 0x000008, "Wrong alignment on WBP_EmoteCollection_Circular_C_InpActEvt_IA_UI_SwitchItem_K2Node_EnhancedInputActionEvent_0");
static_assert(sizeof(WBP_EmoteCollection_Circular_C_InpActEvt_IA_UI_SwitchItem_K2Node_EnhancedInputActionEvent_0) == 0x000030, "Wrong size on WBP_EmoteCollection_Circular_C_InpActEvt_IA_UI_SwitchItem_K2Node_EnhancedInputActionEvent_0");
static_assert(offsetof(WBP_EmoteCollection_Circular_C_InpActEvt_IA_UI_SwitchItem_K2Node_EnhancedInputActionEvent_0, ActionValue) == 0x000000, "Member 'WBP_EmoteCollection_Circular_C_InpActEvt_IA_UI_SwitchItem_K2Node_EnhancedInputActionEvent_0::ActionValue' has a wrong offset!");
static_assert(offsetof(WBP_EmoteCollection_Circular_C_InpActEvt_IA_UI_SwitchItem_K2Node_EnhancedInputActionEvent_0, ElapsedTime) == 0x000020, "Member 'WBP_EmoteCollection_Circular_C_InpActEvt_IA_UI_SwitchItem_K2Node_EnhancedInputActionEvent_0::ElapsedTime' has a wrong offset!");
static_assert(offsetof(WBP_EmoteCollection_Circular_C_InpActEvt_IA_UI_SwitchItem_K2Node_EnhancedInputActionEvent_0, TriggeredTime) == 0x000024, "Member 'WBP_EmoteCollection_Circular_C_InpActEvt_IA_UI_SwitchItem_K2Node_EnhancedInputActionEvent_0::TriggeredTime' has a wrong offset!");
static_assert(offsetof(WBP_EmoteCollection_Circular_C_InpActEvt_IA_UI_SwitchItem_K2Node_EnhancedInputActionEvent_0, SourceAction) == 0x000028, "Member 'WBP_EmoteCollection_Circular_C_InpActEvt_IA_UI_SwitchItem_K2Node_EnhancedInputActionEvent_0::SourceAction' has a wrong offset!");

// Function WBP_EmoteCollection_Circular.WBP_EmoteCollection_Circular_C.IsEmoteOnWheel
// 0x0040 (0x0040 - 0x0000)
struct WBP_EmoteCollection_Circular_C_IsEmoteOnWheel final
{
public:
	struct FGuid                                  EmoteId;                                           // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_59E5[0x3];                                     // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWBP_EmoteWheelChoice_CM_C*             CallFunc_Array_Get_Item;                           // 0x0020(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGuid                                  CallFunc_GetAssignedEmoteId_Emote_Id;              // 0x002C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_GuidGuid_ReturnValue;          // 0x003D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_EmoteCollection_Circular_C_IsEmoteOnWheel) == 0x000008, "Wrong alignment on WBP_EmoteCollection_Circular_C_IsEmoteOnWheel");
static_assert(sizeof(WBP_EmoteCollection_Circular_C_IsEmoteOnWheel) == 0x000040, "Wrong size on WBP_EmoteCollection_Circular_C_IsEmoteOnWheel");
static_assert(offsetof(WBP_EmoteCollection_Circular_C_IsEmoteOnWheel, EmoteId) == 0x000000, "Member 'WBP_EmoteCollection_Circular_C_IsEmoteOnWheel::EmoteId' has a wrong offset!");
static_assert(offsetof(WBP_EmoteCollection_Circular_C_IsEmoteOnWheel, ReturnValue) == 0x000010, "Member 'WBP_EmoteCollection_Circular_C_IsEmoteOnWheel::ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_EmoteCollection_Circular_C_IsEmoteOnWheel, Temp_int_Array_Index_Variable) == 0x000014, "Member 'WBP_EmoteCollection_Circular_C_IsEmoteOnWheel::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WBP_EmoteCollection_Circular_C_IsEmoteOnWheel, Temp_int_Loop_Counter_Variable) == 0x000018, "Member 'WBP_EmoteCollection_Circular_C_IsEmoteOnWheel::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WBP_EmoteCollection_Circular_C_IsEmoteOnWheel, CallFunc_Add_IntInt_ReturnValue) == 0x00001C, "Member 'WBP_EmoteCollection_Circular_C_IsEmoteOnWheel::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_EmoteCollection_Circular_C_IsEmoteOnWheel, CallFunc_Array_Get_Item) == 0x000020, "Member 'WBP_EmoteCollection_Circular_C_IsEmoteOnWheel::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_EmoteCollection_Circular_C_IsEmoteOnWheel, CallFunc_Array_Length_ReturnValue) == 0x000028, "Member 'WBP_EmoteCollection_Circular_C_IsEmoteOnWheel::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_EmoteCollection_Circular_C_IsEmoteOnWheel, CallFunc_GetAssignedEmoteId_Emote_Id) == 0x00002C, "Member 'WBP_EmoteCollection_Circular_C_IsEmoteOnWheel::CallFunc_GetAssignedEmoteId_Emote_Id' has a wrong offset!");
static_assert(offsetof(WBP_EmoteCollection_Circular_C_IsEmoteOnWheel, CallFunc_Less_IntInt_ReturnValue) == 0x00003C, "Member 'WBP_EmoteCollection_Circular_C_IsEmoteOnWheel::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_EmoteCollection_Circular_C_IsEmoteOnWheel, CallFunc_EqualEqual_GuidGuid_ReturnValue) == 0x00003D, "Member 'WBP_EmoteCollection_Circular_C_IsEmoteOnWheel::CallFunc_EqualEqual_GuidGuid_ReturnValue' has a wrong offset!");

// Function WBP_EmoteCollection_Circular.WBP_EmoteCollection_Circular_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct WBP_EmoteCollection_Circular_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_EmoteCollection_Circular_C_PreConstruct) == 0x000001, "Wrong alignment on WBP_EmoteCollection_Circular_C_PreConstruct");
static_assert(sizeof(WBP_EmoteCollection_Circular_C_PreConstruct) == 0x000001, "Wrong size on WBP_EmoteCollection_Circular_C_PreConstruct");
static_assert(offsetof(WBP_EmoteCollection_Circular_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'WBP_EmoteCollection_Circular_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function WBP_EmoteCollection_Circular.WBP_EmoteCollection_Circular_C.RefreshEmoteCollectionBorders
// 0x0048 (0x0048 - 0x0000)
struct WBP_EmoteCollection_Circular_C_RefreshEmoteCollectionBorders final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_59E6[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UObject*>                        CallFunc_GetListItems_ReturnValue;                 // 0x0010(0x0010)(ConstParm, ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_59E7[0x4];                                     // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_Array_Get_Item;                           // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_59E8[0x7];                                     // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_EmoteItemObject_CM_C*               K2Node_DynamicCast_AsBP_Emote_Item_Object_CM;      // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_EmoteCollection_Circular_C_RefreshEmoteCollectionBorders) == 0x000008, "Wrong alignment on WBP_EmoteCollection_Circular_C_RefreshEmoteCollectionBorders");
static_assert(sizeof(WBP_EmoteCollection_Circular_C_RefreshEmoteCollectionBorders) == 0x000048, "Wrong size on WBP_EmoteCollection_Circular_C_RefreshEmoteCollectionBorders");
static_assert(offsetof(WBP_EmoteCollection_Circular_C_RefreshEmoteCollectionBorders, Temp_int_Array_Index_Variable) == 0x000000, "Member 'WBP_EmoteCollection_Circular_C_RefreshEmoteCollectionBorders::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WBP_EmoteCollection_Circular_C_RefreshEmoteCollectionBorders, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'WBP_EmoteCollection_Circular_C_RefreshEmoteCollectionBorders::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WBP_EmoteCollection_Circular_C_RefreshEmoteCollectionBorders, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'WBP_EmoteCollection_Circular_C_RefreshEmoteCollectionBorders::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_EmoteCollection_Circular_C_RefreshEmoteCollectionBorders, CallFunc_GetListItems_ReturnValue) == 0x000010, "Member 'WBP_EmoteCollection_Circular_C_RefreshEmoteCollectionBorders::CallFunc_GetListItems_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_EmoteCollection_Circular_C_RefreshEmoteCollectionBorders, CallFunc_Array_Length_ReturnValue) == 0x000020, "Member 'WBP_EmoteCollection_Circular_C_RefreshEmoteCollectionBorders::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_EmoteCollection_Circular_C_RefreshEmoteCollectionBorders, CallFunc_Array_Get_Item) == 0x000028, "Member 'WBP_EmoteCollection_Circular_C_RefreshEmoteCollectionBorders::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_EmoteCollection_Circular_C_RefreshEmoteCollectionBorders, CallFunc_Less_IntInt_ReturnValue) == 0x000030, "Member 'WBP_EmoteCollection_Circular_C_RefreshEmoteCollectionBorders::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_EmoteCollection_Circular_C_RefreshEmoteCollectionBorders, K2Node_DynamicCast_AsBP_Emote_Item_Object_CM) == 0x000038, "Member 'WBP_EmoteCollection_Circular_C_RefreshEmoteCollectionBorders::K2Node_DynamicCast_AsBP_Emote_Item_Object_CM' has a wrong offset!");
static_assert(offsetof(WBP_EmoteCollection_Circular_C_RefreshEmoteCollectionBorders, K2Node_DynamicCast_bSuccess) == 0x000040, "Member 'WBP_EmoteCollection_Circular_C_RefreshEmoteCollectionBorders::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_EmoteCollection_Circular_C_RefreshEmoteCollectionBorders, CallFunc_IsValid_ReturnValue) == 0x000041, "Member 'WBP_EmoteCollection_Circular_C_RefreshEmoteCollectionBorders::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function WBP_EmoteCollection_Circular.WBP_EmoteCollection_Circular_C.ReloadEmoteCollection
// 0x0060 (0x0060 - 0x0000)
struct WBP_EmoteCollection_Circular_C_ReloadEmoteCollection final
{
public:
	class UEmoteDataAsset*                        EmoteDataAsset;                                    // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_59E9[0x4];                                     // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_EmoteItemObject_CM_C*               CallFunc_SpawnObject_ReturnValue;                  // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<TSoftObjectPtr<class UEmoteDataAsset>> CallFunc_GetEmoteCollection_EmoteCollection;       // 0x0020(0x0010)(ReferenceParm)
	TSoftObjectPtr<class UEmoteDataAsset>         CallFunc_Array_Get_Item;                           // 0x0030(0x0028)(HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x005C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_EmoteCollection_Circular_C_ReloadEmoteCollection) == 0x000008, "Wrong alignment on WBP_EmoteCollection_Circular_C_ReloadEmoteCollection");
static_assert(sizeof(WBP_EmoteCollection_Circular_C_ReloadEmoteCollection) == 0x000060, "Wrong size on WBP_EmoteCollection_Circular_C_ReloadEmoteCollection");
static_assert(offsetof(WBP_EmoteCollection_Circular_C_ReloadEmoteCollection, EmoteDataAsset) == 0x000000, "Member 'WBP_EmoteCollection_Circular_C_ReloadEmoteCollection::EmoteDataAsset' has a wrong offset!");
static_assert(offsetof(WBP_EmoteCollection_Circular_C_ReloadEmoteCollection, Temp_int_Array_Index_Variable) == 0x000008, "Member 'WBP_EmoteCollection_Circular_C_ReloadEmoteCollection::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WBP_EmoteCollection_Circular_C_ReloadEmoteCollection, Temp_int_Loop_Counter_Variable) == 0x00000C, "Member 'WBP_EmoteCollection_Circular_C_ReloadEmoteCollection::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WBP_EmoteCollection_Circular_C_ReloadEmoteCollection, CallFunc_Add_IntInt_ReturnValue) == 0x000010, "Member 'WBP_EmoteCollection_Circular_C_ReloadEmoteCollection::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_EmoteCollection_Circular_C_ReloadEmoteCollection, CallFunc_SpawnObject_ReturnValue) == 0x000018, "Member 'WBP_EmoteCollection_Circular_C_ReloadEmoteCollection::CallFunc_SpawnObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_EmoteCollection_Circular_C_ReloadEmoteCollection, CallFunc_GetEmoteCollection_EmoteCollection) == 0x000020, "Member 'WBP_EmoteCollection_Circular_C_ReloadEmoteCollection::CallFunc_GetEmoteCollection_EmoteCollection' has a wrong offset!");
static_assert(offsetof(WBP_EmoteCollection_Circular_C_ReloadEmoteCollection, CallFunc_Array_Get_Item) == 0x000030, "Member 'WBP_EmoteCollection_Circular_C_ReloadEmoteCollection::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_EmoteCollection_Circular_C_ReloadEmoteCollection, CallFunc_Array_Length_ReturnValue) == 0x000058, "Member 'WBP_EmoteCollection_Circular_C_ReloadEmoteCollection::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_EmoteCollection_Circular_C_ReloadEmoteCollection, CallFunc_Less_IntInt_ReturnValue) == 0x00005C, "Member 'WBP_EmoteCollection_Circular_C_ReloadEmoteCollection::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function WBP_EmoteCollection_Circular.WBP_EmoteCollection_Circular_C.Selecte Emote Choice
// 0x0020 (0x0020 - 0x0000)
struct WBP_EmoteCollection_Circular_C_Selecte_Emote_Choice final
{
public:
	class UWBP_EmoteWheelChoice_CM_C*             Focused_Wheel_Choice;                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Update_Emote_Wheel_Choice_bUpdate;        // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_59EA[0x7];                                     // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UEmoteDataAsset*                        CallFunc_GetAssignedEmoteFN_Emote;                 // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetAssignedEmoteFN_Is_Valid;              // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_EmoteCollection_Circular_C_Selecte_Emote_Choice) == 0x000008, "Wrong alignment on WBP_EmoteCollection_Circular_C_Selecte_Emote_Choice");
static_assert(sizeof(WBP_EmoteCollection_Circular_C_Selecte_Emote_Choice) == 0x000020, "Wrong size on WBP_EmoteCollection_Circular_C_Selecte_Emote_Choice");
static_assert(offsetof(WBP_EmoteCollection_Circular_C_Selecte_Emote_Choice, Focused_Wheel_Choice) == 0x000000, "Member 'WBP_EmoteCollection_Circular_C_Selecte_Emote_Choice::Focused_Wheel_Choice' has a wrong offset!");
static_assert(offsetof(WBP_EmoteCollection_Circular_C_Selecte_Emote_Choice, CallFunc_Update_Emote_Wheel_Choice_bUpdate) == 0x000008, "Member 'WBP_EmoteCollection_Circular_C_Selecte_Emote_Choice::CallFunc_Update_Emote_Wheel_Choice_bUpdate' has a wrong offset!");
static_assert(offsetof(WBP_EmoteCollection_Circular_C_Selecte_Emote_Choice, CallFunc_GetAssignedEmoteFN_Emote) == 0x000010, "Member 'WBP_EmoteCollection_Circular_C_Selecte_Emote_Choice::CallFunc_GetAssignedEmoteFN_Emote' has a wrong offset!");
static_assert(offsetof(WBP_EmoteCollection_Circular_C_Selecte_Emote_Choice, CallFunc_GetAssignedEmoteFN_Is_Valid) == 0x000018, "Member 'WBP_EmoteCollection_Circular_C_Selecte_Emote_Choice::CallFunc_GetAssignedEmoteFN_Is_Valid' has a wrong offset!");

// Function WBP_EmoteCollection_Circular.WBP_EmoteCollection_Circular_C.Selecte Emote Entry
// 0x0010 (0x0010 - 0x0000)
struct WBP_EmoteCollection_Circular_C_Selecte_Emote_Entry final
{
public:
	class UWBP_EmoteEntry_CM_C*                   Emote_Entry;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_EmoteCollection_Circular_C_Selecte_Emote_Entry) == 0x000008, "Wrong alignment on WBP_EmoteCollection_Circular_C_Selecte_Emote_Entry");
static_assert(sizeof(WBP_EmoteCollection_Circular_C_Selecte_Emote_Entry) == 0x000010, "Wrong size on WBP_EmoteCollection_Circular_C_Selecte_Emote_Entry");
static_assert(offsetof(WBP_EmoteCollection_Circular_C_Selecte_Emote_Entry, Emote_Entry) == 0x000000, "Member 'WBP_EmoteCollection_Circular_C_Selecte_Emote_Entry::Emote_Entry' has a wrong offset!");
static_assert(offsetof(WBP_EmoteCollection_Circular_C_Selecte_Emote_Entry, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'WBP_EmoteCollection_Circular_C_Selecte_Emote_Entry::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_EmoteCollection_Circular_C_Selecte_Emote_Entry, CallFunc_BooleanAND_ReturnValue) == 0x000009, "Member 'WBP_EmoteCollection_Circular_C_Selecte_Emote_Entry::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function WBP_EmoteCollection_Circular.WBP_EmoteCollection_Circular_C.Update Button Enable State
// 0x0060 (0x0060 - 0x0000)
struct WBP_EmoteCollection_Circular_C_Update_Button_Enable_State final
{
public:
	class UUserWidget*                            Button;                                            // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDesktop_ReturnValue;                    // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDesktop_ReturnValue_1;                  // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_59EB[0x6];                                     // 0x000A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_EmoteEntry_CM_C*                   K2Node_DynamicCast_AsWBP_Emote_Entry_CM;           // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_59EC[0x7];                                     // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_EmoteWheelChoice_CM_C*             K2Node_DynamicCast_AsWBP_Emote_Wheel_Choice_CM;    // 0x0020(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_59ED[0x7];                                     // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_EmoteWheelChoice_CM_C*             K2Node_DynamicCast_AsWBP_Emote_Wheel_Choice_CM_1;  // 0x0030(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_59EE[0x7];                                     // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UEmoteDataAsset*                        CallFunc_GetAssignedEmoteFN_Emote;                 // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetAssignedEmoteFN_Is_Valid;              // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_59EF[0x7];                                     // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UEmoteDataAsset*                        CallFunc_GetAssignedEmoteFN_Emote_1;               // 0x0050(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetAssignedEmoteFN_Is_Valid_1;            // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_EmoteCollection_Circular_C_Update_Button_Enable_State) == 0x000008, "Wrong alignment on WBP_EmoteCollection_Circular_C_Update_Button_Enable_State");
static_assert(sizeof(WBP_EmoteCollection_Circular_C_Update_Button_Enable_State) == 0x000060, "Wrong size on WBP_EmoteCollection_Circular_C_Update_Button_Enable_State");
static_assert(offsetof(WBP_EmoteCollection_Circular_C_Update_Button_Enable_State, Button) == 0x000000, "Member 'WBP_EmoteCollection_Circular_C_Update_Button_Enable_State::Button' has a wrong offset!");
static_assert(offsetof(WBP_EmoteCollection_Circular_C_Update_Button_Enable_State, CallFunc_IsDesktop_ReturnValue) == 0x000008, "Member 'WBP_EmoteCollection_Circular_C_Update_Button_Enable_State::CallFunc_IsDesktop_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_EmoteCollection_Circular_C_Update_Button_Enable_State, CallFunc_IsDesktop_ReturnValue_1) == 0x000009, "Member 'WBP_EmoteCollection_Circular_C_Update_Button_Enable_State::CallFunc_IsDesktop_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_EmoteCollection_Circular_C_Update_Button_Enable_State, K2Node_DynamicCast_AsWBP_Emote_Entry_CM) == 0x000010, "Member 'WBP_EmoteCollection_Circular_C_Update_Button_Enable_State::K2Node_DynamicCast_AsWBP_Emote_Entry_CM' has a wrong offset!");
static_assert(offsetof(WBP_EmoteCollection_Circular_C_Update_Button_Enable_State, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'WBP_EmoteCollection_Circular_C_Update_Button_Enable_State::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_EmoteCollection_Circular_C_Update_Button_Enable_State, K2Node_DynamicCast_AsWBP_Emote_Wheel_Choice_CM) == 0x000020, "Member 'WBP_EmoteCollection_Circular_C_Update_Button_Enable_State::K2Node_DynamicCast_AsWBP_Emote_Wheel_Choice_CM' has a wrong offset!");
static_assert(offsetof(WBP_EmoteCollection_Circular_C_Update_Button_Enable_State, K2Node_DynamicCast_bSuccess_1) == 0x000028, "Member 'WBP_EmoteCollection_Circular_C_Update_Button_Enable_State::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(WBP_EmoteCollection_Circular_C_Update_Button_Enable_State, K2Node_DynamicCast_AsWBP_Emote_Wheel_Choice_CM_1) == 0x000030, "Member 'WBP_EmoteCollection_Circular_C_Update_Button_Enable_State::K2Node_DynamicCast_AsWBP_Emote_Wheel_Choice_CM_1' has a wrong offset!");
static_assert(offsetof(WBP_EmoteCollection_Circular_C_Update_Button_Enable_State, K2Node_DynamicCast_bSuccess_2) == 0x000038, "Member 'WBP_EmoteCollection_Circular_C_Update_Button_Enable_State::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(WBP_EmoteCollection_Circular_C_Update_Button_Enable_State, CallFunc_GetAssignedEmoteFN_Emote) == 0x000040, "Member 'WBP_EmoteCollection_Circular_C_Update_Button_Enable_State::CallFunc_GetAssignedEmoteFN_Emote' has a wrong offset!");
static_assert(offsetof(WBP_EmoteCollection_Circular_C_Update_Button_Enable_State, CallFunc_GetAssignedEmoteFN_Is_Valid) == 0x000048, "Member 'WBP_EmoteCollection_Circular_C_Update_Button_Enable_State::CallFunc_GetAssignedEmoteFN_Is_Valid' has a wrong offset!");
static_assert(offsetof(WBP_EmoteCollection_Circular_C_Update_Button_Enable_State, CallFunc_GetAssignedEmoteFN_Emote_1) == 0x000050, "Member 'WBP_EmoteCollection_Circular_C_Update_Button_Enable_State::CallFunc_GetAssignedEmoteFN_Emote_1' has a wrong offset!");
static_assert(offsetof(WBP_EmoteCollection_Circular_C_Update_Button_Enable_State, CallFunc_GetAssignedEmoteFN_Is_Valid_1) == 0x000058, "Member 'WBP_EmoteCollection_Circular_C_Update_Button_Enable_State::CallFunc_GetAssignedEmoteFN_Is_Valid_1' has a wrong offset!");
static_assert(offsetof(WBP_EmoteCollection_Circular_C_Update_Button_Enable_State, CallFunc_IsValid_ReturnValue) == 0x000059, "Member 'WBP_EmoteCollection_Circular_C_Update_Button_Enable_State::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function WBP_EmoteCollection_Circular.WBP_EmoteCollection_Circular_C.Update Emote Wheel Choice
// 0x0040 (0x0040 - 0x0000)
struct WBP_EmoteCollection_Circular_C_Update_Emote_Wheel_Choice final
{
public:
	class UWBP_EmoteWheelChoice_CM_C*             Focused_Wheel_Choice;                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          bUpdate;                                           // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_59F0[0x7];                                     // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUserWidget*                            CallFunc_Get_Emote_Widget_Selected_Emote_Widget;   // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_59F1[0x7];                                     // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_EmoteEntry_CM_C*                   K2Node_DynamicCast_AsWBP_Emote_Entry_CM;           // 0x0020(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_59F2[0x7];                                     // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_EmoteWheelChoice_CM_C*             K2Node_DynamicCast_AsWBP_Emote_Wheel_Choice_CM;    // 0x0030(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_EmoteCollection_Circular_C_Update_Emote_Wheel_Choice) == 0x000008, "Wrong alignment on WBP_EmoteCollection_Circular_C_Update_Emote_Wheel_Choice");
static_assert(sizeof(WBP_EmoteCollection_Circular_C_Update_Emote_Wheel_Choice) == 0x000040, "Wrong size on WBP_EmoteCollection_Circular_C_Update_Emote_Wheel_Choice");
static_assert(offsetof(WBP_EmoteCollection_Circular_C_Update_Emote_Wheel_Choice, Focused_Wheel_Choice) == 0x000000, "Member 'WBP_EmoteCollection_Circular_C_Update_Emote_Wheel_Choice::Focused_Wheel_Choice' has a wrong offset!");
static_assert(offsetof(WBP_EmoteCollection_Circular_C_Update_Emote_Wheel_Choice, bUpdate) == 0x000008, "Member 'WBP_EmoteCollection_Circular_C_Update_Emote_Wheel_Choice::bUpdate' has a wrong offset!");
static_assert(offsetof(WBP_EmoteCollection_Circular_C_Update_Emote_Wheel_Choice, CallFunc_Get_Emote_Widget_Selected_Emote_Widget) == 0x000010, "Member 'WBP_EmoteCollection_Circular_C_Update_Emote_Wheel_Choice::CallFunc_Get_Emote_Widget_Selected_Emote_Widget' has a wrong offset!");
static_assert(offsetof(WBP_EmoteCollection_Circular_C_Update_Emote_Wheel_Choice, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'WBP_EmoteCollection_Circular_C_Update_Emote_Wheel_Choice::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_EmoteCollection_Circular_C_Update_Emote_Wheel_Choice, K2Node_DynamicCast_AsWBP_Emote_Entry_CM) == 0x000020, "Member 'WBP_EmoteCollection_Circular_C_Update_Emote_Wheel_Choice::K2Node_DynamicCast_AsWBP_Emote_Entry_CM' has a wrong offset!");
static_assert(offsetof(WBP_EmoteCollection_Circular_C_Update_Emote_Wheel_Choice, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'WBP_EmoteCollection_Circular_C_Update_Emote_Wheel_Choice::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_EmoteCollection_Circular_C_Update_Emote_Wheel_Choice, K2Node_DynamicCast_AsWBP_Emote_Wheel_Choice_CM) == 0x000030, "Member 'WBP_EmoteCollection_Circular_C_Update_Emote_Wheel_Choice::K2Node_DynamicCast_AsWBP_Emote_Wheel_Choice_CM' has a wrong offset!");
static_assert(offsetof(WBP_EmoteCollection_Circular_C_Update_Emote_Wheel_Choice, K2Node_DynamicCast_bSuccess_1) == 0x000038, "Member 'WBP_EmoteCollection_Circular_C_Update_Emote_Wheel_Choice::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(WBP_EmoteCollection_Circular_C_Update_Emote_Wheel_Choice, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000039, "Member 'WBP_EmoteCollection_Circular_C_Update_Emote_Wheel_Choice::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");

// Function WBP_EmoteCollection_Circular.WBP_EmoteCollection_Circular_C.WheelChoiceClicked
// 0x0010 (0x0010 - 0x0000)
struct WBP_EmoteCollection_Circular_C_WheelChoiceClicked final
{
public:
	class UWBP_EmoteWheelChoice_CM_C*             EmoteWheelChoice;                                  // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_59F3[0x2];                                     // 0x000A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_AkEventGlobal_ReturnValue;                // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_EmoteCollection_Circular_C_WheelChoiceClicked) == 0x000008, "Wrong alignment on WBP_EmoteCollection_Circular_C_WheelChoiceClicked");
static_assert(sizeof(WBP_EmoteCollection_Circular_C_WheelChoiceClicked) == 0x000010, "Wrong size on WBP_EmoteCollection_Circular_C_WheelChoiceClicked");
static_assert(offsetof(WBP_EmoteCollection_Circular_C_WheelChoiceClicked, EmoteWheelChoice) == 0x000000, "Member 'WBP_EmoteCollection_Circular_C_WheelChoiceClicked::EmoteWheelChoice' has a wrong offset!");
static_assert(offsetof(WBP_EmoteCollection_Circular_C_WheelChoiceClicked, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'WBP_EmoteCollection_Circular_C_WheelChoiceClicked::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_EmoteCollection_Circular_C_WheelChoiceClicked, CallFunc_IsValid_ReturnValue_1) == 0x000009, "Member 'WBP_EmoteCollection_Circular_C_WheelChoiceClicked::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_EmoteCollection_Circular_C_WheelChoiceClicked, CallFunc_AkEventGlobal_ReturnValue) == 0x00000C, "Member 'WBP_EmoteCollection_Circular_C_WheelChoiceClicked::CallFunc_AkEventGlobal_ReturnValue' has a wrong offset!");

// Function WBP_EmoteCollection_Circular.WBP_EmoteCollection_Circular_C.BP_GetDesiredFocusTarget
// 0x0008 (0x0008 - 0x0000)
struct WBP_EmoteCollection_Circular_C_BP_GetDesiredFocusTarget final
{
public:
	class UWidget*                                ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_EmoteCollection_Circular_C_BP_GetDesiredFocusTarget) == 0x000008, "Wrong alignment on WBP_EmoteCollection_Circular_C_BP_GetDesiredFocusTarget");
static_assert(sizeof(WBP_EmoteCollection_Circular_C_BP_GetDesiredFocusTarget) == 0x000008, "Wrong size on WBP_EmoteCollection_Circular_C_BP_GetDesiredFocusTarget");
static_assert(offsetof(WBP_EmoteCollection_Circular_C_BP_GetDesiredFocusTarget, ReturnValue) == 0x000000, "Member 'WBP_EmoteCollection_Circular_C_BP_GetDesiredFocusTarget::ReturnValue' has a wrong offset!");

}

