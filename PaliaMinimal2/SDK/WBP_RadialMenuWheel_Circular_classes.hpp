#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_RadialMenuWheel_Circular

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Palia_structs.hpp"
#include "S6UICore_classes.hpp"
#include "UMG_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_RadialMenuWheel_Circular.WBP_RadialMenuWheel_Circular_C
// 0x0100 (0x0620 - 0x0520)
class UWBP_RadialMenuWheel_Circular_C final : public US6UI_InputActionHandlingUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0520(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       FadeIn;                                            // 0x0528(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UCanvasPanel*                           Canvas_Inner;                                      // 0x0530(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCanvasPanel*                           Canvas_Selection;                                  // 0x0538(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_Background;                                  // 0x0540(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USizeBox*                               SizeBox_Background;                                // 0x0548(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UNamedSlot*                             Slot_Bottom;                                       // 0x0550(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UNamedSlot*                             Slot_Center;                                       // 0x0558(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UNamedSlot*                             Slot_Left;                                         // 0x0560(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UNamedSlot*                             Slot_LowerLeft;                                    // 0x0568(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UNamedSlot*                             Slot_LowerRight;                                   // 0x0570(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UNamedSlot*                             Slot_Right;                                        // 0x0578(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UNamedSlot*                             Slot_Top;                                          // 0x0580(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UNamedSlot*                             Slot_UpperLeft;                                    // 0x0588(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UNamedSlot*                             Slot_UpperRight;                                   // 0x0590(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	int32                                         Radius;                                            // 0x0598(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	int32                                         CenterRadius;                                      // 0x059C(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	int32                                         BackgroundPadding;                                 // 0x05A0(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	uint8                                         Pad_4E12[0x4];                                     // 0x05A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	FMulticastInlineDelegateProperty_             OnChoiceHovered;                                   // 0x05A8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	FMulticastInlineDelegateProperty_             OnChoiceUnhovered;                                 // 0x05B8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	TArray<class UNamedSlot*>                     RadialSlots;                                       // 0x05C8(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	class UNamedSlot*                             LastSelectedSlot;                                  // 0x05D8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          bRadialSelectionEnabled;                           // 0x05E0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	bool                                          bShowBackground;                                   // 0x05E1(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	bool                                          bSelectionCancelled;                               // 0x05E2(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4E13[0x5];                                     // 0x05E3(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UValeriaGameInstance*                   ValeriaGameInst;                                   // 0x05E8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	double                                        GamepadActivationValue;                            // 0x05F0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bStartSelectOnConsole;                             // 0x05F8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4E14[0x7];                                     // 0x05F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	FMulticastInlineDelegateProperty_             OnSelectionConfirmation;                           // 0x0600(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	struct FTimerHandle                           PauseSelectingHandle;                              // 0x0610(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	float                                         PauseTimeInCenterSlot;                             // 0x0618(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          PreventSoundRetrigger;                             // 0x061C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void BindGameInstance();
	void Confirm_by_Gamepad_Input();
	void Construct();
	void ConvertToRadialCoord(struct FGeometry& Geometry, struct FPointerEvent& PointerEvent, double* Angle, double* Distance, const struct FVector2D& CallFunc_GetLocalSize_ReturnValue, const struct FVector2D& CallFunc_PointerEvent_GetScreenSpacePosition_ReturnValue, const struct FVector2D& CallFunc_Divide_Vector2DFloat_ReturnValue, const struct FVector2D& CallFunc_AbsoluteToLocal_ReturnValue, const struct FVector2D& CallFunc_Subtract_Vector2DVector2D_ReturnValue, const struct FVector2D& CallFunc_ToDirectionAndLength2D_OutDir, double CallFunc_ToDirectionAndLength2D_OutLength, double CallFunc_BreakVector2D_X, double CallFunc_BreakVector2D_Y, double CallFunc_DegAtan2_ReturnValue);
	void ExecuteUbergraph_WBP_RadialMenuWheel_Circular(int32 EntryPoint, bool Temp_bool_Variable, ESlateVisibility Temp_byte_Variable, ESlateVisibility Temp_byte_Variable_1, TDelegate<void()> K2Node_CreateDelegate_OutputDelegate, int32 Temp_int_Array_Index_Variable, double CallFunc_SlotIndexToAngle_Angle, double CallFunc_DegSin_ReturnValue, double CallFunc_DegCos_ReturnValue, bool K2Node_Event_IsDesignTime, int32 CallFunc_Add_IntInt_ReturnValue, int32 CallFunc_Add_IntInt_ReturnValue_1, class UNamedSlot* CallFunc_Array_Get_Item, int32 CallFunc_Add_IntInt_ReturnValue_2, class UCanvasPanelSlot* CallFunc_SlotAsCanvasSlot_ReturnValue, double CallFunc_Conv_IntToDouble_ReturnValue, int32 CallFunc_Array_Length_ReturnValue, double CallFunc_Multiply_IntFloat_ReturnValue, double CallFunc_Multiply_IntFloat_ReturnValue_1, const struct FMargin& K2Node_MakeStruct_Margin, ESlateVisibility K2Node_Select_Default, bool K2Node_CustomEvent_bRadialSelectionEnabled, class UGameInstance* CallFunc_GetGameInstance_ReturnValue, class UValeriaGameInstance* K2Node_DynamicCast_AsValeria_Game_Instance, bool K2Node_DynamicCast_bSuccess, int32 Temp_int_Loop_Counter_Variable, bool CallFunc_Less_IntInt_ReturnValue, int32 CallFunc_Add_IntInt_ReturnValue_3, const struct FTimerHandle& CallFunc_K2_SetTimerDelegate_ReturnValue, TArray<class UNamedSlot*>& K2Node_MakeArray_Array, float CallFunc_SetWidthOverride_InWidthOverride_ImplicitCast, float CallFunc_SetHeightOverride_InHeightOverride_ImplicitCast, float K2Node_MakeStruct_Top_ImplicitCast, float K2Node_MakeStruct_Left_ImplicitCast);
	void Find_Slot_At_Angle_On_Console(double Angle, class UNamedSlot** Param_Slot, double RangeOfValidity, class UNamedSlot* MinDistanceSlot, const TArray<class UNamedSlot*>& SameDirectionSlots, int32 Temp_int_Array_Index_Variable, int32 Temp_int_Array_Index_Variable_1, double CallFunc_SlotIndexToAngle_Angle, class UCanvasPanelSlot* CallFunc_SlotAsCanvasSlot_ReturnValue, const struct FVector2D& CallFunc_GetPosition_ReturnValue, bool CallFunc_NotEqual_ObjectObject_ReturnValue, class UCanvasPanelSlot* CallFunc_SlotAsCanvasSlot_ReturnValue_1, class UCanvasPanelSlot* CallFunc_SlotAsCanvasSlot_ReturnValue_2, const struct FVector2D& CallFunc_GetPosition_ReturnValue_1, const struct FVector2D& CallFunc_GetPosition_ReturnValue_2, const struct FVector2D& CallFunc_Subtract_Vector2DVector2D_ReturnValue, int32 Temp_int_Loop_Counter_Variable, const struct FVector2D& CallFunc_Normal2D_ReturnValue, int32 CallFunc_Add_IntInt_ReturnValue, class UCanvasPanelSlot* CallFunc_SlotAsCanvasSlot_ReturnValue_3, const struct FVector2D& CallFunc_GetPosition_ReturnValue_3, const struct FVector2D& CallFunc_Subtract_Vector2DVector2D_ReturnValue_1, double CallFunc_VSize2D_ReturnValue, int32 Temp_int_Loop_Counter_Variable_1, double CallFunc_DegCos_ReturnValue, double CallFunc_DegSin_ReturnValue, int32 CallFunc_Add_IntInt_ReturnValue_1, const struct FVector2D& CallFunc_MakeVector2D_ReturnValue, const struct FVector2D& CallFunc_Normal2D_ReturnValue_1, double CallFunc_DotProduct2D_ReturnValue, bool CallFunc_GreaterEqual_DoubleDouble_ReturnValue, bool CallFunc_IsValid_ReturnValue, class UNamedSlot* CallFunc_Array_Get_Item, bool CallFunc_Array_IsEmpty_ReturnValue, bool CallFunc_Not_PreBool_ReturnValue, class UNamedSlot* CallFunc_Array_Get_Item_1, class UCanvasPanelSlot* CallFunc_SlotAsCanvasSlot_ReturnValue_4, const struct FVector2D& CallFunc_GetPosition_ReturnValue_4, int32 CallFunc_Array_Length_ReturnValue, const struct FVector2D& CallFunc_Subtract_Vector2DVector2D_ReturnValue_2, bool CallFunc_Less_IntInt_ReturnValue, double CallFunc_VSize2D_ReturnValue_1, bool CallFunc_Less_DoubleDouble_ReturnValue, bool Temp_bool_Variable, int32 CallFunc_Array_Add_ReturnValue, bool Temp_bool_Variable_1, double K2Node_MathExpression_ReturnValue, bool K2Node_Select_Default, bool CallFunc_LessEqual_DoubleDouble_ReturnValue, int32 CallFunc_Array_Length_ReturnValue_1, class UNamedSlot* CallFunc_Array_Get_Item_2, bool CallFunc_Less_IntInt_ReturnValue_1, int32 CallFunc_Array_Add_ReturnValue_1);
	void FindSlotAtAngle(double Angle, double Distance, class UNamedSlot** Param_Slot, int32 Temp_int_Array_Index_Variable, int32 Temp_int_Loop_Counter_Variable, double CallFunc_SlotIndexToAngle_Angle, int32 CallFunc_Add_IntInt_ReturnValue, double K2Node_MathExpression_ReturnValue, class UNamedSlot* CallFunc_Array_Get_Item, bool CallFunc_LessEqual_DoubleDouble_ReturnValue, int32 CallFunc_Array_Length_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue, double CallFunc_Conv_IntToDouble_ReturnValue, bool CallFunc_LessEqual_DoubleDouble_ReturnValue_1);
	void FinishSelecting(class UWidget** SelectedWidget, bool* SelectionCancelled, class UWidget* Result, bool CallFunc_IsValid_ReturnValue, class UWidget* CallFunc_GetContent_ReturnValue, class UUMGSequencePlayer* CallFunc_PlayAnimationReverse_ReturnValue, class UWidget* CallFunc_GetContent_ReturnValue_1, bool CallFunc_IsValid_ReturnValue_1);
	void GetAllSlotWidgets(TArray<class UWidget*>* Widgets, const TArray<class UWidget*>& Result, int32 Temp_int_Array_Index_Variable, class UWidget* CallFunc_GetContent_ReturnValue, int32 Temp_int_Loop_Counter_Variable, bool CallFunc_IsValid_ReturnValue, int32 CallFunc_Add_IntInt_ReturnValue, int32 CallFunc_Array_Add_ReturnValue, int32 CallFunc_Array_Length_ReturnValue, class UNamedSlot* CallFunc_Array_Get_Item, bool CallFunc_Less_IntInt_ReturnValue, class UWidget* CallFunc_GetContent_ReturnValue_1, int32 CallFunc_Array_Add_ReturnValue_1, bool CallFunc_IsValid_ReturnValue_1);
	class US6UI_InputActionHandlingWidgetComponent* GetInputActionHandlingComponent();
	void Initialize();
	void OnChoiceHovered__DelegateSignature(class UWidget* Widget);
	void OnChoiceUnhovered__DelegateSignature(class UWidget* Widget);
	struct FEventReply OnMouseMove(const struct FGeometry& MyGeometry, struct FPointerEvent& MouseEvent, int32 CallFunc_AkEventGlobal_ReturnValue, class UWidget* CallFunc_GetContent_ReturnValue, bool CallFunc_IsValid_ReturnValue, class UWidget* CallFunc_GetContent_ReturnValue_1, bool CallFunc_IsValid_ReturnValue_1, EInputType CallFunc_GetCurrentInputType_ReturnValue, bool CallFunc_EqualEqual_ByteByte_ReturnValue, const struct FEventReply& CallFunc_Unhandled_ReturnValue, double CallFunc_ConvertToRadialCoord_Angle, double CallFunc_ConvertToRadialCoord_Distance, class UNamedSlot* CallFunc_FindSlotAtAngle_Slot, const struct FEventReply& CallFunc_Handled_ReturnValue, bool CallFunc_NotEqual_ObjectObject_ReturnValue);
	void OnSelectionConfirmation__DelegateSignature();
	void PauseSelectingInCenterSlot();
	void PreConstruct(bool IsDesignTime);
	void RestartSelecting();
	void ReturnByGamepadInput();
	void SelectRadialByGamepadInput(const struct FVector2D& InputVal, bool CallFunc_IsValid_ReturnValue, class UWidget* CallFunc_GetContent_ReturnValue, double Temp_real_Variable, bool Temp_bool_Variable, int32 CallFunc_AkEventGlobal_ReturnValue, double CallFunc_BreakVector2D_X, double CallFunc_BreakVector2D_Y, double CallFunc_BreakVector2D_X_1, double CallFunc_BreakVector2D_Y_1, double CallFunc_Abs_ReturnValue, double CallFunc_DegAtan2_ReturnValue, double CallFunc_Abs_ReturnValue_1, bool CallFunc_IsValid_ReturnValue_1, EInputType CallFunc_GetCurrentInputType_ReturnValue, bool K2Node_SwitchEnum_CmpSuccess, class UWidget* CallFunc_GetContent_ReturnValue_1, double CallFunc_Conv_IntToDouble_ReturnValue, double CallFunc_Add_DoubleDouble_ReturnValue, bool CallFunc_Greater_DoubleDouble_ReturnValue, bool CallFunc_Greater_DoubleDouble_ReturnValue_1, bool CallFunc_BooleanOR_ReturnValue, double K2Node_Select_Default, class UNamedSlot* CallFunc_FindSlotAtAngle_Slot, bool CallFunc_NotEqual_ObjectObject_ReturnValue);
	void SelectRadialByGamepadInputOnConsole(const struct FVector2D& Input, int32 CallFunc_AkEventGlobal_ReturnValue, double CallFunc_BreakVector2D_X, double CallFunc_BreakVector2D_Y, double CallFunc_Abs_ReturnValue, bool CallFunc_Greater_DoubleDouble_ReturnValue, double CallFunc_Abs_ReturnValue_1, bool CallFunc_Greater_DoubleDouble_ReturnValue_1, bool CallFunc_IsValid_ReturnValue, bool CallFunc_BooleanOR_ReturnValue, class UWidget* CallFunc_GetContent_ReturnValue, class UWidget* CallFunc_GetContent_ReturnValue_1, double CallFunc_BreakVector2D_X_1, double CallFunc_BreakVector2D_Y_1, bool CallFunc_BooleanAND_ReturnValue, double CallFunc_DegAtan2_ReturnValue, class UNamedSlot* CallFunc_Find_Slot_At_Angle_On_Console_Slot, bool CallFunc_EqualEqual_ObjectObject_ReturnValue, bool CallFunc_NotEqual_ObjectObject_ReturnValue);
	void SetRadialSelectionEnabled(bool Param_bRadialSelectionEnabled);
	void SlotIndexToAngle(int32 Param_Index, double* Angle, double CallFunc_Multiply_IntFloat_ReturnValue);
	void StartSelecting(bool CallFunc_IsValid_ReturnValue, class UUMGSequencePlayer* CallFunc_PlayAnimationForward_ReturnValue);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_RadialMenuWheel_Circular_C">();
	}
	static class UWBP_RadialMenuWheel_Circular_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_RadialMenuWheel_Circular_C>();
	}
};
static_assert(alignof(UWBP_RadialMenuWheel_Circular_C) == 0x000008, "Wrong alignment on UWBP_RadialMenuWheel_Circular_C");
static_assert(sizeof(UWBP_RadialMenuWheel_Circular_C) == 0x000620, "Wrong size on UWBP_RadialMenuWheel_Circular_C");
static_assert(offsetof(UWBP_RadialMenuWheel_Circular_C, UberGraphFrame) == 0x000520, "Member 'UWBP_RadialMenuWheel_Circular_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWBP_RadialMenuWheel_Circular_C, FadeIn) == 0x000528, "Member 'UWBP_RadialMenuWheel_Circular_C::FadeIn' has a wrong offset!");
static_assert(offsetof(UWBP_RadialMenuWheel_Circular_C, Canvas_Inner) == 0x000530, "Member 'UWBP_RadialMenuWheel_Circular_C::Canvas_Inner' has a wrong offset!");
static_assert(offsetof(UWBP_RadialMenuWheel_Circular_C, Canvas_Selection) == 0x000538, "Member 'UWBP_RadialMenuWheel_Circular_C::Canvas_Selection' has a wrong offset!");
static_assert(offsetof(UWBP_RadialMenuWheel_Circular_C, Image_Background) == 0x000540, "Member 'UWBP_RadialMenuWheel_Circular_C::Image_Background' has a wrong offset!");
static_assert(offsetof(UWBP_RadialMenuWheel_Circular_C, SizeBox_Background) == 0x000548, "Member 'UWBP_RadialMenuWheel_Circular_C::SizeBox_Background' has a wrong offset!");
static_assert(offsetof(UWBP_RadialMenuWheel_Circular_C, Slot_Bottom) == 0x000550, "Member 'UWBP_RadialMenuWheel_Circular_C::Slot_Bottom' has a wrong offset!");
static_assert(offsetof(UWBP_RadialMenuWheel_Circular_C, Slot_Center) == 0x000558, "Member 'UWBP_RadialMenuWheel_Circular_C::Slot_Center' has a wrong offset!");
static_assert(offsetof(UWBP_RadialMenuWheel_Circular_C, Slot_Left) == 0x000560, "Member 'UWBP_RadialMenuWheel_Circular_C::Slot_Left' has a wrong offset!");
static_assert(offsetof(UWBP_RadialMenuWheel_Circular_C, Slot_LowerLeft) == 0x000568, "Member 'UWBP_RadialMenuWheel_Circular_C::Slot_LowerLeft' has a wrong offset!");
static_assert(offsetof(UWBP_RadialMenuWheel_Circular_C, Slot_LowerRight) == 0x000570, "Member 'UWBP_RadialMenuWheel_Circular_C::Slot_LowerRight' has a wrong offset!");
static_assert(offsetof(UWBP_RadialMenuWheel_Circular_C, Slot_Right) == 0x000578, "Member 'UWBP_RadialMenuWheel_Circular_C::Slot_Right' has a wrong offset!");
static_assert(offsetof(UWBP_RadialMenuWheel_Circular_C, Slot_Top) == 0x000580, "Member 'UWBP_RadialMenuWheel_Circular_C::Slot_Top' has a wrong offset!");
static_assert(offsetof(UWBP_RadialMenuWheel_Circular_C, Slot_UpperLeft) == 0x000588, "Member 'UWBP_RadialMenuWheel_Circular_C::Slot_UpperLeft' has a wrong offset!");
static_assert(offsetof(UWBP_RadialMenuWheel_Circular_C, Slot_UpperRight) == 0x000590, "Member 'UWBP_RadialMenuWheel_Circular_C::Slot_UpperRight' has a wrong offset!");
static_assert(offsetof(UWBP_RadialMenuWheel_Circular_C, Radius) == 0x000598, "Member 'UWBP_RadialMenuWheel_Circular_C::Radius' has a wrong offset!");
static_assert(offsetof(UWBP_RadialMenuWheel_Circular_C, CenterRadius) == 0x00059C, "Member 'UWBP_RadialMenuWheel_Circular_C::CenterRadius' has a wrong offset!");
static_assert(offsetof(UWBP_RadialMenuWheel_Circular_C, BackgroundPadding) == 0x0005A0, "Member 'UWBP_RadialMenuWheel_Circular_C::BackgroundPadding' has a wrong offset!");
static_assert(offsetof(UWBP_RadialMenuWheel_Circular_C, OnChoiceHovered) == 0x0005A8, "Member 'UWBP_RadialMenuWheel_Circular_C::OnChoiceHovered' has a wrong offset!");
static_assert(offsetof(UWBP_RadialMenuWheel_Circular_C, OnChoiceUnhovered) == 0x0005B8, "Member 'UWBP_RadialMenuWheel_Circular_C::OnChoiceUnhovered' has a wrong offset!");
static_assert(offsetof(UWBP_RadialMenuWheel_Circular_C, RadialSlots) == 0x0005C8, "Member 'UWBP_RadialMenuWheel_Circular_C::RadialSlots' has a wrong offset!");
static_assert(offsetof(UWBP_RadialMenuWheel_Circular_C, LastSelectedSlot) == 0x0005D8, "Member 'UWBP_RadialMenuWheel_Circular_C::LastSelectedSlot' has a wrong offset!");
static_assert(offsetof(UWBP_RadialMenuWheel_Circular_C, bRadialSelectionEnabled) == 0x0005E0, "Member 'UWBP_RadialMenuWheel_Circular_C::bRadialSelectionEnabled' has a wrong offset!");
static_assert(offsetof(UWBP_RadialMenuWheel_Circular_C, bShowBackground) == 0x0005E1, "Member 'UWBP_RadialMenuWheel_Circular_C::bShowBackground' has a wrong offset!");
static_assert(offsetof(UWBP_RadialMenuWheel_Circular_C, bSelectionCancelled) == 0x0005E2, "Member 'UWBP_RadialMenuWheel_Circular_C::bSelectionCancelled' has a wrong offset!");
static_assert(offsetof(UWBP_RadialMenuWheel_Circular_C, ValeriaGameInst) == 0x0005E8, "Member 'UWBP_RadialMenuWheel_Circular_C::ValeriaGameInst' has a wrong offset!");
static_assert(offsetof(UWBP_RadialMenuWheel_Circular_C, GamepadActivationValue) == 0x0005F0, "Member 'UWBP_RadialMenuWheel_Circular_C::GamepadActivationValue' has a wrong offset!");
static_assert(offsetof(UWBP_RadialMenuWheel_Circular_C, bStartSelectOnConsole) == 0x0005F8, "Member 'UWBP_RadialMenuWheel_Circular_C::bStartSelectOnConsole' has a wrong offset!");
static_assert(offsetof(UWBP_RadialMenuWheel_Circular_C, OnSelectionConfirmation) == 0x000600, "Member 'UWBP_RadialMenuWheel_Circular_C::OnSelectionConfirmation' has a wrong offset!");
static_assert(offsetof(UWBP_RadialMenuWheel_Circular_C, PauseSelectingHandle) == 0x000610, "Member 'UWBP_RadialMenuWheel_Circular_C::PauseSelectingHandle' has a wrong offset!");
static_assert(offsetof(UWBP_RadialMenuWheel_Circular_C, PauseTimeInCenterSlot) == 0x000618, "Member 'UWBP_RadialMenuWheel_Circular_C::PauseTimeInCenterSlot' has a wrong offset!");
static_assert(offsetof(UWBP_RadialMenuWheel_Circular_C, PreventSoundRetrigger) == 0x00061C, "Member 'UWBP_RadialMenuWheel_Circular_C::PreventSoundRetrigger' has a wrong offset!");

}

