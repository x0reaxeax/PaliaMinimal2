#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_ValeriaCharacter

#include "Basic.hpp"

#include "Palia_structs.hpp"
#include "Palia_classes.hpp"
#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "GameplayTags_structs.hpp"
#include "S6Core_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_ValeriaCharacter.BP_ValeriaCharacter_C
// 0x02B0 (0x1740 - 0x1490)
class ABP_ValeriaCharacter_C final : public AValeriaCharacter
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x1490(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UComp_Listener_Padding_C*               Comp_Listener_Padding;                             // 0x1498(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UValeriaSpringArmComponent*             ValeriaSpringArmListener_Padding;                  // 0x14A0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBP_InteractablePlateWidgetComponent_C* RefillWaterCanPlateWidgetComponent;                // 0x14A8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponentBudgeted*         TorsoMesh;                                         // 0x14B0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponentBudgeted*         LegsMesh;                                          // 0x14B8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponentBudgeted*         HatMesh;                                           // 0x14C0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponentBudgeted*         HairMesh;                                          // 0x14C8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponentBudgeted*         FaceAccMesh;                                       // 0x14D0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponentBudgeted*         FaceCoverMesh;                                     // 0x14D8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponentBudgeted*         HeadMesh;                                          // 0x14E0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UComp_RtpcTracker_C*                    RtpcTracker;                                       // 0x14E8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBP_CharacterCustomizationComponent_C*  BP_CharacterCustomizationComponent;                // 0x14F0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBP_VFX_playerFollowMeA_outdoor_C*      BP_VFX_playerFollowMeA_outdoor;                    // 0x14F8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UComp_Audio_Pool_Manager_C*             AudioPoolManager;                                  // 0x1500(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBP_FoliageRustleAudio_C*               BP_FoliageRustleAudio;                             // 0x1508(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBP_StaminaPlateWidgetComponent_C*      BP_StaminaPlateWidgetComponent;                    // 0x1510(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneCaptureComponent2D*               SceneCapture_Selfie;                               // 0x1518(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneCaptureComponent2D*               SceneCapture_FP;                                   // 0x1520(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UValeriaSpringArmComponent*             PhotographyBoom_Selfie;                            // 0x1528(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UValeriaSpringArmComponent*             PhotographyBoom_FP;                                // 0x1530(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UComp_VoiceSet_C*                       VoiceSetComponent;                                 // 0x1538(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UComp_Player_Audio_C*                   Comp_Player_Audio;                                 // 0x1540(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UComp_Actor_Audio_Data_C*               Comp_Actor_AudioData;                              // 0x1548(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBP_FishingViewComponent_C*             BP_FishingViewComponent;                           // 0x1550(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBP_CameraFadeScenery_C*                BP_CameraFadeScenery;                              // 0x1558(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBP_CharacterPlateWidgetComponent_C*    BP_CharacterPlateWidgetComponent;                  // 0x1560(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class ABP_FishingSafeArea_C*                  FishingSafeArea;                                   // 0x1568(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	bool                                          IsPlayingArcade;                                   // 0x1570(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4A7A[0x7];                                     // 0x1571(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UStaticMeshComponent*                   TempCarriedMesh;                                   // 0x1578(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TArray<int32>                                 MusicPriority;                                     // 0x1580(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	bool                                          ShouldRunCosmetics;                                // 0x1590(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4A7B[0x7];                                     // 0x1591(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<ECharacterAttachPoint, TSoftClassPtr<class UClass>> GliderPropMap;                                     // 0x1598(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)
	class UClass*                                 PreloadGliderHardRef;                              // 0x15E8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           GliderGearGameplayTag;                             // 0x15F0(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	TMap<ECharacterAttachPoint, TSoftClassPtr<class UClass>> DefaultGliderPropMap;                              // 0x15F8(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)
	double                                        IKHipOffset;                                       // 0x1648(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        IKLeft_Foot_Offset;                                // 0x1650(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Delta_Seconds;                                     // 0x1658(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        IKRight_Foot_Offset;                               // 0x1660(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                IKRightHandLocation;                               // 0x1668(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                IKLeftHandLocation;                                // 0x1680(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          LeftHandHitWall;                                   // 0x1698(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          RightHandHitWall;                                  // 0x1699(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4A7C[0x6];                                     // 0x169A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftClassPtr<class UClass>                   GliderPropClassOverride;                           // 0x16A0(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	double                                        GliderCameraPanBack;                               // 0x16C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        GliderCameraPanUp;                                 // 0x16D0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                StartCameraPosition;                               // 0x16D8(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        WaterSphereOverlapOffset;                          // 0x16F0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        WaterSphereOverlapRadius;                          // 0x16F8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<EObjectTypeQuery>                      WaterSphereOverlapObjectTypes;                     // 0x1700(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FTimerHandle                           WateringCanTimer;                                  // 0x1710(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UAkAudioEvent*                          DialoguePrintSound;                                // 0x1718(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UAkAudioEvent*                          DialogueFullyShownSound;                           // 0x1720(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	int32                                         PreviousDialogueStringLength;                      // 0x1728(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Glider_Attach_Point_Override;                      // 0x172C(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void BndEvt__BP_ValeriaCharacter_DialogueManager_K2Node_ComponentBoundEvent_1_DialogProgressedDelegate__DelegateSignature(class UDialogueComponent* Diag);
	void BndEvt__BP_ValeriaCharacter_EquipmentComponent_K2Node_ComponentBoundEvent_2_EquipmentChangedDelegate__DelegateSignature(class UEquipmentComponent* Param_EquipmentComponent, const struct FEquipmentItem& Item);
	void BndEvt__BP_ValeriaCharacter_Placement_K2Node_ComponentBoundEvent_0_PlacementConfirmed__DelegateSignature(class UPlacementComponent* PC, bool Placed);
	void ChargeForStableUsage(class AActor* StablesActor, class UTeleportTravelConfigAsset* DestinationConfig);
	void Client_BeginInspirationSequence();
	void Client_DisplayCrafter(class UCrafterComponent* Crafter);
	void Client_EndInspirationSequence();
	void CloseSubgameScreen();
	void CREATEDELEGATE_PROXYFUNCTION_0(class AValeriaCharacter* Character, struct FVector& Location, struct FVector& LastUnstuckLocation);
	void CREATEDELEGATE_PROXYFUNCTION_1(class AValeriaCharacter* Character, struct FVector& Location, struct FVector& LastUnstuckLocation);
	void CustomEvent_0(float Change);
	void DisplayAmmoMenu(EAmmoType AmmoType);
	void DisplayHousingEditMode(class AHousingPlotActor* HousingPlotActor);
	void DisplaySubgameScreen(class USubgameConfig* InSubgameConfig);
	void EnableHousingEditMode(bool Enable, class AHousingPlotActor* HousingPlot, class UCharacterStateMachineComponent* CallFunc_GetCSM_ReturnValue, bool CallFunc_IsValid_ReturnValue, bool CallFunc_ChangeState_ReturnValue);
	void Event_vfxSetup();
	void ExecuteUbergraph_BP_ValeriaCharacter(int32 EntryPoint, TDelegate<void(TSubclassOf<class UObject> Loaded)> K2Node_CreateDelegate_OutputDelegate, bool Temp_bool_Variable, bool Temp_bool_Variable_1, bool Temp_bool_Variable_2, bool Temp_bool_Variable_3, bool Temp_bool_Variable_4, bool Temp_bool_Variable_5, bool Temp_bool_Variable_6, bool Temp_bool_Variable_7, bool Temp_bool_Variable_8, bool Temp_bool_Variable_9, EVisibilityBasedAnimTickOption Temp_byte_Variable, EVisibilityBasedAnimTickOption Temp_byte_Variable_1, ERedirectsPlatform Temp_byte_Variable_2, bool Temp_bool_Variable_10, bool Temp_bool_Variable_11, bool Temp_bool_Variable_12, bool Temp_bool_Variable_13, bool Temp_bool_Variable_14, bool Temp_bool_Variable_15, bool Temp_bool_Variable_16, bool Temp_bool_Variable_17, bool Temp_bool_Variable_18, ERedirectsPlatform Temp_byte_Variable_3, bool Temp_bool_Variable_19, bool Temp_bool_Variable_20, bool Temp_bool_Variable_21, bool Temp_bool_Variable_22, bool Temp_bool_Variable_23, bool Temp_bool_Variable_24, bool Temp_bool_Variable_25, bool Temp_bool_Variable_26, bool Temp_bool_Variable_27, class FName Temp_name_Variable, class FName Temp_name_Variable_1, bool K2Node_CustomEvent_IsPlaying, bool CallFunc_IsLocallyControlled_ReturnValue, class AController* K2Node_Event_NewController, bool CallFunc_IsServer_ReturnValue, bool CallFunc_Not_PreBool_ReturnValue, class UValeriaCharacterMoveComponent* CallFunc_GetValeriaCharacterMovementComponent_ReturnValue, TDelegate<void(bool IsGliding)> K2Node_CreateDelegate_OutputDelegate_1, bool K2Node_CustomEvent_isGliding, class UValeriaCharacterMoveComponent* CallFunc_GetValeriaCharacterMovementComponent_ReturnValue_1, TDelegate<void(bool IsGliding)> K2Node_CreateDelegate_OutputDelegate_2, const struct FVector& CallFunc_K2_GetComponentLocation_ReturnValue, const struct FLinearColor& CallFunc_Conv_VectorToLinearColor_ReturnValue, TArray<TSoftClassPtr<class UClass>>& CallFunc_Map_Values_Values, TSoftClassPtr<class UClass> CallFunc_Array_Get_Item, int32 CallFunc_Array_Length_ReturnValue, bool CallFunc_EqualEqual_IntInt_ReturnValue, float K2Node_Event_DeltaSeconds, class UGearComponent* K2Node_CustomEvent_GearComponent, ERedirectsPlatform Temp_byte_Variable_4, EEndPlayReason K2Node_Event_EndPlayReason, class UGearComponent* CallFunc_GetGear_ReturnValue, class UGearComponent* CallFunc_GetGear_ReturnValue_1, const struct FValeriaItem& CallFunc_GetGearByGameplayTag_ReturnValue, class UObject* CallFunc_LoadAsset_Blocking_ReturnValue, bool CallFunc_Greater_IntInt_ReturnValue, class UVAL_ItemTypeDefinitionAsset* K2Node_DynamicCast_AsItem_Type_Definition, bool K2Node_DynamicCast_bSuccess, bool CallFunc_IsValid_ReturnValue, const TMap<ECharacterAttachPoint, TSoftClassPtr<class UClass>>& K2Node_MakeMap_Map, bool CallFunc_IsValidSoftClassReference_ReturnValue, class AActor* K2Node_Event_ActorHit, bool K2Node_Event_WasDamaged, TSoftObjectPtr<class UVAL_ItemTypeDefinitionAsset> K2Node_Event_HeldItemType, class AActor* K2Node_Event_ExtInstigator, bool CallFunc_IsServer_ReturnValue_1, const struct FVector& CallFunc_K2_GetActorLocation_ReturnValue, class UValeriaGASAttributeSet* CallFunc_GetAttributeSet_ReturnValue, float K2Node_CustomEvent_change, ENetRole CallFunc_GetLocalRole_ReturnValue, bool CallFunc_Less_DoubleDouble_ReturnValue, bool CallFunc_EqualEqual_ByteByte_ReturnValue, class UValeriaGASComponent* CallFunc_GetGAS_ReturnValue, const struct FActiveGameplayEffectHandle& CallFunc_BP_ApplyGameplayEffectToSelf_ReturnValue, TDelegate<void(class UGearComponent* GearComponent)> K2Node_CreateDelegate_OutputDelegate_3, bool Temp_bool_Has_Been_Initd_Variable, class UPlacementComponent* K2Node_ComponentBoundEvent_pc, bool K2Node_ComponentBoundEvent_Placed, bool CallFunc_TryTriggerInspirationCamera_Success, bool CallFunc_TryTriggerInspirationCamera_Success_1, float K2Node_CustomEvent_DeltaSeconds, const struct FVector& K2Node_CustomEvent_OldLocation, const struct FVector& K2Node_CustomEvent_OldVelocity, double CallFunc_VSizeSquared_ReturnValue, bool CallFunc_IsValidSoftClassReference_ReturnValue_1, bool CallFunc_Greater_DoubleDouble_ReturnValue, EMovementMode K2Node_Event_PrevMovementMode, EMovementMode K2Node_Event_NewMovementMode, uint8 K2Node_Event_PrevCustomMode, uint8 K2Node_Event_NewCustomMode, bool CallFunc_EqualEqual_ByteByte_ReturnValue_1, class UValeriaSpringArmComponent* K2Node_DynamicCast_AsValeria_Spring_Arm_Component, bool K2Node_DynamicCast_bSuccess_1, class UValeriaSpringArmComponent* K2Node_DynamicCast_AsValeria_Spring_Arm_Component_1, bool K2Node_DynamicCast_bSuccess_2, bool CallFunc_EqualEqual_ByteByte_ReturnValue_2, bool CallFunc_IsLocallyControlled_ReturnValue_1, TDelegate<void(class AValeriaMoveablePawn* Pawn, EMovementMode PrevMovementMode, uint8 PreviousCustomMode)> K2Node_CreateDelegate_OutputDelegate_4, class AValeriaMoveablePawn* K2Node_CustomEvent_Pawn, EMovementMode K2Node_CustomEvent_PrevMovementMode, uint8 K2Node_CustomEvent_PreviousCustomMode, int32 Temp_int_Array_Index_Variable, bool CallFunc_EqualEqual_ByteByte_ReturnValue_3, TDelegate<void(bool IsClimbing)> K2Node_CreateDelegate_OutputDelegate_5, class UValeriaCharacterMoveComponent* CallFunc_GetValeriaCharacterMovementComponent_ReturnValue_2, bool K2Node_CustomEvent_isClimbing, class AController* CallFunc_GetController_ReturnValue, class APlayerController* K2Node_DynamicCast_AsPlayer_Controller, bool K2Node_DynamicCast_bSuccess_3, class UVAL_Subsystem_GameplayUIBridge* CallFunc_GetLocalPlayerSubSystemFromPlayerController_ReturnValue, class UCrafterComponent* K2Node_Event_Crafter, TScriptInterface<class IVAL_GameplayUIBridgeInterface> CallFunc_GetUIInterface_ReturnValue, EAmmoType K2Node_Event_AmmoType, class AController* CallFunc_GetController_ReturnValue_1, class AHousingPlotActor* K2Node_Event_HousingPlotActor, class APlayerController* K2Node_DynamicCast_AsPlayer_Controller_1, bool K2Node_DynamicCast_bSuccess_4, class AController* CallFunc_GetController_ReturnValue_2, class UVAL_Subsystem_GameplayUIBridge* CallFunc_GetLocalPlayerSubSystemFromPlayerController_ReturnValue_1, class APlayerController* K2Node_DynamicCast_AsPlayer_Controller_2, bool K2Node_DynamicCast_bSuccess_5, TScriptInterface<class IVAL_GameplayUIBridgeInterface> CallFunc_GetUIInterface_ReturnValue_1, class UVAL_Subsystem_GameplayUIBridge* CallFunc_GetLocalPlayerSubSystemFromPlayerController_ReturnValue_2, TScriptInterface<class IVAL_GameplayUIBridgeInterface> CallFunc_GetUIInterface_ReturnValue_2, class AActor* K2Node_Event_StablesActor, class UTeleportTravelConfigAsset* K2Node_Event_DestinationConfig, class ABP_Stables_Sign_C* K2Node_DynamicCast_AsBP_Stables_Sign, bool K2Node_DynamicCast_bSuccess_6, class FName Temp_name_Variable_2, int32 CallFunc_FindCostForDestination_GoldCost, int32 CallFunc_Subtract_IntInt_ReturnValue, class UVitalsComponent* CallFunc_GetVitals_ReturnValue, const struct FVitalsChange& K2Node_MakeStruct_VitalsChange, class USubgameConfig* K2Node_Event_inSubgameConfig, bool CallFunc_TryVitalChange_ReturnValue, class AController* CallFunc_GetController_ReturnValue_3, class APlayerController* K2Node_DynamicCast_AsPlayer_Controller_3, bool K2Node_DynamicCast_bSuccess_7, class FName Temp_name_Variable_3, class UVAL_Subsystem_GameplayUIBridge* CallFunc_GetLocalPlayerSubSystemFromPlayerController_ReturnValue_3, TScriptInterface<class IVAL_GameplayUIBridgeInterface> CallFunc_GetUIInterface_ReturnValue_3, class AController* CallFunc_GetController_ReturnValue_4, class APlayerController* K2Node_DynamicCast_AsPlayer_Controller_4, bool K2Node_DynamicCast_bSuccess_8, class UVAL_Subsystem_GameplayUIBridge* CallFunc_GetLocalPlayerSubSystemFromPlayerController_ReturnValue_4, TScriptInterface<class IVAL_GameplayUIBridgeInterface> CallFunc_GetUIInterface_ReturnValue_4, bool CallFunc_IsLocallyControlled_ReturnValue_2, bool CallFunc_Not_PreBool_ReturnValue_1, bool CallFunc_IsLocallyControlled_ReturnValue_3, int32 Temp_int_Loop_Counter_Variable, bool CallFunc_Not_PreBool_ReturnValue_2, int32 CallFunc_Add_IntInt_ReturnValue, class FName Temp_name_Variable_4, TDelegate<void(class AValeriaCharacter* Character, struct FVector& Location, struct FVector& LastUnstuckLocation)> K2Node_CreateDelegate_OutputDelegate_6, TDelegate<void(class AValeriaCharacter* Character, struct FVector& Location, struct FVector& LastUnstuckLocation)> K2Node_CreateDelegate_OutputDelegate_7, TSoftClassPtr<class UClass> K2Node_Event_GliderPropClass, class FName K2Node_Event_AttachPoint, class UEquipmentComponent* K2Node_ComponentBoundEvent_EquipmentComponent, const struct FEquipmentItem& K2Node_ComponentBoundEvent_Item, const struct FEquipmentItem& CallFunc_GetEquippedItem_ReturnValue, bool CallFunc_K2_IsTimerActiveHandle_ReturnValue, class UObject* CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue, bool CallFunc_IsValidSoftObjectReference_ReturnValue, class UVAL_ItemTypeDefinitionAsset* K2Node_DynamicCast_AsItem_Type_Definition_1, bool K2Node_DynamicCast_bSuccess_9, bool CallFunc_K2_IsValidTimerHandle_ReturnValue, bool CallFunc_BooleanAND_ReturnValue, bool CallFunc_HasTag_ReturnValue, bool CallFunc_K2_IsValidTimerHandle_ReturnValue_1, TDelegate<void(class AValeriaMoveablePawn* Pawn, EMovementMode PrevMovementMode, uint8 PreviousCustomMode)> K2Node_CreateDelegate_OutputDelegate_8, struct FVector& Temp_struct_Variable, class AValeriaPlayerController* CallFunc_GetValeriaPlayerController_ReturnValue, bool CallFunc_K2_IsTimerPausedHandle_ReturnValue, bool CallFunc_IsLocalPlayerController_ReturnValue, bool CallFunc_IsDesktop_ReturnValue, class UUserWidget* CallFunc_GetUserWidgetObject_ReturnValue, TDelegate<void()> K2Node_CreateDelegate_OutputDelegate_9, class UGameUserSettings* CallFunc_GetGameUserSettings_ReturnValue, const struct FTimerHandle& CallFunc_K2_SetTimerDelegate_ReturnValue, int32 CallFunc_GetShadowQuality_ReturnValue, bool CallFunc_Greater_IntInt_ReturnValue_1, bool CallFunc_Greater_IntInt_ReturnValue_2, struct FValeriaGraphicSettings& K2Node_CustomEvent_GraphicSettings, class FName Temp_name_Variable_5, bool Temp_bool_Whether_the_gate_is_currently_open_or_close_Variable, class UValeriaGameUserSettings* CallFunc_GetValeriaGameUserSettings_ReturnValue, bool CallFunc_IsServer_ReturnValue_2, TDelegate<void(struct FValeriaGraphicSettings& GraphicSettings)> K2Node_CreateDelegate_OutputDelegate_10, bool CallFunc_Not_PreBool_ReturnValue_3, class UClass* Temp_class_Variable, ERedirectsPlatform CallFunc_GetPlatformType_ReturnValue, class UClass* K2Node_ClassDynamicCast_AsEquip_View_Actor, bool K2Node_ClassDynamicCast_bSuccess, bool K2Node_Select_Default, bool CallFunc_BooleanAND_ReturnValue_1, TDelegate<void(float DeltaSeconds, const struct FVector& OldLocation, const struct FVector& OldVelocity)> K2Node_CreateDelegate_OutputDelegate_11, class FName Temp_name_Variable_6, class UValeriaGameUserSettings* CallFunc_GetValeriaGameUserSettings_ReturnValue_1, TDelegate<void(struct FValeriaGraphicSettings& GraphicSettings)> K2Node_CreateDelegate_OutputDelegate_12, class UDialogueComponent* K2Node_ComponentBoundEvent_diag, class FName Temp_name_Variable_7, class FName Temp_name_Variable_8, class FName Temp_name_Variable_9, class FText CallFunc_GetDialogueDisplayString_ReturnValue, const class FString& CallFunc_Conv_TextToString_ReturnValue, const class FString& CallFunc_RemoveInvisibleText_ReturnValue, bool CallFunc_IsDialogueTextFullyDisplayed_ReturnValue, int32 CallFunc_Len_ReturnValue, bool CallFunc_IsValid_ReturnValue_1, int32 CallFunc_AkEventGlobal_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue, int32 CallFunc_AkEventGlobal_ReturnValue_1, bool CallFunc_IsLocallyControlled_ReturnValue_4, bool CallFunc_Not_PreBool_ReturnValue_4, bool CallFunc_IsPlayerVisibleForLocalCinematicState_bVisible, bool CallFunc_IsServer_ReturnValue_3, ERedirectsPlatform CallFunc_GetPlatformType_ReturnValue_1, EVisibilityBasedAnimTickOption K2Node_Select_Default_1, bool K2Node_Select_Default_2, bool CallFunc_BooleanAND_ReturnValue_2, bool Temp_bool_IsClosed_Variable, TArray<class USkinnedMeshComponent*>& K2Node_MakeArray_Array, class USkinnedMeshComponent* CallFunc_Array_Get_Item_1, int32 CallFunc_Array_Length_ReturnValue_1, bool CallFunc_Less_IntInt_ReturnValue_1, bool CallFunc_IsValid_ReturnValue_2, ERedirectsPlatform CallFunc_GetPlatformType_ReturnValue_2, TDelegate<void(float Change)> K2Node_CreateDelegate_OutputDelegate_13, bool K2Node_Select_Default_3, bool CallFunc_FNameIsNone_ReturnValue, TMap<ECharacterAttachPoint, TSoftClassPtr<class UClass>>& K2Node_MakeMap_Map_1, TMap<ECharacterAttachPoint, TSoftClassPtr<class UClass>>& K2Node_MakeMap_Map_2, bool CallFunc_IsLocallyControlled_ReturnValue_5, TSubclassOf<class UObject> K2Node_CustomEvent_Loaded, double K2Node_VariableSet_Delta_Seconds_ImplicitCast, double CallFunc_Less_DoubleDouble_A_ImplicitCast);
	void Find_Distance_to_Ground(bool* Hit, double* Distance, const struct FVector& CallFunc_K2_GetComponentLocation_ReturnValue, TArray<class AActor*>& Temp_object_Variable, double CallFunc_BreakVector_X, double CallFunc_BreakVector_Y, double CallFunc_BreakVector_Z, double CallFunc_Subtract_DoubleDouble_ReturnValue, const struct FVector& CallFunc_MakeVector_ReturnValue, const struct FHitResult& CallFunc_LineTraceSingle_OutHit, bool CallFunc_LineTraceSingle_ReturnValue, bool CallFunc_BreakHitResult_bBlockingHit, bool CallFunc_BreakHitResult_bInitialOverlap, float CallFunc_BreakHitResult_Time, float CallFunc_BreakHitResult_Distance, const struct FVector& CallFunc_BreakHitResult_Location, const struct FVector& CallFunc_BreakHitResult_ImpactPoint, const struct FVector& CallFunc_BreakHitResult_Normal, const struct FVector& CallFunc_BreakHitResult_ImpactNormal, class UPhysicalMaterial* CallFunc_BreakHitResult_PhysMat, class AActor* CallFunc_BreakHitResult_HitActor, class UPrimitiveComponent* CallFunc_BreakHitResult_HitComponent, class FName CallFunc_BreakHitResult_HitBoneName, class FName CallFunc_BreakHitResult_BoneName, int32 CallFunc_BreakHitResult_HitItem, int32 CallFunc_BreakHitResult_ElementIndex, int32 CallFunc_BreakHitResult_FaceIndex, const struct FVector& CallFunc_BreakHitResult_TraceStart, const struct FVector& CallFunc_BreakHitResult_TraceEnd, double K2Node_FunctionResult_Distance_ImplicitCast);
	void Find_Water_For_Refill(bool* Was_Found, class AActor** Water_Actor, TArray<class AActor*>& Temp_object_Variable, int32 Temp_int_Array_Index_Variable, int32 Temp_int_Loop_Counter_Variable, int32 CallFunc_Add_IntInt_ReturnValue, const struct FVector& CallFunc_GetActorForwardVector_ReturnValue, const struct FVector& CallFunc_Multiply_VectorFloat_ReturnValue, const struct FVector& CallFunc_K2_GetActorLocation_ReturnValue, const struct FVector& CallFunc_Add_VectorVector_ReturnValue, const struct FVector& CallFunc_Add_VectorVector_ReturnValue_1, const struct FVector& CallFunc_Subtract_VectorVector_ReturnValue, TArray<struct FHitResult>& CallFunc_LineTraceMultiForObjects_OutHits, bool CallFunc_LineTraceMultiForObjects_ReturnValue, int32 CallFunc_Array_Length_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue, const struct FHitResult& CallFunc_Array_Get_Item, bool CallFunc_BreakHitResult_bBlockingHit, bool CallFunc_BreakHitResult_bInitialOverlap, float CallFunc_BreakHitResult_Time, float CallFunc_BreakHitResult_Distance, const struct FVector& CallFunc_BreakHitResult_Location, const struct FVector& CallFunc_BreakHitResult_ImpactPoint, const struct FVector& CallFunc_BreakHitResult_Normal, const struct FVector& CallFunc_BreakHitResult_ImpactNormal, class UPhysicalMaterial* CallFunc_BreakHitResult_PhysMat, class AActor* CallFunc_BreakHitResult_HitActor, class UPrimitiveComponent* CallFunc_BreakHitResult_HitComponent, class FName CallFunc_BreakHitResult_HitBoneName, class FName CallFunc_BreakHitResult_BoneName, int32 CallFunc_BreakHitResult_HitItem, int32 CallFunc_BreakHitResult_ElementIndex, int32 CallFunc_BreakHitResult_FaceIndex, const struct FVector& CallFunc_BreakHitResult_TraceStart, const struct FVector& CallFunc_BreakHitResult_TraceEnd, class UClass* CallFunc_GetObjectClass_ReturnValue, bool CallFunc_ClassIsChildOf_ReturnValue, class UValeriaWaterBodyComponent* CallFunc_GetComponentByClass_ReturnValue, bool CallFunc_IsValid_ReturnValue);
	void FootIK(class FName SocketName, double Distance, struct FVector* Out_Hit_Location, double* FootTraceOffset, TArray<class AActor*>& Temp_object_Variable, const struct FVector& CallFunc_K2_GetComponentLocation_ReturnValue, const struct FVector& CallFunc_K2_GetActorLocation_ReturnValue, double CallFunc_BreakVector_X, double CallFunc_BreakVector_Y, double CallFunc_BreakVector_Z, const struct FVector& CallFunc_GetSocketLocation_ReturnValue, double CallFunc_BreakVector_X_1, double CallFunc_BreakVector_Y_1, double CallFunc_BreakVector_Z_1, const struct FVector& CallFunc_MakeVector_ReturnValue, double CallFunc_Subtract_DoubleDouble_ReturnValue, const struct FVector& CallFunc_MakeVector_ReturnValue_1, const struct FHitResult& CallFunc_LineTraceSingle_OutHit, bool CallFunc_LineTraceSingle_ReturnValue, bool CallFunc_BreakHitResult_bBlockingHit, bool CallFunc_BreakHitResult_bInitialOverlap, float CallFunc_BreakHitResult_Time, float CallFunc_BreakHitResult_Distance, const struct FVector& CallFunc_BreakHitResult_Location, const struct FVector& CallFunc_BreakHitResult_ImpactPoint, const struct FVector& CallFunc_BreakHitResult_Normal, const struct FVector& CallFunc_BreakHitResult_ImpactNormal, class UPhysicalMaterial* CallFunc_BreakHitResult_PhysMat, class AActor* CallFunc_BreakHitResult_HitActor, class UPrimitiveComponent* CallFunc_BreakHitResult_HitComponent, class FName CallFunc_BreakHitResult_HitBoneName, class FName CallFunc_BreakHitResult_BoneName, int32 CallFunc_BreakHitResult_HitItem, int32 CallFunc_BreakHitResult_ElementIndex, int32 CallFunc_BreakHitResult_FaceIndex, const struct FVector& CallFunc_BreakHitResult_TraceStart, const struct FVector& CallFunc_BreakHitResult_TraceEnd, const struct FVector& CallFunc_Subtract_VectorVector_ReturnValue, double CallFunc_BreakVector_X_2, double CallFunc_BreakVector_Y_2, double CallFunc_BreakVector_Z_2, double CallFunc_Subtract_DoubleDouble_ReturnValue_1);
	void HandIK(class FName SocketName, double Distance, struct FVector* Hit_Location, bool* HasHitWall, TArray<class AActor*>& Temp_object_Variable, const struct FVector& CallFunc_GetSocketLocation_ReturnValue, const struct FVector& CallFunc_GetActorForwardVector_ReturnValue, const struct FVector& CallFunc_Multiply_VectorFloat_ReturnValue, const struct FVector& CallFunc_Add_VectorVector_ReturnValue, const struct FHitResult& CallFunc_LineTraceSingle_OutHit, bool CallFunc_LineTraceSingle_ReturnValue, bool CallFunc_BreakHitResult_bBlockingHit, bool CallFunc_BreakHitResult_bInitialOverlap, float CallFunc_BreakHitResult_Time, float CallFunc_BreakHitResult_Distance, const struct FVector& CallFunc_BreakHitResult_Location, const struct FVector& CallFunc_BreakHitResult_ImpactPoint, const struct FVector& CallFunc_BreakHitResult_Normal, const struct FVector& CallFunc_BreakHitResult_ImpactNormal, class UPhysicalMaterial* CallFunc_BreakHitResult_PhysMat, class AActor* CallFunc_BreakHitResult_HitActor, class UPrimitiveComponent* CallFunc_BreakHitResult_HitComponent, class FName CallFunc_BreakHitResult_HitBoneName, class FName CallFunc_BreakHitResult_BoneName, int32 CallFunc_BreakHitResult_HitItem, int32 CallFunc_BreakHitResult_ElementIndex, int32 CallFunc_BreakHitResult_FaceIndex, const struct FVector& CallFunc_BreakHitResult_TraceStart, const struct FVector& CallFunc_BreakHitResult_TraceEnd);
	void HandleCharacterReachedZLevel(class AValeriaCharacter* Character, struct FVector& Location, const struct FVector& LastUnstuckLoation);
	void HandleGliderPropChanged(TSoftClassPtr<class UClass>& GliderPropClass, class FName& AttachPoint);
	void K2_OnMovementModeChanged(EMovementMode PrevMovementMode, EMovementMode NewMovementMode, uint8 PrevCustomMode, uint8 NewCustomMode);
	void OnAudioEventReplicated(class AActor* ActorHit, bool WasDamaged, TSoftObjectPtr<class UVAL_ItemTypeDefinitionAsset>& HeldItemType, class AActor* ExtInstigator);
	void OnCharacterMoved(float DeltaSeconds, const struct FVector& OldLocation, const struct FVector& OldVelocity);
	void OnClimbingBegunOrEndied(bool IsClimbing);
	void OnGearChanged(class UGearComponent* Param_GearComponent);
	void OnGlidingChanged(bool IsGliding);
	void OnGlidingMovementChanged(class AValeriaMoveablePawn* Pawn, EMovementMode PrevMovementMode, uint8 PreviousCustomMode);
	void OnGraphicSettingsChanged(struct FValeriaGraphicSettings& GraphicSettings);
	void OnLoaded_E20C59B141CD73ECA6FF66963812D730(TSubclassOf<class UObject> Loaded);
	void OnPossessionChanged();
	void OpenCrafter(class UCrafterComponent* New_Crafter, class UCrafterComponent* UIInterface, class UCrafterComponent* InteractorCrafter, class UInteractorComponent* CallFunc_GetInteractorComponent_ReturnValue, bool CallFunc_EqualEqual_ObjectObject_ReturnValue, class AActor* CallFunc_GetOwner_ReturnValue, class AController* CallFunc_GetController_ReturnValue, class UCrafterComponent_Automatic* CallFunc_GetComponentByClass_ReturnValue, class APlayerController* K2Node_DynamicCast_AsPlayer_Controller, bool K2Node_DynamicCast_bSuccess, class UVAL_Subsystem_GameplayUIBridge* CallFunc_GetLocalPlayerSubSystemFromPlayerController_ReturnValue, bool CallFunc_IsValid_ReturnValue, TScriptInterface<class IVAL_GameplayUIBridgeInterface> CallFunc_GetUIInterface_ReturnValue);
	void ReceiveBeginPlay();
	void ReceiveEndPlay(EEndPlayReason EndPlayReason);
	void ReceivePossessed(class AController* NewController);
	void ReceiveRestarted();
	void ReceiveTick(float DeltaSeconds);
	void RemoveCosmeticComponents();
	class FString RemoveInvisibleText(const class FString& InString, int32 CallFunc_FindSubstring_ReturnValue, bool CallFunc_Contains_ReturnValue, const class FString& CallFunc_GetSubstring_ReturnValue, bool CallFunc_Not_PreBool_ReturnValue, const class FString& CallFunc_Replace_ReturnValue, const class FString& CallFunc_SelectString_ReturnValue, const class FString& CallFunc_Replace_ReturnValue_1);
	void RemoveWidgetsForLocalPlayer(bool CallFunc_IsValid_ReturnValue, bool CallFunc_IsLocallyControlled_ReturnValue);
	void RpcServer_SetWhetherPlayingArcade(bool IsPlaying);
	void Set_Glider_Prop_Override_Class(TSoftClassPtr<class UClass>& Glider_Prop_Class, class FName AttachPoint);
	void Set_Photo_Spring_Arm_Enabled(bool Enabled);
	void Set_Whether_Playing_Arcade(bool IsPlaying, double Temp_real_Variable, double Temp_real_Variable_1, bool Temp_bool_Variable, bool CallFunc_IsLocallyControlled_ReturnValue, bool CallFunc_BooleanAND_ReturnValue, double K2Node_Select_Default);
	void TryTriggerInspirationCamera(bool* Success, bool CallFunc_IsLocallyControlled_ReturnValue, class AValeriaPlayerController* CallFunc_GetValeriaPlayerController_ReturnValue, bool CallFunc_IsValid_ReturnValue);
	void UserConstructionScript(float K2Node_VariableSet_TargetArmLength_ImplicitCast);

	class USkeletalMeshComponent* GetFaceMaskMeshComponent() const;
	class USkeletalMeshComponent* GetFacialHairMeshComponent() const;
	class USkeletalMeshComponent* GetHairMeshComponent() const;
	class USkeletalMeshComponent* GetHatMeshComponent() const;
	class USkeletalMeshComponent* GetHeadMeshComponent() const;
	class USkeletalMeshComponent* GetLegsMeshComponent() const;
	class USkeletalMeshComponent* GetRootSkeletonMeshComponent() const;
	class USceneCaptureComponent2D* GetSceneCaptureComponent_FirstPerson() const;
	class USceneCaptureComponent2D* GetSceneCaptureComponent_Selfie() const;
	class USpringArmComponent* GetSelfieModeSpringArmComponent() const;
	class USkeletalMeshComponent* GetTorsoMeshComponent() const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_ValeriaCharacter_C">();
	}
	static class ABP_ValeriaCharacter_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_ValeriaCharacter_C>();
	}
};
static_assert(alignof(ABP_ValeriaCharacter_C) == 0x000010, "Wrong alignment on ABP_ValeriaCharacter_C");
static_assert(sizeof(ABP_ValeriaCharacter_C) == 0x001740, "Wrong size on ABP_ValeriaCharacter_C");
static_assert(offsetof(ABP_ValeriaCharacter_C, UberGraphFrame) == 0x001490, "Member 'ABP_ValeriaCharacter_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_ValeriaCharacter_C, Comp_Listener_Padding) == 0x001498, "Member 'ABP_ValeriaCharacter_C::Comp_Listener_Padding' has a wrong offset!");
static_assert(offsetof(ABP_ValeriaCharacter_C, ValeriaSpringArmListener_Padding) == 0x0014A0, "Member 'ABP_ValeriaCharacter_C::ValeriaSpringArmListener_Padding' has a wrong offset!");
static_assert(offsetof(ABP_ValeriaCharacter_C, RefillWaterCanPlateWidgetComponent) == 0x0014A8, "Member 'ABP_ValeriaCharacter_C::RefillWaterCanPlateWidgetComponent' has a wrong offset!");
static_assert(offsetof(ABP_ValeriaCharacter_C, TorsoMesh) == 0x0014B0, "Member 'ABP_ValeriaCharacter_C::TorsoMesh' has a wrong offset!");
static_assert(offsetof(ABP_ValeriaCharacter_C, LegsMesh) == 0x0014B8, "Member 'ABP_ValeriaCharacter_C::LegsMesh' has a wrong offset!");
static_assert(offsetof(ABP_ValeriaCharacter_C, HatMesh) == 0x0014C0, "Member 'ABP_ValeriaCharacter_C::HatMesh' has a wrong offset!");
static_assert(offsetof(ABP_ValeriaCharacter_C, HairMesh) == 0x0014C8, "Member 'ABP_ValeriaCharacter_C::HairMesh' has a wrong offset!");
static_assert(offsetof(ABP_ValeriaCharacter_C, FaceAccMesh) == 0x0014D0, "Member 'ABP_ValeriaCharacter_C::FaceAccMesh' has a wrong offset!");
static_assert(offsetof(ABP_ValeriaCharacter_C, FaceCoverMesh) == 0x0014D8, "Member 'ABP_ValeriaCharacter_C::FaceCoverMesh' has a wrong offset!");
static_assert(offsetof(ABP_ValeriaCharacter_C, HeadMesh) == 0x0014E0, "Member 'ABP_ValeriaCharacter_C::HeadMesh' has a wrong offset!");
static_assert(offsetof(ABP_ValeriaCharacter_C, RtpcTracker) == 0x0014E8, "Member 'ABP_ValeriaCharacter_C::RtpcTracker' has a wrong offset!");
static_assert(offsetof(ABP_ValeriaCharacter_C, BP_CharacterCustomizationComponent) == 0x0014F0, "Member 'ABP_ValeriaCharacter_C::BP_CharacterCustomizationComponent' has a wrong offset!");
static_assert(offsetof(ABP_ValeriaCharacter_C, BP_VFX_playerFollowMeA_outdoor) == 0x0014F8, "Member 'ABP_ValeriaCharacter_C::BP_VFX_playerFollowMeA_outdoor' has a wrong offset!");
static_assert(offsetof(ABP_ValeriaCharacter_C, AudioPoolManager) == 0x001500, "Member 'ABP_ValeriaCharacter_C::AudioPoolManager' has a wrong offset!");
static_assert(offsetof(ABP_ValeriaCharacter_C, BP_FoliageRustleAudio) == 0x001508, "Member 'ABP_ValeriaCharacter_C::BP_FoliageRustleAudio' has a wrong offset!");
static_assert(offsetof(ABP_ValeriaCharacter_C, BP_StaminaPlateWidgetComponent) == 0x001510, "Member 'ABP_ValeriaCharacter_C::BP_StaminaPlateWidgetComponent' has a wrong offset!");
static_assert(offsetof(ABP_ValeriaCharacter_C, SceneCapture_Selfie) == 0x001518, "Member 'ABP_ValeriaCharacter_C::SceneCapture_Selfie' has a wrong offset!");
static_assert(offsetof(ABP_ValeriaCharacter_C, SceneCapture_FP) == 0x001520, "Member 'ABP_ValeriaCharacter_C::SceneCapture_FP' has a wrong offset!");
static_assert(offsetof(ABP_ValeriaCharacter_C, PhotographyBoom_Selfie) == 0x001528, "Member 'ABP_ValeriaCharacter_C::PhotographyBoom_Selfie' has a wrong offset!");
static_assert(offsetof(ABP_ValeriaCharacter_C, PhotographyBoom_FP) == 0x001530, "Member 'ABP_ValeriaCharacter_C::PhotographyBoom_FP' has a wrong offset!");
static_assert(offsetof(ABP_ValeriaCharacter_C, VoiceSetComponent) == 0x001538, "Member 'ABP_ValeriaCharacter_C::VoiceSetComponent' has a wrong offset!");
static_assert(offsetof(ABP_ValeriaCharacter_C, Comp_Player_Audio) == 0x001540, "Member 'ABP_ValeriaCharacter_C::Comp_Player_Audio' has a wrong offset!");
static_assert(offsetof(ABP_ValeriaCharacter_C, Comp_Actor_AudioData) == 0x001548, "Member 'ABP_ValeriaCharacter_C::Comp_Actor_AudioData' has a wrong offset!");
static_assert(offsetof(ABP_ValeriaCharacter_C, BP_FishingViewComponent) == 0x001550, "Member 'ABP_ValeriaCharacter_C::BP_FishingViewComponent' has a wrong offset!");
static_assert(offsetof(ABP_ValeriaCharacter_C, BP_CameraFadeScenery) == 0x001558, "Member 'ABP_ValeriaCharacter_C::BP_CameraFadeScenery' has a wrong offset!");
static_assert(offsetof(ABP_ValeriaCharacter_C, BP_CharacterPlateWidgetComponent) == 0x001560, "Member 'ABP_ValeriaCharacter_C::BP_CharacterPlateWidgetComponent' has a wrong offset!");
static_assert(offsetof(ABP_ValeriaCharacter_C, FishingSafeArea) == 0x001568, "Member 'ABP_ValeriaCharacter_C::FishingSafeArea' has a wrong offset!");
static_assert(offsetof(ABP_ValeriaCharacter_C, IsPlayingArcade) == 0x001570, "Member 'ABP_ValeriaCharacter_C::IsPlayingArcade' has a wrong offset!");
static_assert(offsetof(ABP_ValeriaCharacter_C, TempCarriedMesh) == 0x001578, "Member 'ABP_ValeriaCharacter_C::TempCarriedMesh' has a wrong offset!");
static_assert(offsetof(ABP_ValeriaCharacter_C, MusicPriority) == 0x001580, "Member 'ABP_ValeriaCharacter_C::MusicPriority' has a wrong offset!");
static_assert(offsetof(ABP_ValeriaCharacter_C, ShouldRunCosmetics) == 0x001590, "Member 'ABP_ValeriaCharacter_C::ShouldRunCosmetics' has a wrong offset!");
static_assert(offsetof(ABP_ValeriaCharacter_C, GliderPropMap) == 0x001598, "Member 'ABP_ValeriaCharacter_C::GliderPropMap' has a wrong offset!");
static_assert(offsetof(ABP_ValeriaCharacter_C, PreloadGliderHardRef) == 0x0015E8, "Member 'ABP_ValeriaCharacter_C::PreloadGliderHardRef' has a wrong offset!");
static_assert(offsetof(ABP_ValeriaCharacter_C, GliderGearGameplayTag) == 0x0015F0, "Member 'ABP_ValeriaCharacter_C::GliderGearGameplayTag' has a wrong offset!");
static_assert(offsetof(ABP_ValeriaCharacter_C, DefaultGliderPropMap) == 0x0015F8, "Member 'ABP_ValeriaCharacter_C::DefaultGliderPropMap' has a wrong offset!");
static_assert(offsetof(ABP_ValeriaCharacter_C, IKHipOffset) == 0x001648, "Member 'ABP_ValeriaCharacter_C::IKHipOffset' has a wrong offset!");
static_assert(offsetof(ABP_ValeriaCharacter_C, IKLeft_Foot_Offset) == 0x001650, "Member 'ABP_ValeriaCharacter_C::IKLeft_Foot_Offset' has a wrong offset!");
static_assert(offsetof(ABP_ValeriaCharacter_C, Delta_Seconds) == 0x001658, "Member 'ABP_ValeriaCharacter_C::Delta_Seconds' has a wrong offset!");
static_assert(offsetof(ABP_ValeriaCharacter_C, IKRight_Foot_Offset) == 0x001660, "Member 'ABP_ValeriaCharacter_C::IKRight_Foot_Offset' has a wrong offset!");
static_assert(offsetof(ABP_ValeriaCharacter_C, IKRightHandLocation) == 0x001668, "Member 'ABP_ValeriaCharacter_C::IKRightHandLocation' has a wrong offset!");
static_assert(offsetof(ABP_ValeriaCharacter_C, IKLeftHandLocation) == 0x001680, "Member 'ABP_ValeriaCharacter_C::IKLeftHandLocation' has a wrong offset!");
static_assert(offsetof(ABP_ValeriaCharacter_C, LeftHandHitWall) == 0x001698, "Member 'ABP_ValeriaCharacter_C::LeftHandHitWall' has a wrong offset!");
static_assert(offsetof(ABP_ValeriaCharacter_C, RightHandHitWall) == 0x001699, "Member 'ABP_ValeriaCharacter_C::RightHandHitWall' has a wrong offset!");
static_assert(offsetof(ABP_ValeriaCharacter_C, GliderPropClassOverride) == 0x0016A0, "Member 'ABP_ValeriaCharacter_C::GliderPropClassOverride' has a wrong offset!");
static_assert(offsetof(ABP_ValeriaCharacter_C, GliderCameraPanBack) == 0x0016C8, "Member 'ABP_ValeriaCharacter_C::GliderCameraPanBack' has a wrong offset!");
static_assert(offsetof(ABP_ValeriaCharacter_C, GliderCameraPanUp) == 0x0016D0, "Member 'ABP_ValeriaCharacter_C::GliderCameraPanUp' has a wrong offset!");
static_assert(offsetof(ABP_ValeriaCharacter_C, StartCameraPosition) == 0x0016D8, "Member 'ABP_ValeriaCharacter_C::StartCameraPosition' has a wrong offset!");
static_assert(offsetof(ABP_ValeriaCharacter_C, WaterSphereOverlapOffset) == 0x0016F0, "Member 'ABP_ValeriaCharacter_C::WaterSphereOverlapOffset' has a wrong offset!");
static_assert(offsetof(ABP_ValeriaCharacter_C, WaterSphereOverlapRadius) == 0x0016F8, "Member 'ABP_ValeriaCharacter_C::WaterSphereOverlapRadius' has a wrong offset!");
static_assert(offsetof(ABP_ValeriaCharacter_C, WaterSphereOverlapObjectTypes) == 0x001700, "Member 'ABP_ValeriaCharacter_C::WaterSphereOverlapObjectTypes' has a wrong offset!");
static_assert(offsetof(ABP_ValeriaCharacter_C, WateringCanTimer) == 0x001710, "Member 'ABP_ValeriaCharacter_C::WateringCanTimer' has a wrong offset!");
static_assert(offsetof(ABP_ValeriaCharacter_C, DialoguePrintSound) == 0x001718, "Member 'ABP_ValeriaCharacter_C::DialoguePrintSound' has a wrong offset!");
static_assert(offsetof(ABP_ValeriaCharacter_C, DialogueFullyShownSound) == 0x001720, "Member 'ABP_ValeriaCharacter_C::DialogueFullyShownSound' has a wrong offset!");
static_assert(offsetof(ABP_ValeriaCharacter_C, PreviousDialogueStringLength) == 0x001728, "Member 'ABP_ValeriaCharacter_C::PreviousDialogueStringLength' has a wrong offset!");
static_assert(offsetof(ABP_ValeriaCharacter_C, Glider_Attach_Point_Override) == 0x00172C, "Member 'ABP_ValeriaCharacter_C::Glider_Attach_Point_Override' has a wrong offset!");

}

