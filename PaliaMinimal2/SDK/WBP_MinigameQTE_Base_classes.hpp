#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_MinigameQTE_Base

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "SlateCore_structs.hpp"
#include "UMG_classes.hpp"
#include "Palia_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_MinigameQTE_Base.WBP_MinigameQTE_Base_C
// 0x0088 (0x0348 - 0x02C0)
class UWBP_MinigameQTE_Base_C : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02C0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UMinigameComponentMasterQTE*            LinkedMinigame;                                    // 0x02C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TSoftObjectPtr<class UVAL_TutorialFlagDefinition> FTUEFlag;                                          // 0x02D0(0x0028)(Edit, BlueprintVisible, HasGetValueTypeHash)
	TSoftClassPtr<class UClass>                   TutorialWidget;                                    // 0x02F8(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	bool                                          StartMinigameOnLink;                               // 0x0320(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          FTUE_IsOpen;                                       // 0x0321(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_516F[0x2];                                     // 0x0322(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMargin                                StandardPadding;                                   // 0x0324(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FMargin                                CinematicCameraPadding;                            // 0x0334(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)

public:
	void BindMinigameInputEvents(TDelegate<void(class UMinigameComponentBase* Comp, EMinigameState PrevState, EMinigameState NewState)> K2Node_CreateDelegate_OutputDelegate, TDelegate<void(class UMinigameComponentMasterQTE* Comp)> K2Node_CreateDelegate_OutputDelegate_1, TDelegate<void(class UMinigameComponentMasterQTE* Comp)> K2Node_CreateDelegate_OutputDelegate_2, TDelegate<void(class UMinigameComponentMasterQTE* Comp)> K2Node_CreateDelegate_OutputDelegate_3, bool CallFunc_IsValid_ReturnValue);
	void DisassociateFromMinigame();
	void ExecuteUbergraph_WBP_MinigameQTE_Base(int32 EntryPoint);
	void ExpectedInputMissed(class UMinigameComponentMasterQTE* Comp);
	void FTUE_OnClosing(class UWidget* Widget);
	void HandleOpenTutorialModal(class UUserWidget* ModalWidget, TArray<class UUserWidget*>& TutorialWidgets, TDelegate<void(class UWidget* Widget)> K2Node_CreateDelegate_OutputDelegate, class APlayerController* CallFunc_GetOwningPlayer_ReturnValue, class US6UI_ModalWidgetBase* K2Node_DynamicCast_AsS6UI_Modal_Widget_Base, bool K2Node_DynamicCast_bSuccess, class US6UI_UIManagerWidgetBase* CallFunc_GetUIManagerWidget_ReturnValue, TScriptInterface<class IBP_ModalInterface_Tutorial_C> K2Node_DynamicCast_AsBP_Modal_Interface_Tutorial, bool K2Node_DynamicCast_bSuccess_1, class UObject* CallFunc_LoadAsset_Blocking_ReturnValue, class UVAL_TutorialFlagDefinition* K2Node_DynamicCast_AsVAL_Tutorial_Flag_Definition, bool K2Node_DynamicCast_bSuccess_2);
	void IsFTUEOpen(bool* IsOpen);
	void LinkMinigame(class UMinigameComponentMasterQTE* NewMinigame, class UTexture2D* DefaultAfterImageTexture, class UCrafterComponent* Crafter, bool CallFunc_IsValid_ReturnValue, bool CallFunc_IsValid_ReturnValue_1, bool CallFunc_IsPlaying_ReturnValue, bool CallFunc_TryOpenFTUE_Open, bool CallFunc_IsPaused_ReturnValue, bool CallFunc_Not_PreBool_ReturnValue, bool CallFunc_BooleanAND_ReturnValue, bool CallFunc_IsServer_ReturnValue, bool CallFunc_Not_PreBool_ReturnValue_1, bool CallFunc_EqualEqual_ObjectObject_ReturnValue);
	void MinigameOnStateChanged(class UMinigameComponentBase* Comp, EMinigameState PrevState, EMinigameState NewState, bool K2Node_SwitchEnum_CmpSuccess);
	void MistimedInputReceived(class UMinigameComponentMasterQTE* Comp);
	void OnMinigameLinked();
	void OnMinigameLinkedAndUIFocus();
	void OnStartMinigame();
	void StartMinigame();
	void SuccessfulInputReceived(class UMinigameComponentMasterQTE* Comp);
	void TryOpenFTUE(bool* Open, class APlayerController* OwningPlayer, class APlayerController* CallFunc_GetPlayerController_ReturnValue, TDelegate<void(class UUserWidget* ModalWidget, TArray<class UUserWidget*>& TutorialWidgets)> K2Node_CreateDelegate_OutputDelegate, class US6UI_UIManagerWidgetBase* CallFunc_GetUIManagerWidget_ReturnValue, TSoftClassPtr<class UClass> CallFunc_RedirectModalType_ReturnValue, TArray<TSoftClassPtr<class UClass>>& K2Node_MakeArray_Array, bool CallFunc_IsValidSoftClassReference_ReturnValue, class APlayerController* CallFunc_GetOwningPlayer_ReturnValue, class UObject* CallFunc_LoadAsset_Blocking_ReturnValue, class UVAL_TutorialFlagsManager* CallFunc_GetLocalPlayerSubsystem_ReturnValue, class UVAL_TutorialFlagsManager* CallFunc_GetLocalPlayerSubsystem_ReturnValue_1, bool CallFunc_CanStartTutorialForFlag_ReturnValue);
	void UnbindMinigameInputEvents(TDelegate<void(class UMinigameComponentBase* Comp, EMinigameState PrevState, EMinigameState NewState)> K2Node_CreateDelegate_OutputDelegate, TDelegate<void(class UMinigameComponentMasterQTE* Comp)> K2Node_CreateDelegate_OutputDelegate_1, TDelegate<void(class UMinigameComponentMasterQTE* Comp)> K2Node_CreateDelegate_OutputDelegate_2, TDelegate<void(class UMinigameComponentMasterQTE* Comp)> K2Node_CreateDelegate_OutputDelegate_3, bool CallFunc_IsValid_ReturnValue);
	void UpdatePadding(const class FString& CVarCookingCamera, class UValeriaGameUserSettings* CallFunc_GetValeriaGameUserSettings_ReturnValue, bool CallFunc_GetShowCookingCamera_ReturnValue, bool CallFunc_GetConsoleVariableBoolValue_ReturnValue, bool CallFunc_IsDesktop_ReturnValue, bool CallFunc_BooleanAND_ReturnValue, class UValeriaGameUserSettings* CallFunc_GetValeriaGameUserSettings_ReturnValue_1, bool CallFunc_GetShowCookingCamera_ReturnValue_1);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_MinigameQTE_Base_C">();
	}
	static class UWBP_MinigameQTE_Base_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_MinigameQTE_Base_C>();
	}
};
static_assert(alignof(UWBP_MinigameQTE_Base_C) == 0x000008, "Wrong alignment on UWBP_MinigameQTE_Base_C");
static_assert(sizeof(UWBP_MinigameQTE_Base_C) == 0x000348, "Wrong size on UWBP_MinigameQTE_Base_C");
static_assert(offsetof(UWBP_MinigameQTE_Base_C, UberGraphFrame) == 0x0002C0, "Member 'UWBP_MinigameQTE_Base_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWBP_MinigameQTE_Base_C, LinkedMinigame) == 0x0002C8, "Member 'UWBP_MinigameQTE_Base_C::LinkedMinigame' has a wrong offset!");
static_assert(offsetof(UWBP_MinigameQTE_Base_C, FTUEFlag) == 0x0002D0, "Member 'UWBP_MinigameQTE_Base_C::FTUEFlag' has a wrong offset!");
static_assert(offsetof(UWBP_MinigameQTE_Base_C, TutorialWidget) == 0x0002F8, "Member 'UWBP_MinigameQTE_Base_C::TutorialWidget' has a wrong offset!");
static_assert(offsetof(UWBP_MinigameQTE_Base_C, StartMinigameOnLink) == 0x000320, "Member 'UWBP_MinigameQTE_Base_C::StartMinigameOnLink' has a wrong offset!");
static_assert(offsetof(UWBP_MinigameQTE_Base_C, FTUE_IsOpen) == 0x000321, "Member 'UWBP_MinigameQTE_Base_C::FTUE_IsOpen' has a wrong offset!");
static_assert(offsetof(UWBP_MinigameQTE_Base_C, StandardPadding) == 0x000324, "Member 'UWBP_MinigameQTE_Base_C::StandardPadding' has a wrong offset!");
static_assert(offsetof(UWBP_MinigameQTE_Base_C, CinematicCameraPadding) == 0x000334, "Member 'UWBP_MinigameQTE_Base_C::CinematicCameraPadding' has a wrong offset!");

}

