#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: FormatFunctionLibrary

#include "Basic.hpp"

#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function FormatFunctionLibrary.FormatFunctionLibrary_C.FormatTime_HHMMSS
// 0x0390 (0x0390 - 0x0000)
struct FormatFunctionLibrary_C_FormatTime_HHMMSS final
{
public:
	int64                                         TotalSeconds;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FText                                   FormattedTime;                                     // 0x0010(0x0018)(Parm, OutParm)
	class FText                                   HoursText;                                         // 0x0028(0x0018)(Edit, BlueprintVisible)
	class FText                                   MinutesText;                                       // 0x0040(0x0018)(Edit, BlueprintVisible)
	class FText                                   SecondsText;                                       // 0x0058(0x0018)(Edit, BlueprintVisible)
	int64                                         Hours;                                             // 0x0070(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int64                                         Minutes;                                           // 0x0078(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int64                                         Seconds;                                           // 0x0080(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4B89[0x7];                                     // 0x0089(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	int64                                         CallFunc_Divide_Int64Int64_ReturnValue;            // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int64                                         CallFunc_Divide_Int64Int64_ReturnValue_1;          // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x00A0(0x0050)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x00F0(0x0050)(HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0140(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4B8A[0x7];                                     // 0x0141(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_2;            // 0x0148(0x0050)(HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_Int64ToText_ReturnValue;             // 0x0198(0x0018)()
	class FText                                   CallFunc_Conv_Int64ToText_ReturnValue_1;           // 0x01B0(0x0018)()
	class FText                                   CallFunc_Conv_Int64ToText_ReturnValue_2;           // 0x01C8(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_3;            // 0x01E0(0x0050)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0230(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0240(0x0018)()
	int64                                         CallFunc_Percent_Int64Int64_ReturnValue;           // 0x0258(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int64                                         CallFunc_Percent_Int64Int64_ReturnValue_1;         // 0x0260(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_4;            // 0x0268(0x0050)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_1;                          // 0x02B8(0x0010)(ReferenceParm)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_5;            // 0x02C8(0x0050)(HasGetValueTypeHash)
	class FText                                   CallFunc_Format_ReturnValue_1;                     // 0x0318(0x0018)()
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_2;                          // 0x0330(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue_2;                     // 0x0340(0x0018)()
	bool                                          CallFunc_Greater_Int64Int64_ReturnValue;           // 0x0358(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_Int64Int64_ReturnValue_1;         // 0x0359(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4B8B[0x6];                                     // 0x035A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select_Default;                             // 0x0360(0x0018)()
	class FText                                   K2Node_Select_Default_1;                           // 0x0378(0x0018)()
};
static_assert(alignof(FormatFunctionLibrary_C_FormatTime_HHMMSS) == 0x000008, "Wrong alignment on FormatFunctionLibrary_C_FormatTime_HHMMSS");
static_assert(sizeof(FormatFunctionLibrary_C_FormatTime_HHMMSS) == 0x000390, "Wrong size on FormatFunctionLibrary_C_FormatTime_HHMMSS");
static_assert(offsetof(FormatFunctionLibrary_C_FormatTime_HHMMSS, TotalSeconds) == 0x000000, "Member 'FormatFunctionLibrary_C_FormatTime_HHMMSS::TotalSeconds' has a wrong offset!");
static_assert(offsetof(FormatFunctionLibrary_C_FormatTime_HHMMSS, __WorldContext) == 0x000008, "Member 'FormatFunctionLibrary_C_FormatTime_HHMMSS::__WorldContext' has a wrong offset!");
static_assert(offsetof(FormatFunctionLibrary_C_FormatTime_HHMMSS, FormattedTime) == 0x000010, "Member 'FormatFunctionLibrary_C_FormatTime_HHMMSS::FormattedTime' has a wrong offset!");
static_assert(offsetof(FormatFunctionLibrary_C_FormatTime_HHMMSS, HoursText) == 0x000028, "Member 'FormatFunctionLibrary_C_FormatTime_HHMMSS::HoursText' has a wrong offset!");
static_assert(offsetof(FormatFunctionLibrary_C_FormatTime_HHMMSS, MinutesText) == 0x000040, "Member 'FormatFunctionLibrary_C_FormatTime_HHMMSS::MinutesText' has a wrong offset!");
static_assert(offsetof(FormatFunctionLibrary_C_FormatTime_HHMMSS, SecondsText) == 0x000058, "Member 'FormatFunctionLibrary_C_FormatTime_HHMMSS::SecondsText' has a wrong offset!");
static_assert(offsetof(FormatFunctionLibrary_C_FormatTime_HHMMSS, Hours) == 0x000070, "Member 'FormatFunctionLibrary_C_FormatTime_HHMMSS::Hours' has a wrong offset!");
static_assert(offsetof(FormatFunctionLibrary_C_FormatTime_HHMMSS, Minutes) == 0x000078, "Member 'FormatFunctionLibrary_C_FormatTime_HHMMSS::Minutes' has a wrong offset!");
static_assert(offsetof(FormatFunctionLibrary_C_FormatTime_HHMMSS, Seconds) == 0x000080, "Member 'FormatFunctionLibrary_C_FormatTime_HHMMSS::Seconds' has a wrong offset!");
static_assert(offsetof(FormatFunctionLibrary_C_FormatTime_HHMMSS, Temp_bool_Variable) == 0x000088, "Member 'FormatFunctionLibrary_C_FormatTime_HHMMSS::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(FormatFunctionLibrary_C_FormatTime_HHMMSS, CallFunc_Divide_Int64Int64_ReturnValue) == 0x000090, "Member 'FormatFunctionLibrary_C_FormatTime_HHMMSS::CallFunc_Divide_Int64Int64_ReturnValue' has a wrong offset!");
static_assert(offsetof(FormatFunctionLibrary_C_FormatTime_HHMMSS, CallFunc_Divide_Int64Int64_ReturnValue_1) == 0x000098, "Member 'FormatFunctionLibrary_C_FormatTime_HHMMSS::CallFunc_Divide_Int64Int64_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(FormatFunctionLibrary_C_FormatTime_HHMMSS, K2Node_MakeStruct_FormatArgumentData) == 0x0000A0, "Member 'FormatFunctionLibrary_C_FormatTime_HHMMSS::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(FormatFunctionLibrary_C_FormatTime_HHMMSS, K2Node_MakeStruct_FormatArgumentData_1) == 0x0000F0, "Member 'FormatFunctionLibrary_C_FormatTime_HHMMSS::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(FormatFunctionLibrary_C_FormatTime_HHMMSS, Temp_bool_Variable_1) == 0x000140, "Member 'FormatFunctionLibrary_C_FormatTime_HHMMSS::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(FormatFunctionLibrary_C_FormatTime_HHMMSS, K2Node_MakeStruct_FormatArgumentData_2) == 0x000148, "Member 'FormatFunctionLibrary_C_FormatTime_HHMMSS::K2Node_MakeStruct_FormatArgumentData_2' has a wrong offset!");
static_assert(offsetof(FormatFunctionLibrary_C_FormatTime_HHMMSS, CallFunc_Conv_Int64ToText_ReturnValue) == 0x000198, "Member 'FormatFunctionLibrary_C_FormatTime_HHMMSS::CallFunc_Conv_Int64ToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(FormatFunctionLibrary_C_FormatTime_HHMMSS, CallFunc_Conv_Int64ToText_ReturnValue_1) == 0x0001B0, "Member 'FormatFunctionLibrary_C_FormatTime_HHMMSS::CallFunc_Conv_Int64ToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(FormatFunctionLibrary_C_FormatTime_HHMMSS, CallFunc_Conv_Int64ToText_ReturnValue_2) == 0x0001C8, "Member 'FormatFunctionLibrary_C_FormatTime_HHMMSS::CallFunc_Conv_Int64ToText_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(FormatFunctionLibrary_C_FormatTime_HHMMSS, K2Node_MakeStruct_FormatArgumentData_3) == 0x0001E0, "Member 'FormatFunctionLibrary_C_FormatTime_HHMMSS::K2Node_MakeStruct_FormatArgumentData_3' has a wrong offset!");
static_assert(offsetof(FormatFunctionLibrary_C_FormatTime_HHMMSS, K2Node_MakeArray_Array) == 0x000230, "Member 'FormatFunctionLibrary_C_FormatTime_HHMMSS::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(FormatFunctionLibrary_C_FormatTime_HHMMSS, CallFunc_Format_ReturnValue) == 0x000240, "Member 'FormatFunctionLibrary_C_FormatTime_HHMMSS::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(FormatFunctionLibrary_C_FormatTime_HHMMSS, CallFunc_Percent_Int64Int64_ReturnValue) == 0x000258, "Member 'FormatFunctionLibrary_C_FormatTime_HHMMSS::CallFunc_Percent_Int64Int64_ReturnValue' has a wrong offset!");
static_assert(offsetof(FormatFunctionLibrary_C_FormatTime_HHMMSS, CallFunc_Percent_Int64Int64_ReturnValue_1) == 0x000260, "Member 'FormatFunctionLibrary_C_FormatTime_HHMMSS::CallFunc_Percent_Int64Int64_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(FormatFunctionLibrary_C_FormatTime_HHMMSS, K2Node_MakeStruct_FormatArgumentData_4) == 0x000268, "Member 'FormatFunctionLibrary_C_FormatTime_HHMMSS::K2Node_MakeStruct_FormatArgumentData_4' has a wrong offset!");
static_assert(offsetof(FormatFunctionLibrary_C_FormatTime_HHMMSS, K2Node_MakeArray_Array_1) == 0x0002B8, "Member 'FormatFunctionLibrary_C_FormatTime_HHMMSS::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(FormatFunctionLibrary_C_FormatTime_HHMMSS, K2Node_MakeStruct_FormatArgumentData_5) == 0x0002C8, "Member 'FormatFunctionLibrary_C_FormatTime_HHMMSS::K2Node_MakeStruct_FormatArgumentData_5' has a wrong offset!");
static_assert(offsetof(FormatFunctionLibrary_C_FormatTime_HHMMSS, CallFunc_Format_ReturnValue_1) == 0x000318, "Member 'FormatFunctionLibrary_C_FormatTime_HHMMSS::CallFunc_Format_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(FormatFunctionLibrary_C_FormatTime_HHMMSS, K2Node_MakeArray_Array_2) == 0x000330, "Member 'FormatFunctionLibrary_C_FormatTime_HHMMSS::K2Node_MakeArray_Array_2' has a wrong offset!");
static_assert(offsetof(FormatFunctionLibrary_C_FormatTime_HHMMSS, CallFunc_Format_ReturnValue_2) == 0x000340, "Member 'FormatFunctionLibrary_C_FormatTime_HHMMSS::CallFunc_Format_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(FormatFunctionLibrary_C_FormatTime_HHMMSS, CallFunc_Greater_Int64Int64_ReturnValue) == 0x000358, "Member 'FormatFunctionLibrary_C_FormatTime_HHMMSS::CallFunc_Greater_Int64Int64_ReturnValue' has a wrong offset!");
static_assert(offsetof(FormatFunctionLibrary_C_FormatTime_HHMMSS, CallFunc_Greater_Int64Int64_ReturnValue_1) == 0x000359, "Member 'FormatFunctionLibrary_C_FormatTime_HHMMSS::CallFunc_Greater_Int64Int64_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(FormatFunctionLibrary_C_FormatTime_HHMMSS, K2Node_Select_Default) == 0x000360, "Member 'FormatFunctionLibrary_C_FormatTime_HHMMSS::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(FormatFunctionLibrary_C_FormatTime_HHMMSS, K2Node_Select_Default_1) == 0x000378, "Member 'FormatFunctionLibrary_C_FormatTime_HHMMSS::K2Node_Select_Default_1' has a wrong offset!");

}

