#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Time_Of_Day_Audio

#include "Basic.hpp"

#include "BP_Time_Of_Day_Audio_classes.hpp"
#include "BP_Time_Of_Day_Audio_parameters.hpp"


namespace SDK
{

// Function BP_Time_Of_Day_Audio.BP_Time_Of_Day_Audio_C.CheckTime
// (BlueprintCallable, BlueprintEvent)

void ABP_Time_Of_Day_Audio_C::CheckTime()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Time_Of_Day_Audio_C", "CheckTime");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Time_Of_Day_Audio.BP_Time_Of_Day_Audio_C.DoesTimeMatchCurrentTime
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// int32                                   Hour                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Minutes                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   CallFunc_Get_Hours_and_Minutes_ClockHour               (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   CallFunc_Get_Hours_and_Minutes_ClockMinute             (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    CallFunc_EqualEqual_IntInt_ReturnValue                 (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    CallFunc_EqualEqual_IntInt_ReturnValue_1               (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    CallFunc_BooleanAND_ReturnValue                        (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool ABP_Time_Of_Day_Audio_C::DoesTimeMatchCurrentTime(int32 Hour, int32 Minutes, int32 CallFunc_Get_Hours_and_Minutes_ClockHour, int32 CallFunc_Get_Hours_and_Minutes_ClockMinute, bool CallFunc_EqualEqual_IntInt_ReturnValue, bool CallFunc_EqualEqual_IntInt_ReturnValue_1, bool CallFunc_BooleanAND_ReturnValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Time_Of_Day_Audio_C", "DoesTimeMatchCurrentTime");

	Params::BP_Time_Of_Day_Audio_C_DoesTimeMatchCurrentTime Parms{};

	Parms.Hour = Hour;
	Parms.Minutes = Minutes;
	Parms.CallFunc_Get_Hours_and_Minutes_ClockHour = CallFunc_Get_Hours_and_Minutes_ClockHour;
	Parms.CallFunc_Get_Hours_and_Minutes_ClockMinute = CallFunc_Get_Hours_and_Minutes_ClockMinute;
	Parms.CallFunc_EqualEqual_IntInt_ReturnValue = CallFunc_EqualEqual_IntInt_ReturnValue;
	Parms.CallFunc_EqualEqual_IntInt_ReturnValue_1 = CallFunc_EqualEqual_IntInt_ReturnValue_1;
	Parms.CallFunc_BooleanAND_ReturnValue = CallFunc_BooleanAND_ReturnValue;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_Time_Of_Day_Audio.BP_Time_Of_Day_Audio_C.ExecuteUbergraph_BP_Time_Of_Day_Audio
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// ETimeOfDayPeriod                        K2Node_CustomEvent_period                              (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    CallFunc_IsUsingCustomTime_True                        (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    CallFunc_IsDedicatedServer_ReturnValue                 (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   CallFunc_Get_Hours_and_Minutes_ClockHour               (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   CallFunc_Get_Hours_and_Minutes_ClockMinute             (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TDelegate<void()>                       K2Node_CreateDelegate_OutputDelegate                   (ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// struct FTimerHandle                     CallFunc_K2_SetTimerDelegate_ReturnValue               (NoDestructor, HasGetValueTypeHash)
// class UValeriaWeather*                  CallFunc_GetWorldSubsystem_ReturnValue                 (ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool                                    CallFunc_NotEqual_IntInt_ReturnValue                   (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AValEnvironmentManager*           CallFunc_GetCurrentEnvManager_ReturnValue              (ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// TDelegate<void(ETimeOfDayPeriod Period)>K2Node_CreateDelegate_OutputDelegate_1                 (ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_Time_Of_Day_Audio_C::ExecuteUbergraph_BP_Time_Of_Day_Audio(int32 EntryPoint, ETimeOfDayPeriod K2Node_CustomEvent_period, bool CallFunc_IsUsingCustomTime_True, bool CallFunc_IsDedicatedServer_ReturnValue, int32 CallFunc_Get_Hours_and_Minutes_ClockHour, int32 CallFunc_Get_Hours_and_Minutes_ClockMinute, TDelegate<void()> K2Node_CreateDelegate_OutputDelegate, const struct FTimerHandle& CallFunc_K2_SetTimerDelegate_ReturnValue, class UValeriaWeather* CallFunc_GetWorldSubsystem_ReturnValue, bool CallFunc_NotEqual_IntInt_ReturnValue, class AValEnvironmentManager* CallFunc_GetCurrentEnvManager_ReturnValue, TDelegate<void(ETimeOfDayPeriod Period)> K2Node_CreateDelegate_OutputDelegate_1)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Time_Of_Day_Audio_C", "ExecuteUbergraph_BP_Time_Of_Day_Audio");

	Params::BP_Time_Of_Day_Audio_C_ExecuteUbergraph_BP_Time_Of_Day_Audio Parms{};

	Parms.EntryPoint = EntryPoint;
	Parms.K2Node_CustomEvent_period = K2Node_CustomEvent_period;
	Parms.CallFunc_IsUsingCustomTime_True = CallFunc_IsUsingCustomTime_True;
	Parms.CallFunc_IsDedicatedServer_ReturnValue = CallFunc_IsDedicatedServer_ReturnValue;
	Parms.CallFunc_Get_Hours_and_Minutes_ClockHour = CallFunc_Get_Hours_and_Minutes_ClockHour;
	Parms.CallFunc_Get_Hours_and_Minutes_ClockMinute = CallFunc_Get_Hours_and_Minutes_ClockMinute;
	Parms.K2Node_CreateDelegate_OutputDelegate = K2Node_CreateDelegate_OutputDelegate;
	Parms.CallFunc_K2_SetTimerDelegate_ReturnValue = std::move(CallFunc_K2_SetTimerDelegate_ReturnValue);
	Parms.CallFunc_GetWorldSubsystem_ReturnValue = CallFunc_GetWorldSubsystem_ReturnValue;
	Parms.CallFunc_NotEqual_IntInt_ReturnValue = CallFunc_NotEqual_IntInt_ReturnValue;
	Parms.CallFunc_GetCurrentEnvManager_ReturnValue = CallFunc_GetCurrentEnvManager_ReturnValue;
	Parms.K2Node_CreateDelegate_OutputDelegate_1 = K2Node_CreateDelegate_OutputDelegate_1;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Time_Of_Day_Audio.BP_Time_Of_Day_Audio_C.Get Hours and Minutes
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// int32                                   ClockHour                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   ClockMinute                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UValeriaTimeManager*              CallFunc_GetGameInstanceSubsystem_ReturnValue          (ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// struct FClockTimeInValeria              CallFunc_GetClockTime_ReturnValue                      (NoDestructor)

void ABP_Time_Of_Day_Audio_C::Get_Hours_and_Minutes(int32* ClockHour, int32* ClockMinute, class UValeriaTimeManager* CallFunc_GetGameInstanceSubsystem_ReturnValue, const struct FClockTimeInValeria& CallFunc_GetClockTime_ReturnValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Time_Of_Day_Audio_C", "Get Hours and Minutes");

	Params::BP_Time_Of_Day_Audio_C_Get_Hours_and_Minutes Parms{};

	Parms.CallFunc_GetGameInstanceSubsystem_ReturnValue = CallFunc_GetGameInstanceSubsystem_ReturnValue;
	Parms.CallFunc_GetClockTime_ReturnValue = std::move(CallFunc_GetClockTime_ReturnValue);

	UObject::ProcessEvent(Func, &Parms);

	if (ClockHour != nullptr)
		*ClockHour = Parms.ClockHour;

	if (ClockMinute != nullptr)
		*ClockMinute = Parms.ClockMinute;
}


// Function BP_Time_Of_Day_Audio.BP_Time_Of_Day_Audio_C.IsOnHousingPlot
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    IsOnPlot                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AHousingPlotActor*                HousingPlot                                            (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class APlayerController*                CallFunc_GetPlayerController_ReturnValue               (ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class AValeriaPlayerController*         K2Node_DynamicCast_AsValeria_Player_Controller         (ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool                                    K2Node_DynamicCast_bSuccess                            (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AHousingPlotActor*                CallFunc_GetCurrentHousingPlot_ReturnValue             (ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool                                    CallFunc_IsValid_ReturnValue                           (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Time_Of_Day_Audio_C::IsOnHousingPlot(bool* IsOnPlot, class AHousingPlotActor** HousingPlot, class APlayerController* CallFunc_GetPlayerController_ReturnValue, class AValeriaPlayerController* K2Node_DynamicCast_AsValeria_Player_Controller, bool K2Node_DynamicCast_bSuccess, class AHousingPlotActor* CallFunc_GetCurrentHousingPlot_ReturnValue, bool CallFunc_IsValid_ReturnValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Time_Of_Day_Audio_C", "IsOnHousingPlot");

	Params::BP_Time_Of_Day_Audio_C_IsOnHousingPlot Parms{};

	Parms.CallFunc_GetPlayerController_ReturnValue = CallFunc_GetPlayerController_ReturnValue;
	Parms.K2Node_DynamicCast_AsValeria_Player_Controller = K2Node_DynamicCast_AsValeria_Player_Controller;
	Parms.K2Node_DynamicCast_bSuccess = K2Node_DynamicCast_bSuccess;
	Parms.CallFunc_GetCurrentHousingPlot_ReturnValue = CallFunc_GetCurrentHousingPlot_ReturnValue;
	Parms.CallFunc_IsValid_ReturnValue = CallFunc_IsValid_ReturnValue;

	UObject::ProcessEvent(Func, &Parms);

	if (IsOnPlot != nullptr)
		*IsOnPlot = Parms.IsOnPlot;

	if (HousingPlot != nullptr)
		*HousingPlot = Parms.HousingPlot;
}


// Function BP_Time_Of_Day_Audio.BP_Time_Of_Day_Audio_C.IsUsingCustomTime
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    TURR                                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    UsingCustomTime                                        (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Temp_bool_True_if_break_was_hit_Variable               (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Temp_int_Array_Index_Variable                          (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    CallFunc_Not_PreBool_ReturnValue                       (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Temp_int_Loop_Counter_Variable                         (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   CallFunc_Add_IntInt_ReturnValue                        (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   CallFunc_Array_Length_ReturnValue                      (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FTimeOfDayAudio                  CallFunc_Array_Get_Item                                (NoDestructor)
// bool                                    CallFunc_Less_IntInt_ReturnValue                       (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    CallFunc_BooleanAND_ReturnValue                        (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    CallFunc_EqualEqual_ByteByte_ReturnValue               (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    CallFunc_IsValid_ReturnValue                           (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    CallFunc_BooleanAND_ReturnValue_1                      (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Time_Of_Day_Audio_C::IsUsingCustomTime(bool* TURR, bool UsingCustomTime, bool Temp_bool_True_if_break_was_hit_Variable, int32 Temp_int_Array_Index_Variable, bool CallFunc_Not_PreBool_ReturnValue, int32 Temp_int_Loop_Counter_Variable, int32 CallFunc_Add_IntInt_ReturnValue, int32 CallFunc_Array_Length_ReturnValue, const struct FTimeOfDayAudio& CallFunc_Array_Get_Item, bool CallFunc_Less_IntInt_ReturnValue, bool CallFunc_BooleanAND_ReturnValue, bool CallFunc_EqualEqual_ByteByte_ReturnValue, bool CallFunc_IsValid_ReturnValue, bool CallFunc_BooleanAND_ReturnValue_1)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Time_Of_Day_Audio_C", "IsUsingCustomTime");

	Params::BP_Time_Of_Day_Audio_C_IsUsingCustomTime Parms{};

	Parms.UsingCustomTime = UsingCustomTime;
	Parms.Temp_bool_True_if_break_was_hit_Variable = Temp_bool_True_if_break_was_hit_Variable;
	Parms.Temp_int_Array_Index_Variable = Temp_int_Array_Index_Variable;
	Parms.CallFunc_Not_PreBool_ReturnValue = CallFunc_Not_PreBool_ReturnValue;
	Parms.Temp_int_Loop_Counter_Variable = Temp_int_Loop_Counter_Variable;
	Parms.CallFunc_Add_IntInt_ReturnValue = CallFunc_Add_IntInt_ReturnValue;
	Parms.CallFunc_Array_Length_ReturnValue = CallFunc_Array_Length_ReturnValue;
	Parms.CallFunc_Array_Get_Item = std::move(CallFunc_Array_Get_Item);
	Parms.CallFunc_Less_IntInt_ReturnValue = CallFunc_Less_IntInt_ReturnValue;
	Parms.CallFunc_BooleanAND_ReturnValue = CallFunc_BooleanAND_ReturnValue;
	Parms.CallFunc_EqualEqual_ByteByte_ReturnValue = CallFunc_EqualEqual_ByteByte_ReturnValue;
	Parms.CallFunc_IsValid_ReturnValue = CallFunc_IsValid_ReturnValue;
	Parms.CallFunc_BooleanAND_ReturnValue_1 = CallFunc_BooleanAND_ReturnValue_1;

	UObject::ProcessEvent(Func, &Parms);

	if (TURR != nullptr)
		*TURR = Parms.TURR;
}


// Function BP_Time_Of_Day_Audio.BP_Time_Of_Day_Audio_C.OnTimeOfDayChangeEvent
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// ETimeOfDayPeriod                        Period                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Time_Of_Day_Audio_C::OnTimeOfDayChangeEvent(ETimeOfDayPeriod Period)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Time_Of_Day_Audio_C", "OnTimeOfDayChangeEvent");

	Params::BP_Time_Of_Day_Audio_C_OnTimeOfDayChangeEvent Parms{};

	Parms.Period = Period;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Time_Of_Day_Audio.BP_Time_Of_Day_Audio_C.PlayTimeOfDayAudio
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          RefLocation                                            (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FTimeOfDayAudioSettings          Settings                                               (Edit, BlueprintVisible, NoDestructor)
// class UAkAudioEvent*                    AudioToPlay                                            (Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// int32                                   Temp_int_Array_Index_Variable                          (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class APawn*                            CallFunc_GetPlayerPawn_ReturnValue                     (ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool                                    CallFunc_IsOnHousingPlot_IsOnPlot                      (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AHousingPlotActor*                CallFunc_IsOnHousingPlot_HousingPlot                   (ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// struct FVector                          CallFunc_K2_GetActorLocation_ReturnValue               (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          CallFunc_K2_GetActorLocation_ReturnValue_1             (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Temp_bool_Variable                                     (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    CallFunc_EqualEqual_ByteByte_ReturnValue               (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    CallFunc_Not_PreBool_ReturnValue                       (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    CallFunc_BooleanAND_ReturnValue                        (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  CallFunc_Conv_IntToDouble_ReturnValue                  (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  CallFunc_DegreesToRadians_ReturnValue                  (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  CallFunc_Sin_ReturnValue                               (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  CallFunc_Cos_ReturnValue                               (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  CallFunc_RandomFloatInRange_ReturnValue                (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          CallFunc_MakeVector_ReturnValue                        (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          CallFunc_Multiply_VectorFloat_ReturnValue              (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FTimeOfDayAudio                  CallFunc_Array_Get_Item                                (NoDestructor)
// struct FVector                          CallFunc_Add_VectorVector_ReturnValue                  (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   CallFunc_Array_Length_ReturnValue                      (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    CallFunc_DoesTimeMatchCurrentTime_ReturnValue          (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UAkComponent*                     CallFunc_AkEventLocation_AkComponent                   (ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// int32                                   CallFunc_AkEventLocation_Playing_ID                    (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Temp_int_Loop_Counter_Variable                         (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    CallFunc_EqualEqual_ByteByte_ReturnValue_1             (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    CallFunc_Less_IntInt_ReturnValue                       (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   CallFunc_Add_IntInt_ReturnValue                        (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class APawn*                            CallFunc_GetPlayerPawn_ReturnValue_1                   (ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// struct FVector                          CallFunc_K2_GetActorLocation_ReturnValue_2             (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          CallFunc_RandomUnitVector_ReturnValue                  (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    K2Node_SwitchEnum_CmpSuccess                           (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          K2Node_MathExpression_ReturnValue                      (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UAkComponent*                     CallFunc_AkEventLocation_AkComponent_1                 (ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// int32                                   CallFunc_AkEventLocation_Playing_ID_1                  (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          CallFunc_K2_GetActorLocation_ReturnValue_3             (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    CallFunc_IsOnHousingPlot_IsOnPlot_1                    (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AHousingPlotActor*                CallFunc_IsOnHousingPlot_HousingPlot_1                 (ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class UAkComponent*                     CallFunc_AkEventLocation_AkComponent_2                 (ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// int32                                   CallFunc_AkEventLocation_Playing_ID_2                  (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FTimeOfDayAudioSettings          K2Node_Select_Default                                  (NoDestructor)
// double                                  CallFunc_Multiply_VectorFloat_B_ImplicitCast           (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  CallFunc_RandomFloatInRange_Min_ImplicitCast           (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  CallFunc_RandomFloatInRange_Max_ImplicitCast           (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Time_Of_Day_Audio_C::PlayTimeOfDayAudio(const struct FVector& RefLocation, const struct FTimeOfDayAudioSettings& Settings, class UAkAudioEvent* AudioToPlay, int32 Temp_int_Array_Index_Variable, class APawn* CallFunc_GetPlayerPawn_ReturnValue, bool CallFunc_IsOnHousingPlot_IsOnPlot, class AHousingPlotActor* CallFunc_IsOnHousingPlot_HousingPlot, const struct FVector& CallFunc_K2_GetActorLocation_ReturnValue, const struct FVector& CallFunc_K2_GetActorLocation_ReturnValue_1, bool Temp_bool_Variable, bool CallFunc_EqualEqual_ByteByte_ReturnValue, bool CallFunc_Not_PreBool_ReturnValue, bool CallFunc_BooleanAND_ReturnValue, double CallFunc_Conv_IntToDouble_ReturnValue, double CallFunc_DegreesToRadians_ReturnValue, double CallFunc_Sin_ReturnValue, double CallFunc_Cos_ReturnValue, double CallFunc_RandomFloatInRange_ReturnValue, const struct FVector& CallFunc_MakeVector_ReturnValue, const struct FVector& CallFunc_Multiply_VectorFloat_ReturnValue, const struct FTimeOfDayAudio& CallFunc_Array_Get_Item, const struct FVector& CallFunc_Add_VectorVector_ReturnValue, int32 CallFunc_Array_Length_ReturnValue, bool CallFunc_DoesTimeMatchCurrentTime_ReturnValue, class UAkComponent* CallFunc_AkEventLocation_AkComponent, int32 CallFunc_AkEventLocation_Playing_ID, int32 Temp_int_Loop_Counter_Variable, bool CallFunc_EqualEqual_ByteByte_ReturnValue_1, bool CallFunc_Less_IntInt_ReturnValue, int32 CallFunc_Add_IntInt_ReturnValue, class APawn* CallFunc_GetPlayerPawn_ReturnValue_1, const struct FVector& CallFunc_K2_GetActorLocation_ReturnValue_2, const struct FVector& CallFunc_RandomUnitVector_ReturnValue, bool K2Node_SwitchEnum_CmpSuccess, const struct FVector& K2Node_MathExpression_ReturnValue, class UAkComponent* CallFunc_AkEventLocation_AkComponent_1, int32 CallFunc_AkEventLocation_Playing_ID_1, const struct FVector& CallFunc_K2_GetActorLocation_ReturnValue_3, bool CallFunc_IsOnHousingPlot_IsOnPlot_1, class AHousingPlotActor* CallFunc_IsOnHousingPlot_HousingPlot_1, class UAkComponent* CallFunc_AkEventLocation_AkComponent_2, int32 CallFunc_AkEventLocation_Playing_ID_2, const struct FTimeOfDayAudioSettings& K2Node_Select_Default, double CallFunc_Multiply_VectorFloat_B_ImplicitCast, double CallFunc_RandomFloatInRange_Min_ImplicitCast, double CallFunc_RandomFloatInRange_Max_ImplicitCast)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Time_Of_Day_Audio_C", "PlayTimeOfDayAudio");

	Params::BP_Time_Of_Day_Audio_C_PlayTimeOfDayAudio Parms{};

	Parms.RefLocation = std::move(RefLocation);
	Parms.Settings = std::move(Settings);
	Parms.AudioToPlay = AudioToPlay;
	Parms.Temp_int_Array_Index_Variable = Temp_int_Array_Index_Variable;
	Parms.CallFunc_GetPlayerPawn_ReturnValue = CallFunc_GetPlayerPawn_ReturnValue;
	Parms.CallFunc_IsOnHousingPlot_IsOnPlot = CallFunc_IsOnHousingPlot_IsOnPlot;
	Parms.CallFunc_IsOnHousingPlot_HousingPlot = CallFunc_IsOnHousingPlot_HousingPlot;
	Parms.CallFunc_K2_GetActorLocation_ReturnValue = std::move(CallFunc_K2_GetActorLocation_ReturnValue);
	Parms.CallFunc_K2_GetActorLocation_ReturnValue_1 = std::move(CallFunc_K2_GetActorLocation_ReturnValue_1);
	Parms.Temp_bool_Variable = Temp_bool_Variable;
	Parms.CallFunc_EqualEqual_ByteByte_ReturnValue = CallFunc_EqualEqual_ByteByte_ReturnValue;
	Parms.CallFunc_Not_PreBool_ReturnValue = CallFunc_Not_PreBool_ReturnValue;
	Parms.CallFunc_BooleanAND_ReturnValue = CallFunc_BooleanAND_ReturnValue;
	Parms.CallFunc_Conv_IntToDouble_ReturnValue = CallFunc_Conv_IntToDouble_ReturnValue;
	Parms.CallFunc_DegreesToRadians_ReturnValue = CallFunc_DegreesToRadians_ReturnValue;
	Parms.CallFunc_Sin_ReturnValue = CallFunc_Sin_ReturnValue;
	Parms.CallFunc_Cos_ReturnValue = CallFunc_Cos_ReturnValue;
	Parms.CallFunc_RandomFloatInRange_ReturnValue = CallFunc_RandomFloatInRange_ReturnValue;
	Parms.CallFunc_MakeVector_ReturnValue = std::move(CallFunc_MakeVector_ReturnValue);
	Parms.CallFunc_Multiply_VectorFloat_ReturnValue = std::move(CallFunc_Multiply_VectorFloat_ReturnValue);
	Parms.CallFunc_Array_Get_Item = std::move(CallFunc_Array_Get_Item);
	Parms.CallFunc_Add_VectorVector_ReturnValue = std::move(CallFunc_Add_VectorVector_ReturnValue);
	Parms.CallFunc_Array_Length_ReturnValue = CallFunc_Array_Length_ReturnValue;
	Parms.CallFunc_DoesTimeMatchCurrentTime_ReturnValue = CallFunc_DoesTimeMatchCurrentTime_ReturnValue;
	Parms.CallFunc_AkEventLocation_AkComponent = CallFunc_AkEventLocation_AkComponent;
	Parms.CallFunc_AkEventLocation_Playing_ID = CallFunc_AkEventLocation_Playing_ID;
	Parms.Temp_int_Loop_Counter_Variable = Temp_int_Loop_Counter_Variable;
	Parms.CallFunc_EqualEqual_ByteByte_ReturnValue_1 = CallFunc_EqualEqual_ByteByte_ReturnValue_1;
	Parms.CallFunc_Less_IntInt_ReturnValue = CallFunc_Less_IntInt_ReturnValue;
	Parms.CallFunc_Add_IntInt_ReturnValue = CallFunc_Add_IntInt_ReturnValue;
	Parms.CallFunc_GetPlayerPawn_ReturnValue_1 = CallFunc_GetPlayerPawn_ReturnValue_1;
	Parms.CallFunc_K2_GetActorLocation_ReturnValue_2 = std::move(CallFunc_K2_GetActorLocation_ReturnValue_2);
	Parms.CallFunc_RandomUnitVector_ReturnValue = std::move(CallFunc_RandomUnitVector_ReturnValue);
	Parms.K2Node_SwitchEnum_CmpSuccess = K2Node_SwitchEnum_CmpSuccess;
	Parms.K2Node_MathExpression_ReturnValue = std::move(K2Node_MathExpression_ReturnValue);
	Parms.CallFunc_AkEventLocation_AkComponent_1 = CallFunc_AkEventLocation_AkComponent_1;
	Parms.CallFunc_AkEventLocation_Playing_ID_1 = CallFunc_AkEventLocation_Playing_ID_1;
	Parms.CallFunc_K2_GetActorLocation_ReturnValue_3 = std::move(CallFunc_K2_GetActorLocation_ReturnValue_3);
	Parms.CallFunc_IsOnHousingPlot_IsOnPlot_1 = CallFunc_IsOnHousingPlot_IsOnPlot_1;
	Parms.CallFunc_IsOnHousingPlot_HousingPlot_1 = CallFunc_IsOnHousingPlot_HousingPlot_1;
	Parms.CallFunc_AkEventLocation_AkComponent_2 = CallFunc_AkEventLocation_AkComponent_2;
	Parms.CallFunc_AkEventLocation_Playing_ID_2 = CallFunc_AkEventLocation_Playing_ID_2;
	Parms.K2Node_Select_Default = std::move(K2Node_Select_Default);
	Parms.CallFunc_Multiply_VectorFloat_B_ImplicitCast = CallFunc_Multiply_VectorFloat_B_ImplicitCast;
	Parms.CallFunc_RandomFloatInRange_Min_ImplicitCast = CallFunc_RandomFloatInRange_Min_ImplicitCast;
	Parms.CallFunc_RandomFloatInRange_Max_ImplicitCast = CallFunc_RandomFloatInRange_Max_ImplicitCast;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Time_Of_Day_Audio.BP_Time_Of_Day_Audio_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void ABP_Time_Of_Day_Audio_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Time_Of_Day_Audio_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}

}

