#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_HealthBar

#include "Basic.hpp"


namespace SDK::Params
{

// Function WBP_HealthBar.WBP_HealthBar_C.BindOnChanged
// 0x0008 (0x0008 - 0x0000)
struct WBP_HealthBar_C_BindOnChanged final
{
public:
	const class UVitalsComponent*                 Vitals;                                            // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, InstancedReference, ReferenceParm, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_HealthBar_C_BindOnChanged) == 0x000008, "Wrong alignment on WBP_HealthBar_C_BindOnChanged");
static_assert(sizeof(WBP_HealthBar_C_BindOnChanged) == 0x000008, "Wrong size on WBP_HealthBar_C_BindOnChanged");
static_assert(offsetof(WBP_HealthBar_C_BindOnChanged, Vitals) == 0x000000, "Member 'WBP_HealthBar_C_BindOnChanged::Vitals' has a wrong offset!");

// Function WBP_HealthBar.WBP_HealthBar_C.ExecuteUbergraph_WBP_HealthBar
// 0x0028 (0x0028 - 0x0000)
struct WBP_HealthBar_C_ExecuteUbergraph_WBP_HealthBar final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_42B3[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	const class UVitalsComponent*                 K2Node_CustomEvent_Vitals;                         // 0x0008(0x0008)(ConstParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UVitalsComponent* Vitals)> K2Node_CreateDelegate_OutputDelegate;              // 0x0010(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UVitalsComponent*                       K2Node_CustomEvent_Vitals_1;                       // 0x0020(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_HealthBar_C_ExecuteUbergraph_WBP_HealthBar) == 0x000008, "Wrong alignment on WBP_HealthBar_C_ExecuteUbergraph_WBP_HealthBar");
static_assert(sizeof(WBP_HealthBar_C_ExecuteUbergraph_WBP_HealthBar) == 0x000028, "Wrong size on WBP_HealthBar_C_ExecuteUbergraph_WBP_HealthBar");
static_assert(offsetof(WBP_HealthBar_C_ExecuteUbergraph_WBP_HealthBar, EntryPoint) == 0x000000, "Member 'WBP_HealthBar_C_ExecuteUbergraph_WBP_HealthBar::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_HealthBar_C_ExecuteUbergraph_WBP_HealthBar, K2Node_CustomEvent_Vitals) == 0x000008, "Member 'WBP_HealthBar_C_ExecuteUbergraph_WBP_HealthBar::K2Node_CustomEvent_Vitals' has a wrong offset!");
static_assert(offsetof(WBP_HealthBar_C_ExecuteUbergraph_WBP_HealthBar, K2Node_CreateDelegate_OutputDelegate) == 0x000010, "Member 'WBP_HealthBar_C_ExecuteUbergraph_WBP_HealthBar::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WBP_HealthBar_C_ExecuteUbergraph_WBP_HealthBar, K2Node_CustomEvent_Vitals_1) == 0x000020, "Member 'WBP_HealthBar_C_ExecuteUbergraph_WBP_HealthBar::K2Node_CustomEvent_Vitals_1' has a wrong offset!");

// Function WBP_HealthBar.WBP_HealthBar_C.OnChanged
// 0x0008 (0x0008 - 0x0000)
struct WBP_HealthBar_C_OnChanged final
{
public:
	class UVitalsComponent*                       Vitals;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_HealthBar_C_OnChanged) == 0x000008, "Wrong alignment on WBP_HealthBar_C_OnChanged");
static_assert(sizeof(WBP_HealthBar_C_OnChanged) == 0x000008, "Wrong size on WBP_HealthBar_C_OnChanged");
static_assert(offsetof(WBP_HealthBar_C_OnChanged, Vitals) == 0x000000, "Member 'WBP_HealthBar_C_OnChanged::Vitals' has a wrong offset!");

// Function WBP_HealthBar.WBP_HealthBar_C.SetActor
// 0x0018 (0x0018 - 0x0000)
struct WBP_HealthBar_C_SetActor final
{
public:
	class AActor*                                 Param_Actor;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash)
	class UVitalsComponent*                       CallFunc_GetComponentByClass_ReturnValue;          // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_HealthBar_C_SetActor) == 0x000008, "Wrong alignment on WBP_HealthBar_C_SetActor");
static_assert(sizeof(WBP_HealthBar_C_SetActor) == 0x000018, "Wrong size on WBP_HealthBar_C_SetActor");
static_assert(offsetof(WBP_HealthBar_C_SetActor, Param_Actor) == 0x000000, "Member 'WBP_HealthBar_C_SetActor::Param_Actor' has a wrong offset!");
static_assert(offsetof(WBP_HealthBar_C_SetActor, CallFunc_GetComponentByClass_ReturnValue) == 0x000008, "Member 'WBP_HealthBar_C_SetActor::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_HealthBar_C_SetActor, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'WBP_HealthBar_C_SetActor::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function WBP_HealthBar.WBP_HealthBar_C.Update
// 0x0048 (0x0048 - 0x0000)
struct WBP_HealthBar_C_Update final
{
public:
	class UVitalsComponent*                       VitalsComponent;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, InstancedReference, ReferenceParm, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue;              // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_42B4[0x2];                                     // 0x000A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetVitalStart_ReturnValue;                // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetVital_ReturnValue;                     // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetVitalMax_ReturnValue;                  // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_IntToDouble_ReturnValue;             // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Select_Default;                             // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_42B5[0x4];                                     // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Conv_IntToDouble_ReturnValue_1;           // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue;                       // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetPercent_InPercent_ImplicitCast;        // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_HealthBar_C_Update) == 0x000008, "Wrong alignment on WBP_HealthBar_C_Update");
static_assert(sizeof(WBP_HealthBar_C_Update) == 0x000048, "Wrong size on WBP_HealthBar_C_Update");
static_assert(offsetof(WBP_HealthBar_C_Update, VitalsComponent) == 0x000000, "Member 'WBP_HealthBar_C_Update::VitalsComponent' has a wrong offset!");
static_assert(offsetof(WBP_HealthBar_C_Update, Temp_bool_Variable) == 0x000008, "Member 'WBP_HealthBar_C_Update::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_HealthBar_C_Update, CallFunc_MakeLiteralByte_ReturnValue) == 0x000009, "Member 'WBP_HealthBar_C_Update::CallFunc_MakeLiteralByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_HealthBar_C_Update, CallFunc_GetVitalStart_ReturnValue) == 0x00000C, "Member 'WBP_HealthBar_C_Update::CallFunc_GetVitalStart_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_HealthBar_C_Update, CallFunc_GetVital_ReturnValue) == 0x000010, "Member 'WBP_HealthBar_C_Update::CallFunc_GetVital_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_HealthBar_C_Update, CallFunc_GetVitalMax_ReturnValue) == 0x000014, "Member 'WBP_HealthBar_C_Update::CallFunc_GetVitalMax_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_HealthBar_C_Update, CallFunc_Conv_IntToDouble_ReturnValue) == 0x000018, "Member 'WBP_HealthBar_C_Update::CallFunc_Conv_IntToDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_HealthBar_C_Update, K2Node_Select_Default) == 0x000020, "Member 'WBP_HealthBar_C_Update::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_HealthBar_C_Update, CallFunc_Conv_IntToDouble_ReturnValue_1) == 0x000028, "Member 'WBP_HealthBar_C_Update::CallFunc_Conv_IntToDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_HealthBar_C_Update, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000030, "Member 'WBP_HealthBar_C_Update::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_HealthBar_C_Update, CallFunc_FClamp_ReturnValue) == 0x000038, "Member 'WBP_HealthBar_C_Update::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_HealthBar_C_Update, CallFunc_SetPercent_InPercent_ImplicitCast) == 0x000040, "Member 'WBP_HealthBar_C_Update::CallFunc_SetPercent_InPercent_ImplicitCast' has a wrong offset!");

}

