#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_MusicManager

#include "Basic.hpp"

#include "BP_MusicManager_classes.hpp"
#include "BP_MusicManager_parameters.hpp"


namespace SDK
{

// Function BP_MusicManager.BP_MusicManager_C.ExecuteUbergraph_BP_MusicManager
// (Final, UbergraphFunction)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// EAkCallbackType                         K2Node_CustomEvent_CallbackType                        (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UAkCallbackInfo*                  K2Node_CustomEvent_CallbackInfo                        (ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class UAkMusicSyncCallbackInfo*         K2Node_DynamicCast_AsAk_Music_Sync_Callback_Info       (ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool                                    K2Node_DynamicCast_bSuccess                            (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TDelegate<void(EAkCallbackType CallbackType, class UAkCallbackInfo* CallbackInfo)>K2Node_CreateDelegate_OutputDelegate                   (ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// int32                                   CallFunc_PostGlobalMusic_ReturnValue                   (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_MusicManager_C::ExecuteUbergraph_BP_MusicManager(int32 EntryPoint, EAkCallbackType K2Node_CustomEvent_CallbackType, class UAkCallbackInfo* K2Node_CustomEvent_CallbackInfo, class UAkMusicSyncCallbackInfo* K2Node_DynamicCast_AsAk_Music_Sync_Callback_Info, bool K2Node_DynamicCast_bSuccess, TDelegate<void(EAkCallbackType CallbackType, class UAkCallbackInfo* CallbackInfo)> K2Node_CreateDelegate_OutputDelegate, int32 CallFunc_PostGlobalMusic_ReturnValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MusicManager_C", "ExecuteUbergraph_BP_MusicManager");

	Params::BP_MusicManager_C_ExecuteUbergraph_BP_MusicManager Parms{};

	Parms.EntryPoint = EntryPoint;
	Parms.K2Node_CustomEvent_CallbackType = K2Node_CustomEvent_CallbackType;
	Parms.K2Node_CustomEvent_CallbackInfo = K2Node_CustomEvent_CallbackInfo;
	Parms.K2Node_DynamicCast_AsAk_Music_Sync_Callback_Info = K2Node_DynamicCast_AsAk_Music_Sync_Callback_Info;
	Parms.K2Node_DynamicCast_bSuccess = K2Node_DynamicCast_bSuccess;
	Parms.K2Node_CreateDelegate_OutputDelegate = K2Node_CreateDelegate_OutputDelegate;
	Parms.CallFunc_PostGlobalMusic_ReturnValue = CallFunc_PostGlobalMusic_ReturnValue;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_MusicManager.BP_MusicManager_C.GetIsSwitchingBetweenNightAndDay
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    Param_bSwitchingBetweenNightAndDay                     (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_MusicManager_C::GetIsSwitchingBetweenNightAndDay(bool* Param_bSwitchingBetweenNightAndDay)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MusicManager_C", "GetIsSwitchingBetweenNightAndDay");

	Params::BP_MusicManager_C_GetIsSwitchingBetweenNightAndDay Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Param_bSwitchingBetweenNightAndDay != nullptr)
		*Param_bSwitchingBetweenNightAndDay = Parms.Param_bSwitchingBetweenNightAndDay;
}


// Function BP_MusicManager.BP_MusicManager_C.GetMusAfterDayNightTransition
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class UAkSwitchValue*                   Param_MusTriggerAfterDayNight                          (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UBP_MusicManager_C::GetMusAfterDayNightTransition(class UAkSwitchValue** Param_MusTriggerAfterDayNight)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MusicManager_C", "GetMusAfterDayNightTransition");

	Params::BP_MusicManager_C_GetMusAfterDayNightTransition Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Param_MusTriggerAfterDayNight != nullptr)
		*Param_MusTriggerAfterDayNight = Parms.Param_MusTriggerAfterDayNight;
}


// Function BP_MusicManager.BP_MusicManager_C.HandleUserCue
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// EAkCallbackType                         CallbackType                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UAkCallbackInfo*                  CallbackInfo                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UBP_MusicManager_C::HandleUserCue(EAkCallbackType CallbackType, class UAkCallbackInfo* CallbackInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MusicManager_C", "HandleUserCue");

	Params::BP_MusicManager_C_HandleUserCue Parms{};

	Parms.CallbackType = CallbackType;
	Parms.CallbackInfo = CallbackInfo;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_MusicManager.BP_MusicManager_C.Initialize
// (Event, Public, BlueprintEvent)

void UBP_MusicManager_C::Initialize()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MusicManager_C", "Initialize");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MusicManager.BP_MusicManager_C.OnMusUserCallback__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           UserCueName                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)

void UBP_MusicManager_C::OnMusUserCallback__DelegateSignature(const class FString& UserCueName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MusicManager_C", "OnMusUserCallback__DelegateSignature");

	Params::BP_MusicManager_C_OnMusUserCallback__DelegateSignature Parms{};

	Parms.UserCueName = std::move(UserCueName);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_MusicManager.BP_MusicManager_C.SetIsSwitchingBetweenNightAndDay
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Param_bSwitchingBetweenNightAndDay                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_MusicManager_C::SetIsSwitchingBetweenNightAndDay(bool Param_bSwitchingBetweenNightAndDay)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MusicManager_C", "SetIsSwitchingBetweenNightAndDay");

	Params::BP_MusicManager_C_SetIsSwitchingBetweenNightAndDay Parms{};

	Parms.Param_bSwitchingBetweenNightAndDay = Param_bSwitchingBetweenNightAndDay;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_MusicManager.BP_MusicManager_C.SetMusAfterDayNightTransition
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UAkSwitchValue*                   Param_MusTriggerAfterDayNight                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UBP_MusicManager_C::SetMusAfterDayNightTransition(class UAkSwitchValue* Param_MusTriggerAfterDayNight)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MusicManager_C", "SetMusAfterDayNightTransition");

	Params::BP_MusicManager_C_SetMusAfterDayNightTransition Parms{};

	Parms.Param_MusTriggerAfterDayNight = Param_MusTriggerAfterDayNight;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_MusicManager.BP_MusicManager_C.SetSkipTODTransition
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Param_ShouldSkipTODTransition                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_MusicManager_C::SetSkipTODTransition(bool Param_ShouldSkipTODTransition)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MusicManager_C", "SetSkipTODTransition");

	Params::BP_MusicManager_C_SetSkipTODTransition Parms{};

	Parms.Param_ShouldSkipTODTransition = Param_ShouldSkipTODTransition;

	UObject::ProcessEvent(Func, &Parms);
}

}

