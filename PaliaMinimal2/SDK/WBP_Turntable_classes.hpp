#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_Turntable

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CommonUI_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_Turntable.WBP_Turntable_C
// 0x0030 (0x0318 - 0x02E8)
class UWBP_Turntable_C final : public UCommonUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02E8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class USizeBox*                               SizeBox_TurntableArea;                             // 0x02F0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	FMulticastInlineDelegateProperty_             OnMouseDragged;                                    // 0x02F8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	double                                        MouseDragYawRate;                                  // 0x0308(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	bool                                          Enabled;                                           // 0x0310(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_WBP_Turntable(int32 EntryPoint, bool CallFunc_IsDesktop_ReturnValue);
	void OnInitialized();
	struct FEventReply OnMouseButtonDown(const struct FGeometry& MyGeometry, struct FPointerEvent& MouseEvent, const struct FKey& CallFunc_PointerEvent_GetEffectingButton_ReturnValue, bool CallFunc_IsHovered_ReturnValue, bool CallFunc_EqualEqual_KeyKey_ReturnValue, bool CallFunc_BooleanAND_ReturnValue, const struct FEventReply& CallFunc_Handled_ReturnValue, const struct FEventReply& CallFunc_Unhandled_ReturnValue, const struct FEventReply& CallFunc_CaptureMouse_ReturnValue, const struct FEventReply& CallFunc_SetUserFocus_ReturnValue);
	struct FEventReply OnMouseButtonUp(const struct FGeometry& MyGeometry, struct FPointerEvent& MouseEvent, const struct FEventReply& CallFunc_Handled_ReturnValue, const struct FKey& CallFunc_PointerEvent_GetEffectingButton_ReturnValue, const struct FEventReply& CallFunc_ReleaseMouseCapture_ReturnValue, bool CallFunc_EqualEqual_KeyKey_ReturnValue, const struct FEventReply& CallFunc_Unhandled_ReturnValue);
	void OnMouseDragged__DelegateSignature(const struct FRotator& Rotation);
	struct FEventReply OnMouseMove(const struct FGeometry& MyGeometry, struct FPointerEvent& MouseEvent, const struct FVector2D& CallFunc_PointerEvent_GetCursorDelta_ReturnValue, bool CallFunc_PointerEvent_IsMouseButtonDown_ReturnValue, double CallFunc_BreakVector2D_X, double CallFunc_BreakVector2D_Y, bool CallFunc_BooleanAND_ReturnValue, double CallFunc_Multiply_DoubleDouble_ReturnValue, double CallFunc_Multiply_DoubleDouble_ReturnValue_1, const struct FEventReply& CallFunc_Handled_ReturnValue, const struct FRotator& CallFunc_MakeRotator_ReturnValue, const struct FEventReply& CallFunc_Unhandled_ReturnValue, float CallFunc_MakeRotator_Yaw_ImplicitCast);
	void SetEnabled(bool IsEnabled);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_Turntable_C">();
	}
	static class UWBP_Turntable_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_Turntable_C>();
	}
};
static_assert(alignof(UWBP_Turntable_C) == 0x000008, "Wrong alignment on UWBP_Turntable_C");
static_assert(sizeof(UWBP_Turntable_C) == 0x000318, "Wrong size on UWBP_Turntable_C");
static_assert(offsetof(UWBP_Turntable_C, UberGraphFrame) == 0x0002E8, "Member 'UWBP_Turntable_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWBP_Turntable_C, SizeBox_TurntableArea) == 0x0002F0, "Member 'UWBP_Turntable_C::SizeBox_TurntableArea' has a wrong offset!");
static_assert(offsetof(UWBP_Turntable_C, OnMouseDragged) == 0x0002F8, "Member 'UWBP_Turntable_C::OnMouseDragged' has a wrong offset!");
static_assert(offsetof(UWBP_Turntable_C, MouseDragYawRate) == 0x000308, "Member 'UWBP_Turntable_C::MouseDragYawRate' has a wrong offset!");
static_assert(offsetof(UWBP_Turntable_C, Enabled) == 0x000310, "Member 'UWBP_Turntable_C::Enabled' has a wrong offset!");

}

