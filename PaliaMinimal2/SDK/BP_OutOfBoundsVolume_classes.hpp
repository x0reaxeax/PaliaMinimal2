#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_OutOfBoundsVolume

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Palia_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_OutOfBoundsVolume.BP_OutOfBoundsVolume_C
// 0x00E0 (0x0390 - 0x02B0)
class ABP_OutOfBoundsVolume_C final : public AOutOfBoundsHandler_Base
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02B0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UPostProcessComponent*                  PostProcess;                                       // 0x02B8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   VolumeCollision;                                   // 0x02C0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x02C8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         Down_Value_7EFC72F64F88902E183A44A4AECE466D;       // 0x02D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            Down__Direction_7EFC72F64F88902E183A44A4AECE466D;  // 0x02D4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_445B[0x3];                                     // 0x02D5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     Down;                                              // 0x02D8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	float                                         Up_Value_DF4A17614CEFCFA62BD0C0938BCBFD0D;         // 0x02E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            Up__Direction_DF4A17614CEFCFA62BD0C0938BCBFD0D;    // 0x02E4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_445C[0x3];                                     // 0x02E5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     Up;                                                // 0x02E8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UStaticMesh*                            MeshCollision;                                     // 0x02F0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         TeleportActors;                                    // 0x02F8(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate)
	class AValeriaCharacter*                      VC;                                                // 0x0308(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           Timer;                                             // 0x0310(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	double                                        TimeBeforeTeleport;                                // 0x0318(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          PlayerInputDisabled;                               // 0x0320(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_445D[0x7];                                     // 0x0321(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<class AValeriaCharacter*, double>        CharToTeleTime;                                    // 0x0328(0x0050)(Edit, BlueprintVisible, DisableEditOnTemplate, DisableEditOnInstance)
	int32                                         AkOutOfBoundsLoopID;                               // 0x0378(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_445E[0x4];                                     // 0x037C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAkAudioEvent*                          OutOfBoundsSFX;                                    // 0x0380(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Transition_Duration;                               // 0x0388(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ClientBeginOverlap(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, struct FHitResult& SweepResult);
	void ClientEndOverlap(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex);
	void Debug_HandleTestTeleportLocationValitity();
	void Down__FinishedFunc();
	void Down__StopSound__EventFunc();
	void Down__UpdateFunc();
	void ExecuteUbergraph_BP_OutOfBoundsVolume(int32 EntryPoint, bool Temp_bool_Whether_the_gate_is_currently_open_or_close_Variable, bool Temp_bool_Has_Been_Initd_Variable, bool Temp_bool_IsClosed_Variable, class UPrimitiveComponent* K2Node_CustomEvent_OverlappedComponent_3, class AActor* K2Node_CustomEvent_OtherActor_3, class UPrimitiveComponent* K2Node_CustomEvent_OtherComp_3, int32 K2Node_CustomEvent_OtherBodyIndex_3, bool K2Node_CustomEvent_bFromSweep_1, struct FHitResult& K2Node_CustomEvent_SweepResult_1, class UPrimitiveComponent* K2Node_CustomEvent_OverlappedComponent_2, class AActor* K2Node_CustomEvent_OtherActor_2, class UPrimitiveComponent* K2Node_CustomEvent_OtherComp_2, int32 K2Node_CustomEvent_OtherBodyIndex_2, class AValeriaCharacter* K2Node_DynamicCast_AsValeria_Character, bool K2Node_DynamicCast_bSuccess, bool CallFunc_IsLocallyControlled_ReturnValue, bool CallFunc_EqualEqual_ObjectObject_ReturnValue, double CallFunc_Multiply_DoubleDouble_ReturnValue, float CallFunc_GetTimelineLength_ReturnValue, double CallFunc_Divide_DoubleDouble_ReturnValue, double CallFunc_Multiply_DoubleDouble_ReturnValue_1, TDelegate<void(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, struct FHitResult& SweepResult)> K2Node_CreateDelegate_OutputDelegate, TDelegate<void(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex)> K2Node_CreateDelegate_OutputDelegate_1, bool CallFunc_IsServer_ReturnValue, TDelegate<void(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, struct FHitResult& SweepResult)> K2Node_CreateDelegate_OutputDelegate_2, TDelegate<void(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex)> K2Node_CreateDelegate_OutputDelegate_3, class UPrimitiveComponent* K2Node_CustomEvent_OverlappedComponent_1, class AActor* K2Node_CustomEvent_OtherActor_1, class UPrimitiveComponent* K2Node_CustomEvent_OtherComp_1, int32 K2Node_CustomEvent_OtherBodyIndex_1, bool K2Node_CustomEvent_bFromSweep, struct FHitResult& K2Node_CustomEvent_SweepResult, class UPrimitiveComponent* K2Node_CustomEvent_OverlappedComponent, class AActor* K2Node_CustomEvent_OtherActor, class UPrimitiveComponent* K2Node_CustomEvent_OtherComp, int32 K2Node_CustomEvent_OtherBodyIndex, class AValeriaCharacter* K2Node_DynamicCast_AsValeria_Character_1, bool K2Node_DynamicCast_bSuccess_1, class AValeriaCharacter* K2Node_DynamicCast_AsValeria_Character_2, bool K2Node_DynamicCast_bSuccess_2, double CallFunc_GetTimeSeconds_ReturnValue, double CallFunc_Add_DoubleDouble_ReturnValue, int32 CallFunc_Map_Length_ReturnValue, bool CallFunc_EqualEqual_IntInt_ReturnValue, bool CallFunc_Map_Remove_ReturnValue, int32 CallFunc_Map_Length_ReturnValue_1, bool CallFunc_EqualEqual_IntInt_ReturnValue_1, EEndPlayReason K2Node_Event_EndPlayReason, TDelegate<void()> K2Node_CreateDelegate_OutputDelegate_4, const struct FTimerHandle& CallFunc_K2_SetTimerDelegate_ReturnValue, bool CallFunc_LessEqual_IntInt_ReturnValue, int32 CallFunc_AkEventActor_ReturnValue, double CallFunc_Divide_DoubleDouble_A_ImplicitCast, float CallFunc_SetPlayRate_NewRate_ImplicitCast, float CallFunc_RetriggerableDelay_Duration_ImplicitCast, float CallFunc_K2_SetTimerDelegate_Time_ImplicitCast, double CallFunc_AkSetRTPC_Value_ImplicitCast, double CallFunc_AkSetRTPC_Value_ImplicitCast_1);
	void FindClosestActor(TArray<class AActor*>& Actors, TArray<class AActor*>* Actor, double Distance);
	void ReceiveBeginPlay();
	void ReceiveEndPlay(EEndPlayReason EndPlayReason);
	void ServerBeginOverlap(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, struct FHitResult& SweepResult);
	void ServerEndOverlap(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex);
	void TeleportTimePassed(double CurrentTime, class AValeriaCharacter* Temp_object_Variable, int32 Temp_int_Array_Index_Variable, int32 Temp_int_Loop_Counter_Variable, int32 CallFunc_Add_IntInt_ReturnValue, int32 CallFunc_Map_Length_ReturnValue, bool CallFunc_Greater_IntInt_ReturnValue, double CallFunc_GetTimeSeconds_ReturnValue, TDelegate<void()> K2Node_CreateDelegate_OutputDelegate, const struct FTimerHandle& CallFunc_K2_SetTimerDelegate_ReturnValue, double CallFunc_Map_Find_Value, bool CallFunc_Map_Find_ReturnValue, bool CallFunc_Less_DoubleDouble_ReturnValue, int32 CallFunc_Map_Length_ReturnValue_1, bool CallFunc_Map_Remove_ReturnValue, bool CallFunc_Greater_IntInt_ReturnValue_1, TArray<class AValeriaCharacter*>& CallFunc_Map_Keys_Keys, int32 CallFunc_Array_Length_ReturnValue, class AValeriaCharacter* CallFunc_Array_Get_Item, bool CallFunc_Less_IntInt_ReturnValue, float CallFunc_K2_SetTimerDelegate_Time_ImplicitCast);
	bool TryTeleportPawn(class AValeriaMoveablePawn* MoveablePawn, const TArray<class AActor*>& SortedActors, const struct FVector& CallFunc_K2_GetActorLocation_ReturnValue, int32 Temp_int_Array_Index_Variable, int32 Temp_int_Loop_Counter_Variable, int32 CallFunc_Add_IntInt_ReturnValue, class AActor* CallFunc_Array_Get_Item, int32 CallFunc_Array_Length_ReturnValue, const class FString& CallFunc_GetDisplayName_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue, const class FString& CallFunc_Concat_StrStr_ReturnValue, struct FTransform& CallFunc_GetTransform_ReturnValue, const struct FVector& CallFunc_BreakTransform_Location, const struct FRotator& CallFunc_BreakTransform_Rotation, const struct FVector& CallFunc_BreakTransform_Scale, TArray<class AActor*>& CallFunc_SortActorsByClosest_ReturnValue, bool CallFunc_K2_TeleportTo_ReturnValue);
	void Up__FinishedFunc();
	void Up__UpdateFunc();
	void UserConstructionScript(bool CallFunc_IsValid_ReturnValue, bool CallFunc_SetStaticMesh_ReturnValue);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_OutOfBoundsVolume_C">();
	}
	static class ABP_OutOfBoundsVolume_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_OutOfBoundsVolume_C>();
	}
};
static_assert(alignof(ABP_OutOfBoundsVolume_C) == 0x000008, "Wrong alignment on ABP_OutOfBoundsVolume_C");
static_assert(sizeof(ABP_OutOfBoundsVolume_C) == 0x000390, "Wrong size on ABP_OutOfBoundsVolume_C");
static_assert(offsetof(ABP_OutOfBoundsVolume_C, UberGraphFrame) == 0x0002B0, "Member 'ABP_OutOfBoundsVolume_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_OutOfBoundsVolume_C, PostProcess) == 0x0002B8, "Member 'ABP_OutOfBoundsVolume_C::PostProcess' has a wrong offset!");
static_assert(offsetof(ABP_OutOfBoundsVolume_C, VolumeCollision) == 0x0002C0, "Member 'ABP_OutOfBoundsVolume_C::VolumeCollision' has a wrong offset!");
static_assert(offsetof(ABP_OutOfBoundsVolume_C, DefaultSceneRoot) == 0x0002C8, "Member 'ABP_OutOfBoundsVolume_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(ABP_OutOfBoundsVolume_C, Down_Value_7EFC72F64F88902E183A44A4AECE466D) == 0x0002D0, "Member 'ABP_OutOfBoundsVolume_C::Down_Value_7EFC72F64F88902E183A44A4AECE466D' has a wrong offset!");
static_assert(offsetof(ABP_OutOfBoundsVolume_C, Down__Direction_7EFC72F64F88902E183A44A4AECE466D) == 0x0002D4, "Member 'ABP_OutOfBoundsVolume_C::Down__Direction_7EFC72F64F88902E183A44A4AECE466D' has a wrong offset!");
static_assert(offsetof(ABP_OutOfBoundsVolume_C, Down) == 0x0002D8, "Member 'ABP_OutOfBoundsVolume_C::Down' has a wrong offset!");
static_assert(offsetof(ABP_OutOfBoundsVolume_C, Up_Value_DF4A17614CEFCFA62BD0C0938BCBFD0D) == 0x0002E0, "Member 'ABP_OutOfBoundsVolume_C::Up_Value_DF4A17614CEFCFA62BD0C0938BCBFD0D' has a wrong offset!");
static_assert(offsetof(ABP_OutOfBoundsVolume_C, Up__Direction_DF4A17614CEFCFA62BD0C0938BCBFD0D) == 0x0002E4, "Member 'ABP_OutOfBoundsVolume_C::Up__Direction_DF4A17614CEFCFA62BD0C0938BCBFD0D' has a wrong offset!");
static_assert(offsetof(ABP_OutOfBoundsVolume_C, Up) == 0x0002E8, "Member 'ABP_OutOfBoundsVolume_C::Up' has a wrong offset!");
static_assert(offsetof(ABP_OutOfBoundsVolume_C, MeshCollision) == 0x0002F0, "Member 'ABP_OutOfBoundsVolume_C::MeshCollision' has a wrong offset!");
static_assert(offsetof(ABP_OutOfBoundsVolume_C, TeleportActors) == 0x0002F8, "Member 'ABP_OutOfBoundsVolume_C::TeleportActors' has a wrong offset!");
static_assert(offsetof(ABP_OutOfBoundsVolume_C, VC) == 0x000308, "Member 'ABP_OutOfBoundsVolume_C::VC' has a wrong offset!");
static_assert(offsetof(ABP_OutOfBoundsVolume_C, Timer) == 0x000310, "Member 'ABP_OutOfBoundsVolume_C::Timer' has a wrong offset!");
static_assert(offsetof(ABP_OutOfBoundsVolume_C, TimeBeforeTeleport) == 0x000318, "Member 'ABP_OutOfBoundsVolume_C::TimeBeforeTeleport' has a wrong offset!");
static_assert(offsetof(ABP_OutOfBoundsVolume_C, PlayerInputDisabled) == 0x000320, "Member 'ABP_OutOfBoundsVolume_C::PlayerInputDisabled' has a wrong offset!");
static_assert(offsetof(ABP_OutOfBoundsVolume_C, CharToTeleTime) == 0x000328, "Member 'ABP_OutOfBoundsVolume_C::CharToTeleTime' has a wrong offset!");
static_assert(offsetof(ABP_OutOfBoundsVolume_C, AkOutOfBoundsLoopID) == 0x000378, "Member 'ABP_OutOfBoundsVolume_C::AkOutOfBoundsLoopID' has a wrong offset!");
static_assert(offsetof(ABP_OutOfBoundsVolume_C, OutOfBoundsSFX) == 0x000380, "Member 'ABP_OutOfBoundsVolume_C::OutOfBoundsSFX' has a wrong offset!");
static_assert(offsetof(ABP_OutOfBoundsVolume_C, Transition_Duration) == 0x000388, "Member 'ABP_OutOfBoundsVolume_C::Transition_Duration' has a wrong offset!");

}

