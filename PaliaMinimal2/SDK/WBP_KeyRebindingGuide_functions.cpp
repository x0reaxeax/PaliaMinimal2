#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_KeyRebindingGuide

#include "Basic.hpp"

#include "WBP_KeyRebindingGuide_classes.hpp"
#include "WBP_KeyRebindingGuide_parameters.hpp"


namespace SDK
{

// Function WBP_KeyRebindingGuide.WBP_KeyRebindingGuide_C.BoundSuccessfulTip
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FText                             KeyName                                                (BlueprintVisible, BlueprintReadOnly, Parm)
// class FText                             ChordKeyName                                           (BlueprintVisible, BlueprintReadOnly, Parm)
// class FText                             InputActionName                                        (BlueprintVisible, BlueprintReadOnly, Parm)
// class FText                             ConflicActionName                                      (BlueprintVisible, BlueprintReadOnly, Parm)
// bool                                    bIsUnbound                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FText                             InvalidName                                            (Edit, BlueprintVisible)
// class FText                             KeysName                                               (Edit, BlueprintVisible)
// bool                                    Temp_bool_Variable                                     (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FFormatArgumentData              K2Node_MakeStruct_FormatArgumentData                   (HasGetValueTypeHash)
// bool                                    CallFunc_TextIsEmpty_ReturnValue                       (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FFormatArgumentData              K2Node_MakeStruct_FormatArgumentData_1                 (HasGetValueTypeHash)
// struct FFormatArgumentData              K2Node_MakeStruct_FormatArgumentData_2                 (HasGetValueTypeHash)
// TArray<struct FFormatArgumentData>      K2Node_MakeArray_Array                                 (ReferenceParm)
// TArray<struct FFormatArgumentData>      K2Node_MakeArray_Array_1                               (ReferenceParm)
// class FText                             CallFunc_Format_ReturnValue                            ()
// class FText                             CallFunc_Format_ReturnValue_1                          ()
// bool                                    Temp_bool_Variable_1                                   (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    CallFunc_EqualEqual_TextText_ReturnValue               (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    CallFunc_EqualEqual_TextText_ReturnValue_1             (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    CallFunc_BooleanOR_ReturnValue                         (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FFormatArgumentData              K2Node_MakeStruct_FormatArgumentData_3                 (HasGetValueTypeHash)
// struct FFormatArgumentData              K2Node_MakeStruct_FormatArgumentData_4                 (HasGetValueTypeHash)
// struct FFormatArgumentData              K2Node_MakeStruct_FormatArgumentData_5                 (HasGetValueTypeHash)
// struct FFormatArgumentData              K2Node_MakeStruct_FormatArgumentData_6                 (HasGetValueTypeHash)
// TArray<struct FFormatArgumentData>      K2Node_MakeArray_Array_2                               (ReferenceParm)
// struct FFormatArgumentData              K2Node_MakeStruct_FormatArgumentData_7                 (HasGetValueTypeHash)
// class FText                             CallFunc_Format_ReturnValue_2                          ()
// bool                                    Temp_bool_Variable_2                                   (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FFormatArgumentData              K2Node_MakeStruct_FormatArgumentData_8                 (HasGetValueTypeHash)
// TArray<struct FFormatArgumentData>      K2Node_MakeArray_Array_3                               (ReferenceParm)
// class FText                             K2Node_Select_Default                                  ()
// class FText                             CallFunc_Format_ReturnValue_3                          ()
// struct FFormatArgumentData              K2Node_MakeStruct_FormatArgumentData_9                 (HasGetValueTypeHash)
// TArray<struct FFormatArgumentData>      K2Node_MakeArray_Array_4                               (ReferenceParm)
// bool                                    CallFunc_TextIsEmpty_ReturnValue_1                     (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FText                             CallFunc_Format_ReturnValue_4                          ()
// class FText                             K2Node_Select_Default_1                                ()
// class FText                             K2Node_Select_Default_2                                ()

void UWBP_KeyRebindingGuide_C::BoundSuccessfulTip(class FText KeyName, class FText ChordKeyName, class FText InputActionName, class FText ConflicActionName, bool bIsUnbound, class FText InvalidName, class FText KeysName, bool Temp_bool_Variable, const struct FFormatArgumentData& K2Node_MakeStruct_FormatArgumentData, bool CallFunc_TextIsEmpty_ReturnValue, const struct FFormatArgumentData& K2Node_MakeStruct_FormatArgumentData_1, const struct FFormatArgumentData& K2Node_MakeStruct_FormatArgumentData_2, TArray<struct FFormatArgumentData>& K2Node_MakeArray_Array, TArray<struct FFormatArgumentData>& K2Node_MakeArray_Array_1, class FText CallFunc_Format_ReturnValue, class FText CallFunc_Format_ReturnValue_1, bool Temp_bool_Variable_1, bool CallFunc_EqualEqual_TextText_ReturnValue, bool CallFunc_EqualEqual_TextText_ReturnValue_1, bool CallFunc_BooleanOR_ReturnValue, const struct FFormatArgumentData& K2Node_MakeStruct_FormatArgumentData_3, const struct FFormatArgumentData& K2Node_MakeStruct_FormatArgumentData_4, const struct FFormatArgumentData& K2Node_MakeStruct_FormatArgumentData_5, const struct FFormatArgumentData& K2Node_MakeStruct_FormatArgumentData_6, TArray<struct FFormatArgumentData>& K2Node_MakeArray_Array_2, const struct FFormatArgumentData& K2Node_MakeStruct_FormatArgumentData_7, class FText CallFunc_Format_ReturnValue_2, bool Temp_bool_Variable_2, const struct FFormatArgumentData& K2Node_MakeStruct_FormatArgumentData_8, TArray<struct FFormatArgumentData>& K2Node_MakeArray_Array_3, class FText K2Node_Select_Default, class FText CallFunc_Format_ReturnValue_3, const struct FFormatArgumentData& K2Node_MakeStruct_FormatArgumentData_9, TArray<struct FFormatArgumentData>& K2Node_MakeArray_Array_4, bool CallFunc_TextIsEmpty_ReturnValue_1, class FText CallFunc_Format_ReturnValue_4, class FText K2Node_Select_Default_1, class FText K2Node_Select_Default_2)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_KeyRebindingGuide_C", "BoundSuccessfulTip");

	Params::WBP_KeyRebindingGuide_C_BoundSuccessfulTip Parms{};

	Parms.KeyName = KeyName;
	Parms.ChordKeyName = ChordKeyName;
	Parms.InputActionName = InputActionName;
	Parms.ConflicActionName = ConflicActionName;
	Parms.bIsUnbound = bIsUnbound;
	Parms.InvalidName = InvalidName;
	Parms.KeysName = KeysName;
	Parms.Temp_bool_Variable = Temp_bool_Variable;
	Parms.K2Node_MakeStruct_FormatArgumentData = std::move(K2Node_MakeStruct_FormatArgumentData);
	Parms.CallFunc_TextIsEmpty_ReturnValue = CallFunc_TextIsEmpty_ReturnValue;
	Parms.K2Node_MakeStruct_FormatArgumentData_1 = std::move(K2Node_MakeStruct_FormatArgumentData_1);
	Parms.K2Node_MakeStruct_FormatArgumentData_2 = std::move(K2Node_MakeStruct_FormatArgumentData_2);
	Parms.K2Node_MakeArray_Array = std::move(K2Node_MakeArray_Array);
	Parms.K2Node_MakeArray_Array_1 = std::move(K2Node_MakeArray_Array_1);
	Parms.CallFunc_Format_ReturnValue = CallFunc_Format_ReturnValue;
	Parms.CallFunc_Format_ReturnValue_1 = CallFunc_Format_ReturnValue_1;
	Parms.Temp_bool_Variable_1 = Temp_bool_Variable_1;
	Parms.CallFunc_EqualEqual_TextText_ReturnValue = CallFunc_EqualEqual_TextText_ReturnValue;
	Parms.CallFunc_EqualEqual_TextText_ReturnValue_1 = CallFunc_EqualEqual_TextText_ReturnValue_1;
	Parms.CallFunc_BooleanOR_ReturnValue = CallFunc_BooleanOR_ReturnValue;
	Parms.K2Node_MakeStruct_FormatArgumentData_3 = std::move(K2Node_MakeStruct_FormatArgumentData_3);
	Parms.K2Node_MakeStruct_FormatArgumentData_4 = std::move(K2Node_MakeStruct_FormatArgumentData_4);
	Parms.K2Node_MakeStruct_FormatArgumentData_5 = std::move(K2Node_MakeStruct_FormatArgumentData_5);
	Parms.K2Node_MakeStruct_FormatArgumentData_6 = std::move(K2Node_MakeStruct_FormatArgumentData_6);
	Parms.K2Node_MakeArray_Array_2 = std::move(K2Node_MakeArray_Array_2);
	Parms.K2Node_MakeStruct_FormatArgumentData_7 = std::move(K2Node_MakeStruct_FormatArgumentData_7);
	Parms.CallFunc_Format_ReturnValue_2 = CallFunc_Format_ReturnValue_2;
	Parms.Temp_bool_Variable_2 = Temp_bool_Variable_2;
	Parms.K2Node_MakeStruct_FormatArgumentData_8 = std::move(K2Node_MakeStruct_FormatArgumentData_8);
	Parms.K2Node_MakeArray_Array_3 = std::move(K2Node_MakeArray_Array_3);
	Parms.K2Node_Select_Default = K2Node_Select_Default;
	Parms.CallFunc_Format_ReturnValue_3 = CallFunc_Format_ReturnValue_3;
	Parms.K2Node_MakeStruct_FormatArgumentData_9 = std::move(K2Node_MakeStruct_FormatArgumentData_9);
	Parms.K2Node_MakeArray_Array_4 = std::move(K2Node_MakeArray_Array_4);
	Parms.CallFunc_TextIsEmpty_ReturnValue_1 = CallFunc_TextIsEmpty_ReturnValue_1;
	Parms.CallFunc_Format_ReturnValue_4 = CallFunc_Format_ReturnValue_4;
	Parms.K2Node_Select_Default_1 = K2Node_Select_Default_1;
	Parms.K2Node_Select_Default_2 = K2Node_Select_Default_2;

	UObject::ProcessEvent(Func, &Parms);

	K2Node_MakeArray_Array = std::move(Parms.K2Node_MakeArray_Array);
	K2Node_MakeArray_Array_1 = std::move(Parms.K2Node_MakeArray_Array_1);
	K2Node_MakeArray_Array_2 = std::move(Parms.K2Node_MakeArray_Array_2);
	K2Node_MakeArray_Array_3 = std::move(Parms.K2Node_MakeArray_Array_3);
	K2Node_MakeArray_Array_4 = std::move(Parms.K2Node_MakeArray_Array_4);
}


// Function WBP_KeyRebindingGuide.WBP_KeyRebindingGuide_C.Construct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UWBP_KeyRebindingGuide_C::Construct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_KeyRebindingGuide_C", "Construct");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_KeyRebindingGuide.WBP_KeyRebindingGuide_C.ExecuteUbergraph_WBP_KeyRebindingGuide
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// ECommonInputType                        Temp_byte_Variable                                     (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TDelegate<void()>                       K2Node_CreateDelegate_OutputDelegate                   (ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class UVerticalBox*                     Temp_object_Variable                                   (ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class UVerticalBox*                     Temp_object_Variable_1                                 (ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class FText                             K2Node_CustomEvent_KeyName                             ()
// class FText                             K2Node_CustomEvent_ChordKeyName                        ()
// class FText                             K2Node_CustomEvent_InputActionName                     ()
// class FText                             K2Node_CustomEvent_ConflicActionName                   ()
// bool                                    K2Node_CustomEvent_bIsUnbound                          (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FTimerHandle                     CallFunc_K2_InvalidateTimerHandle_ReturnValue          (NoDestructor, HasGetValueTypeHash)
// bool                                    CallFunc_K2_IsValidTimerHandle_ReturnValue             (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FTimerHandle                     CallFunc_K2_InvalidateTimerHandle_ReturnValue_1        (NoDestructor, HasGetValueTypeHash)
// struct FTimerHandle                     CallFunc_K2_SetTimerDelegate_ReturnValue               (NoDestructor, HasGetValueTypeHash)
// struct FTimerHandle                     CallFunc_K2_SetTimerDelegate_ReturnValue_1             (NoDestructor, HasGetValueTypeHash)
// float                                   CallFunc_GetPromptDelayTime_ReturnValue                (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    K2Node_Event_IsDesignTime                              (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UVerticalBox*                     K2Node_Select_Default                                  (ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void UWBP_KeyRebindingGuide_C::ExecuteUbergraph_WBP_KeyRebindingGuide(int32 EntryPoint, ECommonInputType Temp_byte_Variable, TDelegate<void()> K2Node_CreateDelegate_OutputDelegate, class UVerticalBox* Temp_object_Variable, class UVerticalBox* Temp_object_Variable_1, class FText K2Node_CustomEvent_KeyName, class FText K2Node_CustomEvent_ChordKeyName, class FText K2Node_CustomEvent_InputActionName, class FText K2Node_CustomEvent_ConflicActionName, bool K2Node_CustomEvent_bIsUnbound, const struct FTimerHandle& CallFunc_K2_InvalidateTimerHandle_ReturnValue, bool CallFunc_K2_IsValidTimerHandle_ReturnValue, const struct FTimerHandle& CallFunc_K2_InvalidateTimerHandle_ReturnValue_1, const struct FTimerHandle& CallFunc_K2_SetTimerDelegate_ReturnValue, const struct FTimerHandle& CallFunc_K2_SetTimerDelegate_ReturnValue_1, float CallFunc_GetPromptDelayTime_ReturnValue, bool K2Node_Event_IsDesignTime, class UVerticalBox* K2Node_Select_Default)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_KeyRebindingGuide_C", "ExecuteUbergraph_WBP_KeyRebindingGuide");

	Params::WBP_KeyRebindingGuide_C_ExecuteUbergraph_WBP_KeyRebindingGuide Parms{};

	Parms.EntryPoint = EntryPoint;
	Parms.Temp_byte_Variable = Temp_byte_Variable;
	Parms.K2Node_CreateDelegate_OutputDelegate = K2Node_CreateDelegate_OutputDelegate;
	Parms.Temp_object_Variable = Temp_object_Variable;
	Parms.Temp_object_Variable_1 = Temp_object_Variable_1;
	Parms.K2Node_CustomEvent_KeyName = K2Node_CustomEvent_KeyName;
	Parms.K2Node_CustomEvent_ChordKeyName = K2Node_CustomEvent_ChordKeyName;
	Parms.K2Node_CustomEvent_InputActionName = K2Node_CustomEvent_InputActionName;
	Parms.K2Node_CustomEvent_ConflicActionName = K2Node_CustomEvent_ConflicActionName;
	Parms.K2Node_CustomEvent_bIsUnbound = K2Node_CustomEvent_bIsUnbound;
	Parms.CallFunc_K2_InvalidateTimerHandle_ReturnValue = std::move(CallFunc_K2_InvalidateTimerHandle_ReturnValue);
	Parms.CallFunc_K2_IsValidTimerHandle_ReturnValue = CallFunc_K2_IsValidTimerHandle_ReturnValue;
	Parms.CallFunc_K2_InvalidateTimerHandle_ReturnValue_1 = std::move(CallFunc_K2_InvalidateTimerHandle_ReturnValue_1);
	Parms.CallFunc_K2_SetTimerDelegate_ReturnValue = std::move(CallFunc_K2_SetTimerDelegate_ReturnValue);
	Parms.CallFunc_K2_SetTimerDelegate_ReturnValue_1 = std::move(CallFunc_K2_SetTimerDelegate_ReturnValue_1);
	Parms.CallFunc_GetPromptDelayTime_ReturnValue = CallFunc_GetPromptDelayTime_ReturnValue;
	Parms.K2Node_Event_IsDesignTime = K2Node_Event_IsDesignTime;
	Parms.K2Node_Select_Default = K2Node_Select_Default;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_KeyRebindingGuide.WBP_KeyRebindingGuide_C.HiddenTips
// (BlueprintCallable, BlueprintEvent)

void UWBP_KeyRebindingGuide_C::HiddenTips()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_KeyRebindingGuide_C", "HiddenTips");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_KeyRebindingGuide.WBP_KeyRebindingGuide_C.PreConstruct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// bool                                    IsDesignTime                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_KeyRebindingGuide_C::PreConstruct(bool IsDesignTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_KeyRebindingGuide_C", "PreConstruct");

	Params::WBP_KeyRebindingGuide_C_PreConstruct Parms{};

	Parms.IsDesignTime = IsDesignTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_KeyRebindingGuide.WBP_KeyRebindingGuide_C.UpdateBoundTips
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FText                             KeyName                                                (BlueprintVisible, BlueprintReadOnly, Parm)
// class FText                             ChordKeyName                                           (BlueprintVisible, BlueprintReadOnly, Parm)
// class FText                             InputActionName                                        (BlueprintVisible, BlueprintReadOnly, Parm)
// class FText                             ConflicActionName                                      (BlueprintVisible, BlueprintReadOnly, Parm)
// bool                                    bIsUnbound                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_KeyRebindingGuide_C::UpdateBoundTips(class FText KeyName, class FText ChordKeyName, class FText InputActionName, class FText ConflicActionName, bool bIsUnbound)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_KeyRebindingGuide_C", "UpdateBoundTips");

	Params::WBP_KeyRebindingGuide_C_UpdateBoundTips Parms{};

	Parms.KeyName = KeyName;
	Parms.ChordKeyName = ChordKeyName;
	Parms.InputActionName = InputActionName;
	Parms.ConflicActionName = ConflicActionName;
	Parms.bIsUnbound = bIsUnbound;

	UObject::ProcessEvent(Func, &Parms);
}

}

