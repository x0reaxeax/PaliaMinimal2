#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_NameValidator_RequireAlphabetics_FullName

#include "Basic.hpp"

#include "BP_NameValidator_RequireAlphabetics_FullName_classes.hpp"
#include "BP_NameValidator_RequireAlphabetics_FullName_parameters.hpp"


namespace SDK
{

// Function BP_NameValidator_RequireAlphabetics_FullName.BP_NameValidator_RequireAlphabetics_FullName_C.IsNameValid
// (Event, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           InCharacterName                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    CallFunc_IsNameValid_ReturnValue                       (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FString                           CallFunc_RemoveCharactersFromString_Result             (ZeroConstructor, HasGetValueTypeHash)
// bool                                    CallFunc_Not_PreBool_ReturnValue                       (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FString                           CallFunc_Concat_StrStr_ReturnValue                     (ZeroConstructor, HasGetValueTypeHash)
// class FString                           CallFunc_Concat_StrStr_ReturnValue_1                   (ZeroConstructor, HasGetValueTypeHash)
// int64                                   CallFunc_Conv_IntToInt64_ReturnValue                   (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FFormatArgumentData              K2Node_MakeStruct_FormatArgumentData                   (HasGetValueTypeHash)
// class FString                           CallFunc_Conv_IntToString_ReturnValue                  (ZeroConstructor, HasGetValueTypeHash)
// TArray<struct FFormatArgumentData>      K2Node_MakeArray_Array                                 (ReferenceParm)
// class FString                           CallFunc_Concat_StrStr_ReturnValue_2                   (ZeroConstructor, HasGetValueTypeHash)
// class FText                             CallFunc_Format_ReturnValue                            ()
// class FString                           CallFunc_Concat_StrStr_ReturnValue_3                   (ZeroConstructor, HasGetValueTypeHash)

bool UBP_NameValidator_RequireAlphabetics_FullName_C::IsNameValid(const class FString& InCharacterName, bool CallFunc_IsNameValid_ReturnValue, const class FString& CallFunc_RemoveCharactersFromString_Result, bool CallFunc_Not_PreBool_ReturnValue, const class FString& CallFunc_Concat_StrStr_ReturnValue, const class FString& CallFunc_Concat_StrStr_ReturnValue_1, int64 CallFunc_Conv_IntToInt64_ReturnValue, const struct FFormatArgumentData& K2Node_MakeStruct_FormatArgumentData, const class FString& CallFunc_Conv_IntToString_ReturnValue, TArray<struct FFormatArgumentData>& K2Node_MakeArray_Array, const class FString& CallFunc_Concat_StrStr_ReturnValue_2, class FText CallFunc_Format_ReturnValue, const class FString& CallFunc_Concat_StrStr_ReturnValue_3)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NameValidator_RequireAlphabetics_FullName_C", "IsNameValid");

	Params::BP_NameValidator_RequireAlphabetics_FullName_C_IsNameValid Parms{};

	Parms.InCharacterName = std::move(InCharacterName);
	Parms.CallFunc_IsNameValid_ReturnValue = CallFunc_IsNameValid_ReturnValue;
	Parms.CallFunc_RemoveCharactersFromString_Result = std::move(CallFunc_RemoveCharactersFromString_Result);
	Parms.CallFunc_Not_PreBool_ReturnValue = CallFunc_Not_PreBool_ReturnValue;
	Parms.CallFunc_Concat_StrStr_ReturnValue = std::move(CallFunc_Concat_StrStr_ReturnValue);
	Parms.CallFunc_Concat_StrStr_ReturnValue_1 = std::move(CallFunc_Concat_StrStr_ReturnValue_1);
	Parms.CallFunc_Conv_IntToInt64_ReturnValue = CallFunc_Conv_IntToInt64_ReturnValue;
	Parms.K2Node_MakeStruct_FormatArgumentData = std::move(K2Node_MakeStruct_FormatArgumentData);
	Parms.CallFunc_Conv_IntToString_ReturnValue = std::move(CallFunc_Conv_IntToString_ReturnValue);
	Parms.K2Node_MakeArray_Array = std::move(K2Node_MakeArray_Array);
	Parms.CallFunc_Concat_StrStr_ReturnValue_2 = std::move(CallFunc_Concat_StrStr_ReturnValue_2);
	Parms.CallFunc_Format_ReturnValue = CallFunc_Format_ReturnValue;
	Parms.CallFunc_Concat_StrStr_ReturnValue_3 = std::move(CallFunc_Concat_StrStr_ReturnValue_3);

	UObject::ProcessEvent(Func, &Parms);

	K2Node_MakeArray_Array = std::move(Parms.K2Node_MakeArray_Array);

	return Parms.ReturnValue;
}


// Function BP_NameValidator_RequireAlphabetics_FullName.BP_NameValidator_RequireAlphabetics_FullName_C.RemoveCharactersFromString
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           String                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// class FString                           Characters                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// class FString                           Result                                                 (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)
// class FString                           AllowedCharacters                                      (Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
// TArray<class FString>                   CallFunc_GetCharacterArrayFromString_ReturnValue       (ReferenceParm)
// TArray<class FString>                   CallFunc_GetCharacterArrayFromString_ReturnValue_1     (ReferenceParm)
// int32                                   Temp_int_Array_Index_Variable                          (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   CallFunc_Array_Length_ReturnValue                      (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FString                           CallFunc_Array_Get_Item                                (ZeroConstructor, HasGetValueTypeHash)
// bool                                    CallFunc_Array_Contains_ReturnValue                    (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Temp_int_Loop_Counter_Variable                         (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    CallFunc_Not_PreBool_ReturnValue                       (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    CallFunc_Less_IntInt_ReturnValue                       (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   CallFunc_Add_IntInt_ReturnValue                        (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FString                           CallFunc_Concat_StrStr_ReturnValue                     (ZeroConstructor, HasGetValueTypeHash)

void UBP_NameValidator_RequireAlphabetics_FullName_C::RemoveCharactersFromString(const class FString& String, const class FString& Characters, class FString* Result, const class FString& AllowedCharacters, TArray<class FString>& CallFunc_GetCharacterArrayFromString_ReturnValue, TArray<class FString>& CallFunc_GetCharacterArrayFromString_ReturnValue_1, int32 Temp_int_Array_Index_Variable, int32 CallFunc_Array_Length_ReturnValue, const class FString& CallFunc_Array_Get_Item, bool CallFunc_Array_Contains_ReturnValue, int32 Temp_int_Loop_Counter_Variable, bool CallFunc_Not_PreBool_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue, int32 CallFunc_Add_IntInt_ReturnValue, const class FString& CallFunc_Concat_StrStr_ReturnValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NameValidator_RequireAlphabetics_FullName_C", "RemoveCharactersFromString");

	Params::BP_NameValidator_RequireAlphabetics_FullName_C_RemoveCharactersFromString Parms{};

	Parms.String = std::move(String);
	Parms.Characters = std::move(Characters);
	Parms.AllowedCharacters = std::move(AllowedCharacters);
	Parms.CallFunc_GetCharacterArrayFromString_ReturnValue = std::move(CallFunc_GetCharacterArrayFromString_ReturnValue);
	Parms.CallFunc_GetCharacterArrayFromString_ReturnValue_1 = std::move(CallFunc_GetCharacterArrayFromString_ReturnValue_1);
	Parms.Temp_int_Array_Index_Variable = Temp_int_Array_Index_Variable;
	Parms.CallFunc_Array_Length_ReturnValue = CallFunc_Array_Length_ReturnValue;
	Parms.CallFunc_Array_Get_Item = std::move(CallFunc_Array_Get_Item);
	Parms.CallFunc_Array_Contains_ReturnValue = CallFunc_Array_Contains_ReturnValue;
	Parms.Temp_int_Loop_Counter_Variable = Temp_int_Loop_Counter_Variable;
	Parms.CallFunc_Not_PreBool_ReturnValue = CallFunc_Not_PreBool_ReturnValue;
	Parms.CallFunc_Less_IntInt_ReturnValue = CallFunc_Less_IntInt_ReturnValue;
	Parms.CallFunc_Add_IntInt_ReturnValue = CallFunc_Add_IntInt_ReturnValue;
	Parms.CallFunc_Concat_StrStr_ReturnValue = std::move(CallFunc_Concat_StrStr_ReturnValue);

	UObject::ProcessEvent(Func, &Parms);

	CallFunc_GetCharacterArrayFromString_ReturnValue = std::move(Parms.CallFunc_GetCharacterArrayFromString_ReturnValue);
	CallFunc_GetCharacterArrayFromString_ReturnValue_1 = std::move(Parms.CallFunc_GetCharacterArrayFromString_ReturnValue_1);

	if (Result != nullptr)
		*Result = std::move(Parms.Result);
}

}

