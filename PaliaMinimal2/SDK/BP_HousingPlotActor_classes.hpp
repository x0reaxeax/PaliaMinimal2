#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_HousingPlotActor

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "Palia_structs.hpp"
#include "Palia_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_HousingPlotActor.BP_HousingPlotActor_C
// 0x0218 (0x0670 - 0x0458)
class ABP_HousingPlotActor_C final : public AHousingPlotActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0458(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UBoxComponent*                          CameraBoundaries_ExpandedForConsole;               // 0x0460(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UChildActorComponent*                   TP_HousingPlot_Default3;                           // 0x0468(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UChildActorComponent*                   TP_HousingPlot_HodariFTUE;                         // 0x0470(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UChildActorComponent*                   TP_HousingPlot_Pond;                               // 0x0478(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UChildActorComponent*                   TP_HousingPlot_Mailbox;                            // 0x0480(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UChildActorComponent*                   TP_HousingPlot_Default2;                           // 0x0488(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UChildActorComponent*                   TP_HousingPlot_Default;                            // 0x0490(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UPostProcessComponent*                  PostProcess;                                       // 0x0498(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBoxComponent*                          CameraBoundaries_Max;                              // 0x04A0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UChildActorComponent*                   Location_VillagerVisit_Temp;                       // 0x04A8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   GrassMask;                                         // 0x04B0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBoxComponent*                          CameraBoundaries_Min;                              // 0x04B8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UConfigurableTriggerVolume*             ConfigurableTriggerVolume;                         // 0x04C0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UTextRenderComponent*                   PlotName;                                          // 0x04C8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBoxComponent*                          LoadHousingPlotBackground;                         // 0x04D0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBoxComponent*                          BoxGroundCatcher;                                  // 0x04D8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        Boundaries;                                        // 0x04E0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBillboardComponent*                    VP_6;                                              // 0x04E8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBillboardComponent*                    VP_5;                                              // 0x04F0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBillboardComponent*                    VP_4;                                              // 0x04F8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBillboardComponent*                    VP_3;                                              // 0x0500(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBillboardComponent*                    VP_2;                                              // 0x0508(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBillboardComponent*                    VP_1;                                              // 0x0510(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UCameraComponent*                       Camera;                                            // 0x0518(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        CameraDolly_Vertical;                              // 0x0520(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        CameraDolly_Horizontal;                            // 0x0528(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        CameraPivot;                                       // 0x0530(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UChildActorComponent*                   MailboxChildActor;                                 // 0x0538(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   BaseFoundation;                                    // 0x0540(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UNavModifierComponent*                  NavModifier;                                       // 0x0548(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Foundation;                                        // 0x0550(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	bool                                          IsForwardAxisDown;                                 // 0x0558(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5B6A[0x7];                                     // 0x0559(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USceneComponent*                        VantagePointToMoveTo;                              // 0x0560(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	double                                        SpeedBetweenVantagePoints;                         // 0x0568(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsRightLeftAxisDown;                               // 0x0570(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5B6B[0x7];                                     // 0x0571(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USceneComponent*                        NextVantagePointToMoveTo;                          // 0x0578(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	double                                        MinOrthoZoom;                                      // 0x0580(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        MaxOrthoZoom;                                      // 0x0588(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        MinPerspectiveZoom;                                // 0x0590(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        MaxPerspectiveZoom;                                // 0x0598(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ULevelStreamingDynamic*                 HousingPlotLevelStream;                            // 0x05A0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           CheckPlayerIsAtHouseTimer;                         // 0x05A8(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	double                                        CurrentZoom;                                       // 0x05B0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TSoftObjectPtr<class UWorld>                  LevelReference;                                    // 0x05B8(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash)
	FMulticastInlineDelegateProperty_             OnVisitorEntered;                                  // 0x05E0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	struct FTransform                             PivotInitialPosition;                              // 0x05F0(0x0060)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          RotatingCW;                                        // 0x0650(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          RotatingCCW;                                       // 0x0651(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5B6C[0x6];                                     // 0x0652(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        RotationTimer;                                     // 0x0658(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCurveFloat*                            RotationEaseInCurve;                               // 0x0660(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)

public:
	void Begin_Pivot_Rotation(bool CCW);
	void BndEvt__LoadHousingPlotBackground_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, struct FHitResult& SweepResult);
	void BndEvt__LoadHousingPlotBackground_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex);
	void CheckPlayerIsAtHouse();
	void ClampCameraPositionInBounds(const struct FVector& InPos, struct FVector* OutPos, double CallFunc_BreakVector_X, double CallFunc_BreakVector_Y, double CallFunc_BreakVector_Z, const struct FVector& CallFunc_Add_VectorVector_ReturnValue, const struct FVector& CallFunc_Subtract_VectorVector_ReturnValue, double CallFunc_BreakVector_X_1, double CallFunc_BreakVector_Y_1, double CallFunc_BreakVector_Z_1, double CallFunc_BreakVector_X_2, double CallFunc_BreakVector_Y_2, double CallFunc_BreakVector_Z_2, double CallFunc_FClamp_ReturnValue, double CallFunc_FClamp_ReturnValue_1, const struct FVector& CallFunc_MakeVector_ReturnValue);
	void DidVisitorEnter(class AHousingOwnershipActor* HOA, bool* Yes, bool CallFunc_IsValid_ReturnValue, TArray<class AValeriaCharacter*>& CallFunc_GetVisitorList_ReturnValue, int32 CallFunc_Array_Length_ReturnValue, bool CallFunc_Greater_IntInt_ReturnValue, bool CallFunc_IsServer_ReturnValue, bool CallFunc_Not_PreBool_ReturnValue, bool CallFunc_BooleanAND_ReturnValue);
	void End_Pivot_Rotation(bool CCW);
	void ExecuteUbergraph_BP_HousingPlotActor(int32 EntryPoint, float K2Node_Event_axis_1, float K2Node_Event_axis, double CallFunc_Multiply_DoubleDouble_ReturnValue, const struct FVector2D& CallFunc_MakeVector2D_ReturnValue, const struct FVector2D& CallFunc_MakeVector2D_ReturnValue_1, const struct FVector2D& K2Node_CustomEvent_Axis, const struct FVector& CallFunc_Conv_Vector2DToVector_ReturnValue, const struct FVector& CallFunc_Normal_ReturnValue, double CallFunc_GetWorldDeltaSeconds_ReturnValue, double CallFunc_Multiply_DoubleDouble_ReturnValue_1, const struct FVector& CallFunc_K2_GetActorLocation_ReturnValue, const struct FVector& CallFunc_Multiply_VectorFloat_ReturnValue, class UPrimitiveComponent* K2Node_ComponentBoundEvent_OverlappedComponent_1, class AActor* K2Node_ComponentBoundEvent_OtherActor_1, class UPrimitiveComponent* K2Node_ComponentBoundEvent_OtherComp_1, int32 K2Node_ComponentBoundEvent_OtherBodyIndex_1, bool K2Node_ComponentBoundEvent_bFromSweep, struct FHitResult& K2Node_ComponentBoundEvent_SweepResult, const struct FHitResult& CallFunc_K2_AddLocalOffset_SweepHitResult, bool CallFunc_IsServer_ReturnValue, int32 Temp_int_Array_Index_Variable, bool CallFunc_IsServer_ReturnValue_1, class APlayerController* CallFunc_GetPlayerController_ReturnValue, bool CallFunc_Not_PreBool_ReturnValue, bool CallFunc_IsValid_ReturnValue, class APawn* CallFunc_K2_GetPawn_ReturnValue, bool CallFunc_EqualEqual_ObjectObject_ReturnValue, class UPrimitiveComponent* K2Node_ComponentBoundEvent_OverlappedComponent, class AActor* K2Node_ComponentBoundEvent_OtherActor, class UPrimitiveComponent* K2Node_ComponentBoundEvent_OtherComp, int32 K2Node_ComponentBoundEvent_OtherBodyIndex, bool CallFunc_BooleanAND_ReturnValue, const class FString& CallFunc_GetDisplayName_ReturnValue, bool CallFunc_IsLocalCharacterAtThisPlot__IsInside, bool CallFunc_IsLocalCharacterAtThisPlot__HasCharacterLoaded, class FText CallFunc_Conv_StringToText_ReturnValue, bool CallFunc_IsServer_ReturnValue_2, class APlayerController* CallFunc_GetPlayerController_ReturnValue_1, bool CallFunc_Not_PreBool_ReturnValue_1, class APawn* CallFunc_K2_GetPawn_ReturnValue_1, bool CallFunc_EqualEqual_ObjectObject_ReturnValue_1, bool CallFunc_IsDebuggingOn__IsDebuggingOn, bool CallFunc_BooleanAND_ReturnValue_1, const struct FVector& K2Node_CustomEvent_Delta, const struct FVector& CallFunc_ClampCameraPositionInBounds_OutPos, const struct FHitResult& CallFunc_K2_SetRelativeLocation_SweepHitResult, const struct FHitResult& CallFunc_K2_AddLocalOffset_SweepHitResult_1, class UHousingPlotUnlocksComponent* K2Node_Event_component, const struct FVector& CallFunc_ClampCameraPositionInBounds_OutPos_1, class AHousingOwnershipActor* K2Node_Event_hoa_1, const struct FHitResult& CallFunc_K2_SetRelativeLocation_SweepHitResult_1, bool CallFunc_IsValid_ReturnValue_1, class UHousingPlotUnlocksComponent* CallFunc_GetHousingPlotUnlocks_ReturnValue, class AHousingOwnershipActor* K2Node_Event_hoa, bool CallFunc_IsServer_ReturnValue_3, bool CallFunc_DidVisitorEnter_Yes, class AHousingOwnershipActor* K2Node_CustomEvent_HOA, bool CallFunc_LoadLevelInstanceBySoftObjectPtr_bOutSuccess, class ULevelStreamingDynamic* CallFunc_LoadLevelInstanceBySoftObjectPtr_ReturnValue, TArray<class AValeriaCharacter*>& CallFunc_GetVisitorList_ReturnValue, class AValeriaCharacter* CallFunc_Array_Get_Item, int32 CallFunc_Array_Length_ReturnValue, EHousingPermissionLevel CallFunc_GetOccupiedHousingOwnershipActor_permissionLevel, class AHousingOwnershipActor* CallFunc_GetOccupiedHousingOwnershipActor_ReturnValue, bool CallFunc_IsServer_ReturnValue_4, bool CallFunc_EqualEqual_ByteByte_ReturnValue, int32 Temp_int_Array_Index_Variable_1, class ABP_Mailbox_C* K2Node_DynamicCast_AsBP_Mailbox, bool K2Node_DynamicCast_bSuccess, bool K2Node_CustomEvent_IsPlaceMode, const struct FWeightedBlendable& K2Node_MakeStruct_WeightedBlendable, const struct FWeightedBlendable& K2Node_MakeStruct_WeightedBlendable_1, class AValeriaCharacter* K2Node_Event_vc, bool K2Node_Event_PlacementMode, class AHousingPlotDebrisActor* CallFunc_Array_Get_Item_1, int32 CallFunc_Array_Length_ReturnValue_1, int32 Temp_int_Loop_Counter_Variable, TDelegate<void()> K2Node_CreateDelegate_OutputDelegate, bool CallFunc_Less_IntInt_ReturnValue, const struct FTimerHandle& CallFunc_K2_SetTimerDelegate_ReturnValue, int32 CallFunc_Add_IntInt_ReturnValue, const struct FTransform& CallFunc_K2_GetComponentToWorld_ReturnValue, const struct FHitResult& CallFunc_K2_SetWorldTransform_SweepHitResult, bool K2Node_CustomEvent_CCW_1, bool K2Node_CustomEvent_CCW, float K2Node_Event_DeltaSeconds, const struct FRotator& CallFunc_GetFramePivotRotation_Rotation, bool CallFunc_IsHousingMenuCameraRotationEnabled_ReturnValue, const struct FHitResult& CallFunc_K2_AddLocalRotation_SweepHitResult, bool Temp_bool_Variable, bool CallFunc_BooleanOR_ReturnValue, const struct FWeightedBlendable& K2Node_Select_Default, TArray<struct FWeightedBlendable>& K2Node_MakeArray_Array, double CallFunc_Add_DoubleDouble_ReturnValue, const struct FWeightedBlendables& K2Node_MakeStruct_WeightedBlendables, int32 Temp_int_Loop_Counter_Variable_1, bool CallFunc_Less_IntInt_ReturnValue_1, int32 CallFunc_Add_IntInt_ReturnValue_1, EEndPlayReason K2Node_Event_EndPlayReason, bool CallFunc_IsValid_ReturnValue_2, class UHousingPlotUnlocksComponent* CallFunc_GetHousingPlotUnlocks_ReturnValue_1, double CallFunc_Multiply_DoubleDouble_A_ImplicitCast, double CallFunc_MakeVector2D_X_ImplicitCast, double CallFunc_GetFramePivotRotation_DeltaTime_ImplicitCast, double CallFunc_Add_DoubleDouble_A_ImplicitCast);
	void GetFramePivotRotation(double DeltaTime, struct FRotator* Rotation, bool Temp_bool_Variable, double Temp_real_Variable, double Temp_real_Variable_1, bool Temp_bool_Variable_1, double Temp_real_Variable_2, double Temp_real_Variable_3, double K2Node_Select_Default, double K2Node_Select_Default_1, double CallFunc_Add_DoubleDouble_ReturnValue, float CallFunc_GetFloatValue_ReturnValue, double CallFunc_Multiply_DoubleDouble_ReturnValue, double CallFunc_Multiply_DoubleDouble_ReturnValue_1, const struct FRotator& CallFunc_MakeRotator_ReturnValue, float CallFunc_GetFloatValue_InTime_ImplicitCast, double CallFunc_Multiply_DoubleDouble_B_ImplicitCast, float CallFunc_MakeRotator_Yaw_ImplicitCast);
	void InitializeMailbox(class AHousingOwnershipActor* HOA);
	void IsInHousingMode(bool* IsTrue, class APlayerController* CallFunc_GetPlayerController_ReturnValue, class AValeriaPlayerController* K2Node_DynamicCast_AsValeria_Player_Controller, bool K2Node_DynamicCast_bSuccess, EValeriaFuncResult CallFunc_GetValeriaCharacter_OutResult, class AValeriaCharacter* CallFunc_GetValeriaCharacter_ReturnValue, bool K2Node_SwitchEnum_CmpSuccess, bool CallFunc_IsInHousingEditMode_ReturnValue);
	void IsLocalCharacterAtThisPlot_(bool* IsInside, bool* HasCharacterLoaded, bool CallFunc_IsServer_ReturnValue, class APlayerController* CallFunc_GetPlayerController_ReturnValue, bool CallFunc_IsValid_ReturnValue, class APawn* CallFunc_K2_GetPawn_ReturnValue, bool CallFunc_IsValid_ReturnValue_1, bool CallFunc_IsOverlappingActor_ReturnValue);
	void IsRotatingPivot(bool* IsRotating, bool CallFunc_BooleanOR_ReturnValue);
	void MoveCameraPivot_WorldDelta(const struct FVector& Delta);
	void MoveCameraPivotDirectly(const struct FVector2D& Axis);
	void OnForwardStickChanged(float Axis);
	void OnHousingPlotUnlocksChanged(class UHousingPlotUnlocksComponent* Component);
	void OnHousingVisitorListChanged(class AHousingOwnershipActor* HOA);
	void OnLocalPlayerPlacementStateChanged(class AValeriaCharacter* VC, bool PlacementMode);
	void OnOccupiedHousingOwnershipChanged(class AHousingOwnershipActor* HOA);
	void OnRightLeftStickChanged(float Axis);
	void OnVisitorEntered__DelegateSignature();
	void ReceiveBeginPlay();
	void ReceiveEndPlay(EEndPlayReason EndPlayReason);
	void ReceiveTick(float DeltaSeconds);
	void ResetCameraPivotTransform();
	void TogglePostProcessMaterials(bool IsPlaceMode);
	void TryShowEditAccessTutorial();
	void UpdateHousingWritsLockedState(class UHousingPlotUnlocksComponent* HouseUnlocks, int32 Temp_int_Array_Index_Variable, bool CallFunc_IsValid_ReturnValue, int32 Temp_int_Loop_Counter_Variable, class AHousingPlotDebrisActor* CallFunc_Array_Get_Item, int32 CallFunc_Add_IntInt_ReturnValue, int32 CallFunc_Array_Length_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue);
	void UpdateWhetherLocalCharacterIsAtThisPlot(class ULevelStreaming* CallFunc_GetStreamingLevel_ReturnValue, bool CallFunc_IsValid_ReturnValue, bool CallFunc_IsValid_ReturnValue_1, const struct FVector& CallFunc_K2_GetActorLocation_ReturnValue, const class FString& CallFunc_GetDisplayName_ReturnValue, const class FString& CallFunc_Conv_VectorToString_ReturnValue, const class FString& CallFunc_Concat_StrStr_ReturnValue, const class FString& CallFunc_GetDisplayName_ReturnValue_1, const class FString& CallFunc_Concat_StrStr_ReturnValue_1, const class FString& CallFunc_Concat_StrStr_ReturnValue_2, const class FString& CallFunc_Concat_StrStr_ReturnValue_3, const struct FVector& CallFunc_K2_GetActorLocation_ReturnValue_1, const class FString& CallFunc_Concat_StrStr_ReturnValue_4, const class FString& CallFunc_Conv_VectorToString_ReturnValue_1, const class FString& CallFunc_Concat_StrStr_ReturnValue_5, bool CallFunc_IsValid_ReturnValue_2, bool CallFunc_IsLocalCharacterAtThisPlot__IsInside, bool CallFunc_IsLocalCharacterAtThisPlot__HasCharacterLoaded, class ULevelStreaming* CallFunc_GetStreamingLevel_ReturnValue_1, bool CallFunc_IsValid_ReturnValue_3, bool CallFunc_IsValid_ReturnValue_4, bool CallFunc_IsServer_ReturnValue, bool CallFunc_Not_PreBool_ReturnValue);
	void ZoomCamera(double Level, double CallFunc_Subtract_DoubleDouble_ReturnValue, double CallFunc_FClamp_ReturnValue, double CallFunc_MapRangeClamped_ReturnValue, const struct FVector& CallFunc_MakeVector_ReturnValue, const struct FHitResult& CallFunc_K2_SetRelativeLocation_SweepHitResult, double CallFunc_MapRangeClamped_ReturnValue_1, bool CallFunc_EqualEqual_ByteByte_ReturnValue, float CallFunc_SetOrthoWidth_InOrthoWidth_ImplicitCast);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_HousingPlotActor_C">();
	}
	static class ABP_HousingPlotActor_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_HousingPlotActor_C>();
	}
};
static_assert(alignof(ABP_HousingPlotActor_C) == 0x000010, "Wrong alignment on ABP_HousingPlotActor_C");
static_assert(sizeof(ABP_HousingPlotActor_C) == 0x000670, "Wrong size on ABP_HousingPlotActor_C");
static_assert(offsetof(ABP_HousingPlotActor_C, UberGraphFrame) == 0x000458, "Member 'ABP_HousingPlotActor_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_HousingPlotActor_C, CameraBoundaries_ExpandedForConsole) == 0x000460, "Member 'ABP_HousingPlotActor_C::CameraBoundaries_ExpandedForConsole' has a wrong offset!");
static_assert(offsetof(ABP_HousingPlotActor_C, TP_HousingPlot_Default3) == 0x000468, "Member 'ABP_HousingPlotActor_C::TP_HousingPlot_Default3' has a wrong offset!");
static_assert(offsetof(ABP_HousingPlotActor_C, TP_HousingPlot_HodariFTUE) == 0x000470, "Member 'ABP_HousingPlotActor_C::TP_HousingPlot_HodariFTUE' has a wrong offset!");
static_assert(offsetof(ABP_HousingPlotActor_C, TP_HousingPlot_Pond) == 0x000478, "Member 'ABP_HousingPlotActor_C::TP_HousingPlot_Pond' has a wrong offset!");
static_assert(offsetof(ABP_HousingPlotActor_C, TP_HousingPlot_Mailbox) == 0x000480, "Member 'ABP_HousingPlotActor_C::TP_HousingPlot_Mailbox' has a wrong offset!");
static_assert(offsetof(ABP_HousingPlotActor_C, TP_HousingPlot_Default2) == 0x000488, "Member 'ABP_HousingPlotActor_C::TP_HousingPlot_Default2' has a wrong offset!");
static_assert(offsetof(ABP_HousingPlotActor_C, TP_HousingPlot_Default) == 0x000490, "Member 'ABP_HousingPlotActor_C::TP_HousingPlot_Default' has a wrong offset!");
static_assert(offsetof(ABP_HousingPlotActor_C, PostProcess) == 0x000498, "Member 'ABP_HousingPlotActor_C::PostProcess' has a wrong offset!");
static_assert(offsetof(ABP_HousingPlotActor_C, CameraBoundaries_Max) == 0x0004A0, "Member 'ABP_HousingPlotActor_C::CameraBoundaries_Max' has a wrong offset!");
static_assert(offsetof(ABP_HousingPlotActor_C, Location_VillagerVisit_Temp) == 0x0004A8, "Member 'ABP_HousingPlotActor_C::Location_VillagerVisit_Temp' has a wrong offset!");
static_assert(offsetof(ABP_HousingPlotActor_C, GrassMask) == 0x0004B0, "Member 'ABP_HousingPlotActor_C::GrassMask' has a wrong offset!");
static_assert(offsetof(ABP_HousingPlotActor_C, CameraBoundaries_Min) == 0x0004B8, "Member 'ABP_HousingPlotActor_C::CameraBoundaries_Min' has a wrong offset!");
static_assert(offsetof(ABP_HousingPlotActor_C, ConfigurableTriggerVolume) == 0x0004C0, "Member 'ABP_HousingPlotActor_C::ConfigurableTriggerVolume' has a wrong offset!");
static_assert(offsetof(ABP_HousingPlotActor_C, PlotName) == 0x0004C8, "Member 'ABP_HousingPlotActor_C::PlotName' has a wrong offset!");
static_assert(offsetof(ABP_HousingPlotActor_C, LoadHousingPlotBackground) == 0x0004D0, "Member 'ABP_HousingPlotActor_C::LoadHousingPlotBackground' has a wrong offset!");
static_assert(offsetof(ABP_HousingPlotActor_C, BoxGroundCatcher) == 0x0004D8, "Member 'ABP_HousingPlotActor_C::BoxGroundCatcher' has a wrong offset!");
static_assert(offsetof(ABP_HousingPlotActor_C, Boundaries) == 0x0004E0, "Member 'ABP_HousingPlotActor_C::Boundaries' has a wrong offset!");
static_assert(offsetof(ABP_HousingPlotActor_C, VP_6) == 0x0004E8, "Member 'ABP_HousingPlotActor_C::VP_6' has a wrong offset!");
static_assert(offsetof(ABP_HousingPlotActor_C, VP_5) == 0x0004F0, "Member 'ABP_HousingPlotActor_C::VP_5' has a wrong offset!");
static_assert(offsetof(ABP_HousingPlotActor_C, VP_4) == 0x0004F8, "Member 'ABP_HousingPlotActor_C::VP_4' has a wrong offset!");
static_assert(offsetof(ABP_HousingPlotActor_C, VP_3) == 0x000500, "Member 'ABP_HousingPlotActor_C::VP_3' has a wrong offset!");
static_assert(offsetof(ABP_HousingPlotActor_C, VP_2) == 0x000508, "Member 'ABP_HousingPlotActor_C::VP_2' has a wrong offset!");
static_assert(offsetof(ABP_HousingPlotActor_C, VP_1) == 0x000510, "Member 'ABP_HousingPlotActor_C::VP_1' has a wrong offset!");
static_assert(offsetof(ABP_HousingPlotActor_C, Camera) == 0x000518, "Member 'ABP_HousingPlotActor_C::Camera' has a wrong offset!");
static_assert(offsetof(ABP_HousingPlotActor_C, CameraDolly_Vertical) == 0x000520, "Member 'ABP_HousingPlotActor_C::CameraDolly_Vertical' has a wrong offset!");
static_assert(offsetof(ABP_HousingPlotActor_C, CameraDolly_Horizontal) == 0x000528, "Member 'ABP_HousingPlotActor_C::CameraDolly_Horizontal' has a wrong offset!");
static_assert(offsetof(ABP_HousingPlotActor_C, CameraPivot) == 0x000530, "Member 'ABP_HousingPlotActor_C::CameraPivot' has a wrong offset!");
static_assert(offsetof(ABP_HousingPlotActor_C, MailboxChildActor) == 0x000538, "Member 'ABP_HousingPlotActor_C::MailboxChildActor' has a wrong offset!");
static_assert(offsetof(ABP_HousingPlotActor_C, BaseFoundation) == 0x000540, "Member 'ABP_HousingPlotActor_C::BaseFoundation' has a wrong offset!");
static_assert(offsetof(ABP_HousingPlotActor_C, NavModifier) == 0x000548, "Member 'ABP_HousingPlotActor_C::NavModifier' has a wrong offset!");
static_assert(offsetof(ABP_HousingPlotActor_C, Foundation) == 0x000550, "Member 'ABP_HousingPlotActor_C::Foundation' has a wrong offset!");
static_assert(offsetof(ABP_HousingPlotActor_C, IsForwardAxisDown) == 0x000558, "Member 'ABP_HousingPlotActor_C::IsForwardAxisDown' has a wrong offset!");
static_assert(offsetof(ABP_HousingPlotActor_C, VantagePointToMoveTo) == 0x000560, "Member 'ABP_HousingPlotActor_C::VantagePointToMoveTo' has a wrong offset!");
static_assert(offsetof(ABP_HousingPlotActor_C, SpeedBetweenVantagePoints) == 0x000568, "Member 'ABP_HousingPlotActor_C::SpeedBetweenVantagePoints' has a wrong offset!");
static_assert(offsetof(ABP_HousingPlotActor_C, IsRightLeftAxisDown) == 0x000570, "Member 'ABP_HousingPlotActor_C::IsRightLeftAxisDown' has a wrong offset!");
static_assert(offsetof(ABP_HousingPlotActor_C, NextVantagePointToMoveTo) == 0x000578, "Member 'ABP_HousingPlotActor_C::NextVantagePointToMoveTo' has a wrong offset!");
static_assert(offsetof(ABP_HousingPlotActor_C, MinOrthoZoom) == 0x000580, "Member 'ABP_HousingPlotActor_C::MinOrthoZoom' has a wrong offset!");
static_assert(offsetof(ABP_HousingPlotActor_C, MaxOrthoZoom) == 0x000588, "Member 'ABP_HousingPlotActor_C::MaxOrthoZoom' has a wrong offset!");
static_assert(offsetof(ABP_HousingPlotActor_C, MinPerspectiveZoom) == 0x000590, "Member 'ABP_HousingPlotActor_C::MinPerspectiveZoom' has a wrong offset!");
static_assert(offsetof(ABP_HousingPlotActor_C, MaxPerspectiveZoom) == 0x000598, "Member 'ABP_HousingPlotActor_C::MaxPerspectiveZoom' has a wrong offset!");
static_assert(offsetof(ABP_HousingPlotActor_C, HousingPlotLevelStream) == 0x0005A0, "Member 'ABP_HousingPlotActor_C::HousingPlotLevelStream' has a wrong offset!");
static_assert(offsetof(ABP_HousingPlotActor_C, CheckPlayerIsAtHouseTimer) == 0x0005A8, "Member 'ABP_HousingPlotActor_C::CheckPlayerIsAtHouseTimer' has a wrong offset!");
static_assert(offsetof(ABP_HousingPlotActor_C, CurrentZoom) == 0x0005B0, "Member 'ABP_HousingPlotActor_C::CurrentZoom' has a wrong offset!");
static_assert(offsetof(ABP_HousingPlotActor_C, LevelReference) == 0x0005B8, "Member 'ABP_HousingPlotActor_C::LevelReference' has a wrong offset!");
static_assert(offsetof(ABP_HousingPlotActor_C, OnVisitorEntered) == 0x0005E0, "Member 'ABP_HousingPlotActor_C::OnVisitorEntered' has a wrong offset!");
static_assert(offsetof(ABP_HousingPlotActor_C, PivotInitialPosition) == 0x0005F0, "Member 'ABP_HousingPlotActor_C::PivotInitialPosition' has a wrong offset!");
static_assert(offsetof(ABP_HousingPlotActor_C, RotatingCW) == 0x000650, "Member 'ABP_HousingPlotActor_C::RotatingCW' has a wrong offset!");
static_assert(offsetof(ABP_HousingPlotActor_C, RotatingCCW) == 0x000651, "Member 'ABP_HousingPlotActor_C::RotatingCCW' has a wrong offset!");
static_assert(offsetof(ABP_HousingPlotActor_C, RotationTimer) == 0x000658, "Member 'ABP_HousingPlotActor_C::RotationTimer' has a wrong offset!");
static_assert(offsetof(ABP_HousingPlotActor_C, RotationEaseInCurve) == 0x000660, "Member 'ABP_HousingPlotActor_C::RotationEaseInCurve' has a wrong offset!");

}

