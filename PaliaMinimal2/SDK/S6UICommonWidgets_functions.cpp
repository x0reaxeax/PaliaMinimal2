#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: S6UICommonWidgets

#include "Basic.hpp"

#include "S6UICommonWidgets_classes.hpp"
#include "S6UICommonWidgets_parameters.hpp"


namespace SDK
{

// Function S6UICommonWidgets.S6UI_CommonButton_Styled.SetCommonButtonStyle
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TSubclassOf<class US6UI_CommonButtonStyle>InStyle                                                (Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void US6UI_CommonButton_Styled::SetCommonButtonStyle(TSubclassOf<class US6UI_CommonButtonStyle> InStyle)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("S6UI_CommonButton_Styled", "SetCommonButtonStyle");

	Params::S6UI_CommonButton_Styled_SetCommonButtonStyle Parms{};

	Parms.InStyle = InStyle;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function S6UICommonWidgets.S6UI_CommonButton_Styled.SetIsDropShadow
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bEnable                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void US6UI_CommonButton_Styled::SetIsDropShadow(bool bEnable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("S6UI_CommonButton_Styled", "SetIsDropShadow");

	Params::S6UI_CommonButton_Styled_SetIsDropShadow Parms{};

	Parms.bEnable = bEnable;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function S6UICommonWidgets.S6UI_CommonButton_Styled.ToggleRootButtonFocuseState
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bEnable                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void US6UI_CommonButton_Styled::ToggleRootButtonFocuseState(bool bEnable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("S6UI_CommonButton_Styled", "ToggleRootButtonFocuseState");

	Params::S6UI_CommonButton_Styled_ToggleRootButtonFocuseState Parms{};

	Parms.bEnable = bEnable;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function S6UICommonWidgets.S6UI_EditableRichText.ClearAllDefaultStyleOverrides
// (Final, Native, Public)

void US6UI_EditableRichText::ClearAllDefaultStyleOverrides()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("S6UI_EditableRichText", "ClearAllDefaultStyleOverrides");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function S6UICommonWidgets.S6UI_EditableRichText.CopySelectedTextToClipboard
// (Final, Native, Public, BlueprintCallable)

void US6UI_EditableRichText::CopySelectedTextToClipboard()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("S6UI_EditableRichText", "CopySelectedTextToClipboard");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function S6UICommonWidgets.S6UI_EditableRichText.CutSelectedTextToClipboard
// (Final, Native, Public, BlueprintCallable)

void US6UI_EditableRichText::CutSelectedTextToClipboard()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("S6UI_EditableRichText", "CutSelectedTextToClipboard");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function S6UICommonWidgets.S6UI_EditableRichText.DeleteSelectedText
// (Final, Native, Public, BlueprintCallable)

void US6UI_EditableRichText::DeleteSelectedText()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("S6UI_EditableRichText", "DeleteSelectedText");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function S6UICommonWidgets.S6UI_EditableRichText.GetDecoratorByClass
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TSubclassOf<class US6UI_EditableRichTextDecorator>DecoratorClass                                         (Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class US6UI_EditableRichTextDecorator*  ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class US6UI_EditableRichTextDecorator* US6UI_EditableRichText::GetDecoratorByClass(TSubclassOf<class US6UI_EditableRichTextDecorator> DecoratorClass)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("S6UI_EditableRichText", "GetDecoratorByClass");

	Params::S6UI_EditableRichText_GetDecoratorByClass Parms{};

	Parms.DecoratorClass = DecoratorClass;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function S6UICommonWidgets.S6UI_EditableRichText.InsertTextAtCursor
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class FText                             InText                                                 (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void US6UI_EditableRichText::InsertTextAtCursor(class FText& InText)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("S6UI_EditableRichText", "InsertTextAtCursor");

	Params::S6UI_EditableRichText_InsertTextAtCursor Parms{};

	Parms.InText = InText;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function S6UICommonWidgets.S6UI_EditableRichText.PasteTextFromClipboard
// (Final, Native, Public, BlueprintCallable)

void US6UI_EditableRichText::PasteTextFromClipboard()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("S6UI_EditableRichText", "PasteTextFromClipboard");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function S6UICommonWidgets.S6UI_EditableRichText.Redo
// (Final, Native, Public, BlueprintCallable)

void US6UI_EditableRichText::Redo()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("S6UI_EditableRichText", "Redo");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// DelegateFunction S6UICommonWidgets.S6UI_EditableRichText.S6UI_OnEditableTextChangedEvent__DelegateSignature
// (MulticastDelegate, Public, Delegate, HasOutParams)
// Parameters:
// class FText                             Param_Text                                             (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void US6UI_EditableRichText::S6UI_OnEditableTextChangedEvent__DelegateSignature(class FText& Param_Text)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("S6UI_EditableRichText", "S6UI_OnEditableTextChangedEvent__DelegateSignature");

	Params::S6UI_EditableRichText_S6UI_OnEditableTextChangedEvent__DelegateSignature Parms{};

	Parms.Param_Text = Param_Text;

	UObject::ProcessEvent(Func, &Parms);
}


// DelegateFunction S6UICommonWidgets.S6UI_EditableRichText.S6UI_OnEditableTextCommittedEvent__DelegateSignature
// (MulticastDelegate, Public, Delegate, HasOutParams)
// Parameters:
// class FText                             Param_Text                                             (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// ETextCommit                             CommitMethod                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void US6UI_EditableRichText::S6UI_OnEditableTextCommittedEvent__DelegateSignature(class FText& Param_Text, ETextCommit CommitMethod)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("S6UI_EditableRichText", "S6UI_OnEditableTextCommittedEvent__DelegateSignature");

	Params::S6UI_EditableRichText_S6UI_OnEditableTextCommittedEvent__DelegateSignature Parms{};

	Parms.Param_Text = Param_Text;
	Parms.CommitMethod = CommitMethod;

	UObject::ProcessEvent(Func, &Parms);
}


// Function S6UICommonWidgets.S6UI_EditableRichText.SelectAllText
// (Final, Native, Public, BlueprintCallable)

void US6UI_EditableRichText::SelectAllText()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("S6UI_EditableRichText", "SelectAllText");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function S6UICommonWidgets.S6UI_EditableRichText.SetDefaultBackgroundImageComposing
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FSlateBrush                      InBackgroundImageComposing                             (Parm, NativeAccessSpecifierPublic)

void US6UI_EditableRichText::SetDefaultBackgroundImageComposing(const struct FSlateBrush& InBackgroundImageComposing)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("S6UI_EditableRichText", "SetDefaultBackgroundImageComposing");

	Params::S6UI_EditableRichText_SetDefaultBackgroundImageComposing Parms{};

	Parms.InBackgroundImageComposing = std::move(InBackgroundImageComposing);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function S6UICommonWidgets.S6UI_EditableRichText.SetDefaultBackgroundImageSelected
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FSlateBrush                      InBackgroundImageSelected                              (Parm, NativeAccessSpecifierPublic)

void US6UI_EditableRichText::SetDefaultBackgroundImageSelected(const struct FSlateBrush& InBackgroundImageSelected)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("S6UI_EditableRichText", "SetDefaultBackgroundImageSelected");

	Params::S6UI_EditableRichText_SetDefaultBackgroundImageSelected Parms{};

	Parms.InBackgroundImageSelected = std::move(InBackgroundImageSelected);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function S6UICommonWidgets.S6UI_EditableRichText.SetDefaultCaretImage
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FSlateBrush                      InCaretImage                                           (Parm, NativeAccessSpecifierPublic)

void US6UI_EditableRichText::SetDefaultCaretImage(const struct FSlateBrush& InCaretImage)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("S6UI_EditableRichText", "SetDefaultCaretImage");

	Params::S6UI_EditableRichText_SetDefaultCaretImage Parms{};

	Parms.InCaretImage = std::move(InCaretImage);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function S6UICommonWidgets.S6UI_EditableRichText.SetDefaultColorAndOpacity
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FSlateColor                      InColorAndOpacity                                      (Parm, NativeAccessSpecifierPublic)

void US6UI_EditableRichText::SetDefaultColorAndOpacity(const struct FSlateColor& InColorAndOpacity)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("S6UI_EditableRichText", "SetDefaultColorAndOpacity");

	Params::S6UI_EditableRichText_SetDefaultColorAndOpacity Parms{};

	Parms.InColorAndOpacity = std::move(InColorAndOpacity);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function S6UICommonWidgets.S6UI_EditableRichText.SetDefaultFont
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FSlateFontInfo                   InFontInfo                                             (Parm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void US6UI_EditableRichText::SetDefaultFont(const struct FSlateFontInfo& InFontInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("S6UI_EditableRichText", "SetDefaultFont");

	Params::S6UI_EditableRichText_SetDefaultFont Parms{};

	Parms.InFontInfo = std::move(InFontInfo);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function S6UICommonWidgets.S6UI_EditableRichText.SetDefaultTextStyle
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FEditableTextStyle               InDefaultTextStyle                                     (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void US6UI_EditableRichText::SetDefaultTextStyle(struct FEditableTextStyle& InDefaultTextStyle)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("S6UI_EditableRichText", "SetDefaultTextStyle");

	Params::S6UI_EditableRichText_SetDefaultTextStyle Parms{};

	Parms.InDefaultTextStyle = std::move(InDefaultTextStyle);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function S6UICommonWidgets.S6UI_EditableRichText.SetHintText
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FText                             InHintText                                             (Parm, NativeAccessSpecifierPublic)

void US6UI_EditableRichText::SetHintText(class FText InHintText)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("S6UI_EditableRichText", "SetHintText");

	Params::S6UI_EditableRichText_SetHintText Parms{};

	Parms.InHintText = InHintText;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function S6UICommonWidgets.S6UI_EditableRichText.SetIsReadOnly
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    InbIsReadyOnly                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void US6UI_EditableRichText::SetIsReadOnly(bool InbIsReadyOnly)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("S6UI_EditableRichText", "SetIsReadOnly");

	Params::S6UI_EditableRichText_SetIsReadOnly Parms{};

	Parms.InbIsReadyOnly = InbIsReadyOnly;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function S6UICommonWidgets.S6UI_EditableRichText.SetJustification
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// ETextJustify                            InJustification                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void US6UI_EditableRichText::SetJustification(ETextJustify InJustification)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("S6UI_EditableRichText", "SetJustification");

	Params::S6UI_EditableRichText_SetJustification Parms{};

	Parms.InJustification = InJustification;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function S6UICommonWidgets.S6UI_EditableRichText.SetText
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FText                             InText                                                 (Parm, NativeAccessSpecifierPublic)

void US6UI_EditableRichText::SetText(class FText InText)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("S6UI_EditableRichText", "SetText");

	Params::S6UI_EditableRichText_SetText Parms{};

	Parms.InText = InText;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function S6UICommonWidgets.S6UI_EditableRichText.SetTextStyleSet
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UDataTable*                       NewTextStyleSet                                        (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void US6UI_EditableRichText::SetTextStyleSet(class UDataTable* NewTextStyleSet)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("S6UI_EditableRichText", "SetTextStyleSet");

	Params::S6UI_EditableRichText_SetTextStyleSet Parms{};

	Parms.NewTextStyleSet = NewTextStyleSet;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function S6UICommonWidgets.S6UI_EditableRichText.Undo
// (Final, Native, Public, BlueprintCallable)

void US6UI_EditableRichText::Undo()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("S6UI_EditableRichText", "Undo");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function S6UICommonWidgets.S6UI_EditableRichText.AnyTextSelected
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool US6UI_EditableRichText::AnyTextSelected() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("S6UI_EditableRichText", "AnyTextSelected");

	Params::S6UI_EditableRichText_AnyTextSelected Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function S6UICommonWidgets.S6UI_EditableRichText.GetPlainText
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

class FText US6UI_EditableRichText::GetPlainText() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("S6UI_EditableRichText", "GetPlainText");

	Params::S6UI_EditableRichText_GetPlainText Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function S6UICommonWidgets.S6UI_EditableRichText.GetSelectedText
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

class FText US6UI_EditableRichText::GetSelectedText() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("S6UI_EditableRichText", "GetSelectedText");

	Params::S6UI_EditableRichText_GetSelectedText Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function S6UICommonWidgets.S6UI_EditableRichText.GetText
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

class FText US6UI_EditableRichText::GetText() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("S6UI_EditableRichText", "GetText");

	Params::S6UI_EditableRichText_GetText Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function S6UICommonWidgets.S6UI_GridPanel.ClearFill
// (Final, Native, Public, BlueprintCallable)

void US6UI_GridPanel::ClearFill()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("S6UI_GridPanel", "ClearFill");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function S6UICommonWidgets.S6UI_OverlaySwitcher.AddChildToOverlaySwitcher
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UWidget*                          Content                                                (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class US6UI_OverlaySwitcherSlot*        ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class US6UI_OverlaySwitcherSlot* US6UI_OverlaySwitcher::AddChildToOverlaySwitcher(class UWidget* Content)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("S6UI_OverlaySwitcher", "AddChildToOverlaySwitcher");

	Params::S6UI_OverlaySwitcher_AddChildToOverlaySwitcher Parms{};

	Parms.Content = Content;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function S6UICommonWidgets.S6UI_OverlaySwitcher.SetActiveWidget
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UWidget*                          Widget                                                 (ConstParm, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void US6UI_OverlaySwitcher::SetActiveWidget(class UWidget* Widget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("S6UI_OverlaySwitcher", "SetActiveWidget");

	Params::S6UI_OverlaySwitcher_SetActiveWidget Parms{};

	Parms.Widget = Widget;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function S6UICommonWidgets.S6UI_OverlaySwitcher.SetActiveWidgetIndex
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   Param_Index                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void US6UI_OverlaySwitcher::SetActiveWidgetIndex(int32 Param_Index)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("S6UI_OverlaySwitcher", "SetActiveWidgetIndex");

	Params::S6UI_OverlaySwitcher_SetActiveWidgetIndex Parms{};

	Parms.Param_Index = Param_Index;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function S6UICommonWidgets.S6UI_OverlaySwitcher.GetActiveWidget
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UWidget*                          ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UWidget* US6UI_OverlaySwitcher::GetActiveWidget() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("S6UI_OverlaySwitcher", "GetActiveWidget");

	Params::S6UI_OverlaySwitcher_GetActiveWidget Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function S6UICommonWidgets.S6UI_OverlaySwitcher.GetActiveWidgetIndex
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 US6UI_OverlaySwitcher::GetActiveWidgetIndex() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("S6UI_OverlaySwitcher", "GetActiveWidgetIndex");

	Params::S6UI_OverlaySwitcher_GetActiveWidgetIndex Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}

}

