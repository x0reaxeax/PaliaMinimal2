#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: S6UICommonWidgets

#include "Basic.hpp"

#include "Slate_structs.hpp"
#include "SlateCore_structs.hpp"


namespace SDK::Params
{

// Function S6UICommonWidgets.S6UI_CommonButton_Styled.SetCommonButtonStyle
// 0x0008 (0x0008 - 0x0000)
struct S6UI_CommonButton_Styled_SetCommonButtonStyle final
{
public:
	TSubclassOf<class US6UI_CommonButtonStyle>    InStyle;                                           // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(S6UI_CommonButton_Styled_SetCommonButtonStyle) == 0x000008, "Wrong alignment on S6UI_CommonButton_Styled_SetCommonButtonStyle");
static_assert(sizeof(S6UI_CommonButton_Styled_SetCommonButtonStyle) == 0x000008, "Wrong size on S6UI_CommonButton_Styled_SetCommonButtonStyle");
static_assert(offsetof(S6UI_CommonButton_Styled_SetCommonButtonStyle, InStyle) == 0x000000, "Member 'S6UI_CommonButton_Styled_SetCommonButtonStyle::InStyle' has a wrong offset!");

// Function S6UICommonWidgets.S6UI_CommonButton_Styled.SetIsDropShadow
// 0x0001 (0x0001 - 0x0000)
struct S6UI_CommonButton_Styled_SetIsDropShadow final
{
public:
	bool                                          bEnable;                                           // 0x0000(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(S6UI_CommonButton_Styled_SetIsDropShadow) == 0x000001, "Wrong alignment on S6UI_CommonButton_Styled_SetIsDropShadow");
static_assert(sizeof(S6UI_CommonButton_Styled_SetIsDropShadow) == 0x000001, "Wrong size on S6UI_CommonButton_Styled_SetIsDropShadow");
static_assert(offsetof(S6UI_CommonButton_Styled_SetIsDropShadow, bEnable) == 0x000000, "Member 'S6UI_CommonButton_Styled_SetIsDropShadow::bEnable' has a wrong offset!");

// Function S6UICommonWidgets.S6UI_CommonButton_Styled.ToggleRootButtonFocuseState
// 0x0001 (0x0001 - 0x0000)
struct S6UI_CommonButton_Styled_ToggleRootButtonFocuseState final
{
public:
	bool                                          bEnable;                                           // 0x0000(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(S6UI_CommonButton_Styled_ToggleRootButtonFocuseState) == 0x000001, "Wrong alignment on S6UI_CommonButton_Styled_ToggleRootButtonFocuseState");
static_assert(sizeof(S6UI_CommonButton_Styled_ToggleRootButtonFocuseState) == 0x000001, "Wrong size on S6UI_CommonButton_Styled_ToggleRootButtonFocuseState");
static_assert(offsetof(S6UI_CommonButton_Styled_ToggleRootButtonFocuseState, bEnable) == 0x000000, "Member 'S6UI_CommonButton_Styled_ToggleRootButtonFocuseState::bEnable' has a wrong offset!");

// Function S6UICommonWidgets.S6UI_EditableRichText.GetDecoratorByClass
// 0x0010 (0x0010 - 0x0000)
struct S6UI_EditableRichText_GetDecoratorByClass final
{
public:
	TSubclassOf<class US6UI_EditableRichTextDecorator> DecoratorClass;                                    // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class US6UI_EditableRichTextDecorator*        ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(S6UI_EditableRichText_GetDecoratorByClass) == 0x000008, "Wrong alignment on S6UI_EditableRichText_GetDecoratorByClass");
static_assert(sizeof(S6UI_EditableRichText_GetDecoratorByClass) == 0x000010, "Wrong size on S6UI_EditableRichText_GetDecoratorByClass");
static_assert(offsetof(S6UI_EditableRichText_GetDecoratorByClass, DecoratorClass) == 0x000000, "Member 'S6UI_EditableRichText_GetDecoratorByClass::DecoratorClass' has a wrong offset!");
static_assert(offsetof(S6UI_EditableRichText_GetDecoratorByClass, ReturnValue) == 0x000008, "Member 'S6UI_EditableRichText_GetDecoratorByClass::ReturnValue' has a wrong offset!");

// Function S6UICommonWidgets.S6UI_EditableRichText.InsertTextAtCursor
// 0x0018 (0x0018 - 0x0000)
struct S6UI_EditableRichText_InsertTextAtCursor final
{
public:
	class FText                                   InText;                                            // 0x0000(0x0018)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(S6UI_EditableRichText_InsertTextAtCursor) == 0x000008, "Wrong alignment on S6UI_EditableRichText_InsertTextAtCursor");
static_assert(sizeof(S6UI_EditableRichText_InsertTextAtCursor) == 0x000018, "Wrong size on S6UI_EditableRichText_InsertTextAtCursor");
static_assert(offsetof(S6UI_EditableRichText_InsertTextAtCursor, InText) == 0x000000, "Member 'S6UI_EditableRichText_InsertTextAtCursor::InText' has a wrong offset!");

// DelegateFunction S6UICommonWidgets.S6UI_EditableRichText.S6UI_OnEditableTextChangedEvent__DelegateSignature
// 0x0018 (0x0018 - 0x0000)
struct S6UI_EditableRichText_S6UI_OnEditableTextChangedEvent__DelegateSignature final
{
public:
	class FText                                   Param_Text;                                        // 0x0000(0x0018)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(S6UI_EditableRichText_S6UI_OnEditableTextChangedEvent__DelegateSignature) == 0x000008, "Wrong alignment on S6UI_EditableRichText_S6UI_OnEditableTextChangedEvent__DelegateSignature");
static_assert(sizeof(S6UI_EditableRichText_S6UI_OnEditableTextChangedEvent__DelegateSignature) == 0x000018, "Wrong size on S6UI_EditableRichText_S6UI_OnEditableTextChangedEvent__DelegateSignature");
static_assert(offsetof(S6UI_EditableRichText_S6UI_OnEditableTextChangedEvent__DelegateSignature, Param_Text) == 0x000000, "Member 'S6UI_EditableRichText_S6UI_OnEditableTextChangedEvent__DelegateSignature::Param_Text' has a wrong offset!");

// DelegateFunction S6UICommonWidgets.S6UI_EditableRichText.S6UI_OnEditableTextCommittedEvent__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct S6UI_EditableRichText_S6UI_OnEditableTextCommittedEvent__DelegateSignature final
{
public:
	class FText                                   Param_Text;                                        // 0x0000(0x0018)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	ETextCommit                                   CommitMethod;                                      // 0x0018(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2CA9[0x7];                                     // 0x0019(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(S6UI_EditableRichText_S6UI_OnEditableTextCommittedEvent__DelegateSignature) == 0x000008, "Wrong alignment on S6UI_EditableRichText_S6UI_OnEditableTextCommittedEvent__DelegateSignature");
static_assert(sizeof(S6UI_EditableRichText_S6UI_OnEditableTextCommittedEvent__DelegateSignature) == 0x000020, "Wrong size on S6UI_EditableRichText_S6UI_OnEditableTextCommittedEvent__DelegateSignature");
static_assert(offsetof(S6UI_EditableRichText_S6UI_OnEditableTextCommittedEvent__DelegateSignature, Param_Text) == 0x000000, "Member 'S6UI_EditableRichText_S6UI_OnEditableTextCommittedEvent__DelegateSignature::Param_Text' has a wrong offset!");
static_assert(offsetof(S6UI_EditableRichText_S6UI_OnEditableTextCommittedEvent__DelegateSignature, CommitMethod) == 0x000018, "Member 'S6UI_EditableRichText_S6UI_OnEditableTextCommittedEvent__DelegateSignature::CommitMethod' has a wrong offset!");

// Function S6UICommonWidgets.S6UI_EditableRichText.SetDefaultBackgroundImageComposing
// 0x00D0 (0x00D0 - 0x0000)
struct S6UI_EditableRichText_SetDefaultBackgroundImageComposing final
{
public:
	struct FSlateBrush                            InBackgroundImageComposing;                        // 0x0000(0x00D0)(Parm, NativeAccessSpecifierPublic)
};
static_assert(alignof(S6UI_EditableRichText_SetDefaultBackgroundImageComposing) == 0x000010, "Wrong alignment on S6UI_EditableRichText_SetDefaultBackgroundImageComposing");
static_assert(sizeof(S6UI_EditableRichText_SetDefaultBackgroundImageComposing) == 0x0000D0, "Wrong size on S6UI_EditableRichText_SetDefaultBackgroundImageComposing");
static_assert(offsetof(S6UI_EditableRichText_SetDefaultBackgroundImageComposing, InBackgroundImageComposing) == 0x000000, "Member 'S6UI_EditableRichText_SetDefaultBackgroundImageComposing::InBackgroundImageComposing' has a wrong offset!");

// Function S6UICommonWidgets.S6UI_EditableRichText.SetDefaultBackgroundImageSelected
// 0x00D0 (0x00D0 - 0x0000)
struct S6UI_EditableRichText_SetDefaultBackgroundImageSelected final
{
public:
	struct FSlateBrush                            InBackgroundImageSelected;                         // 0x0000(0x00D0)(Parm, NativeAccessSpecifierPublic)
};
static_assert(alignof(S6UI_EditableRichText_SetDefaultBackgroundImageSelected) == 0x000010, "Wrong alignment on S6UI_EditableRichText_SetDefaultBackgroundImageSelected");
static_assert(sizeof(S6UI_EditableRichText_SetDefaultBackgroundImageSelected) == 0x0000D0, "Wrong size on S6UI_EditableRichText_SetDefaultBackgroundImageSelected");
static_assert(offsetof(S6UI_EditableRichText_SetDefaultBackgroundImageSelected, InBackgroundImageSelected) == 0x000000, "Member 'S6UI_EditableRichText_SetDefaultBackgroundImageSelected::InBackgroundImageSelected' has a wrong offset!");

// Function S6UICommonWidgets.S6UI_EditableRichText.SetDefaultCaretImage
// 0x00D0 (0x00D0 - 0x0000)
struct S6UI_EditableRichText_SetDefaultCaretImage final
{
public:
	struct FSlateBrush                            InCaretImage;                                      // 0x0000(0x00D0)(Parm, NativeAccessSpecifierPublic)
};
static_assert(alignof(S6UI_EditableRichText_SetDefaultCaretImage) == 0x000010, "Wrong alignment on S6UI_EditableRichText_SetDefaultCaretImage");
static_assert(sizeof(S6UI_EditableRichText_SetDefaultCaretImage) == 0x0000D0, "Wrong size on S6UI_EditableRichText_SetDefaultCaretImage");
static_assert(offsetof(S6UI_EditableRichText_SetDefaultCaretImage, InCaretImage) == 0x000000, "Member 'S6UI_EditableRichText_SetDefaultCaretImage::InCaretImage' has a wrong offset!");

// Function S6UICommonWidgets.S6UI_EditableRichText.SetDefaultColorAndOpacity
// 0x0014 (0x0014 - 0x0000)
struct S6UI_EditableRichText_SetDefaultColorAndOpacity final
{
public:
	struct FSlateColor                            InColorAndOpacity;                                 // 0x0000(0x0014)(Parm, NativeAccessSpecifierPublic)
};
static_assert(alignof(S6UI_EditableRichText_SetDefaultColorAndOpacity) == 0x000004, "Wrong alignment on S6UI_EditableRichText_SetDefaultColorAndOpacity");
static_assert(sizeof(S6UI_EditableRichText_SetDefaultColorAndOpacity) == 0x000014, "Wrong size on S6UI_EditableRichText_SetDefaultColorAndOpacity");
static_assert(offsetof(S6UI_EditableRichText_SetDefaultColorAndOpacity, InColorAndOpacity) == 0x000000, "Member 'S6UI_EditableRichText_SetDefaultColorAndOpacity::InColorAndOpacity' has a wrong offset!");

// Function S6UICommonWidgets.S6UI_EditableRichText.SetDefaultFont
// 0x0058 (0x0058 - 0x0000)
struct S6UI_EditableRichText_SetDefaultFont final
{
public:
	struct FSlateFontInfo                         InFontInfo;                                        // 0x0000(0x0058)(Parm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(S6UI_EditableRichText_SetDefaultFont) == 0x000008, "Wrong alignment on S6UI_EditableRichText_SetDefaultFont");
static_assert(sizeof(S6UI_EditableRichText_SetDefaultFont) == 0x000058, "Wrong size on S6UI_EditableRichText_SetDefaultFont");
static_assert(offsetof(S6UI_EditableRichText_SetDefaultFont, InFontInfo) == 0x000000, "Member 'S6UI_EditableRichText_SetDefaultFont::InFontInfo' has a wrong offset!");

// Function S6UICommonWidgets.S6UI_EditableRichText.SetDefaultTextStyle
// 0x02F0 (0x02F0 - 0x0000)
struct S6UI_EditableRichText_SetDefaultTextStyle final
{
public:
	struct FEditableTextStyle                     InDefaultTextStyle;                                // 0x0000(0x02F0)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(S6UI_EditableRichText_SetDefaultTextStyle) == 0x000010, "Wrong alignment on S6UI_EditableRichText_SetDefaultTextStyle");
static_assert(sizeof(S6UI_EditableRichText_SetDefaultTextStyle) == 0x0002F0, "Wrong size on S6UI_EditableRichText_SetDefaultTextStyle");
static_assert(offsetof(S6UI_EditableRichText_SetDefaultTextStyle, InDefaultTextStyle) == 0x000000, "Member 'S6UI_EditableRichText_SetDefaultTextStyle::InDefaultTextStyle' has a wrong offset!");

// Function S6UICommonWidgets.S6UI_EditableRichText.SetHintText
// 0x0018 (0x0018 - 0x0000)
struct S6UI_EditableRichText_SetHintText final
{
public:
	class FText                                   InHintText;                                        // 0x0000(0x0018)(Parm, NativeAccessSpecifierPublic)
};
static_assert(alignof(S6UI_EditableRichText_SetHintText) == 0x000008, "Wrong alignment on S6UI_EditableRichText_SetHintText");
static_assert(sizeof(S6UI_EditableRichText_SetHintText) == 0x000018, "Wrong size on S6UI_EditableRichText_SetHintText");
static_assert(offsetof(S6UI_EditableRichText_SetHintText, InHintText) == 0x000000, "Member 'S6UI_EditableRichText_SetHintText::InHintText' has a wrong offset!");

// Function S6UICommonWidgets.S6UI_EditableRichText.SetIsReadOnly
// 0x0001 (0x0001 - 0x0000)
struct S6UI_EditableRichText_SetIsReadOnly final
{
public:
	bool                                          InbIsReadyOnly;                                    // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(S6UI_EditableRichText_SetIsReadOnly) == 0x000001, "Wrong alignment on S6UI_EditableRichText_SetIsReadOnly");
static_assert(sizeof(S6UI_EditableRichText_SetIsReadOnly) == 0x000001, "Wrong size on S6UI_EditableRichText_SetIsReadOnly");
static_assert(offsetof(S6UI_EditableRichText_SetIsReadOnly, InbIsReadyOnly) == 0x000000, "Member 'S6UI_EditableRichText_SetIsReadOnly::InbIsReadyOnly' has a wrong offset!");

// Function S6UICommonWidgets.S6UI_EditableRichText.SetJustification
// 0x0001 (0x0001 - 0x0000)
struct S6UI_EditableRichText_SetJustification final
{
public:
	ETextJustify                                  InJustification;                                   // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(S6UI_EditableRichText_SetJustification) == 0x000001, "Wrong alignment on S6UI_EditableRichText_SetJustification");
static_assert(sizeof(S6UI_EditableRichText_SetJustification) == 0x000001, "Wrong size on S6UI_EditableRichText_SetJustification");
static_assert(offsetof(S6UI_EditableRichText_SetJustification, InJustification) == 0x000000, "Member 'S6UI_EditableRichText_SetJustification::InJustification' has a wrong offset!");

// Function S6UICommonWidgets.S6UI_EditableRichText.SetText
// 0x0018 (0x0018 - 0x0000)
struct S6UI_EditableRichText_SetText final
{
public:
	class FText                                   InText;                                            // 0x0000(0x0018)(Parm, NativeAccessSpecifierPublic)
};
static_assert(alignof(S6UI_EditableRichText_SetText) == 0x000008, "Wrong alignment on S6UI_EditableRichText_SetText");
static_assert(sizeof(S6UI_EditableRichText_SetText) == 0x000018, "Wrong size on S6UI_EditableRichText_SetText");
static_assert(offsetof(S6UI_EditableRichText_SetText, InText) == 0x000000, "Member 'S6UI_EditableRichText_SetText::InText' has a wrong offset!");

// Function S6UICommonWidgets.S6UI_EditableRichText.SetTextStyleSet
// 0x0008 (0x0008 - 0x0000)
struct S6UI_EditableRichText_SetTextStyleSet final
{
public:
	class UDataTable*                             NewTextStyleSet;                                   // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(S6UI_EditableRichText_SetTextStyleSet) == 0x000008, "Wrong alignment on S6UI_EditableRichText_SetTextStyleSet");
static_assert(sizeof(S6UI_EditableRichText_SetTextStyleSet) == 0x000008, "Wrong size on S6UI_EditableRichText_SetTextStyleSet");
static_assert(offsetof(S6UI_EditableRichText_SetTextStyleSet, NewTextStyleSet) == 0x000000, "Member 'S6UI_EditableRichText_SetTextStyleSet::NewTextStyleSet' has a wrong offset!");

// Function S6UICommonWidgets.S6UI_EditableRichText.AnyTextSelected
// 0x0001 (0x0001 - 0x0000)
struct S6UI_EditableRichText_AnyTextSelected final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(S6UI_EditableRichText_AnyTextSelected) == 0x000001, "Wrong alignment on S6UI_EditableRichText_AnyTextSelected");
static_assert(sizeof(S6UI_EditableRichText_AnyTextSelected) == 0x000001, "Wrong size on S6UI_EditableRichText_AnyTextSelected");
static_assert(offsetof(S6UI_EditableRichText_AnyTextSelected, ReturnValue) == 0x000000, "Member 'S6UI_EditableRichText_AnyTextSelected::ReturnValue' has a wrong offset!");

// Function S6UICommonWidgets.S6UI_EditableRichText.GetPlainText
// 0x0018 (0x0018 - 0x0000)
struct S6UI_EditableRichText_GetPlainText final
{
public:
	class FText                                   ReturnValue;                                       // 0x0000(0x0018)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(S6UI_EditableRichText_GetPlainText) == 0x000008, "Wrong alignment on S6UI_EditableRichText_GetPlainText");
static_assert(sizeof(S6UI_EditableRichText_GetPlainText) == 0x000018, "Wrong size on S6UI_EditableRichText_GetPlainText");
static_assert(offsetof(S6UI_EditableRichText_GetPlainText, ReturnValue) == 0x000000, "Member 'S6UI_EditableRichText_GetPlainText::ReturnValue' has a wrong offset!");

// Function S6UICommonWidgets.S6UI_EditableRichText.GetSelectedText
// 0x0018 (0x0018 - 0x0000)
struct S6UI_EditableRichText_GetSelectedText final
{
public:
	class FText                                   ReturnValue;                                       // 0x0000(0x0018)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(S6UI_EditableRichText_GetSelectedText) == 0x000008, "Wrong alignment on S6UI_EditableRichText_GetSelectedText");
static_assert(sizeof(S6UI_EditableRichText_GetSelectedText) == 0x000018, "Wrong size on S6UI_EditableRichText_GetSelectedText");
static_assert(offsetof(S6UI_EditableRichText_GetSelectedText, ReturnValue) == 0x000000, "Member 'S6UI_EditableRichText_GetSelectedText::ReturnValue' has a wrong offset!");

// Function S6UICommonWidgets.S6UI_EditableRichText.GetText
// 0x0018 (0x0018 - 0x0000)
struct S6UI_EditableRichText_GetText final
{
public:
	class FText                                   ReturnValue;                                       // 0x0000(0x0018)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(S6UI_EditableRichText_GetText) == 0x000008, "Wrong alignment on S6UI_EditableRichText_GetText");
static_assert(sizeof(S6UI_EditableRichText_GetText) == 0x000018, "Wrong size on S6UI_EditableRichText_GetText");
static_assert(offsetof(S6UI_EditableRichText_GetText, ReturnValue) == 0x000000, "Member 'S6UI_EditableRichText_GetText::ReturnValue' has a wrong offset!");

// Function S6UICommonWidgets.S6UI_OverlaySwitcher.AddChildToOverlaySwitcher
// 0x0010 (0x0010 - 0x0000)
struct S6UI_OverlaySwitcher_AddChildToOverlaySwitcher final
{
public:
	class UWidget*                                Content;                                           // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class US6UI_OverlaySwitcherSlot*              ReturnValue;                                       // 0x0008(0x0008)(ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(S6UI_OverlaySwitcher_AddChildToOverlaySwitcher) == 0x000008, "Wrong alignment on S6UI_OverlaySwitcher_AddChildToOverlaySwitcher");
static_assert(sizeof(S6UI_OverlaySwitcher_AddChildToOverlaySwitcher) == 0x000010, "Wrong size on S6UI_OverlaySwitcher_AddChildToOverlaySwitcher");
static_assert(offsetof(S6UI_OverlaySwitcher_AddChildToOverlaySwitcher, Content) == 0x000000, "Member 'S6UI_OverlaySwitcher_AddChildToOverlaySwitcher::Content' has a wrong offset!");
static_assert(offsetof(S6UI_OverlaySwitcher_AddChildToOverlaySwitcher, ReturnValue) == 0x000008, "Member 'S6UI_OverlaySwitcher_AddChildToOverlaySwitcher::ReturnValue' has a wrong offset!");

// Function S6UICommonWidgets.S6UI_OverlaySwitcher.SetActiveWidget
// 0x0008 (0x0008 - 0x0000)
struct S6UI_OverlaySwitcher_SetActiveWidget final
{
public:
	const class UWidget*                          Widget;                                            // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(S6UI_OverlaySwitcher_SetActiveWidget) == 0x000008, "Wrong alignment on S6UI_OverlaySwitcher_SetActiveWidget");
static_assert(sizeof(S6UI_OverlaySwitcher_SetActiveWidget) == 0x000008, "Wrong size on S6UI_OverlaySwitcher_SetActiveWidget");
static_assert(offsetof(S6UI_OverlaySwitcher_SetActiveWidget, Widget) == 0x000000, "Member 'S6UI_OverlaySwitcher_SetActiveWidget::Widget' has a wrong offset!");

// Function S6UICommonWidgets.S6UI_OverlaySwitcher.SetActiveWidgetIndex
// 0x0004 (0x0004 - 0x0000)
struct S6UI_OverlaySwitcher_SetActiveWidgetIndex final
{
public:
	int32                                         Param_Index;                                       // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(S6UI_OverlaySwitcher_SetActiveWidgetIndex) == 0x000004, "Wrong alignment on S6UI_OverlaySwitcher_SetActiveWidgetIndex");
static_assert(sizeof(S6UI_OverlaySwitcher_SetActiveWidgetIndex) == 0x000004, "Wrong size on S6UI_OverlaySwitcher_SetActiveWidgetIndex");
static_assert(offsetof(S6UI_OverlaySwitcher_SetActiveWidgetIndex, Param_Index) == 0x000000, "Member 'S6UI_OverlaySwitcher_SetActiveWidgetIndex::Param_Index' has a wrong offset!");

// Function S6UICommonWidgets.S6UI_OverlaySwitcher.GetActiveWidget
// 0x0008 (0x0008 - 0x0000)
struct S6UI_OverlaySwitcher_GetActiveWidget final
{
public:
	class UWidget*                                ReturnValue;                                       // 0x0000(0x0008)(ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(S6UI_OverlaySwitcher_GetActiveWidget) == 0x000008, "Wrong alignment on S6UI_OverlaySwitcher_GetActiveWidget");
static_assert(sizeof(S6UI_OverlaySwitcher_GetActiveWidget) == 0x000008, "Wrong size on S6UI_OverlaySwitcher_GetActiveWidget");
static_assert(offsetof(S6UI_OverlaySwitcher_GetActiveWidget, ReturnValue) == 0x000000, "Member 'S6UI_OverlaySwitcher_GetActiveWidget::ReturnValue' has a wrong offset!");

// Function S6UICommonWidgets.S6UI_OverlaySwitcher.GetActiveWidgetIndex
// 0x0004 (0x0004 - 0x0000)
struct S6UI_OverlaySwitcher_GetActiveWidgetIndex final
{
public:
	int32                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(S6UI_OverlaySwitcher_GetActiveWidgetIndex) == 0x000004, "Wrong alignment on S6UI_OverlaySwitcher_GetActiveWidgetIndex");
static_assert(sizeof(S6UI_OverlaySwitcher_GetActiveWidgetIndex) == 0x000004, "Wrong size on S6UI_OverlaySwitcher_GetActiveWidgetIndex");
static_assert(offsetof(S6UI_OverlaySwitcher_GetActiveWidgetIndex, ReturnValue) == 0x000000, "Member 'S6UI_OverlaySwitcher_GetActiveWidgetIndex::ReturnValue' has a wrong offset!");

}

