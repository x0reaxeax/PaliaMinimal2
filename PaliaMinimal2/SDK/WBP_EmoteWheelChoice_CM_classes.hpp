#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_EmoteWheelChoice_CM

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "UMG_structs.hpp"
#include "UMG_classes.hpp"
#include "Palia_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_EmoteWheelChoice_CM.WBP_EmoteWheelChoice_CM_C
// 0x0168 (0x0428 - 0x02C0)
class UWBP_EmoteWheelChoice_CM_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02C0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       HoverAnim;                                         // 0x02C8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWBP_EmoteSelectedTip_CM_C*             Emote_Selected_Tip;                                // 0x02D0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_Icon;                                        // 0x02D8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_Tile_Default;                                // 0x02E0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_Tile_Empty;                                  // 0x02E8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_Tile_Hovered;                                // 0x02F0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_Tile_Selected;                               // 0x02F8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWidgetSwitcher*                        Switcher_Tile;                                     // 0x0300(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UVALUI_UButton_Styled*                  TileButton;                                        // 0x0308(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	bool                                          bHovered;                                          // 0x0310(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_464B[0x3];                                     // 0x0311(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         EmoteIndex;                                        // 0x0314(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	struct FGuid                                  EmoteId;                                           // 0x0318(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	class UWBP_EmoteDrag_C*                       DraggedWidget;                                     // 0x0328(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UObject*                                EmoteCollection;                                   // 0x0330(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	bool                                          IsSelected;                                        // 0x0338(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_464C[0x7];                                     // 0x0339(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEventReply                            NULLL;                                             // 0x0340(0x00B8)(Edit, BlueprintVisible, DisableEditOnInstance)
	FMulticastInlineDelegateProperty_             OnEmoteWheelChoiceFocused;                         // 0x03F8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	class UWBP_EmoteCollection_Circular_C*        EmoteCircularCollection;                           // 0x0408(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	float                                         Default_Render_Opacity;                            // 0x0410(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_464D[0x4];                                     // 0x0414(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              DefaultTransform_Scale;                            // 0x0418(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void BndEvt__WBP_EmoteWheelChoice_TileButton_K2Node_ComponentBoundEvent_0_OnButtonSimpleEvent__DelegateSignature();
	void BndEvt__WBP_EmoteWheelChoice_TileButton_K2Node_ComponentBoundEvent_0_VButtonMouseEvent__DelegateSignature(const struct FGeometry& InGeometry, struct FPointerEvent& InMouseEvent);
	void BndEvt__WBP_EmoteWheelChoice_TileButton_K2Node_ComponentBoundEvent_2_OnButtonSimpleEvent__DelegateSignature();
	void ClearSelected();
	void Construct();
	void EventUpdate();
	void ExchangeEmote(class UWBP_EmoteWheelChoice_CM_C* Exchanged_Wheel_Choice, const struct FGuid& Old_Emote_ID, const struct FGuid& CallFunc_GetAssignedEmoteId_Emote_Id, const struct FGuid& CallFunc_GetAssignedEmoteId_Emote_Id_1);
	void ExecuteUbergraph_WBP_EmoteWheelChoice_CM(int32 EntryPoint, bool CallFunc_IsValid_ReturnValue, TDelegate<void()> K2Node_CreateDelegate_OutputDelegate, bool CallFunc_GetIsEnabled_ReturnValue, class UObject* K2Node_CustomEvent_Loaded, int32 CallFunc_AkEventGlobal_ReturnValue, const struct FGeometry& K2Node_ComponentBoundEvent_InGeometry, struct FPointerEvent& K2Node_ComponentBoundEvent_InMouseEvent, bool CallFunc_IsValid_ReturnValue_1, class UBP_EmoteItemObject_CM_C* K2Node_CustomEvent_EmoteItemObject, class UObject* CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue, TDelegate<void(class UObject* Loaded)> K2Node_CreateDelegate_OutputDelegate_1, class UEmoteDataAsset* K2Node_DynamicCast_AsEmote_Data_Asset, bool K2Node_DynamicCast_bSuccess, bool CallFunc_IsValid_ReturnValue_2, class UObject* Temp_object_Variable, EValeriaFuncResult CallFunc_GetValeriaCharacter_OutResult, class AValeriaCharacter* CallFunc_GetValeriaCharacter_ReturnValue, class UEmoteDataAsset* K2Node_DynamicCast_AsEmote_Data_Asset_1, bool K2Node_DynamicCast_bSuccess_1, class UValeriaEmoteComponent* CallFunc_GetEmoteComponent_ReturnValue, bool K2Node_SwitchEnum_CmpSuccess, EValeriaFuncResult CallFunc_GetValeriaCharacter_OutResult_1, class AValeriaCharacter* CallFunc_GetValeriaCharacter_ReturnValue_1, bool CallFunc_Client_AssignEmoteToWheel_ReturnValue, class UValeriaEmoteComponent* CallFunc_GetEmoteComponent_ReturnValue_1, bool K2Node_SwitchEnum_CmpSuccess_1, const struct FGeometry& K2Node_Event_MyGeometry, const struct FPointerEvent& K2Node_Event_PointerEvent_2, class UDragDropOperation* K2Node_Event_Operation_2, const struct FPointerEvent& K2Node_Event_PointerEvent_1, class UDragDropOperation* K2Node_Event_Operation_1, struct FPointerEvent& K2Node_Event_PointerEvent, class UDragDropOperation* K2Node_Event_Operation, bool CallFunc_IsValid_ReturnValue_3);
	void GetAssignedEmoteFN(class UEmoteDataAsset** Emote, bool* Is_Valid, EValeriaFuncResult CallFunc_GetValeriaCharacter_OutResult, class AValeriaCharacter* CallFunc_GetValeriaCharacter_ReturnValue, class UValeriaEmoteComponent* CallFunc_GetEmoteComponent_ReturnValue, bool K2Node_SwitchEnum_CmpSuccess, bool CallFunc_IsValid_ReturnValue, TArray<class UEmoteDataAsset*>& CallFunc_GetEquippedEmotes_ReturnValue, class UEmoteDataAsset* CallFunc_Array_Get_Item, bool CallFunc_Array_IsValidIndex_ReturnValue, bool CallFunc_IsValid_ReturnValue_1);
	void GetAssignedEmoteId(struct FGuid* Emote_Id, EValeriaFuncResult CallFunc_GetValeriaCharacter_OutResult, class AValeriaCharacter* CallFunc_GetValeriaCharacter_ReturnValue, class UValeriaEmoteComponent* CallFunc_GetEmoteComponent_ReturnValue, bool K2Node_SwitchEnum_CmpSuccess, bool CallFunc_IsValid_ReturnValue, TArray<class UEmoteDataAsset*>& CallFunc_GetEquippedEmotes_ReturnValue, class UEmoteDataAsset* CallFunc_Array_Get_Item, bool CallFunc_Array_IsValidIndex_ReturnValue, bool CallFunc_IsValid_ReturnValue_1);
	void GetEmoteComponentFN(class UValeriaEmoteComponent** EmoteComponent, EValeriaFuncResult CallFunc_GetValeriaCharacter_OutResult, class AValeriaCharacter* CallFunc_GetValeriaCharacter_ReturnValue, bool K2Node_SwitchEnum_CmpSuccess, class UValeriaEmoteComponent* CallFunc_GetEmoteComponent_ReturnValue, bool CallFunc_IsValid_ReturnValue);
	void HandleHovered(int32 CallFunc_AkEventGlobal_ReturnValue, class UUMGSequencePlayer* CallFunc_PlayAnimationForward_ReturnValue);
	void HandleUnhovered(class UUMGSequencePlayer* CallFunc_PlayAnimationReverse_ReturnValue);
	void Hover();
	void OnDragCancelled(struct FPointerEvent& PointerEvent, class UDragDropOperation* Operation);
	void OnDragDetected(const struct FGeometry& MyGeometry, struct FPointerEvent& PointerEvent, class UDragDropOperation** Operation, TSoftObjectPtr<class UTexture2D> TextureReference, EValeriaFuncResult CallFunc_GetValeriaCharacter_OutResult, class AValeriaCharacter* CallFunc_GetValeriaCharacter_ReturnValue, class UWBP_EmoteDrag_C* CallFunc_Create_ReturnValue, class UValeriaEmoteComponent* CallFunc_GetEmoteComponent_ReturnValue, bool CallFunc_IsValid_ReturnValue, TArray<class UEmoteDataAsset*>& CallFunc_GetEquippedEmotes_ReturnValue, class UEmoteDataAsset* CallFunc_Array_Get_Item, bool CallFunc_Array_IsValidIndex_ReturnValue, TSoftObjectPtr<class UTexture2D> CallFunc_Conv_ObjectToSoftObjectReference_ReturnValue, bool CallFunc_IsValid_ReturnValue_1, bool K2Node_SwitchEnum_CmpSuccess, class UBP_EmoteDrag_C* CallFunc_CreateDragDropOperation_ReturnValue);
	void OnDragEnter(const struct FGeometry& MyGeometry, const struct FPointerEvent& PointerEvent, class UDragDropOperation* Operation);
	void OnDragLeave(const struct FPointerEvent& PointerEvent, class UDragDropOperation* Operation);
	bool OnDrop(const struct FGeometry& MyGeometry, const struct FPointerEvent& PointerEvent, class UDragDropOperation* Operation, const struct FGuid& OldEmoteId, class UBP_EmoteDrag_C* K2Node_DynamicCast_AsBP_Emote_Drag, bool K2Node_DynamicCast_bSuccess, const struct FGuid& CallFunc_GetAssignedEmoteId_Emote_Id, class UWBP_EmoteWheelChoice_CM_C* K2Node_DynamicCast_AsWBP_Emote_Wheel_Choice_CM, bool K2Node_DynamicCast_bSuccess_1, bool CallFunc_EqualEqual_ObjectObject_ReturnValue, const struct FGuid& CallFunc_GetAssignedEmoteId_Emote_Id_1, class UWBP_EmoteEntry_CM_C* K2Node_DynamicCast_AsWBP_Emote_Entry_CM, bool K2Node_DynamicCast_bSuccess_2);
	void OnEmoteWheelChoiceFocused__DelegateSignature(class UWBP_EmoteWheelChoice_CM_C* EmoteChoice);
	void OnEquippedEmotesChanged_Event_0();
	struct FEventReply OnFocusReceived(const struct FGeometry& MyGeometry, const struct FFocusEvent& InFocusEvent, const struct FEventReply& CallFunc_Handled_ReturnValue);
	void OnLoaded_3776BECB4BB558E3CC6C9A813DFA938A(class UObject* Loaded);
	struct FEventReply OnPreviewMouseButtonDown(const struct FGeometry& MyGeometry, struct FPointerEvent& MouseEvent, const struct FEventReply& CallFunc_DetectDragIfPressed_ReturnValue);
	void PlayHoverSound();
	void ResetWidgetProperties(const struct FWidgetTransform& K2Node_MakeStruct_WidgetTransform);
	void SelectWheelChoiceByGamepad(int32 CallFunc_AkEventGlobal_ReturnValue, bool CallFunc_IsValid_ReturnValue);
	void SetAssignedEmote(class UBP_EmoteItemObject_CM_C* EmoteItemObject);
	void SetSelectedTip(bool Temp_bool_Variable, ESlateVisibility Temp_byte_Variable, ESlateVisibility Temp_byte_Variable_1, ESlateVisibility K2Node_Select_Default);
	void Unhover();
	void Update(EValeriaFuncResult CallFunc_GetValeriaCharacter_OutResult, class AValeriaCharacter* CallFunc_GetValeriaCharacter_ReturnValue, class UValeriaEmoteComponent* CallFunc_GetEmoteComponent_ReturnValue, bool K2Node_SwitchEnum_CmpSuccess, bool CallFunc_IsValid_ReturnValue, TArray<class UEmoteDataAsset*>& CallFunc_GetEquippedEmotes_ReturnValue, class UEmoteDataAsset* CallFunc_Array_Get_Item, bool CallFunc_Array_IsValidIndex_ReturnValue, bool CallFunc_IsValid_ReturnValue_1);
	void UpdateEmoteId(const struct FGuid& Param_EmoteId, bool CallFunc_IsValid_Guid_ReturnValue, EValeriaFuncResult CallFunc_GetValeriaCharacter_OutResult, class AValeriaCharacter* CallFunc_GetValeriaCharacter_ReturnValue, class UValeriaEmoteComponent* CallFunc_GetEmoteComponent_ReturnValue, bool CallFunc_EqualEqual_GuidGuid_ReturnValue, bool CallFunc_Client_ClearAssignedEmote_ReturnValue, bool CallFunc_Client_AssignEmoteToWheel_ReturnValue, bool CallFunc_IsValid_ReturnValue, bool K2Node_SwitchEnum_CmpSuccess);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_EmoteWheelChoice_CM_C">();
	}
	static class UWBP_EmoteWheelChoice_CM_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_EmoteWheelChoice_CM_C>();
	}
};
static_assert(alignof(UWBP_EmoteWheelChoice_CM_C) == 0x000008, "Wrong alignment on UWBP_EmoteWheelChoice_CM_C");
static_assert(sizeof(UWBP_EmoteWheelChoice_CM_C) == 0x000428, "Wrong size on UWBP_EmoteWheelChoice_CM_C");
static_assert(offsetof(UWBP_EmoteWheelChoice_CM_C, UberGraphFrame) == 0x0002C0, "Member 'UWBP_EmoteWheelChoice_CM_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWBP_EmoteWheelChoice_CM_C, HoverAnim) == 0x0002C8, "Member 'UWBP_EmoteWheelChoice_CM_C::HoverAnim' has a wrong offset!");
static_assert(offsetof(UWBP_EmoteWheelChoice_CM_C, Emote_Selected_Tip) == 0x0002D0, "Member 'UWBP_EmoteWheelChoice_CM_C::Emote_Selected_Tip' has a wrong offset!");
static_assert(offsetof(UWBP_EmoteWheelChoice_CM_C, Image_Icon) == 0x0002D8, "Member 'UWBP_EmoteWheelChoice_CM_C::Image_Icon' has a wrong offset!");
static_assert(offsetof(UWBP_EmoteWheelChoice_CM_C, Image_Tile_Default) == 0x0002E0, "Member 'UWBP_EmoteWheelChoice_CM_C::Image_Tile_Default' has a wrong offset!");
static_assert(offsetof(UWBP_EmoteWheelChoice_CM_C, Image_Tile_Empty) == 0x0002E8, "Member 'UWBP_EmoteWheelChoice_CM_C::Image_Tile_Empty' has a wrong offset!");
static_assert(offsetof(UWBP_EmoteWheelChoice_CM_C, Image_Tile_Hovered) == 0x0002F0, "Member 'UWBP_EmoteWheelChoice_CM_C::Image_Tile_Hovered' has a wrong offset!");
static_assert(offsetof(UWBP_EmoteWheelChoice_CM_C, Image_Tile_Selected) == 0x0002F8, "Member 'UWBP_EmoteWheelChoice_CM_C::Image_Tile_Selected' has a wrong offset!");
static_assert(offsetof(UWBP_EmoteWheelChoice_CM_C, Switcher_Tile) == 0x000300, "Member 'UWBP_EmoteWheelChoice_CM_C::Switcher_Tile' has a wrong offset!");
static_assert(offsetof(UWBP_EmoteWheelChoice_CM_C, TileButton) == 0x000308, "Member 'UWBP_EmoteWheelChoice_CM_C::TileButton' has a wrong offset!");
static_assert(offsetof(UWBP_EmoteWheelChoice_CM_C, bHovered) == 0x000310, "Member 'UWBP_EmoteWheelChoice_CM_C::bHovered' has a wrong offset!");
static_assert(offsetof(UWBP_EmoteWheelChoice_CM_C, EmoteIndex) == 0x000314, "Member 'UWBP_EmoteWheelChoice_CM_C::EmoteIndex' has a wrong offset!");
static_assert(offsetof(UWBP_EmoteWheelChoice_CM_C, EmoteId) == 0x000318, "Member 'UWBP_EmoteWheelChoice_CM_C::EmoteId' has a wrong offset!");
static_assert(offsetof(UWBP_EmoteWheelChoice_CM_C, DraggedWidget) == 0x000328, "Member 'UWBP_EmoteWheelChoice_CM_C::DraggedWidget' has a wrong offset!");
static_assert(offsetof(UWBP_EmoteWheelChoice_CM_C, EmoteCollection) == 0x000330, "Member 'UWBP_EmoteWheelChoice_CM_C::EmoteCollection' has a wrong offset!");
static_assert(offsetof(UWBP_EmoteWheelChoice_CM_C, IsSelected) == 0x000338, "Member 'UWBP_EmoteWheelChoice_CM_C::IsSelected' has a wrong offset!");
static_assert(offsetof(UWBP_EmoteWheelChoice_CM_C, NULLL) == 0x000340, "Member 'UWBP_EmoteWheelChoice_CM_C::NULLL' has a wrong offset!");
static_assert(offsetof(UWBP_EmoteWheelChoice_CM_C, OnEmoteWheelChoiceFocused) == 0x0003F8, "Member 'UWBP_EmoteWheelChoice_CM_C::OnEmoteWheelChoiceFocused' has a wrong offset!");
static_assert(offsetof(UWBP_EmoteWheelChoice_CM_C, EmoteCircularCollection) == 0x000408, "Member 'UWBP_EmoteWheelChoice_CM_C::EmoteCircularCollection' has a wrong offset!");
static_assert(offsetof(UWBP_EmoteWheelChoice_CM_C, Default_Render_Opacity) == 0x000410, "Member 'UWBP_EmoteWheelChoice_CM_C::Default_Render_Opacity' has a wrong offset!");
static_assert(offsetof(UWBP_EmoteWheelChoice_CM_C, DefaultTransform_Scale) == 0x000418, "Member 'UWBP_EmoteWheelChoice_CM_C::DefaultTransform_Scale' has a wrong offset!");

}

