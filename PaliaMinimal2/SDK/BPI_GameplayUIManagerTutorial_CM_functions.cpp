#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPI_GameplayUIManagerTutorial_CM

#include "Basic.hpp"

#include "BPI_GameplayUIManagerTutorial_CM_classes.hpp"
#include "BPI_GameplayUIManagerTutorial_CM_parameters.hpp"


namespace SDK
{

// Function BPI_GameplayUIManagerTutorial_CM.BPI_GameplayUIManagerTutorial_CM_C.Redirect FTUEPopin Type
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             DefaultFTUEPopinType                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UWBP_FTUEPopin_CM_C*              FTUEPopin                                              (Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class FName                             TutorialModalName                                      (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void IBPI_GameplayUIManagerTutorial_CM_C::Redirect_FTUEPopin_Type(class FName DefaultFTUEPopinType, class UWBP_FTUEPopin_CM_C** FTUEPopin, class FName TutorialModalName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_GameplayUIManagerTutorial_CM_C", "Redirect FTUEPopin Type");

	Params::BPI_GameplayUIManagerTutorial_CM_C_Redirect_FTUEPopin_Type Parms{};

	Parms.DefaultFTUEPopinType = DefaultFTUEPopinType;
	Parms.TutorialModalName = TutorialModalName;

	UObject::ProcessEvent(Func, &Parms);

	if (FTUEPopin != nullptr)
		*FTUEPopin = Parms.FTUEPopin;
}


// Function BPI_GameplayUIManagerTutorial_CM.BPI_GameplayUIManagerTutorial_CM_C.RedirectTutorialModalType
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// class FName                             DefaultTutorialModalName                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TDelegate<void(class UUserWidget* ModalWidget, TArray<class UUserWidget*>& TutorialWidgets)>OpenModalDelegate                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool                                    bSuccess                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FName                             TutorialModalName                                      (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void IBPI_GameplayUIManagerTutorial_CM_C::RedirectTutorialModalType(class FName DefaultTutorialModalName, TDelegate<void(class UUserWidget* ModalWidget, TArray<class UUserWidget*>& TutorialWidgets)> OpenModalDelegate, bool* bSuccess, class FName TutorialModalName) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_GameplayUIManagerTutorial_CM_C", "RedirectTutorialModalType");

	Params::BPI_GameplayUIManagerTutorial_CM_C_RedirectTutorialModalType Parms{};

	Parms.DefaultTutorialModalName = DefaultTutorialModalName;
	Parms.OpenModalDelegate = OpenModalDelegate;
	Parms.TutorialModalName = TutorialModalName;

	UObject::ProcessEvent(Func, &Parms);

	if (bSuccess != nullptr)
		*bSuccess = Parms.bSuccess;
}


// Function BPI_GameplayUIManagerTutorial_CM.BPI_GameplayUIManagerTutorial_CM_C.RedirectType
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// class FName                             DefaultFTUEPopinType                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FText                             Title                                                  (Parm, OutParm)
// class FText                             Content                                                (Parm, OutParm)
// bool                                    EnableFound                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FName                             TutorialModalName                                      (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void IBPI_GameplayUIManagerTutorial_CM_C::RedirectType(class FName DefaultFTUEPopinType, class FText* Title, class FText* Content, bool* EnableFound, class FName TutorialModalName) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_GameplayUIManagerTutorial_CM_C", "RedirectType");

	Params::BPI_GameplayUIManagerTutorial_CM_C_RedirectType Parms{};

	Parms.DefaultFTUEPopinType = DefaultFTUEPopinType;
	Parms.TutorialModalName = TutorialModalName;

	UObject::ProcessEvent(Func, &Parms);

	if (Title != nullptr)
		*Title = Parms.Title;

	if (Content != nullptr)
		*Content = Parms.Content;

	if (EnableFound != nullptr)
		*EnableFound = Parms.EnableFound;
}

}

