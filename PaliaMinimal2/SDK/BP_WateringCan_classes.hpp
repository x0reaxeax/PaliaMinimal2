#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_WateringCan

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "BP_EquipViewActor_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_WateringCan.BP_WateringCan_C
// 0x0168 (0x0420 - 0x02B8)
class ABP_WateringCan_C final : public ABP_EquipViewActor_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02B8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UNiagaraComponent*                      NS_waterCan_fullIdle;                              // 0x02C0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UNiagaraComponent*                      MyNS_pour;                                         // 0x02C8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UArrowComponent*                        WaterSplash_root;                                  // 0x02D0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UArrowComponent*                        WaterFill_root;                                    // 0x02D8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_waterLevel;                                     // 0x02E0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UArrowComponent*                        Pouring_root;                                      // 0x02E8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UArrowComponent*                        Vfx_root;                                          // 0x02F0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UToolAkComponent_C*                     ToolAkComponent;                                   // 0x02F8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   MyMesh_waterCan;                                   // 0x0300(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMesh*                            Mesh_wateringCan;                                  // 0x0308(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	struct FVector                                Pos_waterLevelFull;                                // 0x0310(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        WaterCan_fullness;                                 // 0x0328(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Pos_waterSplash;                                   // 0x0330(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          PourOn;                                            // 0x0348(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4BAE[0x7];                                     // 0x0349(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<EObjectTypeQuery>                      Splash_groundType;                                 // 0x0350(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FVector                                Pos_WhereUWantMe;                                  // 0x0360(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        WaterCan_max;                                      // 0x0378(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        WaterCan_curr;                                     // 0x0380(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Debug;                                             // 0x0388(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	uint8                                         Pad_4BAF[0x7];                                     // 0x0389(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        WaterLevel_drop;                                   // 0x0390(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                POS_waterLastChecked;                              // 0x0398(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        WaterTravelDistance;                               // 0x03B0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               MI_waterLevel;                                     // 0x03B8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	double                                        BP_Time;                                           // 0x03C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UNiagaraSystem*                         NS_pour;                                           // 0x03C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Pos_currSplash;                                    // 0x03D0(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          PourRequested;                                     // 0x03E8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4BB0[0x7];                                     // 0x03E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UNiagaraComponent*                      MyNS_fillingCan;                                   // 0x03F0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TArray<EObjectTypeQuery>                      Object_Types;                                      // 0x03F8(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<EObjectTypeQuery>                      Water_surface;                                     // 0x0408(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	bool                                          WaterSplashy;                                      // 0x0418(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void Event_checkWaterMovement();
	void Event_equipMe();
	void Event_fillCan();
	void Event_fillingCan();
	void Event_init();
	void Event_pourStart();
	void Event_pourStop();
	void Event_waterEmpty();
	void ExecuteUbergraph_BP_WateringCan(int32 EntryPoint, double CallFunc_FClamp_ReturnValue, float CallFunc_K2_GetScalarParameterValue_ReturnValue, double CallFunc_Divide_DoubleDouble_ReturnValue, double K2Node_CustomEvent_Delta_2, double CallFunc_FInterpTo_ReturnValue, double CallFunc_Lerp_ReturnValue, const struct FRotator& CallFunc_K2_GetComponentRotation_ReturnValue, double CallFunc_Multiply_DoubleDouble_ReturnValue, float CallFunc_BreakRotator_Roll, float CallFunc_BreakRotator_Pitch, float CallFunc_BreakRotator_Yaw, double CallFunc_Add_DoubleDouble_ReturnValue, const struct FRotator& CallFunc_MakeRotator_ReturnValue, double CallFunc_Lerp_ReturnValue_1, const struct FVector& CallFunc_MakeVector_ReturnValue, const struct FVector& CallFunc_MakeVector_ReturnValue_1, const struct FVector& CallFunc_Add_VectorVector_ReturnValue, const class FString& CallFunc_Conv_DoubleToString_ReturnValue, class AActor* CallFunc_GetOwner_ReturnValue, class AValeriaCharacter* K2Node_DynamicCast_AsValeria_Character, bool K2Node_DynamicCast_bSuccess, float CallFunc_GetWateringCanRemainingPctg_ReturnValue, bool CallFunc_IsValid_ReturnValue, double K2Node_CustomEvent_Delta_1, const struct FHitResult& CallFunc_K2_SetWorldRotation_SweepHitResult, const struct FVector& CallFunc_Add_VectorVector_ReturnValue_1, const struct FHitResult& CallFunc_K2_SetRelativeLocation_SweepHitResult, const struct FHitResult& CallFunc_K2_SetRelativeLocation_SweepHitResult_1, TArray<class AActor*>& Temp_object_Variable, bool CallFunc_Greater_DoubleDouble_ReturnValue, double K2Node_CustomEvent_Delta, const class FString& CallFunc_Conv_DoubleToString_ReturnValue_1, bool CallFunc_Greater_DoubleDouble_ReturnValue_1, const class FString& CallFunc_Concat_StrStr_ReturnValue, const class FString& CallFunc_Concat_StrStr_ReturnValue_1, const struct FHitResult& CallFunc_K2_SetRelativeLocation_SweepHitResult_2, float K2Node_Event_DeltaSeconds, class AActor* CallFunc_GetOwner_ReturnValue_1, class AValeriaCharacter* K2Node_DynamicCast_AsValeria_Character_1, bool K2Node_DynamicCast_bSuccess_1, float CallFunc_GetWateringCanRemainingPctg_ReturnValue_1, const struct FVector& CallFunc_K2_GetComponentLocation_ReturnValue, const struct FVector& CallFunc_K2_GetComponentLocation_ReturnValue_1, const struct FVector& CallFunc_Add_VectorVector_ReturnValue_2, const struct FHitResult& CallFunc_LineTraceSingle_OutHit, bool CallFunc_LineTraceSingle_ReturnValue, bool CallFunc_BreakHitResult_bBlockingHit, bool CallFunc_BreakHitResult_bInitialOverlap, float CallFunc_BreakHitResult_Time, float CallFunc_BreakHitResult_Distance, const struct FVector& CallFunc_BreakHitResult_Location, const struct FVector& CallFunc_BreakHitResult_ImpactPoint, const struct FVector& CallFunc_BreakHitResult_Normal, const struct FVector& CallFunc_BreakHitResult_ImpactNormal, class UPhysicalMaterial* CallFunc_BreakHitResult_PhysMat, class AActor* CallFunc_BreakHitResult_HitActor, class UPrimitiveComponent* CallFunc_BreakHitResult_HitComponent, class FName CallFunc_BreakHitResult_HitBoneName, class FName CallFunc_BreakHitResult_BoneName, int32 CallFunc_BreakHitResult_HitItem, int32 CallFunc_BreakHitResult_ElementIndex, int32 CallFunc_BreakHitResult_FaceIndex, const struct FVector& CallFunc_BreakHitResult_TraceStart, const struct FVector& CallFunc_BreakHitResult_TraceEnd, const struct FVector& CallFunc_K2_GetComponentLocation_ReturnValue_2, const struct FVector& CallFunc_Subtract_VectorVector_ReturnValue, bool CallFunc_Greater_DoubleDouble_ReturnValue_2, double CallFunc_VSize_ReturnValue, TDelegate<void()> K2Node_CreateDelegate_OutputDelegate, const struct FTimerHandle& CallFunc_K2_SetTimerDelegate_ReturnValue, double K2Node_CustomEvent_Delta_3, const struct FVector& CallFunc_VInterpTo_ReturnValue, bool CallFunc_IsServer_ReturnValue, bool CallFunc_IsServer_ReturnValue_1, class UNiagaraComponent* CallFunc_SpawnSystemAttached_ReturnValue, double CallFunc_Subtract_DoubleDouble_ReturnValue, bool CallFunc_GreaterEqual_DoubleDouble_ReturnValue, bool CallFunc_IsServer_ReturnValue_2, bool CallFunc_Greater_DoubleDouble_ReturnValue_3, bool CallFunc_IsServer_ReturnValue_3, class AActor* CallFunc_GetOwner_ReturnValue_2, class AValeriaCharacter* K2Node_DynamicCast_AsValeria_Character_2, bool K2Node_DynamicCast_bSuccess_2, bool CallFunc_GreaterEqual_DoubleDouble_ReturnValue_1, float CallFunc_GetWateringCanRemainingPctg_ReturnValue_2, bool CallFunc_BooleanAND_ReturnValue, double CallFunc_FClamp_ReturnValue_1, double CallFunc_Subtract_DoubleDouble_ReturnValue_1, double CallFunc_Divide_DoubleDouble_ReturnValue_1, const class FString& CallFunc_Conv_DoubleToString_ReturnValue_2, double CallFunc_FClamp_ReturnValue_2, const class FString& CallFunc_Concat_StrStr_ReturnValue_2, const class FString& CallFunc_Concat_StrStr_ReturnValue_3, const class FString& CallFunc_Concat_StrStr_ReturnValue_4, double CallFunc_FInterpTo_Current_ImplicitCast, float CallFunc_SetScalarParameterValue_Value_ImplicitCast, float CallFunc_SetScalarParameterValue_Value_ImplicitCast_1, double CallFunc_AkSetRTPC_Value_ImplicitCast, double CallFunc_tick_waterLevel_delta_ImplicitCast, double CallFunc_update_waterSplashy_delta_ImplicitCast, double CallFunc_AkSetRTPC_Value_ImplicitCast_1, float CallFunc_SetScalarParameterValue_Value_ImplicitCast_2, float CallFunc_VInterpTo_DeltaTime_ImplicitCast, double CallFunc_AkSetRTPC_Value_ImplicitCast_2, float CallFunc_SetVariableFloat_InValue_ImplicitCast, float CallFunc_SetVariableFloat_InValue_ImplicitCast_1);
	void ReceiveBeginPlay();
	void ReceiveTick(float DeltaSeconds);
	void Tick_CanMoving();
	void Tick_waterLevel(double Delta);
	void Tick_waterLevel_NS();
	void Tick_waterLevelMat(double Delta);
	void Tick_waterLevelMesh();
	void Update_fillState();
	void Update_moveMySplash(double Delta);
	void Update_sanityCheck();
	void Update_waterSplashy(double Delta);
	void Update_whereISplash();
	void UpdateMaterial(class UMaterialInterface* CallFunc_GetMaterial_ReturnValue, class UMaterialInstanceDynamic* CallFunc_CreateDynamicMaterialInstance_ReturnValue);
	void UserConstructionScript(class UMaterialInterface* CallFunc_GetMaterial_ReturnValue, class UMaterialInterface* CallFunc_GetMaterial_ReturnValue_1, bool CallFunc_SetStaticMesh_ReturnValue);
	void Where_ISplash();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_WateringCan_C">();
	}
	static class ABP_WateringCan_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_WateringCan_C>();
	}
};
static_assert(alignof(ABP_WateringCan_C) == 0x000008, "Wrong alignment on ABP_WateringCan_C");
static_assert(sizeof(ABP_WateringCan_C) == 0x000420, "Wrong size on ABP_WateringCan_C");
static_assert(offsetof(ABP_WateringCan_C, UberGraphFrame) == 0x0002B8, "Member 'ABP_WateringCan_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_WateringCan_C, NS_waterCan_fullIdle) == 0x0002C0, "Member 'ABP_WateringCan_C::NS_waterCan_fullIdle' has a wrong offset!");
static_assert(offsetof(ABP_WateringCan_C, MyNS_pour) == 0x0002C8, "Member 'ABP_WateringCan_C::MyNS_pour' has a wrong offset!");
static_assert(offsetof(ABP_WateringCan_C, WaterSplash_root) == 0x0002D0, "Member 'ABP_WateringCan_C::WaterSplash_root' has a wrong offset!");
static_assert(offsetof(ABP_WateringCan_C, WaterFill_root) == 0x0002D8, "Member 'ABP_WateringCan_C::WaterFill_root' has a wrong offset!");
static_assert(offsetof(ABP_WateringCan_C, SM_waterLevel) == 0x0002E0, "Member 'ABP_WateringCan_C::SM_waterLevel' has a wrong offset!");
static_assert(offsetof(ABP_WateringCan_C, Pouring_root) == 0x0002E8, "Member 'ABP_WateringCan_C::Pouring_root' has a wrong offset!");
static_assert(offsetof(ABP_WateringCan_C, Vfx_root) == 0x0002F0, "Member 'ABP_WateringCan_C::Vfx_root' has a wrong offset!");
static_assert(offsetof(ABP_WateringCan_C, ToolAkComponent) == 0x0002F8, "Member 'ABP_WateringCan_C::ToolAkComponent' has a wrong offset!");
static_assert(offsetof(ABP_WateringCan_C, MyMesh_waterCan) == 0x000300, "Member 'ABP_WateringCan_C::MyMesh_waterCan' has a wrong offset!");
static_assert(offsetof(ABP_WateringCan_C, Mesh_wateringCan) == 0x000308, "Member 'ABP_WateringCan_C::Mesh_wateringCan' has a wrong offset!");
static_assert(offsetof(ABP_WateringCan_C, Pos_waterLevelFull) == 0x000310, "Member 'ABP_WateringCan_C::Pos_waterLevelFull' has a wrong offset!");
static_assert(offsetof(ABP_WateringCan_C, WaterCan_fullness) == 0x000328, "Member 'ABP_WateringCan_C::WaterCan_fullness' has a wrong offset!");
static_assert(offsetof(ABP_WateringCan_C, Pos_waterSplash) == 0x000330, "Member 'ABP_WateringCan_C::Pos_waterSplash' has a wrong offset!");
static_assert(offsetof(ABP_WateringCan_C, PourOn) == 0x000348, "Member 'ABP_WateringCan_C::PourOn' has a wrong offset!");
static_assert(offsetof(ABP_WateringCan_C, Splash_groundType) == 0x000350, "Member 'ABP_WateringCan_C::Splash_groundType' has a wrong offset!");
static_assert(offsetof(ABP_WateringCan_C, Pos_WhereUWantMe) == 0x000360, "Member 'ABP_WateringCan_C::Pos_WhereUWantMe' has a wrong offset!");
static_assert(offsetof(ABP_WateringCan_C, WaterCan_max) == 0x000378, "Member 'ABP_WateringCan_C::WaterCan_max' has a wrong offset!");
static_assert(offsetof(ABP_WateringCan_C, WaterCan_curr) == 0x000380, "Member 'ABP_WateringCan_C::WaterCan_curr' has a wrong offset!");
static_assert(offsetof(ABP_WateringCan_C, Debug) == 0x000388, "Member 'ABP_WateringCan_C::Debug' has a wrong offset!");
static_assert(offsetof(ABP_WateringCan_C, WaterLevel_drop) == 0x000390, "Member 'ABP_WateringCan_C::WaterLevel_drop' has a wrong offset!");
static_assert(offsetof(ABP_WateringCan_C, POS_waterLastChecked) == 0x000398, "Member 'ABP_WateringCan_C::POS_waterLastChecked' has a wrong offset!");
static_assert(offsetof(ABP_WateringCan_C, WaterTravelDistance) == 0x0003B0, "Member 'ABP_WateringCan_C::WaterTravelDistance' has a wrong offset!");
static_assert(offsetof(ABP_WateringCan_C, MI_waterLevel) == 0x0003B8, "Member 'ABP_WateringCan_C::MI_waterLevel' has a wrong offset!");
static_assert(offsetof(ABP_WateringCan_C, BP_Time) == 0x0003C0, "Member 'ABP_WateringCan_C::BP_Time' has a wrong offset!");
static_assert(offsetof(ABP_WateringCan_C, NS_pour) == 0x0003C8, "Member 'ABP_WateringCan_C::NS_pour' has a wrong offset!");
static_assert(offsetof(ABP_WateringCan_C, Pos_currSplash) == 0x0003D0, "Member 'ABP_WateringCan_C::Pos_currSplash' has a wrong offset!");
static_assert(offsetof(ABP_WateringCan_C, PourRequested) == 0x0003E8, "Member 'ABP_WateringCan_C::PourRequested' has a wrong offset!");
static_assert(offsetof(ABP_WateringCan_C, MyNS_fillingCan) == 0x0003F0, "Member 'ABP_WateringCan_C::MyNS_fillingCan' has a wrong offset!");
static_assert(offsetof(ABP_WateringCan_C, Object_Types) == 0x0003F8, "Member 'ABP_WateringCan_C::Object_Types' has a wrong offset!");
static_assert(offsetof(ABP_WateringCan_C, Water_surface) == 0x000408, "Member 'ABP_WateringCan_C::Water_surface' has a wrong offset!");
static_assert(offsetof(ABP_WateringCan_C, WaterSplashy) == 0x000418, "Member 'ABP_WateringCan_C::WaterSplashy' has a wrong offset!");

}

