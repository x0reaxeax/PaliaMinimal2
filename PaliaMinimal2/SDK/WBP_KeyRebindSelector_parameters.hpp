#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_KeyRebindSelector

#include "Basic.hpp"

#include "CommonInput_structs.hpp"
#include "Engine_structs.hpp"
#include "UMG_structs.hpp"
#include "SlateCore_structs.hpp"


namespace SDK::Params
{

// Function WBP_KeyRebindSelector.WBP_KeyRebindSelector_C.SetBodyText
// 0x0158 (0x0158 - 0x0000)
struct WBP_KeyRebindSelector_C_SetBodyText final
{
public:
	class FText                                   ActionName;                                        // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
	ECommonInputType                              InputType;                                         // 0x0018(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECommonInputType                              Temp_byte_Variable;                                // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_448D[0x6];                                     // 0x001A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0020(0x0050)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0070(0x0010)(ReferenceParm)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x0080(0x0050)(HasGetValueTypeHash)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x00D0(0x0018)()
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_1;                          // 0x00E8(0x0010)(ReferenceParm)
	class FText                                   Temp_text_Variable;                                // 0x00F8(0x0018)()
	class FText                                   CallFunc_Format_ReturnValue_1;                     // 0x0110(0x0018)()
	class FText                                   Temp_text_Variable_1;                              // 0x0128(0x0018)()
	class FText                                   K2Node_Select_Default;                             // 0x0140(0x0018)()
};
static_assert(alignof(WBP_KeyRebindSelector_C_SetBodyText) == 0x000008, "Wrong alignment on WBP_KeyRebindSelector_C_SetBodyText");
static_assert(sizeof(WBP_KeyRebindSelector_C_SetBodyText) == 0x000158, "Wrong size on WBP_KeyRebindSelector_C_SetBodyText");
static_assert(offsetof(WBP_KeyRebindSelector_C_SetBodyText, ActionName) == 0x000000, "Member 'WBP_KeyRebindSelector_C_SetBodyText::ActionName' has a wrong offset!");
static_assert(offsetof(WBP_KeyRebindSelector_C_SetBodyText, InputType) == 0x000018, "Member 'WBP_KeyRebindSelector_C_SetBodyText::InputType' has a wrong offset!");
static_assert(offsetof(WBP_KeyRebindSelector_C_SetBodyText, Temp_byte_Variable) == 0x000019, "Member 'WBP_KeyRebindSelector_C_SetBodyText::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_KeyRebindSelector_C_SetBodyText, K2Node_MakeStruct_FormatArgumentData) == 0x000020, "Member 'WBP_KeyRebindSelector_C_SetBodyText::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(WBP_KeyRebindSelector_C_SetBodyText, K2Node_MakeArray_Array) == 0x000070, "Member 'WBP_KeyRebindSelector_C_SetBodyText::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(WBP_KeyRebindSelector_C_SetBodyText, K2Node_MakeStruct_FormatArgumentData_1) == 0x000080, "Member 'WBP_KeyRebindSelector_C_SetBodyText::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(WBP_KeyRebindSelector_C_SetBodyText, CallFunc_Format_ReturnValue) == 0x0000D0, "Member 'WBP_KeyRebindSelector_C_SetBodyText::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_KeyRebindSelector_C_SetBodyText, K2Node_MakeArray_Array_1) == 0x0000E8, "Member 'WBP_KeyRebindSelector_C_SetBodyText::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(WBP_KeyRebindSelector_C_SetBodyText, Temp_text_Variable) == 0x0000F8, "Member 'WBP_KeyRebindSelector_C_SetBodyText::Temp_text_Variable' has a wrong offset!");
static_assert(offsetof(WBP_KeyRebindSelector_C_SetBodyText, CallFunc_Format_ReturnValue_1) == 0x000110, "Member 'WBP_KeyRebindSelector_C_SetBodyText::CallFunc_Format_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_KeyRebindSelector_C_SetBodyText, Temp_text_Variable_1) == 0x000128, "Member 'WBP_KeyRebindSelector_C_SetBodyText::Temp_text_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_KeyRebindSelector_C_SetBodyText, K2Node_Select_Default) == 0x000140, "Member 'WBP_KeyRebindSelector_C_SetBodyText::K2Node_Select_Default' has a wrong offset!");

// Function WBP_KeyRebindSelector.WBP_KeyRebindSelector_C.OnKeyDown
// 0x01E8 (0x01E8 - 0x0000)
struct WBP_KeyRebindSelector_C_OnKeyDown final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FKeyEvent                              InKeyEvent;                                        // 0x0038(0x0040)(BlueprintVisible, BlueprintReadOnly, Parm)
	struct FEventReply                            ReturnValue;                                       // 0x0078(0x00B8)(Parm, OutParm, ReturnParm)
	struct FEventReply                            CallFunc_Handled_ReturnValue;                      // 0x0130(0x00B8)()
};
static_assert(alignof(WBP_KeyRebindSelector_C_OnKeyDown) == 0x000008, "Wrong alignment on WBP_KeyRebindSelector_C_OnKeyDown");
static_assert(sizeof(WBP_KeyRebindSelector_C_OnKeyDown) == 0x0001E8, "Wrong size on WBP_KeyRebindSelector_C_OnKeyDown");
static_assert(offsetof(WBP_KeyRebindSelector_C_OnKeyDown, MyGeometry) == 0x000000, "Member 'WBP_KeyRebindSelector_C_OnKeyDown::MyGeometry' has a wrong offset!");
static_assert(offsetof(WBP_KeyRebindSelector_C_OnKeyDown, InKeyEvent) == 0x000038, "Member 'WBP_KeyRebindSelector_C_OnKeyDown::InKeyEvent' has a wrong offset!");
static_assert(offsetof(WBP_KeyRebindSelector_C_OnKeyDown, ReturnValue) == 0x000078, "Member 'WBP_KeyRebindSelector_C_OnKeyDown::ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_KeyRebindSelector_C_OnKeyDown, CallFunc_Handled_ReturnValue) == 0x000130, "Member 'WBP_KeyRebindSelector_C_OnKeyDown::CallFunc_Handled_ReturnValue' has a wrong offset!");

}

