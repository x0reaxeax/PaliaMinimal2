#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Ak_VO_Efforts

#include "Basic.hpp"

#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function Ak_VO_Efforts.Ak_VO_Efforts_C.GetNotifyName
// 0x0030 (0x0030 - 0x0000)
struct Ak_VO_Efforts_C_GetNotifyName final
{
public:
	class FString                                 ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash)
	class FString                                 CallFunc_GetEnumeratorUserFriendlyName_ReturnValue; // 0x0010(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0020(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(Ak_VO_Efforts_C_GetNotifyName) == 0x000008, "Wrong alignment on Ak_VO_Efforts_C_GetNotifyName");
static_assert(sizeof(Ak_VO_Efforts_C_GetNotifyName) == 0x000030, "Wrong size on Ak_VO_Efforts_C_GetNotifyName");
static_assert(offsetof(Ak_VO_Efforts_C_GetNotifyName, ReturnValue) == 0x000000, "Member 'Ak_VO_Efforts_C_GetNotifyName::ReturnValue' has a wrong offset!");
static_assert(offsetof(Ak_VO_Efforts_C_GetNotifyName, CallFunc_GetEnumeratorUserFriendlyName_ReturnValue) == 0x000010, "Member 'Ak_VO_Efforts_C_GetNotifyName::CallFunc_GetEnumeratorUserFriendlyName_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ak_VO_Efforts_C_GetNotifyName, CallFunc_Concat_StrStr_ReturnValue) == 0x000020, "Member 'Ak_VO_Efforts_C_GetNotifyName::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");

// Function Ak_VO_Efforts.Ak_VO_Efforts_C.PrepVoAkComponent
// 0x0068 (0x0068 - 0x0000)
struct Ak_VO_Efforts_C_PrepVoAkComponent final
{
public:
	class USceneComponent*                        AttachToComponent;                                 // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UAkComponent*                           ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UAkComponent*                           AkComp;                                            // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UVAL_CharacterCustomizationComponent*   CustomizationComp;                                 // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_AkGetComponent_ComponentCreated;          // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_46E8[0x3];                                     // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UAkComponent*                           CallFunc_AkGetComponent_AkComponent;               // 0x0028(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_46E9[0x6];                                     // 0x0032(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UAkRtpc*                                CallFunc_Array_Get_Item;                           // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_46EA[0x7];                                     // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UVAL_CharacterCustomizationComponent*   CallFunc_GetComponentByClass_ReturnValue;          // 0x0058(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ak_VO_Efforts_C_PrepVoAkComponent) == 0x000008, "Wrong alignment on Ak_VO_Efforts_C_PrepVoAkComponent");
static_assert(sizeof(Ak_VO_Efforts_C_PrepVoAkComponent) == 0x000068, "Wrong size on Ak_VO_Efforts_C_PrepVoAkComponent");
static_assert(offsetof(Ak_VO_Efforts_C_PrepVoAkComponent, AttachToComponent) == 0x000000, "Member 'Ak_VO_Efforts_C_PrepVoAkComponent::AttachToComponent' has a wrong offset!");
static_assert(offsetof(Ak_VO_Efforts_C_PrepVoAkComponent, ReturnValue) == 0x000008, "Member 'Ak_VO_Efforts_C_PrepVoAkComponent::ReturnValue' has a wrong offset!");
static_assert(offsetof(Ak_VO_Efforts_C_PrepVoAkComponent, AkComp) == 0x000010, "Member 'Ak_VO_Efforts_C_PrepVoAkComponent::AkComp' has a wrong offset!");
static_assert(offsetof(Ak_VO_Efforts_C_PrepVoAkComponent, CustomizationComp) == 0x000018, "Member 'Ak_VO_Efforts_C_PrepVoAkComponent::CustomizationComp' has a wrong offset!");
static_assert(offsetof(Ak_VO_Efforts_C_PrepVoAkComponent, Temp_int_Array_Index_Variable) == 0x000020, "Member 'Ak_VO_Efforts_C_PrepVoAkComponent::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(Ak_VO_Efforts_C_PrepVoAkComponent, CallFunc_AkGetComponent_ComponentCreated) == 0x000024, "Member 'Ak_VO_Efforts_C_PrepVoAkComponent::CallFunc_AkGetComponent_ComponentCreated' has a wrong offset!");
static_assert(offsetof(Ak_VO_Efforts_C_PrepVoAkComponent, CallFunc_AkGetComponent_AkComponent) == 0x000028, "Member 'Ak_VO_Efforts_C_PrepVoAkComponent::CallFunc_AkGetComponent_AkComponent' has a wrong offset!");
static_assert(offsetof(Ak_VO_Efforts_C_PrepVoAkComponent, CallFunc_IsValid_ReturnValue) == 0x000030, "Member 'Ak_VO_Efforts_C_PrepVoAkComponent::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ak_VO_Efforts_C_PrepVoAkComponent, CallFunc_IsValid_ReturnValue_1) == 0x000031, "Member 'Ak_VO_Efforts_C_PrepVoAkComponent::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ak_VO_Efforts_C_PrepVoAkComponent, CallFunc_Array_Get_Item) == 0x000038, "Member 'Ak_VO_Efforts_C_PrepVoAkComponent::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(Ak_VO_Efforts_C_PrepVoAkComponent, CallFunc_Array_Length_ReturnValue) == 0x000040, "Member 'Ak_VO_Efforts_C_PrepVoAkComponent::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ak_VO_Efforts_C_PrepVoAkComponent, Temp_int_Loop_Counter_Variable) == 0x000044, "Member 'Ak_VO_Efforts_C_PrepVoAkComponent::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(Ak_VO_Efforts_C_PrepVoAkComponent, CallFunc_GetOwner_ReturnValue) == 0x000048, "Member 'Ak_VO_Efforts_C_PrepVoAkComponent::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ak_VO_Efforts_C_PrepVoAkComponent, CallFunc_Less_IntInt_ReturnValue) == 0x000050, "Member 'Ak_VO_Efforts_C_PrepVoAkComponent::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ak_VO_Efforts_C_PrepVoAkComponent, CallFunc_GetComponentByClass_ReturnValue) == 0x000058, "Member 'Ak_VO_Efforts_C_PrepVoAkComponent::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ak_VO_Efforts_C_PrepVoAkComponent, CallFunc_Add_IntInt_ReturnValue) == 0x000060, "Member 'Ak_VO_Efforts_C_PrepVoAkComponent::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function Ak_VO_Efforts.Ak_VO_Efforts_C.Received_Notify
// 0x00C0 (0x00C0 - 0x0000)
struct Ak_VO_Efforts_C_Received_Notify final
{
public:
	class USkeletalMeshComponent*                 MeshComp;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UAnimSequenceBase*                      Animation;                                         // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FAnimNotifyEventReference              EventReference;                                    // 0x0010(0x0030)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	bool                                          ReturnValue;                                       // 0x0040(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_46EB[0x7];                                     // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAkAudioEvent*                          VoiceSetEvent;                                     // 0x0048(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAkAudioEvent*                          CallFunc_GetVoiceEvent_Value;                      // 0x0050(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0058(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_AkEventGlobal_ReturnValue;                // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_46EC[0x4];                                     // 0x0064(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_CharacterCustomizationComponent_C*  CallFunc_GetComponentByClass_ReturnValue;          // 0x0068(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0070(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0079(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_46ED[0x6];                                     // 0x007A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UVAL_VoiceSet*                          CallFunc_GetVoiceSet_ReturnValue;                  // 0x0080(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsServer_ReturnValue;                     // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_46EE[0x7];                                     // 0x0089(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UVoiceSet_C*                            K2Node_DynamicCast_AsVoice_Set;                    // 0x0090(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0099(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_46EF[0x6];                                     // 0x009A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UAkAudioEvent*                          CallFunc_GetVoiceEvent_Value_1;                    // 0x00A0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_46F0[0x7];                                     // 0x00A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAkComponent*                           CallFunc_PrepVoAkComponent_ReturnValue;            // 0x00B0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_AkEventComponent_ReturnValue;             // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x00BC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_4;                    // 0x00BD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ak_VO_Efforts_C_Received_Notify) == 0x000008, "Wrong alignment on Ak_VO_Efforts_C_Received_Notify");
static_assert(sizeof(Ak_VO_Efforts_C_Received_Notify) == 0x0000C0, "Wrong size on Ak_VO_Efforts_C_Received_Notify");
static_assert(offsetof(Ak_VO_Efforts_C_Received_Notify, MeshComp) == 0x000000, "Member 'Ak_VO_Efforts_C_Received_Notify::MeshComp' has a wrong offset!");
static_assert(offsetof(Ak_VO_Efforts_C_Received_Notify, Animation) == 0x000008, "Member 'Ak_VO_Efforts_C_Received_Notify::Animation' has a wrong offset!");
static_assert(offsetof(Ak_VO_Efforts_C_Received_Notify, EventReference) == 0x000010, "Member 'Ak_VO_Efforts_C_Received_Notify::EventReference' has a wrong offset!");
static_assert(offsetof(Ak_VO_Efforts_C_Received_Notify, ReturnValue) == 0x000040, "Member 'Ak_VO_Efforts_C_Received_Notify::ReturnValue' has a wrong offset!");
static_assert(offsetof(Ak_VO_Efforts_C_Received_Notify, VoiceSetEvent) == 0x000048, "Member 'Ak_VO_Efforts_C_Received_Notify::VoiceSetEvent' has a wrong offset!");
static_assert(offsetof(Ak_VO_Efforts_C_Received_Notify, CallFunc_GetVoiceEvent_Value) == 0x000050, "Member 'Ak_VO_Efforts_C_Received_Notify::CallFunc_GetVoiceEvent_Value' has a wrong offset!");
static_assert(offsetof(Ak_VO_Efforts_C_Received_Notify, CallFunc_GetOwner_ReturnValue) == 0x000058, "Member 'Ak_VO_Efforts_C_Received_Notify::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ak_VO_Efforts_C_Received_Notify, CallFunc_AkEventGlobal_ReturnValue) == 0x000060, "Member 'Ak_VO_Efforts_C_Received_Notify::CallFunc_AkEventGlobal_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ak_VO_Efforts_C_Received_Notify, CallFunc_GetComponentByClass_ReturnValue) == 0x000068, "Member 'Ak_VO_Efforts_C_Received_Notify::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ak_VO_Efforts_C_Received_Notify, CallFunc_GetGameInstance_ReturnValue) == 0x000070, "Member 'Ak_VO_Efforts_C_Received_Notify::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ak_VO_Efforts_C_Received_Notify, CallFunc_IsValid_ReturnValue) == 0x000078, "Member 'Ak_VO_Efforts_C_Received_Notify::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ak_VO_Efforts_C_Received_Notify, CallFunc_IsValid_ReturnValue_1) == 0x000079, "Member 'Ak_VO_Efforts_C_Received_Notify::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ak_VO_Efforts_C_Received_Notify, CallFunc_GetVoiceSet_ReturnValue) == 0x000080, "Member 'Ak_VO_Efforts_C_Received_Notify::CallFunc_GetVoiceSet_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ak_VO_Efforts_C_Received_Notify, CallFunc_IsServer_ReturnValue) == 0x000088, "Member 'Ak_VO_Efforts_C_Received_Notify::CallFunc_IsServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ak_VO_Efforts_C_Received_Notify, K2Node_DynamicCast_AsVoice_Set) == 0x000090, "Member 'Ak_VO_Efforts_C_Received_Notify::K2Node_DynamicCast_AsVoice_Set' has a wrong offset!");
static_assert(offsetof(Ak_VO_Efforts_C_Received_Notify, K2Node_DynamicCast_bSuccess) == 0x000098, "Member 'Ak_VO_Efforts_C_Received_Notify::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Ak_VO_Efforts_C_Received_Notify, CallFunc_Not_PreBool_ReturnValue) == 0x000099, "Member 'Ak_VO_Efforts_C_Received_Notify::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ak_VO_Efforts_C_Received_Notify, CallFunc_GetVoiceEvent_Value_1) == 0x0000A0, "Member 'Ak_VO_Efforts_C_Received_Notify::CallFunc_GetVoiceEvent_Value_1' has a wrong offset!");
static_assert(offsetof(Ak_VO_Efforts_C_Received_Notify, CallFunc_IsValid_ReturnValue_2) == 0x0000A8, "Member 'Ak_VO_Efforts_C_Received_Notify::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ak_VO_Efforts_C_Received_Notify, CallFunc_PrepVoAkComponent_ReturnValue) == 0x0000B0, "Member 'Ak_VO_Efforts_C_Received_Notify::CallFunc_PrepVoAkComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ak_VO_Efforts_C_Received_Notify, CallFunc_AkEventComponent_ReturnValue) == 0x0000B8, "Member 'Ak_VO_Efforts_C_Received_Notify::CallFunc_AkEventComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ak_VO_Efforts_C_Received_Notify, CallFunc_IsValid_ReturnValue_3) == 0x0000BC, "Member 'Ak_VO_Efforts_C_Received_Notify::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ak_VO_Efforts_C_Received_Notify, CallFunc_IsValid_ReturnValue_4) == 0x0000BD, "Member 'Ak_VO_Efforts_C_Received_Notify::CallFunc_IsValid_ReturnValue_4' has a wrong offset!");

}

