#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_PopinCalloutWidget

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "SlateCore_structs.hpp"


namespace SDK::Params
{

// Function WBP_PopinCalloutWidget.WBP_PopinCalloutWidget_C.ExecuteUbergraph_WBP_PopinCalloutWidget
// 0x000C (0x000C - 0x0000)
struct WBP_PopinCalloutWidget_C_ExecuteUbergraph_WBP_PopinCalloutWidget final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_AkEventGlobal_ReturnValue;                // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_PopinCalloutWidget_C_ExecuteUbergraph_WBP_PopinCalloutWidget) == 0x000004, "Wrong alignment on WBP_PopinCalloutWidget_C_ExecuteUbergraph_WBP_PopinCalloutWidget");
static_assert(sizeof(WBP_PopinCalloutWidget_C_ExecuteUbergraph_WBP_PopinCalloutWidget) == 0x00000C, "Wrong size on WBP_PopinCalloutWidget_C_ExecuteUbergraph_WBP_PopinCalloutWidget");
static_assert(offsetof(WBP_PopinCalloutWidget_C_ExecuteUbergraph_WBP_PopinCalloutWidget, EntryPoint) == 0x000000, "Member 'WBP_PopinCalloutWidget_C_ExecuteUbergraph_WBP_PopinCalloutWidget::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_PopinCalloutWidget_C_ExecuteUbergraph_WBP_PopinCalloutWidget, CallFunc_AkEventGlobal_ReturnValue) == 0x000004, "Member 'WBP_PopinCalloutWidget_C_ExecuteUbergraph_WBP_PopinCalloutWidget::CallFunc_AkEventGlobal_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_PopinCalloutWidget_C_ExecuteUbergraph_WBP_PopinCalloutWidget, K2Node_Event_IsDesignTime) == 0x000008, "Member 'WBP_PopinCalloutWidget_C_ExecuteUbergraph_WBP_PopinCalloutWidget::K2Node_Event_IsDesignTime' has a wrong offset!");

// Function WBP_PopinCalloutWidget.WBP_PopinCalloutWidget_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct WBP_PopinCalloutWidget_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_PopinCalloutWidget_C_PreConstruct) == 0x000001, "Wrong alignment on WBP_PopinCalloutWidget_C_PreConstruct");
static_assert(sizeof(WBP_PopinCalloutWidget_C_PreConstruct) == 0x000001, "Wrong size on WBP_PopinCalloutWidget_C_PreConstruct");
static_assert(offsetof(WBP_PopinCalloutWidget_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'WBP_PopinCalloutWidget_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function WBP_PopinCalloutWidget.WBP_PopinCalloutWidget_C.SetAnchoringAlignment
// 0x0220 (0x0220 - 0x0000)
struct WBP_PopinCalloutWidget_C_SetAnchoringAlignment final
{
public:
	EMenuPlacement                                Param_MenuAnchorPlacement;                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EOrientation                                  PrimaryOffsetOrientation;                          // 0x0001(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EHorizontalAlignment                          Temp_byte_Variable;                                // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_3;                              // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_4;                              // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_5;                              // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4639[0x7];                                     // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Temp_real_Variable;                                // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_6;                              // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_463A[0x7];                                     // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Temp_real_Variable_1;                              // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_7;                              // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_463B[0x7];                                     // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Temp_real_Variable_2;                              // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_8;                              // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_463C[0x7];                                     // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Temp_real_Variable_3;                              // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EMenuPlacement                                Temp_byte_Variable_1;                              // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_463D[0x7];                                     // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Temp_real_Variable_4;                              // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_5;                              // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_6;                              // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_7;                              // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_8;                              // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_9;                              // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_10;                             // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_11;                             // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_12;                             // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_13;                             // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_14;                             // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_15;                             // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_16;                             // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EMenuPlacement                                Temp_byte_Variable_2;                              // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EOrientation                                  Temp_byte_Variable_3;                              // 0x00B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EOrientation                                  Temp_byte_Variable_4;                              // 0x00BA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EOrientation                                  Temp_byte_Variable_5;                              // 0x00BB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EOrientation                                  Temp_byte_Variable_6;                              // 0x00BC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EOrientation                                  Temp_byte_Variable_7;                              // 0x00BD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EOrientation                                  Temp_byte_Variable_8;                              // 0x00BE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EOrientation                                  Temp_byte_Variable_9;                              // 0x00BF(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EOrientation                                  Temp_byte_Variable_10;                             // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EOrientation                                  Temp_byte_Variable_11;                             // 0x00C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EOrientation                                  Temp_byte_Variable_12;                             // 0x00C2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EOrientation                                  Temp_byte_Variable_13;                             // 0x00C3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EOrientation                                  Temp_byte_Variable_14;                             // 0x00C4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EOrientation                                  Temp_byte_Variable_15;                             // 0x00C5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EMenuPlacement                                Temp_byte_Variable_16;                             // 0x00C6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EHorizontalAlignment                          Temp_byte_Variable_17;                             // 0x00C7(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EHorizontalAlignment                          Temp_byte_Variable_18;                             // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EHorizontalAlignment                          Temp_byte_Variable_19;                             // 0x00C9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EHorizontalAlignment                          Temp_byte_Variable_20;                             // 0x00CA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EHorizontalAlignment                          Temp_byte_Variable_21;                             // 0x00CB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EHorizontalAlignment                          Temp_byte_Variable_22;                             // 0x00CC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EHorizontalAlignment                          Temp_byte_Variable_23;                             // 0x00CD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EHorizontalAlignment                          Temp_byte_Variable_24;                             // 0x00CE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EHorizontalAlignment                          Temp_byte_Variable_25;                             // 0x00CF(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EHorizontalAlignment                          Temp_byte_Variable_26;                             // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EHorizontalAlignment                          Temp_byte_Variable_27;                             // 0x00D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EHorizontalAlignment                          Temp_byte_Variable_28;                             // 0x00D2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EHorizontalAlignment                          Temp_byte_Variable_29;                             // 0x00D3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EMenuPlacement                                Temp_byte_Variable_30;                             // 0x00D4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EVerticalAlignment                            Temp_byte_Variable_31;                             // 0x00D5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EVerticalAlignment                            Temp_byte_Variable_32;                             // 0x00D6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EVerticalAlignment                            Temp_byte_Variable_33;                             // 0x00D7(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EVerticalAlignment                            Temp_byte_Variable_34;                             // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EVerticalAlignment                            Temp_byte_Variable_35;                             // 0x00D9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EVerticalAlignment                            Temp_byte_Variable_36;                             // 0x00DA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EVerticalAlignment                            Temp_byte_Variable_37;                             // 0x00DB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EVerticalAlignment                            Temp_byte_Variable_38;                             // 0x00DC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EVerticalAlignment                            Temp_byte_Variable_39;                             // 0x00DD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EVerticalAlignment                            Temp_byte_Variable_40;                             // 0x00DE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EVerticalAlignment                            Temp_byte_Variable_41;                             // 0x00DF(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EVerticalAlignment                            Temp_byte_Variable_42;                             // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EVerticalAlignment                            Temp_byte_Variable_43;                             // 0x00E1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_9;                              // 0x00E2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_463E[0x5];                                     // 0x00E3(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UOverlaySlot*                           CallFunc_SlotAsOverlaySlot_ReturnValue;            // 0x00E8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetRenderTransformAngle_ReturnValue;      // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Select_Default;                             // 0x00F4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_463F[0x3];                                     // 0x00F5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UOverlaySlot*                           CallFunc_SlotAsOverlaySlot_ReturnValue_1;          // 0x00F8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_GetRotated2D_ReturnValue;                 // 0x0100(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_GetAbs2D_ReturnValue;                     // 0x0110(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FMargin                                K2Node_Copy_ReturnValue;                           // 0x0120(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	double                                        CallFunc_BreakVector2D_X;                          // 0x0130(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y;                          // 0x0138(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FMargin                                K2Node_SetFieldsInStruct_StructOut;                // 0x0140(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FMargin                                K2Node_Copy_ReturnValue_1;                         // 0x0150(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_10;                             // 0x0160(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4640[0x3];                                     // 0x0161(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMargin                                K2Node_SetFieldsInStruct_StructOut_1;              // 0x0164(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4641[0x4];                                     // 0x0174(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_Select_Default_1;                           // 0x0178(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EOrientation                                  K2Node_Select_Default_2;                           // 0x0180(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_11;                             // 0x0181(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EVerticalAlignment                            Temp_byte_Variable_44;                             // 0x0182(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4642[0x5];                                     // 0x0183(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UOverlaySlot*                           CallFunc_SlotAsOverlaySlot_ReturnValue_2;          // 0x0188(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Select_Default_3;                           // 0x0190(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_12;                             // 0x0191(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0192(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_13;                             // 0x0193(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4643[0x4];                                     // 0x0194(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UOverlaySlot*                           CallFunc_SlotAsOverlaySlot_ReturnValue_3;          // 0x0198(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	EHorizontalAlignment                          K2Node_Select_Default_4;                           // 0x01A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4644[0x7];                                     // 0x01A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UOverlaySlot*                           CallFunc_SlotAsOverlaySlot_ReturnValue_4;          // 0x01A8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	EOrientation                                  Temp_byte_Variable_45;                             // 0x01B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Select_Default_5;                           // 0x01B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x01B2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EVerticalAlignment                            K2Node_Select_Default_6;                           // 0x01B3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x01B4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x01B5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4645[0x2];                                     // 0x01B6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_Select_Default_7;                           // 0x01B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_Select_Default_8;                           // 0x01C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x01C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_3;                 // 0x01C9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4646[0x6];                                     // 0x01CA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_Select_Default_9;                           // 0x01D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_Select_Default_10;                          // 0x01D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FMargin                                K2Node_MakeStruct_Margin;                          // 0x01E0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class UOverlaySlot*                           CallFunc_SlotAsOverlaySlot_ReturnValue_5;          // 0x01F0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_GetRotated2D_A_ImplicitCast;              // 0x01F8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetRenderTransformAngle_Angle_ImplicitCast; // 0x0208(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_MakeStruct_Top_ImplicitCast;                // 0x020C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_MakeStruct_Bottom_ImplicitCast;             // 0x0210(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_MakeStruct_Left_ImplicitCast;               // 0x0214(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_MakeStruct_Right_ImplicitCast;              // 0x0218(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_PopinCalloutWidget_C_SetAnchoringAlignment) == 0x000008, "Wrong alignment on WBP_PopinCalloutWidget_C_SetAnchoringAlignment");
static_assert(sizeof(WBP_PopinCalloutWidget_C_SetAnchoringAlignment) == 0x000220, "Wrong size on WBP_PopinCalloutWidget_C_SetAnchoringAlignment");
static_assert(offsetof(WBP_PopinCalloutWidget_C_SetAnchoringAlignment, Param_MenuAnchorPlacement) == 0x000000, "Member 'WBP_PopinCalloutWidget_C_SetAnchoringAlignment::Param_MenuAnchorPlacement' has a wrong offset!");
static_assert(offsetof(WBP_PopinCalloutWidget_C_SetAnchoringAlignment, PrimaryOffsetOrientation) == 0x000001, "Member 'WBP_PopinCalloutWidget_C_SetAnchoringAlignment::PrimaryOffsetOrientation' has a wrong offset!");
static_assert(offsetof(WBP_PopinCalloutWidget_C_SetAnchoringAlignment, Temp_bool_Variable) == 0x000002, "Member 'WBP_PopinCalloutWidget_C_SetAnchoringAlignment::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_PopinCalloutWidget_C_SetAnchoringAlignment, Temp_byte_Variable) == 0x000003, "Member 'WBP_PopinCalloutWidget_C_SetAnchoringAlignment::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_PopinCalloutWidget_C_SetAnchoringAlignment, Temp_bool_Variable_1) == 0x000004, "Member 'WBP_PopinCalloutWidget_C_SetAnchoringAlignment::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_PopinCalloutWidget_C_SetAnchoringAlignment, Temp_bool_Variable_2) == 0x000005, "Member 'WBP_PopinCalloutWidget_C_SetAnchoringAlignment::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_PopinCalloutWidget_C_SetAnchoringAlignment, Temp_bool_Variable_3) == 0x000006, "Member 'WBP_PopinCalloutWidget_C_SetAnchoringAlignment::Temp_bool_Variable_3' has a wrong offset!");
static_assert(offsetof(WBP_PopinCalloutWidget_C_SetAnchoringAlignment, Temp_bool_Variable_4) == 0x000007, "Member 'WBP_PopinCalloutWidget_C_SetAnchoringAlignment::Temp_bool_Variable_4' has a wrong offset!");
static_assert(offsetof(WBP_PopinCalloutWidget_C_SetAnchoringAlignment, Temp_bool_Variable_5) == 0x000008, "Member 'WBP_PopinCalloutWidget_C_SetAnchoringAlignment::Temp_bool_Variable_5' has a wrong offset!");
static_assert(offsetof(WBP_PopinCalloutWidget_C_SetAnchoringAlignment, Temp_real_Variable) == 0x000010, "Member 'WBP_PopinCalloutWidget_C_SetAnchoringAlignment::Temp_real_Variable' has a wrong offset!");
static_assert(offsetof(WBP_PopinCalloutWidget_C_SetAnchoringAlignment, Temp_bool_Variable_6) == 0x000018, "Member 'WBP_PopinCalloutWidget_C_SetAnchoringAlignment::Temp_bool_Variable_6' has a wrong offset!");
static_assert(offsetof(WBP_PopinCalloutWidget_C_SetAnchoringAlignment, Temp_real_Variable_1) == 0x000020, "Member 'WBP_PopinCalloutWidget_C_SetAnchoringAlignment::Temp_real_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_PopinCalloutWidget_C_SetAnchoringAlignment, Temp_bool_Variable_7) == 0x000028, "Member 'WBP_PopinCalloutWidget_C_SetAnchoringAlignment::Temp_bool_Variable_7' has a wrong offset!");
static_assert(offsetof(WBP_PopinCalloutWidget_C_SetAnchoringAlignment, Temp_real_Variable_2) == 0x000030, "Member 'WBP_PopinCalloutWidget_C_SetAnchoringAlignment::Temp_real_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_PopinCalloutWidget_C_SetAnchoringAlignment, Temp_bool_Variable_8) == 0x000038, "Member 'WBP_PopinCalloutWidget_C_SetAnchoringAlignment::Temp_bool_Variable_8' has a wrong offset!");
static_assert(offsetof(WBP_PopinCalloutWidget_C_SetAnchoringAlignment, Temp_real_Variable_3) == 0x000040, "Member 'WBP_PopinCalloutWidget_C_SetAnchoringAlignment::Temp_real_Variable_3' has a wrong offset!");
static_assert(offsetof(WBP_PopinCalloutWidget_C_SetAnchoringAlignment, Temp_byte_Variable_1) == 0x000048, "Member 'WBP_PopinCalloutWidget_C_SetAnchoringAlignment::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_PopinCalloutWidget_C_SetAnchoringAlignment, Temp_real_Variable_4) == 0x000050, "Member 'WBP_PopinCalloutWidget_C_SetAnchoringAlignment::Temp_real_Variable_4' has a wrong offset!");
static_assert(offsetof(WBP_PopinCalloutWidget_C_SetAnchoringAlignment, Temp_real_Variable_5) == 0x000058, "Member 'WBP_PopinCalloutWidget_C_SetAnchoringAlignment::Temp_real_Variable_5' has a wrong offset!");
static_assert(offsetof(WBP_PopinCalloutWidget_C_SetAnchoringAlignment, Temp_real_Variable_6) == 0x000060, "Member 'WBP_PopinCalloutWidget_C_SetAnchoringAlignment::Temp_real_Variable_6' has a wrong offset!");
static_assert(offsetof(WBP_PopinCalloutWidget_C_SetAnchoringAlignment, Temp_real_Variable_7) == 0x000068, "Member 'WBP_PopinCalloutWidget_C_SetAnchoringAlignment::Temp_real_Variable_7' has a wrong offset!");
static_assert(offsetof(WBP_PopinCalloutWidget_C_SetAnchoringAlignment, Temp_real_Variable_8) == 0x000070, "Member 'WBP_PopinCalloutWidget_C_SetAnchoringAlignment::Temp_real_Variable_8' has a wrong offset!");
static_assert(offsetof(WBP_PopinCalloutWidget_C_SetAnchoringAlignment, Temp_real_Variable_9) == 0x000078, "Member 'WBP_PopinCalloutWidget_C_SetAnchoringAlignment::Temp_real_Variable_9' has a wrong offset!");
static_assert(offsetof(WBP_PopinCalloutWidget_C_SetAnchoringAlignment, Temp_real_Variable_10) == 0x000080, "Member 'WBP_PopinCalloutWidget_C_SetAnchoringAlignment::Temp_real_Variable_10' has a wrong offset!");
static_assert(offsetof(WBP_PopinCalloutWidget_C_SetAnchoringAlignment, Temp_real_Variable_11) == 0x000088, "Member 'WBP_PopinCalloutWidget_C_SetAnchoringAlignment::Temp_real_Variable_11' has a wrong offset!");
static_assert(offsetof(WBP_PopinCalloutWidget_C_SetAnchoringAlignment, Temp_real_Variable_12) == 0x000090, "Member 'WBP_PopinCalloutWidget_C_SetAnchoringAlignment::Temp_real_Variable_12' has a wrong offset!");
static_assert(offsetof(WBP_PopinCalloutWidget_C_SetAnchoringAlignment, Temp_real_Variable_13) == 0x000098, "Member 'WBP_PopinCalloutWidget_C_SetAnchoringAlignment::Temp_real_Variable_13' has a wrong offset!");
static_assert(offsetof(WBP_PopinCalloutWidget_C_SetAnchoringAlignment, Temp_real_Variable_14) == 0x0000A0, "Member 'WBP_PopinCalloutWidget_C_SetAnchoringAlignment::Temp_real_Variable_14' has a wrong offset!");
static_assert(offsetof(WBP_PopinCalloutWidget_C_SetAnchoringAlignment, Temp_real_Variable_15) == 0x0000A8, "Member 'WBP_PopinCalloutWidget_C_SetAnchoringAlignment::Temp_real_Variable_15' has a wrong offset!");
static_assert(offsetof(WBP_PopinCalloutWidget_C_SetAnchoringAlignment, Temp_real_Variable_16) == 0x0000B0, "Member 'WBP_PopinCalloutWidget_C_SetAnchoringAlignment::Temp_real_Variable_16' has a wrong offset!");
static_assert(offsetof(WBP_PopinCalloutWidget_C_SetAnchoringAlignment, Temp_byte_Variable_2) == 0x0000B8, "Member 'WBP_PopinCalloutWidget_C_SetAnchoringAlignment::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_PopinCalloutWidget_C_SetAnchoringAlignment, Temp_byte_Variable_3) == 0x0000B9, "Member 'WBP_PopinCalloutWidget_C_SetAnchoringAlignment::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(WBP_PopinCalloutWidget_C_SetAnchoringAlignment, Temp_byte_Variable_4) == 0x0000BA, "Member 'WBP_PopinCalloutWidget_C_SetAnchoringAlignment::Temp_byte_Variable_4' has a wrong offset!");
static_assert(offsetof(WBP_PopinCalloutWidget_C_SetAnchoringAlignment, Temp_byte_Variable_5) == 0x0000BB, "Member 'WBP_PopinCalloutWidget_C_SetAnchoringAlignment::Temp_byte_Variable_5' has a wrong offset!");
static_assert(offsetof(WBP_PopinCalloutWidget_C_SetAnchoringAlignment, Temp_byte_Variable_6) == 0x0000BC, "Member 'WBP_PopinCalloutWidget_C_SetAnchoringAlignment::Temp_byte_Variable_6' has a wrong offset!");
static_assert(offsetof(WBP_PopinCalloutWidget_C_SetAnchoringAlignment, Temp_byte_Variable_7) == 0x0000BD, "Member 'WBP_PopinCalloutWidget_C_SetAnchoringAlignment::Temp_byte_Variable_7' has a wrong offset!");
static_assert(offsetof(WBP_PopinCalloutWidget_C_SetAnchoringAlignment, Temp_byte_Variable_8) == 0x0000BE, "Member 'WBP_PopinCalloutWidget_C_SetAnchoringAlignment::Temp_byte_Variable_8' has a wrong offset!");
static_assert(offsetof(WBP_PopinCalloutWidget_C_SetAnchoringAlignment, Temp_byte_Variable_9) == 0x0000BF, "Member 'WBP_PopinCalloutWidget_C_SetAnchoringAlignment::Temp_byte_Variable_9' has a wrong offset!");
static_assert(offsetof(WBP_PopinCalloutWidget_C_SetAnchoringAlignment, Temp_byte_Variable_10) == 0x0000C0, "Member 'WBP_PopinCalloutWidget_C_SetAnchoringAlignment::Temp_byte_Variable_10' has a wrong offset!");
static_assert(offsetof(WBP_PopinCalloutWidget_C_SetAnchoringAlignment, Temp_byte_Variable_11) == 0x0000C1, "Member 'WBP_PopinCalloutWidget_C_SetAnchoringAlignment::Temp_byte_Variable_11' has a wrong offset!");
static_assert(offsetof(WBP_PopinCalloutWidget_C_SetAnchoringAlignment, Temp_byte_Variable_12) == 0x0000C2, "Member 'WBP_PopinCalloutWidget_C_SetAnchoringAlignment::Temp_byte_Variable_12' has a wrong offset!");
static_assert(offsetof(WBP_PopinCalloutWidget_C_SetAnchoringAlignment, Temp_byte_Variable_13) == 0x0000C3, "Member 'WBP_PopinCalloutWidget_C_SetAnchoringAlignment::Temp_byte_Variable_13' has a wrong offset!");
static_assert(offsetof(WBP_PopinCalloutWidget_C_SetAnchoringAlignment, Temp_byte_Variable_14) == 0x0000C4, "Member 'WBP_PopinCalloutWidget_C_SetAnchoringAlignment::Temp_byte_Variable_14' has a wrong offset!");
static_assert(offsetof(WBP_PopinCalloutWidget_C_SetAnchoringAlignment, Temp_byte_Variable_15) == 0x0000C5, "Member 'WBP_PopinCalloutWidget_C_SetAnchoringAlignment::Temp_byte_Variable_15' has a wrong offset!");
static_assert(offsetof(WBP_PopinCalloutWidget_C_SetAnchoringAlignment, Temp_byte_Variable_16) == 0x0000C6, "Member 'WBP_PopinCalloutWidget_C_SetAnchoringAlignment::Temp_byte_Variable_16' has a wrong offset!");
static_assert(offsetof(WBP_PopinCalloutWidget_C_SetAnchoringAlignment, Temp_byte_Variable_17) == 0x0000C7, "Member 'WBP_PopinCalloutWidget_C_SetAnchoringAlignment::Temp_byte_Variable_17' has a wrong offset!");
static_assert(offsetof(WBP_PopinCalloutWidget_C_SetAnchoringAlignment, Temp_byte_Variable_18) == 0x0000C8, "Member 'WBP_PopinCalloutWidget_C_SetAnchoringAlignment::Temp_byte_Variable_18' has a wrong offset!");
static_assert(offsetof(WBP_PopinCalloutWidget_C_SetAnchoringAlignment, Temp_byte_Variable_19) == 0x0000C9, "Member 'WBP_PopinCalloutWidget_C_SetAnchoringAlignment::Temp_byte_Variable_19' has a wrong offset!");
static_assert(offsetof(WBP_PopinCalloutWidget_C_SetAnchoringAlignment, Temp_byte_Variable_20) == 0x0000CA, "Member 'WBP_PopinCalloutWidget_C_SetAnchoringAlignment::Temp_byte_Variable_20' has a wrong offset!");
static_assert(offsetof(WBP_PopinCalloutWidget_C_SetAnchoringAlignment, Temp_byte_Variable_21) == 0x0000CB, "Member 'WBP_PopinCalloutWidget_C_SetAnchoringAlignment::Temp_byte_Variable_21' has a wrong offset!");
static_assert(offsetof(WBP_PopinCalloutWidget_C_SetAnchoringAlignment, Temp_byte_Variable_22) == 0x0000CC, "Member 'WBP_PopinCalloutWidget_C_SetAnchoringAlignment::Temp_byte_Variable_22' has a wrong offset!");
static_assert(offsetof(WBP_PopinCalloutWidget_C_SetAnchoringAlignment, Temp_byte_Variable_23) == 0x0000CD, "Member 'WBP_PopinCalloutWidget_C_SetAnchoringAlignment::Temp_byte_Variable_23' has a wrong offset!");
static_assert(offsetof(WBP_PopinCalloutWidget_C_SetAnchoringAlignment, Temp_byte_Variable_24) == 0x0000CE, "Member 'WBP_PopinCalloutWidget_C_SetAnchoringAlignment::Temp_byte_Variable_24' has a wrong offset!");
static_assert(offsetof(WBP_PopinCalloutWidget_C_SetAnchoringAlignment, Temp_byte_Variable_25) == 0x0000CF, "Member 'WBP_PopinCalloutWidget_C_SetAnchoringAlignment::Temp_byte_Variable_25' has a wrong offset!");
static_assert(offsetof(WBP_PopinCalloutWidget_C_SetAnchoringAlignment, Temp_byte_Variable_26) == 0x0000D0, "Member 'WBP_PopinCalloutWidget_C_SetAnchoringAlignment::Temp_byte_Variable_26' has a wrong offset!");
static_assert(offsetof(WBP_PopinCalloutWidget_C_SetAnchoringAlignment, Temp_byte_Variable_27) == 0x0000D1, "Member 'WBP_PopinCalloutWidget_C_SetAnchoringAlignment::Temp_byte_Variable_27' has a wrong offset!");
static_assert(offsetof(WBP_PopinCalloutWidget_C_SetAnchoringAlignment, Temp_byte_Variable_28) == 0x0000D2, "Member 'WBP_PopinCalloutWidget_C_SetAnchoringAlignment::Temp_byte_Variable_28' has a wrong offset!");
static_assert(offsetof(WBP_PopinCalloutWidget_C_SetAnchoringAlignment, Temp_byte_Variable_29) == 0x0000D3, "Member 'WBP_PopinCalloutWidget_C_SetAnchoringAlignment::Temp_byte_Variable_29' has a wrong offset!");
static_assert(offsetof(WBP_PopinCalloutWidget_C_SetAnchoringAlignment, Temp_byte_Variable_30) == 0x0000D4, "Member 'WBP_PopinCalloutWidget_C_SetAnchoringAlignment::Temp_byte_Variable_30' has a wrong offset!");
static_assert(offsetof(WBP_PopinCalloutWidget_C_SetAnchoringAlignment, Temp_byte_Variable_31) == 0x0000D5, "Member 'WBP_PopinCalloutWidget_C_SetAnchoringAlignment::Temp_byte_Variable_31' has a wrong offset!");
static_assert(offsetof(WBP_PopinCalloutWidget_C_SetAnchoringAlignment, Temp_byte_Variable_32) == 0x0000D6, "Member 'WBP_PopinCalloutWidget_C_SetAnchoringAlignment::Temp_byte_Variable_32' has a wrong offset!");
static_assert(offsetof(WBP_PopinCalloutWidget_C_SetAnchoringAlignment, Temp_byte_Variable_33) == 0x0000D7, "Member 'WBP_PopinCalloutWidget_C_SetAnchoringAlignment::Temp_byte_Variable_33' has a wrong offset!");
static_assert(offsetof(WBP_PopinCalloutWidget_C_SetAnchoringAlignment, Temp_byte_Variable_34) == 0x0000D8, "Member 'WBP_PopinCalloutWidget_C_SetAnchoringAlignment::Temp_byte_Variable_34' has a wrong offset!");
static_assert(offsetof(WBP_PopinCalloutWidget_C_SetAnchoringAlignment, Temp_byte_Variable_35) == 0x0000D9, "Member 'WBP_PopinCalloutWidget_C_SetAnchoringAlignment::Temp_byte_Variable_35' has a wrong offset!");
static_assert(offsetof(WBP_PopinCalloutWidget_C_SetAnchoringAlignment, Temp_byte_Variable_36) == 0x0000DA, "Member 'WBP_PopinCalloutWidget_C_SetAnchoringAlignment::Temp_byte_Variable_36' has a wrong offset!");
static_assert(offsetof(WBP_PopinCalloutWidget_C_SetAnchoringAlignment, Temp_byte_Variable_37) == 0x0000DB, "Member 'WBP_PopinCalloutWidget_C_SetAnchoringAlignment::Temp_byte_Variable_37' has a wrong offset!");
static_assert(offsetof(WBP_PopinCalloutWidget_C_SetAnchoringAlignment, Temp_byte_Variable_38) == 0x0000DC, "Member 'WBP_PopinCalloutWidget_C_SetAnchoringAlignment::Temp_byte_Variable_38' has a wrong offset!");
static_assert(offsetof(WBP_PopinCalloutWidget_C_SetAnchoringAlignment, Temp_byte_Variable_39) == 0x0000DD, "Member 'WBP_PopinCalloutWidget_C_SetAnchoringAlignment::Temp_byte_Variable_39' has a wrong offset!");
static_assert(offsetof(WBP_PopinCalloutWidget_C_SetAnchoringAlignment, Temp_byte_Variable_40) == 0x0000DE, "Member 'WBP_PopinCalloutWidget_C_SetAnchoringAlignment::Temp_byte_Variable_40' has a wrong offset!");
static_assert(offsetof(WBP_PopinCalloutWidget_C_SetAnchoringAlignment, Temp_byte_Variable_41) == 0x0000DF, "Member 'WBP_PopinCalloutWidget_C_SetAnchoringAlignment::Temp_byte_Variable_41' has a wrong offset!");
static_assert(offsetof(WBP_PopinCalloutWidget_C_SetAnchoringAlignment, Temp_byte_Variable_42) == 0x0000E0, "Member 'WBP_PopinCalloutWidget_C_SetAnchoringAlignment::Temp_byte_Variable_42' has a wrong offset!");
static_assert(offsetof(WBP_PopinCalloutWidget_C_SetAnchoringAlignment, Temp_byte_Variable_43) == 0x0000E1, "Member 'WBP_PopinCalloutWidget_C_SetAnchoringAlignment::Temp_byte_Variable_43' has a wrong offset!");
static_assert(offsetof(WBP_PopinCalloutWidget_C_SetAnchoringAlignment, Temp_bool_Variable_9) == 0x0000E2, "Member 'WBP_PopinCalloutWidget_C_SetAnchoringAlignment::Temp_bool_Variable_9' has a wrong offset!");
static_assert(offsetof(WBP_PopinCalloutWidget_C_SetAnchoringAlignment, CallFunc_SlotAsOverlaySlot_ReturnValue) == 0x0000E8, "Member 'WBP_PopinCalloutWidget_C_SetAnchoringAlignment::CallFunc_SlotAsOverlaySlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_PopinCalloutWidget_C_SetAnchoringAlignment, CallFunc_GetRenderTransformAngle_ReturnValue) == 0x0000F0, "Member 'WBP_PopinCalloutWidget_C_SetAnchoringAlignment::CallFunc_GetRenderTransformAngle_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_PopinCalloutWidget_C_SetAnchoringAlignment, K2Node_Select_Default) == 0x0000F4, "Member 'WBP_PopinCalloutWidget_C_SetAnchoringAlignment::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_PopinCalloutWidget_C_SetAnchoringAlignment, CallFunc_SlotAsOverlaySlot_ReturnValue_1) == 0x0000F8, "Member 'WBP_PopinCalloutWidget_C_SetAnchoringAlignment::CallFunc_SlotAsOverlaySlot_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_PopinCalloutWidget_C_SetAnchoringAlignment, CallFunc_GetRotated2D_ReturnValue) == 0x000100, "Member 'WBP_PopinCalloutWidget_C_SetAnchoringAlignment::CallFunc_GetRotated2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_PopinCalloutWidget_C_SetAnchoringAlignment, CallFunc_GetAbs2D_ReturnValue) == 0x000110, "Member 'WBP_PopinCalloutWidget_C_SetAnchoringAlignment::CallFunc_GetAbs2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_PopinCalloutWidget_C_SetAnchoringAlignment, K2Node_Copy_ReturnValue) == 0x000120, "Member 'WBP_PopinCalloutWidget_C_SetAnchoringAlignment::K2Node_Copy_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_PopinCalloutWidget_C_SetAnchoringAlignment, CallFunc_BreakVector2D_X) == 0x000130, "Member 'WBP_PopinCalloutWidget_C_SetAnchoringAlignment::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(WBP_PopinCalloutWidget_C_SetAnchoringAlignment, CallFunc_BreakVector2D_Y) == 0x000138, "Member 'WBP_PopinCalloutWidget_C_SetAnchoringAlignment::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(WBP_PopinCalloutWidget_C_SetAnchoringAlignment, K2Node_SetFieldsInStruct_StructOut) == 0x000140, "Member 'WBP_PopinCalloutWidget_C_SetAnchoringAlignment::K2Node_SetFieldsInStruct_StructOut' has a wrong offset!");
static_assert(offsetof(WBP_PopinCalloutWidget_C_SetAnchoringAlignment, K2Node_Copy_ReturnValue_1) == 0x000150, "Member 'WBP_PopinCalloutWidget_C_SetAnchoringAlignment::K2Node_Copy_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_PopinCalloutWidget_C_SetAnchoringAlignment, Temp_bool_Variable_10) == 0x000160, "Member 'WBP_PopinCalloutWidget_C_SetAnchoringAlignment::Temp_bool_Variable_10' has a wrong offset!");
static_assert(offsetof(WBP_PopinCalloutWidget_C_SetAnchoringAlignment, K2Node_SetFieldsInStruct_StructOut_1) == 0x000164, "Member 'WBP_PopinCalloutWidget_C_SetAnchoringAlignment::K2Node_SetFieldsInStruct_StructOut_1' has a wrong offset!");
static_assert(offsetof(WBP_PopinCalloutWidget_C_SetAnchoringAlignment, K2Node_Select_Default_1) == 0x000178, "Member 'WBP_PopinCalloutWidget_C_SetAnchoringAlignment::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(WBP_PopinCalloutWidget_C_SetAnchoringAlignment, K2Node_Select_Default_2) == 0x000180, "Member 'WBP_PopinCalloutWidget_C_SetAnchoringAlignment::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(WBP_PopinCalloutWidget_C_SetAnchoringAlignment, Temp_bool_Variable_11) == 0x000181, "Member 'WBP_PopinCalloutWidget_C_SetAnchoringAlignment::Temp_bool_Variable_11' has a wrong offset!");
static_assert(offsetof(WBP_PopinCalloutWidget_C_SetAnchoringAlignment, Temp_byte_Variable_44) == 0x000182, "Member 'WBP_PopinCalloutWidget_C_SetAnchoringAlignment::Temp_byte_Variable_44' has a wrong offset!");
static_assert(offsetof(WBP_PopinCalloutWidget_C_SetAnchoringAlignment, CallFunc_SlotAsOverlaySlot_ReturnValue_2) == 0x000188, "Member 'WBP_PopinCalloutWidget_C_SetAnchoringAlignment::CallFunc_SlotAsOverlaySlot_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_PopinCalloutWidget_C_SetAnchoringAlignment, K2Node_Select_Default_3) == 0x000190, "Member 'WBP_PopinCalloutWidget_C_SetAnchoringAlignment::K2Node_Select_Default_3' has a wrong offset!");
static_assert(offsetof(WBP_PopinCalloutWidget_C_SetAnchoringAlignment, Temp_bool_Variable_12) == 0x000191, "Member 'WBP_PopinCalloutWidget_C_SetAnchoringAlignment::Temp_bool_Variable_12' has a wrong offset!");
static_assert(offsetof(WBP_PopinCalloutWidget_C_SetAnchoringAlignment, K2Node_SwitchEnum_CmpSuccess) == 0x000192, "Member 'WBP_PopinCalloutWidget_C_SetAnchoringAlignment::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(WBP_PopinCalloutWidget_C_SetAnchoringAlignment, Temp_bool_Variable_13) == 0x000193, "Member 'WBP_PopinCalloutWidget_C_SetAnchoringAlignment::Temp_bool_Variable_13' has a wrong offset!");
static_assert(offsetof(WBP_PopinCalloutWidget_C_SetAnchoringAlignment, CallFunc_SlotAsOverlaySlot_ReturnValue_3) == 0x000198, "Member 'WBP_PopinCalloutWidget_C_SetAnchoringAlignment::CallFunc_SlotAsOverlaySlot_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WBP_PopinCalloutWidget_C_SetAnchoringAlignment, K2Node_Select_Default_4) == 0x0001A0, "Member 'WBP_PopinCalloutWidget_C_SetAnchoringAlignment::K2Node_Select_Default_4' has a wrong offset!");
static_assert(offsetof(WBP_PopinCalloutWidget_C_SetAnchoringAlignment, CallFunc_SlotAsOverlaySlot_ReturnValue_4) == 0x0001A8, "Member 'WBP_PopinCalloutWidget_C_SetAnchoringAlignment::CallFunc_SlotAsOverlaySlot_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(WBP_PopinCalloutWidget_C_SetAnchoringAlignment, Temp_byte_Variable_45) == 0x0001B0, "Member 'WBP_PopinCalloutWidget_C_SetAnchoringAlignment::Temp_byte_Variable_45' has a wrong offset!");
static_assert(offsetof(WBP_PopinCalloutWidget_C_SetAnchoringAlignment, K2Node_Select_Default_5) == 0x0001B1, "Member 'WBP_PopinCalloutWidget_C_SetAnchoringAlignment::K2Node_Select_Default_5' has a wrong offset!");
static_assert(offsetof(WBP_PopinCalloutWidget_C_SetAnchoringAlignment, CallFunc_Not_PreBool_ReturnValue) == 0x0001B2, "Member 'WBP_PopinCalloutWidget_C_SetAnchoringAlignment::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_PopinCalloutWidget_C_SetAnchoringAlignment, K2Node_Select_Default_6) == 0x0001B3, "Member 'WBP_PopinCalloutWidget_C_SetAnchoringAlignment::K2Node_Select_Default_6' has a wrong offset!");
static_assert(offsetof(WBP_PopinCalloutWidget_C_SetAnchoringAlignment, CallFunc_BooleanAND_ReturnValue) == 0x0001B4, "Member 'WBP_PopinCalloutWidget_C_SetAnchoringAlignment::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_PopinCalloutWidget_C_SetAnchoringAlignment, CallFunc_BooleanAND_ReturnValue_1) == 0x0001B5, "Member 'WBP_PopinCalloutWidget_C_SetAnchoringAlignment::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_PopinCalloutWidget_C_SetAnchoringAlignment, K2Node_Select_Default_7) == 0x0001B8, "Member 'WBP_PopinCalloutWidget_C_SetAnchoringAlignment::K2Node_Select_Default_7' has a wrong offset!");
static_assert(offsetof(WBP_PopinCalloutWidget_C_SetAnchoringAlignment, K2Node_Select_Default_8) == 0x0001C0, "Member 'WBP_PopinCalloutWidget_C_SetAnchoringAlignment::K2Node_Select_Default_8' has a wrong offset!");
static_assert(offsetof(WBP_PopinCalloutWidget_C_SetAnchoringAlignment, CallFunc_BooleanAND_ReturnValue_2) == 0x0001C8, "Member 'WBP_PopinCalloutWidget_C_SetAnchoringAlignment::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_PopinCalloutWidget_C_SetAnchoringAlignment, CallFunc_BooleanAND_ReturnValue_3) == 0x0001C9, "Member 'WBP_PopinCalloutWidget_C_SetAnchoringAlignment::CallFunc_BooleanAND_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WBP_PopinCalloutWidget_C_SetAnchoringAlignment, K2Node_Select_Default_9) == 0x0001D0, "Member 'WBP_PopinCalloutWidget_C_SetAnchoringAlignment::K2Node_Select_Default_9' has a wrong offset!");
static_assert(offsetof(WBP_PopinCalloutWidget_C_SetAnchoringAlignment, K2Node_Select_Default_10) == 0x0001D8, "Member 'WBP_PopinCalloutWidget_C_SetAnchoringAlignment::K2Node_Select_Default_10' has a wrong offset!");
static_assert(offsetof(WBP_PopinCalloutWidget_C_SetAnchoringAlignment, K2Node_MakeStruct_Margin) == 0x0001E0, "Member 'WBP_PopinCalloutWidget_C_SetAnchoringAlignment::K2Node_MakeStruct_Margin' has a wrong offset!");
static_assert(offsetof(WBP_PopinCalloutWidget_C_SetAnchoringAlignment, CallFunc_SlotAsOverlaySlot_ReturnValue_5) == 0x0001F0, "Member 'WBP_PopinCalloutWidget_C_SetAnchoringAlignment::CallFunc_SlotAsOverlaySlot_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(WBP_PopinCalloutWidget_C_SetAnchoringAlignment, CallFunc_GetRotated2D_A_ImplicitCast) == 0x0001F8, "Member 'WBP_PopinCalloutWidget_C_SetAnchoringAlignment::CallFunc_GetRotated2D_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(WBP_PopinCalloutWidget_C_SetAnchoringAlignment, CallFunc_SetRenderTransformAngle_Angle_ImplicitCast) == 0x000208, "Member 'WBP_PopinCalloutWidget_C_SetAnchoringAlignment::CallFunc_SetRenderTransformAngle_Angle_ImplicitCast' has a wrong offset!");
static_assert(offsetof(WBP_PopinCalloutWidget_C_SetAnchoringAlignment, K2Node_MakeStruct_Top_ImplicitCast) == 0x00020C, "Member 'WBP_PopinCalloutWidget_C_SetAnchoringAlignment::K2Node_MakeStruct_Top_ImplicitCast' has a wrong offset!");
static_assert(offsetof(WBP_PopinCalloutWidget_C_SetAnchoringAlignment, K2Node_MakeStruct_Bottom_ImplicitCast) == 0x000210, "Member 'WBP_PopinCalloutWidget_C_SetAnchoringAlignment::K2Node_MakeStruct_Bottom_ImplicitCast' has a wrong offset!");
static_assert(offsetof(WBP_PopinCalloutWidget_C_SetAnchoringAlignment, K2Node_MakeStruct_Left_ImplicitCast) == 0x000214, "Member 'WBP_PopinCalloutWidget_C_SetAnchoringAlignment::K2Node_MakeStruct_Left_ImplicitCast' has a wrong offset!");
static_assert(offsetof(WBP_PopinCalloutWidget_C_SetAnchoringAlignment, K2Node_MakeStruct_Right_ImplicitCast) == 0x000218, "Member 'WBP_PopinCalloutWidget_C_SetAnchoringAlignment::K2Node_MakeStruct_Right_ImplicitCast' has a wrong offset!");

}

