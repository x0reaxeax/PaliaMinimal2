#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_ComboBox_02_CM_Menu_Interface

#include "Basic.hpp"

#include "Slate_structs.hpp"


namespace SDK::Params
{

// Function WBP_ComboBox_02_CM_Menu_Interface.WBP_ComboBox_02_CM_Menu_Interface_C.GetButtonSelection
// 0x0008 (0x0008 - 0x0000)
struct WBP_ComboBox_02_CM_Menu_Interface_C_GetButtonSelection final
{
public:
	class UWBP_Template_Button_CM_C*              Button_Selection;                                  // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ComboBox_02_CM_Menu_Interface_C_GetButtonSelection) == 0x000008, "Wrong alignment on WBP_ComboBox_02_CM_Menu_Interface_C_GetButtonSelection");
static_assert(sizeof(WBP_ComboBox_02_CM_Menu_Interface_C_GetButtonSelection) == 0x000008, "Wrong size on WBP_ComboBox_02_CM_Menu_Interface_C_GetButtonSelection");
static_assert(offsetof(WBP_ComboBox_02_CM_Menu_Interface_C_GetButtonSelection, Button_Selection) == 0x000000, "Member 'WBP_ComboBox_02_CM_Menu_Interface_C_GetButtonSelection::Button_Selection' has a wrong offset!");

// Function WBP_ComboBox_02_CM_Menu_Interface.WBP_ComboBox_02_CM_Menu_Interface_C.GetOptionWidgets
// 0x0010 (0x0010 - 0x0000)
struct WBP_ComboBox_02_CM_Menu_Interface_C_GetOptionWidgets final
{
public:
	TArray<class UWBP_ComboBox_Menu_Option_02_CM_C*> OptionWidgets;                                     // 0x0000(0x0010)(Parm, OutParm, ContainsInstancedReference)
};
static_assert(alignof(WBP_ComboBox_02_CM_Menu_Interface_C_GetOptionWidgets) == 0x000008, "Wrong alignment on WBP_ComboBox_02_CM_Menu_Interface_C_GetOptionWidgets");
static_assert(sizeof(WBP_ComboBox_02_CM_Menu_Interface_C_GetOptionWidgets) == 0x000010, "Wrong size on WBP_ComboBox_02_CM_Menu_Interface_C_GetOptionWidgets");
static_assert(offsetof(WBP_ComboBox_02_CM_Menu_Interface_C_GetOptionWidgets, OptionWidgets) == 0x000000, "Member 'WBP_ComboBox_02_CM_Menu_Interface_C_GetOptionWidgets::OptionWidgets' has a wrong offset!");

// Function WBP_ComboBox_02_CM_Menu_Interface.WBP_ComboBox_02_CM_Menu_Interface_C.GetSelfMenu
// 0x0008 (0x0008 - 0x0000)
struct WBP_ComboBox_02_CM_Menu_Interface_C_GetSelfMenu final
{
public:
	class UUserWidget*                            SelfMenu;                                          // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ComboBox_02_CM_Menu_Interface_C_GetSelfMenu) == 0x000008, "Wrong alignment on WBP_ComboBox_02_CM_Menu_Interface_C_GetSelfMenu");
static_assert(sizeof(WBP_ComboBox_02_CM_Menu_Interface_C_GetSelfMenu) == 0x000008, "Wrong size on WBP_ComboBox_02_CM_Menu_Interface_C_GetSelfMenu");
static_assert(offsetof(WBP_ComboBox_02_CM_Menu_Interface_C_GetSelfMenu, SelfMenu) == 0x000000, "Member 'WBP_ComboBox_02_CM_Menu_Interface_C_GetSelfMenu::SelfMenu' has a wrong offset!");

// Function WBP_ComboBox_02_CM_Menu_Interface.WBP_ComboBox_02_CM_Menu_Interface_C.HandleOnOptionSelected
// 0x0020 (0x0020 - 0x0000)
struct WBP_ComboBox_02_CM_Menu_Interface_C_HandleOnOptionSelected final
{
public:
	int32                                         Param_Index;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5354[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Text;                                              // 0x0008(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(WBP_ComboBox_02_CM_Menu_Interface_C_HandleOnOptionSelected) == 0x000008, "Wrong alignment on WBP_ComboBox_02_CM_Menu_Interface_C_HandleOnOptionSelected");
static_assert(sizeof(WBP_ComboBox_02_CM_Menu_Interface_C_HandleOnOptionSelected) == 0x000020, "Wrong size on WBP_ComboBox_02_CM_Menu_Interface_C_HandleOnOptionSelected");
static_assert(offsetof(WBP_ComboBox_02_CM_Menu_Interface_C_HandleOnOptionSelected, Param_Index) == 0x000000, "Member 'WBP_ComboBox_02_CM_Menu_Interface_C_HandleOnOptionSelected::Param_Index' has a wrong offset!");
static_assert(offsetof(WBP_ComboBox_02_CM_Menu_Interface_C_HandleOnOptionSelected, Text) == 0x000008, "Member 'WBP_ComboBox_02_CM_Menu_Interface_C_HandleOnOptionSelected::Text' has a wrong offset!");

// Function WBP_ComboBox_02_CM_Menu_Interface.WBP_ComboBox_02_CM_Menu_Interface_C.SetActiveSelectedAppearance
// 0x0020 (0x0020 - 0x0000)
struct WBP_ComboBox_02_CM_Menu_Interface_C_SetActiveSelectedAppearance final
{
public:
	class FText                                   InText;                                            // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
	ETextJustify                                  InJustification;                                   // 0x0018(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ComboBox_02_CM_Menu_Interface_C_SetActiveSelectedAppearance) == 0x000008, "Wrong alignment on WBP_ComboBox_02_CM_Menu_Interface_C_SetActiveSelectedAppearance");
static_assert(sizeof(WBP_ComboBox_02_CM_Menu_Interface_C_SetActiveSelectedAppearance) == 0x000020, "Wrong size on WBP_ComboBox_02_CM_Menu_Interface_C_SetActiveSelectedAppearance");
static_assert(offsetof(WBP_ComboBox_02_CM_Menu_Interface_C_SetActiveSelectedAppearance, InText) == 0x000000, "Member 'WBP_ComboBox_02_CM_Menu_Interface_C_SetActiveSelectedAppearance::InText' has a wrong offset!");
static_assert(offsetof(WBP_ComboBox_02_CM_Menu_Interface_C_SetActiveSelectedAppearance, InJustification) == 0x000018, "Member 'WBP_ComboBox_02_CM_Menu_Interface_C_SetActiveSelectedAppearance::InJustification' has a wrong offset!");

// Function WBP_ComboBox_02_CM_Menu_Interface.WBP_ComboBox_02_CM_Menu_Interface_C.SetOptions
// 0x0010 (0x0010 - 0x0000)
struct WBP_ComboBox_02_CM_Menu_Interface_C_SetOptions final
{
public:
	TArray<class FText>                           Options;                                           // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(WBP_ComboBox_02_CM_Menu_Interface_C_SetOptions) == 0x000008, "Wrong alignment on WBP_ComboBox_02_CM_Menu_Interface_C_SetOptions");
static_assert(sizeof(WBP_ComboBox_02_CM_Menu_Interface_C_SetOptions) == 0x000010, "Wrong size on WBP_ComboBox_02_CM_Menu_Interface_C_SetOptions");
static_assert(offsetof(WBP_ComboBox_02_CM_Menu_Interface_C_SetOptions, Options) == 0x000000, "Member 'WBP_ComboBox_02_CM_Menu_Interface_C_SetOptions::Options' has a wrong offset!");

// Function WBP_ComboBox_02_CM_Menu_Interface.WBP_ComboBox_02_CM_Menu_Interface_C.SetSelectedSlot
// 0x0004 (0x0004 - 0x0000)
struct WBP_ComboBox_02_CM_Menu_Interface_C_SetSelectedSlot final
{
public:
	int32                                         SelectedSlot;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ComboBox_02_CM_Menu_Interface_C_SetSelectedSlot) == 0x000004, "Wrong alignment on WBP_ComboBox_02_CM_Menu_Interface_C_SetSelectedSlot");
static_assert(sizeof(WBP_ComboBox_02_CM_Menu_Interface_C_SetSelectedSlot) == 0x000004, "Wrong size on WBP_ComboBox_02_CM_Menu_Interface_C_SetSelectedSlot");
static_assert(offsetof(WBP_ComboBox_02_CM_Menu_Interface_C_SetSelectedSlot, SelectedSlot) == 0x000000, "Member 'WBP_ComboBox_02_CM_Menu_Interface_C_SetSelectedSlot::SelectedSlot' has a wrong offset!");

// Function WBP_ComboBox_02_CM_Menu_Interface.WBP_ComboBox_02_CM_Menu_Interface_C.SetUseScrollbar
// 0x0001 (0x0001 - 0x0000)
struct WBP_ComboBox_02_CM_Menu_Interface_C_SetUseScrollbar final
{
public:
	bool                                          UseScrollbar;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ComboBox_02_CM_Menu_Interface_C_SetUseScrollbar) == 0x000001, "Wrong alignment on WBP_ComboBox_02_CM_Menu_Interface_C_SetUseScrollbar");
static_assert(sizeof(WBP_ComboBox_02_CM_Menu_Interface_C_SetUseScrollbar) == 0x000001, "Wrong size on WBP_ComboBox_02_CM_Menu_Interface_C_SetUseScrollbar");
static_assert(offsetof(WBP_ComboBox_02_CM_Menu_Interface_C_SetUseScrollbar, UseScrollbar) == 0x000000, "Member 'WBP_ComboBox_02_CM_Menu_Interface_C_SetUseScrollbar::UseScrollbar' has a wrong offset!");

}

