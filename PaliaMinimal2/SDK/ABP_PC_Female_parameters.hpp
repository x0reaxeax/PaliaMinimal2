#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ABP_PC_Female

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "Palia_structs.hpp"


namespace SDK::Params
{

// Function ABP_PC_Female.ABP_PC_Female_C.AnimGraph
// 0x0010 (0x0010 - 0x0000)
struct ABP_PC_Female_C_AnimGraph final
{
public:
	struct FPoseLink                              Param_AnimGraph;                                   // 0x0000(0x0010)(Parm, OutParm, NoDestructor)
};
static_assert(alignof(ABP_PC_Female_C_AnimGraph) == 0x000008, "Wrong alignment on ABP_PC_Female_C_AnimGraph");
static_assert(sizeof(ABP_PC_Female_C_AnimGraph) == 0x000010, "Wrong size on ABP_PC_Female_C_AnimGraph");
static_assert(offsetof(ABP_PC_Female_C_AnimGraph, Param_AnimGraph) == 0x000000, "Member 'ABP_PC_Female_C_AnimGraph::Param_AnimGraph' has a wrong offset!");

// Function ABP_PC_Female.ABP_PC_Female_C.BlueprintThreadSafeUpdateAnimation
// 0x0088 (0x0088 - 0x0000)
struct ABP_PC_Female_C_BlueprintThreadSafeUpdateAnimation final
{
public:
	float                                         Param_DeltaTime;                                   // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_VectorVector_ReturnValue;      // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_VectorVector_ReturnValue_1;    // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue;          // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue_1;        // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue_2;        // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue_3;        // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue_4;        // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue_5;        // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue_6;        // 0x000E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x000F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue_7;        // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_2;                  // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_3;                  // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_4;                  // 0x0013(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_5;                  // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_6;                  // 0x0015(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_7;                  // 0x0016(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_8;                  // 0x0017(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue;              // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x0028(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	double                                        CallFunc_FInterpTo_ReturnValue;                    // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FInterpTo_ReturnValue_1;                  // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FInterpTo_ReturnValue_2;                  // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FInterpTo_ReturnValue_3;                  // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FInterpTo_DeltaTime_ImplicitCast;         // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FInterpTo_DeltaTime_ImplicitCast_1;       // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FInterpTo_DeltaTime_ImplicitCast_2;       // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FInterpTo_DeltaTime_ImplicitCast_3;       // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeRotator_Yaw_ImplicitCast;             // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ABP_PC_Female_C_BlueprintThreadSafeUpdateAnimation) == 0x000008, "Wrong alignment on ABP_PC_Female_C_BlueprintThreadSafeUpdateAnimation");
static_assert(sizeof(ABP_PC_Female_C_BlueprintThreadSafeUpdateAnimation) == 0x000088, "Wrong size on ABP_PC_Female_C_BlueprintThreadSafeUpdateAnimation");
static_assert(offsetof(ABP_PC_Female_C_BlueprintThreadSafeUpdateAnimation, Param_DeltaTime) == 0x000000, "Member 'ABP_PC_Female_C_BlueprintThreadSafeUpdateAnimation::Param_DeltaTime' has a wrong offset!");
static_assert(offsetof(ABP_PC_Female_C_BlueprintThreadSafeUpdateAnimation, CallFunc_EqualEqual_VectorVector_ReturnValue) == 0x000004, "Member 'ABP_PC_Female_C_BlueprintThreadSafeUpdateAnimation::CallFunc_EqualEqual_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_PC_Female_C_BlueprintThreadSafeUpdateAnimation, CallFunc_EqualEqual_VectorVector_ReturnValue_1) == 0x000005, "Member 'ABP_PC_Female_C_BlueprintThreadSafeUpdateAnimation::CallFunc_EqualEqual_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ABP_PC_Female_C_BlueprintThreadSafeUpdateAnimation, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000006, "Member 'ABP_PC_Female_C_BlueprintThreadSafeUpdateAnimation::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_PC_Female_C_BlueprintThreadSafeUpdateAnimation, CallFunc_EqualEqual_NameName_ReturnValue) == 0x000007, "Member 'ABP_PC_Female_C_BlueprintThreadSafeUpdateAnimation::CallFunc_EqualEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_PC_Female_C_BlueprintThreadSafeUpdateAnimation, CallFunc_EqualEqual_NameName_ReturnValue_1) == 0x000008, "Member 'ABP_PC_Female_C_BlueprintThreadSafeUpdateAnimation::CallFunc_EqualEqual_NameName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ABP_PC_Female_C_BlueprintThreadSafeUpdateAnimation, CallFunc_EqualEqual_NameName_ReturnValue_2) == 0x000009, "Member 'ABP_PC_Female_C_BlueprintThreadSafeUpdateAnimation::CallFunc_EqualEqual_NameName_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ABP_PC_Female_C_BlueprintThreadSafeUpdateAnimation, CallFunc_EqualEqual_NameName_ReturnValue_3) == 0x00000A, "Member 'ABP_PC_Female_C_BlueprintThreadSafeUpdateAnimation::CallFunc_EqualEqual_NameName_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(ABP_PC_Female_C_BlueprintThreadSafeUpdateAnimation, CallFunc_EqualEqual_NameName_ReturnValue_4) == 0x00000B, "Member 'ABP_PC_Female_C_BlueprintThreadSafeUpdateAnimation::CallFunc_EqualEqual_NameName_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(ABP_PC_Female_C_BlueprintThreadSafeUpdateAnimation, CallFunc_EqualEqual_NameName_ReturnValue_5) == 0x00000C, "Member 'ABP_PC_Female_C_BlueprintThreadSafeUpdateAnimation::CallFunc_EqualEqual_NameName_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(ABP_PC_Female_C_BlueprintThreadSafeUpdateAnimation, CallFunc_BooleanOR_ReturnValue) == 0x00000D, "Member 'ABP_PC_Female_C_BlueprintThreadSafeUpdateAnimation::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_PC_Female_C_BlueprintThreadSafeUpdateAnimation, CallFunc_EqualEqual_NameName_ReturnValue_6) == 0x00000E, "Member 'ABP_PC_Female_C_BlueprintThreadSafeUpdateAnimation::CallFunc_EqualEqual_NameName_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(ABP_PC_Female_C_BlueprintThreadSafeUpdateAnimation, CallFunc_BooleanOR_ReturnValue_1) == 0x00000F, "Member 'ABP_PC_Female_C_BlueprintThreadSafeUpdateAnimation::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ABP_PC_Female_C_BlueprintThreadSafeUpdateAnimation, CallFunc_EqualEqual_NameName_ReturnValue_7) == 0x000010, "Member 'ABP_PC_Female_C_BlueprintThreadSafeUpdateAnimation::CallFunc_EqualEqual_NameName_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(ABP_PC_Female_C_BlueprintThreadSafeUpdateAnimation, CallFunc_BooleanOR_ReturnValue_2) == 0x000011, "Member 'ABP_PC_Female_C_BlueprintThreadSafeUpdateAnimation::CallFunc_BooleanOR_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ABP_PC_Female_C_BlueprintThreadSafeUpdateAnimation, CallFunc_BooleanOR_ReturnValue_3) == 0x000012, "Member 'ABP_PC_Female_C_BlueprintThreadSafeUpdateAnimation::CallFunc_BooleanOR_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(ABP_PC_Female_C_BlueprintThreadSafeUpdateAnimation, CallFunc_BooleanOR_ReturnValue_4) == 0x000013, "Member 'ABP_PC_Female_C_BlueprintThreadSafeUpdateAnimation::CallFunc_BooleanOR_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(ABP_PC_Female_C_BlueprintThreadSafeUpdateAnimation, CallFunc_BooleanOR_ReturnValue_5) == 0x000014, "Member 'ABP_PC_Female_C_BlueprintThreadSafeUpdateAnimation::CallFunc_BooleanOR_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(ABP_PC_Female_C_BlueprintThreadSafeUpdateAnimation, CallFunc_BooleanOR_ReturnValue_6) == 0x000015, "Member 'ABP_PC_Female_C_BlueprintThreadSafeUpdateAnimation::CallFunc_BooleanOR_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(ABP_PC_Female_C_BlueprintThreadSafeUpdateAnimation, CallFunc_BooleanOR_ReturnValue_7) == 0x000016, "Member 'ABP_PC_Female_C_BlueprintThreadSafeUpdateAnimation::CallFunc_BooleanOR_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(ABP_PC_Female_C_BlueprintThreadSafeUpdateAnimation, CallFunc_BooleanOR_ReturnValue_8) == 0x000017, "Member 'ABP_PC_Female_C_BlueprintThreadSafeUpdateAnimation::CallFunc_BooleanOR_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(ABP_PC_Female_C_BlueprintThreadSafeUpdateAnimation, CallFunc_MapRangeClamped_ReturnValue) == 0x000018, "Member 'ABP_PC_Female_C_BlueprintThreadSafeUpdateAnimation::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_PC_Female_C_BlueprintThreadSafeUpdateAnimation, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000020, "Member 'ABP_PC_Female_C_BlueprintThreadSafeUpdateAnimation::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_PC_Female_C_BlueprintThreadSafeUpdateAnimation, CallFunc_MakeRotator_ReturnValue) == 0x000028, "Member 'ABP_PC_Female_C_BlueprintThreadSafeUpdateAnimation::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_PC_Female_C_BlueprintThreadSafeUpdateAnimation, CallFunc_FInterpTo_ReturnValue) == 0x000040, "Member 'ABP_PC_Female_C_BlueprintThreadSafeUpdateAnimation::CallFunc_FInterpTo_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_PC_Female_C_BlueprintThreadSafeUpdateAnimation, CallFunc_FInterpTo_ReturnValue_1) == 0x000048, "Member 'ABP_PC_Female_C_BlueprintThreadSafeUpdateAnimation::CallFunc_FInterpTo_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ABP_PC_Female_C_BlueprintThreadSafeUpdateAnimation, CallFunc_FInterpTo_ReturnValue_2) == 0x000050, "Member 'ABP_PC_Female_C_BlueprintThreadSafeUpdateAnimation::CallFunc_FInterpTo_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ABP_PC_Female_C_BlueprintThreadSafeUpdateAnimation, CallFunc_FInterpTo_ReturnValue_3) == 0x000058, "Member 'ABP_PC_Female_C_BlueprintThreadSafeUpdateAnimation::CallFunc_FInterpTo_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(ABP_PC_Female_C_BlueprintThreadSafeUpdateAnimation, CallFunc_FInterpTo_DeltaTime_ImplicitCast) == 0x000060, "Member 'ABP_PC_Female_C_BlueprintThreadSafeUpdateAnimation::CallFunc_FInterpTo_DeltaTime_ImplicitCast' has a wrong offset!");
static_assert(offsetof(ABP_PC_Female_C_BlueprintThreadSafeUpdateAnimation, CallFunc_FInterpTo_DeltaTime_ImplicitCast_1) == 0x000068, "Member 'ABP_PC_Female_C_BlueprintThreadSafeUpdateAnimation::CallFunc_FInterpTo_DeltaTime_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(ABP_PC_Female_C_BlueprintThreadSafeUpdateAnimation, CallFunc_FInterpTo_DeltaTime_ImplicitCast_2) == 0x000070, "Member 'ABP_PC_Female_C_BlueprintThreadSafeUpdateAnimation::CallFunc_FInterpTo_DeltaTime_ImplicitCast_2' has a wrong offset!");
static_assert(offsetof(ABP_PC_Female_C_BlueprintThreadSafeUpdateAnimation, CallFunc_FInterpTo_DeltaTime_ImplicitCast_3) == 0x000078, "Member 'ABP_PC_Female_C_BlueprintThreadSafeUpdateAnimation::CallFunc_FInterpTo_DeltaTime_ImplicitCast_3' has a wrong offset!");
static_assert(offsetof(ABP_PC_Female_C_BlueprintThreadSafeUpdateAnimation, CallFunc_MakeRotator_Yaw_ImplicitCast) == 0x000080, "Member 'ABP_PC_Female_C_BlueprintThreadSafeUpdateAnimation::CallFunc_MakeRotator_Yaw_ImplicitCast' has a wrong offset!");

// Function ABP_PC_Female.ABP_PC_Female_C.ExecuteUbergraph_ABP_PC_Female
// 0x0370 (0x0370 - 0x0000)
struct ABP_PC_Female_C_ExecuteUbergraph_ABP_PC_Female final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_GameplayTag_ReturnValue;       // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_GameplayTag_ReturnValue_1;     // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_GameplayTag_ReturnValue_2;     // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_GameplayTag_ReturnValue_3;     // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_467F[0x6];                                     // 0x000A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetHandIKLocation_Hit_Location;           // 0x0010(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetHandIKLocation_HasHitWall;             // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4680[0x7];                                     // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetHandIKLocation_TraceOutNormal1;        // 0x0030(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_ReturnValue;                         // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetHandIKLocation_Hit_Location_1;         // 0x0050(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetHandIKLocation_HasHitWall_1;           // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4681[0x7];                                     // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetHandIKLocation_TraceOutNormal1_1;      // 0x0070(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_GameplayTag_ReturnValue;         // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_GameplayTag_ReturnValue_1;       // 0x0089(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x008A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_GameplayTag_ReturnValue_2;       // 0x008B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_GameplayTag_ReturnValue_3;       // 0x008C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x008D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NearlyEqual_FloatFloat_ReturnValue;       // 0x008E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_GameplayTag_ReturnValue_4;       // 0x008F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_GameplayTag_ReturnValue_5;       // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_GameplayTag_ReturnValue_4;     // 0x0091(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_GameplayTag_ReturnValue_5;     // 0x0092(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_GameplayTag_ReturnValue_6;     // 0x0093(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_GameplayTag_ReturnValue_7;     // 0x0094(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_2;                  // 0x0095(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsGameplayTagValid_ReturnValue;           // 0x0096(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0097(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_GameplayTag_ReturnValue_6;       // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_GameplayTag_ReturnValue_8;     // 0x0099(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_3;                  // 0x009A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsGameplayTagValid_ReturnValue_1;         // 0x009B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x009C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_GameplayTag_ReturnValue_9;     // 0x009D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_GameplayTag_ReturnValue_10;    // 0x009E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_4;                  // 0x009F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue;            // 0x00A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x00A2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x00A3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_GameplayTag_ReturnValue_11;    // 0x00A4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x00A5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_3;                // 0x00A6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4682[0x1];                                     // 0x00A7(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   Temp_name_Variable;                                // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue_1;          // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4683[0x3];                                     // 0x00B1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   Temp_name_Variable_1;                              // 0x00B4(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x00BC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x00BD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue_1;          // 0x00BE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_DoubleDouble_ReturnValue;    // 0x00BF(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue_2;          // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4684[0x7];                                     // 0x00C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4685[0x3];                                     // 0x00D1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   Temp_name_Variable_2;                              // 0x00D4(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_3;                              // 0x00DC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4686[0x3];                                     // 0x00DD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_Select_Default;                             // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_BoolToDouble_ReturnValue;            // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_4;                              // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x00F1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4687[0x2];                                     // 0x00F2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   Temp_name_Variable_3;                              // 0x00F4(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue_3;          // 0x00FC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4688[0x3];                                     // 0x00FD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_Select_Default_1;                           // 0x0100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetClimbDirectionAxisValues_OutX;         // 0x0108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetClimbDirectionAxisValues_OutY;         // 0x0110(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_VEase_ReturnValue;                        // 0x0118(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_5;                  // 0x0130(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_4;                // 0x0131(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4689[0x6];                                     // 0x0132(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_VEase_ReturnValue_1;                      // 0x0138(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_5;                // 0x0150(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_5;                              // 0x0151(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_468A[0x6];                                     // 0x0152(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UValeriaGASComponent*                   CallFunc_GetGAS_ReturnValue;                       // 0x0158(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UEquipmentComponent*                    CallFunc_GetEquipment_ReturnValue;                 // 0x0160(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FEquipmentItem                         CallFunc_GetEquippedItem_ReturnValue;              // 0x0168(0x0050)()
	class APawn*                                  CallFunc_TryGetPawnOwner_ReturnValue;              // 0x01B8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AEquipViewActor*                        CallFunc_Array_Get_Item;                           // 0x01C0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	EValeriaFuncResult                            CallFunc_GetValeriaCharacter_OutResult;            // 0x01C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_468B[0x7];                                     // 0x01C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AValeriaCharacter*                      CallFunc_GetValeriaCharacter_ReturnValue;          // 0x01D0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_Bow_EquipView_C*                    K2Node_DynamicCast_AsBP_Bow_Equip_View;            // 0x01D8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x01E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_468C[0x7];                                     // 0x01E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UFishingComponent*                      CallFunc_GetFishing_ReturnValue;                   // 0x01E8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x01F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_468D[0x3];                                     // 0x01F1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   Temp_name_Variable_4;                              // 0x01F4(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_5;                              // 0x01FC(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsIKEnabled_IsEnabled;                    // 0x0204(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsIKEnabled_IsEnabled_1;                  // 0x0205(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_468E[0x2];                                     // 0x0206(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_Select_Default_2;                           // 0x0208(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetSocketLocation_ReturnValue;            // 0x0210(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetSocketLocation_ReturnValue_1;          // 0x0228(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_6;                  // 0x0240(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_7;                  // 0x0241(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_468F[0x2];                                     // 0x0242(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetRelevantAnimTimeRemaining_ReturnValue; // 0x0244(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_DoubleDouble_ReturnValue;       // 0x0248(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_2;        // 0x0249(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x024A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_6;                // 0x024B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_3;                 // 0x024C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_4;                 // 0x024D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_7;                // 0x024E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4690[0x1];                                     // 0x024F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_GetSocketRotation_ReturnValue;            // 0x0250(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_GetSocketRotation_ReturnValue_1;          // 0x0268(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_GetRightVector_ReturnValue;               // 0x0280(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetRightVector_ReturnValue_1;             // 0x0298(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_AngleBetween_ReturnValue;                 // 0x02B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4691[0x4];                                     // 0x02B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue;        // 0x02B8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Cross_VectorVector_ReturnValue;           // 0x02D0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_RotatorFromAxisAndAngle_ReturnValue;      // 0x02E8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_Cross_VectorVector_ReturnValue_1;         // 0x0300(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_AngleBetween_ReturnValue_1;               // 0x0318(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4692[0x4];                                     // 0x031C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_RotatorFromAxisAndAngle_ReturnValue_1;    // 0x0320(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_3;        // 0x0338(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_4;        // 0x0339(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_5;                 // 0x033A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_6;                 // 0x033B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_7;                 // 0x033C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_8;                 // 0x033D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4693[0x2];                                     // 0x033E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_StructMemberSet_ExplicitTime_ImplicitCast;  // 0x0340(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_StructMemberSet_Alpha_ImplicitCast;         // 0x0344(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_StructMemberSet___FloatProperty_2_ImplicitCast; // 0x0348(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_StructMemberSet___FloatProperty_1_ImplicitCast; // 0x034C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_StructMemberSet_Alpha_ImplicitCast_1;       // 0x0350(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_StructMemberSet_X_ImplicitCast;             // 0x0354(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_StructMemberSet_Y_ImplicitCast;             // 0x0358(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4694[0x4];                                     // 0x035C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_LessEqual_DoubleDouble_A_ImplicitCast;    // 0x0360(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_StructMemberSet_X_ImplicitCast_1;           // 0x0368(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_StructMemberSet_Y_ImplicitCast_1;           // 0x036C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ABP_PC_Female_C_ExecuteUbergraph_ABP_PC_Female) == 0x000008, "Wrong alignment on ABP_PC_Female_C_ExecuteUbergraph_ABP_PC_Female");
static_assert(sizeof(ABP_PC_Female_C_ExecuteUbergraph_ABP_PC_Female) == 0x000370, "Wrong size on ABP_PC_Female_C_ExecuteUbergraph_ABP_PC_Female");
static_assert(offsetof(ABP_PC_Female_C_ExecuteUbergraph_ABP_PC_Female, EntryPoint) == 0x000000, "Member 'ABP_PC_Female_C_ExecuteUbergraph_ABP_PC_Female::EntryPoint' has a wrong offset!");
static_assert(offsetof(ABP_PC_Female_C_ExecuteUbergraph_ABP_PC_Female, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000004, "Member 'ABP_PC_Female_C_ExecuteUbergraph_ABP_PC_Female::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_PC_Female_C_ExecuteUbergraph_ABP_PC_Female, CallFunc_EqualEqual_GameplayTag_ReturnValue) == 0x000005, "Member 'ABP_PC_Female_C_ExecuteUbergraph_ABP_PC_Female::CallFunc_EqualEqual_GameplayTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_PC_Female_C_ExecuteUbergraph_ABP_PC_Female, CallFunc_EqualEqual_GameplayTag_ReturnValue_1) == 0x000006, "Member 'ABP_PC_Female_C_ExecuteUbergraph_ABP_PC_Female::CallFunc_EqualEqual_GameplayTag_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ABP_PC_Female_C_ExecuteUbergraph_ABP_PC_Female, CallFunc_EqualEqual_GameplayTag_ReturnValue_2) == 0x000007, "Member 'ABP_PC_Female_C_ExecuteUbergraph_ABP_PC_Female::CallFunc_EqualEqual_GameplayTag_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ABP_PC_Female_C_ExecuteUbergraph_ABP_PC_Female, CallFunc_EqualEqual_GameplayTag_ReturnValue_3) == 0x000008, "Member 'ABP_PC_Female_C_ExecuteUbergraph_ABP_PC_Female::CallFunc_EqualEqual_GameplayTag_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(ABP_PC_Female_C_ExecuteUbergraph_ABP_PC_Female, CallFunc_BooleanOR_ReturnValue) == 0x000009, "Member 'ABP_PC_Female_C_ExecuteUbergraph_ABP_PC_Female::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_PC_Female_C_ExecuteUbergraph_ABP_PC_Female, CallFunc_GetHandIKLocation_Hit_Location) == 0x000010, "Member 'ABP_PC_Female_C_ExecuteUbergraph_ABP_PC_Female::CallFunc_GetHandIKLocation_Hit_Location' has a wrong offset!");
static_assert(offsetof(ABP_PC_Female_C_ExecuteUbergraph_ABP_PC_Female, CallFunc_GetHandIKLocation_HasHitWall) == 0x000028, "Member 'ABP_PC_Female_C_ExecuteUbergraph_ABP_PC_Female::CallFunc_GetHandIKLocation_HasHitWall' has a wrong offset!");
static_assert(offsetof(ABP_PC_Female_C_ExecuteUbergraph_ABP_PC_Female, CallFunc_GetHandIKLocation_TraceOutNormal1) == 0x000030, "Member 'ABP_PC_Female_C_ExecuteUbergraph_ABP_PC_Female::CallFunc_GetHandIKLocation_TraceOutNormal1' has a wrong offset!");
static_assert(offsetof(ABP_PC_Female_C_ExecuteUbergraph_ABP_PC_Female, CallFunc_Lerp_ReturnValue) == 0x000048, "Member 'ABP_PC_Female_C_ExecuteUbergraph_ABP_PC_Female::CallFunc_Lerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_PC_Female_C_ExecuteUbergraph_ABP_PC_Female, CallFunc_GetHandIKLocation_Hit_Location_1) == 0x000050, "Member 'ABP_PC_Female_C_ExecuteUbergraph_ABP_PC_Female::CallFunc_GetHandIKLocation_Hit_Location_1' has a wrong offset!");
static_assert(offsetof(ABP_PC_Female_C_ExecuteUbergraph_ABP_PC_Female, CallFunc_GetHandIKLocation_HasHitWall_1) == 0x000068, "Member 'ABP_PC_Female_C_ExecuteUbergraph_ABP_PC_Female::CallFunc_GetHandIKLocation_HasHitWall_1' has a wrong offset!");
static_assert(offsetof(ABP_PC_Female_C_ExecuteUbergraph_ABP_PC_Female, CallFunc_GetHandIKLocation_TraceOutNormal1_1) == 0x000070, "Member 'ABP_PC_Female_C_ExecuteUbergraph_ABP_PC_Female::CallFunc_GetHandIKLocation_TraceOutNormal1_1' has a wrong offset!");
static_assert(offsetof(ABP_PC_Female_C_ExecuteUbergraph_ABP_PC_Female, CallFunc_NotEqual_GameplayTag_ReturnValue) == 0x000088, "Member 'ABP_PC_Female_C_ExecuteUbergraph_ABP_PC_Female::CallFunc_NotEqual_GameplayTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_PC_Female_C_ExecuteUbergraph_ABP_PC_Female, CallFunc_NotEqual_GameplayTag_ReturnValue_1) == 0x000089, "Member 'ABP_PC_Female_C_ExecuteUbergraph_ABP_PC_Female::CallFunc_NotEqual_GameplayTag_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ABP_PC_Female_C_ExecuteUbergraph_ABP_PC_Female, CallFunc_BooleanOR_ReturnValue_1) == 0x00008A, "Member 'ABP_PC_Female_C_ExecuteUbergraph_ABP_PC_Female::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ABP_PC_Female_C_ExecuteUbergraph_ABP_PC_Female, CallFunc_NotEqual_GameplayTag_ReturnValue_2) == 0x00008B, "Member 'ABP_PC_Female_C_ExecuteUbergraph_ABP_PC_Female::CallFunc_NotEqual_GameplayTag_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ABP_PC_Female_C_ExecuteUbergraph_ABP_PC_Female, CallFunc_NotEqual_GameplayTag_ReturnValue_3) == 0x00008C, "Member 'ABP_PC_Female_C_ExecuteUbergraph_ABP_PC_Female::CallFunc_NotEqual_GameplayTag_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(ABP_PC_Female_C_ExecuteUbergraph_ABP_PC_Female, CallFunc_Not_PreBool_ReturnValue) == 0x00008D, "Member 'ABP_PC_Female_C_ExecuteUbergraph_ABP_PC_Female::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_PC_Female_C_ExecuteUbergraph_ABP_PC_Female, CallFunc_NearlyEqual_FloatFloat_ReturnValue) == 0x00008E, "Member 'ABP_PC_Female_C_ExecuteUbergraph_ABP_PC_Female::CallFunc_NearlyEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_PC_Female_C_ExecuteUbergraph_ABP_PC_Female, CallFunc_NotEqual_GameplayTag_ReturnValue_4) == 0x00008F, "Member 'ABP_PC_Female_C_ExecuteUbergraph_ABP_PC_Female::CallFunc_NotEqual_GameplayTag_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(ABP_PC_Female_C_ExecuteUbergraph_ABP_PC_Female, CallFunc_NotEqual_GameplayTag_ReturnValue_5) == 0x000090, "Member 'ABP_PC_Female_C_ExecuteUbergraph_ABP_PC_Female::CallFunc_NotEqual_GameplayTag_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(ABP_PC_Female_C_ExecuteUbergraph_ABP_PC_Female, CallFunc_EqualEqual_GameplayTag_ReturnValue_4) == 0x000091, "Member 'ABP_PC_Female_C_ExecuteUbergraph_ABP_PC_Female::CallFunc_EqualEqual_GameplayTag_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(ABP_PC_Female_C_ExecuteUbergraph_ABP_PC_Female, CallFunc_EqualEqual_GameplayTag_ReturnValue_5) == 0x000092, "Member 'ABP_PC_Female_C_ExecuteUbergraph_ABP_PC_Female::CallFunc_EqualEqual_GameplayTag_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(ABP_PC_Female_C_ExecuteUbergraph_ABP_PC_Female, CallFunc_EqualEqual_GameplayTag_ReturnValue_6) == 0x000093, "Member 'ABP_PC_Female_C_ExecuteUbergraph_ABP_PC_Female::CallFunc_EqualEqual_GameplayTag_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(ABP_PC_Female_C_ExecuteUbergraph_ABP_PC_Female, CallFunc_EqualEqual_GameplayTag_ReturnValue_7) == 0x000094, "Member 'ABP_PC_Female_C_ExecuteUbergraph_ABP_PC_Female::CallFunc_EqualEqual_GameplayTag_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(ABP_PC_Female_C_ExecuteUbergraph_ABP_PC_Female, CallFunc_BooleanOR_ReturnValue_2) == 0x000095, "Member 'ABP_PC_Female_C_ExecuteUbergraph_ABP_PC_Female::CallFunc_BooleanOR_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ABP_PC_Female_C_ExecuteUbergraph_ABP_PC_Female, CallFunc_IsGameplayTagValid_ReturnValue) == 0x000096, "Member 'ABP_PC_Female_C_ExecuteUbergraph_ABP_PC_Female::CallFunc_IsGameplayTagValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_PC_Female_C_ExecuteUbergraph_ABP_PC_Female, CallFunc_Not_PreBool_ReturnValue_1) == 0x000097, "Member 'ABP_PC_Female_C_ExecuteUbergraph_ABP_PC_Female::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ABP_PC_Female_C_ExecuteUbergraph_ABP_PC_Female, CallFunc_NotEqual_GameplayTag_ReturnValue_6) == 0x000098, "Member 'ABP_PC_Female_C_ExecuteUbergraph_ABP_PC_Female::CallFunc_NotEqual_GameplayTag_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(ABP_PC_Female_C_ExecuteUbergraph_ABP_PC_Female, CallFunc_EqualEqual_GameplayTag_ReturnValue_8) == 0x000099, "Member 'ABP_PC_Female_C_ExecuteUbergraph_ABP_PC_Female::CallFunc_EqualEqual_GameplayTag_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(ABP_PC_Female_C_ExecuteUbergraph_ABP_PC_Female, CallFunc_BooleanOR_ReturnValue_3) == 0x00009A, "Member 'ABP_PC_Female_C_ExecuteUbergraph_ABP_PC_Female::CallFunc_BooleanOR_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(ABP_PC_Female_C_ExecuteUbergraph_ABP_PC_Female, CallFunc_IsGameplayTagValid_ReturnValue_1) == 0x00009B, "Member 'ABP_PC_Female_C_ExecuteUbergraph_ABP_PC_Female::CallFunc_IsGameplayTagValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ABP_PC_Female_C_ExecuteUbergraph_ABP_PC_Female, CallFunc_BooleanAND_ReturnValue) == 0x00009C, "Member 'ABP_PC_Female_C_ExecuteUbergraph_ABP_PC_Female::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_PC_Female_C_ExecuteUbergraph_ABP_PC_Female, CallFunc_EqualEqual_GameplayTag_ReturnValue_9) == 0x00009D, "Member 'ABP_PC_Female_C_ExecuteUbergraph_ABP_PC_Female::CallFunc_EqualEqual_GameplayTag_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(ABP_PC_Female_C_ExecuteUbergraph_ABP_PC_Female, CallFunc_EqualEqual_GameplayTag_ReturnValue_10) == 0x00009E, "Member 'ABP_PC_Female_C_ExecuteUbergraph_ABP_PC_Female::CallFunc_EqualEqual_GameplayTag_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(ABP_PC_Female_C_ExecuteUbergraph_ABP_PC_Female, CallFunc_BooleanOR_ReturnValue_4) == 0x00009F, "Member 'ABP_PC_Female_C_ExecuteUbergraph_ABP_PC_Female::CallFunc_BooleanOR_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(ABP_PC_Female_C_ExecuteUbergraph_ABP_PC_Female, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x0000A0, "Member 'ABP_PC_Female_C_ExecuteUbergraph_ABP_PC_Female::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ABP_PC_Female_C_ExecuteUbergraph_ABP_PC_Female, CallFunc_Less_DoubleDouble_ReturnValue) == 0x0000A1, "Member 'ABP_PC_Female_C_ExecuteUbergraph_ABP_PC_Female::CallFunc_Less_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_PC_Female_C_ExecuteUbergraph_ABP_PC_Female, CallFunc_Not_PreBool_ReturnValue_2) == 0x0000A2, "Member 'ABP_PC_Female_C_ExecuteUbergraph_ABP_PC_Female::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ABP_PC_Female_C_ExecuteUbergraph_ABP_PC_Female, CallFunc_BooleanAND_ReturnValue_1) == 0x0000A3, "Member 'ABP_PC_Female_C_ExecuteUbergraph_ABP_PC_Female::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ABP_PC_Female_C_ExecuteUbergraph_ABP_PC_Female, CallFunc_EqualEqual_GameplayTag_ReturnValue_11) == 0x0000A4, "Member 'ABP_PC_Female_C_ExecuteUbergraph_ABP_PC_Female::CallFunc_EqualEqual_GameplayTag_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(ABP_PC_Female_C_ExecuteUbergraph_ABP_PC_Female, Temp_bool_Variable) == 0x0000A5, "Member 'ABP_PC_Female_C_ExecuteUbergraph_ABP_PC_Female::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(ABP_PC_Female_C_ExecuteUbergraph_ABP_PC_Female, CallFunc_Not_PreBool_ReturnValue_3) == 0x0000A6, "Member 'ABP_PC_Female_C_ExecuteUbergraph_ABP_PC_Female::CallFunc_Not_PreBool_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(ABP_PC_Female_C_ExecuteUbergraph_ABP_PC_Female, Temp_name_Variable) == 0x0000A8, "Member 'ABP_PC_Female_C_ExecuteUbergraph_ABP_PC_Female::Temp_name_Variable' has a wrong offset!");
static_assert(offsetof(ABP_PC_Female_C_ExecuteUbergraph_ABP_PC_Female, CallFunc_Less_DoubleDouble_ReturnValue_1) == 0x0000B0, "Member 'ABP_PC_Female_C_ExecuteUbergraph_ABP_PC_Female::CallFunc_Less_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ABP_PC_Female_C_ExecuteUbergraph_ABP_PC_Female, Temp_name_Variable_1) == 0x0000B4, "Member 'ABP_PC_Female_C_ExecuteUbergraph_ABP_PC_Female::Temp_name_Variable_1' has a wrong offset!");
static_assert(offsetof(ABP_PC_Female_C_ExecuteUbergraph_ABP_PC_Female, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x0000BC, "Member 'ABP_PC_Female_C_ExecuteUbergraph_ABP_PC_Female::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_PC_Female_C_ExecuteUbergraph_ABP_PC_Female, Temp_bool_Variable_1) == 0x0000BD, "Member 'ABP_PC_Female_C_ExecuteUbergraph_ABP_PC_Female::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(ABP_PC_Female_C_ExecuteUbergraph_ABP_PC_Female, CallFunc_NotEqual_ByteByte_ReturnValue_1) == 0x0000BE, "Member 'ABP_PC_Female_C_ExecuteUbergraph_ABP_PC_Female::CallFunc_NotEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ABP_PC_Female_C_ExecuteUbergraph_ABP_PC_Female, CallFunc_GreaterEqual_DoubleDouble_ReturnValue) == 0x0000BF, "Member 'ABP_PC_Female_C_ExecuteUbergraph_ABP_PC_Female::CallFunc_GreaterEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_PC_Female_C_ExecuteUbergraph_ABP_PC_Female, CallFunc_NotEqual_ByteByte_ReturnValue_2) == 0x0000C0, "Member 'ABP_PC_Female_C_ExecuteUbergraph_ABP_PC_Female::CallFunc_NotEqual_ByteByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ABP_PC_Female_C_ExecuteUbergraph_ABP_PC_Female, CallFunc_SelectFloat_ReturnValue) == 0x0000C8, "Member 'ABP_PC_Female_C_ExecuteUbergraph_ABP_PC_Female::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_PC_Female_C_ExecuteUbergraph_ABP_PC_Female, Temp_bool_Variable_2) == 0x0000D0, "Member 'ABP_PC_Female_C_ExecuteUbergraph_ABP_PC_Female::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(ABP_PC_Female_C_ExecuteUbergraph_ABP_PC_Female, Temp_name_Variable_2) == 0x0000D4, "Member 'ABP_PC_Female_C_ExecuteUbergraph_ABP_PC_Female::Temp_name_Variable_2' has a wrong offset!");
static_assert(offsetof(ABP_PC_Female_C_ExecuteUbergraph_ABP_PC_Female, Temp_bool_Variable_3) == 0x0000DC, "Member 'ABP_PC_Female_C_ExecuteUbergraph_ABP_PC_Female::Temp_bool_Variable_3' has a wrong offset!");
static_assert(offsetof(ABP_PC_Female_C_ExecuteUbergraph_ABP_PC_Female, K2Node_Select_Default) == 0x0000E0, "Member 'ABP_PC_Female_C_ExecuteUbergraph_ABP_PC_Female::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(ABP_PC_Female_C_ExecuteUbergraph_ABP_PC_Female, CallFunc_Conv_BoolToDouble_ReturnValue) == 0x0000E8, "Member 'ABP_PC_Female_C_ExecuteUbergraph_ABP_PC_Female::CallFunc_Conv_BoolToDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_PC_Female_C_ExecuteUbergraph_ABP_PC_Female, Temp_bool_Variable_4) == 0x0000F0, "Member 'ABP_PC_Female_C_ExecuteUbergraph_ABP_PC_Female::Temp_bool_Variable_4' has a wrong offset!");
static_assert(offsetof(ABP_PC_Female_C_ExecuteUbergraph_ABP_PC_Female, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x0000F1, "Member 'ABP_PC_Female_C_ExecuteUbergraph_ABP_PC_Female::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_PC_Female_C_ExecuteUbergraph_ABP_PC_Female, Temp_name_Variable_3) == 0x0000F4, "Member 'ABP_PC_Female_C_ExecuteUbergraph_ABP_PC_Female::Temp_name_Variable_3' has a wrong offset!");
static_assert(offsetof(ABP_PC_Female_C_ExecuteUbergraph_ABP_PC_Female, CallFunc_NotEqual_ByteByte_ReturnValue_3) == 0x0000FC, "Member 'ABP_PC_Female_C_ExecuteUbergraph_ABP_PC_Female::CallFunc_NotEqual_ByteByte_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(ABP_PC_Female_C_ExecuteUbergraph_ABP_PC_Female, K2Node_Select_Default_1) == 0x000100, "Member 'ABP_PC_Female_C_ExecuteUbergraph_ABP_PC_Female::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(ABP_PC_Female_C_ExecuteUbergraph_ABP_PC_Female, CallFunc_GetClimbDirectionAxisValues_OutX) == 0x000108, "Member 'ABP_PC_Female_C_ExecuteUbergraph_ABP_PC_Female::CallFunc_GetClimbDirectionAxisValues_OutX' has a wrong offset!");
static_assert(offsetof(ABP_PC_Female_C_ExecuteUbergraph_ABP_PC_Female, CallFunc_GetClimbDirectionAxisValues_OutY) == 0x000110, "Member 'ABP_PC_Female_C_ExecuteUbergraph_ABP_PC_Female::CallFunc_GetClimbDirectionAxisValues_OutY' has a wrong offset!");
static_assert(offsetof(ABP_PC_Female_C_ExecuteUbergraph_ABP_PC_Female, CallFunc_VEase_ReturnValue) == 0x000118, "Member 'ABP_PC_Female_C_ExecuteUbergraph_ABP_PC_Female::CallFunc_VEase_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_PC_Female_C_ExecuteUbergraph_ABP_PC_Female, CallFunc_BooleanOR_ReturnValue_5) == 0x000130, "Member 'ABP_PC_Female_C_ExecuteUbergraph_ABP_PC_Female::CallFunc_BooleanOR_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(ABP_PC_Female_C_ExecuteUbergraph_ABP_PC_Female, CallFunc_Not_PreBool_ReturnValue_4) == 0x000131, "Member 'ABP_PC_Female_C_ExecuteUbergraph_ABP_PC_Female::CallFunc_Not_PreBool_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(ABP_PC_Female_C_ExecuteUbergraph_ABP_PC_Female, CallFunc_VEase_ReturnValue_1) == 0x000138, "Member 'ABP_PC_Female_C_ExecuteUbergraph_ABP_PC_Female::CallFunc_VEase_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ABP_PC_Female_C_ExecuteUbergraph_ABP_PC_Female, CallFunc_Not_PreBool_ReturnValue_5) == 0x000150, "Member 'ABP_PC_Female_C_ExecuteUbergraph_ABP_PC_Female::CallFunc_Not_PreBool_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(ABP_PC_Female_C_ExecuteUbergraph_ABP_PC_Female, Temp_bool_Variable_5) == 0x000151, "Member 'ABP_PC_Female_C_ExecuteUbergraph_ABP_PC_Female::Temp_bool_Variable_5' has a wrong offset!");
static_assert(offsetof(ABP_PC_Female_C_ExecuteUbergraph_ABP_PC_Female, CallFunc_GetGAS_ReturnValue) == 0x000158, "Member 'ABP_PC_Female_C_ExecuteUbergraph_ABP_PC_Female::CallFunc_GetGAS_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_PC_Female_C_ExecuteUbergraph_ABP_PC_Female, CallFunc_GetEquipment_ReturnValue) == 0x000160, "Member 'ABP_PC_Female_C_ExecuteUbergraph_ABP_PC_Female::CallFunc_GetEquipment_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_PC_Female_C_ExecuteUbergraph_ABP_PC_Female, CallFunc_GetEquippedItem_ReturnValue) == 0x000168, "Member 'ABP_PC_Female_C_ExecuteUbergraph_ABP_PC_Female::CallFunc_GetEquippedItem_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_PC_Female_C_ExecuteUbergraph_ABP_PC_Female, CallFunc_TryGetPawnOwner_ReturnValue) == 0x0001B8, "Member 'ABP_PC_Female_C_ExecuteUbergraph_ABP_PC_Female::CallFunc_TryGetPawnOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_PC_Female_C_ExecuteUbergraph_ABP_PC_Female, CallFunc_Array_Get_Item) == 0x0001C0, "Member 'ABP_PC_Female_C_ExecuteUbergraph_ABP_PC_Female::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(ABP_PC_Female_C_ExecuteUbergraph_ABP_PC_Female, CallFunc_GetValeriaCharacter_OutResult) == 0x0001C8, "Member 'ABP_PC_Female_C_ExecuteUbergraph_ABP_PC_Female::CallFunc_GetValeriaCharacter_OutResult' has a wrong offset!");
static_assert(offsetof(ABP_PC_Female_C_ExecuteUbergraph_ABP_PC_Female, CallFunc_GetValeriaCharacter_ReturnValue) == 0x0001D0, "Member 'ABP_PC_Female_C_ExecuteUbergraph_ABP_PC_Female::CallFunc_GetValeriaCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_PC_Female_C_ExecuteUbergraph_ABP_PC_Female, K2Node_DynamicCast_AsBP_Bow_Equip_View) == 0x0001D8, "Member 'ABP_PC_Female_C_ExecuteUbergraph_ABP_PC_Female::K2Node_DynamicCast_AsBP_Bow_Equip_View' has a wrong offset!");
static_assert(offsetof(ABP_PC_Female_C_ExecuteUbergraph_ABP_PC_Female, K2Node_DynamicCast_bSuccess) == 0x0001E0, "Member 'ABP_PC_Female_C_ExecuteUbergraph_ABP_PC_Female::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(ABP_PC_Female_C_ExecuteUbergraph_ABP_PC_Female, CallFunc_GetFishing_ReturnValue) == 0x0001E8, "Member 'ABP_PC_Female_C_ExecuteUbergraph_ABP_PC_Female::CallFunc_GetFishing_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_PC_Female_C_ExecuteUbergraph_ABP_PC_Female, K2Node_SwitchEnum_CmpSuccess) == 0x0001F0, "Member 'ABP_PC_Female_C_ExecuteUbergraph_ABP_PC_Female::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(ABP_PC_Female_C_ExecuteUbergraph_ABP_PC_Female, Temp_name_Variable_4) == 0x0001F4, "Member 'ABP_PC_Female_C_ExecuteUbergraph_ABP_PC_Female::Temp_name_Variable_4' has a wrong offset!");
static_assert(offsetof(ABP_PC_Female_C_ExecuteUbergraph_ABP_PC_Female, Temp_name_Variable_5) == 0x0001FC, "Member 'ABP_PC_Female_C_ExecuteUbergraph_ABP_PC_Female::Temp_name_Variable_5' has a wrong offset!");
static_assert(offsetof(ABP_PC_Female_C_ExecuteUbergraph_ABP_PC_Female, CallFunc_IsIKEnabled_IsEnabled) == 0x000204, "Member 'ABP_PC_Female_C_ExecuteUbergraph_ABP_PC_Female::CallFunc_IsIKEnabled_IsEnabled' has a wrong offset!");
static_assert(offsetof(ABP_PC_Female_C_ExecuteUbergraph_ABP_PC_Female, CallFunc_IsIKEnabled_IsEnabled_1) == 0x000205, "Member 'ABP_PC_Female_C_ExecuteUbergraph_ABP_PC_Female::CallFunc_IsIKEnabled_IsEnabled_1' has a wrong offset!");
static_assert(offsetof(ABP_PC_Female_C_ExecuteUbergraph_ABP_PC_Female, K2Node_Select_Default_2) == 0x000208, "Member 'ABP_PC_Female_C_ExecuteUbergraph_ABP_PC_Female::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(ABP_PC_Female_C_ExecuteUbergraph_ABP_PC_Female, CallFunc_GetSocketLocation_ReturnValue) == 0x000210, "Member 'ABP_PC_Female_C_ExecuteUbergraph_ABP_PC_Female::CallFunc_GetSocketLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_PC_Female_C_ExecuteUbergraph_ABP_PC_Female, CallFunc_GetSocketLocation_ReturnValue_1) == 0x000228, "Member 'ABP_PC_Female_C_ExecuteUbergraph_ABP_PC_Female::CallFunc_GetSocketLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ABP_PC_Female_C_ExecuteUbergraph_ABP_PC_Female, CallFunc_BooleanOR_ReturnValue_6) == 0x000240, "Member 'ABP_PC_Female_C_ExecuteUbergraph_ABP_PC_Female::CallFunc_BooleanOR_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(ABP_PC_Female_C_ExecuteUbergraph_ABP_PC_Female, CallFunc_BooleanOR_ReturnValue_7) == 0x000241, "Member 'ABP_PC_Female_C_ExecuteUbergraph_ABP_PC_Female::CallFunc_BooleanOR_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(ABP_PC_Female_C_ExecuteUbergraph_ABP_PC_Female, CallFunc_GetRelevantAnimTimeRemaining_ReturnValue) == 0x000244, "Member 'ABP_PC_Female_C_ExecuteUbergraph_ABP_PC_Female::CallFunc_GetRelevantAnimTimeRemaining_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_PC_Female_C_ExecuteUbergraph_ABP_PC_Female, CallFunc_LessEqual_DoubleDouble_ReturnValue) == 0x000248, "Member 'ABP_PC_Female_C_ExecuteUbergraph_ABP_PC_Female::CallFunc_LessEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_PC_Female_C_ExecuteUbergraph_ABP_PC_Female, CallFunc_EqualEqual_ByteByte_ReturnValue_2) == 0x000249, "Member 'ABP_PC_Female_C_ExecuteUbergraph_ABP_PC_Female::CallFunc_EqualEqual_ByteByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ABP_PC_Female_C_ExecuteUbergraph_ABP_PC_Female, CallFunc_BooleanAND_ReturnValue_2) == 0x00024A, "Member 'ABP_PC_Female_C_ExecuteUbergraph_ABP_PC_Female::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ABP_PC_Female_C_ExecuteUbergraph_ABP_PC_Female, CallFunc_Not_PreBool_ReturnValue_6) == 0x00024B, "Member 'ABP_PC_Female_C_ExecuteUbergraph_ABP_PC_Female::CallFunc_Not_PreBool_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(ABP_PC_Female_C_ExecuteUbergraph_ABP_PC_Female, CallFunc_BooleanAND_ReturnValue_3) == 0x00024C, "Member 'ABP_PC_Female_C_ExecuteUbergraph_ABP_PC_Female::CallFunc_BooleanAND_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(ABP_PC_Female_C_ExecuteUbergraph_ABP_PC_Female, CallFunc_BooleanAND_ReturnValue_4) == 0x00024D, "Member 'ABP_PC_Female_C_ExecuteUbergraph_ABP_PC_Female::CallFunc_BooleanAND_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(ABP_PC_Female_C_ExecuteUbergraph_ABP_PC_Female, CallFunc_Not_PreBool_ReturnValue_7) == 0x00024E, "Member 'ABP_PC_Female_C_ExecuteUbergraph_ABP_PC_Female::CallFunc_Not_PreBool_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(ABP_PC_Female_C_ExecuteUbergraph_ABP_PC_Female, CallFunc_GetSocketRotation_ReturnValue) == 0x000250, "Member 'ABP_PC_Female_C_ExecuteUbergraph_ABP_PC_Female::CallFunc_GetSocketRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_PC_Female_C_ExecuteUbergraph_ABP_PC_Female, CallFunc_GetSocketRotation_ReturnValue_1) == 0x000268, "Member 'ABP_PC_Female_C_ExecuteUbergraph_ABP_PC_Female::CallFunc_GetSocketRotation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ABP_PC_Female_C_ExecuteUbergraph_ABP_PC_Female, CallFunc_GetRightVector_ReturnValue) == 0x000280, "Member 'ABP_PC_Female_C_ExecuteUbergraph_ABP_PC_Female::CallFunc_GetRightVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_PC_Female_C_ExecuteUbergraph_ABP_PC_Female, CallFunc_GetRightVector_ReturnValue_1) == 0x000298, "Member 'ABP_PC_Female_C_ExecuteUbergraph_ABP_PC_Female::CallFunc_GetRightVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ABP_PC_Female_C_ExecuteUbergraph_ABP_PC_Female, CallFunc_AngleBetween_ReturnValue) == 0x0002B0, "Member 'ABP_PC_Female_C_ExecuteUbergraph_ABP_PC_Female::CallFunc_AngleBetween_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_PC_Female_C_ExecuteUbergraph_ABP_PC_Female, CallFunc_Multiply_VectorVector_ReturnValue) == 0x0002B8, "Member 'ABP_PC_Female_C_ExecuteUbergraph_ABP_PC_Female::CallFunc_Multiply_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_PC_Female_C_ExecuteUbergraph_ABP_PC_Female, CallFunc_Cross_VectorVector_ReturnValue) == 0x0002D0, "Member 'ABP_PC_Female_C_ExecuteUbergraph_ABP_PC_Female::CallFunc_Cross_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_PC_Female_C_ExecuteUbergraph_ABP_PC_Female, CallFunc_RotatorFromAxisAndAngle_ReturnValue) == 0x0002E8, "Member 'ABP_PC_Female_C_ExecuteUbergraph_ABP_PC_Female::CallFunc_RotatorFromAxisAndAngle_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_PC_Female_C_ExecuteUbergraph_ABP_PC_Female, CallFunc_Cross_VectorVector_ReturnValue_1) == 0x000300, "Member 'ABP_PC_Female_C_ExecuteUbergraph_ABP_PC_Female::CallFunc_Cross_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ABP_PC_Female_C_ExecuteUbergraph_ABP_PC_Female, CallFunc_AngleBetween_ReturnValue_1) == 0x000318, "Member 'ABP_PC_Female_C_ExecuteUbergraph_ABP_PC_Female::CallFunc_AngleBetween_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ABP_PC_Female_C_ExecuteUbergraph_ABP_PC_Female, CallFunc_RotatorFromAxisAndAngle_ReturnValue_1) == 0x000320, "Member 'ABP_PC_Female_C_ExecuteUbergraph_ABP_PC_Female::CallFunc_RotatorFromAxisAndAngle_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ABP_PC_Female_C_ExecuteUbergraph_ABP_PC_Female, CallFunc_EqualEqual_ByteByte_ReturnValue_3) == 0x000338, "Member 'ABP_PC_Female_C_ExecuteUbergraph_ABP_PC_Female::CallFunc_EqualEqual_ByteByte_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(ABP_PC_Female_C_ExecuteUbergraph_ABP_PC_Female, CallFunc_EqualEqual_ByteByte_ReturnValue_4) == 0x000339, "Member 'ABP_PC_Female_C_ExecuteUbergraph_ABP_PC_Female::CallFunc_EqualEqual_ByteByte_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(ABP_PC_Female_C_ExecuteUbergraph_ABP_PC_Female, CallFunc_BooleanAND_ReturnValue_5) == 0x00033A, "Member 'ABP_PC_Female_C_ExecuteUbergraph_ABP_PC_Female::CallFunc_BooleanAND_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(ABP_PC_Female_C_ExecuteUbergraph_ABP_PC_Female, CallFunc_BooleanAND_ReturnValue_6) == 0x00033B, "Member 'ABP_PC_Female_C_ExecuteUbergraph_ABP_PC_Female::CallFunc_BooleanAND_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(ABP_PC_Female_C_ExecuteUbergraph_ABP_PC_Female, CallFunc_BooleanAND_ReturnValue_7) == 0x00033C, "Member 'ABP_PC_Female_C_ExecuteUbergraph_ABP_PC_Female::CallFunc_BooleanAND_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(ABP_PC_Female_C_ExecuteUbergraph_ABP_PC_Female, CallFunc_BooleanAND_ReturnValue_8) == 0x00033D, "Member 'ABP_PC_Female_C_ExecuteUbergraph_ABP_PC_Female::CallFunc_BooleanAND_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(ABP_PC_Female_C_ExecuteUbergraph_ABP_PC_Female, K2Node_StructMemberSet_ExplicitTime_ImplicitCast) == 0x000340, "Member 'ABP_PC_Female_C_ExecuteUbergraph_ABP_PC_Female::K2Node_StructMemberSet_ExplicitTime_ImplicitCast' has a wrong offset!");
static_assert(offsetof(ABP_PC_Female_C_ExecuteUbergraph_ABP_PC_Female, K2Node_StructMemberSet_Alpha_ImplicitCast) == 0x000344, "Member 'ABP_PC_Female_C_ExecuteUbergraph_ABP_PC_Female::K2Node_StructMemberSet_Alpha_ImplicitCast' has a wrong offset!");
static_assert(offsetof(ABP_PC_Female_C_ExecuteUbergraph_ABP_PC_Female, K2Node_StructMemberSet___FloatProperty_2_ImplicitCast) == 0x000348, "Member 'ABP_PC_Female_C_ExecuteUbergraph_ABP_PC_Female::K2Node_StructMemberSet___FloatProperty_2_ImplicitCast' has a wrong offset!");
static_assert(offsetof(ABP_PC_Female_C_ExecuteUbergraph_ABP_PC_Female, K2Node_StructMemberSet___FloatProperty_1_ImplicitCast) == 0x00034C, "Member 'ABP_PC_Female_C_ExecuteUbergraph_ABP_PC_Female::K2Node_StructMemberSet___FloatProperty_1_ImplicitCast' has a wrong offset!");
static_assert(offsetof(ABP_PC_Female_C_ExecuteUbergraph_ABP_PC_Female, K2Node_StructMemberSet_Alpha_ImplicitCast_1) == 0x000350, "Member 'ABP_PC_Female_C_ExecuteUbergraph_ABP_PC_Female::K2Node_StructMemberSet_Alpha_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(ABP_PC_Female_C_ExecuteUbergraph_ABP_PC_Female, K2Node_StructMemberSet_X_ImplicitCast) == 0x000354, "Member 'ABP_PC_Female_C_ExecuteUbergraph_ABP_PC_Female::K2Node_StructMemberSet_X_ImplicitCast' has a wrong offset!");
static_assert(offsetof(ABP_PC_Female_C_ExecuteUbergraph_ABP_PC_Female, K2Node_StructMemberSet_Y_ImplicitCast) == 0x000358, "Member 'ABP_PC_Female_C_ExecuteUbergraph_ABP_PC_Female::K2Node_StructMemberSet_Y_ImplicitCast' has a wrong offset!");
static_assert(offsetof(ABP_PC_Female_C_ExecuteUbergraph_ABP_PC_Female, CallFunc_LessEqual_DoubleDouble_A_ImplicitCast) == 0x000360, "Member 'ABP_PC_Female_C_ExecuteUbergraph_ABP_PC_Female::CallFunc_LessEqual_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(ABP_PC_Female_C_ExecuteUbergraph_ABP_PC_Female, K2Node_StructMemberSet_X_ImplicitCast_1) == 0x000368, "Member 'ABP_PC_Female_C_ExecuteUbergraph_ABP_PC_Female::K2Node_StructMemberSet_X_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(ABP_PC_Female_C_ExecuteUbergraph_ABP_PC_Female, K2Node_StructMemberSet_Y_ImplicitCast_1) == 0x00036C, "Member 'ABP_PC_Female_C_ExecuteUbergraph_ABP_PC_Female::K2Node_StructMemberSet_Y_ImplicitCast_1' has a wrong offset!");

// Function ABP_PC_Female.ABP_PC_Female_C.FootIK
// 0x0020 (0x0020 - 0x0000)
struct ABP_PC_Female_C_FootIK final
{
public:
	struct FPoseLink                              InPose;                                            // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	struct FPoseLink                              Param_FootIK;                                      // 0x0010(0x0010)(Parm, OutParm, NoDestructor)
};
static_assert(alignof(ABP_PC_Female_C_FootIK) == 0x000008, "Wrong alignment on ABP_PC_Female_C_FootIK");
static_assert(sizeof(ABP_PC_Female_C_FootIK) == 0x000020, "Wrong size on ABP_PC_Female_C_FootIK");
static_assert(offsetof(ABP_PC_Female_C_FootIK, InPose) == 0x000000, "Member 'ABP_PC_Female_C_FootIK::InPose' has a wrong offset!");
static_assert(offsetof(ABP_PC_Female_C_FootIK, Param_FootIK) == 0x000010, "Member 'ABP_PC_Female_C_FootIK::Param_FootIK' has a wrong offset!");

// Function ABP_PC_Female.ABP_PC_Female_C.GetHandIKLocation
// 0x0710 (0x0710 - 0x0000)
struct ABP_PC_Female_C_GetHandIKLocation final
{
public:
	struct FVector                                SocketLocation;                                    // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Distance;                                          // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsLeftHand;                                        // 0x0020(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4695[0x7];                                     // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                Hit_Location;                                      // 0x0028(0x0018)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          HasHitWall;                                        // 0x0040(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4696[0x7];                                     // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                TraceOutNormal1;                                   // 0x0048(0x0018)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          SphereTraceResult;                                 // 0x0060(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsInSphere;                                        // 0x0061(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4697[0x6];                                     // 0x0062(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                ClosestPointonSphere;                              // 0x0068(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                ForwardVectorDistanceMultiplied;                   // 0x0080(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                ForwardVectorDistance;                             // 0x0098(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                ForwardVectorNormalized;                           // 0x00B0(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                TraceOutNormal;                                    // 0x00C8(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                TraceOutLocation;                                  // 0x00E0(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         Temp_object_Variable;                              // 0x00F8(0x0010)(ConstParm, ReferenceParm)
	TArray<class AActor*>                         Temp_object_Variable_1;                            // 0x0108(0x0010)(ConstParm, ReferenceParm)
	struct FVector                                CallFunc_Conv_DoubleToVector_ReturnValue;          // 0x0118(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0130(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue;        // 0x0148(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0160(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_SphereTraceSingle_OutHit;                 // 0x0178(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_SphereTraceSingle_ReturnValue;            // 0x0260(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4698[0x7];                                     // 0x0261(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Conv_DoubleToVector_ReturnValue_1;        // 0x0268(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue_1;      // 0x0280(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x0298(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x0299(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4699[0x2];                                     // 0x029A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x029C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x02A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_469A[0x4];                                     // 0x02A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x02A8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x02C0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x02D8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x02F0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x0308(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x0310(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x0318(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x0320(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_BoneName;                  // 0x0328(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x0330(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x0334(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x0338(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_469B[0x4];                                     // 0x033C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x0340(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x0358(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_1;           // 0x0370(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetSocketLocation_ReturnValue;            // 0x0388(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X;                            // 0x03A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x03A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x03B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetSocketLocation_ReturnValue_1;          // 0x03B8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X_1;                          // 0x03D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_1;                          // 0x03D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_1;                          // 0x03E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X_2;                          // 0x03E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_2;                          // 0x03F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_2;                          // 0x03F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0400(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X_3;                          // 0x0418(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_3;                          // 0x0420(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_3;                          // 0x0428(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_1;                 // 0x0430(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_SelectVector_ReturnValue;                 // 0x0448(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        CallFunc_K2_GetRootComponent_ReturnValue;          // 0x0460(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetForwardVector_ReturnValue;             // 0x0468(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue;                       // 0x0480(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_DoubleToVector_ReturnValue_2;        // 0x0498(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue_2;      // 0x04B0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_DoubleToVector_ReturnValue_3;        // 0x04C8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue_3;      // 0x04E0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue_1;      // 0x04F8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_2;           // 0x0510(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_LineTraceSingle_OutHit;                   // 0x0528(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_LineTraceSingle_ReturnValue;              // 0x0610(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bBlockingHit_1;            // 0x0611(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap_1;         // 0x0612(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_469C[0x1];                                     // 0x0613(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time_1;                    // 0x0614(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance_1;                // 0x0618(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_469D[0x4];                                     // 0x061C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_Location_1;                // 0x0620(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint_1;             // 0x0638(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal_1;                  // 0x0650(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal_1;            // 0x0668(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat_1;                 // 0x0680(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor_1;                // 0x0688(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent_1;            // 0x0690(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName_1;             // 0x0698(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_BoneName_1;                // 0x06A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem_1;                 // 0x06A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex_1;            // 0x06AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex_1;               // 0x06B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_469E[0x4];                                     // 0x06B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_TraceStart_1;              // 0x06B8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd_1;                // 0x06D0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue_2;      // 0x06E8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SphereTraceSingle_Radius_ImplicitCast;    // 0x0700(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_469F[0x4];                                     // 0x0704(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Conv_DoubleToVector_InDouble_ImplicitCast; // 0x0708(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ABP_PC_Female_C_GetHandIKLocation) == 0x000008, "Wrong alignment on ABP_PC_Female_C_GetHandIKLocation");
static_assert(sizeof(ABP_PC_Female_C_GetHandIKLocation) == 0x000710, "Wrong size on ABP_PC_Female_C_GetHandIKLocation");
static_assert(offsetof(ABP_PC_Female_C_GetHandIKLocation, SocketLocation) == 0x000000, "Member 'ABP_PC_Female_C_GetHandIKLocation::SocketLocation' has a wrong offset!");
static_assert(offsetof(ABP_PC_Female_C_GetHandIKLocation, Distance) == 0x000018, "Member 'ABP_PC_Female_C_GetHandIKLocation::Distance' has a wrong offset!");
static_assert(offsetof(ABP_PC_Female_C_GetHandIKLocation, IsLeftHand) == 0x000020, "Member 'ABP_PC_Female_C_GetHandIKLocation::IsLeftHand' has a wrong offset!");
static_assert(offsetof(ABP_PC_Female_C_GetHandIKLocation, Hit_Location) == 0x000028, "Member 'ABP_PC_Female_C_GetHandIKLocation::Hit_Location' has a wrong offset!");
static_assert(offsetof(ABP_PC_Female_C_GetHandIKLocation, HasHitWall) == 0x000040, "Member 'ABP_PC_Female_C_GetHandIKLocation::HasHitWall' has a wrong offset!");
static_assert(offsetof(ABP_PC_Female_C_GetHandIKLocation, TraceOutNormal1) == 0x000048, "Member 'ABP_PC_Female_C_GetHandIKLocation::TraceOutNormal1' has a wrong offset!");
static_assert(offsetof(ABP_PC_Female_C_GetHandIKLocation, SphereTraceResult) == 0x000060, "Member 'ABP_PC_Female_C_GetHandIKLocation::SphereTraceResult' has a wrong offset!");
static_assert(offsetof(ABP_PC_Female_C_GetHandIKLocation, IsInSphere) == 0x000061, "Member 'ABP_PC_Female_C_GetHandIKLocation::IsInSphere' has a wrong offset!");
static_assert(offsetof(ABP_PC_Female_C_GetHandIKLocation, ClosestPointonSphere) == 0x000068, "Member 'ABP_PC_Female_C_GetHandIKLocation::ClosestPointonSphere' has a wrong offset!");
static_assert(offsetof(ABP_PC_Female_C_GetHandIKLocation, ForwardVectorDistanceMultiplied) == 0x000080, "Member 'ABP_PC_Female_C_GetHandIKLocation::ForwardVectorDistanceMultiplied' has a wrong offset!");
static_assert(offsetof(ABP_PC_Female_C_GetHandIKLocation, ForwardVectorDistance) == 0x000098, "Member 'ABP_PC_Female_C_GetHandIKLocation::ForwardVectorDistance' has a wrong offset!");
static_assert(offsetof(ABP_PC_Female_C_GetHandIKLocation, ForwardVectorNormalized) == 0x0000B0, "Member 'ABP_PC_Female_C_GetHandIKLocation::ForwardVectorNormalized' has a wrong offset!");
static_assert(offsetof(ABP_PC_Female_C_GetHandIKLocation, TraceOutNormal) == 0x0000C8, "Member 'ABP_PC_Female_C_GetHandIKLocation::TraceOutNormal' has a wrong offset!");
static_assert(offsetof(ABP_PC_Female_C_GetHandIKLocation, TraceOutLocation) == 0x0000E0, "Member 'ABP_PC_Female_C_GetHandIKLocation::TraceOutLocation' has a wrong offset!");
static_assert(offsetof(ABP_PC_Female_C_GetHandIKLocation, Temp_object_Variable) == 0x0000F8, "Member 'ABP_PC_Female_C_GetHandIKLocation::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(ABP_PC_Female_C_GetHandIKLocation, Temp_object_Variable_1) == 0x000108, "Member 'ABP_PC_Female_C_GetHandIKLocation::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(ABP_PC_Female_C_GetHandIKLocation, CallFunc_Conv_DoubleToVector_ReturnValue) == 0x000118, "Member 'ABP_PC_Female_C_GetHandIKLocation::CallFunc_Conv_DoubleToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_PC_Female_C_GetHandIKLocation, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000130, "Member 'ABP_PC_Female_C_GetHandIKLocation::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_PC_Female_C_GetHandIKLocation, CallFunc_Multiply_VectorVector_ReturnValue) == 0x000148, "Member 'ABP_PC_Female_C_GetHandIKLocation::CallFunc_Multiply_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_PC_Female_C_GetHandIKLocation, CallFunc_Add_VectorVector_ReturnValue) == 0x000160, "Member 'ABP_PC_Female_C_GetHandIKLocation::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_PC_Female_C_GetHandIKLocation, CallFunc_SphereTraceSingle_OutHit) == 0x000178, "Member 'ABP_PC_Female_C_GetHandIKLocation::CallFunc_SphereTraceSingle_OutHit' has a wrong offset!");
static_assert(offsetof(ABP_PC_Female_C_GetHandIKLocation, CallFunc_SphereTraceSingle_ReturnValue) == 0x000260, "Member 'ABP_PC_Female_C_GetHandIKLocation::CallFunc_SphereTraceSingle_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_PC_Female_C_GetHandIKLocation, CallFunc_Conv_DoubleToVector_ReturnValue_1) == 0x000268, "Member 'ABP_PC_Female_C_GetHandIKLocation::CallFunc_Conv_DoubleToVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ABP_PC_Female_C_GetHandIKLocation, CallFunc_Multiply_VectorVector_ReturnValue_1) == 0x000280, "Member 'ABP_PC_Female_C_GetHandIKLocation::CallFunc_Multiply_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ABP_PC_Female_C_GetHandIKLocation, CallFunc_BreakHitResult_bBlockingHit) == 0x000298, "Member 'ABP_PC_Female_C_GetHandIKLocation::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(ABP_PC_Female_C_GetHandIKLocation, CallFunc_BreakHitResult_bInitialOverlap) == 0x000299, "Member 'ABP_PC_Female_C_GetHandIKLocation::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(ABP_PC_Female_C_GetHandIKLocation, CallFunc_BreakHitResult_Time) == 0x00029C, "Member 'ABP_PC_Female_C_GetHandIKLocation::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(ABP_PC_Female_C_GetHandIKLocation, CallFunc_BreakHitResult_Distance) == 0x0002A0, "Member 'ABP_PC_Female_C_GetHandIKLocation::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(ABP_PC_Female_C_GetHandIKLocation, CallFunc_BreakHitResult_Location) == 0x0002A8, "Member 'ABP_PC_Female_C_GetHandIKLocation::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(ABP_PC_Female_C_GetHandIKLocation, CallFunc_BreakHitResult_ImpactPoint) == 0x0002C0, "Member 'ABP_PC_Female_C_GetHandIKLocation::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(ABP_PC_Female_C_GetHandIKLocation, CallFunc_BreakHitResult_Normal) == 0x0002D8, "Member 'ABP_PC_Female_C_GetHandIKLocation::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(ABP_PC_Female_C_GetHandIKLocation, CallFunc_BreakHitResult_ImpactNormal) == 0x0002F0, "Member 'ABP_PC_Female_C_GetHandIKLocation::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(ABP_PC_Female_C_GetHandIKLocation, CallFunc_BreakHitResult_PhysMat) == 0x000308, "Member 'ABP_PC_Female_C_GetHandIKLocation::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(ABP_PC_Female_C_GetHandIKLocation, CallFunc_BreakHitResult_HitActor) == 0x000310, "Member 'ABP_PC_Female_C_GetHandIKLocation::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(ABP_PC_Female_C_GetHandIKLocation, CallFunc_BreakHitResult_HitComponent) == 0x000318, "Member 'ABP_PC_Female_C_GetHandIKLocation::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(ABP_PC_Female_C_GetHandIKLocation, CallFunc_BreakHitResult_HitBoneName) == 0x000320, "Member 'ABP_PC_Female_C_GetHandIKLocation::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(ABP_PC_Female_C_GetHandIKLocation, CallFunc_BreakHitResult_BoneName) == 0x000328, "Member 'ABP_PC_Female_C_GetHandIKLocation::CallFunc_BreakHitResult_BoneName' has a wrong offset!");
static_assert(offsetof(ABP_PC_Female_C_GetHandIKLocation, CallFunc_BreakHitResult_HitItem) == 0x000330, "Member 'ABP_PC_Female_C_GetHandIKLocation::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(ABP_PC_Female_C_GetHandIKLocation, CallFunc_BreakHitResult_ElementIndex) == 0x000334, "Member 'ABP_PC_Female_C_GetHandIKLocation::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(ABP_PC_Female_C_GetHandIKLocation, CallFunc_BreakHitResult_FaceIndex) == 0x000338, "Member 'ABP_PC_Female_C_GetHandIKLocation::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(ABP_PC_Female_C_GetHandIKLocation, CallFunc_BreakHitResult_TraceStart) == 0x000340, "Member 'ABP_PC_Female_C_GetHandIKLocation::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(ABP_PC_Female_C_GetHandIKLocation, CallFunc_BreakHitResult_TraceEnd) == 0x000358, "Member 'ABP_PC_Female_C_GetHandIKLocation::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(ABP_PC_Female_C_GetHandIKLocation, CallFunc_Add_VectorVector_ReturnValue_1) == 0x000370, "Member 'ABP_PC_Female_C_GetHandIKLocation::CallFunc_Add_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ABP_PC_Female_C_GetHandIKLocation, CallFunc_GetSocketLocation_ReturnValue) == 0x000388, "Member 'ABP_PC_Female_C_GetHandIKLocation::CallFunc_GetSocketLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_PC_Female_C_GetHandIKLocation, CallFunc_BreakVector_X) == 0x0003A0, "Member 'ABP_PC_Female_C_GetHandIKLocation::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(ABP_PC_Female_C_GetHandIKLocation, CallFunc_BreakVector_Y) == 0x0003A8, "Member 'ABP_PC_Female_C_GetHandIKLocation::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(ABP_PC_Female_C_GetHandIKLocation, CallFunc_BreakVector_Z) == 0x0003B0, "Member 'ABP_PC_Female_C_GetHandIKLocation::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(ABP_PC_Female_C_GetHandIKLocation, CallFunc_GetSocketLocation_ReturnValue_1) == 0x0003B8, "Member 'ABP_PC_Female_C_GetHandIKLocation::CallFunc_GetSocketLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ABP_PC_Female_C_GetHandIKLocation, CallFunc_BreakVector_X_1) == 0x0003D0, "Member 'ABP_PC_Female_C_GetHandIKLocation::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(ABP_PC_Female_C_GetHandIKLocation, CallFunc_BreakVector_Y_1) == 0x0003D8, "Member 'ABP_PC_Female_C_GetHandIKLocation::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(ABP_PC_Female_C_GetHandIKLocation, CallFunc_BreakVector_Z_1) == 0x0003E0, "Member 'ABP_PC_Female_C_GetHandIKLocation::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(ABP_PC_Female_C_GetHandIKLocation, CallFunc_BreakVector_X_2) == 0x0003E8, "Member 'ABP_PC_Female_C_GetHandIKLocation::CallFunc_BreakVector_X_2' has a wrong offset!");
static_assert(offsetof(ABP_PC_Female_C_GetHandIKLocation, CallFunc_BreakVector_Y_2) == 0x0003F0, "Member 'ABP_PC_Female_C_GetHandIKLocation::CallFunc_BreakVector_Y_2' has a wrong offset!");
static_assert(offsetof(ABP_PC_Female_C_GetHandIKLocation, CallFunc_BreakVector_Z_2) == 0x0003F8, "Member 'ABP_PC_Female_C_GetHandIKLocation::CallFunc_BreakVector_Z_2' has a wrong offset!");
static_assert(offsetof(ABP_PC_Female_C_GetHandIKLocation, CallFunc_MakeVector_ReturnValue) == 0x000400, "Member 'ABP_PC_Female_C_GetHandIKLocation::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_PC_Female_C_GetHandIKLocation, CallFunc_BreakVector_X_3) == 0x000418, "Member 'ABP_PC_Female_C_GetHandIKLocation::CallFunc_BreakVector_X_3' has a wrong offset!");
static_assert(offsetof(ABP_PC_Female_C_GetHandIKLocation, CallFunc_BreakVector_Y_3) == 0x000420, "Member 'ABP_PC_Female_C_GetHandIKLocation::CallFunc_BreakVector_Y_3' has a wrong offset!");
static_assert(offsetof(ABP_PC_Female_C_GetHandIKLocation, CallFunc_BreakVector_Z_3) == 0x000428, "Member 'ABP_PC_Female_C_GetHandIKLocation::CallFunc_BreakVector_Z_3' has a wrong offset!");
static_assert(offsetof(ABP_PC_Female_C_GetHandIKLocation, CallFunc_MakeVector_ReturnValue_1) == 0x000430, "Member 'ABP_PC_Female_C_GetHandIKLocation::CallFunc_MakeVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ABP_PC_Female_C_GetHandIKLocation, CallFunc_SelectVector_ReturnValue) == 0x000448, "Member 'ABP_PC_Female_C_GetHandIKLocation::CallFunc_SelectVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_PC_Female_C_GetHandIKLocation, CallFunc_K2_GetRootComponent_ReturnValue) == 0x000460, "Member 'ABP_PC_Female_C_GetHandIKLocation::CallFunc_K2_GetRootComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_PC_Female_C_GetHandIKLocation, CallFunc_GetForwardVector_ReturnValue) == 0x000468, "Member 'ABP_PC_Female_C_GetHandIKLocation::CallFunc_GetForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_PC_Female_C_GetHandIKLocation, CallFunc_Normal_ReturnValue) == 0x000480, "Member 'ABP_PC_Female_C_GetHandIKLocation::CallFunc_Normal_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_PC_Female_C_GetHandIKLocation, CallFunc_Conv_DoubleToVector_ReturnValue_2) == 0x000498, "Member 'ABP_PC_Female_C_GetHandIKLocation::CallFunc_Conv_DoubleToVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ABP_PC_Female_C_GetHandIKLocation, CallFunc_Multiply_VectorVector_ReturnValue_2) == 0x0004B0, "Member 'ABP_PC_Female_C_GetHandIKLocation::CallFunc_Multiply_VectorVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ABP_PC_Female_C_GetHandIKLocation, CallFunc_Conv_DoubleToVector_ReturnValue_3) == 0x0004C8, "Member 'ABP_PC_Female_C_GetHandIKLocation::CallFunc_Conv_DoubleToVector_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(ABP_PC_Female_C_GetHandIKLocation, CallFunc_Multiply_VectorVector_ReturnValue_3) == 0x0004E0, "Member 'ABP_PC_Female_C_GetHandIKLocation::CallFunc_Multiply_VectorVector_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(ABP_PC_Female_C_GetHandIKLocation, CallFunc_Subtract_VectorVector_ReturnValue_1) == 0x0004F8, "Member 'ABP_PC_Female_C_GetHandIKLocation::CallFunc_Subtract_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ABP_PC_Female_C_GetHandIKLocation, CallFunc_Add_VectorVector_ReturnValue_2) == 0x000510, "Member 'ABP_PC_Female_C_GetHandIKLocation::CallFunc_Add_VectorVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ABP_PC_Female_C_GetHandIKLocation, CallFunc_LineTraceSingle_OutHit) == 0x000528, "Member 'ABP_PC_Female_C_GetHandIKLocation::CallFunc_LineTraceSingle_OutHit' has a wrong offset!");
static_assert(offsetof(ABP_PC_Female_C_GetHandIKLocation, CallFunc_LineTraceSingle_ReturnValue) == 0x000610, "Member 'ABP_PC_Female_C_GetHandIKLocation::CallFunc_LineTraceSingle_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_PC_Female_C_GetHandIKLocation, CallFunc_BreakHitResult_bBlockingHit_1) == 0x000611, "Member 'ABP_PC_Female_C_GetHandIKLocation::CallFunc_BreakHitResult_bBlockingHit_1' has a wrong offset!");
static_assert(offsetof(ABP_PC_Female_C_GetHandIKLocation, CallFunc_BreakHitResult_bInitialOverlap_1) == 0x000612, "Member 'ABP_PC_Female_C_GetHandIKLocation::CallFunc_BreakHitResult_bInitialOverlap_1' has a wrong offset!");
static_assert(offsetof(ABP_PC_Female_C_GetHandIKLocation, CallFunc_BreakHitResult_Time_1) == 0x000614, "Member 'ABP_PC_Female_C_GetHandIKLocation::CallFunc_BreakHitResult_Time_1' has a wrong offset!");
static_assert(offsetof(ABP_PC_Female_C_GetHandIKLocation, CallFunc_BreakHitResult_Distance_1) == 0x000618, "Member 'ABP_PC_Female_C_GetHandIKLocation::CallFunc_BreakHitResult_Distance_1' has a wrong offset!");
static_assert(offsetof(ABP_PC_Female_C_GetHandIKLocation, CallFunc_BreakHitResult_Location_1) == 0x000620, "Member 'ABP_PC_Female_C_GetHandIKLocation::CallFunc_BreakHitResult_Location_1' has a wrong offset!");
static_assert(offsetof(ABP_PC_Female_C_GetHandIKLocation, CallFunc_BreakHitResult_ImpactPoint_1) == 0x000638, "Member 'ABP_PC_Female_C_GetHandIKLocation::CallFunc_BreakHitResult_ImpactPoint_1' has a wrong offset!");
static_assert(offsetof(ABP_PC_Female_C_GetHandIKLocation, CallFunc_BreakHitResult_Normal_1) == 0x000650, "Member 'ABP_PC_Female_C_GetHandIKLocation::CallFunc_BreakHitResult_Normal_1' has a wrong offset!");
static_assert(offsetof(ABP_PC_Female_C_GetHandIKLocation, CallFunc_BreakHitResult_ImpactNormal_1) == 0x000668, "Member 'ABP_PC_Female_C_GetHandIKLocation::CallFunc_BreakHitResult_ImpactNormal_1' has a wrong offset!");
static_assert(offsetof(ABP_PC_Female_C_GetHandIKLocation, CallFunc_BreakHitResult_PhysMat_1) == 0x000680, "Member 'ABP_PC_Female_C_GetHandIKLocation::CallFunc_BreakHitResult_PhysMat_1' has a wrong offset!");
static_assert(offsetof(ABP_PC_Female_C_GetHandIKLocation, CallFunc_BreakHitResult_HitActor_1) == 0x000688, "Member 'ABP_PC_Female_C_GetHandIKLocation::CallFunc_BreakHitResult_HitActor_1' has a wrong offset!");
static_assert(offsetof(ABP_PC_Female_C_GetHandIKLocation, CallFunc_BreakHitResult_HitComponent_1) == 0x000690, "Member 'ABP_PC_Female_C_GetHandIKLocation::CallFunc_BreakHitResult_HitComponent_1' has a wrong offset!");
static_assert(offsetof(ABP_PC_Female_C_GetHandIKLocation, CallFunc_BreakHitResult_HitBoneName_1) == 0x000698, "Member 'ABP_PC_Female_C_GetHandIKLocation::CallFunc_BreakHitResult_HitBoneName_1' has a wrong offset!");
static_assert(offsetof(ABP_PC_Female_C_GetHandIKLocation, CallFunc_BreakHitResult_BoneName_1) == 0x0006A0, "Member 'ABP_PC_Female_C_GetHandIKLocation::CallFunc_BreakHitResult_BoneName_1' has a wrong offset!");
static_assert(offsetof(ABP_PC_Female_C_GetHandIKLocation, CallFunc_BreakHitResult_HitItem_1) == 0x0006A8, "Member 'ABP_PC_Female_C_GetHandIKLocation::CallFunc_BreakHitResult_HitItem_1' has a wrong offset!");
static_assert(offsetof(ABP_PC_Female_C_GetHandIKLocation, CallFunc_BreakHitResult_ElementIndex_1) == 0x0006AC, "Member 'ABP_PC_Female_C_GetHandIKLocation::CallFunc_BreakHitResult_ElementIndex_1' has a wrong offset!");
static_assert(offsetof(ABP_PC_Female_C_GetHandIKLocation, CallFunc_BreakHitResult_FaceIndex_1) == 0x0006B0, "Member 'ABP_PC_Female_C_GetHandIKLocation::CallFunc_BreakHitResult_FaceIndex_1' has a wrong offset!");
static_assert(offsetof(ABP_PC_Female_C_GetHandIKLocation, CallFunc_BreakHitResult_TraceStart_1) == 0x0006B8, "Member 'ABP_PC_Female_C_GetHandIKLocation::CallFunc_BreakHitResult_TraceStart_1' has a wrong offset!");
static_assert(offsetof(ABP_PC_Female_C_GetHandIKLocation, CallFunc_BreakHitResult_TraceEnd_1) == 0x0006D0, "Member 'ABP_PC_Female_C_GetHandIKLocation::CallFunc_BreakHitResult_TraceEnd_1' has a wrong offset!");
static_assert(offsetof(ABP_PC_Female_C_GetHandIKLocation, CallFunc_Subtract_VectorVector_ReturnValue_2) == 0x0006E8, "Member 'ABP_PC_Female_C_GetHandIKLocation::CallFunc_Subtract_VectorVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ABP_PC_Female_C_GetHandIKLocation, CallFunc_SphereTraceSingle_Radius_ImplicitCast) == 0x000700, "Member 'ABP_PC_Female_C_GetHandIKLocation::CallFunc_SphereTraceSingle_Radius_ImplicitCast' has a wrong offset!");
static_assert(offsetof(ABP_PC_Female_C_GetHandIKLocation, CallFunc_Conv_DoubleToVector_InDouble_ImplicitCast) == 0x000708, "Member 'ABP_PC_Female_C_GetHandIKLocation::CallFunc_Conv_DoubleToVector_InDouble_ImplicitCast' has a wrong offset!");

// Function ABP_PC_Female.ABP_PC_Female_C.HandleAnimNotify_FishingDone
// 0x0090 (0x0090 - 0x0000)
struct ABP_PC_Female_C_HandleAnimNotify_FishingDone final
{
public:
	class UEquipmentComponent*                    PlayerEquipment;                                   // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 ActorRod;                                          // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)
	struct FEquipmentItem                         CallFunc_GetEquippedItem_ReturnValue;              // 0x0010(0x0050)()
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_46A0[0x3];                                     // 0x0061(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0069(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_46A1[0x6];                                     // 0x006A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UFishingComponent*                      CallFunc_GetFishing_ReturnValue;                   // 0x0070(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UEquipmentComponent*                    CallFunc_GetEquipment_ReturnValue;                 // 0x0078(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UFishingViewComponent*                  CallFunc_GetCachedFishingViewComponent_ReturnValue; // 0x0080(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetActorRod_ReturnValue;                  // 0x0088(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ABP_PC_Female_C_HandleAnimNotify_FishingDone) == 0x000008, "Wrong alignment on ABP_PC_Female_C_HandleAnimNotify_FishingDone");
static_assert(sizeof(ABP_PC_Female_C_HandleAnimNotify_FishingDone) == 0x000090, "Wrong size on ABP_PC_Female_C_HandleAnimNotify_FishingDone");
static_assert(offsetof(ABP_PC_Female_C_HandleAnimNotify_FishingDone, PlayerEquipment) == 0x000000, "Member 'ABP_PC_Female_C_HandleAnimNotify_FishingDone::PlayerEquipment' has a wrong offset!");
static_assert(offsetof(ABP_PC_Female_C_HandleAnimNotify_FishingDone, ActorRod) == 0x000008, "Member 'ABP_PC_Female_C_HandleAnimNotify_FishingDone::ActorRod' has a wrong offset!");
static_assert(offsetof(ABP_PC_Female_C_HandleAnimNotify_FishingDone, CallFunc_GetEquippedItem_ReturnValue) == 0x000010, "Member 'ABP_PC_Female_C_HandleAnimNotify_FishingDone::CallFunc_GetEquippedItem_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_PC_Female_C_HandleAnimNotify_FishingDone, CallFunc_IsValid_ReturnValue) == 0x000060, "Member 'ABP_PC_Female_C_HandleAnimNotify_FishingDone::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_PC_Female_C_HandleAnimNotify_FishingDone, CallFunc_Array_Length_ReturnValue) == 0x000064, "Member 'ABP_PC_Female_C_HandleAnimNotify_FishingDone::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_PC_Female_C_HandleAnimNotify_FishingDone, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000068, "Member 'ABP_PC_Female_C_HandleAnimNotify_FishingDone::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_PC_Female_C_HandleAnimNotify_FishingDone, CallFunc_IsValid_ReturnValue_1) == 0x000069, "Member 'ABP_PC_Female_C_HandleAnimNotify_FishingDone::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ABP_PC_Female_C_HandleAnimNotify_FishingDone, CallFunc_GetFishing_ReturnValue) == 0x000070, "Member 'ABP_PC_Female_C_HandleAnimNotify_FishingDone::CallFunc_GetFishing_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_PC_Female_C_HandleAnimNotify_FishingDone, CallFunc_GetEquipment_ReturnValue) == 0x000078, "Member 'ABP_PC_Female_C_HandleAnimNotify_FishingDone::CallFunc_GetEquipment_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_PC_Female_C_HandleAnimNotify_FishingDone, CallFunc_GetCachedFishingViewComponent_ReturnValue) == 0x000080, "Member 'ABP_PC_Female_C_HandleAnimNotify_FishingDone::CallFunc_GetCachedFishingViewComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_PC_Female_C_HandleAnimNotify_FishingDone, CallFunc_GetActorRod_ReturnValue) == 0x000088, "Member 'ABP_PC_Female_C_HandleAnimNotify_FishingDone::CallFunc_GetActorRod_ReturnValue' has a wrong offset!");

// Function ABP_PC_Female.ABP_PC_Female_C.IsIKEnabled
// 0x0002 (0x0002 - 0x0000)
struct ABP_PC_Female_C_IsIKEnabled final
{
public:
	bool                                          IsEnabled;                                         // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetConsoleVariableBoolValue_ReturnValue;  // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ABP_PC_Female_C_IsIKEnabled) == 0x000001, "Wrong alignment on ABP_PC_Female_C_IsIKEnabled");
static_assert(sizeof(ABP_PC_Female_C_IsIKEnabled) == 0x000002, "Wrong size on ABP_PC_Female_C_IsIKEnabled");
static_assert(offsetof(ABP_PC_Female_C_IsIKEnabled, IsEnabled) == 0x000000, "Member 'ABP_PC_Female_C_IsIKEnabled::IsEnabled' has a wrong offset!");
static_assert(offsetof(ABP_PC_Female_C_IsIKEnabled, CallFunc_GetConsoleVariableBoolValue_ReturnValue) == 0x000001, "Member 'ABP_PC_Female_C_IsIKEnabled::CallFunc_GetConsoleVariableBoolValue_ReturnValue' has a wrong offset!");

// Function ABP_PC_Female.ABP_PC_Female_C.ResetIK
// 0x0060 (0x0060 - 0x0000)
struct ABP_PC_Female_C_ResetIK final
{
public:
	struct FVector                                CallFunc_VInterpTo_ReturnValue;                    // 0x0000(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_VInterpTo_ReturnValue_1;                  // 0x0018(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_RInterpTo_ReturnValue;                    // 0x0030(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_RInterpTo_ReturnValue_1;                  // 0x0048(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ABP_PC_Female_C_ResetIK) == 0x000008, "Wrong alignment on ABP_PC_Female_C_ResetIK");
static_assert(sizeof(ABP_PC_Female_C_ResetIK) == 0x000060, "Wrong size on ABP_PC_Female_C_ResetIK");
static_assert(offsetof(ABP_PC_Female_C_ResetIK, CallFunc_VInterpTo_ReturnValue) == 0x000000, "Member 'ABP_PC_Female_C_ResetIK::CallFunc_VInterpTo_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_PC_Female_C_ResetIK, CallFunc_VInterpTo_ReturnValue_1) == 0x000018, "Member 'ABP_PC_Female_C_ResetIK::CallFunc_VInterpTo_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ABP_PC_Female_C_ResetIK, CallFunc_RInterpTo_ReturnValue) == 0x000030, "Member 'ABP_PC_Female_C_ResetIK::CallFunc_RInterpTo_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_PC_Female_C_ResetIK, CallFunc_RInterpTo_ReturnValue_1) == 0x000048, "Member 'ABP_PC_Female_C_ResetIK::CallFunc_RInterpTo_ReturnValue_1' has a wrong offset!");

// Function ABP_PC_Female.ABP_PC_Female_C.SetFootIK
// 0x04B8 (0x04B8 - 0x0000)
struct ABP_PC_Female_C_SetFootIK final
{
public:
	class FName                                   AnimCurveName;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   FootIkBone;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   RootBone;                                          // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                FootIKOffset;                                      // 0x0018(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                FootIKTarget;                                      // 0x0030(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               FootIkRotation;                                    // 0x0048(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
	struct FRotator                               Foot_Rotation_Target;                              // 0x0060(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                ImpactNormal;                                      // 0x0078(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                ImpactPoint;                                       // 0x0090(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                ExpectedFloorLocation;                             // 0x00A8(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetCurveValue_ReturnValue;                // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x00C4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_46A2[0x3];                                     // 0x00C5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         Temp_object_Variable;                              // 0x00C8(0x0010)(ConstParm, ReferenceParm)
	struct FVector                                CallFunc_VInterpTo_ReturnValue;                    // 0x00D8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_VInterpTo_ReturnValue_1;                  // 0x00F0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X;                            // 0x0108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x0110(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x0118(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X_1;                          // 0x0120(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_1;                          // 0x0128(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_1;                          // 0x0130(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_1;       // 0x0138(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_46A3[0x7];                                     // 0x0139(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_BreakVector_X_2;                          // 0x0140(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_2;                          // 0x0148(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_2;                          // 0x0150(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_DegAtan2_ReturnValue;                     // 0x0158(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_DegAtan2_ReturnValue_1;                   // 0x0160(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0168(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x0170(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0188(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_1;                 // 0x01A0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue;        // 0x01B8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x01D0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_1;           // 0x01E8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0200(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_RInterpTo_ReturnValue;                    // 0x0218(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue_1;      // 0x0230(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_2;           // 0x0248(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 CallFunc_GetOwningComponent_ReturnValue;           // 0x0260(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_LineTraceSingle_OutHit;                   // 0x0268(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_LineTraceSingle_ReturnValue;              // 0x0350(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x0351(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x0352(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_46A4[0x1];                                     // 0x0353(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x0354(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x0358(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_46A5[0x4];                                     // 0x035C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x0360(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x0378(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x0390(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x03A8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x03C0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x03C8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x03D0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x03D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_BoneName;                  // 0x03E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x03E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x03EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x03F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_46A6[0x4];                                     // 0x03F4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x03F8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x0410(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetSocketLocation_ReturnValue;            // 0x0428(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X_3;                          // 0x0440(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_3;                          // 0x0448(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_3;                          // 0x0450(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsWalkable_ReturnValue;                   // 0x0458(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_46A7[0x7];                                     // 0x0459(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetSocketLocation_ReturnValue_1;          // 0x0460(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X_4;                          // 0x0478(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_4;                          // 0x0480(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_4;                          // 0x0488(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_2;                 // 0x0490(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Greater_DoubleDouble_A_ImplicitCast;      // 0x04A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeRotator_Roll_ImplicitCast;            // 0x04B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeRotator_Pitch_ImplicitCast;           // 0x04B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ABP_PC_Female_C_SetFootIK) == 0x000008, "Wrong alignment on ABP_PC_Female_C_SetFootIK");
static_assert(sizeof(ABP_PC_Female_C_SetFootIK) == 0x0004B8, "Wrong size on ABP_PC_Female_C_SetFootIK");
static_assert(offsetof(ABP_PC_Female_C_SetFootIK, AnimCurveName) == 0x000000, "Member 'ABP_PC_Female_C_SetFootIK::AnimCurveName' has a wrong offset!");
static_assert(offsetof(ABP_PC_Female_C_SetFootIK, FootIkBone) == 0x000008, "Member 'ABP_PC_Female_C_SetFootIK::FootIkBone' has a wrong offset!");
static_assert(offsetof(ABP_PC_Female_C_SetFootIK, RootBone) == 0x000010, "Member 'ABP_PC_Female_C_SetFootIK::RootBone' has a wrong offset!");
static_assert(offsetof(ABP_PC_Female_C_SetFootIK, FootIKOffset) == 0x000018, "Member 'ABP_PC_Female_C_SetFootIK::FootIKOffset' has a wrong offset!");
static_assert(offsetof(ABP_PC_Female_C_SetFootIK, FootIKTarget) == 0x000030, "Member 'ABP_PC_Female_C_SetFootIK::FootIKTarget' has a wrong offset!");
static_assert(offsetof(ABP_PC_Female_C_SetFootIK, FootIkRotation) == 0x000048, "Member 'ABP_PC_Female_C_SetFootIK::FootIkRotation' has a wrong offset!");
static_assert(offsetof(ABP_PC_Female_C_SetFootIK, Foot_Rotation_Target) == 0x000060, "Member 'ABP_PC_Female_C_SetFootIK::Foot_Rotation_Target' has a wrong offset!");
static_assert(offsetof(ABP_PC_Female_C_SetFootIK, ImpactNormal) == 0x000078, "Member 'ABP_PC_Female_C_SetFootIK::ImpactNormal' has a wrong offset!");
static_assert(offsetof(ABP_PC_Female_C_SetFootIK, ImpactPoint) == 0x000090, "Member 'ABP_PC_Female_C_SetFootIK::ImpactPoint' has a wrong offset!");
static_assert(offsetof(ABP_PC_Female_C_SetFootIK, ExpectedFloorLocation) == 0x0000A8, "Member 'ABP_PC_Female_C_SetFootIK::ExpectedFloorLocation' has a wrong offset!");
static_assert(offsetof(ABP_PC_Female_C_SetFootIK, CallFunc_GetCurveValue_ReturnValue) == 0x0000C0, "Member 'ABP_PC_Female_C_SetFootIK::CallFunc_GetCurveValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_PC_Female_C_SetFootIK, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x0000C4, "Member 'ABP_PC_Female_C_SetFootIK::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_PC_Female_C_SetFootIK, Temp_object_Variable) == 0x0000C8, "Member 'ABP_PC_Female_C_SetFootIK::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(ABP_PC_Female_C_SetFootIK, CallFunc_VInterpTo_ReturnValue) == 0x0000D8, "Member 'ABP_PC_Female_C_SetFootIK::CallFunc_VInterpTo_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_PC_Female_C_SetFootIK, CallFunc_VInterpTo_ReturnValue_1) == 0x0000F0, "Member 'ABP_PC_Female_C_SetFootIK::CallFunc_VInterpTo_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ABP_PC_Female_C_SetFootIK, CallFunc_BreakVector_X) == 0x000108, "Member 'ABP_PC_Female_C_SetFootIK::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(ABP_PC_Female_C_SetFootIK, CallFunc_BreakVector_Y) == 0x000110, "Member 'ABP_PC_Female_C_SetFootIK::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(ABP_PC_Female_C_SetFootIK, CallFunc_BreakVector_Z) == 0x000118, "Member 'ABP_PC_Female_C_SetFootIK::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(ABP_PC_Female_C_SetFootIK, CallFunc_BreakVector_X_1) == 0x000120, "Member 'ABP_PC_Female_C_SetFootIK::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(ABP_PC_Female_C_SetFootIK, CallFunc_BreakVector_Y_1) == 0x000128, "Member 'ABP_PC_Female_C_SetFootIK::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(ABP_PC_Female_C_SetFootIK, CallFunc_BreakVector_Z_1) == 0x000130, "Member 'ABP_PC_Female_C_SetFootIK::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(ABP_PC_Female_C_SetFootIK, CallFunc_Greater_DoubleDouble_ReturnValue_1) == 0x000138, "Member 'ABP_PC_Female_C_SetFootIK::CallFunc_Greater_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ABP_PC_Female_C_SetFootIK, CallFunc_BreakVector_X_2) == 0x000140, "Member 'ABP_PC_Female_C_SetFootIK::CallFunc_BreakVector_X_2' has a wrong offset!");
static_assert(offsetof(ABP_PC_Female_C_SetFootIK, CallFunc_BreakVector_Y_2) == 0x000148, "Member 'ABP_PC_Female_C_SetFootIK::CallFunc_BreakVector_Y_2' has a wrong offset!");
static_assert(offsetof(ABP_PC_Female_C_SetFootIK, CallFunc_BreakVector_Z_2) == 0x000150, "Member 'ABP_PC_Female_C_SetFootIK::CallFunc_BreakVector_Z_2' has a wrong offset!");
static_assert(offsetof(ABP_PC_Female_C_SetFootIK, CallFunc_DegAtan2_ReturnValue) == 0x000158, "Member 'ABP_PC_Female_C_SetFootIK::CallFunc_DegAtan2_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_PC_Female_C_SetFootIK, CallFunc_DegAtan2_ReturnValue_1) == 0x000160, "Member 'ABP_PC_Female_C_SetFootIK::CallFunc_DegAtan2_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ABP_PC_Female_C_SetFootIK, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000168, "Member 'ABP_PC_Female_C_SetFootIK::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_PC_Female_C_SetFootIK, CallFunc_MakeRotator_ReturnValue) == 0x000170, "Member 'ABP_PC_Female_C_SetFootIK::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_PC_Female_C_SetFootIK, CallFunc_MakeVector_ReturnValue) == 0x000188, "Member 'ABP_PC_Female_C_SetFootIK::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_PC_Female_C_SetFootIK, CallFunc_MakeVector_ReturnValue_1) == 0x0001A0, "Member 'ABP_PC_Female_C_SetFootIK::CallFunc_MakeVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ABP_PC_Female_C_SetFootIK, CallFunc_Multiply_VectorVector_ReturnValue) == 0x0001B8, "Member 'ABP_PC_Female_C_SetFootIK::CallFunc_Multiply_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_PC_Female_C_SetFootIK, CallFunc_Add_VectorVector_ReturnValue) == 0x0001D0, "Member 'ABP_PC_Female_C_SetFootIK::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_PC_Female_C_SetFootIK, CallFunc_Add_VectorVector_ReturnValue_1) == 0x0001E8, "Member 'ABP_PC_Female_C_SetFootIK::CallFunc_Add_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ABP_PC_Female_C_SetFootIK, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000200, "Member 'ABP_PC_Female_C_SetFootIK::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_PC_Female_C_SetFootIK, CallFunc_RInterpTo_ReturnValue) == 0x000218, "Member 'ABP_PC_Female_C_SetFootIK::CallFunc_RInterpTo_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_PC_Female_C_SetFootIK, CallFunc_Subtract_VectorVector_ReturnValue_1) == 0x000230, "Member 'ABP_PC_Female_C_SetFootIK::CallFunc_Subtract_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ABP_PC_Female_C_SetFootIK, CallFunc_Add_VectorVector_ReturnValue_2) == 0x000248, "Member 'ABP_PC_Female_C_SetFootIK::CallFunc_Add_VectorVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ABP_PC_Female_C_SetFootIK, CallFunc_GetOwningComponent_ReturnValue) == 0x000260, "Member 'ABP_PC_Female_C_SetFootIK::CallFunc_GetOwningComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_PC_Female_C_SetFootIK, CallFunc_LineTraceSingle_OutHit) == 0x000268, "Member 'ABP_PC_Female_C_SetFootIK::CallFunc_LineTraceSingle_OutHit' has a wrong offset!");
static_assert(offsetof(ABP_PC_Female_C_SetFootIK, CallFunc_LineTraceSingle_ReturnValue) == 0x000350, "Member 'ABP_PC_Female_C_SetFootIK::CallFunc_LineTraceSingle_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_PC_Female_C_SetFootIK, CallFunc_BreakHitResult_bBlockingHit) == 0x000351, "Member 'ABP_PC_Female_C_SetFootIK::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(ABP_PC_Female_C_SetFootIK, CallFunc_BreakHitResult_bInitialOverlap) == 0x000352, "Member 'ABP_PC_Female_C_SetFootIK::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(ABP_PC_Female_C_SetFootIK, CallFunc_BreakHitResult_Time) == 0x000354, "Member 'ABP_PC_Female_C_SetFootIK::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(ABP_PC_Female_C_SetFootIK, CallFunc_BreakHitResult_Distance) == 0x000358, "Member 'ABP_PC_Female_C_SetFootIK::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(ABP_PC_Female_C_SetFootIK, CallFunc_BreakHitResult_Location) == 0x000360, "Member 'ABP_PC_Female_C_SetFootIK::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(ABP_PC_Female_C_SetFootIK, CallFunc_BreakHitResult_ImpactPoint) == 0x000378, "Member 'ABP_PC_Female_C_SetFootIK::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(ABP_PC_Female_C_SetFootIK, CallFunc_BreakHitResult_Normal) == 0x000390, "Member 'ABP_PC_Female_C_SetFootIK::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(ABP_PC_Female_C_SetFootIK, CallFunc_BreakHitResult_ImpactNormal) == 0x0003A8, "Member 'ABP_PC_Female_C_SetFootIK::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(ABP_PC_Female_C_SetFootIK, CallFunc_BreakHitResult_PhysMat) == 0x0003C0, "Member 'ABP_PC_Female_C_SetFootIK::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(ABP_PC_Female_C_SetFootIK, CallFunc_BreakHitResult_HitActor) == 0x0003C8, "Member 'ABP_PC_Female_C_SetFootIK::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(ABP_PC_Female_C_SetFootIK, CallFunc_BreakHitResult_HitComponent) == 0x0003D0, "Member 'ABP_PC_Female_C_SetFootIK::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(ABP_PC_Female_C_SetFootIK, CallFunc_BreakHitResult_HitBoneName) == 0x0003D8, "Member 'ABP_PC_Female_C_SetFootIK::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(ABP_PC_Female_C_SetFootIK, CallFunc_BreakHitResult_BoneName) == 0x0003E0, "Member 'ABP_PC_Female_C_SetFootIK::CallFunc_BreakHitResult_BoneName' has a wrong offset!");
static_assert(offsetof(ABP_PC_Female_C_SetFootIK, CallFunc_BreakHitResult_HitItem) == 0x0003E8, "Member 'ABP_PC_Female_C_SetFootIK::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(ABP_PC_Female_C_SetFootIK, CallFunc_BreakHitResult_ElementIndex) == 0x0003EC, "Member 'ABP_PC_Female_C_SetFootIK::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(ABP_PC_Female_C_SetFootIK, CallFunc_BreakHitResult_FaceIndex) == 0x0003F0, "Member 'ABP_PC_Female_C_SetFootIK::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(ABP_PC_Female_C_SetFootIK, CallFunc_BreakHitResult_TraceStart) == 0x0003F8, "Member 'ABP_PC_Female_C_SetFootIK::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(ABP_PC_Female_C_SetFootIK, CallFunc_BreakHitResult_TraceEnd) == 0x000410, "Member 'ABP_PC_Female_C_SetFootIK::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(ABP_PC_Female_C_SetFootIK, CallFunc_GetSocketLocation_ReturnValue) == 0x000428, "Member 'ABP_PC_Female_C_SetFootIK::CallFunc_GetSocketLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_PC_Female_C_SetFootIK, CallFunc_BreakVector_X_3) == 0x000440, "Member 'ABP_PC_Female_C_SetFootIK::CallFunc_BreakVector_X_3' has a wrong offset!");
static_assert(offsetof(ABP_PC_Female_C_SetFootIK, CallFunc_BreakVector_Y_3) == 0x000448, "Member 'ABP_PC_Female_C_SetFootIK::CallFunc_BreakVector_Y_3' has a wrong offset!");
static_assert(offsetof(ABP_PC_Female_C_SetFootIK, CallFunc_BreakVector_Z_3) == 0x000450, "Member 'ABP_PC_Female_C_SetFootIK::CallFunc_BreakVector_Z_3' has a wrong offset!");
static_assert(offsetof(ABP_PC_Female_C_SetFootIK, CallFunc_IsWalkable_ReturnValue) == 0x000458, "Member 'ABP_PC_Female_C_SetFootIK::CallFunc_IsWalkable_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_PC_Female_C_SetFootIK, CallFunc_GetSocketLocation_ReturnValue_1) == 0x000460, "Member 'ABP_PC_Female_C_SetFootIK::CallFunc_GetSocketLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ABP_PC_Female_C_SetFootIK, CallFunc_BreakVector_X_4) == 0x000478, "Member 'ABP_PC_Female_C_SetFootIK::CallFunc_BreakVector_X_4' has a wrong offset!");
static_assert(offsetof(ABP_PC_Female_C_SetFootIK, CallFunc_BreakVector_Y_4) == 0x000480, "Member 'ABP_PC_Female_C_SetFootIK::CallFunc_BreakVector_Y_4' has a wrong offset!");
static_assert(offsetof(ABP_PC_Female_C_SetFootIK, CallFunc_BreakVector_Z_4) == 0x000488, "Member 'ABP_PC_Female_C_SetFootIK::CallFunc_BreakVector_Z_4' has a wrong offset!");
static_assert(offsetof(ABP_PC_Female_C_SetFootIK, CallFunc_MakeVector_ReturnValue_2) == 0x000490, "Member 'ABP_PC_Female_C_SetFootIK::CallFunc_MakeVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ABP_PC_Female_C_SetFootIK, CallFunc_Greater_DoubleDouble_A_ImplicitCast) == 0x0004A8, "Member 'ABP_PC_Female_C_SetFootIK::CallFunc_Greater_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(ABP_PC_Female_C_SetFootIK, CallFunc_MakeRotator_Roll_ImplicitCast) == 0x0004B0, "Member 'ABP_PC_Female_C_SetFootIK::CallFunc_MakeRotator_Roll_ImplicitCast' has a wrong offset!");
static_assert(offsetof(ABP_PC_Female_C_SetFootIK, CallFunc_MakeRotator_Pitch_ImplicitCast) == 0x0004B4, "Member 'ABP_PC_Female_C_SetFootIK::CallFunc_MakeRotator_Pitch_ImplicitCast' has a wrong offset!");

// Function ABP_PC_Female.ABP_PC_Female_C.SetPelvisIK
// 0x0128 (0x0128 - 0x0000)
struct ABP_PC_Female_C_SetPelvisIK final
{
public:
	struct FVector                                FootIkTarget_L;                                    // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                FootIKTarget_R;                                    // 0x0018(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                PelvisTarget;                                      // 0x0030(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_46A8[0x7];                                     // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_VInterpTo_ReturnValue;                    // 0x0050(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_VInterpTo_ReturnValue_1;                  // 0x0068(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X;                            // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X_1;                          // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_1;                          // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_1;                          // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue;            // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_46A9[0x7];                                     // 0x00B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_BreakVector_X_2;                          // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_2;                          // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_2;                          // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X_3;                          // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_3;                          // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_3;                          // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetCurveValue_ReturnValue;                // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue_1;          // 0x00EC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_46AA[0x3];                                     // 0x00ED(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetCurveValue_ReturnValue_1;              // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_46AB[0x4];                                     // 0x00F4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Greater_DoubleDouble_A_ImplicitCast;      // 0x0108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_B_ImplicitCast;          // 0x0110(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_A_ImplicitCast;          // 0x0118(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_VariableSet_Foot_IK_Pelvis_Offset_Alpha_ImplicitCast; // 0x0120(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ABP_PC_Female_C_SetPelvisIK) == 0x000008, "Wrong alignment on ABP_PC_Female_C_SetPelvisIK");
static_assert(sizeof(ABP_PC_Female_C_SetPelvisIK) == 0x000128, "Wrong size on ABP_PC_Female_C_SetPelvisIK");
static_assert(offsetof(ABP_PC_Female_C_SetPelvisIK, FootIkTarget_L) == 0x000000, "Member 'ABP_PC_Female_C_SetPelvisIK::FootIkTarget_L' has a wrong offset!");
static_assert(offsetof(ABP_PC_Female_C_SetPelvisIK, FootIKTarget_R) == 0x000018, "Member 'ABP_PC_Female_C_SetPelvisIK::FootIKTarget_R' has a wrong offset!");
static_assert(offsetof(ABP_PC_Female_C_SetPelvisIK, PelvisTarget) == 0x000030, "Member 'ABP_PC_Female_C_SetPelvisIK::PelvisTarget' has a wrong offset!");
static_assert(offsetof(ABP_PC_Female_C_SetPelvisIK, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000048, "Member 'ABP_PC_Female_C_SetPelvisIK::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_PC_Female_C_SetPelvisIK, CallFunc_VInterpTo_ReturnValue) == 0x000050, "Member 'ABP_PC_Female_C_SetPelvisIK::CallFunc_VInterpTo_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_PC_Female_C_SetPelvisIK, CallFunc_VInterpTo_ReturnValue_1) == 0x000068, "Member 'ABP_PC_Female_C_SetPelvisIK::CallFunc_VInterpTo_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ABP_PC_Female_C_SetPelvisIK, CallFunc_BreakVector_X) == 0x000080, "Member 'ABP_PC_Female_C_SetPelvisIK::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(ABP_PC_Female_C_SetPelvisIK, CallFunc_BreakVector_Y) == 0x000088, "Member 'ABP_PC_Female_C_SetPelvisIK::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(ABP_PC_Female_C_SetPelvisIK, CallFunc_BreakVector_Z) == 0x000090, "Member 'ABP_PC_Female_C_SetPelvisIK::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(ABP_PC_Female_C_SetPelvisIK, CallFunc_BreakVector_X_1) == 0x000098, "Member 'ABP_PC_Female_C_SetPelvisIK::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(ABP_PC_Female_C_SetPelvisIK, CallFunc_BreakVector_Y_1) == 0x0000A0, "Member 'ABP_PC_Female_C_SetPelvisIK::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(ABP_PC_Female_C_SetPelvisIK, CallFunc_BreakVector_Z_1) == 0x0000A8, "Member 'ABP_PC_Female_C_SetPelvisIK::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(ABP_PC_Female_C_SetPelvisIK, CallFunc_Less_DoubleDouble_ReturnValue) == 0x0000B0, "Member 'ABP_PC_Female_C_SetPelvisIK::CallFunc_Less_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_PC_Female_C_SetPelvisIK, CallFunc_BreakVector_X_2) == 0x0000B8, "Member 'ABP_PC_Female_C_SetPelvisIK::CallFunc_BreakVector_X_2' has a wrong offset!");
static_assert(offsetof(ABP_PC_Female_C_SetPelvisIK, CallFunc_BreakVector_Y_2) == 0x0000C0, "Member 'ABP_PC_Female_C_SetPelvisIK::CallFunc_BreakVector_Y_2' has a wrong offset!");
static_assert(offsetof(ABP_PC_Female_C_SetPelvisIK, CallFunc_BreakVector_Z_2) == 0x0000C8, "Member 'ABP_PC_Female_C_SetPelvisIK::CallFunc_BreakVector_Z_2' has a wrong offset!");
static_assert(offsetof(ABP_PC_Female_C_SetPelvisIK, CallFunc_BreakVector_X_3) == 0x0000D0, "Member 'ABP_PC_Female_C_SetPelvisIK::CallFunc_BreakVector_X_3' has a wrong offset!");
static_assert(offsetof(ABP_PC_Female_C_SetPelvisIK, CallFunc_BreakVector_Y_3) == 0x0000D8, "Member 'ABP_PC_Female_C_SetPelvisIK::CallFunc_BreakVector_Y_3' has a wrong offset!");
static_assert(offsetof(ABP_PC_Female_C_SetPelvisIK, CallFunc_BreakVector_Z_3) == 0x0000E0, "Member 'ABP_PC_Female_C_SetPelvisIK::CallFunc_BreakVector_Z_3' has a wrong offset!");
static_assert(offsetof(ABP_PC_Female_C_SetPelvisIK, CallFunc_GetCurveValue_ReturnValue) == 0x0000E8, "Member 'ABP_PC_Female_C_SetPelvisIK::CallFunc_GetCurveValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_PC_Female_C_SetPelvisIK, CallFunc_Less_DoubleDouble_ReturnValue_1) == 0x0000EC, "Member 'ABP_PC_Female_C_SetPelvisIK::CallFunc_Less_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ABP_PC_Female_C_SetPelvisIK, CallFunc_GetCurveValue_ReturnValue_1) == 0x0000F0, "Member 'ABP_PC_Female_C_SetPelvisIK::CallFunc_GetCurveValue_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ABP_PC_Female_C_SetPelvisIK, CallFunc_Add_DoubleDouble_ReturnValue) == 0x0000F8, "Member 'ABP_PC_Female_C_SetPelvisIK::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_PC_Female_C_SetPelvisIK, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000100, "Member 'ABP_PC_Female_C_SetPelvisIK::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_PC_Female_C_SetPelvisIK, CallFunc_Greater_DoubleDouble_A_ImplicitCast) == 0x000108, "Member 'ABP_PC_Female_C_SetPelvisIK::CallFunc_Greater_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(ABP_PC_Female_C_SetPelvisIK, CallFunc_Add_DoubleDouble_B_ImplicitCast) == 0x000110, "Member 'ABP_PC_Female_C_SetPelvisIK::CallFunc_Add_DoubleDouble_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(ABP_PC_Female_C_SetPelvisIK, CallFunc_Add_DoubleDouble_A_ImplicitCast) == 0x000118, "Member 'ABP_PC_Female_C_SetPelvisIK::CallFunc_Add_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(ABP_PC_Female_C_SetPelvisIK, K2Node_VariableSet_Foot_IK_Pelvis_Offset_Alpha_ImplicitCast) == 0x000120, "Member 'ABP_PC_Female_C_SetPelvisIK::K2Node_VariableSet_Foot_IK_Pelvis_Offset_Alpha_ImplicitCast' has a wrong offset!");

// Function ABP_PC_Female.ABP_PC_Female_C.UpdateFootIK
// 0x0004 (0x0004 - 0x0000)
struct ABP_PC_Female_C_UpdateFootIK final
{
public:
	bool                                          CallFunc_GetConsoleVariableBoolValue_ReturnValue;  // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsFalling_ReturnValue;                    // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ABP_PC_Female_C_UpdateFootIK) == 0x000001, "Wrong alignment on ABP_PC_Female_C_UpdateFootIK");
static_assert(sizeof(ABP_PC_Female_C_UpdateFootIK) == 0x000004, "Wrong size on ABP_PC_Female_C_UpdateFootIK");
static_assert(offsetof(ABP_PC_Female_C_UpdateFootIK, CallFunc_GetConsoleVariableBoolValue_ReturnValue) == 0x000000, "Member 'ABP_PC_Female_C_UpdateFootIK::CallFunc_GetConsoleVariableBoolValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_PC_Female_C_UpdateFootIK, CallFunc_IsFalling_ReturnValue) == 0x000001, "Member 'ABP_PC_Female_C_UpdateFootIK::CallFunc_IsFalling_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_PC_Female_C_UpdateFootIK, CallFunc_Not_PreBool_ReturnValue) == 0x000002, "Member 'ABP_PC_Female_C_UpdateFootIK::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_PC_Female_C_UpdateFootIK, CallFunc_BooleanAND_ReturnValue) == 0x000003, "Member 'ABP_PC_Female_C_UpdateFootIK::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

}

