#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_Turntable

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "UMG_structs.hpp"
#include "SlateCore_structs.hpp"
#include "InputCore_structs.hpp"


namespace SDK::Params
{

// Function WBP_Turntable.WBP_Turntable_C.ExecuteUbergraph_WBP_Turntable
// 0x0008 (0x0008 - 0x0000)
struct WBP_Turntable_C_ExecuteUbergraph_WBP_Turntable final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDesktop_ReturnValue;                    // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Turntable_C_ExecuteUbergraph_WBP_Turntable) == 0x000004, "Wrong alignment on WBP_Turntable_C_ExecuteUbergraph_WBP_Turntable");
static_assert(sizeof(WBP_Turntable_C_ExecuteUbergraph_WBP_Turntable) == 0x000008, "Wrong size on WBP_Turntable_C_ExecuteUbergraph_WBP_Turntable");
static_assert(offsetof(WBP_Turntable_C_ExecuteUbergraph_WBP_Turntable, EntryPoint) == 0x000000, "Member 'WBP_Turntable_C_ExecuteUbergraph_WBP_Turntable::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_Turntable_C_ExecuteUbergraph_WBP_Turntable, CallFunc_IsDesktop_ReturnValue) == 0x000004, "Member 'WBP_Turntable_C_ExecuteUbergraph_WBP_Turntable::CallFunc_IsDesktop_ReturnValue' has a wrong offset!");

// Function WBP_Turntable.WBP_Turntable_C.OnMouseButtonDown
// 0x0468 (0x0468 - 0x0000)
struct WBP_Turntable_C_OnMouseButtonDown final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FPointerEvent                          MouseEvent;                                        // 0x0038(0x0078)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	struct FEventReply                            ReturnValue;                                       // 0x00B0(0x00B8)(Parm, OutParm, ReturnParm)
	struct FKey                                   CallFunc_PointerEvent_GetEffectingButton_ReturnValue; // 0x0168(0x0018)(HasGetValueTypeHash)
	bool                                          CallFunc_IsHovered_ReturnValue;                    // 0x0180(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_KeyKey_ReturnValue;            // 0x0181(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0182(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_43B8[0x5];                                     // 0x0183(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEventReply                            CallFunc_Handled_ReturnValue;                      // 0x0188(0x00B8)()
	struct FEventReply                            CallFunc_Unhandled_ReturnValue;                    // 0x0240(0x00B8)()
	struct FEventReply                            CallFunc_CaptureMouse_ReturnValue;                 // 0x02F8(0x00B8)()
	struct FEventReply                            CallFunc_SetUserFocus_ReturnValue;                 // 0x03B0(0x00B8)()
};
static_assert(alignof(WBP_Turntable_C_OnMouseButtonDown) == 0x000008, "Wrong alignment on WBP_Turntable_C_OnMouseButtonDown");
static_assert(sizeof(WBP_Turntable_C_OnMouseButtonDown) == 0x000468, "Wrong size on WBP_Turntable_C_OnMouseButtonDown");
static_assert(offsetof(WBP_Turntable_C_OnMouseButtonDown, MyGeometry) == 0x000000, "Member 'WBP_Turntable_C_OnMouseButtonDown::MyGeometry' has a wrong offset!");
static_assert(offsetof(WBP_Turntable_C_OnMouseButtonDown, MouseEvent) == 0x000038, "Member 'WBP_Turntable_C_OnMouseButtonDown::MouseEvent' has a wrong offset!");
static_assert(offsetof(WBP_Turntable_C_OnMouseButtonDown, ReturnValue) == 0x0000B0, "Member 'WBP_Turntable_C_OnMouseButtonDown::ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Turntable_C_OnMouseButtonDown, CallFunc_PointerEvent_GetEffectingButton_ReturnValue) == 0x000168, "Member 'WBP_Turntable_C_OnMouseButtonDown::CallFunc_PointerEvent_GetEffectingButton_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Turntable_C_OnMouseButtonDown, CallFunc_IsHovered_ReturnValue) == 0x000180, "Member 'WBP_Turntable_C_OnMouseButtonDown::CallFunc_IsHovered_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Turntable_C_OnMouseButtonDown, CallFunc_EqualEqual_KeyKey_ReturnValue) == 0x000181, "Member 'WBP_Turntable_C_OnMouseButtonDown::CallFunc_EqualEqual_KeyKey_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Turntable_C_OnMouseButtonDown, CallFunc_BooleanAND_ReturnValue) == 0x000182, "Member 'WBP_Turntable_C_OnMouseButtonDown::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Turntable_C_OnMouseButtonDown, CallFunc_Handled_ReturnValue) == 0x000188, "Member 'WBP_Turntable_C_OnMouseButtonDown::CallFunc_Handled_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Turntable_C_OnMouseButtonDown, CallFunc_Unhandled_ReturnValue) == 0x000240, "Member 'WBP_Turntable_C_OnMouseButtonDown::CallFunc_Unhandled_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Turntable_C_OnMouseButtonDown, CallFunc_CaptureMouse_ReturnValue) == 0x0002F8, "Member 'WBP_Turntable_C_OnMouseButtonDown::CallFunc_CaptureMouse_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Turntable_C_OnMouseButtonDown, CallFunc_SetUserFocus_ReturnValue) == 0x0003B0, "Member 'WBP_Turntable_C_OnMouseButtonDown::CallFunc_SetUserFocus_ReturnValue' has a wrong offset!");

// Function WBP_Turntable.WBP_Turntable_C.OnMouseButtonUp
// 0x03B0 (0x03B0 - 0x0000)
struct WBP_Turntable_C_OnMouseButtonUp final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FPointerEvent                          MouseEvent;                                        // 0x0038(0x0078)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	struct FEventReply                            ReturnValue;                                       // 0x00B0(0x00B8)(Parm, OutParm, ReturnParm)
	struct FEventReply                            CallFunc_Handled_ReturnValue;                      // 0x0168(0x00B8)()
	struct FKey                                   CallFunc_PointerEvent_GetEffectingButton_ReturnValue; // 0x0220(0x0018)(HasGetValueTypeHash)
	struct FEventReply                            CallFunc_ReleaseMouseCapture_ReturnValue;          // 0x0238(0x00B8)()
	bool                                          CallFunc_EqualEqual_KeyKey_ReturnValue;            // 0x02F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_43B9[0x7];                                     // 0x02F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEventReply                            CallFunc_Unhandled_ReturnValue;                    // 0x02F8(0x00B8)()
};
static_assert(alignof(WBP_Turntable_C_OnMouseButtonUp) == 0x000008, "Wrong alignment on WBP_Turntable_C_OnMouseButtonUp");
static_assert(sizeof(WBP_Turntable_C_OnMouseButtonUp) == 0x0003B0, "Wrong size on WBP_Turntable_C_OnMouseButtonUp");
static_assert(offsetof(WBP_Turntable_C_OnMouseButtonUp, MyGeometry) == 0x000000, "Member 'WBP_Turntable_C_OnMouseButtonUp::MyGeometry' has a wrong offset!");
static_assert(offsetof(WBP_Turntable_C_OnMouseButtonUp, MouseEvent) == 0x000038, "Member 'WBP_Turntable_C_OnMouseButtonUp::MouseEvent' has a wrong offset!");
static_assert(offsetof(WBP_Turntable_C_OnMouseButtonUp, ReturnValue) == 0x0000B0, "Member 'WBP_Turntable_C_OnMouseButtonUp::ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Turntable_C_OnMouseButtonUp, CallFunc_Handled_ReturnValue) == 0x000168, "Member 'WBP_Turntable_C_OnMouseButtonUp::CallFunc_Handled_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Turntable_C_OnMouseButtonUp, CallFunc_PointerEvent_GetEffectingButton_ReturnValue) == 0x000220, "Member 'WBP_Turntable_C_OnMouseButtonUp::CallFunc_PointerEvent_GetEffectingButton_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Turntable_C_OnMouseButtonUp, CallFunc_ReleaseMouseCapture_ReturnValue) == 0x000238, "Member 'WBP_Turntable_C_OnMouseButtonUp::CallFunc_ReleaseMouseCapture_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Turntable_C_OnMouseButtonUp, CallFunc_EqualEqual_KeyKey_ReturnValue) == 0x0002F0, "Member 'WBP_Turntable_C_OnMouseButtonUp::CallFunc_EqualEqual_KeyKey_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Turntable_C_OnMouseButtonUp, CallFunc_Unhandled_ReturnValue) == 0x0002F8, "Member 'WBP_Turntable_C_OnMouseButtonUp::CallFunc_Unhandled_ReturnValue' has a wrong offset!");

// Function WBP_Turntable.WBP_Turntable_C.OnMouseDragged__DelegateSignature
// 0x0018 (0x0018 - 0x0000)
struct WBP_Turntable_C_OnMouseDragged__DelegateSignature final
{
public:
	struct FRotator                               Rotation;                                          // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WBP_Turntable_C_OnMouseDragged__DelegateSignature) == 0x000008, "Wrong alignment on WBP_Turntable_C_OnMouseDragged__DelegateSignature");
static_assert(sizeof(WBP_Turntable_C_OnMouseDragged__DelegateSignature) == 0x000018, "Wrong size on WBP_Turntable_C_OnMouseDragged__DelegateSignature");
static_assert(offsetof(WBP_Turntable_C_OnMouseDragged__DelegateSignature, Rotation) == 0x000000, "Member 'WBP_Turntable_C_OnMouseDragged__DelegateSignature::Rotation' has a wrong offset!");

// Function WBP_Turntable.WBP_Turntable_C.OnMouseMove
// 0x0338 (0x0338 - 0x0000)
struct WBP_Turntable_C_OnMouseMove final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FPointerEvent                          MouseEvent;                                        // 0x0038(0x0078)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	struct FEventReply                            ReturnValue;                                       // 0x00B0(0x00B8)(Parm, OutParm, ReturnParm)
	struct FVector2D                              CallFunc_PointerEvent_GetCursorDelta_ReturnValue;  // 0x0168(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_PointerEvent_IsMouseButtonDown_ReturnValue; // 0x0178(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_43BA[0x7];                                     // 0x0179(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_BreakVector2D_X;                          // 0x0180(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y;                          // 0x0188(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0190(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_43BB[0x7];                                     // 0x0191(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0198(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x01A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FEventReply                            CallFunc_Handled_ReturnValue;                      // 0x01A8(0x00B8)()
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x0260(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FEventReply                            CallFunc_Unhandled_ReturnValue;                    // 0x0278(0x00B8)()
	float                                         CallFunc_MakeRotator_Yaw_ImplicitCast;             // 0x0330(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Turntable_C_OnMouseMove) == 0x000008, "Wrong alignment on WBP_Turntable_C_OnMouseMove");
static_assert(sizeof(WBP_Turntable_C_OnMouseMove) == 0x000338, "Wrong size on WBP_Turntable_C_OnMouseMove");
static_assert(offsetof(WBP_Turntable_C_OnMouseMove, MyGeometry) == 0x000000, "Member 'WBP_Turntable_C_OnMouseMove::MyGeometry' has a wrong offset!");
static_assert(offsetof(WBP_Turntable_C_OnMouseMove, MouseEvent) == 0x000038, "Member 'WBP_Turntable_C_OnMouseMove::MouseEvent' has a wrong offset!");
static_assert(offsetof(WBP_Turntable_C_OnMouseMove, ReturnValue) == 0x0000B0, "Member 'WBP_Turntable_C_OnMouseMove::ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Turntable_C_OnMouseMove, CallFunc_PointerEvent_GetCursorDelta_ReturnValue) == 0x000168, "Member 'WBP_Turntable_C_OnMouseMove::CallFunc_PointerEvent_GetCursorDelta_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Turntable_C_OnMouseMove, CallFunc_PointerEvent_IsMouseButtonDown_ReturnValue) == 0x000178, "Member 'WBP_Turntable_C_OnMouseMove::CallFunc_PointerEvent_IsMouseButtonDown_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Turntable_C_OnMouseMove, CallFunc_BreakVector2D_X) == 0x000180, "Member 'WBP_Turntable_C_OnMouseMove::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(WBP_Turntable_C_OnMouseMove, CallFunc_BreakVector2D_Y) == 0x000188, "Member 'WBP_Turntable_C_OnMouseMove::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(WBP_Turntable_C_OnMouseMove, CallFunc_BooleanAND_ReturnValue) == 0x000190, "Member 'WBP_Turntable_C_OnMouseMove::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Turntable_C_OnMouseMove, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000198, "Member 'WBP_Turntable_C_OnMouseMove::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Turntable_C_OnMouseMove, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x0001A0, "Member 'WBP_Turntable_C_OnMouseMove::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_Turntable_C_OnMouseMove, CallFunc_Handled_ReturnValue) == 0x0001A8, "Member 'WBP_Turntable_C_OnMouseMove::CallFunc_Handled_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Turntable_C_OnMouseMove, CallFunc_MakeRotator_ReturnValue) == 0x000260, "Member 'WBP_Turntable_C_OnMouseMove::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Turntable_C_OnMouseMove, CallFunc_Unhandled_ReturnValue) == 0x000278, "Member 'WBP_Turntable_C_OnMouseMove::CallFunc_Unhandled_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Turntable_C_OnMouseMove, CallFunc_MakeRotator_Yaw_ImplicitCast) == 0x000330, "Member 'WBP_Turntable_C_OnMouseMove::CallFunc_MakeRotator_Yaw_ImplicitCast' has a wrong offset!");

// Function WBP_Turntable.WBP_Turntable_C.SetEnabled
// 0x0001 (0x0001 - 0x0000)
struct WBP_Turntable_C_SetEnabled final
{
public:
	bool                                          IsEnabled;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Turntable_C_SetEnabled) == 0x000001, "Wrong alignment on WBP_Turntable_C_SetEnabled");
static_assert(sizeof(WBP_Turntable_C_SetEnabled) == 0x000001, "Wrong size on WBP_Turntable_C_SetEnabled");
static_assert(offsetof(WBP_Turntable_C_SetEnabled, IsEnabled) == 0x000000, "Member 'WBP_Turntable_C_SetEnabled::IsEnabled' has a wrong offset!");

}

