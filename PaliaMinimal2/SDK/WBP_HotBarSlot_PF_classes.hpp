#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_HotBarSlot_PF

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CommonWidgetInputExtended_classes.hpp"
#include "CoreUObject_structs.hpp"
#include "UMG_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_HotBarSlot_PF.WBP_HotBarSlot_PF_C
// 0x0080 (0x0590 - 0x0510)
class UWBP_HotBarSlot_PF_C final : public UCommonActivatableWidgetInputExtended
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0510(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UImage*                                 Image_ErrorBorder;                                 // 0x0518(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UVALUI_TextBlock_Styled*                Text_SlotNumber;                                   // 0x0520(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_Item_CM_C*                         WBP_Item_CM;                                       // 0x0528(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_ItemSlot_CM_C*                     WBP_ItemSlot_CM;                                   // 0x0530(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWidgetSwitcher*                        WidgetSwitcher_Item;                               // 0x0538(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	int32                                         SlotNumber;                                        // 0x0540(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	struct FLinearColor                           DeselectedAmountTextColor;                         // 0x0544(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           SelectedAmountTextColor;                           // 0x0554(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bHighlighted;                                      // 0x0564(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_52F5[0x3];                                     // 0x0565(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	FMulticastInlineDelegateProperty_             OnSlotTouched;                                     // 0x0568(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	FMulticastInlineDelegateProperty_             OnHotbarSlotUseItem;                               // 0x0578(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	bool                                          IsKeepActivate;                                    // 0x0588(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_WBP_HotBarSlot_PF(int32 EntryPoint, bool Temp_bool_Variable, const struct FInputActionValue& K2Node_EnhancedInputActionEvent_ActionValue, float K2Node_EnhancedInputActionEvent_ElapsedTime, float K2Node_EnhancedInputActionEvent_TriggeredTime, class UInputAction* K2Node_EnhancedInputActionEvent_SourceAction, class UInputAction* Temp_object_Variable, bool CallFunc_Conv_InputActionValueToBool_ReturnValue, double Temp_real_Variable, double Temp_real_Variable_1, double Temp_real_Variable_0, double Temp_real_Variable_1_0, bool Temp_bool_Variable_1, const struct FValeriaItem& K2Node_CustomEvent_Item, bool K2Node_CustomEvent_NewHighlighted, bool K2Node_CustomEvent_IsFilterMode, double Temp_real_Variable_2, bool CallFunc_ItemIsEmpty_ReturnValue, double Temp_real_Variable_3, class UInputAction* Temp_object_Variable_1, const struct FInputActionValue& K2Node_EnhancedInputActionEvent_ActionValue_1, float K2Node_EnhancedInputActionEvent_ElapsedTime_1, float K2Node_EnhancedInputActionEvent_TriggeredTime_1, class UInputAction* K2Node_EnhancedInputActionEvent_SourceAction_1, double Temp_real_Variable_3_0, double Temp_real_Variable_2_0, bool CallFunc_Conv_InputActionValueToBool_ReturnValue_1);
	void InpActEvt_IA_CancelUseHotbar_PF_K2Node_EnhancedInputActionEvent_0(const struct FInputActionValue& ActionValue, float ElapsedTime, float TriggeredTime, class UInputAction* SourceAction);
	void InpActEvt_IA_UseHotbarItem_K2Node_EnhancedInputActionEvent_1(const struct FInputActionValue& ActionValue, float ElapsedTime, float TriggeredTime, class UInputAction* SourceAction);
	void OnHotbarSlotUseItem__DelegateSignature(bool ConfirmUseItem);
	void OnSlotTouched__DelegateSignature(class UWBP_HotBarSlot_PF_C* SlotRef, int32 Param_SlotNumber);
	struct FEventReply OnTouchEnded(const struct FGeometry& MyGeometry, struct FPointerEvent& InTouchEvent, const struct FEventReply& CallFunc_Handled_ReturnValue);
	void SetSlotNumber(int32 Param_SlotNumber, int32 CallFunc_Add_IntInt_ReturnValue, class FText CallFunc_Conv_IntToText_ReturnValue);
	void Toggle_Highlight(bool IsHighlighted, class UVALUI_TextBlockStyle* Temp_object_Variable, class UVALUI_TextBlockStyle* Temp_object_Variable_1, bool Temp_bool_Variable, double Temp_real_Variable, double Temp_real_Variable_1, bool Temp_bool_Variable_1, bool CallFunc_Not_PreBool_ReturnValue, class UVALUI_TextBlockStyle* K2Node_Select_Default, bool CallFunc_NotEqual_BoolBool_ReturnValue, double K2Node_Select_Default_1, const struct FLinearColor& CallFunc_SelectColor_ReturnValue, const struct FSlateColor& K2Node_MakeStruct_SlateColor);
	void UpdateErrorBorder(bool ShouldBeVisible, bool Temp_bool_Variable, ESlateVisibility Temp_byte_Variable, ESlateVisibility Temp_byte_Variable_1, ESlateVisibility K2Node_Select_Default);
	void UpdateHotBarSlot(const struct FValeriaItem& Item, bool NewHighlighted, bool IsFilterMode);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_HotBarSlot_PF_C">();
	}
	static class UWBP_HotBarSlot_PF_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_HotBarSlot_PF_C>();
	}
};
static_assert(alignof(UWBP_HotBarSlot_PF_C) == 0x000008, "Wrong alignment on UWBP_HotBarSlot_PF_C");
static_assert(sizeof(UWBP_HotBarSlot_PF_C) == 0x000590, "Wrong size on UWBP_HotBarSlot_PF_C");
static_assert(offsetof(UWBP_HotBarSlot_PF_C, UberGraphFrame) == 0x000510, "Member 'UWBP_HotBarSlot_PF_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWBP_HotBarSlot_PF_C, Image_ErrorBorder) == 0x000518, "Member 'UWBP_HotBarSlot_PF_C::Image_ErrorBorder' has a wrong offset!");
static_assert(offsetof(UWBP_HotBarSlot_PF_C, Text_SlotNumber) == 0x000520, "Member 'UWBP_HotBarSlot_PF_C::Text_SlotNumber' has a wrong offset!");
static_assert(offsetof(UWBP_HotBarSlot_PF_C, WBP_Item_CM) == 0x000528, "Member 'UWBP_HotBarSlot_PF_C::WBP_Item_CM' has a wrong offset!");
static_assert(offsetof(UWBP_HotBarSlot_PF_C, WBP_ItemSlot_CM) == 0x000530, "Member 'UWBP_HotBarSlot_PF_C::WBP_ItemSlot_CM' has a wrong offset!");
static_assert(offsetof(UWBP_HotBarSlot_PF_C, WidgetSwitcher_Item) == 0x000538, "Member 'UWBP_HotBarSlot_PF_C::WidgetSwitcher_Item' has a wrong offset!");
static_assert(offsetof(UWBP_HotBarSlot_PF_C, SlotNumber) == 0x000540, "Member 'UWBP_HotBarSlot_PF_C::SlotNumber' has a wrong offset!");
static_assert(offsetof(UWBP_HotBarSlot_PF_C, DeselectedAmountTextColor) == 0x000544, "Member 'UWBP_HotBarSlot_PF_C::DeselectedAmountTextColor' has a wrong offset!");
static_assert(offsetof(UWBP_HotBarSlot_PF_C, SelectedAmountTextColor) == 0x000554, "Member 'UWBP_HotBarSlot_PF_C::SelectedAmountTextColor' has a wrong offset!");
static_assert(offsetof(UWBP_HotBarSlot_PF_C, bHighlighted) == 0x000564, "Member 'UWBP_HotBarSlot_PF_C::bHighlighted' has a wrong offset!");
static_assert(offsetof(UWBP_HotBarSlot_PF_C, OnSlotTouched) == 0x000568, "Member 'UWBP_HotBarSlot_PF_C::OnSlotTouched' has a wrong offset!");
static_assert(offsetof(UWBP_HotBarSlot_PF_C, OnHotbarSlotUseItem) == 0x000578, "Member 'UWBP_HotBarSlot_PF_C::OnHotbarSlotUseItem' has a wrong offset!");
static_assert(offsetof(UWBP_HotBarSlot_PF_C, IsKeepActivate) == 0x000588, "Member 'UWBP_HotBarSlot_PF_C::IsKeepActivate' has a wrong offset!");

}

