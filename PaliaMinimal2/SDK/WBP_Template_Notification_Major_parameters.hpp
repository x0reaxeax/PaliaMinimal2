#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_Template_Notification_Major

#include "Basic.hpp"

#include "UMG_structs.hpp"


namespace SDK::Params
{

// Function WBP_Template_Notification_Major.WBP_Template_Notification_Major_C.ExecuteUbergraph_WBP_Template_Notification_Major
// 0x000C (0x000C - 0x0000)
struct WBP_Template_Notification_Major_C_ExecuteUbergraph_WBP_Template_Notification_Major final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAnyChildren_ReturnValue;               // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Template_Notification_Major_C_ExecuteUbergraph_WBP_Template_Notification_Major) == 0x000004, "Wrong alignment on WBP_Template_Notification_Major_C_ExecuteUbergraph_WBP_Template_Notification_Major");
static_assert(sizeof(WBP_Template_Notification_Major_C_ExecuteUbergraph_WBP_Template_Notification_Major) == 0x00000C, "Wrong size on WBP_Template_Notification_Major_C_ExecuteUbergraph_WBP_Template_Notification_Major");
static_assert(offsetof(WBP_Template_Notification_Major_C_ExecuteUbergraph_WBP_Template_Notification_Major, EntryPoint) == 0x000000, "Member 'WBP_Template_Notification_Major_C_ExecuteUbergraph_WBP_Template_Notification_Major::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_Template_Notification_Major_C_ExecuteUbergraph_WBP_Template_Notification_Major, Temp_bool_Variable) == 0x000004, "Member 'WBP_Template_Notification_Major_C_ExecuteUbergraph_WBP_Template_Notification_Major::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Template_Notification_Major_C_ExecuteUbergraph_WBP_Template_Notification_Major, Temp_byte_Variable) == 0x000005, "Member 'WBP_Template_Notification_Major_C_ExecuteUbergraph_WBP_Template_Notification_Major::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Template_Notification_Major_C_ExecuteUbergraph_WBP_Template_Notification_Major, Temp_byte_Variable_1) == 0x000006, "Member 'WBP_Template_Notification_Major_C_ExecuteUbergraph_WBP_Template_Notification_Major::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_Template_Notification_Major_C_ExecuteUbergraph_WBP_Template_Notification_Major, CallFunc_HasAnyChildren_ReturnValue) == 0x000007, "Member 'WBP_Template_Notification_Major_C_ExecuteUbergraph_WBP_Template_Notification_Major::CallFunc_HasAnyChildren_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Template_Notification_Major_C_ExecuteUbergraph_WBP_Template_Notification_Major, K2Node_Select_Default) == 0x000008, "Member 'WBP_Template_Notification_Major_C_ExecuteUbergraph_WBP_Template_Notification_Major::K2Node_Select_Default' has a wrong offset!");

// Function WBP_Template_Notification_Major.WBP_Template_Notification_Major_C.HandleIntroTransitionAnimationFinished
// 0x0010 (0x0010 - 0x0000)
struct WBP_Template_Notification_Major_C_HandleIntroTransitionAnimationFinished final
{
public:
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0000(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Template_Notification_Major_C_HandleIntroTransitionAnimationFinished) == 0x000004, "Wrong alignment on WBP_Template_Notification_Major_C_HandleIntroTransitionAnimationFinished");
static_assert(sizeof(WBP_Template_Notification_Major_C_HandleIntroTransitionAnimationFinished) == 0x000010, "Wrong size on WBP_Template_Notification_Major_C_HandleIntroTransitionAnimationFinished");
static_assert(offsetof(WBP_Template_Notification_Major_C_HandleIntroTransitionAnimationFinished, K2Node_CreateDelegate_OutputDelegate) == 0x000000, "Member 'WBP_Template_Notification_Major_C_HandleIntroTransitionAnimationFinished::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");

// Function WBP_Template_Notification_Major.WBP_Template_Notification_Major_C.HandleOutroTransitionAnimationFinished
// 0x0010 (0x0010 - 0x0000)
struct WBP_Template_Notification_Major_C_HandleOutroTransitionAnimationFinished final
{
public:
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0000(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Template_Notification_Major_C_HandleOutroTransitionAnimationFinished) == 0x000004, "Wrong alignment on WBP_Template_Notification_Major_C_HandleOutroTransitionAnimationFinished");
static_assert(sizeof(WBP_Template_Notification_Major_C_HandleOutroTransitionAnimationFinished) == 0x000010, "Wrong size on WBP_Template_Notification_Major_C_HandleOutroTransitionAnimationFinished");
static_assert(offsetof(WBP_Template_Notification_Major_C_HandleOutroTransitionAnimationFinished, K2Node_CreateDelegate_OutputDelegate) == 0x000000, "Member 'WBP_Template_Notification_Major_C_HandleOutroTransitionAnimationFinished::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");

// Function WBP_Template_Notification_Major.WBP_Template_Notification_Major_C.OnFinishedIntroTransitionAnimation__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct WBP_Template_Notification_Major_C_OnFinishedIntroTransitionAnimation__DelegateSignature final
{
public:
	class UWBP_Template_Notification_Major_C*     MajorNotificationTemplate;                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Template_Notification_Major_C_OnFinishedIntroTransitionAnimation__DelegateSignature) == 0x000008, "Wrong alignment on WBP_Template_Notification_Major_C_OnFinishedIntroTransitionAnimation__DelegateSignature");
static_assert(sizeof(WBP_Template_Notification_Major_C_OnFinishedIntroTransitionAnimation__DelegateSignature) == 0x000008, "Wrong size on WBP_Template_Notification_Major_C_OnFinishedIntroTransitionAnimation__DelegateSignature");
static_assert(offsetof(WBP_Template_Notification_Major_C_OnFinishedIntroTransitionAnimation__DelegateSignature, MajorNotificationTemplate) == 0x000000, "Member 'WBP_Template_Notification_Major_C_OnFinishedIntroTransitionAnimation__DelegateSignature::MajorNotificationTemplate' has a wrong offset!");

// Function WBP_Template_Notification_Major.WBP_Template_Notification_Major_C.OnFinishedOutroTransitionAnimation__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct WBP_Template_Notification_Major_C_OnFinishedOutroTransitionAnimation__DelegateSignature final
{
public:
	class UWBP_Template_Notification_Major_C*     MajorNotificationTemplate;                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Template_Notification_Major_C_OnFinishedOutroTransitionAnimation__DelegateSignature) == 0x000008, "Wrong alignment on WBP_Template_Notification_Major_C_OnFinishedOutroTransitionAnimation__DelegateSignature");
static_assert(sizeof(WBP_Template_Notification_Major_C_OnFinishedOutroTransitionAnimation__DelegateSignature) == 0x000008, "Wrong size on WBP_Template_Notification_Major_C_OnFinishedOutroTransitionAnimation__DelegateSignature");
static_assert(offsetof(WBP_Template_Notification_Major_C_OnFinishedOutroTransitionAnimation__DelegateSignature, MajorNotificationTemplate) == 0x000000, "Member 'WBP_Template_Notification_Major_C_OnFinishedOutroTransitionAnimation__DelegateSignature::MajorNotificationTemplate' has a wrong offset!");

// Function WBP_Template_Notification_Major.WBP_Template_Notification_Major_C.PlayIntroTransitionAnimation
// 0x0018 (0x0018 - 0x0000)
struct WBP_Template_Notification_Major_C_PlayIntroTransitionAnimation final
{
public:
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0000(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationForward_ReturnValue;         // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Template_Notification_Major_C_PlayIntroTransitionAnimation) == 0x000008, "Wrong alignment on WBP_Template_Notification_Major_C_PlayIntroTransitionAnimation");
static_assert(sizeof(WBP_Template_Notification_Major_C_PlayIntroTransitionAnimation) == 0x000018, "Wrong size on WBP_Template_Notification_Major_C_PlayIntroTransitionAnimation");
static_assert(offsetof(WBP_Template_Notification_Major_C_PlayIntroTransitionAnimation, K2Node_CreateDelegate_OutputDelegate) == 0x000000, "Member 'WBP_Template_Notification_Major_C_PlayIntroTransitionAnimation::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WBP_Template_Notification_Major_C_PlayIntroTransitionAnimation, CallFunc_PlayAnimationForward_ReturnValue) == 0x000010, "Member 'WBP_Template_Notification_Major_C_PlayIntroTransitionAnimation::CallFunc_PlayAnimationForward_ReturnValue' has a wrong offset!");

// Function WBP_Template_Notification_Major.WBP_Template_Notification_Major_C.PlayOutroTransitionAnimation
// 0x0018 (0x0018 - 0x0000)
struct WBP_Template_Notification_Major_C_PlayOutroTransitionAnimation final
{
public:
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0000(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationReverse_ReturnValue;         // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Template_Notification_Major_C_PlayOutroTransitionAnimation) == 0x000008, "Wrong alignment on WBP_Template_Notification_Major_C_PlayOutroTransitionAnimation");
static_assert(sizeof(WBP_Template_Notification_Major_C_PlayOutroTransitionAnimation) == 0x000018, "Wrong size on WBP_Template_Notification_Major_C_PlayOutroTransitionAnimation");
static_assert(offsetof(WBP_Template_Notification_Major_C_PlayOutroTransitionAnimation, K2Node_CreateDelegate_OutputDelegate) == 0x000000, "Member 'WBP_Template_Notification_Major_C_PlayOutroTransitionAnimation::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WBP_Template_Notification_Major_C_PlayOutroTransitionAnimation, CallFunc_PlayAnimationReverse_ReturnValue) == 0x000010, "Member 'WBP_Template_Notification_Major_C_PlayOutroTransitionAnimation::CallFunc_PlayAnimationReverse_ReturnValue' has a wrong offset!");

}

