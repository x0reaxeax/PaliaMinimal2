#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_InventoryBag_CM

#include "Basic.hpp"

#include "SlateCore_structs.hpp"
#include "GameplayTags_structs.hpp"
#include "Palia_structs.hpp"
#include "UMG_structs.hpp"


namespace SDK::Params
{

// Function WBP_InventoryBag_CM.WBP_InventoryBag_CM_C.OnSlotFocused__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct WBP_InventoryBag_CM_C_OnSlotFocused__DelegateSignature final
{
public:
	class UWidget*                                Widget;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_InventoryBag_CM_C_OnSlotFocused__DelegateSignature) == 0x000008, "Wrong alignment on WBP_InventoryBag_CM_C_OnSlotFocused__DelegateSignature");
static_assert(sizeof(WBP_InventoryBag_CM_C_OnSlotFocused__DelegateSignature) == 0x000008, "Wrong size on WBP_InventoryBag_CM_C_OnSlotFocused__DelegateSignature");
static_assert(offsetof(WBP_InventoryBag_CM_C_OnSlotFocused__DelegateSignature, Widget) == 0x000000, "Member 'WBP_InventoryBag_CM_C_OnSlotFocused__DelegateSignature::Widget' has a wrong offset!");

// Function WBP_InventoryBag_CM.WBP_InventoryBag_CM_C.OnOpenActionMenu__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct WBP_InventoryBag_CM_C_OnOpenActionMenu__DelegateSignature final
{
public:
	class UWBP_InventorySlot_CM_C*                Param_Slot;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_InventoryBag_CM_C_OnOpenActionMenu__DelegateSignature) == 0x000008, "Wrong alignment on WBP_InventoryBag_CM_C_OnOpenActionMenu__DelegateSignature");
static_assert(sizeof(WBP_InventoryBag_CM_C_OnOpenActionMenu__DelegateSignature) == 0x000008, "Wrong size on WBP_InventoryBag_CM_C_OnOpenActionMenu__DelegateSignature");
static_assert(offsetof(WBP_InventoryBag_CM_C_OnOpenActionMenu__DelegateSignature, Param_Slot) == 0x000000, "Member 'WBP_InventoryBag_CM_C_OnOpenActionMenu__DelegateSignature::Param_Slot' has a wrong offset!");

// Function WBP_InventoryBag_CM.WBP_InventoryBag_CM_C.OnSlotGamepadSelect__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct WBP_InventoryBag_CM_C_OnSlotGamepadSelect__DelegateSignature final
{
public:
	class UWBP_InventorySlot_CM_C*                Param_Slot;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UWBP_InventoryBag_CM_C*                 Bag;                                               // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_InventoryBag_CM_C_OnSlotGamepadSelect__DelegateSignature) == 0x000008, "Wrong alignment on WBP_InventoryBag_CM_C_OnSlotGamepadSelect__DelegateSignature");
static_assert(sizeof(WBP_InventoryBag_CM_C_OnSlotGamepadSelect__DelegateSignature) == 0x000010, "Wrong size on WBP_InventoryBag_CM_C_OnSlotGamepadSelect__DelegateSignature");
static_assert(offsetof(WBP_InventoryBag_CM_C_OnSlotGamepadSelect__DelegateSignature, Param_Slot) == 0x000000, "Member 'WBP_InventoryBag_CM_C_OnSlotGamepadSelect__DelegateSignature::Param_Slot' has a wrong offset!");
static_assert(offsetof(WBP_InventoryBag_CM_C_OnSlotGamepadSelect__DelegateSignature, Bag) == 0x000008, "Member 'WBP_InventoryBag_CM_C_OnSlotGamepadSelect__DelegateSignature::Bag' has a wrong offset!");

// Function WBP_InventoryBag_CM.WBP_InventoryBag_CM_C.OnSlotGamepadCancel__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct WBP_InventoryBag_CM_C_OnSlotGamepadCancel__DelegateSignature final
{
public:
	class UWBP_InventorySlot_CM_C*                Param_Slot;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UWBP_InventoryBag_CM_C*                 Bag;                                               // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_InventoryBag_CM_C_OnSlotGamepadCancel__DelegateSignature) == 0x000008, "Wrong alignment on WBP_InventoryBag_CM_C_OnSlotGamepadCancel__DelegateSignature");
static_assert(sizeof(WBP_InventoryBag_CM_C_OnSlotGamepadCancel__DelegateSignature) == 0x000010, "Wrong size on WBP_InventoryBag_CM_C_OnSlotGamepadCancel__DelegateSignature");
static_assert(offsetof(WBP_InventoryBag_CM_C_OnSlotGamepadCancel__DelegateSignature, Param_Slot) == 0x000000, "Member 'WBP_InventoryBag_CM_C_OnSlotGamepadCancel__DelegateSignature::Param_Slot' has a wrong offset!");
static_assert(offsetof(WBP_InventoryBag_CM_C_OnSlotGamepadCancel__DelegateSignature, Bag) == 0x000008, "Member 'WBP_InventoryBag_CM_C_OnSlotGamepadCancel__DelegateSignature::Bag' has a wrong offset!");

// Function WBP_InventoryBag_CM.WBP_InventoryBag_CM_C.OnSlotLeftClicked__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct WBP_InventoryBag_CM_C_OnSlotLeftClicked__DelegateSignature final
{
public:
	class UWBP_InventoryBag_CM_C*                 Bag;                                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UWBP_InventorySlot_CM_C*                Param_Slot;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_InventoryBag_CM_C_OnSlotLeftClicked__DelegateSignature) == 0x000008, "Wrong alignment on WBP_InventoryBag_CM_C_OnSlotLeftClicked__DelegateSignature");
static_assert(sizeof(WBP_InventoryBag_CM_C_OnSlotLeftClicked__DelegateSignature) == 0x000010, "Wrong size on WBP_InventoryBag_CM_C_OnSlotLeftClicked__DelegateSignature");
static_assert(offsetof(WBP_InventoryBag_CM_C_OnSlotLeftClicked__DelegateSignature, Bag) == 0x000000, "Member 'WBP_InventoryBag_CM_C_OnSlotLeftClicked__DelegateSignature::Bag' has a wrong offset!");
static_assert(offsetof(WBP_InventoryBag_CM_C_OnSlotLeftClicked__DelegateSignature, Param_Slot) == 0x000008, "Member 'WBP_InventoryBag_CM_C_OnSlotLeftClicked__DelegateSignature::Param_Slot' has a wrong offset!");

// Function WBP_InventoryBag_CM.WBP_InventoryBag_CM_C.OnSlotRightClicked__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct WBP_InventoryBag_CM_C_OnSlotRightClicked__DelegateSignature final
{
public:
	class UWBP_InventoryBag_CM_C*                 Bag;                                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UWBP_InventorySlot_CM_C*                Param_Slot;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_InventoryBag_CM_C_OnSlotRightClicked__DelegateSignature) == 0x000008, "Wrong alignment on WBP_InventoryBag_CM_C_OnSlotRightClicked__DelegateSignature");
static_assert(sizeof(WBP_InventoryBag_CM_C_OnSlotRightClicked__DelegateSignature) == 0x000010, "Wrong size on WBP_InventoryBag_CM_C_OnSlotRightClicked__DelegateSignature");
static_assert(offsetof(WBP_InventoryBag_CM_C_OnSlotRightClicked__DelegateSignature, Bag) == 0x000000, "Member 'WBP_InventoryBag_CM_C_OnSlotRightClicked__DelegateSignature::Bag' has a wrong offset!");
static_assert(offsetof(WBP_InventoryBag_CM_C_OnSlotRightClicked__DelegateSignature, Param_Slot) == 0x000008, "Member 'WBP_InventoryBag_CM_C_OnSlotRightClicked__DelegateSignature::Param_Slot' has a wrong offset!");

// Function WBP_InventoryBag_CM.WBP_InventoryBag_CM_C.DetermineInventorySlotPadding
// 0x00C8 (0x00C8 - 0x0000)
struct WBP_InventoryBag_CM_C_DetermineInventorySlotPadding final
{
public:
	class UWBP_InventorySlot_CM_C*                InventorySlot;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         RowIndex;                                          // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FMargin                                Param_Padding;                                     // 0x000C(0x0010)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_591B[0x4];                                     // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        SidePadding;                                       // 0x0020(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_591C[0x6];                                     // 0x002A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_1;           // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_2;           // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_3;           // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_4;           // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FMargin                                K2Node_MakeStruct_Margin;                          // 0x0058(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FMargin                                K2Node_MakeStruct_Margin_1;                        // 0x0068(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	double                                        CallFunc_Map_Find_Value;                           // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_591D[0x7];                                     // 0x0081(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Add_DoubleDouble_A_ImplicitCast;          // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_A_ImplicitCast_1;        // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_A_ImplicitCast_2;        // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_A_ImplicitCast_3;        // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_A_ImplicitCast_4;        // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_MakeStruct_Right_ImplicitCast;              // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_MakeStruct_Bottom_ImplicitCast;             // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_MakeStruct_Right_ImplicitCast_1;            // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_MakeStruct_Left_ImplicitCast;               // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_MakeStruct_Left_ImplicitCast_1;             // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_InventoryBag_CM_C_DetermineInventorySlotPadding) == 0x000008, "Wrong alignment on WBP_InventoryBag_CM_C_DetermineInventorySlotPadding");
static_assert(sizeof(WBP_InventoryBag_CM_C_DetermineInventorySlotPadding) == 0x0000C8, "Wrong size on WBP_InventoryBag_CM_C_DetermineInventorySlotPadding");
static_assert(offsetof(WBP_InventoryBag_CM_C_DetermineInventorySlotPadding, InventorySlot) == 0x000000, "Member 'WBP_InventoryBag_CM_C_DetermineInventorySlotPadding::InventorySlot' has a wrong offset!");
static_assert(offsetof(WBP_InventoryBag_CM_C_DetermineInventorySlotPadding, RowIndex) == 0x000008, "Member 'WBP_InventoryBag_CM_C_DetermineInventorySlotPadding::RowIndex' has a wrong offset!");
static_assert(offsetof(WBP_InventoryBag_CM_C_DetermineInventorySlotPadding, Param_Padding) == 0x00000C, "Member 'WBP_InventoryBag_CM_C_DetermineInventorySlotPadding::Param_Padding' has a wrong offset!");
static_assert(offsetof(WBP_InventoryBag_CM_C_DetermineInventorySlotPadding, SidePadding) == 0x000020, "Member 'WBP_InventoryBag_CM_C_DetermineInventorySlotPadding::SidePadding' has a wrong offset!");
static_assert(offsetof(WBP_InventoryBag_CM_C_DetermineInventorySlotPadding, CallFunc_Greater_IntInt_ReturnValue) == 0x000028, "Member 'WBP_InventoryBag_CM_C_DetermineInventorySlotPadding::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InventoryBag_CM_C_DetermineInventorySlotPadding, CallFunc_IsValid_ReturnValue) == 0x000029, "Member 'WBP_InventoryBag_CM_C_DetermineInventorySlotPadding::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InventoryBag_CM_C_DetermineInventorySlotPadding, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000030, "Member 'WBP_InventoryBag_CM_C_DetermineInventorySlotPadding::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InventoryBag_CM_C_DetermineInventorySlotPadding, CallFunc_Add_DoubleDouble_ReturnValue_1) == 0x000038, "Member 'WBP_InventoryBag_CM_C_DetermineInventorySlotPadding::CallFunc_Add_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_InventoryBag_CM_C_DetermineInventorySlotPadding, CallFunc_Add_DoubleDouble_ReturnValue_2) == 0x000040, "Member 'WBP_InventoryBag_CM_C_DetermineInventorySlotPadding::CallFunc_Add_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_InventoryBag_CM_C_DetermineInventorySlotPadding, CallFunc_Add_DoubleDouble_ReturnValue_3) == 0x000048, "Member 'WBP_InventoryBag_CM_C_DetermineInventorySlotPadding::CallFunc_Add_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WBP_InventoryBag_CM_C_DetermineInventorySlotPadding, CallFunc_Add_DoubleDouble_ReturnValue_4) == 0x000050, "Member 'WBP_InventoryBag_CM_C_DetermineInventorySlotPadding::CallFunc_Add_DoubleDouble_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(WBP_InventoryBag_CM_C_DetermineInventorySlotPadding, K2Node_MakeStruct_Margin) == 0x000058, "Member 'WBP_InventoryBag_CM_C_DetermineInventorySlotPadding::K2Node_MakeStruct_Margin' has a wrong offset!");
static_assert(offsetof(WBP_InventoryBag_CM_C_DetermineInventorySlotPadding, K2Node_MakeStruct_Margin_1) == 0x000068, "Member 'WBP_InventoryBag_CM_C_DetermineInventorySlotPadding::K2Node_MakeStruct_Margin_1' has a wrong offset!");
static_assert(offsetof(WBP_InventoryBag_CM_C_DetermineInventorySlotPadding, CallFunc_Map_Find_Value) == 0x000078, "Member 'WBP_InventoryBag_CM_C_DetermineInventorySlotPadding::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(WBP_InventoryBag_CM_C_DetermineInventorySlotPadding, CallFunc_Map_Find_ReturnValue) == 0x000080, "Member 'WBP_InventoryBag_CM_C_DetermineInventorySlotPadding::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InventoryBag_CM_C_DetermineInventorySlotPadding, CallFunc_Add_DoubleDouble_A_ImplicitCast) == 0x000088, "Member 'WBP_InventoryBag_CM_C_DetermineInventorySlotPadding::CallFunc_Add_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(WBP_InventoryBag_CM_C_DetermineInventorySlotPadding, CallFunc_Add_DoubleDouble_A_ImplicitCast_1) == 0x000090, "Member 'WBP_InventoryBag_CM_C_DetermineInventorySlotPadding::CallFunc_Add_DoubleDouble_A_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(WBP_InventoryBag_CM_C_DetermineInventorySlotPadding, CallFunc_Add_DoubleDouble_A_ImplicitCast_2) == 0x000098, "Member 'WBP_InventoryBag_CM_C_DetermineInventorySlotPadding::CallFunc_Add_DoubleDouble_A_ImplicitCast_2' has a wrong offset!");
static_assert(offsetof(WBP_InventoryBag_CM_C_DetermineInventorySlotPadding, CallFunc_Add_DoubleDouble_A_ImplicitCast_3) == 0x0000A0, "Member 'WBP_InventoryBag_CM_C_DetermineInventorySlotPadding::CallFunc_Add_DoubleDouble_A_ImplicitCast_3' has a wrong offset!");
static_assert(offsetof(WBP_InventoryBag_CM_C_DetermineInventorySlotPadding, CallFunc_Add_DoubleDouble_A_ImplicitCast_4) == 0x0000A8, "Member 'WBP_InventoryBag_CM_C_DetermineInventorySlotPadding::CallFunc_Add_DoubleDouble_A_ImplicitCast_4' has a wrong offset!");
static_assert(offsetof(WBP_InventoryBag_CM_C_DetermineInventorySlotPadding, K2Node_MakeStruct_Right_ImplicitCast) == 0x0000B0, "Member 'WBP_InventoryBag_CM_C_DetermineInventorySlotPadding::K2Node_MakeStruct_Right_ImplicitCast' has a wrong offset!");
static_assert(offsetof(WBP_InventoryBag_CM_C_DetermineInventorySlotPadding, K2Node_MakeStruct_Bottom_ImplicitCast) == 0x0000B4, "Member 'WBP_InventoryBag_CM_C_DetermineInventorySlotPadding::K2Node_MakeStruct_Bottom_ImplicitCast' has a wrong offset!");
static_assert(offsetof(WBP_InventoryBag_CM_C_DetermineInventorySlotPadding, K2Node_MakeStruct_Right_ImplicitCast_1) == 0x0000B8, "Member 'WBP_InventoryBag_CM_C_DetermineInventorySlotPadding::K2Node_MakeStruct_Right_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(WBP_InventoryBag_CM_C_DetermineInventorySlotPadding, K2Node_MakeStruct_Left_ImplicitCast) == 0x0000BC, "Member 'WBP_InventoryBag_CM_C_DetermineInventorySlotPadding::K2Node_MakeStruct_Left_ImplicitCast' has a wrong offset!");
static_assert(offsetof(WBP_InventoryBag_CM_C_DetermineInventorySlotPadding, K2Node_MakeStruct_Left_ImplicitCast_1) == 0x0000C0, "Member 'WBP_InventoryBag_CM_C_DetermineInventorySlotPadding::K2Node_MakeStruct_Left_ImplicitCast_1' has a wrong offset!");

// Function WBP_InventoryBag_CM.WBP_InventoryBag_CM_C.ExecuteUbergraph_WBP_InventoryBag_CM
// 0x01E0 (0x01E0 - 0x0000)
struct WBP_InventoryBag_CM_C_ExecuteUbergraph_WBP_InventoryBag_CM final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UWBP_InventorySlot_CM_C* Slot)> K2Node_CreateDelegate_OutputDelegate;              // 0x0004(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UWBP_InventorySlot_CM_C* Slot)> K2Node_CreateDelegate_OutputDelegate_1;            // 0x0014(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UWBP_InventorySlot_CM_C* Slot)> K2Node_CreateDelegate_OutputDelegate_2;            // 0x0024(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UWBP_InventorySlot_CM_C* Slot)> K2Node_CreateDelegate_OutputDelegate_3;            // 0x0034(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UWBP_InventorySlot_CM_C* Slot)> K2Node_CreateDelegate_OutputDelegate_4;            // 0x0044(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UWidget* Slot)>          K2Node_CreateDelegate_OutputDelegate_5;            // 0x0054(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_591E[0x4];                                     // 0x0064(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPanelSlot*                             CallFunc_GetContentSlot_ReturnValue;               // 0x0068(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsBagInActionBar_ReturnValue;             // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_591F[0x7];                                     // 0x0071(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBorderSlot*                            K2Node_DynamicCast_AsBorder_Slot;                  // 0x0078(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5920[0x7];                                     // 0x0081(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UVALUI_BorderStyle*                     CallFunc_GetDesiredBorderStyle_BorderStyle;        // 0x0088(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UValeriaGameUserSettings*               CallFunc_GetValeriaGameUserSettings_ReturnValue;   // 0x0090(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FValeriaGameplaySettings               K2Node_CustomEvent_GameplaySettings;               // 0x0098(0x0018)(ConstParm, NoDestructor)
	class UValeriaGameUserSettings*               CallFunc_GetValeriaGameUserSettings_ReturnValue_1; // 0x00B0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UInventoryComponent* Inventory)> K2Node_CreateDelegate_OutputDelegate_6;            // 0x00B8(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5921[0x7];                                     // 0x00C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_InventorySlot_CM_C*                CallFunc_Create_ReturnValue;                       // 0x00D0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5922[0x3];                                     // 0x00D9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetChildrenCount_ReturnValue;             // 0x00DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FBagSlotLocation                       K2Node_MakeStruct_BagSlotLocation;                 // 0x00E4(0x0008)(NoDestructor)
	int32                                         CallFunc_Percent_IntInt_ReturnValue;               // 0x00EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Divide_IntInt_ReturnValue;                // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FMargin                                CallFunc_DetermineInventorySlotPadding_Padding;    // 0x00F4(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5923[0x4];                                     // 0x0104(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUniformGridSlot*                       CallFunc_AddChildToUniformGrid_ReturnValue;        // 0x0108(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0110(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5924[0x4];                                     // 0x0114(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UInventoryComponent*                    K2Node_CustomEvent_Inventory;                      // 0x0118(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetTotalMaxSlotsInBag_ReturnValue;        // 0x0120(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0124(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0128(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x0129(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5925[0x2];                                     // 0x012A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x012C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           CallFunc_GetBagType_Type;                          // 0x0130(0x0008)(NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x0138(0x0018)()
	bool                                          CallFunc_EqualEqual_GameplayTag_ReturnValue;       // 0x0150(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5926[0x7];                                     // 0x0151(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_InventorySlot_CM_C*                K2Node_CustomEvent_Slot_5;                         // 0x0158(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UWBP_InventorySlot_CM_C*                K2Node_CustomEvent_Slot_4;                         // 0x0160(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0168(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5927[0x7];                                     // 0x0169(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_InventorySlot_CM_C*                K2Node_CustomEvent_Slot_3;                         // 0x0170(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UWBP_InventorySlot_CM_C*                K2Node_CustomEvent_Slot_2;                         // 0x0178(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UWBP_InventorySlot_CM_C*                K2Node_CustomEvent_Slot_1;                         // 0x0180(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UWidget*                                K2Node_CustomEvent_Slot;                           // 0x0188(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0190(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0191(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5928[0x2];                                     // 0x0192(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(struct FValeriaGameplaySettings& GameplaySettings)> K2Node_CreateDelegate_OutputDelegate_7;            // 0x0194(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FMargin                                K2Node_MakeStruct_Margin;                          // 0x01A4(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x01B4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_2;                              // 0x01B5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_3;                              // 0x01B6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x01B7(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x01B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5929[0x7];                                     // 0x01B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UOverlaySlot*                           CallFunc_SlotAsOverlaySlot_ReturnValue;            // 0x01C0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_1;                           // 0x01C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_592A[0x3];                                     // 0x01C9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMargin                                CallFunc_GetGridOverlayPadding_Padding;            // 0x01CC(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x01DC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsConsole_ReturnValue;                    // 0x01DD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_InventoryBag_CM_C_ExecuteUbergraph_WBP_InventoryBag_CM) == 0x000008, "Wrong alignment on WBP_InventoryBag_CM_C_ExecuteUbergraph_WBP_InventoryBag_CM");
static_assert(sizeof(WBP_InventoryBag_CM_C_ExecuteUbergraph_WBP_InventoryBag_CM) == 0x0001E0, "Wrong size on WBP_InventoryBag_CM_C_ExecuteUbergraph_WBP_InventoryBag_CM");
static_assert(offsetof(WBP_InventoryBag_CM_C_ExecuteUbergraph_WBP_InventoryBag_CM, EntryPoint) == 0x000000, "Member 'WBP_InventoryBag_CM_C_ExecuteUbergraph_WBP_InventoryBag_CM::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_InventoryBag_CM_C_ExecuteUbergraph_WBP_InventoryBag_CM, K2Node_CreateDelegate_OutputDelegate) == 0x000004, "Member 'WBP_InventoryBag_CM_C_ExecuteUbergraph_WBP_InventoryBag_CM::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WBP_InventoryBag_CM_C_ExecuteUbergraph_WBP_InventoryBag_CM, K2Node_CreateDelegate_OutputDelegate_1) == 0x000014, "Member 'WBP_InventoryBag_CM_C_ExecuteUbergraph_WBP_InventoryBag_CM::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(WBP_InventoryBag_CM_C_ExecuteUbergraph_WBP_InventoryBag_CM, K2Node_CreateDelegate_OutputDelegate_2) == 0x000024, "Member 'WBP_InventoryBag_CM_C_ExecuteUbergraph_WBP_InventoryBag_CM::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(WBP_InventoryBag_CM_C_ExecuteUbergraph_WBP_InventoryBag_CM, K2Node_CreateDelegate_OutputDelegate_3) == 0x000034, "Member 'WBP_InventoryBag_CM_C_ExecuteUbergraph_WBP_InventoryBag_CM::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");
static_assert(offsetof(WBP_InventoryBag_CM_C_ExecuteUbergraph_WBP_InventoryBag_CM, K2Node_CreateDelegate_OutputDelegate_4) == 0x000044, "Member 'WBP_InventoryBag_CM_C_ExecuteUbergraph_WBP_InventoryBag_CM::K2Node_CreateDelegate_OutputDelegate_4' has a wrong offset!");
static_assert(offsetof(WBP_InventoryBag_CM_C_ExecuteUbergraph_WBP_InventoryBag_CM, K2Node_CreateDelegate_OutputDelegate_5) == 0x000054, "Member 'WBP_InventoryBag_CM_C_ExecuteUbergraph_WBP_InventoryBag_CM::K2Node_CreateDelegate_OutputDelegate_5' has a wrong offset!");
static_assert(offsetof(WBP_InventoryBag_CM_C_ExecuteUbergraph_WBP_InventoryBag_CM, CallFunc_GetContentSlot_ReturnValue) == 0x000068, "Member 'WBP_InventoryBag_CM_C_ExecuteUbergraph_WBP_InventoryBag_CM::CallFunc_GetContentSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InventoryBag_CM_C_ExecuteUbergraph_WBP_InventoryBag_CM, CallFunc_IsBagInActionBar_ReturnValue) == 0x000070, "Member 'WBP_InventoryBag_CM_C_ExecuteUbergraph_WBP_InventoryBag_CM::CallFunc_IsBagInActionBar_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InventoryBag_CM_C_ExecuteUbergraph_WBP_InventoryBag_CM, K2Node_DynamicCast_AsBorder_Slot) == 0x000078, "Member 'WBP_InventoryBag_CM_C_ExecuteUbergraph_WBP_InventoryBag_CM::K2Node_DynamicCast_AsBorder_Slot' has a wrong offset!");
static_assert(offsetof(WBP_InventoryBag_CM_C_ExecuteUbergraph_WBP_InventoryBag_CM, K2Node_DynamicCast_bSuccess) == 0x000080, "Member 'WBP_InventoryBag_CM_C_ExecuteUbergraph_WBP_InventoryBag_CM::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_InventoryBag_CM_C_ExecuteUbergraph_WBP_InventoryBag_CM, CallFunc_GetDesiredBorderStyle_BorderStyle) == 0x000088, "Member 'WBP_InventoryBag_CM_C_ExecuteUbergraph_WBP_InventoryBag_CM::CallFunc_GetDesiredBorderStyle_BorderStyle' has a wrong offset!");
static_assert(offsetof(WBP_InventoryBag_CM_C_ExecuteUbergraph_WBP_InventoryBag_CM, CallFunc_GetValeriaGameUserSettings_ReturnValue) == 0x000090, "Member 'WBP_InventoryBag_CM_C_ExecuteUbergraph_WBP_InventoryBag_CM::CallFunc_GetValeriaGameUserSettings_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InventoryBag_CM_C_ExecuteUbergraph_WBP_InventoryBag_CM, K2Node_CustomEvent_GameplaySettings) == 0x000098, "Member 'WBP_InventoryBag_CM_C_ExecuteUbergraph_WBP_InventoryBag_CM::K2Node_CustomEvent_GameplaySettings' has a wrong offset!");
static_assert(offsetof(WBP_InventoryBag_CM_C_ExecuteUbergraph_WBP_InventoryBag_CM, CallFunc_GetValeriaGameUserSettings_ReturnValue_1) == 0x0000B0, "Member 'WBP_InventoryBag_CM_C_ExecuteUbergraph_WBP_InventoryBag_CM::CallFunc_GetValeriaGameUserSettings_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_InventoryBag_CM_C_ExecuteUbergraph_WBP_InventoryBag_CM, K2Node_CreateDelegate_OutputDelegate_6) == 0x0000B8, "Member 'WBP_InventoryBag_CM_C_ExecuteUbergraph_WBP_InventoryBag_CM::K2Node_CreateDelegate_OutputDelegate_6' has a wrong offset!");
static_assert(offsetof(WBP_InventoryBag_CM_C_ExecuteUbergraph_WBP_InventoryBag_CM, Temp_bool_Variable) == 0x0000C8, "Member 'WBP_InventoryBag_CM_C_ExecuteUbergraph_WBP_InventoryBag_CM::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_InventoryBag_CM_C_ExecuteUbergraph_WBP_InventoryBag_CM, CallFunc_Create_ReturnValue) == 0x0000D0, "Member 'WBP_InventoryBag_CM_C_ExecuteUbergraph_WBP_InventoryBag_CM::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InventoryBag_CM_C_ExecuteUbergraph_WBP_InventoryBag_CM, Temp_byte_Variable) == 0x0000D8, "Member 'WBP_InventoryBag_CM_C_ExecuteUbergraph_WBP_InventoryBag_CM::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_InventoryBag_CM_C_ExecuteUbergraph_WBP_InventoryBag_CM, CallFunc_GetChildrenCount_ReturnValue) == 0x0000DC, "Member 'WBP_InventoryBag_CM_C_ExecuteUbergraph_WBP_InventoryBag_CM::CallFunc_GetChildrenCount_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InventoryBag_CM_C_ExecuteUbergraph_WBP_InventoryBag_CM, Temp_int_Variable) == 0x0000E0, "Member 'WBP_InventoryBag_CM_C_ExecuteUbergraph_WBP_InventoryBag_CM::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(WBP_InventoryBag_CM_C_ExecuteUbergraph_WBP_InventoryBag_CM, K2Node_MakeStruct_BagSlotLocation) == 0x0000E4, "Member 'WBP_InventoryBag_CM_C_ExecuteUbergraph_WBP_InventoryBag_CM::K2Node_MakeStruct_BagSlotLocation' has a wrong offset!");
static_assert(offsetof(WBP_InventoryBag_CM_C_ExecuteUbergraph_WBP_InventoryBag_CM, CallFunc_Percent_IntInt_ReturnValue) == 0x0000EC, "Member 'WBP_InventoryBag_CM_C_ExecuteUbergraph_WBP_InventoryBag_CM::CallFunc_Percent_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InventoryBag_CM_C_ExecuteUbergraph_WBP_InventoryBag_CM, CallFunc_Divide_IntInt_ReturnValue) == 0x0000F0, "Member 'WBP_InventoryBag_CM_C_ExecuteUbergraph_WBP_InventoryBag_CM::CallFunc_Divide_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InventoryBag_CM_C_ExecuteUbergraph_WBP_InventoryBag_CM, CallFunc_DetermineInventorySlotPadding_Padding) == 0x0000F4, "Member 'WBP_InventoryBag_CM_C_ExecuteUbergraph_WBP_InventoryBag_CM::CallFunc_DetermineInventorySlotPadding_Padding' has a wrong offset!");
static_assert(offsetof(WBP_InventoryBag_CM_C_ExecuteUbergraph_WBP_InventoryBag_CM, CallFunc_AddChildToUniformGrid_ReturnValue) == 0x000108, "Member 'WBP_InventoryBag_CM_C_ExecuteUbergraph_WBP_InventoryBag_CM::CallFunc_AddChildToUniformGrid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InventoryBag_CM_C_ExecuteUbergraph_WBP_InventoryBag_CM, CallFunc_Add_IntInt_ReturnValue) == 0x000110, "Member 'WBP_InventoryBag_CM_C_ExecuteUbergraph_WBP_InventoryBag_CM::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InventoryBag_CM_C_ExecuteUbergraph_WBP_InventoryBag_CM, K2Node_CustomEvent_Inventory) == 0x000118, "Member 'WBP_InventoryBag_CM_C_ExecuteUbergraph_WBP_InventoryBag_CM::K2Node_CustomEvent_Inventory' has a wrong offset!");
static_assert(offsetof(WBP_InventoryBag_CM_C_ExecuteUbergraph_WBP_InventoryBag_CM, CallFunc_GetTotalMaxSlotsInBag_ReturnValue) == 0x000120, "Member 'WBP_InventoryBag_CM_C_ExecuteUbergraph_WBP_InventoryBag_CM::CallFunc_GetTotalMaxSlotsInBag_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InventoryBag_CM_C_ExecuteUbergraph_WBP_InventoryBag_CM, CallFunc_Subtract_IntInt_ReturnValue) == 0x000124, "Member 'WBP_InventoryBag_CM_C_ExecuteUbergraph_WBP_InventoryBag_CM::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InventoryBag_CM_C_ExecuteUbergraph_WBP_InventoryBag_CM, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000128, "Member 'WBP_InventoryBag_CM_C_ExecuteUbergraph_WBP_InventoryBag_CM::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InventoryBag_CM_C_ExecuteUbergraph_WBP_InventoryBag_CM, CallFunc_NotEqual_IntInt_ReturnValue) == 0x000129, "Member 'WBP_InventoryBag_CM_C_ExecuteUbergraph_WBP_InventoryBag_CM::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InventoryBag_CM_C_ExecuteUbergraph_WBP_InventoryBag_CM, CallFunc_Add_IntInt_ReturnValue_1) == 0x00012C, "Member 'WBP_InventoryBag_CM_C_ExecuteUbergraph_WBP_InventoryBag_CM::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_InventoryBag_CM_C_ExecuteUbergraph_WBP_InventoryBag_CM, CallFunc_GetBagType_Type) == 0x000130, "Member 'WBP_InventoryBag_CM_C_ExecuteUbergraph_WBP_InventoryBag_CM::CallFunc_GetBagType_Type' has a wrong offset!");
static_assert(offsetof(WBP_InventoryBag_CM_C_ExecuteUbergraph_WBP_InventoryBag_CM, CallFunc_Conv_IntToText_ReturnValue) == 0x000138, "Member 'WBP_InventoryBag_CM_C_ExecuteUbergraph_WBP_InventoryBag_CM::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InventoryBag_CM_C_ExecuteUbergraph_WBP_InventoryBag_CM, CallFunc_EqualEqual_GameplayTag_ReturnValue) == 0x000150, "Member 'WBP_InventoryBag_CM_C_ExecuteUbergraph_WBP_InventoryBag_CM::CallFunc_EqualEqual_GameplayTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InventoryBag_CM_C_ExecuteUbergraph_WBP_InventoryBag_CM, K2Node_CustomEvent_Slot_5) == 0x000158, "Member 'WBP_InventoryBag_CM_C_ExecuteUbergraph_WBP_InventoryBag_CM::K2Node_CustomEvent_Slot_5' has a wrong offset!");
static_assert(offsetof(WBP_InventoryBag_CM_C_ExecuteUbergraph_WBP_InventoryBag_CM, K2Node_CustomEvent_Slot_4) == 0x000160, "Member 'WBP_InventoryBag_CM_C_ExecuteUbergraph_WBP_InventoryBag_CM::K2Node_CustomEvent_Slot_4' has a wrong offset!");
static_assert(offsetof(WBP_InventoryBag_CM_C_ExecuteUbergraph_WBP_InventoryBag_CM, Temp_byte_Variable_1) == 0x000168, "Member 'WBP_InventoryBag_CM_C_ExecuteUbergraph_WBP_InventoryBag_CM::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_InventoryBag_CM_C_ExecuteUbergraph_WBP_InventoryBag_CM, K2Node_CustomEvent_Slot_3) == 0x000170, "Member 'WBP_InventoryBag_CM_C_ExecuteUbergraph_WBP_InventoryBag_CM::K2Node_CustomEvent_Slot_3' has a wrong offset!");
static_assert(offsetof(WBP_InventoryBag_CM_C_ExecuteUbergraph_WBP_InventoryBag_CM, K2Node_CustomEvent_Slot_2) == 0x000178, "Member 'WBP_InventoryBag_CM_C_ExecuteUbergraph_WBP_InventoryBag_CM::K2Node_CustomEvent_Slot_2' has a wrong offset!");
static_assert(offsetof(WBP_InventoryBag_CM_C_ExecuteUbergraph_WBP_InventoryBag_CM, K2Node_CustomEvent_Slot_1) == 0x000180, "Member 'WBP_InventoryBag_CM_C_ExecuteUbergraph_WBP_InventoryBag_CM::K2Node_CustomEvent_Slot_1' has a wrong offset!");
static_assert(offsetof(WBP_InventoryBag_CM_C_ExecuteUbergraph_WBP_InventoryBag_CM, K2Node_CustomEvent_Slot) == 0x000188, "Member 'WBP_InventoryBag_CM_C_ExecuteUbergraph_WBP_InventoryBag_CM::K2Node_CustomEvent_Slot' has a wrong offset!");
static_assert(offsetof(WBP_InventoryBag_CM_C_ExecuteUbergraph_WBP_InventoryBag_CM, Temp_bool_Variable_1) == 0x000190, "Member 'WBP_InventoryBag_CM_C_ExecuteUbergraph_WBP_InventoryBag_CM::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_InventoryBag_CM_C_ExecuteUbergraph_WBP_InventoryBag_CM, K2Node_Select_Default) == 0x000191, "Member 'WBP_InventoryBag_CM_C_ExecuteUbergraph_WBP_InventoryBag_CM::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_InventoryBag_CM_C_ExecuteUbergraph_WBP_InventoryBag_CM, K2Node_CreateDelegate_OutputDelegate_7) == 0x000194, "Member 'WBP_InventoryBag_CM_C_ExecuteUbergraph_WBP_InventoryBag_CM::K2Node_CreateDelegate_OutputDelegate_7' has a wrong offset!");
static_assert(offsetof(WBP_InventoryBag_CM_C_ExecuteUbergraph_WBP_InventoryBag_CM, K2Node_MakeStruct_Margin) == 0x0001A4, "Member 'WBP_InventoryBag_CM_C_ExecuteUbergraph_WBP_InventoryBag_CM::K2Node_MakeStruct_Margin' has a wrong offset!");
static_assert(offsetof(WBP_InventoryBag_CM_C_ExecuteUbergraph_WBP_InventoryBag_CM, CallFunc_IsValid_ReturnValue) == 0x0001B4, "Member 'WBP_InventoryBag_CM_C_ExecuteUbergraph_WBP_InventoryBag_CM::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InventoryBag_CM_C_ExecuteUbergraph_WBP_InventoryBag_CM, Temp_byte_Variable_2) == 0x0001B5, "Member 'WBP_InventoryBag_CM_C_ExecuteUbergraph_WBP_InventoryBag_CM::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_InventoryBag_CM_C_ExecuteUbergraph_WBP_InventoryBag_CM, Temp_byte_Variable_3) == 0x0001B6, "Member 'WBP_InventoryBag_CM_C_ExecuteUbergraph_WBP_InventoryBag_CM::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(WBP_InventoryBag_CM_C_ExecuteUbergraph_WBP_InventoryBag_CM, CallFunc_Not_PreBool_ReturnValue) == 0x0001B7, "Member 'WBP_InventoryBag_CM_C_ExecuteUbergraph_WBP_InventoryBag_CM::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InventoryBag_CM_C_ExecuteUbergraph_WBP_InventoryBag_CM, CallFunc_BooleanAND_ReturnValue) == 0x0001B8, "Member 'WBP_InventoryBag_CM_C_ExecuteUbergraph_WBP_InventoryBag_CM::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InventoryBag_CM_C_ExecuteUbergraph_WBP_InventoryBag_CM, CallFunc_SlotAsOverlaySlot_ReturnValue) == 0x0001C0, "Member 'WBP_InventoryBag_CM_C_ExecuteUbergraph_WBP_InventoryBag_CM::CallFunc_SlotAsOverlaySlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InventoryBag_CM_C_ExecuteUbergraph_WBP_InventoryBag_CM, K2Node_Select_Default_1) == 0x0001C8, "Member 'WBP_InventoryBag_CM_C_ExecuteUbergraph_WBP_InventoryBag_CM::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(WBP_InventoryBag_CM_C_ExecuteUbergraph_WBP_InventoryBag_CM, CallFunc_GetGridOverlayPadding_Padding) == 0x0001CC, "Member 'WBP_InventoryBag_CM_C_ExecuteUbergraph_WBP_InventoryBag_CM::CallFunc_GetGridOverlayPadding_Padding' has a wrong offset!");
static_assert(offsetof(WBP_InventoryBag_CM_C_ExecuteUbergraph_WBP_InventoryBag_CM, K2Node_Event_IsDesignTime) == 0x0001DC, "Member 'WBP_InventoryBag_CM_C_ExecuteUbergraph_WBP_InventoryBag_CM::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(WBP_InventoryBag_CM_C_ExecuteUbergraph_WBP_InventoryBag_CM, CallFunc_IsConsole_ReturnValue) == 0x0001DD, "Member 'WBP_InventoryBag_CM_C_ExecuteUbergraph_WBP_InventoryBag_CM::CallFunc_IsConsole_ReturnValue' has a wrong offset!");

// Function WBP_InventoryBag_CM.WBP_InventoryBag_CM_C.GetAllSlots
// 0x0068 (0x0068 - 0x0000)
struct WBP_InventoryBag_CM_C_GetAllSlots final
{
public:
	TArray<class UWBP_InventorySlot_CM_C*>        Slots;                                             // 0x0000(0x0010)(Parm, OutParm, ContainsInstancedReference)
	TArray<class UWBP_InventorySlot_CM_C*>        Result;                                            // 0x0010(0x0010)(Edit, BlueprintVisible, ContainsInstancedReference)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_592B[0x4];                                     // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UWidget*>                        CallFunc_GetAllChildren_ReturnValue;               // 0x0030(0x0010)(ReferenceParm, ContainsInstancedReference)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_592C[0x4];                                     // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                CallFunc_Array_Get_Item;                           // 0x0048(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_592D[0x7];                                     // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_InventorySlot_CM_C*                K2Node_DynamicCast_AsWBP_Inventory_Slot_CM;        // 0x0058(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_592E[0x3];                                     // 0x0061(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_InventoryBag_CM_C_GetAllSlots) == 0x000008, "Wrong alignment on WBP_InventoryBag_CM_C_GetAllSlots");
static_assert(sizeof(WBP_InventoryBag_CM_C_GetAllSlots) == 0x000068, "Wrong size on WBP_InventoryBag_CM_C_GetAllSlots");
static_assert(offsetof(WBP_InventoryBag_CM_C_GetAllSlots, Slots) == 0x000000, "Member 'WBP_InventoryBag_CM_C_GetAllSlots::Slots' has a wrong offset!");
static_assert(offsetof(WBP_InventoryBag_CM_C_GetAllSlots, Result) == 0x000010, "Member 'WBP_InventoryBag_CM_C_GetAllSlots::Result' has a wrong offset!");
static_assert(offsetof(WBP_InventoryBag_CM_C_GetAllSlots, Temp_int_Array_Index_Variable) == 0x000020, "Member 'WBP_InventoryBag_CM_C_GetAllSlots::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WBP_InventoryBag_CM_C_GetAllSlots, Temp_int_Loop_Counter_Variable) == 0x000024, "Member 'WBP_InventoryBag_CM_C_GetAllSlots::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WBP_InventoryBag_CM_C_GetAllSlots, CallFunc_Add_IntInt_ReturnValue) == 0x000028, "Member 'WBP_InventoryBag_CM_C_GetAllSlots::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InventoryBag_CM_C_GetAllSlots, CallFunc_GetAllChildren_ReturnValue) == 0x000030, "Member 'WBP_InventoryBag_CM_C_GetAllSlots::CallFunc_GetAllChildren_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InventoryBag_CM_C_GetAllSlots, CallFunc_Array_Length_ReturnValue) == 0x000040, "Member 'WBP_InventoryBag_CM_C_GetAllSlots::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InventoryBag_CM_C_GetAllSlots, CallFunc_Array_Get_Item) == 0x000048, "Member 'WBP_InventoryBag_CM_C_GetAllSlots::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_InventoryBag_CM_C_GetAllSlots, CallFunc_Less_IntInt_ReturnValue) == 0x000050, "Member 'WBP_InventoryBag_CM_C_GetAllSlots::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InventoryBag_CM_C_GetAllSlots, K2Node_DynamicCast_AsWBP_Inventory_Slot_CM) == 0x000058, "Member 'WBP_InventoryBag_CM_C_GetAllSlots::K2Node_DynamicCast_AsWBP_Inventory_Slot_CM' has a wrong offset!");
static_assert(offsetof(WBP_InventoryBag_CM_C_GetAllSlots, K2Node_DynamicCast_bSuccess) == 0x000060, "Member 'WBP_InventoryBag_CM_C_GetAllSlots::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_InventoryBag_CM_C_GetAllSlots, CallFunc_Array_Add_ReturnValue) == 0x000064, "Member 'WBP_InventoryBag_CM_C_GetAllSlots::CallFunc_Array_Add_ReturnValue' has a wrong offset!");

// Function WBP_InventoryBag_CM.WBP_InventoryBag_CM_C.GetBagType
// 0x0010 (0x0010 - 0x0000)
struct WBP_InventoryBag_CM_C_GetBagType final
{
public:
	struct FGameplayTag                           Type;                                              // 0x0000(0x0008)(Parm, OutParm, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           CallFunc_GetBagTypeForBagIndex_ReturnValue;        // 0x0008(0x0008)(NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_InventoryBag_CM_C_GetBagType) == 0x000004, "Wrong alignment on WBP_InventoryBag_CM_C_GetBagType");
static_assert(sizeof(WBP_InventoryBag_CM_C_GetBagType) == 0x000010, "Wrong size on WBP_InventoryBag_CM_C_GetBagType");
static_assert(offsetof(WBP_InventoryBag_CM_C_GetBagType, Type) == 0x000000, "Member 'WBP_InventoryBag_CM_C_GetBagType::Type' has a wrong offset!");
static_assert(offsetof(WBP_InventoryBag_CM_C_GetBagType, CallFunc_GetBagTypeForBagIndex_ReturnValue) == 0x000008, "Member 'WBP_InventoryBag_CM_C_GetBagType::CallFunc_GetBagTypeForBagIndex_ReturnValue' has a wrong offset!");

// Function WBP_InventoryBag_CM.WBP_InventoryBag_CM_C.GetDesiredBorderStyle
// 0x00A0 (0x00A0 - 0x0000)
struct WBP_InventoryBag_CM_C_GetDesiredBorderStyle final
{
public:
	bool                                          bIsShowStyle;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_592F[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UVALUI_BorderStyle*                     BorderStyle;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UVALUI_BorderStyle*                     OutStyle;                                          // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TSoftObjectPtr<class UVALUI_BorderStyle>      L_ActionSlotBorderStyle_Console;                   // 0x0018(0x0028)(Edit, BlueprintVisible, HasGetValueTypeHash)
	TSoftObjectPtr<class UVALUI_BorderStyle>      L_ActionSlotBorderStyle;                           // 0x0040(0x0028)(Edit, BlueprintVisible, HasGetValueTypeHash)
	bool                                          CallFunc_IsDesktop_ReturnValue;                    // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsConsole_ReturnValue;                    // 0x0069(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5930[0x6];                                     // 0x006A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_LoadAsset_Blocking_ReturnValue;           // 0x0070(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UVALUI_BorderStyle*                     K2Node_DynamicCast_AsVALUI_Border_Style;           // 0x0078(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5931[0x7];                                     // 0x0081(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_LoadAsset_Blocking_ReturnValue_1;         // 0x0088(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UVALUI_BorderStyle*                     K2Node_DynamicCast_AsVALUI_Border_Style_1;         // 0x0090(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_InventoryBag_CM_C_GetDesiredBorderStyle) == 0x000008, "Wrong alignment on WBP_InventoryBag_CM_C_GetDesiredBorderStyle");
static_assert(sizeof(WBP_InventoryBag_CM_C_GetDesiredBorderStyle) == 0x0000A0, "Wrong size on WBP_InventoryBag_CM_C_GetDesiredBorderStyle");
static_assert(offsetof(WBP_InventoryBag_CM_C_GetDesiredBorderStyle, bIsShowStyle) == 0x000000, "Member 'WBP_InventoryBag_CM_C_GetDesiredBorderStyle::bIsShowStyle' has a wrong offset!");
static_assert(offsetof(WBP_InventoryBag_CM_C_GetDesiredBorderStyle, BorderStyle) == 0x000008, "Member 'WBP_InventoryBag_CM_C_GetDesiredBorderStyle::BorderStyle' has a wrong offset!");
static_assert(offsetof(WBP_InventoryBag_CM_C_GetDesiredBorderStyle, OutStyle) == 0x000010, "Member 'WBP_InventoryBag_CM_C_GetDesiredBorderStyle::OutStyle' has a wrong offset!");
static_assert(offsetof(WBP_InventoryBag_CM_C_GetDesiredBorderStyle, L_ActionSlotBorderStyle_Console) == 0x000018, "Member 'WBP_InventoryBag_CM_C_GetDesiredBorderStyle::L_ActionSlotBorderStyle_Console' has a wrong offset!");
static_assert(offsetof(WBP_InventoryBag_CM_C_GetDesiredBorderStyle, L_ActionSlotBorderStyle) == 0x000040, "Member 'WBP_InventoryBag_CM_C_GetDesiredBorderStyle::L_ActionSlotBorderStyle' has a wrong offset!");
static_assert(offsetof(WBP_InventoryBag_CM_C_GetDesiredBorderStyle, CallFunc_IsDesktop_ReturnValue) == 0x000068, "Member 'WBP_InventoryBag_CM_C_GetDesiredBorderStyle::CallFunc_IsDesktop_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InventoryBag_CM_C_GetDesiredBorderStyle, CallFunc_IsConsole_ReturnValue) == 0x000069, "Member 'WBP_InventoryBag_CM_C_GetDesiredBorderStyle::CallFunc_IsConsole_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InventoryBag_CM_C_GetDesiredBorderStyle, CallFunc_LoadAsset_Blocking_ReturnValue) == 0x000070, "Member 'WBP_InventoryBag_CM_C_GetDesiredBorderStyle::CallFunc_LoadAsset_Blocking_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InventoryBag_CM_C_GetDesiredBorderStyle, K2Node_DynamicCast_AsVALUI_Border_Style) == 0x000078, "Member 'WBP_InventoryBag_CM_C_GetDesiredBorderStyle::K2Node_DynamicCast_AsVALUI_Border_Style' has a wrong offset!");
static_assert(offsetof(WBP_InventoryBag_CM_C_GetDesiredBorderStyle, K2Node_DynamicCast_bSuccess) == 0x000080, "Member 'WBP_InventoryBag_CM_C_GetDesiredBorderStyle::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_InventoryBag_CM_C_GetDesiredBorderStyle, CallFunc_LoadAsset_Blocking_ReturnValue_1) == 0x000088, "Member 'WBP_InventoryBag_CM_C_GetDesiredBorderStyle::CallFunc_LoadAsset_Blocking_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_InventoryBag_CM_C_GetDesiredBorderStyle, K2Node_DynamicCast_AsVALUI_Border_Style_1) == 0x000090, "Member 'WBP_InventoryBag_CM_C_GetDesiredBorderStyle::K2Node_DynamicCast_AsVALUI_Border_Style_1' has a wrong offset!");
static_assert(offsetof(WBP_InventoryBag_CM_C_GetDesiredBorderStyle, K2Node_DynamicCast_bSuccess_1) == 0x000098, "Member 'WBP_InventoryBag_CM_C_GetDesiredBorderStyle::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");

// Function WBP_InventoryBag_CM.WBP_InventoryBag_CM_C.GetFirstInventorySlot
// 0x0008 (0x0008 - 0x0000)
struct WBP_InventoryBag_CM_C_GetFirstInventorySlot final
{
public:
	class UWBP_InventorySlot_CM_C*                FirstSlot;                                         // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_InventoryBag_CM_C_GetFirstInventorySlot) == 0x000008, "Wrong alignment on WBP_InventoryBag_CM_C_GetFirstInventorySlot");
static_assert(sizeof(WBP_InventoryBag_CM_C_GetFirstInventorySlot) == 0x000008, "Wrong size on WBP_InventoryBag_CM_C_GetFirstInventorySlot");
static_assert(offsetof(WBP_InventoryBag_CM_C_GetFirstInventorySlot, FirstSlot) == 0x000000, "Member 'WBP_InventoryBag_CM_C_GetFirstInventorySlot::FirstSlot' has a wrong offset!");

// Function WBP_InventoryBag_CM.WBP_InventoryBag_CM_C.GetGridOverlayPadding
// 0x0068 (0x0068 - 0x0000)
struct WBP_InventoryBag_CM_C_GetGridOverlayPadding final
{
public:
	struct FMargin                                Param_Padding;                                     // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FMargin                                CurrentPadding;                                    // 0x0010(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	double                                        AdditionalRightPadding;                            // 0x0020(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FMargin                                K2Node_MakeStruct_Margin;                          // 0x0030(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FMargin                                CallFunc_Map_Find_Value;                           // 0x0040(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5932[0x7];                                     // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Add_DoubleDouble_A_ImplicitCast;          // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_MakeStruct_Right_ImplicitCast;              // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_InventoryBag_CM_C_GetGridOverlayPadding) == 0x000008, "Wrong alignment on WBP_InventoryBag_CM_C_GetGridOverlayPadding");
static_assert(sizeof(WBP_InventoryBag_CM_C_GetGridOverlayPadding) == 0x000068, "Wrong size on WBP_InventoryBag_CM_C_GetGridOverlayPadding");
static_assert(offsetof(WBP_InventoryBag_CM_C_GetGridOverlayPadding, Param_Padding) == 0x000000, "Member 'WBP_InventoryBag_CM_C_GetGridOverlayPadding::Param_Padding' has a wrong offset!");
static_assert(offsetof(WBP_InventoryBag_CM_C_GetGridOverlayPadding, CurrentPadding) == 0x000010, "Member 'WBP_InventoryBag_CM_C_GetGridOverlayPadding::CurrentPadding' has a wrong offset!");
static_assert(offsetof(WBP_InventoryBag_CM_C_GetGridOverlayPadding, AdditionalRightPadding) == 0x000020, "Member 'WBP_InventoryBag_CM_C_GetGridOverlayPadding::AdditionalRightPadding' has a wrong offset!");
static_assert(offsetof(WBP_InventoryBag_CM_C_GetGridOverlayPadding, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000028, "Member 'WBP_InventoryBag_CM_C_GetGridOverlayPadding::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InventoryBag_CM_C_GetGridOverlayPadding, K2Node_MakeStruct_Margin) == 0x000030, "Member 'WBP_InventoryBag_CM_C_GetGridOverlayPadding::K2Node_MakeStruct_Margin' has a wrong offset!");
static_assert(offsetof(WBP_InventoryBag_CM_C_GetGridOverlayPadding, CallFunc_Map_Find_Value) == 0x000040, "Member 'WBP_InventoryBag_CM_C_GetGridOverlayPadding::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(WBP_InventoryBag_CM_C_GetGridOverlayPadding, CallFunc_Map_Find_ReturnValue) == 0x000050, "Member 'WBP_InventoryBag_CM_C_GetGridOverlayPadding::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InventoryBag_CM_C_GetGridOverlayPadding, CallFunc_Add_DoubleDouble_A_ImplicitCast) == 0x000058, "Member 'WBP_InventoryBag_CM_C_GetGridOverlayPadding::CallFunc_Add_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(WBP_InventoryBag_CM_C_GetGridOverlayPadding, K2Node_MakeStruct_Right_ImplicitCast) == 0x000060, "Member 'WBP_InventoryBag_CM_C_GetGridOverlayPadding::K2Node_MakeStruct_Right_ImplicitCast' has a wrong offset!");

// Function WBP_InventoryBag_CM.WBP_InventoryBag_CM_C.GetSlotsForBorderNavigationType
// 0x00E8 (0x00E8 - 0x0000)
struct WBP_InventoryBag_CM_C_GetSlotsForBorderNavigationType final
{
public:
	EUINavigation                                 Param_Navigation;                                  // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5933[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UWBP_InventorySlot_CM_C*>        InventorySlots;                                    // 0x0008(0x0010)(Parm, OutParm, ContainsInstancedReference)
	TArray<class UWBP_InventorySlot_CM_C*>        ValidInventorySlots;                               // 0x0018(0x0010)(Edit, BlueprintVisible, ContainsInstancedReference)
	int32                                         CurrentRow;                                        // 0x0028(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         NumSlots;                                          // 0x002C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         NumRows;                                           // 0x0030(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_1;          // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5934[0x2];                                     // 0x003A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_1;            // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Divide_IntInt_ReturnValue;                // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWidget*                                CallFunc_GetChildAt_ReturnValue;                   // 0x0048(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UWBP_InventorySlot_CM_C*                K2Node_DynamicCast_AsWBP_Inventory_Slot_CM;        // 0x0050(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5935[0x7];                                     // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                CallFunc_GetChildAt_ReturnValue_1;                 // 0x0060(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5936[0x4];                                     // 0x006C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_InventorySlot_CM_C*                K2Node_DynamicCast_AsWBP_Inventory_Slot_CM_1;      // 0x0070(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5937[0x3];                                     // 0x0079(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5938[0x4];                                     // 0x0084(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                CallFunc_GetChildAt_ReturnValue_2;                 // 0x0088(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UWBP_InventorySlot_CM_C*                K2Node_DynamicCast_AsWBP_Inventory_Slot_CM_2;      // 0x0090(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5939[0x3];                                     // 0x0099(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue_2;                  // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Percent_IntInt_ReturnValue;               // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_2;          // 0x00A4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_593A[0x3];                                     // 0x00A5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                CallFunc_GetChildAt_ReturnValue_3;                 // 0x00A8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UWBP_InventorySlot_CM_C*                K2Node_DynamicCast_AsWBP_Inventory_Slot_CM_3;      // 0x00B0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_593B[0x3];                                     // 0x00B9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_1;                               // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_3;                  // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Percent_IntInt_ReturnValue_1;             // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_3;          // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_593C[0x3];                                     // 0x00C9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_2;            // 0x00CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_593D[0x3];                                     // 0x00D1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x00D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Percent_IntInt_ReturnValue_2;             // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x00DC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x00DD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_593E[0x2];                                     // 0x00DE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Divide_IntInt_ReturnValue_1;              // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetChildrenCount_ReturnValue;             // 0x00E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_InventoryBag_CM_C_GetSlotsForBorderNavigationType) == 0x000008, "Wrong alignment on WBP_InventoryBag_CM_C_GetSlotsForBorderNavigationType");
static_assert(sizeof(WBP_InventoryBag_CM_C_GetSlotsForBorderNavigationType) == 0x0000E8, "Wrong size on WBP_InventoryBag_CM_C_GetSlotsForBorderNavigationType");
static_assert(offsetof(WBP_InventoryBag_CM_C_GetSlotsForBorderNavigationType, Param_Navigation) == 0x000000, "Member 'WBP_InventoryBag_CM_C_GetSlotsForBorderNavigationType::Param_Navigation' has a wrong offset!");
static_assert(offsetof(WBP_InventoryBag_CM_C_GetSlotsForBorderNavigationType, InventorySlots) == 0x000008, "Member 'WBP_InventoryBag_CM_C_GetSlotsForBorderNavigationType::InventorySlots' has a wrong offset!");
static_assert(offsetof(WBP_InventoryBag_CM_C_GetSlotsForBorderNavigationType, ValidInventorySlots) == 0x000018, "Member 'WBP_InventoryBag_CM_C_GetSlotsForBorderNavigationType::ValidInventorySlots' has a wrong offset!");
static_assert(offsetof(WBP_InventoryBag_CM_C_GetSlotsForBorderNavigationType, CurrentRow) == 0x000028, "Member 'WBP_InventoryBag_CM_C_GetSlotsForBorderNavigationType::CurrentRow' has a wrong offset!");
static_assert(offsetof(WBP_InventoryBag_CM_C_GetSlotsForBorderNavigationType, NumSlots) == 0x00002C, "Member 'WBP_InventoryBag_CM_C_GetSlotsForBorderNavigationType::NumSlots' has a wrong offset!");
static_assert(offsetof(WBP_InventoryBag_CM_C_GetSlotsForBorderNavigationType, NumRows) == 0x000030, "Member 'WBP_InventoryBag_CM_C_GetSlotsForBorderNavigationType::NumRows' has a wrong offset!");
static_assert(offsetof(WBP_InventoryBag_CM_C_GetSlotsForBorderNavigationType, CallFunc_Subtract_IntInt_ReturnValue) == 0x000034, "Member 'WBP_InventoryBag_CM_C_GetSlotsForBorderNavigationType::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InventoryBag_CM_C_GetSlotsForBorderNavigationType, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000038, "Member 'WBP_InventoryBag_CM_C_GetSlotsForBorderNavigationType::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InventoryBag_CM_C_GetSlotsForBorderNavigationType, CallFunc_EqualEqual_IntInt_ReturnValue_1) == 0x000039, "Member 'WBP_InventoryBag_CM_C_GetSlotsForBorderNavigationType::CallFunc_EqualEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_InventoryBag_CM_C_GetSlotsForBorderNavigationType, Temp_int_Variable) == 0x00003C, "Member 'WBP_InventoryBag_CM_C_GetSlotsForBorderNavigationType::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(WBP_InventoryBag_CM_C_GetSlotsForBorderNavigationType, CallFunc_Subtract_IntInt_ReturnValue_1) == 0x000040, "Member 'WBP_InventoryBag_CM_C_GetSlotsForBorderNavigationType::CallFunc_Subtract_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_InventoryBag_CM_C_GetSlotsForBorderNavigationType, CallFunc_Divide_IntInt_ReturnValue) == 0x000044, "Member 'WBP_InventoryBag_CM_C_GetSlotsForBorderNavigationType::CallFunc_Divide_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InventoryBag_CM_C_GetSlotsForBorderNavigationType, CallFunc_GetChildAt_ReturnValue) == 0x000048, "Member 'WBP_InventoryBag_CM_C_GetSlotsForBorderNavigationType::CallFunc_GetChildAt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InventoryBag_CM_C_GetSlotsForBorderNavigationType, K2Node_DynamicCast_AsWBP_Inventory_Slot_CM) == 0x000050, "Member 'WBP_InventoryBag_CM_C_GetSlotsForBorderNavigationType::K2Node_DynamicCast_AsWBP_Inventory_Slot_CM' has a wrong offset!");
static_assert(offsetof(WBP_InventoryBag_CM_C_GetSlotsForBorderNavigationType, K2Node_DynamicCast_bSuccess) == 0x000058, "Member 'WBP_InventoryBag_CM_C_GetSlotsForBorderNavigationType::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_InventoryBag_CM_C_GetSlotsForBorderNavigationType, CallFunc_GetChildAt_ReturnValue_1) == 0x000060, "Member 'WBP_InventoryBag_CM_C_GetSlotsForBorderNavigationType::CallFunc_GetChildAt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_InventoryBag_CM_C_GetSlotsForBorderNavigationType, CallFunc_Array_Add_ReturnValue) == 0x000068, "Member 'WBP_InventoryBag_CM_C_GetSlotsForBorderNavigationType::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InventoryBag_CM_C_GetSlotsForBorderNavigationType, K2Node_DynamicCast_AsWBP_Inventory_Slot_CM_1) == 0x000070, "Member 'WBP_InventoryBag_CM_C_GetSlotsForBorderNavigationType::K2Node_DynamicCast_AsWBP_Inventory_Slot_CM_1' has a wrong offset!");
static_assert(offsetof(WBP_InventoryBag_CM_C_GetSlotsForBorderNavigationType, K2Node_DynamicCast_bSuccess_1) == 0x000078, "Member 'WBP_InventoryBag_CM_C_GetSlotsForBorderNavigationType::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(WBP_InventoryBag_CM_C_GetSlotsForBorderNavigationType, CallFunc_Array_Add_ReturnValue_1) == 0x00007C, "Member 'WBP_InventoryBag_CM_C_GetSlotsForBorderNavigationType::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_InventoryBag_CM_C_GetSlotsForBorderNavigationType, CallFunc_Add_IntInt_ReturnValue) == 0x000080, "Member 'WBP_InventoryBag_CM_C_GetSlotsForBorderNavigationType::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InventoryBag_CM_C_GetSlotsForBorderNavigationType, CallFunc_GetChildAt_ReturnValue_2) == 0x000088, "Member 'WBP_InventoryBag_CM_C_GetSlotsForBorderNavigationType::CallFunc_GetChildAt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_InventoryBag_CM_C_GetSlotsForBorderNavigationType, K2Node_DynamicCast_AsWBP_Inventory_Slot_CM_2) == 0x000090, "Member 'WBP_InventoryBag_CM_C_GetSlotsForBorderNavigationType::K2Node_DynamicCast_AsWBP_Inventory_Slot_CM_2' has a wrong offset!");
static_assert(offsetof(WBP_InventoryBag_CM_C_GetSlotsForBorderNavigationType, K2Node_DynamicCast_bSuccess_2) == 0x000098, "Member 'WBP_InventoryBag_CM_C_GetSlotsForBorderNavigationType::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(WBP_InventoryBag_CM_C_GetSlotsForBorderNavigationType, CallFunc_Array_Add_ReturnValue_2) == 0x00009C, "Member 'WBP_InventoryBag_CM_C_GetSlotsForBorderNavigationType::CallFunc_Array_Add_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_InventoryBag_CM_C_GetSlotsForBorderNavigationType, CallFunc_Percent_IntInt_ReturnValue) == 0x0000A0, "Member 'WBP_InventoryBag_CM_C_GetSlotsForBorderNavigationType::CallFunc_Percent_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InventoryBag_CM_C_GetSlotsForBorderNavigationType, CallFunc_EqualEqual_IntInt_ReturnValue_2) == 0x0000A4, "Member 'WBP_InventoryBag_CM_C_GetSlotsForBorderNavigationType::CallFunc_EqualEqual_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_InventoryBag_CM_C_GetSlotsForBorderNavigationType, CallFunc_GetChildAt_ReturnValue_3) == 0x0000A8, "Member 'WBP_InventoryBag_CM_C_GetSlotsForBorderNavigationType::CallFunc_GetChildAt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WBP_InventoryBag_CM_C_GetSlotsForBorderNavigationType, K2Node_DynamicCast_AsWBP_Inventory_Slot_CM_3) == 0x0000B0, "Member 'WBP_InventoryBag_CM_C_GetSlotsForBorderNavigationType::K2Node_DynamicCast_AsWBP_Inventory_Slot_CM_3' has a wrong offset!");
static_assert(offsetof(WBP_InventoryBag_CM_C_GetSlotsForBorderNavigationType, K2Node_DynamicCast_bSuccess_3) == 0x0000B8, "Member 'WBP_InventoryBag_CM_C_GetSlotsForBorderNavigationType::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(WBP_InventoryBag_CM_C_GetSlotsForBorderNavigationType, Temp_int_Variable_1) == 0x0000BC, "Member 'WBP_InventoryBag_CM_C_GetSlotsForBorderNavigationType::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_InventoryBag_CM_C_GetSlotsForBorderNavigationType, CallFunc_Array_Add_ReturnValue_3) == 0x0000C0, "Member 'WBP_InventoryBag_CM_C_GetSlotsForBorderNavigationType::CallFunc_Array_Add_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WBP_InventoryBag_CM_C_GetSlotsForBorderNavigationType, CallFunc_Percent_IntInt_ReturnValue_1) == 0x0000C4, "Member 'WBP_InventoryBag_CM_C_GetSlotsForBorderNavigationType::CallFunc_Percent_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_InventoryBag_CM_C_GetSlotsForBorderNavigationType, CallFunc_EqualEqual_IntInt_ReturnValue_3) == 0x0000C8, "Member 'WBP_InventoryBag_CM_C_GetSlotsForBorderNavigationType::CallFunc_EqualEqual_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WBP_InventoryBag_CM_C_GetSlotsForBorderNavigationType, CallFunc_Subtract_IntInt_ReturnValue_2) == 0x0000CC, "Member 'WBP_InventoryBag_CM_C_GetSlotsForBorderNavigationType::CallFunc_Subtract_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_InventoryBag_CM_C_GetSlotsForBorderNavigationType, CallFunc_LessEqual_IntInt_ReturnValue) == 0x0000D0, "Member 'WBP_InventoryBag_CM_C_GetSlotsForBorderNavigationType::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InventoryBag_CM_C_GetSlotsForBorderNavigationType, CallFunc_Add_IntInt_ReturnValue_1) == 0x0000D4, "Member 'WBP_InventoryBag_CM_C_GetSlotsForBorderNavigationType::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_InventoryBag_CM_C_GetSlotsForBorderNavigationType, CallFunc_Percent_IntInt_ReturnValue_2) == 0x0000D8, "Member 'WBP_InventoryBag_CM_C_GetSlotsForBorderNavigationType::CallFunc_Percent_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_InventoryBag_CM_C_GetSlotsForBorderNavigationType, CallFunc_NotEqual_IntInt_ReturnValue) == 0x0000DC, "Member 'WBP_InventoryBag_CM_C_GetSlotsForBorderNavigationType::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InventoryBag_CM_C_GetSlotsForBorderNavigationType, K2Node_SwitchEnum_CmpSuccess) == 0x0000DD, "Member 'WBP_InventoryBag_CM_C_GetSlotsForBorderNavigationType::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(WBP_InventoryBag_CM_C_GetSlotsForBorderNavigationType, CallFunc_Divide_IntInt_ReturnValue_1) == 0x0000E0, "Member 'WBP_InventoryBag_CM_C_GetSlotsForBorderNavigationType::CallFunc_Divide_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_InventoryBag_CM_C_GetSlotsForBorderNavigationType, CallFunc_GetChildrenCount_ReturnValue) == 0x0000E4, "Member 'WBP_InventoryBag_CM_C_GetSlotsForBorderNavigationType::CallFunc_GetChildrenCount_ReturnValue' has a wrong offset!");

// Function WBP_InventoryBag_CM.WBP_InventoryBag_CM_C.HandleInventorySettingsChanged
// 0x0018 (0x0018 - 0x0000)
struct WBP_InventoryBag_CM_C_HandleInventorySettingsChanged final
{
public:
	struct FValeriaGameplaySettings               GameplaySettings;                                  // 0x0000(0x0018)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor)
};
static_assert(alignof(WBP_InventoryBag_CM_C_HandleInventorySettingsChanged) == 0x000004, "Wrong alignment on WBP_InventoryBag_CM_C_HandleInventorySettingsChanged");
static_assert(sizeof(WBP_InventoryBag_CM_C_HandleInventorySettingsChanged) == 0x000018, "Wrong size on WBP_InventoryBag_CM_C_HandleInventorySettingsChanged");
static_assert(offsetof(WBP_InventoryBag_CM_C_HandleInventorySettingsChanged, GameplaySettings) == 0x000000, "Member 'WBP_InventoryBag_CM_C_HandleInventorySettingsChanged::GameplaySettings' has a wrong offset!");

// Function WBP_InventoryBag_CM.WBP_InventoryBag_CM_C.HandleOpenActionMenu
// 0x0008 (0x0008 - 0x0000)
struct WBP_InventoryBag_CM_C_HandleOpenActionMenu final
{
public:
	class UWBP_InventorySlot_CM_C*                Param_Slot;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_InventoryBag_CM_C_HandleOpenActionMenu) == 0x000008, "Wrong alignment on WBP_InventoryBag_CM_C_HandleOpenActionMenu");
static_assert(sizeof(WBP_InventoryBag_CM_C_HandleOpenActionMenu) == 0x000008, "Wrong size on WBP_InventoryBag_CM_C_HandleOpenActionMenu");
static_assert(offsetof(WBP_InventoryBag_CM_C_HandleOpenActionMenu, Param_Slot) == 0x000000, "Member 'WBP_InventoryBag_CM_C_HandleOpenActionMenu::Param_Slot' has a wrong offset!");

// Function WBP_InventoryBag_CM.WBP_InventoryBag_CM_C.HandleSlotFocused
// 0x0008 (0x0008 - 0x0000)
struct WBP_InventoryBag_CM_C_HandleSlotFocused final
{
public:
	class UWidget*                                Param_Slot;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_InventoryBag_CM_C_HandleSlotFocused) == 0x000008, "Wrong alignment on WBP_InventoryBag_CM_C_HandleSlotFocused");
static_assert(sizeof(WBP_InventoryBag_CM_C_HandleSlotFocused) == 0x000008, "Wrong size on WBP_InventoryBag_CM_C_HandleSlotFocused");
static_assert(offsetof(WBP_InventoryBag_CM_C_HandleSlotFocused, Param_Slot) == 0x000000, "Member 'WBP_InventoryBag_CM_C_HandleSlotFocused::Param_Slot' has a wrong offset!");

// Function WBP_InventoryBag_CM.WBP_InventoryBag_CM_C.HandleSlotGamepadCancel
// 0x0008 (0x0008 - 0x0000)
struct WBP_InventoryBag_CM_C_HandleSlotGamepadCancel final
{
public:
	class UWBP_InventorySlot_CM_C*                Param_Slot;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_InventoryBag_CM_C_HandleSlotGamepadCancel) == 0x000008, "Wrong alignment on WBP_InventoryBag_CM_C_HandleSlotGamepadCancel");
static_assert(sizeof(WBP_InventoryBag_CM_C_HandleSlotGamepadCancel) == 0x000008, "Wrong size on WBP_InventoryBag_CM_C_HandleSlotGamepadCancel");
static_assert(offsetof(WBP_InventoryBag_CM_C_HandleSlotGamepadCancel, Param_Slot) == 0x000000, "Member 'WBP_InventoryBag_CM_C_HandleSlotGamepadCancel::Param_Slot' has a wrong offset!");

// Function WBP_InventoryBag_CM.WBP_InventoryBag_CM_C.HandleSlotGamepadSelect
// 0x0008 (0x0008 - 0x0000)
struct WBP_InventoryBag_CM_C_HandleSlotGamepadSelect final
{
public:
	class UWBP_InventorySlot_CM_C*                Param_Slot;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_InventoryBag_CM_C_HandleSlotGamepadSelect) == 0x000008, "Wrong alignment on WBP_InventoryBag_CM_C_HandleSlotGamepadSelect");
static_assert(sizeof(WBP_InventoryBag_CM_C_HandleSlotGamepadSelect) == 0x000008, "Wrong size on WBP_InventoryBag_CM_C_HandleSlotGamepadSelect");
static_assert(offsetof(WBP_InventoryBag_CM_C_HandleSlotGamepadSelect, Param_Slot) == 0x000000, "Member 'WBP_InventoryBag_CM_C_HandleSlotGamepadSelect::Param_Slot' has a wrong offset!");

// Function WBP_InventoryBag_CM.WBP_InventoryBag_CM_C.HandleSlotLeftClicked
// 0x0008 (0x0008 - 0x0000)
struct WBP_InventoryBag_CM_C_HandleSlotLeftClicked final
{
public:
	class UWBP_InventorySlot_CM_C*                Param_Slot;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_InventoryBag_CM_C_HandleSlotLeftClicked) == 0x000008, "Wrong alignment on WBP_InventoryBag_CM_C_HandleSlotLeftClicked");
static_assert(sizeof(WBP_InventoryBag_CM_C_HandleSlotLeftClicked) == 0x000008, "Wrong size on WBP_InventoryBag_CM_C_HandleSlotLeftClicked");
static_assert(offsetof(WBP_InventoryBag_CM_C_HandleSlotLeftClicked, Param_Slot) == 0x000000, "Member 'WBP_InventoryBag_CM_C_HandleSlotLeftClicked::Param_Slot' has a wrong offset!");

// Function WBP_InventoryBag_CM.WBP_InventoryBag_CM_C.HandleSlotRightClicked
// 0x0008 (0x0008 - 0x0000)
struct WBP_InventoryBag_CM_C_HandleSlotRightClicked final
{
public:
	class UWBP_InventorySlot_CM_C*                Param_Slot;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_InventoryBag_CM_C_HandleSlotRightClicked) == 0x000008, "Wrong alignment on WBP_InventoryBag_CM_C_HandleSlotRightClicked");
static_assert(sizeof(WBP_InventoryBag_CM_C_HandleSlotRightClicked) == 0x000008, "Wrong size on WBP_InventoryBag_CM_C_HandleSlotRightClicked");
static_assert(offsetof(WBP_InventoryBag_CM_C_HandleSlotRightClicked, Param_Slot) == 0x000000, "Member 'WBP_InventoryBag_CM_C_HandleSlotRightClicked::Param_Slot' has a wrong offset!");

// Function WBP_InventoryBag_CM.WBP_InventoryBag_CM_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct WBP_InventoryBag_CM_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_InventoryBag_CM_C_PreConstruct) == 0x000001, "Wrong alignment on WBP_InventoryBag_CM_C_PreConstruct");
static_assert(sizeof(WBP_InventoryBag_CM_C_PreConstruct) == 0x000001, "Wrong size on WBP_InventoryBag_CM_C_PreConstruct");
static_assert(offsetof(WBP_InventoryBag_CM_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'WBP_InventoryBag_CM_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function WBP_InventoryBag_CM.WBP_InventoryBag_CM_C.RecreateSlots
// 0x0008 (0x0008 - 0x0000)
struct WBP_InventoryBag_CM_C_RecreateSlots final
{
public:
	class UInventoryComponent*                    Param_Inventory;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_InventoryBag_CM_C_RecreateSlots) == 0x000008, "Wrong alignment on WBP_InventoryBag_CM_C_RecreateSlots");
static_assert(sizeof(WBP_InventoryBag_CM_C_RecreateSlots) == 0x000008, "Wrong size on WBP_InventoryBag_CM_C_RecreateSlots");
static_assert(offsetof(WBP_InventoryBag_CM_C_RecreateSlots, Param_Inventory) == 0x000000, "Member 'WBP_InventoryBag_CM_C_RecreateSlots::Param_Inventory' has a wrong offset!");

}

