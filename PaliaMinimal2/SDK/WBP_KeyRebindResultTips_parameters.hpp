#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_KeyRebindResultTips

#include "Basic.hpp"

#include "KeyRebinding_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function WBP_KeyRebindResultTips.WBP_KeyRebindResultTips_C.ExecuteUbergraph_WBP_KeyRebindResultTips
// 0x00E8 (0x00E8 - 0x0000)
struct WBP_KeyRebindResultTips_C_ExecuteUbergraph_WBP_KeyRebindResultTips final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41B9[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKeyRebind_DisplayResult               K2Node_Event_KeyRebindResultInfo;                  // 0x0008(0x00E0)()
};
static_assert(alignof(WBP_KeyRebindResultTips_C_ExecuteUbergraph_WBP_KeyRebindResultTips) == 0x000008, "Wrong alignment on WBP_KeyRebindResultTips_C_ExecuteUbergraph_WBP_KeyRebindResultTips");
static_assert(sizeof(WBP_KeyRebindResultTips_C_ExecuteUbergraph_WBP_KeyRebindResultTips) == 0x0000E8, "Wrong size on WBP_KeyRebindResultTips_C_ExecuteUbergraph_WBP_KeyRebindResultTips");
static_assert(offsetof(WBP_KeyRebindResultTips_C_ExecuteUbergraph_WBP_KeyRebindResultTips, EntryPoint) == 0x000000, "Member 'WBP_KeyRebindResultTips_C_ExecuteUbergraph_WBP_KeyRebindResultTips::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_KeyRebindResultTips_C_ExecuteUbergraph_WBP_KeyRebindResultTips, K2Node_Event_KeyRebindResultInfo) == 0x000008, "Member 'WBP_KeyRebindResultTips_C_ExecuteUbergraph_WBP_KeyRebindResultTips::K2Node_Event_KeyRebindResultInfo' has a wrong offset!");

// Function WBP_KeyRebindResultTips.WBP_KeyRebindResultTips_C.Refresh Key Rebind Result Tips
// 0x00F0 (0x00F0 - 0x0000)
struct WBP_KeyRebindResultTips_C_Refresh_Key_Rebind_Result_Tips final
{
public:
	struct FKeyRebind_DisplayResult               ResultInfo;                                        // 0x0000(0x00E0)(BlueprintVisible, BlueprintReadOnly, Parm)
	class UWidget*                                NewLocalVar;                                       // 0x00E0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_KeyRebindResultTips_C_Refresh_Key_Rebind_Result_Tips) == 0x000008, "Wrong alignment on WBP_KeyRebindResultTips_C_Refresh_Key_Rebind_Result_Tips");
static_assert(sizeof(WBP_KeyRebindResultTips_C_Refresh_Key_Rebind_Result_Tips) == 0x0000F0, "Wrong size on WBP_KeyRebindResultTips_C_Refresh_Key_Rebind_Result_Tips");
static_assert(offsetof(WBP_KeyRebindResultTips_C_Refresh_Key_Rebind_Result_Tips, ResultInfo) == 0x000000, "Member 'WBP_KeyRebindResultTips_C_Refresh_Key_Rebind_Result_Tips::ResultInfo' has a wrong offset!");
static_assert(offsetof(WBP_KeyRebindResultTips_C_Refresh_Key_Rebind_Result_Tips, NewLocalVar) == 0x0000E0, "Member 'WBP_KeyRebindResultTips_C_Refresh_Key_Rebind_Result_Tips::NewLocalVar' has a wrong offset!");
static_assert(offsetof(WBP_KeyRebindResultTips_C_Refresh_Key_Rebind_Result_Tips, K2Node_SwitchEnum_CmpSuccess) == 0x0000E8, "Member 'WBP_KeyRebindResultTips_C_Refresh_Key_Rebind_Result_Tips::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function WBP_KeyRebindResultTips.WBP_KeyRebindResultTips_C.RefreshCoreActionTipsText
// 0x01D8 (0x01D8 - 0x0000)
struct WBP_KeyRebindResultTips_C_RefreshCoreActionTipsText final
{
public:
	struct FKeyRebind_DisplayResult               ResultInfo;                                        // 0x0000(0x00E0)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x00E0(0x0050)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x0130(0x0050)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0180(0x0010)(ReferenceParm)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_1;                          // 0x0190(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x01A0(0x0018)()
	class FText                                   CallFunc_Format_ReturnValue_1;                     // 0x01B8(0x0018)()
	bool                                          CallFunc_Array_IsNotEmpty_ReturnValue;             // 0x01D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_KeyRebindResultTips_C_RefreshCoreActionTipsText) == 0x000008, "Wrong alignment on WBP_KeyRebindResultTips_C_RefreshCoreActionTipsText");
static_assert(sizeof(WBP_KeyRebindResultTips_C_RefreshCoreActionTipsText) == 0x0001D8, "Wrong size on WBP_KeyRebindResultTips_C_RefreshCoreActionTipsText");
static_assert(offsetof(WBP_KeyRebindResultTips_C_RefreshCoreActionTipsText, ResultInfo) == 0x000000, "Member 'WBP_KeyRebindResultTips_C_RefreshCoreActionTipsText::ResultInfo' has a wrong offset!");
static_assert(offsetof(WBP_KeyRebindResultTips_C_RefreshCoreActionTipsText, K2Node_MakeStruct_FormatArgumentData) == 0x0000E0, "Member 'WBP_KeyRebindResultTips_C_RefreshCoreActionTipsText::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(WBP_KeyRebindResultTips_C_RefreshCoreActionTipsText, K2Node_MakeStruct_FormatArgumentData_1) == 0x000130, "Member 'WBP_KeyRebindResultTips_C_RefreshCoreActionTipsText::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(WBP_KeyRebindResultTips_C_RefreshCoreActionTipsText, K2Node_MakeArray_Array) == 0x000180, "Member 'WBP_KeyRebindResultTips_C_RefreshCoreActionTipsText::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(WBP_KeyRebindResultTips_C_RefreshCoreActionTipsText, K2Node_MakeArray_Array_1) == 0x000190, "Member 'WBP_KeyRebindResultTips_C_RefreshCoreActionTipsText::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(WBP_KeyRebindResultTips_C_RefreshCoreActionTipsText, CallFunc_Format_ReturnValue) == 0x0001A0, "Member 'WBP_KeyRebindResultTips_C_RefreshCoreActionTipsText::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_KeyRebindResultTips_C_RefreshCoreActionTipsText, CallFunc_Format_ReturnValue_1) == 0x0001B8, "Member 'WBP_KeyRebindResultTips_C_RefreshCoreActionTipsText::CallFunc_Format_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_KeyRebindResultTips_C_RefreshCoreActionTipsText, CallFunc_Array_IsNotEmpty_ReturnValue) == 0x0001D0, "Member 'WBP_KeyRebindResultTips_C_RefreshCoreActionTipsText::CallFunc_Array_IsNotEmpty_ReturnValue' has a wrong offset!");

// Function WBP_KeyRebindResultTips.WBP_KeyRebindResultTips_C.RefreshGlobalConflictTipsText
// 0x03D0 (0x03D0 - 0x0000)
struct WBP_KeyRebindResultTips_C_RefreshGlobalConflictTipsText final
{
public:
	struct FKeyRebind_DisplayResult               ResultInfo;                                        // 0x0000(0x00E0)(BlueprintVisible, BlueprintReadOnly, Parm)
	TMap<class UInputAction*, class FText>        InputActionsofGlobalGroup;                         // 0x00E0(0x0050)(Edit, BlueprintVisible)
	EKeyRebind_BindingResultType                  Temp_byte_Variable;                                // 0x0130(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41BA[0x7];                                     // 0x0131(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Temp_text_Variable;                                // 0x0138(0x0018)()
	class UInputAction*                           CallFunc_Array_Get_Item;                           // 0x0150(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FText                                   Temp_text_Variable_1;                              // 0x0158(0x0018)()
	class FText                                   Temp_text_Variable_2;                              // 0x0170(0x0018)()
	class FText                                   Temp_text_Variable_3;                              // 0x0188(0x0018)()
	class FText                                   Temp_text_Variable_4;                              // 0x01A0(0x0018)()
	class FText                                   Temp_text_Variable_5;                              // 0x01B8(0x0018)()
	class FText                                   Temp_text_Variable_6;                              // 0x01D0(0x0018)()
	class FText                                   Temp_text_Variable_7;                              // 0x01E8(0x0018)()
	TMap<class UInputAction*, class FText>        K2Node_MakeVariable_MakeVariableOutput;            // 0x0200(0x0050)()
	bool                                          Temp_bool_Variable;                                // 0x0250(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41BB[0x7];                                     // 0x0251(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Map_Find_Value;                           // 0x0258(0x0018)()
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0270(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41BC[0x7];                                     // 0x0271(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Map_Find_Value_1;                         // 0x0278(0x0018)()
	bool                                          CallFunc_Map_Find_ReturnValue_1;                   // 0x0290(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0291(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41BD[0x6];                                     // 0x0292(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select_Default;                             // 0x0298(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x02B0(0x0050)(HasGetValueTypeHash)
	class FText                                   K2Node_Select_Default_1;                           // 0x0300(0x0018)()
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0318(0x0010)(ReferenceParm)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x0328(0x0050)(HasGetValueTypeHash)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0378(0x0018)()
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_1;                          // 0x0390(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue_1;                     // 0x03A0(0x0018)()
	class FText                                   K2Node_Select_Default_2;                           // 0x03B8(0x0018)()
};
static_assert(alignof(WBP_KeyRebindResultTips_C_RefreshGlobalConflictTipsText) == 0x000008, "Wrong alignment on WBP_KeyRebindResultTips_C_RefreshGlobalConflictTipsText");
static_assert(sizeof(WBP_KeyRebindResultTips_C_RefreshGlobalConflictTipsText) == 0x0003D0, "Wrong size on WBP_KeyRebindResultTips_C_RefreshGlobalConflictTipsText");
static_assert(offsetof(WBP_KeyRebindResultTips_C_RefreshGlobalConflictTipsText, ResultInfo) == 0x000000, "Member 'WBP_KeyRebindResultTips_C_RefreshGlobalConflictTipsText::ResultInfo' has a wrong offset!");
static_assert(offsetof(WBP_KeyRebindResultTips_C_RefreshGlobalConflictTipsText, InputActionsofGlobalGroup) == 0x0000E0, "Member 'WBP_KeyRebindResultTips_C_RefreshGlobalConflictTipsText::InputActionsofGlobalGroup' has a wrong offset!");
static_assert(offsetof(WBP_KeyRebindResultTips_C_RefreshGlobalConflictTipsText, Temp_byte_Variable) == 0x000130, "Member 'WBP_KeyRebindResultTips_C_RefreshGlobalConflictTipsText::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_KeyRebindResultTips_C_RefreshGlobalConflictTipsText, Temp_text_Variable) == 0x000138, "Member 'WBP_KeyRebindResultTips_C_RefreshGlobalConflictTipsText::Temp_text_Variable' has a wrong offset!");
static_assert(offsetof(WBP_KeyRebindResultTips_C_RefreshGlobalConflictTipsText, CallFunc_Array_Get_Item) == 0x000150, "Member 'WBP_KeyRebindResultTips_C_RefreshGlobalConflictTipsText::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_KeyRebindResultTips_C_RefreshGlobalConflictTipsText, Temp_text_Variable_1) == 0x000158, "Member 'WBP_KeyRebindResultTips_C_RefreshGlobalConflictTipsText::Temp_text_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_KeyRebindResultTips_C_RefreshGlobalConflictTipsText, Temp_text_Variable_2) == 0x000170, "Member 'WBP_KeyRebindResultTips_C_RefreshGlobalConflictTipsText::Temp_text_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_KeyRebindResultTips_C_RefreshGlobalConflictTipsText, Temp_text_Variable_3) == 0x000188, "Member 'WBP_KeyRebindResultTips_C_RefreshGlobalConflictTipsText::Temp_text_Variable_3' has a wrong offset!");
static_assert(offsetof(WBP_KeyRebindResultTips_C_RefreshGlobalConflictTipsText, Temp_text_Variable_4) == 0x0001A0, "Member 'WBP_KeyRebindResultTips_C_RefreshGlobalConflictTipsText::Temp_text_Variable_4' has a wrong offset!");
static_assert(offsetof(WBP_KeyRebindResultTips_C_RefreshGlobalConflictTipsText, Temp_text_Variable_5) == 0x0001B8, "Member 'WBP_KeyRebindResultTips_C_RefreshGlobalConflictTipsText::Temp_text_Variable_5' has a wrong offset!");
static_assert(offsetof(WBP_KeyRebindResultTips_C_RefreshGlobalConflictTipsText, Temp_text_Variable_6) == 0x0001D0, "Member 'WBP_KeyRebindResultTips_C_RefreshGlobalConflictTipsText::Temp_text_Variable_6' has a wrong offset!");
static_assert(offsetof(WBP_KeyRebindResultTips_C_RefreshGlobalConflictTipsText, Temp_text_Variable_7) == 0x0001E8, "Member 'WBP_KeyRebindResultTips_C_RefreshGlobalConflictTipsText::Temp_text_Variable_7' has a wrong offset!");
static_assert(offsetof(WBP_KeyRebindResultTips_C_RefreshGlobalConflictTipsText, K2Node_MakeVariable_MakeVariableOutput) == 0x000200, "Member 'WBP_KeyRebindResultTips_C_RefreshGlobalConflictTipsText::K2Node_MakeVariable_MakeVariableOutput' has a wrong offset!");
static_assert(offsetof(WBP_KeyRebindResultTips_C_RefreshGlobalConflictTipsText, Temp_bool_Variable) == 0x000250, "Member 'WBP_KeyRebindResultTips_C_RefreshGlobalConflictTipsText::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_KeyRebindResultTips_C_RefreshGlobalConflictTipsText, CallFunc_Map_Find_Value) == 0x000258, "Member 'WBP_KeyRebindResultTips_C_RefreshGlobalConflictTipsText::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(WBP_KeyRebindResultTips_C_RefreshGlobalConflictTipsText, CallFunc_Map_Find_ReturnValue) == 0x000270, "Member 'WBP_KeyRebindResultTips_C_RefreshGlobalConflictTipsText::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_KeyRebindResultTips_C_RefreshGlobalConflictTipsText, CallFunc_Map_Find_Value_1) == 0x000278, "Member 'WBP_KeyRebindResultTips_C_RefreshGlobalConflictTipsText::CallFunc_Map_Find_Value_1' has a wrong offset!");
static_assert(offsetof(WBP_KeyRebindResultTips_C_RefreshGlobalConflictTipsText, CallFunc_Map_Find_ReturnValue_1) == 0x000290, "Member 'WBP_KeyRebindResultTips_C_RefreshGlobalConflictTipsText::CallFunc_Map_Find_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_KeyRebindResultTips_C_RefreshGlobalConflictTipsText, Temp_bool_Variable_1) == 0x000291, "Member 'WBP_KeyRebindResultTips_C_RefreshGlobalConflictTipsText::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_KeyRebindResultTips_C_RefreshGlobalConflictTipsText, K2Node_Select_Default) == 0x000298, "Member 'WBP_KeyRebindResultTips_C_RefreshGlobalConflictTipsText::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_KeyRebindResultTips_C_RefreshGlobalConflictTipsText, K2Node_MakeStruct_FormatArgumentData) == 0x0002B0, "Member 'WBP_KeyRebindResultTips_C_RefreshGlobalConflictTipsText::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(WBP_KeyRebindResultTips_C_RefreshGlobalConflictTipsText, K2Node_Select_Default_1) == 0x000300, "Member 'WBP_KeyRebindResultTips_C_RefreshGlobalConflictTipsText::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(WBP_KeyRebindResultTips_C_RefreshGlobalConflictTipsText, K2Node_MakeArray_Array) == 0x000318, "Member 'WBP_KeyRebindResultTips_C_RefreshGlobalConflictTipsText::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(WBP_KeyRebindResultTips_C_RefreshGlobalConflictTipsText, K2Node_MakeStruct_FormatArgumentData_1) == 0x000328, "Member 'WBP_KeyRebindResultTips_C_RefreshGlobalConflictTipsText::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(WBP_KeyRebindResultTips_C_RefreshGlobalConflictTipsText, CallFunc_Format_ReturnValue) == 0x000378, "Member 'WBP_KeyRebindResultTips_C_RefreshGlobalConflictTipsText::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_KeyRebindResultTips_C_RefreshGlobalConflictTipsText, K2Node_MakeArray_Array_1) == 0x000390, "Member 'WBP_KeyRebindResultTips_C_RefreshGlobalConflictTipsText::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(WBP_KeyRebindResultTips_C_RefreshGlobalConflictTipsText, CallFunc_Format_ReturnValue_1) == 0x0003A0, "Member 'WBP_KeyRebindResultTips_C_RefreshGlobalConflictTipsText::CallFunc_Format_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_KeyRebindResultTips_C_RefreshGlobalConflictTipsText, K2Node_Select_Default_2) == 0x0003B8, "Member 'WBP_KeyRebindResultTips_C_RefreshGlobalConflictTipsText::K2Node_Select_Default_2' has a wrong offset!");

// Function WBP_KeyRebindResultTips.WBP_KeyRebindResultTips_C.RefreshKeyRebindTips
// 0x00E0 (0x00E0 - 0x0000)
struct WBP_KeyRebindResultTips_C_RefreshKeyRebindTips final
{
public:
	struct FKeyRebind_DisplayResult               KeyRebindResultInfo;                               // 0x0000(0x00E0)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(WBP_KeyRebindResultTips_C_RefreshKeyRebindTips) == 0x000008, "Wrong alignment on WBP_KeyRebindResultTips_C_RefreshKeyRebindTips");
static_assert(sizeof(WBP_KeyRebindResultTips_C_RefreshKeyRebindTips) == 0x0000E0, "Wrong size on WBP_KeyRebindResultTips_C_RefreshKeyRebindTips");
static_assert(offsetof(WBP_KeyRebindResultTips_C_RefreshKeyRebindTips, KeyRebindResultInfo) == 0x000000, "Member 'WBP_KeyRebindResultTips_C_RefreshKeyRebindTips::KeyRebindResultInfo' has a wrong offset!");

}

