#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_Compass

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Palia_structs.hpp"
#include "UMG_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_Compass.WBP_Compass_C
// 0x02F8 (0x05B8 - 0x02C0)
class UWBP_Compass_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02C0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       ExitSearchAreaAnim;                                // 0x02C8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       EnterSearchAreaAnim;                               // 0x02D0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       PulseSearchAreaAnim;                               // 0x02D8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UVALUI_Image_Styled*                    BackgroundImage;                                   // 0x02E0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 CampassImage;                                      // 0x02E8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 CenterPoint;                                       // 0x02F0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCanvasPanel*                           CompassPanel;                                      // 0x02F8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 FTUEAnchorPoint;                                   // 0x0300(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UMenuAnchor_Popin_C*                    MenuAnchor_Popin;                                  // 0x0308(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 SearchAreaGlowImage;                               // 0x0310(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 SearchAreaOutlineImage;                            // 0x0318(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               SearchAreaOverlay;                                 // 0x0320(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 SideIndicatorArrowL;                               // 0x0328(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 SideIndicatorArrowR;                               // 0x0330(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCanvasPanel*                           SideTrackerPanel;                                  // 0x0338(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCanvasPanel*                           TrackerPanel;                                      // 0x0340(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_BasicHighlightDecorator_C*         WBP_BasicHighlightDecorator;                       // 0x0348(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	double                                        SubTickTime;                                       // 0x0350(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        NorthDegreeOffset;                                 // 0x0358(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ShowCanvasCompass;                                 // 0x0360(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4F48[0x7];                                     // 0x0361(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        StartingFOV;                                       // 0x0368(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TSoftObjectPtr<class UVAL_TutorialFlagDefinition> CompassFTUEFlag;                                   // 0x0370(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	class UWBP_PopinCalloutWidget_C*              MenuContent;                                       // 0x0398(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TMap<int32, class UUserWidget*>               Panel2Widgets;                                     // 0x03A0(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	TMap<int32, class UUserWidget*>               Panel3Widgets;                                     // 0x03F0(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	class UWBP_Compass_Tick_ActorTracker_C*       WidgetToShowDistanceOn;                            // 0x0440(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TMap<int32, class UWBP_Compass_Tick_ActorTracker_C*> SideTrackerWidgets;                                // 0x0448(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	bool                                          SideTrackerEnabled;                                // 0x0498(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4F49[0x7];                                     // 0x0499(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CompassVisibleFOV;                                 // 0x04A0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        ActiveCompassVisibleFOV;                           // 0x04A8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         MaxVisibleSideTrackers;                            // 0x04B0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4F4A[0x4];                                     // 0x04B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        SideTrackerStartOffsetR;                           // 0x04B8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        SideTrackerStartSpacingR;                          // 0x04C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        SideTrackerStartOffsetL;                           // 0x04C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        SideTrackerStartSpacingL;                          // 0x04D0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        SideTrackerYOffset;                                // 0x04D8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrivateSpaceConfig*                    CurrentPrivateSpaceConfig;                         // 0x04E0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	ETeleportTravelType                           CurrentPlayerTravelType;                           // 0x04E8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          UseWidget1;                                        // 0x04E9(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4F4B[0x6];                                     // 0x04EA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        DistToHideFocus;                                   // 0x04F0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           SubTickTimerHandle;                                // 0x04F8(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	double                                        SubTickTimeHalved;                                 // 0x0500(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CurrentCompassDgree;                               // 0x0508(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           Set_Initial_Active_Compass_FOVTimer_Handle;        // 0x0510(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UTrackingComponent*                     CachedTrackingComponent;                           // 0x0518(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          SearchAreaActiveState;                             // 0x0520(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          QueuedSearchAreaActiveState;                       // 0x0521(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4F4C[0x6];                                     // 0x0522(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UVALUI_TextBlockStyle*                  DistanceTextStyleOverride;                         // 0x0528(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	TSoftClassPtr<class UClass>                   ActorTrackerWidgetClass;                           // 0x0530(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash)
	int32                                         ActorTrackersToInitiallyProvision;                 // 0x0558(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4F4D[0x4];                                     // 0x055C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class US6UI_WidgetPoolManager*                Widget_Pool_Manager;                               // 0x0560(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	TMap<int32, class UWBP_Compass_Tick_ActorTracker_C*> TrackersData;                                      // 0x0568(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)

public:
	void AddToTrackerPanel(class UWBP_Compass_Tick_ActorTracker_C* Tracker, const struct FVector2D& CallFunc_MakeVector2D_ReturnValue, class UCanvasPanelSlot* CallFunc_SlotAsCanvasSlot_ReturnValue, class UPanelSlot* CallFunc_AddChild_ReturnValue, const struct FVector2D& CallFunc_MakeVector2D_ReturnValue_1, const struct FVector2D& CallFunc_MakeVector2D_ReturnValue_2, const struct FAnchors& K2Node_MakeStruct_Anchors);
	void AddTracker(class UTrackingComponent*& TrackingComponentObject, struct FTrackedItemInfo& TrackedItemInfo, bool bIsFocused, bool CallFunc_ShouldShowOnCompass_bShouldShow, class APlayerController* CallFunc_GetOwningPlayer_ReturnValue, class UUserWidget* CallFunc_GetWidgetFromPool_ReturnValue, class UWBP_Compass_Tick_ActorTracker_C* K2Node_DynamicCast_AsWBP_Compass_Tick_Actor_Tracker, bool K2Node_DynamicCast_bSuccess, class UUserWidget* CallFunc_GetWidgetFromPool_ReturnValue_1, class UWBP_Compass_Tick_ActorTracker_C* K2Node_DynamicCast_AsWBP_Compass_Tick_Actor_Tracker_1, bool K2Node_DynamicCast_bSuccess_1, class UPanelSlot* CallFunc_AddChild_ReturnValue, class UWBP_Compass_Tick_ActorTracker_C* CallFunc_Map_Find_Value, bool CallFunc_Map_Find_ReturnValue, class UWBP_Compass_Tick_ActorTracker_C* CallFunc_Map_Find_Value_1, bool CallFunc_Map_Find_ReturnValue_1, bool Temp_bool_Variable, class APlayerController* CallFunc_GetOwningPlayer_ReturnValue_1, TSoftObjectPtr<class UTexture2D> K2Node_Select_Default, bool CallFunc_IsValidSoftObjectReference_ReturnValue);
	void ClearAllTrackers(int32 Temp_int_Loop_Counter_Variable, int32 CallFunc_Add_IntInt_ReturnValue, int32 Temp_int_Array_Index_Variable, int32 Temp_int_Array_Index_Variable_1, int32 Temp_int_Loop_Counter_Variable_1, int32 CallFunc_Add_IntInt_ReturnValue_1, TArray<class UWBP_Compass_Tick_ActorTracker_C*>& CallFunc_Map_Values_Values, TArray<class UWBP_Compass_Tick_ActorTracker_C*>& CallFunc_Map_Values_Values_1, class UWBP_Compass_Tick_ActorTracker_C* CallFunc_Array_Get_Item, class UWBP_Compass_Tick_ActorTracker_C* CallFunc_Array_Get_Item_1, int32 CallFunc_Array_Length_ReturnValue, int32 CallFunc_Array_Length_ReturnValue_1, bool CallFunc_Less_IntInt_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue_1);
	void Construct();
	void Destruct();
	void ExecuteUbergraph_WBP_Compass(int32 EntryPoint, bool K2Node_Event_IsDesignTime, EValeriaFuncResult CallFunc_GetValeriaPlayerController_OutResult, class AValeriaPlayerController* CallFunc_GetValeriaPlayerController_ReturnValue, class UTrackingComponent* CallFunc_GetTrackingComponent_ReturnValue, TDelegate<void(class UTrackingComponent* Compass, struct FTrackedItemInfo& TrackedItemInfo)> K2Node_CreateDelegate_OutputDelegate, bool CallFunc_IsValid_ReturnValue, bool K2Node_SwitchEnum_CmpSuccess, EValeriaFuncResult CallFunc_GetValeriaCharacter_OutResult, class AValeriaCharacter* CallFunc_GetValeriaCharacter_ReturnValue, class UValeriaCharacterTeleportComponent* CallFunc_GetComponentByClass_ReturnValue, bool CallFunc_HasAuthority_ReturnValue, bool K2Node_SwitchEnum_CmpSuccess_1, bool CallFunc_Not_PreBool_ReturnValue, class UTrackingComponent* K2Node_CustomEvent_compass_2, struct FTrackedItemInfo& K2Node_CustomEvent_trackedItemInfo_2, class UTrackingComponent* K2Node_CustomEvent_compass_1, struct FTrackedItemInfo& K2Node_CustomEvent_trackedItemInfo_1, bool CallFunc_Client_IsFocusedItem_ReturnValue, class UTrackingComponent* K2Node_CustomEvent_compass, struct FTrackedItemInfo& K2Node_CustomEvent_trackedItemInfo, class UWBP_Compass_Tick_ActorTracker_C* CallFunc_FindBestWidgetForDistance_CompassMarkerWidget, bool CallFunc_NotEqual_ObjectObject_ReturnValue, bool CallFunc_IsValid_ReturnValue_1, TDelegate<void(class AValeriaCharacter* InValeriaCharacter, ETeleportTravelType TeleportTravelType, TSoftObjectPtr<class UPrivateSpaceConfig> PrivateSpaceConfig)> K2Node_CreateDelegate_OutputDelegate_1, bool CallFunc_IsValid_ReturnValue_2, bool Temp_bool_Variable, bool CallFunc_Not_PreBool_ReturnValue_1, bool CallFunc_IsValid_ReturnValue_3, TDelegate<void(class UTrackingComponent* Compass, struct FTrackedItemInfo& TrackedItemInfo)> K2Node_CreateDelegate_OutputDelegate_2, TDelegate<void(const struct FVector2D& NewWindowSize)> K2Node_CreateDelegate_OutputDelegate_3, TDelegate<void(const struct FVector2D& NewWindowSize)> K2Node_CreateDelegate_OutputDelegate_4, class AGameStateBase* CallFunc_GetGameState_ReturnValue, class AGameStateBase* CallFunc_GetGameState_ReturnValue_1, class AValeriaGameState* K2Node_DynamicCast_AsValeria_Game_State, bool K2Node_DynamicCast_bSuccess, class AValeriaGameState* K2Node_DynamicCast_AsValeria_Game_State_1, bool K2Node_DynamicCast_bSuccess_1, class UValeriaGameUserSettings* CallFunc_GetValeriaGameUserSettings_ReturnValue, TDelegate<void(struct FValeriaGraphicSettings& GraphicSettings)> K2Node_CreateDelegate_OutputDelegate_5, bool CallFunc_IsValid_ReturnValue_4, class UValeriaGameUserSettings* CallFunc_GetValeriaGameUserSettings_ReturnValue_1, TDelegate<void(struct FValeriaGraphicSettings& GraphicSettings)> K2Node_CreateDelegate_OutputDelegate_6, bool CallFunc_IsValid_ReturnValue_5, double CallFunc_GetCameraYaw_Rotation, TDelegate<void(class UTrackingComponent* Compass, struct FTrackedItemInfo& TrackedItemInfo)> K2Node_CreateDelegate_OutputDelegate_7, const struct FTransform& CallFunc_GetCameraTransform_Transform, struct FGeometry& CallFunc_GetCachedGeometry_ReturnValue, const struct FVector2D& CallFunc_GetLocalSize_ReturnValue, TDelegate<void()> K2Node_CreateDelegate_OutputDelegate_8, double CallFunc_BreakVector2D_X, double CallFunc_BreakVector2D_Y, const struct FTimerHandle& CallFunc_K2_SetTimerDelegate_ReturnValue, bool CallFunc_Greater_DoubleDouble_ReturnValue, const struct FGeometry& K2Node_Event_MyGeometry, float K2Node_Event_InDeltaTime, bool CallFunc_IsValid_ReturnValue_6, class US6UI_WidgetPoolManager* CallFunc_SpawnObject_ReturnValue, bool CallFunc_IsCompassDisplaySettingEnabled_IsEnabled, bool CallFunc_Not_PreBool_ReturnValue_2, bool CallFunc_IsValid_ReturnValue_7, TDelegate<void(class AValeriaCharacter* InValeriaCharacter, class UPrivateSpaceConfig* PrivateSpaceConfig)> K2Node_CreateDelegate_OutputDelegate_9, TDelegate<void(class AValeriaCharacter* InValeriaCharacter, class UPrivateSpaceConfig* PrivateSpaceConfig)> K2Node_CreateDelegate_OutputDelegate_10, EValeriaFuncResult CallFunc_GetValeriaPlayerController_OutResult_1, class AValeriaPlayerController* CallFunc_GetValeriaPlayerController_ReturnValue_1, EValeriaFuncResult CallFunc_GetValeriaPlayerController_OutResult_2, class AValeriaPlayerController* CallFunc_GetValeriaPlayerController_ReturnValue_2, class UTrackingComponent* CallFunc_GetTrackingComponent_ReturnValue_1, class UTrackingComponent* CallFunc_GetTrackingComponent_ReturnValue_2, bool K2Node_SwitchEnum_CmpSuccess_2, bool K2Node_SwitchEnum_CmpSuccess_3, TDelegate<void(bool bActive)> K2Node_CreateDelegate_OutputDelegate_11, bool K2Node_CustomEvent_bActive, TDelegate<void(bool bActive)> K2Node_CreateDelegate_OutputDelegate_12, class UUMGSequencePlayer* CallFunc_PlayAnimation_ReturnValue, class UUMGSequencePlayer* CallFunc_PlayAnimation_ReturnValue_1, class UUMGSequencePlayer* CallFunc_PlayAnimation_ReturnValue_2, bool CallFunc_IsValid_ReturnValue_8);
	void FindBestWidgetForDistance(class UWBP_Compass_Tick_ActorTracker_C** CompassMarkerWidget, const struct FVector& PlayerForwardVector, class UWBP_Compass_Tick_ActorTracker_C* BestWidget, double BestDegreesFromCenter, int32 Temp_int_Array_Index_Variable, TArray<class UWBP_Compass_Tick_ActorTracker_C*>& CallFunc_Map_Values_Values, int32 Temp_int_Loop_Counter_Variable, class UWBP_Compass_Tick_ActorTracker_C* CallFunc_Array_Get_Item, int32 CallFunc_Add_IntInt_ReturnValue, double CallFunc_BreakVector_X, double CallFunc_BreakVector_Y, double CallFunc_BreakVector_Z, const struct FVector& CallFunc_MakeVector_ReturnValue, const struct FVector& CallFunc_Normal_ReturnValue, int32 CallFunc_Array_Length_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue, bool CallFunc_Greater_DoubleDouble_ReturnValue, double CallFunc_Dot_VectorVector_ReturnValue, class APawn* CallFunc_GetOwningPlayerPawn_ReturnValue, bool CallFunc_IsValid_ReturnValue, const struct FRotator& CallFunc_GetControlRotation_ReturnValue, const struct FVector& CallFunc_GetForwardVector_ReturnValue, double CallFunc_BreakVector_X_1, double CallFunc_BreakVector_Y_1, double CallFunc_BreakVector_Z_1, const struct FVector& CallFunc_MakeVector_ReturnValue_1, const struct FVector& CallFunc_Normal_ReturnValue_1);
	void FindTrackerForInstance(int32 InstanceId, class UWBP_Compass_Tick_ActorTracker_C** TrackerWidget, class UWBP_Compass_Tick_ActorTracker_C* FoundTracker, class UWBP_Compass_Tick_ActorTracker_C* CallFunc_Map_Find_Value, bool CallFunc_Map_Find_ReturnValue);
	void GetCameraTransform(struct FTransform* Transform, class APlayerController* CallFunc_GetOwningPlayer_ReturnValue, const struct FRotator& CallFunc_GetCameraRotation_ReturnValue, const struct FVector& CallFunc_GetCameraLocation_ReturnValue, const struct FTransform& CallFunc_MakeTransform_ReturnValue);
	void GetCameraYaw(double* Rotation, class APlayerController* CallFunc_GetOwningPlayer_ReturnValue, const struct FRotator& CallFunc_GetCameraRotation_ReturnValue, float CallFunc_BreakRotator_Roll, float CallFunc_BreakRotator_Pitch, float CallFunc_BreakRotator_Yaw, double CallFunc_Add_DoubleDouble_ReturnValue, float CallFunc_NormalizeDegrees_ReturnValue, double K2Node_FunctionResult_Rotation_ImplicitCast, double CallFunc_Add_DoubleDouble_A_ImplicitCast, float CallFunc_NormalizeDegrees_degrees_ImplicitCast);
	void GetMaxVisibleDistance(const struct FTrackedItemInfo& TrackedItem, double* MaxVisibleDistance, bool CallFunc_LessEqual_DoubleDouble_ReturnValue, double CallFunc_FMin_ReturnValue, bool CallFunc_IsValid_ReturnValue, bool CallFunc_IsCompassDisplaySettingEnabled_IsEnabled, double K2Node_FunctionResult_MaxVisibleDistance_ImplicitCast, double K2Node_FunctionResult_MaxVisibleDistance_ImplicitCast_1, double CallFunc_FMin_A_ImplicitCast, double CallFunc_FMin_B_ImplicitCast, double CallFunc_LessEqual_DoubleDouble_A_ImplicitCast);
	void GetModifiedCameraFOV(double* FOV, bool Temp_bool_Variable, double Temp_real_Variable, double Temp_real_Variable_1, class APlayerCameraManager* CallFunc_GetOwningPlayerCameraManager_ReturnValue, float CallFunc_GetFOVAngle_ReturnValue, double CallFunc_DegCos_ReturnValue, double CallFunc_Divide_DoubleDouble_ReturnValue, bool CallFunc_Greater_DoubleDouble_ReturnValue, double K2Node_Select_Default, double CallFunc_Multiply_DoubleDouble_ReturnValue, double CallFunc_Subtract_DoubleDouble_ReturnValue, double CallFunc_DegCos_A_ImplicitCast, double CallFunc_Divide_DoubleDouble_A_ImplicitCast);
	void GetScrollBoxAdjustedSize(double* AdjustedSize, struct FGeometry& CallFunc_GetCachedGeometry_ReturnValue, struct FGeometry& CallFunc_GetCachedGeometry_ReturnValue_1, const struct FVector2D& CallFunc_GetLocalSize_ReturnValue, const struct FVector2D& CallFunc_GetLocalSize_ReturnValue_1, double CallFunc_BreakVector2D_X, double CallFunc_BreakVector2D_Y, double CallFunc_BreakVector2D_X_1, double CallFunc_BreakVector2D_Y_1, double CallFunc_FMax_ReturnValue, double CallFunc_Divide_DoubleDouble_ReturnValue);
	void GraphicsSettingsChanged(struct FValeriaGraphicSettings& GraphicSettings);
	void HandleItemTracked(class UTrackingComponent* Compass, struct FTrackedItemInfo& TrackedItemInfo);
	void HandleItemUntracked(class UTrackingComponent* Compass, struct FTrackedItemInfo& TrackedItemInfo);
	void HandleTrackedItemChanged(class UTrackingComponent* Compass, struct FTrackedItemInfo& TrackedItemInfo);
	void InitializeTrackerList(const TArray<struct FTrackedItemInfo>& TrackedItems, int32 Temp_int_Array_Index_Variable, const struct FTrackedItemInfo& CallFunc_Array_Get_Item, int32 CallFunc_Array_Length_ReturnValue, int32 Temp_int_Loop_Counter_Variable, EValeriaFuncResult CallFunc_GetValeriaPlayerController_OutResult, class AValeriaPlayerController* CallFunc_GetValeriaPlayerController_ReturnValue, class UTrackingComponent* CallFunc_GetTrackingComponent_ReturnValue, bool K2Node_SwitchEnum_CmpSuccess, TArray<struct FTrackedItemInfo>& CallFunc_GetTrackedItems_ReturnValue, bool CallFunc_IsValid_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue, int32 CallFunc_Add_IntInt_ReturnValue);
	class UWidget* MA_OnPopin(class APlayerController* CallFunc_GetPlayerController_ReturnValue, TDelegate<void()> K2Node_CreateDelegate_OutputDelegate, class US6UI_UIManagerWidgetBase* CallFunc_GetUIManagerWidget_ReturnValue, TScriptInterface<class IBPI_GameplayUIManagerTutorial_CM_C> K2Node_DynamicCast_AsBPI_Gameplay_UIManager_Tutorial_CM, bool K2Node_DynamicCast_bSuccess, class UWBP_FTUEPopin_CM_C* CallFunc_Redirect_FTUEPopin_Type_FTUEPopin, bool CallFunc_IsValid_ReturnValue, class UPanelSlot* CallFunc_SetContent_ReturnValue, class APlayerController* CallFunc_GetOwningPlayer_ReturnValue, class UWBP_PopinCalloutWidget_C* CallFunc_Create_ReturnValue);
	void MapDgreeToCompassLocation(double PanelWidth, double Dgree, double* LocationX, bool* IsInBound, double CallFunc_Divide_DoubleDouble_ReturnValue, double CallFunc_Add_DoubleDouble_ReturnValue, double CallFunc_Multiply_DoubleDouble_ReturnValue, double CallFunc_Divide_DoubleDouble_ReturnValue_1, double CallFunc_Add_DoubleDouble_ReturnValue_1, double CallFunc_Add_DoubleDouble_ReturnValue_2, bool CallFunc_InRange_FloatFloat_ReturnValue);
	void OnEnterPrivateSpace(class AValeriaCharacter* InValeriaCharacter, class UPrivateSpaceConfig* PrivateSpaceConfig);
	void OnExitPrivateSpace(class AValeriaCharacter* ValeriaCharacter, class UPrivateSpaceConfig* PrivateSpaceConfig);
	void OnInitialized();
	void OnTeleportComplete(class AValeriaCharacter* ValeriaCharacter, ETeleportTravelType TravelType, TSoftObjectPtr<class UPrivateSpaceConfig> PrivateSpaceConfig, bool CallFunc_EqualEqual_ByteByte_ReturnValue, bool CallFunc_Not_PreBool_ReturnValue);
	void PreConstruct(bool IsDesignTime);
	void RecalculateActiveCompassFOV(class APlayerCameraManager* CallFunc_GetOwningPlayerCameraManager_ReturnValue, double CallFunc_GetScrollBoxAdjustedSize_AdjustedSize, float CallFunc_GetFOVAngle_ReturnValue, double CallFunc_GetModifiedCameraFOV_FOV, double CallFunc_Divide_DoubleDouble_ReturnValue, double CallFunc_Multiply_DoubleDouble_ReturnValue, double CallFunc_Divide_DoubleDouble_ReturnValue_1, double CallFunc_Multiply_DoubleDouble_ReturnValue_1, double CallFunc_Multiply_DoubleDouble_ReturnValue_2, double CallFunc_Divide_DoubleDouble_A_ImplicitCast);
	void RemoveTracker(struct FTrackedItemInfo& TrackedItem, class UWBP_Compass_Tick_ActorTracker_C* CachedTracker, int32 InstanceId, bool CallFunc_Map_Remove_ReturnValue, bool CallFunc_Map_Remove_ReturnValue_1, class UWBP_Compass_Tick_ActorTracker_C* CallFunc_FindTrackerForInstance_TrackerWidget, class UWBP_Compass_Tick_ActorTracker_C* CallFunc_Map_Find_Value, bool CallFunc_Map_Find_ReturnValue, bool CallFunc_RemoveChild_ReturnValue, bool CallFunc_IsValid_ReturnValue);
	void RepositionSideTrackers(class UCanvasPanel* ParentPanel, TArray<class UWBP_Compass_Tick_ActorTracker_C*>& Trackers, class UImage* AnchorImage, const struct FVector2D& TrackerAlignment, double StartOffset, double Spacing, double OffsetStep, int32 Temp_int_Loop_Counter_Variable, int32 CallFunc_Add_IntInt_ReturnValue, bool CallFunc_Array_IsNotEmpty_ReturnValue, TDelegate<void(class UObject* A, class UObject* B)> K2Node_CreateDelegate_OutputDelegate, TArray<class UObject*>& CallFunc_SortObjectArray_ReturnValue, int32 CallFunc_Array_Length_ReturnValue, class UCanvasPanelSlot* CallFunc_SlotAsCanvasSlot_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue, const struct FAnchors& CallFunc_GetAnchors_ReturnValue, int32 Temp_int_Array_Index_Variable, class UObject* CallFunc_Array_Get_Item, bool CallFunc_Less_IntInt_ReturnValue_1, class UWBP_Compass_Tick_ActorTracker_C* K2Node_DynamicCast_AsWBP_Compass_Tick_Actor_Tracker, bool K2Node_DynamicCast_bSuccess, class UCanvasPanelSlot* CallFunc_SlotAsCanvasSlot_ReturnValue_1, int32 CallFunc_Multiply_IntInt_ReturnValue, double CallFunc_Conv_IntToDouble_ReturnValue, double CallFunc_Multiply_DoubleDouble_ReturnValue, double CallFunc_Add_DoubleDouble_ReturnValue, const struct FVector2D& CallFunc_MakeVector2D_ReturnValue);
	void SearchAreaActiveStateChanged(bool bActive);
	void SetInitialActiveCompassFOV();
	void SetUpTickTimer(TDelegate<void()> K2Node_CreateDelegate_OutputDelegate, const struct FTimerHandle& CallFunc_K2_SetTimerDelegate_ReturnValue, float CallFunc_K2_SetTimerDelegate_Time_ImplicitCast);
	void ShouldShowOnCompass(class UTrackingComponent* Tracking, struct FTrackedItemInfo& TrackedItemInfo, bool* bShouldShow, bool CallFunc_Client_IsFocusedItem_ReturnValue, bool CallFunc_BooleanOR_ReturnValue);
	bool SortSideTrackers(class UObject* A, class UObject* B, class UWBP_Compass_Tick_ActorTracker_C* K2Node_DynamicCast_AsWBP_Compass_Tick_Actor_Tracker, bool K2Node_DynamicCast_bSuccess, class UWBP_Compass_Tick_ActorTracker_C* K2Node_DynamicCast_AsWBP_Compass_Tick_Actor_Tracker_1, bool K2Node_DynamicCast_bSuccess_1, bool CallFunc_Less_DoubleDouble_ReturnValue);
	void Tick(const struct FGeometry& MyGeometry, float InDeltaTime);
	void Tracked_Item_Changed(class UTrackingComponent* Compass, struct FTrackedItemInfo& Tracked_Item_Info, class UWBP_Compass_Tick_ActorTracker_C* SideTrackerWidget, class UWBP_Compass_Tick_ActorTracker_C* TrackerWidget, bool CallFunc_ShouldShowOnCompass_bShouldShow, class UWBP_Compass_Tick_ActorTracker_C* CallFunc_Map_Find_Value, bool CallFunc_Map_Find_ReturnValue, bool CallFunc_Client_IsFocusedItem_ReturnValue, class UWBP_Compass_Tick_ActorTracker_C* CallFunc_FindTrackerForInstance_TrackerWidget, bool CallFunc_IsValid_ReturnValue, bool CallFunc_Not_PreBool_ReturnValue, bool Temp_bool_Variable, TSoftObjectPtr<class UTexture2D> K2Node_Select_Default, bool CallFunc_IsValidSoftObjectReference_ReturnValue, bool CallFunc_IsValid_ReturnValue_1, bool CallFunc_Not_PreBool_ReturnValue_1, bool CallFunc_BooleanAND_ReturnValue);
	void Update_All_Trackers(double PanelWidth, class UCanvasPanelSlot* CompassItemCanvasSlot, class UWBP_Compass_Tick_ActorTracker_C* CurrentCompassItem, int32 Temp_int_Array_Index_Variable, double CallFunc_GetMaxVisibleDistance_MaxVisibleDistance, TArray<class UWBP_Compass_Tick_ActorTracker_C*>& CallFunc_Map_Values_Values, bool CallFunc_Less_DoubleDouble_ReturnValue, class UWBP_Compass_Tick_ActorTracker_C* CallFunc_Array_Get_Item, int32 CallFunc_Array_Length_ReturnValue, class UCanvasPanelSlot* CallFunc_SlotAsCanvasSlot_ReturnValue, const struct FVector2D& CallFunc_GetSize_ReturnValue, double CallFunc_BreakVector2D_X, double CallFunc_BreakVector2D_Y, const struct FVector& CallFunc_Normal_ReturnValue, const struct FRotator& CallFunc_MakeRotFromX_ReturnValue, float CallFunc_BreakRotator_Roll, float CallFunc_BreakRotator_Pitch, float CallFunc_BreakRotator_Yaw, EValeriaFuncResult CallFunc_GetValeriaPlayerController_OutResult, class AValeriaPlayerController* CallFunc_GetValeriaPlayerController_ReturnValue, float CallFunc_NormalizeAxis_ReturnValue, class UTrackingComponent* CallFunc_GetTrackingComponent_ReturnValue, double CallFunc_Subtract_DoubleDouble_ReturnValue, bool CallFunc_Client_SetFocusedItem_ReturnValue, float CallFunc_NormalizeAxis_ReturnValue_1, bool K2Node_SwitchEnum_CmpSuccess, double CallFunc_MapDgreeToCompassLocation_LocationX, bool CallFunc_MapDgreeToCompassLocation_IsInBound, double CallFunc_Divide_DoubleDouble_ReturnValue, const struct FVector2D& CallFunc_MakeVector2D_ReturnValue, bool CallFunc_GetIsFocused_IsFocused, double CallFunc_Multiply_DoubleDouble_ReturnValue, const struct FVector2D& CallFunc_MakeVector2D_ReturnValue_1, bool CallFunc_Less_DoubleDouble_ReturnValue_1, const struct FAnchors& K2Node_MakeStruct_Anchors, bool CallFunc_BooleanAND_ReturnValue, class UCanvasPanelSlot* CallFunc_SlotAsCanvasSlot_ReturnValue_1, bool CallFunc_GetIsFocused_IsFocused_1, int32 Temp_int_Loop_Counter_Variable, bool CallFunc_Less_IntInt_ReturnValue, double CallFunc_Multiply_DoubleDouble_ReturnValue_1, double CallFunc_Subtract_DoubleDouble_ReturnValue_1, bool CallFunc_Greater_DoubleDouble_ReturnValue, bool CallFunc_LessEqual_DoubleDouble_ReturnValue, bool CallFunc_BooleanOR_ReturnValue, bool CallFunc_Not_PreBool_ReturnValue, int32 CallFunc_Add_IntInt_ReturnValue, bool CallFunc_BooleanAND_ReturnValue_1, bool CallFunc_DoesWorldLocationContextMatchCurrentTravelType_DoesMatch, double CallFunc_Subtract_DoubleDouble_B_ImplicitCast, double CallFunc_Subtract_DoubleDouble_A_ImplicitCast, float CallFunc_NormalizeAxis_Angle_ImplicitCast, double CallFunc_MapDgreeToCompassLocation_Dgree_ImplicitCast);
	void Update_Direction(double CallFunc_MapRangeClamped_ReturnValue, double CallFunc_GetCameraYaw_Rotation, float CallFunc_NormalizeAxis_ReturnValue, float CallFunc_FindDeltaAngleDegrees_DeltaAngle, double CallFunc_Add_DoubleDouble_ReturnValue, double CallFunc_FInterpTo_ReturnValue, float CallFunc_NormalizeAxis_ReturnValue_1, float CallFunc_FindDeltaAngleDegrees_StartAngle_ImplicitCast, float CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast, float CallFunc_NormalizeAxis_Angle_ImplicitCast, double CallFunc_Add_DoubleDouble_B_ImplicitCast, float CallFunc_NormalizeAxis_Angle_ImplicitCast_1, double K2Node_VariableSet_CurrentCompassDgree_ImplicitCast);
	void UpdateCompass();
	void UpdateDistanceInfor();
	void UpdateSideTrackers(const struct FTransform& ReferenceTransform, double CameraAngle, const TArray<class UWBP_Compass_Tick_ActorTracker_C*>& SideTrackersL, const TArray<class UWBP_Compass_Tick_ActorTracker_C*>& SideTrackersR, int32 Temp_int_Array_Index_Variable, double CallFunc_Multiply_DoubleDouble_ReturnValue, int32 Temp_int_Loop_Counter_Variable, const struct FVector& CallFunc_BreakTransform_Location, const struct FRotator& CallFunc_BreakTransform_Rotation, const struct FVector& CallFunc_BreakTransform_Scale, int32 CallFunc_Add_IntInt_ReturnValue, float CallFunc_BreakRotator_Roll, float CallFunc_BreakRotator_Pitch, float CallFunc_BreakRotator_Yaw, const struct FRotator& CallFunc_MakeRotator_ReturnValue, TArray<class UWBP_Compass_Tick_ActorTracker_C*>& CallFunc_Map_Values_Values, int32 CallFunc_Array_Length_ReturnValue, class UWBP_Compass_Tick_ActorTracker_C* CallFunc_Array_Get_Item, bool CallFunc_Less_IntInt_ReturnValue, int32 CallFunc_Array_Add_ReturnValue, int32 CallFunc_Array_Add_ReturnValue_1, bool CallFunc_GetIsFocused_IsFocused, const struct FVector& CallFunc_Normal_ReturnValue, const struct FRotator& CallFunc_MakeRotFromX_ReturnValue, double CallFunc_Multiply_DoubleDouble_ReturnValue_1, const struct FRotator& CallFunc_NormalizedDeltaRotator_ReturnValue, float CallFunc_BreakRotator_Roll_1, float CallFunc_BreakRotator_Pitch_1, float CallFunc_BreakRotator_Yaw_1, double CallFunc_GetMaxVisibleDistance_MaxVisibleDistance, bool CallFunc_GreaterEqual_DoubleDouble_ReturnValue, bool CallFunc_Less_DoubleDouble_ReturnValue, bool CallFunc_Greater_DoubleDouble_ReturnValue, bool CallFunc_LessEqual_DoubleDouble_ReturnValue, bool CallFunc_BooleanOR_ReturnValue, double CallFunc_Abs_ReturnValue, bool CallFunc_DoesWorldLocationContextMatchCurrentTravelType_DoesMatch, double CallFunc_Abs_A_ImplicitCast, double CallFunc_LessEqual_DoubleDouble_A_ImplicitCast, double CallFunc_GreaterEqual_DoubleDouble_A_ImplicitCast);
	void WBP_Compass_AutoGenFunc(class UVAL_TutorialFlagsManager* CallFunc_GetLocalPlayerSubsystem_ReturnValue);
	void WindowSizeUpdated(const struct FVector2D& NewWindowSize);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_Compass_C">();
	}
	static class UWBP_Compass_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_Compass_C>();
	}
};
static_assert(alignof(UWBP_Compass_C) == 0x000008, "Wrong alignment on UWBP_Compass_C");
static_assert(sizeof(UWBP_Compass_C) == 0x0005B8, "Wrong size on UWBP_Compass_C");
static_assert(offsetof(UWBP_Compass_C, UberGraphFrame) == 0x0002C0, "Member 'UWBP_Compass_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWBP_Compass_C, ExitSearchAreaAnim) == 0x0002C8, "Member 'UWBP_Compass_C::ExitSearchAreaAnim' has a wrong offset!");
static_assert(offsetof(UWBP_Compass_C, EnterSearchAreaAnim) == 0x0002D0, "Member 'UWBP_Compass_C::EnterSearchAreaAnim' has a wrong offset!");
static_assert(offsetof(UWBP_Compass_C, PulseSearchAreaAnim) == 0x0002D8, "Member 'UWBP_Compass_C::PulseSearchAreaAnim' has a wrong offset!");
static_assert(offsetof(UWBP_Compass_C, BackgroundImage) == 0x0002E0, "Member 'UWBP_Compass_C::BackgroundImage' has a wrong offset!");
static_assert(offsetof(UWBP_Compass_C, CampassImage) == 0x0002E8, "Member 'UWBP_Compass_C::CampassImage' has a wrong offset!");
static_assert(offsetof(UWBP_Compass_C, CenterPoint) == 0x0002F0, "Member 'UWBP_Compass_C::CenterPoint' has a wrong offset!");
static_assert(offsetof(UWBP_Compass_C, CompassPanel) == 0x0002F8, "Member 'UWBP_Compass_C::CompassPanel' has a wrong offset!");
static_assert(offsetof(UWBP_Compass_C, FTUEAnchorPoint) == 0x000300, "Member 'UWBP_Compass_C::FTUEAnchorPoint' has a wrong offset!");
static_assert(offsetof(UWBP_Compass_C, MenuAnchor_Popin) == 0x000308, "Member 'UWBP_Compass_C::MenuAnchor_Popin' has a wrong offset!");
static_assert(offsetof(UWBP_Compass_C, SearchAreaGlowImage) == 0x000310, "Member 'UWBP_Compass_C::SearchAreaGlowImage' has a wrong offset!");
static_assert(offsetof(UWBP_Compass_C, SearchAreaOutlineImage) == 0x000318, "Member 'UWBP_Compass_C::SearchAreaOutlineImage' has a wrong offset!");
static_assert(offsetof(UWBP_Compass_C, SearchAreaOverlay) == 0x000320, "Member 'UWBP_Compass_C::SearchAreaOverlay' has a wrong offset!");
static_assert(offsetof(UWBP_Compass_C, SideIndicatorArrowL) == 0x000328, "Member 'UWBP_Compass_C::SideIndicatorArrowL' has a wrong offset!");
static_assert(offsetof(UWBP_Compass_C, SideIndicatorArrowR) == 0x000330, "Member 'UWBP_Compass_C::SideIndicatorArrowR' has a wrong offset!");
static_assert(offsetof(UWBP_Compass_C, SideTrackerPanel) == 0x000338, "Member 'UWBP_Compass_C::SideTrackerPanel' has a wrong offset!");
static_assert(offsetof(UWBP_Compass_C, TrackerPanel) == 0x000340, "Member 'UWBP_Compass_C::TrackerPanel' has a wrong offset!");
static_assert(offsetof(UWBP_Compass_C, WBP_BasicHighlightDecorator) == 0x000348, "Member 'UWBP_Compass_C::WBP_BasicHighlightDecorator' has a wrong offset!");
static_assert(offsetof(UWBP_Compass_C, SubTickTime) == 0x000350, "Member 'UWBP_Compass_C::SubTickTime' has a wrong offset!");
static_assert(offsetof(UWBP_Compass_C, NorthDegreeOffset) == 0x000358, "Member 'UWBP_Compass_C::NorthDegreeOffset' has a wrong offset!");
static_assert(offsetof(UWBP_Compass_C, ShowCanvasCompass) == 0x000360, "Member 'UWBP_Compass_C::ShowCanvasCompass' has a wrong offset!");
static_assert(offsetof(UWBP_Compass_C, StartingFOV) == 0x000368, "Member 'UWBP_Compass_C::StartingFOV' has a wrong offset!");
static_assert(offsetof(UWBP_Compass_C, CompassFTUEFlag) == 0x000370, "Member 'UWBP_Compass_C::CompassFTUEFlag' has a wrong offset!");
static_assert(offsetof(UWBP_Compass_C, MenuContent) == 0x000398, "Member 'UWBP_Compass_C::MenuContent' has a wrong offset!");
static_assert(offsetof(UWBP_Compass_C, Panel2Widgets) == 0x0003A0, "Member 'UWBP_Compass_C::Panel2Widgets' has a wrong offset!");
static_assert(offsetof(UWBP_Compass_C, Panel3Widgets) == 0x0003F0, "Member 'UWBP_Compass_C::Panel3Widgets' has a wrong offset!");
static_assert(offsetof(UWBP_Compass_C, WidgetToShowDistanceOn) == 0x000440, "Member 'UWBP_Compass_C::WidgetToShowDistanceOn' has a wrong offset!");
static_assert(offsetof(UWBP_Compass_C, SideTrackerWidgets) == 0x000448, "Member 'UWBP_Compass_C::SideTrackerWidgets' has a wrong offset!");
static_assert(offsetof(UWBP_Compass_C, SideTrackerEnabled) == 0x000498, "Member 'UWBP_Compass_C::SideTrackerEnabled' has a wrong offset!");
static_assert(offsetof(UWBP_Compass_C, CompassVisibleFOV) == 0x0004A0, "Member 'UWBP_Compass_C::CompassVisibleFOV' has a wrong offset!");
static_assert(offsetof(UWBP_Compass_C, ActiveCompassVisibleFOV) == 0x0004A8, "Member 'UWBP_Compass_C::ActiveCompassVisibleFOV' has a wrong offset!");
static_assert(offsetof(UWBP_Compass_C, MaxVisibleSideTrackers) == 0x0004B0, "Member 'UWBP_Compass_C::MaxVisibleSideTrackers' has a wrong offset!");
static_assert(offsetof(UWBP_Compass_C, SideTrackerStartOffsetR) == 0x0004B8, "Member 'UWBP_Compass_C::SideTrackerStartOffsetR' has a wrong offset!");
static_assert(offsetof(UWBP_Compass_C, SideTrackerStartSpacingR) == 0x0004C0, "Member 'UWBP_Compass_C::SideTrackerStartSpacingR' has a wrong offset!");
static_assert(offsetof(UWBP_Compass_C, SideTrackerStartOffsetL) == 0x0004C8, "Member 'UWBP_Compass_C::SideTrackerStartOffsetL' has a wrong offset!");
static_assert(offsetof(UWBP_Compass_C, SideTrackerStartSpacingL) == 0x0004D0, "Member 'UWBP_Compass_C::SideTrackerStartSpacingL' has a wrong offset!");
static_assert(offsetof(UWBP_Compass_C, SideTrackerYOffset) == 0x0004D8, "Member 'UWBP_Compass_C::SideTrackerYOffset' has a wrong offset!");
static_assert(offsetof(UWBP_Compass_C, CurrentPrivateSpaceConfig) == 0x0004E0, "Member 'UWBP_Compass_C::CurrentPrivateSpaceConfig' has a wrong offset!");
static_assert(offsetof(UWBP_Compass_C, CurrentPlayerTravelType) == 0x0004E8, "Member 'UWBP_Compass_C::CurrentPlayerTravelType' has a wrong offset!");
static_assert(offsetof(UWBP_Compass_C, UseWidget1) == 0x0004E9, "Member 'UWBP_Compass_C::UseWidget1' has a wrong offset!");
static_assert(offsetof(UWBP_Compass_C, DistToHideFocus) == 0x0004F0, "Member 'UWBP_Compass_C::DistToHideFocus' has a wrong offset!");
static_assert(offsetof(UWBP_Compass_C, SubTickTimerHandle) == 0x0004F8, "Member 'UWBP_Compass_C::SubTickTimerHandle' has a wrong offset!");
static_assert(offsetof(UWBP_Compass_C, SubTickTimeHalved) == 0x000500, "Member 'UWBP_Compass_C::SubTickTimeHalved' has a wrong offset!");
static_assert(offsetof(UWBP_Compass_C, CurrentCompassDgree) == 0x000508, "Member 'UWBP_Compass_C::CurrentCompassDgree' has a wrong offset!");
static_assert(offsetof(UWBP_Compass_C, Set_Initial_Active_Compass_FOVTimer_Handle) == 0x000510, "Member 'UWBP_Compass_C::Set_Initial_Active_Compass_FOVTimer_Handle' has a wrong offset!");
static_assert(offsetof(UWBP_Compass_C, CachedTrackingComponent) == 0x000518, "Member 'UWBP_Compass_C::CachedTrackingComponent' has a wrong offset!");
static_assert(offsetof(UWBP_Compass_C, SearchAreaActiveState) == 0x000520, "Member 'UWBP_Compass_C::SearchAreaActiveState' has a wrong offset!");
static_assert(offsetof(UWBP_Compass_C, QueuedSearchAreaActiveState) == 0x000521, "Member 'UWBP_Compass_C::QueuedSearchAreaActiveState' has a wrong offset!");
static_assert(offsetof(UWBP_Compass_C, DistanceTextStyleOverride) == 0x000528, "Member 'UWBP_Compass_C::DistanceTextStyleOverride' has a wrong offset!");
static_assert(offsetof(UWBP_Compass_C, ActorTrackerWidgetClass) == 0x000530, "Member 'UWBP_Compass_C::ActorTrackerWidgetClass' has a wrong offset!");
static_assert(offsetof(UWBP_Compass_C, ActorTrackersToInitiallyProvision) == 0x000558, "Member 'UWBP_Compass_C::ActorTrackersToInitiallyProvision' has a wrong offset!");
static_assert(offsetof(UWBP_Compass_C, Widget_Pool_Manager) == 0x000560, "Member 'UWBP_Compass_C::Widget_Pool_Manager' has a wrong offset!");
static_assert(offsetof(UWBP_Compass_C, TrackersData) == 0x000568, "Member 'UWBP_Compass_C::TrackersData' has a wrong offset!");

}

