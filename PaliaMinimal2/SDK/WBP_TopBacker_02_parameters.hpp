#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_TopBacker_02

#include "Basic.hpp"

#include "BP_TopBackerSettings_Popup_structs.hpp"


namespace SDK::Params
{

// Function WBP_TopBacker_02.WBP_TopBacker_02_C.ApplyBackerSettings
// 0x0058 (0x0058 - 0x0000)
struct WBP_TopBacker_02_C_ApplyBackerSettings final
{
public:
	struct FBP_TopBackerSettings_Popup            Settings;                                          // 0x0000(0x0040)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	class UOverlaySlot*                           CallFunc_SlotAsOverlaySlot_ReturnValue;            // 0x0040(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UHorizontalBoxSlot*                     CallFunc_SlotAsHorizontalBoxSlot_ReturnValue;      // 0x0048(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UOverlaySlot*                           CallFunc_SlotAsOverlaySlot_ReturnValue_1;          // 0x0050(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_TopBacker_02_C_ApplyBackerSettings) == 0x000008, "Wrong alignment on WBP_TopBacker_02_C_ApplyBackerSettings");
static_assert(sizeof(WBP_TopBacker_02_C_ApplyBackerSettings) == 0x000058, "Wrong size on WBP_TopBacker_02_C_ApplyBackerSettings");
static_assert(offsetof(WBP_TopBacker_02_C_ApplyBackerSettings, Settings) == 0x000000, "Member 'WBP_TopBacker_02_C_ApplyBackerSettings::Settings' has a wrong offset!");
static_assert(offsetof(WBP_TopBacker_02_C_ApplyBackerSettings, CallFunc_SlotAsOverlaySlot_ReturnValue) == 0x000040, "Member 'WBP_TopBacker_02_C_ApplyBackerSettings::CallFunc_SlotAsOverlaySlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_TopBacker_02_C_ApplyBackerSettings, CallFunc_SlotAsHorizontalBoxSlot_ReturnValue) == 0x000048, "Member 'WBP_TopBacker_02_C_ApplyBackerSettings::CallFunc_SlotAsHorizontalBoxSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_TopBacker_02_C_ApplyBackerSettings, CallFunc_SlotAsOverlaySlot_ReturnValue_1) == 0x000050, "Member 'WBP_TopBacker_02_C_ApplyBackerSettings::CallFunc_SlotAsOverlaySlot_ReturnValue_1' has a wrong offset!");

// Function WBP_TopBacker_02.WBP_TopBacker_02_C.ExecuteUbergraph_WBP_TopBacker_02
// 0x0008 (0x0008 - 0x0000)
struct WBP_TopBacker_02_C_ExecuteUbergraph_WBP_TopBacker_02 final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_TopBacker_02_C_ExecuteUbergraph_WBP_TopBacker_02) == 0x000004, "Wrong alignment on WBP_TopBacker_02_C_ExecuteUbergraph_WBP_TopBacker_02");
static_assert(sizeof(WBP_TopBacker_02_C_ExecuteUbergraph_WBP_TopBacker_02) == 0x000008, "Wrong size on WBP_TopBacker_02_C_ExecuteUbergraph_WBP_TopBacker_02");
static_assert(offsetof(WBP_TopBacker_02_C_ExecuteUbergraph_WBP_TopBacker_02, EntryPoint) == 0x000000, "Member 'WBP_TopBacker_02_C_ExecuteUbergraph_WBP_TopBacker_02::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_TopBacker_02_C_ExecuteUbergraph_WBP_TopBacker_02, K2Node_Event_IsDesignTime) == 0x000004, "Member 'WBP_TopBacker_02_C_ExecuteUbergraph_WBP_TopBacker_02::K2Node_Event_IsDesignTime' has a wrong offset!");

// Function WBP_TopBacker_02.WBP_TopBacker_02_C.PlayAnim
// 0x0008 (0x0008 - 0x0000)
struct WBP_TopBacker_02_C_PlayAnim final
{
public:
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_TopBacker_02_C_PlayAnim) == 0x000008, "Wrong alignment on WBP_TopBacker_02_C_PlayAnim");
static_assert(sizeof(WBP_TopBacker_02_C_PlayAnim) == 0x000008, "Wrong size on WBP_TopBacker_02_C_PlayAnim");
static_assert(offsetof(WBP_TopBacker_02_C_PlayAnim, CallFunc_PlayAnimation_ReturnValue) == 0x000000, "Member 'WBP_TopBacker_02_C_PlayAnim::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");

// Function WBP_TopBacker_02.WBP_TopBacker_02_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct WBP_TopBacker_02_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_TopBacker_02_C_PreConstruct) == 0x000001, "Wrong alignment on WBP_TopBacker_02_C_PreConstruct");
static_assert(sizeof(WBP_TopBacker_02_C_PreConstruct) == 0x000001, "Wrong size on WBP_TopBacker_02_C_PreConstruct");
static_assert(offsetof(WBP_TopBacker_02_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'WBP_TopBacker_02_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function WBP_TopBacker_02.WBP_TopBacker_02_C.SetHeaderText
// 0x0018 (0x0018 - 0x0000)
struct WBP_TopBacker_02_C_SetHeaderText final
{
public:
	class FText                                   Text;                                              // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(WBP_TopBacker_02_C_SetHeaderText) == 0x000008, "Wrong alignment on WBP_TopBacker_02_C_SetHeaderText");
static_assert(sizeof(WBP_TopBacker_02_C_SetHeaderText) == 0x000018, "Wrong size on WBP_TopBacker_02_C_SetHeaderText");
static_assert(offsetof(WBP_TopBacker_02_C_SetHeaderText, Text) == 0x000000, "Member 'WBP_TopBacker_02_C_SetHeaderText::Text' has a wrong offset!");

}

