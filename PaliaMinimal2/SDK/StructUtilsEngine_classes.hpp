#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: StructUtilsEngine

#include "Basic.hpp"

#include "Engine_classes.hpp"
#include "StructUtilsEngine_structs.hpp"


namespace SDK
{

// Class StructUtilsEngine.StructUtilsFunctionLibrary
// 0x0000 (0x0028 - 0x0028)
class UStructUtilsFunctionLibrary final : public UBlueprintFunctionLibrary
{
public:
	static bool EqualEqual_InstancedStruct(struct FInstancedStruct& A, struct FInstancedStruct& B);
	static void GetInstancedStructValue(EStructUtilsResult* ExecResult, struct FInstancedStruct& InstancedStruct, int32* Value);
	static EStructUtilsResult IsInstancedStructValid(struct FInstancedStruct& InstancedStruct);
	static bool IsValid_InstancedStruct(struct FInstancedStruct& InstancedStruct);
	static struct FInstancedStruct MakeInstancedStruct(int32& Value);
	static bool NotEqual_InstancedStruct(struct FInstancedStruct& A, struct FInstancedStruct& B);
	static void Reset(struct FInstancedStruct& InstancedStruct, class UScriptStruct* StructType);
	static void SetInstancedStructValue(struct FInstancedStruct& InstancedStruct, int32& Value);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"StructUtilsFunctionLibrary">();
	}
	static class UStructUtilsFunctionLibrary* GetDefaultObj()
	{
		return GetDefaultObjImpl<UStructUtilsFunctionLibrary>();
	}
};
static_assert(alignof(UStructUtilsFunctionLibrary) == 0x000008, "Wrong alignment on UStructUtilsFunctionLibrary");
static_assert(sizeof(UStructUtilsFunctionLibrary) == 0x000028, "Wrong size on UStructUtilsFunctionLibrary");

}

