#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Env_Audio_Pool_Base

#include "Basic.hpp"

#include "BP_Env_Audio_Pool_Base_classes.hpp"
#include "BP_Env_Audio_Pool_Base_parameters.hpp"


namespace SDK
{

// Function BP_Env_Audio_Pool_Base.BP_Env_Audio_Pool_Base_C.ExecuteUbergraph_BP_Env_Audio_Pool_Base
// (Final, UbergraphFunction)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    CallFunc_IsValid_ReturnValue                           (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Env_Audio_Pool_Base_C::ExecuteUbergraph_BP_Env_Audio_Pool_Base(int32 EntryPoint, bool CallFunc_IsValid_ReturnValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Env_Audio_Pool_Base_C", "ExecuteUbergraph_BP_Env_Audio_Pool_Base");

	Params::BP_Env_Audio_Pool_Base_C_ExecuteUbergraph_BP_Env_Audio_Pool_Base Parms{};

	Parms.EntryPoint = EntryPoint;
	Parms.CallFunc_IsValid_ReturnValue = CallFunc_IsValid_ReturnValue;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Env_Audio_Pool_Base.BP_Env_Audio_Pool_Base_C.ReceiveDestroyed
// (Event, Public, BlueprintEvent)

void ABP_Env_Audio_Pool_Base_C::ReceiveDestroyed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Env_Audio_Pool_Base_C", "ReceiveDestroyed");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Env_Audio_Pool_Base.BP_Env_Audio_Pool_Base_C.SetBillboardVisibility
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Visible                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Env_Audio_Pool_Base_C::SetBillboardVisibility(bool Visible)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Env_Audio_Pool_Base_C", "SetBillboardVisibility");

	Params::BP_Env_Audio_Pool_Base_C_SetBillboardVisibility Parms{};

	Parms.Visible = Visible;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Env_Audio_Pool_Base.BP_Env_Audio_Pool_Base_C.SetRadiusToAttenuation
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  AkInstectMaxAtten                                      (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  AkCritterMaxAtten                                      (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  AkLoopMaxAtten                                         (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  CallFunc_FMax_ReturnValue                              (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  CallFunc_FMax_ReturnValue_1                            (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  CallFunc_Add_DoubleDouble_ReturnValue                  (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   CallFunc_GetMaxAttenuationRadius_ReturnValue           (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    CallFunc_IsValid_ReturnValue                           (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   CallFunc_GetMaxAttenuationRadius_ReturnValue_1         (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   CallFunc_GetMaxAttenuationRadius_ReturnValue_2         (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    CallFunc_IsValid_ReturnValue_1                         (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    CallFunc_IsValid_ReturnValue_2                         (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   CallFunc_SetSphereRadius_InSphereRadius_ImplicitCast   (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  K2Node_VariableSet_AkInstectMaxAtten_ImplicitCast      (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  K2Node_VariableSet_AkCritterMaxAtten_ImplicitCast      (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  K2Node_VariableSet_AkLoopMaxAtten_ImplicitCast         (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Env_Audio_Pool_Base_C::SetRadiusToAttenuation(double AkInstectMaxAtten, double AkCritterMaxAtten, double AkLoopMaxAtten, double CallFunc_FMax_ReturnValue, double CallFunc_FMax_ReturnValue_1, double CallFunc_Add_DoubleDouble_ReturnValue, float CallFunc_GetMaxAttenuationRadius_ReturnValue, bool CallFunc_IsValid_ReturnValue, float CallFunc_GetMaxAttenuationRadius_ReturnValue_1, float CallFunc_GetMaxAttenuationRadius_ReturnValue_2, bool CallFunc_IsValid_ReturnValue_1, bool CallFunc_IsValid_ReturnValue_2, float CallFunc_SetSphereRadius_InSphereRadius_ImplicitCast, double K2Node_VariableSet_AkInstectMaxAtten_ImplicitCast, double K2Node_VariableSet_AkCritterMaxAtten_ImplicitCast, double K2Node_VariableSet_AkLoopMaxAtten_ImplicitCast)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Env_Audio_Pool_Base_C", "SetRadiusToAttenuation");

	Params::BP_Env_Audio_Pool_Base_C_SetRadiusToAttenuation Parms{};

	Parms.AkInstectMaxAtten = AkInstectMaxAtten;
	Parms.AkCritterMaxAtten = AkCritterMaxAtten;
	Parms.AkLoopMaxAtten = AkLoopMaxAtten;
	Parms.CallFunc_FMax_ReturnValue = CallFunc_FMax_ReturnValue;
	Parms.CallFunc_FMax_ReturnValue_1 = CallFunc_FMax_ReturnValue_1;
	Parms.CallFunc_Add_DoubleDouble_ReturnValue = CallFunc_Add_DoubleDouble_ReturnValue;
	Parms.CallFunc_GetMaxAttenuationRadius_ReturnValue = CallFunc_GetMaxAttenuationRadius_ReturnValue;
	Parms.CallFunc_IsValid_ReturnValue = CallFunc_IsValid_ReturnValue;
	Parms.CallFunc_GetMaxAttenuationRadius_ReturnValue_1 = CallFunc_GetMaxAttenuationRadius_ReturnValue_1;
	Parms.CallFunc_GetMaxAttenuationRadius_ReturnValue_2 = CallFunc_GetMaxAttenuationRadius_ReturnValue_2;
	Parms.CallFunc_IsValid_ReturnValue_1 = CallFunc_IsValid_ReturnValue_1;
	Parms.CallFunc_IsValid_ReturnValue_2 = CallFunc_IsValid_ReturnValue_2;
	Parms.CallFunc_SetSphereRadius_InSphereRadius_ImplicitCast = CallFunc_SetSphereRadius_InSphereRadius_ImplicitCast;
	Parms.K2Node_VariableSet_AkInstectMaxAtten_ImplicitCast = K2Node_VariableSet_AkInstectMaxAtten_ImplicitCast;
	Parms.K2Node_VariableSet_AkCritterMaxAtten_ImplicitCast = K2Node_VariableSet_AkCritterMaxAtten_ImplicitCast;
	Parms.K2Node_VariableSet_AkLoopMaxAtten_ImplicitCast = K2Node_VariableSet_AkLoopMaxAtten_ImplicitCast;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Env_Audio_Pool_Base.BP_Env_Audio_Pool_Base_C.UserConstructionScript
// (Event, Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    CallFunc_IsValid_ReturnValue                           (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    CallFunc_EqualEqual_IntInt_ReturnValue                 (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   CallFunc_RandomInteger_ReturnValue                     (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    CallFunc_Not_PreBool_ReturnValue                       (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    CallFunc_BooleanAND_ReturnValue                        (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    CallFunc_LessEqual_IntInt_ReturnValue                  (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    CallFunc_BooleanAND_ReturnValue_1                      (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FStruct_PoolAudio                K2Node_MakeStruct_Struct_PoolAudio                     (NoDestructor, HasGetValueTypeHash)

void ABP_Env_Audio_Pool_Base_C::UserConstructionScript(bool CallFunc_IsValid_ReturnValue, bool CallFunc_EqualEqual_IntInt_ReturnValue, int32 CallFunc_RandomInteger_ReturnValue, bool CallFunc_Not_PreBool_ReturnValue, bool CallFunc_BooleanAND_ReturnValue, bool CallFunc_LessEqual_IntInt_ReturnValue, bool CallFunc_BooleanAND_ReturnValue_1, const struct FStruct_PoolAudio& K2Node_MakeStruct_Struct_PoolAudio)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Env_Audio_Pool_Base_C", "UserConstructionScript");

	Params::BP_Env_Audio_Pool_Base_C_UserConstructionScript Parms{};

	Parms.CallFunc_IsValid_ReturnValue = CallFunc_IsValid_ReturnValue;
	Parms.CallFunc_EqualEqual_IntInt_ReturnValue = CallFunc_EqualEqual_IntInt_ReturnValue;
	Parms.CallFunc_RandomInteger_ReturnValue = CallFunc_RandomInteger_ReturnValue;
	Parms.CallFunc_Not_PreBool_ReturnValue = CallFunc_Not_PreBool_ReturnValue;
	Parms.CallFunc_BooleanAND_ReturnValue = CallFunc_BooleanAND_ReturnValue;
	Parms.CallFunc_LessEqual_IntInt_ReturnValue = CallFunc_LessEqual_IntInt_ReturnValue;
	Parms.CallFunc_BooleanAND_ReturnValue_1 = CallFunc_BooleanAND_ReturnValue_1;
	Parms.K2Node_MakeStruct_Struct_PoolAudio = std::move(K2Node_MakeStruct_Struct_PoolAudio);

	UObject::ProcessEvent(Func, &Parms);
}

}

