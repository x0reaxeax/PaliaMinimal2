#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_ExpandableArea_CM

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CommonInput_structs.hpp"
#include "CommonUI_classes.hpp"
#include "UMG_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_ExpandableArea_CM.WBP_ExpandableArea_CM_C
// 0x00B0 (0x0398 - 0x02E8)
class UWBP_ExpandableArea_CM_C final : public UCommonUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02E8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UNamedSlot*                             NamedSlot_Content;                                 // 0x02F0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UVALUI_TextBlock_Styled*                TextBlock_Header;                                  // 0x02F8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_FocusTip_CM_C*                     WBP_FocusTip_CM;                                   // 0x0300(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_Template_Button_CM_C*              WBP_Template_Button_CM;                            // 0x0308(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class FText                                   HeaderText;                                        // 0x0310(0x0018)(Edit, BlueprintVisible)
	bool                                          Expanded;                                          // 0x0328(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          StartExpanded;                                     // 0x0329(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IgnoreStartExpanded;                               // 0x032A(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_42D5[0x5];                                     // 0x032B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UAkAudioEvent*                          ExpandSound;                                       // 0x0330(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAkAudioEvent*                          CollapseSound;                                     // 0x0338(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 ButtonStyle_Expanded;                              // 0x0340(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 ButtonStyle_Collapsed;                             // 0x0348(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	bool                                          ContentShouldFillSlot;                             // 0x0350(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	uint8                                         Pad_42D6[0x7];                                     // 0x0351(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	FMulticastInlineDelegateProperty_             OnAreaExpanded;                                    // 0x0358(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	FMulticastInlineDelegateProperty_             OnExpandableAreaFocused;                           // 0x0368(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	FMulticastInlineDelegateProperty_             OnExpandableAreaButtonHovered;                     // 0x0378(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	FMulticastInlineDelegateProperty_             OnWidgetFocused;                                   // 0x0388(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)

public:
	void BndEvt__WBP_ExpandableArea_CM_WBP_Template_Button_CM_K2Node_ComponentBoundEvent_0_OnFocused__DelegateSignature();
	void BndEvt__WBP_ExpandableArea_CM_WBP_Template_Button_CM_K2Node_ComponentBoundEvent_1_OnUnfocused__DelegateSignature();
	void BndEvt__WBP_ExpandableArea_CM_WBP_Template_Button_CM_K2Node_ComponentBoundEvent_2_CommonButtonBaseClicked__DelegateSignature(class UCommonButtonBase* Button);
	void BndEvt__WBP_ExpandableArea_CM_WBP_Template_Button_CM_K2Node_ComponentBoundEvent_3_CommonButtonBaseClicked__DelegateSignature(class UCommonButtonBase* Button);
	void BndEvt__WBP_ExpandableArea_CM_WBP_Template_Button_CM_K2Node_ComponentBoundEvent_4_CommonButtonBaseClicked__DelegateSignature(class UCommonButtonBase* Button);
	void Construct();
	void DisplayExpandedContent(bool Param_Expanded, bool SuppressEventCalls, class UClass* HeaderButtonStyle, ESlateVisibility BodyVisibility, bool CallFunc_Not_PreBool_ReturnValue);
	void ExecuteUbergraph_WBP_ExpandableArea_CM(int32 EntryPoint, ESlateSizeRule Temp_byte_Variable, class UCommonInputSubsystem* CallFunc_GetLocalPlayerSubsystem_ReturnValue, class FText K2Node_CustomEvent_HeaderText, ESlateSizeRule Temp_byte_Variable_1, bool K2Node_Event_IsDesignTime, bool Temp_bool_Variable, ESlateSizeRule K2Node_Select_Default, class UPanelSlot* CallFunc_GetContentSlot_ReturnValue, const struct FSlateChildSize& K2Node_MakeStruct_SlateChildSize, class UVerticalBoxSlot* K2Node_DynamicCast_AsVertical_Box_Slot, bool K2Node_DynamicCast_bSuccess, class UCommonButtonBase* K2Node_ComponentBoundEvent_Button_2, class UCommonButtonBase* K2Node_ComponentBoundEvent_Button_1, int32 CallFunc_AkEventGlobal_ReturnValue, TDelegate<void(ECommonInputType bNewInputType)> K2Node_CreateDelegate_OutputDelegate, ECommonInputType K2Node_CustomEvent_bNewInputType, bool CallFunc_HasAnyUserFocus_ReturnValue, const struct FFocusEvent& K2Node_Event_InFocusEvent, class UCommonButtonBase* K2Node_ComponentBoundEvent_Button);
	void HandleOnInputMethodChanged(ECommonInputType bNewInputType);
	void OnAreaExpanded__DelegateSignature(class UWBP_ExpandableArea_CM_C* ExpandableAreaWidget, bool Param_Expanded);
	void OnExpandableAreaButtonHovered__DelegateSignature(class UWBP_ExpandableArea_CM_C* ExpandableArea);
	void OnExpandableAreaFocused__DelegateSignature(class UWBP_ExpandableArea_CM_C* Expandable_Area);
	void OnFocusLost(const struct FFocusEvent& InFocusEvent);
	struct FEventReply OnFocusReceived(const struct FGeometry& MyGeometry, const struct FFocusEvent& InFocusEvent, const struct FEventReply& CallFunc_Handled_ReturnValue);
	void OnWidgetFocused__DelegateSignature(const struct FFocusEvent& InFocusEvent);
	void PreConstruct(bool IsDesignTime);
	void SetExpanded(bool NewExpanded, bool DoCosmeticEffects, bool SuppressEventCalls, bool Temp_bool_Variable, ESlateVisibility CallFunc_GetVisibility_ReturnValue, class UAkAudioEvent* K2Node_Select_Default, bool CallFunc_EqualEqual_ByteByte_ReturnValue, int32 CallFunc_AkEventGlobal_ReturnValue);
	void SetHeaderText(class FText Param_HeaderText);
	void ToggleExpand(bool Temp_bool_Variable, class UAkAudioEvent* K2Node_Select_Default, bool CallFunc_Not_PreBool_ReturnValue, int32 CallFunc_AkEventGlobal_ReturnValue);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_ExpandableArea_CM_C">();
	}
	static class UWBP_ExpandableArea_CM_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_ExpandableArea_CM_C>();
	}
};
static_assert(alignof(UWBP_ExpandableArea_CM_C) == 0x000008, "Wrong alignment on UWBP_ExpandableArea_CM_C");
static_assert(sizeof(UWBP_ExpandableArea_CM_C) == 0x000398, "Wrong size on UWBP_ExpandableArea_CM_C");
static_assert(offsetof(UWBP_ExpandableArea_CM_C, UberGraphFrame) == 0x0002E8, "Member 'UWBP_ExpandableArea_CM_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWBP_ExpandableArea_CM_C, NamedSlot_Content) == 0x0002F0, "Member 'UWBP_ExpandableArea_CM_C::NamedSlot_Content' has a wrong offset!");
static_assert(offsetof(UWBP_ExpandableArea_CM_C, TextBlock_Header) == 0x0002F8, "Member 'UWBP_ExpandableArea_CM_C::TextBlock_Header' has a wrong offset!");
static_assert(offsetof(UWBP_ExpandableArea_CM_C, WBP_FocusTip_CM) == 0x000300, "Member 'UWBP_ExpandableArea_CM_C::WBP_FocusTip_CM' has a wrong offset!");
static_assert(offsetof(UWBP_ExpandableArea_CM_C, WBP_Template_Button_CM) == 0x000308, "Member 'UWBP_ExpandableArea_CM_C::WBP_Template_Button_CM' has a wrong offset!");
static_assert(offsetof(UWBP_ExpandableArea_CM_C, HeaderText) == 0x000310, "Member 'UWBP_ExpandableArea_CM_C::HeaderText' has a wrong offset!");
static_assert(offsetof(UWBP_ExpandableArea_CM_C, Expanded) == 0x000328, "Member 'UWBP_ExpandableArea_CM_C::Expanded' has a wrong offset!");
static_assert(offsetof(UWBP_ExpandableArea_CM_C, StartExpanded) == 0x000329, "Member 'UWBP_ExpandableArea_CM_C::StartExpanded' has a wrong offset!");
static_assert(offsetof(UWBP_ExpandableArea_CM_C, IgnoreStartExpanded) == 0x00032A, "Member 'UWBP_ExpandableArea_CM_C::IgnoreStartExpanded' has a wrong offset!");
static_assert(offsetof(UWBP_ExpandableArea_CM_C, ExpandSound) == 0x000330, "Member 'UWBP_ExpandableArea_CM_C::ExpandSound' has a wrong offset!");
static_assert(offsetof(UWBP_ExpandableArea_CM_C, CollapseSound) == 0x000338, "Member 'UWBP_ExpandableArea_CM_C::CollapseSound' has a wrong offset!");
static_assert(offsetof(UWBP_ExpandableArea_CM_C, ButtonStyle_Expanded) == 0x000340, "Member 'UWBP_ExpandableArea_CM_C::ButtonStyle_Expanded' has a wrong offset!");
static_assert(offsetof(UWBP_ExpandableArea_CM_C, ButtonStyle_Collapsed) == 0x000348, "Member 'UWBP_ExpandableArea_CM_C::ButtonStyle_Collapsed' has a wrong offset!");
static_assert(offsetof(UWBP_ExpandableArea_CM_C, ContentShouldFillSlot) == 0x000350, "Member 'UWBP_ExpandableArea_CM_C::ContentShouldFillSlot' has a wrong offset!");
static_assert(offsetof(UWBP_ExpandableArea_CM_C, OnAreaExpanded) == 0x000358, "Member 'UWBP_ExpandableArea_CM_C::OnAreaExpanded' has a wrong offset!");
static_assert(offsetof(UWBP_ExpandableArea_CM_C, OnExpandableAreaFocused) == 0x000368, "Member 'UWBP_ExpandableArea_CM_C::OnExpandableAreaFocused' has a wrong offset!");
static_assert(offsetof(UWBP_ExpandableArea_CM_C, OnExpandableAreaButtonHovered) == 0x000378, "Member 'UWBP_ExpandableArea_CM_C::OnExpandableAreaButtonHovered' has a wrong offset!");
static_assert(offsetof(UWBP_ExpandableArea_CM_C, OnWidgetFocused) == 0x000388, "Member 'UWBP_ExpandableArea_CM_C::OnWidgetFocused' has a wrong offset!");

}

