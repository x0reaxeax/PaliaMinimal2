#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_PopinCalloutWidget

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "SlateCore_structs.hpp"
#include "UMG_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_PopinCalloutWidget.WBP_PopinCalloutWidget_C
// 0x0030 (0x02F0 - 0x02C0)
class UWBP_PopinCalloutWidget_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02C0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UVALUI_Border_Styled*                   Border_Root;                                       // 0x02C8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_PointerToAnchor;                             // 0x02D0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UNamedSlot*                             NamedSlot_Content;                                 // 0x02D8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               Overlay_Root;                                      // 0x02E0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	EMenuPlacement                                MenuAnchorPlacement;                               // 0x02E8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)

public:
	void Construct();
	void ExecuteUbergraph_WBP_PopinCalloutWidget(int32 EntryPoint, int32 CallFunc_AkEventGlobal_ReturnValue, bool K2Node_Event_IsDesignTime);
	void PreConstruct(bool IsDesignTime);
	void SetAnchoringAlignment(EMenuPlacement Param_MenuAnchorPlacement, EOrientation PrimaryOffsetOrientation, bool Temp_bool_Variable, EHorizontalAlignment Temp_byte_Variable, bool Temp_bool_Variable_1, bool Temp_bool_Variable_2, bool Temp_bool_Variable_3, bool Temp_bool_Variable_4, bool Temp_bool_Variable_5, double Temp_real_Variable, bool Temp_bool_Variable_6, double Temp_real_Variable_1, bool Temp_bool_Variable_7, double Temp_real_Variable_2, bool Temp_bool_Variable_8, double Temp_real_Variable_3, EMenuPlacement Temp_byte_Variable_1, double Temp_real_Variable_4, double Temp_real_Variable_5, double Temp_real_Variable_6, double Temp_real_Variable_7, double Temp_real_Variable_8, double Temp_real_Variable_9, double Temp_real_Variable_10, double Temp_real_Variable_11, double Temp_real_Variable_12, double Temp_real_Variable_13, double Temp_real_Variable_14, double Temp_real_Variable_15, double Temp_real_Variable_16, EMenuPlacement Temp_byte_Variable_2, EOrientation Temp_byte_Variable_3, EOrientation Temp_byte_Variable_4, EOrientation Temp_byte_Variable_5, EOrientation Temp_byte_Variable_6, EOrientation Temp_byte_Variable_7, EOrientation Temp_byte_Variable_8, EOrientation Temp_byte_Variable_9, EOrientation Temp_byte_Variable_10, EOrientation Temp_byte_Variable_11, EOrientation Temp_byte_Variable_12, EOrientation Temp_byte_Variable_13, EOrientation Temp_byte_Variable_14, EOrientation Temp_byte_Variable_15, EMenuPlacement Temp_byte_Variable_16, EHorizontalAlignment Temp_byte_Variable_17, EHorizontalAlignment Temp_byte_Variable_18, EHorizontalAlignment Temp_byte_Variable_19, EHorizontalAlignment Temp_byte_Variable_20, EHorizontalAlignment Temp_byte_Variable_21, EHorizontalAlignment Temp_byte_Variable_22, EHorizontalAlignment Temp_byte_Variable_23, EHorizontalAlignment Temp_byte_Variable_24, EHorizontalAlignment Temp_byte_Variable_25, EHorizontalAlignment Temp_byte_Variable_26, EHorizontalAlignment Temp_byte_Variable_27, EHorizontalAlignment Temp_byte_Variable_28, EHorizontalAlignment Temp_byte_Variable_29, EMenuPlacement Temp_byte_Variable_30, EVerticalAlignment Temp_byte_Variable_31, EVerticalAlignment Temp_byte_Variable_32, EVerticalAlignment Temp_byte_Variable_33, EVerticalAlignment Temp_byte_Variable_34, EVerticalAlignment Temp_byte_Variable_35, EVerticalAlignment Temp_byte_Variable_36, EVerticalAlignment Temp_byte_Variable_37, EVerticalAlignment Temp_byte_Variable_38, EVerticalAlignment Temp_byte_Variable_39, EVerticalAlignment Temp_byte_Variable_40, EVerticalAlignment Temp_byte_Variable_41, EVerticalAlignment Temp_byte_Variable_42, EVerticalAlignment Temp_byte_Variable_43, bool Temp_bool_Variable_9, class UOverlaySlot* CallFunc_SlotAsOverlaySlot_ReturnValue, float CallFunc_GetRenderTransformAngle_ReturnValue, bool K2Node_Select_Default, class UOverlaySlot* CallFunc_SlotAsOverlaySlot_ReturnValue_1, const struct FVector2D& CallFunc_GetRotated2D_ReturnValue, const struct FVector2D& CallFunc_GetAbs2D_ReturnValue, const struct FMargin& K2Node_Copy_ReturnValue, double CallFunc_BreakVector2D_X, double CallFunc_BreakVector2D_Y, const struct FMargin& K2Node_SetFieldsInStruct_StructOut, const struct FMargin& K2Node_Copy_ReturnValue_1, bool Temp_bool_Variable_10, const struct FMargin& K2Node_SetFieldsInStruct_StructOut_1, double K2Node_Select_Default_1, EOrientation K2Node_Select_Default_2, bool Temp_bool_Variable_11, EVerticalAlignment Temp_byte_Variable_44, class UOverlaySlot* CallFunc_SlotAsOverlaySlot_ReturnValue_2, bool K2Node_Select_Default_3, bool Temp_bool_Variable_12, bool K2Node_SwitchEnum_CmpSuccess, bool Temp_bool_Variable_13, class UOverlaySlot* CallFunc_SlotAsOverlaySlot_ReturnValue_3, EHorizontalAlignment K2Node_Select_Default_4, class UOverlaySlot* CallFunc_SlotAsOverlaySlot_ReturnValue_4, EOrientation Temp_byte_Variable_45, bool K2Node_Select_Default_5, bool CallFunc_Not_PreBool_ReturnValue, EVerticalAlignment K2Node_Select_Default_6, bool CallFunc_BooleanAND_ReturnValue, bool CallFunc_BooleanAND_ReturnValue_1, double K2Node_Select_Default_7, double K2Node_Select_Default_8, bool CallFunc_BooleanAND_ReturnValue_2, bool CallFunc_BooleanAND_ReturnValue_3, double K2Node_Select_Default_9, double K2Node_Select_Default_10, const struct FMargin& K2Node_MakeStruct_Margin, class UOverlaySlot* CallFunc_SlotAsOverlaySlot_ReturnValue_5, const struct FVector2D& CallFunc_GetRotated2D_A_ImplicitCast, float CallFunc_SetRenderTransformAngle_Angle_ImplicitCast, float K2Node_MakeStruct_Top_ImplicitCast, float K2Node_MakeStruct_Bottom_ImplicitCast, float K2Node_MakeStruct_Left_ImplicitCast, float K2Node_MakeStruct_Right_ImplicitCast);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_PopinCalloutWidget_C">();
	}
	static class UWBP_PopinCalloutWidget_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_PopinCalloutWidget_C>();
	}
};
static_assert(alignof(UWBP_PopinCalloutWidget_C) == 0x000008, "Wrong alignment on UWBP_PopinCalloutWidget_C");
static_assert(sizeof(UWBP_PopinCalloutWidget_C) == 0x0002F0, "Wrong size on UWBP_PopinCalloutWidget_C");
static_assert(offsetof(UWBP_PopinCalloutWidget_C, UberGraphFrame) == 0x0002C0, "Member 'UWBP_PopinCalloutWidget_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWBP_PopinCalloutWidget_C, Border_Root) == 0x0002C8, "Member 'UWBP_PopinCalloutWidget_C::Border_Root' has a wrong offset!");
static_assert(offsetof(UWBP_PopinCalloutWidget_C, Image_PointerToAnchor) == 0x0002D0, "Member 'UWBP_PopinCalloutWidget_C::Image_PointerToAnchor' has a wrong offset!");
static_assert(offsetof(UWBP_PopinCalloutWidget_C, NamedSlot_Content) == 0x0002D8, "Member 'UWBP_PopinCalloutWidget_C::NamedSlot_Content' has a wrong offset!");
static_assert(offsetof(UWBP_PopinCalloutWidget_C, Overlay_Root) == 0x0002E0, "Member 'UWBP_PopinCalloutWidget_C::Overlay_Root' has a wrong offset!");
static_assert(offsetof(UWBP_PopinCalloutWidget_C, MenuAnchorPlacement) == 0x0002E8, "Member 'UWBP_PopinCalloutWidget_C::MenuAnchorPlacement' has a wrong offset!");

}

