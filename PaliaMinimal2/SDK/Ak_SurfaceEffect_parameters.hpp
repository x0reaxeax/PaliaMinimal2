#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Ak_SurfaceEffect

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Palia_structs.hpp"
#include "Struct_Physmat_structs.hpp"
#include "Engine_structs.hpp"
#include "Enum_core_Scalability_structs.hpp"
#include "AkAudio_structs.hpp"


namespace SDK::Params
{

// Function Ak_SurfaceEffect.Ak_SurfaceEffect_C.CheckForWater
// 0x02D8 (0x02D8 - 0x0000)
struct Ak_SurfaceEffect_C_CheckForWater final
{
public:
	class USkeletalMeshComponent*                 Mesh;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4A4C[0x7];                                     // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                Location;                                          // 0x0010(0x0018)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        HalfHeightMinusRad;                                // 0x0028(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4A4D[0x4];                                     // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AValeriaMoveablePawn*                   K2Node_DynamicCast_AsValeria_Moveable_Pawn;        // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4A4E[0x3];                                     // 0x0049(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0050(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4A4F[0x4];                                     // 0x006C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0078(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0090(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         Temp_object_Variable;                              // 0x00A8(0x0010)(ConstParm, ReferenceParm)
	struct FVector                                CallFunc_MakeVector_ReturnValue_1;                 // 0x00B8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x00D0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FHitResult>                     CallFunc_SphereTraceMulti_OutHits;                 // 0x00E8(0x0010)(ReferenceParm, ContainsInstancedReference)
	bool                                          CallFunc_SphereTraceMulti_ReturnValue;             // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4A50[0x7];                                     // 0x00F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_Array_Get_Item;                           // 0x0100(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x01E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x01EC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x01ED(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4A51[0x2];                                     // 0x01EE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x01F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x01F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x01F8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x0210(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x0228(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x0240(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x0258(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x0260(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x0268(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x0270(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_BoneName;                  // 0x0278(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x0280(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x0284(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x0288(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4A52[0x4];                                     // 0x028C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x0290(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x02A8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x02C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x02C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue_1;    // 0x02C2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x02C3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4A53[0x4];                                     // 0x02C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Subtract_DoubleDouble_A_ImplicitCast;     // 0x02C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_B_ImplicitCast;     // 0x02D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ak_SurfaceEffect_C_CheckForWater) == 0x000008, "Wrong alignment on Ak_SurfaceEffect_C_CheckForWater");
static_assert(sizeof(Ak_SurfaceEffect_C_CheckForWater) == 0x0002D8, "Wrong size on Ak_SurfaceEffect_C_CheckForWater");
static_assert(offsetof(Ak_SurfaceEffect_C_CheckForWater, Mesh) == 0x000000, "Member 'Ak_SurfaceEffect_C_CheckForWater::Mesh' has a wrong offset!");
static_assert(offsetof(Ak_SurfaceEffect_C_CheckForWater, ReturnValue) == 0x000008, "Member 'Ak_SurfaceEffect_C_CheckForWater::ReturnValue' has a wrong offset!");
static_assert(offsetof(Ak_SurfaceEffect_C_CheckForWater, Location) == 0x000010, "Member 'Ak_SurfaceEffect_C_CheckForWater::Location' has a wrong offset!");
static_assert(offsetof(Ak_SurfaceEffect_C_CheckForWater, HalfHeightMinusRad) == 0x000028, "Member 'Ak_SurfaceEffect_C_CheckForWater::HalfHeightMinusRad' has a wrong offset!");
static_assert(offsetof(Ak_SurfaceEffect_C_CheckForWater, Temp_int_Array_Index_Variable) == 0x000030, "Member 'Ak_SurfaceEffect_C_CheckForWater::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(Ak_SurfaceEffect_C_CheckForWater, CallFunc_GetOwner_ReturnValue) == 0x000038, "Member 'Ak_SurfaceEffect_C_CheckForWater::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ak_SurfaceEffect_C_CheckForWater, K2Node_DynamicCast_AsValeria_Moveable_Pawn) == 0x000040, "Member 'Ak_SurfaceEffect_C_CheckForWater::K2Node_DynamicCast_AsValeria_Moveable_Pawn' has a wrong offset!");
static_assert(offsetof(Ak_SurfaceEffect_C_CheckForWater, K2Node_DynamicCast_bSuccess) == 0x000048, "Member 'Ak_SurfaceEffect_C_CheckForWater::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Ak_SurfaceEffect_C_CheckForWater, Temp_int_Loop_Counter_Variable) == 0x00004C, "Member 'Ak_SurfaceEffect_C_CheckForWater::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(Ak_SurfaceEffect_C_CheckForWater, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000050, "Member 'Ak_SurfaceEffect_C_CheckForWater::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ak_SurfaceEffect_C_CheckForWater, CallFunc_Add_IntInt_ReturnValue) == 0x000068, "Member 'Ak_SurfaceEffect_C_CheckForWater::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ak_SurfaceEffect_C_CheckForWater, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000070, "Member 'Ak_SurfaceEffect_C_CheckForWater::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ak_SurfaceEffect_C_CheckForWater, CallFunc_MakeVector_ReturnValue) == 0x000078, "Member 'Ak_SurfaceEffect_C_CheckForWater::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ak_SurfaceEffect_C_CheckForWater, CallFunc_Add_VectorVector_ReturnValue) == 0x000090, "Member 'Ak_SurfaceEffect_C_CheckForWater::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ak_SurfaceEffect_C_CheckForWater, Temp_object_Variable) == 0x0000A8, "Member 'Ak_SurfaceEffect_C_CheckForWater::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(Ak_SurfaceEffect_C_CheckForWater, CallFunc_MakeVector_ReturnValue_1) == 0x0000B8, "Member 'Ak_SurfaceEffect_C_CheckForWater::CallFunc_MakeVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ak_SurfaceEffect_C_CheckForWater, CallFunc_Subtract_VectorVector_ReturnValue) == 0x0000D0, "Member 'Ak_SurfaceEffect_C_CheckForWater::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ak_SurfaceEffect_C_CheckForWater, CallFunc_SphereTraceMulti_OutHits) == 0x0000E8, "Member 'Ak_SurfaceEffect_C_CheckForWater::CallFunc_SphereTraceMulti_OutHits' has a wrong offset!");
static_assert(offsetof(Ak_SurfaceEffect_C_CheckForWater, CallFunc_SphereTraceMulti_ReturnValue) == 0x0000F8, "Member 'Ak_SurfaceEffect_C_CheckForWater::CallFunc_SphereTraceMulti_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ak_SurfaceEffect_C_CheckForWater, CallFunc_Array_Get_Item) == 0x000100, "Member 'Ak_SurfaceEffect_C_CheckForWater::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(Ak_SurfaceEffect_C_CheckForWater, CallFunc_Array_Length_ReturnValue) == 0x0001E8, "Member 'Ak_SurfaceEffect_C_CheckForWater::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ak_SurfaceEffect_C_CheckForWater, CallFunc_BreakHitResult_bBlockingHit) == 0x0001EC, "Member 'Ak_SurfaceEffect_C_CheckForWater::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(Ak_SurfaceEffect_C_CheckForWater, CallFunc_BreakHitResult_bInitialOverlap) == 0x0001ED, "Member 'Ak_SurfaceEffect_C_CheckForWater::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(Ak_SurfaceEffect_C_CheckForWater, CallFunc_BreakHitResult_Time) == 0x0001F0, "Member 'Ak_SurfaceEffect_C_CheckForWater::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(Ak_SurfaceEffect_C_CheckForWater, CallFunc_BreakHitResult_Distance) == 0x0001F4, "Member 'Ak_SurfaceEffect_C_CheckForWater::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(Ak_SurfaceEffect_C_CheckForWater, CallFunc_BreakHitResult_Location) == 0x0001F8, "Member 'Ak_SurfaceEffect_C_CheckForWater::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(Ak_SurfaceEffect_C_CheckForWater, CallFunc_BreakHitResult_ImpactPoint) == 0x000210, "Member 'Ak_SurfaceEffect_C_CheckForWater::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(Ak_SurfaceEffect_C_CheckForWater, CallFunc_BreakHitResult_Normal) == 0x000228, "Member 'Ak_SurfaceEffect_C_CheckForWater::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(Ak_SurfaceEffect_C_CheckForWater, CallFunc_BreakHitResult_ImpactNormal) == 0x000240, "Member 'Ak_SurfaceEffect_C_CheckForWater::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(Ak_SurfaceEffect_C_CheckForWater, CallFunc_BreakHitResult_PhysMat) == 0x000258, "Member 'Ak_SurfaceEffect_C_CheckForWater::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(Ak_SurfaceEffect_C_CheckForWater, CallFunc_BreakHitResult_HitActor) == 0x000260, "Member 'Ak_SurfaceEffect_C_CheckForWater::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(Ak_SurfaceEffect_C_CheckForWater, CallFunc_BreakHitResult_HitComponent) == 0x000268, "Member 'Ak_SurfaceEffect_C_CheckForWater::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(Ak_SurfaceEffect_C_CheckForWater, CallFunc_BreakHitResult_HitBoneName) == 0x000270, "Member 'Ak_SurfaceEffect_C_CheckForWater::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(Ak_SurfaceEffect_C_CheckForWater, CallFunc_BreakHitResult_BoneName) == 0x000278, "Member 'Ak_SurfaceEffect_C_CheckForWater::CallFunc_BreakHitResult_BoneName' has a wrong offset!");
static_assert(offsetof(Ak_SurfaceEffect_C_CheckForWater, CallFunc_BreakHitResult_HitItem) == 0x000280, "Member 'Ak_SurfaceEffect_C_CheckForWater::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(Ak_SurfaceEffect_C_CheckForWater, CallFunc_BreakHitResult_ElementIndex) == 0x000284, "Member 'Ak_SurfaceEffect_C_CheckForWater::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(Ak_SurfaceEffect_C_CheckForWater, CallFunc_BreakHitResult_FaceIndex) == 0x000288, "Member 'Ak_SurfaceEffect_C_CheckForWater::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(Ak_SurfaceEffect_C_CheckForWater, CallFunc_BreakHitResult_TraceStart) == 0x000290, "Member 'Ak_SurfaceEffect_C_CheckForWater::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(Ak_SurfaceEffect_C_CheckForWater, CallFunc_BreakHitResult_TraceEnd) == 0x0002A8, "Member 'Ak_SurfaceEffect_C_CheckForWater::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(Ak_SurfaceEffect_C_CheckForWater, CallFunc_Less_IntInt_ReturnValue) == 0x0002C0, "Member 'Ak_SurfaceEffect_C_CheckForWater::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ak_SurfaceEffect_C_CheckForWater, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x0002C1, "Member 'Ak_SurfaceEffect_C_CheckForWater::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ak_SurfaceEffect_C_CheckForWater, CallFunc_EqualEqual_ObjectObject_ReturnValue_1) == 0x0002C2, "Member 'Ak_SurfaceEffect_C_CheckForWater::CallFunc_EqualEqual_ObjectObject_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ak_SurfaceEffect_C_CheckForWater, CallFunc_BooleanOR_ReturnValue) == 0x0002C3, "Member 'Ak_SurfaceEffect_C_CheckForWater::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ak_SurfaceEffect_C_CheckForWater, CallFunc_Subtract_DoubleDouble_A_ImplicitCast) == 0x0002C8, "Member 'Ak_SurfaceEffect_C_CheckForWater::CallFunc_Subtract_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ak_SurfaceEffect_C_CheckForWater, CallFunc_Subtract_DoubleDouble_B_ImplicitCast) == 0x0002D0, "Member 'Ak_SurfaceEffect_C_CheckForWater::CallFunc_Subtract_DoubleDouble_B_ImplicitCast' has a wrong offset!");

// Function Ak_SurfaceEffect.Ak_SurfaceEffect_C.GetMaxSpeed
// 0x0078 (0x0078 - 0x0000)
struct Ak_SurfaceEffect_C_GetMaxSpeed final
{
public:
	class UActorComponent*                        Target;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	class UMovementComponent*                     MovementComp;                                      // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	double                                        ReturnValue;                                       // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 NewLocalVar;                                       // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ACreatureCharacter*                     K2Node_DynamicCast_AsCreature_Character;           // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4A54[0x7];                                     // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UValeriaCharacterMoveComponent*         K2Node_DynamicCast_AsValeria_Character_Move_Component; // 0x0038(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4A55[0x3];                                     // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_CalculateMaxSpeed_ReturnValue;            // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetMaxSpeedAbs_ReturnValue;               // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4A56[0x3];                                     // 0x004D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetMaxSpeed_ReturnValue;                  // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4A57[0x4];                                     // 0x0054(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_FunctionResult_ReturnValue_ImplicitCast;    // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_FunctionResult_ReturnValue_ImplicitCast_1;  // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_A_ImplicitCast;     // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ak_SurfaceEffect_C_GetMaxSpeed) == 0x000008, "Wrong alignment on Ak_SurfaceEffect_C_GetMaxSpeed");
static_assert(sizeof(Ak_SurfaceEffect_C_GetMaxSpeed) == 0x000078, "Wrong size on Ak_SurfaceEffect_C_GetMaxSpeed");
static_assert(offsetof(Ak_SurfaceEffect_C_GetMaxSpeed, Target) == 0x000000, "Member 'Ak_SurfaceEffect_C_GetMaxSpeed::Target' has a wrong offset!");
static_assert(offsetof(Ak_SurfaceEffect_C_GetMaxSpeed, MovementComp) == 0x000008, "Member 'Ak_SurfaceEffect_C_GetMaxSpeed::MovementComp' has a wrong offset!");
static_assert(offsetof(Ak_SurfaceEffect_C_GetMaxSpeed, ReturnValue) == 0x000010, "Member 'Ak_SurfaceEffect_C_GetMaxSpeed::ReturnValue' has a wrong offset!");
static_assert(offsetof(Ak_SurfaceEffect_C_GetMaxSpeed, NewLocalVar) == 0x000018, "Member 'Ak_SurfaceEffect_C_GetMaxSpeed::NewLocalVar' has a wrong offset!");
static_assert(offsetof(Ak_SurfaceEffect_C_GetMaxSpeed, CallFunc_GetOwner_ReturnValue) == 0x000020, "Member 'Ak_SurfaceEffect_C_GetMaxSpeed::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ak_SurfaceEffect_C_GetMaxSpeed, K2Node_DynamicCast_AsCreature_Character) == 0x000028, "Member 'Ak_SurfaceEffect_C_GetMaxSpeed::K2Node_DynamicCast_AsCreature_Character' has a wrong offset!");
static_assert(offsetof(Ak_SurfaceEffect_C_GetMaxSpeed, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'Ak_SurfaceEffect_C_GetMaxSpeed::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Ak_SurfaceEffect_C_GetMaxSpeed, K2Node_DynamicCast_AsValeria_Character_Move_Component) == 0x000038, "Member 'Ak_SurfaceEffect_C_GetMaxSpeed::K2Node_DynamicCast_AsValeria_Character_Move_Component' has a wrong offset!");
static_assert(offsetof(Ak_SurfaceEffect_C_GetMaxSpeed, K2Node_DynamicCast_bSuccess_1) == 0x000040, "Member 'Ak_SurfaceEffect_C_GetMaxSpeed::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(Ak_SurfaceEffect_C_GetMaxSpeed, CallFunc_CalculateMaxSpeed_ReturnValue) == 0x000044, "Member 'Ak_SurfaceEffect_C_GetMaxSpeed::CallFunc_CalculateMaxSpeed_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ak_SurfaceEffect_C_GetMaxSpeed, CallFunc_GetMaxSpeedAbs_ReturnValue) == 0x000048, "Member 'Ak_SurfaceEffect_C_GetMaxSpeed::CallFunc_GetMaxSpeedAbs_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ak_SurfaceEffect_C_GetMaxSpeed, CallFunc_IsValid_ReturnValue) == 0x00004C, "Member 'Ak_SurfaceEffect_C_GetMaxSpeed::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ak_SurfaceEffect_C_GetMaxSpeed, CallFunc_GetMaxSpeed_ReturnValue) == 0x000050, "Member 'Ak_SurfaceEffect_C_GetMaxSpeed::CallFunc_GetMaxSpeed_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ak_SurfaceEffect_C_GetMaxSpeed, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000058, "Member 'Ak_SurfaceEffect_C_GetMaxSpeed::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ak_SurfaceEffect_C_GetMaxSpeed, K2Node_FunctionResult_ReturnValue_ImplicitCast) == 0x000060, "Member 'Ak_SurfaceEffect_C_GetMaxSpeed::K2Node_FunctionResult_ReturnValue_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ak_SurfaceEffect_C_GetMaxSpeed, K2Node_FunctionResult_ReturnValue_ImplicitCast_1) == 0x000068, "Member 'Ak_SurfaceEffect_C_GetMaxSpeed::K2Node_FunctionResult_ReturnValue_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(Ak_SurfaceEffect_C_GetMaxSpeed, CallFunc_Multiply_DoubleDouble_A_ImplicitCast) == 0x000070, "Member 'Ak_SurfaceEffect_C_GetMaxSpeed::CallFunc_Multiply_DoubleDouble_A_ImplicitCast' has a wrong offset!");

// Function Ak_SurfaceEffect.Ak_SurfaceEffect_C.GetPhysmatEffectData
// 0x0030 (0x0030 - 0x0000)
struct Ak_SurfaceEffect_C_GetPhysmatEffectData final
{
public:
	class AActor*                                 Actor;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPhysmatEffect_C*                       PhysmatEffect;                                     // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_NameName_ReturnValue;            // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4A58[0x7];                                     // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UComp_CreatureAudio_C*                  CallFunc_GetComponentByClass_ReturnValue;          // 0x0018(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UPhysmatEffect_C*                       CallFunc_FindInCreatureSurfaceMap_Value;           // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_FindInCreatureSurfaceMap_Found;           // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ak_SurfaceEffect_C_GetPhysmatEffectData) == 0x000008, "Wrong alignment on Ak_SurfaceEffect_C_GetPhysmatEffectData");
static_assert(sizeof(Ak_SurfaceEffect_C_GetPhysmatEffectData) == 0x000030, "Wrong size on Ak_SurfaceEffect_C_GetPhysmatEffectData");
static_assert(offsetof(Ak_SurfaceEffect_C_GetPhysmatEffectData, Actor) == 0x000000, "Member 'Ak_SurfaceEffect_C_GetPhysmatEffectData::Actor' has a wrong offset!");
static_assert(offsetof(Ak_SurfaceEffect_C_GetPhysmatEffectData, PhysmatEffect) == 0x000008, "Member 'Ak_SurfaceEffect_C_GetPhysmatEffectData::PhysmatEffect' has a wrong offset!");
static_assert(offsetof(Ak_SurfaceEffect_C_GetPhysmatEffectData, CallFunc_NotEqual_NameName_ReturnValue) == 0x000010, "Member 'Ak_SurfaceEffect_C_GetPhysmatEffectData::CallFunc_NotEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ak_SurfaceEffect_C_GetPhysmatEffectData, CallFunc_GetComponentByClass_ReturnValue) == 0x000018, "Member 'Ak_SurfaceEffect_C_GetPhysmatEffectData::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ak_SurfaceEffect_C_GetPhysmatEffectData, CallFunc_FindInCreatureSurfaceMap_Value) == 0x000020, "Member 'Ak_SurfaceEffect_C_GetPhysmatEffectData::CallFunc_FindInCreatureSurfaceMap_Value' has a wrong offset!");
static_assert(offsetof(Ak_SurfaceEffect_C_GetPhysmatEffectData, CallFunc_FindInCreatureSurfaceMap_Found) == 0x000028, "Member 'Ak_SurfaceEffect_C_GetPhysmatEffectData::CallFunc_FindInCreatureSurfaceMap_Found' has a wrong offset!");
static_assert(offsetof(Ak_SurfaceEffect_C_GetPhysmatEffectData, CallFunc_IsValid_ReturnValue) == 0x000029, "Member 'Ak_SurfaceEffect_C_GetPhysmatEffectData::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function Ak_SurfaceEffect.Ak_SurfaceEffect_C.GetTraceParams
// 0x0158 (0x0158 - 0x0000)
struct Ak_SurfaceEffect_C_GetTraceParams final
{
public:
	class USceneComponent*                        Mesh;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	double                                        TraceStartOffset;                                  // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        TraceEndOffset;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Start;                                             // 0x0018(0x0018)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                End;                                               // 0x0030(0x0018)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                AttachLocation;                                    // 0x0048(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0060(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_1;                 // 0x0078(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0090(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetActorForwardVector_ReturnValue;        // 0x0098(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x00B0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x00C8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_1;           // 0x00E0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_1;       // 0x00F8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_2;           // 0x0110(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_3;           // 0x0128(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetSocketLocation_ReturnValue;            // 0x0140(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ak_SurfaceEffect_C_GetTraceParams) == 0x000008, "Wrong alignment on Ak_SurfaceEffect_C_GetTraceParams");
static_assert(sizeof(Ak_SurfaceEffect_C_GetTraceParams) == 0x000158, "Wrong size on Ak_SurfaceEffect_C_GetTraceParams");
static_assert(offsetof(Ak_SurfaceEffect_C_GetTraceParams, Mesh) == 0x000000, "Member 'Ak_SurfaceEffect_C_GetTraceParams::Mesh' has a wrong offset!");
static_assert(offsetof(Ak_SurfaceEffect_C_GetTraceParams, TraceStartOffset) == 0x000008, "Member 'Ak_SurfaceEffect_C_GetTraceParams::TraceStartOffset' has a wrong offset!");
static_assert(offsetof(Ak_SurfaceEffect_C_GetTraceParams, TraceEndOffset) == 0x000010, "Member 'Ak_SurfaceEffect_C_GetTraceParams::TraceEndOffset' has a wrong offset!");
static_assert(offsetof(Ak_SurfaceEffect_C_GetTraceParams, Start) == 0x000018, "Member 'Ak_SurfaceEffect_C_GetTraceParams::Start' has a wrong offset!");
static_assert(offsetof(Ak_SurfaceEffect_C_GetTraceParams, End) == 0x000030, "Member 'Ak_SurfaceEffect_C_GetTraceParams::End' has a wrong offset!");
static_assert(offsetof(Ak_SurfaceEffect_C_GetTraceParams, AttachLocation) == 0x000048, "Member 'Ak_SurfaceEffect_C_GetTraceParams::AttachLocation' has a wrong offset!");
static_assert(offsetof(Ak_SurfaceEffect_C_GetTraceParams, CallFunc_MakeVector_ReturnValue) == 0x000060, "Member 'Ak_SurfaceEffect_C_GetTraceParams::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ak_SurfaceEffect_C_GetTraceParams, CallFunc_MakeVector_ReturnValue_1) == 0x000078, "Member 'Ak_SurfaceEffect_C_GetTraceParams::CallFunc_MakeVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ak_SurfaceEffect_C_GetTraceParams, CallFunc_GetOwner_ReturnValue) == 0x000090, "Member 'Ak_SurfaceEffect_C_GetTraceParams::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ak_SurfaceEffect_C_GetTraceParams, CallFunc_GetActorForwardVector_ReturnValue) == 0x000098, "Member 'Ak_SurfaceEffect_C_GetTraceParams::CallFunc_GetActorForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ak_SurfaceEffect_C_GetTraceParams, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x0000B0, "Member 'Ak_SurfaceEffect_C_GetTraceParams::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ak_SurfaceEffect_C_GetTraceParams, CallFunc_Add_VectorVector_ReturnValue) == 0x0000C8, "Member 'Ak_SurfaceEffect_C_GetTraceParams::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ak_SurfaceEffect_C_GetTraceParams, CallFunc_Add_VectorVector_ReturnValue_1) == 0x0000E0, "Member 'Ak_SurfaceEffect_C_GetTraceParams::CallFunc_Add_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ak_SurfaceEffect_C_GetTraceParams, CallFunc_Multiply_VectorFloat_ReturnValue_1) == 0x0000F8, "Member 'Ak_SurfaceEffect_C_GetTraceParams::CallFunc_Multiply_VectorFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ak_SurfaceEffect_C_GetTraceParams, CallFunc_Add_VectorVector_ReturnValue_2) == 0x000110, "Member 'Ak_SurfaceEffect_C_GetTraceParams::CallFunc_Add_VectorVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ak_SurfaceEffect_C_GetTraceParams, CallFunc_Add_VectorVector_ReturnValue_3) == 0x000128, "Member 'Ak_SurfaceEffect_C_GetTraceParams::CallFunc_Add_VectorVector_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ak_SurfaceEffect_C_GetTraceParams, CallFunc_GetSocketLocation_ReturnValue) == 0x000140, "Member 'Ak_SurfaceEffect_C_GetTraceParams::CallFunc_GetSocketLocation_ReturnValue' has a wrong offset!");

// Function Ak_SurfaceEffect.Ak_SurfaceEffect_C.PlayerTraceForMaterial
// 0x0510 (0x0510 - 0x0000)
struct Ak_SurfaceEffect_C_PlayerTraceForMaterial final
{
public:
	class USkeletalMeshComponent*                 Mesh;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      Material;                                          // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Loc;                                               // 0x0010(0x0018)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Location;                                          // 0x0028(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      PM;                                                // 0x0040(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetSocketLocation_ReturnValue;            // 0x0048(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0060(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetActorForwardVector_ReturnValue;        // 0x0068(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0080(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0098(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetSocketLocation_ReturnValue_1;          // 0x00B0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x00C8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue_1;                   // 0x00E0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_SelectVector_ReturnValue;                 // 0x00E8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         K2Node_MakeArray_Array;                            // 0x0100(0x0010)(ConstParm, ReferenceParm)
	struct FVector                                CallFunc_GetSocketLocation_ReturnValue_2;          // 0x0110(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_SphereTraceSingle_OutHit;                 // 0x0128(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_SphereTraceSingle_ReturnValue;            // 0x0210(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4A59[0x7];                                     // 0x0211(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetSocketLocation_ReturnValue_3;          // 0x0218(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x0230(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x0231(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4A5A[0x2];                                     // 0x0232(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x0234(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x0238(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4A5B[0x4];                                     // 0x023C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x0240(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x0258(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x0270(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x0288(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x02A0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x02A8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x02B0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x02B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_BoneName;                  // 0x02C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x02C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x02CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x02D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4A5C[0x4];                                     // 0x02D4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x02D8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x02F0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetTraceParams_Start;                     // 0x0308(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetTraceParams_End;                       // 0x0320(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue_2;                   // 0x0338(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         K2Node_MakeArray_Array_1;                          // 0x0340(0x0010)(ConstParm, ReferenceParm)
	struct FHitResult                             CallFunc_LineTraceSingle_OutHit;                   // 0x0350(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_LineTraceSingle_ReturnValue;              // 0x0438(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bBlockingHit_1;            // 0x0439(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap_1;         // 0x043A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4A5D[0x1];                                     // 0x043B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time_1;                    // 0x043C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance_1;                // 0x0440(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4A5E[0x4];                                     // 0x0444(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_Location_1;                // 0x0448(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint_1;             // 0x0460(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal_1;                  // 0x0478(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal_1;            // 0x0490(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat_1;                 // 0x04A8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor_1;                // 0x04B0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent_1;            // 0x04B8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName_1;             // 0x04C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_BoneName_1;                // 0x04C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem_1;                 // 0x04D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex_1;            // 0x04D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex_1;               // 0x04D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4A5F[0x4];                                     // 0x04DC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_TraceStart_1;              // 0x04E0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd_1;                // 0x04F8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ak_SurfaceEffect_C_PlayerTraceForMaterial) == 0x000008, "Wrong alignment on Ak_SurfaceEffect_C_PlayerTraceForMaterial");
static_assert(sizeof(Ak_SurfaceEffect_C_PlayerTraceForMaterial) == 0x000510, "Wrong size on Ak_SurfaceEffect_C_PlayerTraceForMaterial");
static_assert(offsetof(Ak_SurfaceEffect_C_PlayerTraceForMaterial, Mesh) == 0x000000, "Member 'Ak_SurfaceEffect_C_PlayerTraceForMaterial::Mesh' has a wrong offset!");
static_assert(offsetof(Ak_SurfaceEffect_C_PlayerTraceForMaterial, Material) == 0x000008, "Member 'Ak_SurfaceEffect_C_PlayerTraceForMaterial::Material' has a wrong offset!");
static_assert(offsetof(Ak_SurfaceEffect_C_PlayerTraceForMaterial, Loc) == 0x000010, "Member 'Ak_SurfaceEffect_C_PlayerTraceForMaterial::Loc' has a wrong offset!");
static_assert(offsetof(Ak_SurfaceEffect_C_PlayerTraceForMaterial, Location) == 0x000028, "Member 'Ak_SurfaceEffect_C_PlayerTraceForMaterial::Location' has a wrong offset!");
static_assert(offsetof(Ak_SurfaceEffect_C_PlayerTraceForMaterial, PM) == 0x000040, "Member 'Ak_SurfaceEffect_C_PlayerTraceForMaterial::PM' has a wrong offset!");
static_assert(offsetof(Ak_SurfaceEffect_C_PlayerTraceForMaterial, CallFunc_GetSocketLocation_ReturnValue) == 0x000048, "Member 'Ak_SurfaceEffect_C_PlayerTraceForMaterial::CallFunc_GetSocketLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ak_SurfaceEffect_C_PlayerTraceForMaterial, CallFunc_GetOwner_ReturnValue) == 0x000060, "Member 'Ak_SurfaceEffect_C_PlayerTraceForMaterial::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ak_SurfaceEffect_C_PlayerTraceForMaterial, CallFunc_GetActorForwardVector_ReturnValue) == 0x000068, "Member 'Ak_SurfaceEffect_C_PlayerTraceForMaterial::CallFunc_GetActorForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ak_SurfaceEffect_C_PlayerTraceForMaterial, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000080, "Member 'Ak_SurfaceEffect_C_PlayerTraceForMaterial::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ak_SurfaceEffect_C_PlayerTraceForMaterial, CallFunc_Add_VectorVector_ReturnValue) == 0x000098, "Member 'Ak_SurfaceEffect_C_PlayerTraceForMaterial::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ak_SurfaceEffect_C_PlayerTraceForMaterial, CallFunc_GetSocketLocation_ReturnValue_1) == 0x0000B0, "Member 'Ak_SurfaceEffect_C_PlayerTraceForMaterial::CallFunc_GetSocketLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ak_SurfaceEffect_C_PlayerTraceForMaterial, CallFunc_Subtract_VectorVector_ReturnValue) == 0x0000C8, "Member 'Ak_SurfaceEffect_C_PlayerTraceForMaterial::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ak_SurfaceEffect_C_PlayerTraceForMaterial, CallFunc_GetOwner_ReturnValue_1) == 0x0000E0, "Member 'Ak_SurfaceEffect_C_PlayerTraceForMaterial::CallFunc_GetOwner_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ak_SurfaceEffect_C_PlayerTraceForMaterial, CallFunc_SelectVector_ReturnValue) == 0x0000E8, "Member 'Ak_SurfaceEffect_C_PlayerTraceForMaterial::CallFunc_SelectVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ak_SurfaceEffect_C_PlayerTraceForMaterial, K2Node_MakeArray_Array) == 0x000100, "Member 'Ak_SurfaceEffect_C_PlayerTraceForMaterial::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(Ak_SurfaceEffect_C_PlayerTraceForMaterial, CallFunc_GetSocketLocation_ReturnValue_2) == 0x000110, "Member 'Ak_SurfaceEffect_C_PlayerTraceForMaterial::CallFunc_GetSocketLocation_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ak_SurfaceEffect_C_PlayerTraceForMaterial, CallFunc_SphereTraceSingle_OutHit) == 0x000128, "Member 'Ak_SurfaceEffect_C_PlayerTraceForMaterial::CallFunc_SphereTraceSingle_OutHit' has a wrong offset!");
static_assert(offsetof(Ak_SurfaceEffect_C_PlayerTraceForMaterial, CallFunc_SphereTraceSingle_ReturnValue) == 0x000210, "Member 'Ak_SurfaceEffect_C_PlayerTraceForMaterial::CallFunc_SphereTraceSingle_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ak_SurfaceEffect_C_PlayerTraceForMaterial, CallFunc_GetSocketLocation_ReturnValue_3) == 0x000218, "Member 'Ak_SurfaceEffect_C_PlayerTraceForMaterial::CallFunc_GetSocketLocation_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ak_SurfaceEffect_C_PlayerTraceForMaterial, CallFunc_BreakHitResult_bBlockingHit) == 0x000230, "Member 'Ak_SurfaceEffect_C_PlayerTraceForMaterial::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(Ak_SurfaceEffect_C_PlayerTraceForMaterial, CallFunc_BreakHitResult_bInitialOverlap) == 0x000231, "Member 'Ak_SurfaceEffect_C_PlayerTraceForMaterial::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(Ak_SurfaceEffect_C_PlayerTraceForMaterial, CallFunc_BreakHitResult_Time) == 0x000234, "Member 'Ak_SurfaceEffect_C_PlayerTraceForMaterial::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(Ak_SurfaceEffect_C_PlayerTraceForMaterial, CallFunc_BreakHitResult_Distance) == 0x000238, "Member 'Ak_SurfaceEffect_C_PlayerTraceForMaterial::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(Ak_SurfaceEffect_C_PlayerTraceForMaterial, CallFunc_BreakHitResult_Location) == 0x000240, "Member 'Ak_SurfaceEffect_C_PlayerTraceForMaterial::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(Ak_SurfaceEffect_C_PlayerTraceForMaterial, CallFunc_BreakHitResult_ImpactPoint) == 0x000258, "Member 'Ak_SurfaceEffect_C_PlayerTraceForMaterial::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(Ak_SurfaceEffect_C_PlayerTraceForMaterial, CallFunc_BreakHitResult_Normal) == 0x000270, "Member 'Ak_SurfaceEffect_C_PlayerTraceForMaterial::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(Ak_SurfaceEffect_C_PlayerTraceForMaterial, CallFunc_BreakHitResult_ImpactNormal) == 0x000288, "Member 'Ak_SurfaceEffect_C_PlayerTraceForMaterial::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(Ak_SurfaceEffect_C_PlayerTraceForMaterial, CallFunc_BreakHitResult_PhysMat) == 0x0002A0, "Member 'Ak_SurfaceEffect_C_PlayerTraceForMaterial::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(Ak_SurfaceEffect_C_PlayerTraceForMaterial, CallFunc_BreakHitResult_HitActor) == 0x0002A8, "Member 'Ak_SurfaceEffect_C_PlayerTraceForMaterial::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(Ak_SurfaceEffect_C_PlayerTraceForMaterial, CallFunc_BreakHitResult_HitComponent) == 0x0002B0, "Member 'Ak_SurfaceEffect_C_PlayerTraceForMaterial::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(Ak_SurfaceEffect_C_PlayerTraceForMaterial, CallFunc_BreakHitResult_HitBoneName) == 0x0002B8, "Member 'Ak_SurfaceEffect_C_PlayerTraceForMaterial::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(Ak_SurfaceEffect_C_PlayerTraceForMaterial, CallFunc_BreakHitResult_BoneName) == 0x0002C0, "Member 'Ak_SurfaceEffect_C_PlayerTraceForMaterial::CallFunc_BreakHitResult_BoneName' has a wrong offset!");
static_assert(offsetof(Ak_SurfaceEffect_C_PlayerTraceForMaterial, CallFunc_BreakHitResult_HitItem) == 0x0002C8, "Member 'Ak_SurfaceEffect_C_PlayerTraceForMaterial::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(Ak_SurfaceEffect_C_PlayerTraceForMaterial, CallFunc_BreakHitResult_ElementIndex) == 0x0002CC, "Member 'Ak_SurfaceEffect_C_PlayerTraceForMaterial::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(Ak_SurfaceEffect_C_PlayerTraceForMaterial, CallFunc_BreakHitResult_FaceIndex) == 0x0002D0, "Member 'Ak_SurfaceEffect_C_PlayerTraceForMaterial::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(Ak_SurfaceEffect_C_PlayerTraceForMaterial, CallFunc_BreakHitResult_TraceStart) == 0x0002D8, "Member 'Ak_SurfaceEffect_C_PlayerTraceForMaterial::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(Ak_SurfaceEffect_C_PlayerTraceForMaterial, CallFunc_BreakHitResult_TraceEnd) == 0x0002F0, "Member 'Ak_SurfaceEffect_C_PlayerTraceForMaterial::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(Ak_SurfaceEffect_C_PlayerTraceForMaterial, CallFunc_GetTraceParams_Start) == 0x000308, "Member 'Ak_SurfaceEffect_C_PlayerTraceForMaterial::CallFunc_GetTraceParams_Start' has a wrong offset!");
static_assert(offsetof(Ak_SurfaceEffect_C_PlayerTraceForMaterial, CallFunc_GetTraceParams_End) == 0x000320, "Member 'Ak_SurfaceEffect_C_PlayerTraceForMaterial::CallFunc_GetTraceParams_End' has a wrong offset!");
static_assert(offsetof(Ak_SurfaceEffect_C_PlayerTraceForMaterial, CallFunc_GetOwner_ReturnValue_2) == 0x000338, "Member 'Ak_SurfaceEffect_C_PlayerTraceForMaterial::CallFunc_GetOwner_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ak_SurfaceEffect_C_PlayerTraceForMaterial, K2Node_MakeArray_Array_1) == 0x000340, "Member 'Ak_SurfaceEffect_C_PlayerTraceForMaterial::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(Ak_SurfaceEffect_C_PlayerTraceForMaterial, CallFunc_LineTraceSingle_OutHit) == 0x000350, "Member 'Ak_SurfaceEffect_C_PlayerTraceForMaterial::CallFunc_LineTraceSingle_OutHit' has a wrong offset!");
static_assert(offsetof(Ak_SurfaceEffect_C_PlayerTraceForMaterial, CallFunc_LineTraceSingle_ReturnValue) == 0x000438, "Member 'Ak_SurfaceEffect_C_PlayerTraceForMaterial::CallFunc_LineTraceSingle_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ak_SurfaceEffect_C_PlayerTraceForMaterial, CallFunc_BreakHitResult_bBlockingHit_1) == 0x000439, "Member 'Ak_SurfaceEffect_C_PlayerTraceForMaterial::CallFunc_BreakHitResult_bBlockingHit_1' has a wrong offset!");
static_assert(offsetof(Ak_SurfaceEffect_C_PlayerTraceForMaterial, CallFunc_BreakHitResult_bInitialOverlap_1) == 0x00043A, "Member 'Ak_SurfaceEffect_C_PlayerTraceForMaterial::CallFunc_BreakHitResult_bInitialOverlap_1' has a wrong offset!");
static_assert(offsetof(Ak_SurfaceEffect_C_PlayerTraceForMaterial, CallFunc_BreakHitResult_Time_1) == 0x00043C, "Member 'Ak_SurfaceEffect_C_PlayerTraceForMaterial::CallFunc_BreakHitResult_Time_1' has a wrong offset!");
static_assert(offsetof(Ak_SurfaceEffect_C_PlayerTraceForMaterial, CallFunc_BreakHitResult_Distance_1) == 0x000440, "Member 'Ak_SurfaceEffect_C_PlayerTraceForMaterial::CallFunc_BreakHitResult_Distance_1' has a wrong offset!");
static_assert(offsetof(Ak_SurfaceEffect_C_PlayerTraceForMaterial, CallFunc_BreakHitResult_Location_1) == 0x000448, "Member 'Ak_SurfaceEffect_C_PlayerTraceForMaterial::CallFunc_BreakHitResult_Location_1' has a wrong offset!");
static_assert(offsetof(Ak_SurfaceEffect_C_PlayerTraceForMaterial, CallFunc_BreakHitResult_ImpactPoint_1) == 0x000460, "Member 'Ak_SurfaceEffect_C_PlayerTraceForMaterial::CallFunc_BreakHitResult_ImpactPoint_1' has a wrong offset!");
static_assert(offsetof(Ak_SurfaceEffect_C_PlayerTraceForMaterial, CallFunc_BreakHitResult_Normal_1) == 0x000478, "Member 'Ak_SurfaceEffect_C_PlayerTraceForMaterial::CallFunc_BreakHitResult_Normal_1' has a wrong offset!");
static_assert(offsetof(Ak_SurfaceEffect_C_PlayerTraceForMaterial, CallFunc_BreakHitResult_ImpactNormal_1) == 0x000490, "Member 'Ak_SurfaceEffect_C_PlayerTraceForMaterial::CallFunc_BreakHitResult_ImpactNormal_1' has a wrong offset!");
static_assert(offsetof(Ak_SurfaceEffect_C_PlayerTraceForMaterial, CallFunc_BreakHitResult_PhysMat_1) == 0x0004A8, "Member 'Ak_SurfaceEffect_C_PlayerTraceForMaterial::CallFunc_BreakHitResult_PhysMat_1' has a wrong offset!");
static_assert(offsetof(Ak_SurfaceEffect_C_PlayerTraceForMaterial, CallFunc_BreakHitResult_HitActor_1) == 0x0004B0, "Member 'Ak_SurfaceEffect_C_PlayerTraceForMaterial::CallFunc_BreakHitResult_HitActor_1' has a wrong offset!");
static_assert(offsetof(Ak_SurfaceEffect_C_PlayerTraceForMaterial, CallFunc_BreakHitResult_HitComponent_1) == 0x0004B8, "Member 'Ak_SurfaceEffect_C_PlayerTraceForMaterial::CallFunc_BreakHitResult_HitComponent_1' has a wrong offset!");
static_assert(offsetof(Ak_SurfaceEffect_C_PlayerTraceForMaterial, CallFunc_BreakHitResult_HitBoneName_1) == 0x0004C0, "Member 'Ak_SurfaceEffect_C_PlayerTraceForMaterial::CallFunc_BreakHitResult_HitBoneName_1' has a wrong offset!");
static_assert(offsetof(Ak_SurfaceEffect_C_PlayerTraceForMaterial, CallFunc_BreakHitResult_BoneName_1) == 0x0004C8, "Member 'Ak_SurfaceEffect_C_PlayerTraceForMaterial::CallFunc_BreakHitResult_BoneName_1' has a wrong offset!");
static_assert(offsetof(Ak_SurfaceEffect_C_PlayerTraceForMaterial, CallFunc_BreakHitResult_HitItem_1) == 0x0004D0, "Member 'Ak_SurfaceEffect_C_PlayerTraceForMaterial::CallFunc_BreakHitResult_HitItem_1' has a wrong offset!");
static_assert(offsetof(Ak_SurfaceEffect_C_PlayerTraceForMaterial, CallFunc_BreakHitResult_ElementIndex_1) == 0x0004D4, "Member 'Ak_SurfaceEffect_C_PlayerTraceForMaterial::CallFunc_BreakHitResult_ElementIndex_1' has a wrong offset!");
static_assert(offsetof(Ak_SurfaceEffect_C_PlayerTraceForMaterial, CallFunc_BreakHitResult_FaceIndex_1) == 0x0004D8, "Member 'Ak_SurfaceEffect_C_PlayerTraceForMaterial::CallFunc_BreakHitResult_FaceIndex_1' has a wrong offset!");
static_assert(offsetof(Ak_SurfaceEffect_C_PlayerTraceForMaterial, CallFunc_BreakHitResult_TraceStart_1) == 0x0004E0, "Member 'Ak_SurfaceEffect_C_PlayerTraceForMaterial::CallFunc_BreakHitResult_TraceStart_1' has a wrong offset!");
static_assert(offsetof(Ak_SurfaceEffect_C_PlayerTraceForMaterial, CallFunc_BreakHitResult_TraceEnd_1) == 0x0004F8, "Member 'Ak_SurfaceEffect_C_PlayerTraceForMaterial::CallFunc_BreakHitResult_TraceEnd_1' has a wrong offset!");

// Function Ak_SurfaceEffect.Ak_SurfaceEffect_C.Received_Notify
// 0x05E8 (0x05E8 - 0x0000)
struct Ak_SurfaceEffect_C_Received_Notify final
{
public:
	class USkeletalMeshComponent*                 MeshComp;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UAnimSequenceBase*                      Animation;                                         // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FAnimNotifyEventReference              EventReference;                                    // 0x0010(0x0030)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	bool                                          ReturnValue;                                       // 0x0040(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4A60[0x7];                                     // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               VFXRotator;                                        // 0x0048(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	class UVAL_CharacterCustomizationComponent*   ValeriaCharacterCustomizationComponent;            // 0x0060(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 MeshOwner;                                         // 0x0068(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)
	class UMovementComponent*                     MovementComp;                                      // 0x0070(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          IsLocallyControlled;                               // 0x0078(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4A61[0x7];                                     // 0x0079(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        EffectQualityDistanceModifier;                     // 0x0080(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        DistanceToAudioListener;                           // 0x0088(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UNiagaraSystem*                         NiagaraSystem;                                     // 0x0090(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        MinSpeed;                                          // 0x0098(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UComp_Actor_Audio_Data_C*               CompActorAudio;                                    // 0x00A0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FVector                                SoundOffset;                                       // 0x00A8(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Speed;                                             // 0x00C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        MaxSpeed;                                          // 0x00C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstance*                      DecalMatRight;                                     // 0x00D0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstance*                      DecalMatLeft;                                      // 0x00D8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FName                                   RowNamePhysmat;                                    // 0x00E0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UDecalComponent*                        DecalComp;                                         // 0x00E8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	double                                        DecalFadeOutDuration;                              // 0x00F0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        DecalFadeOutStartDelay;                            // 0x00F8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        DecalFadeInDuration;                               // 0x0100(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        DecalFadeInStartDelay;                             // 0x0108(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                DecalOffset;                                       // 0x0110(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        DecalRandomRotationMax;                            // 0x0128(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        DecalRandomSizeMax;                                // 0x0130(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        DecalSize;                                         // 0x0138(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstance*                      DecalMat;                                          // 0x0140(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAkComponent*                           SpawnedAkComponent;                                // 0x0148(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UAkAudioEvent*                          Sound;                                             // 0x0150(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UValeriaCharacterMoveComponent*         CharacterMovementComponent;                        // 0x0158(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FVector                                SocketLocation;                                    // 0x0160(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      PM;                                                // 0x0178(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 Mesh;                                              // 0x0180(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0188(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetRightVector_ReturnValue;               // 0x01A0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_Conv_VectorToRotator_ReturnValue;         // 0x01B8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_ComposeRotators_ReturnValue;              // 0x01D0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x01E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_TryPlayCharacterCustomizationFootstepEffect_ShouldPlayDefaultNiagaraEffect; // 0x01E9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4A62[0x6];                                     // 0x01EA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UPhysicalMaterial*                      CallFunc_RemoteTraceForMaterial_Material;          // 0x01F0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_RemoteTraceForMaterial_Loc;               // 0x01F8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UComp_Actor_Audio_Data_C*               CallFunc_GetComponentByClass_ReturnValue;          // 0x0210(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UMovementComponent*                     CallFunc_GetComponentByClass_ReturnValue_1;        // 0x0218(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        CallFunc_K2_GetRootComponent_ReturnValue;          // 0x0220(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetForwardVector_ReturnValue;             // 0x0228(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetUpVector_ReturnValue;                  // 0x0240(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotFromXZ_ReturnValue;                // 0x0258(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class APawn*                                  K2Node_DynamicCast_AsPawn;                         // 0x0270(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0278(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4A63[0x3];                                     // 0x0279(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakRotator_Roll;                        // 0x027C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x0280(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x0284(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsLocallyControlled_ReturnValue;          // 0x0288(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4A64[0x7];                                     // 0x0289(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0290(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0298(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x02A0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPhysmatEffect_C*                       CallFunc_GetPhysmatEffectData_PhysmatEffect;       // 0x02A8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FStruct_Physmat                        CallFunc_GetSurfaceEffect_Value;                   // 0x02B0(0x0020)(ZeroConstructor, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_GetSurfaceEffect_ReturnValue;             // 0x02D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	Enum_core_Scalability                         CallFunc_GlobalScalabilitySetting_ScalabilitySetting; // 0x02D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x02D2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Try_to_Propagate_Rtpcs_Success;           // 0x02D3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4A65[0x4];                                     // 0x02D4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_BreakVector_X;                            // 0x02D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x02E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x02E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x02F0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_VSize_ReturnValue;                        // 0x0308(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0310(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsWithinAttenuation_Within;               // 0x0328(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4A66[0x7];                                     // 0x0329(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FAkExternalSourceInfo>          Temp_struct_Variable;                              // 0x0330(0x0010)(ConstParm, ReferenceParm)
	bool                                          CallFunc_GetAkComponent_ComponentCreated;          // 0x0340(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4A67[0x7];                                     // 0x0341(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAkComponent*                           CallFunc_GetAkComponent_ReturnValue;               // 0x0348(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue;            // 0x0350(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue_1;          // 0x0351(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4A68[0x6];                                     // 0x0352(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetValeriaAudioListenerPosition_OutLocation; // 0x0358(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetValeriaAudioListenerPosition_OutFrontDir; // 0x0370(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetValeriaAudioListenerPosition_OutRightDir; // 0x0388(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetDisplayName_ReturnValue;               // 0x03A0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x03B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4A69[0x3];                                     // 0x03B1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue;               // 0x03B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetSocketLocation_ReturnValue;            // 0x03B8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_1;           // 0x03D0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UNiagaraComponent*                      CallFunc_SpawnSystemAtLocation_ReturnValue;        // 0x03E8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x03F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4A6A[0x3];                                     // 0x03F1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue_1;             // 0x03F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x03F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4A6B[0x7];                                     // 0x03F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPhysicalMaterial*                      CallFunc_PlayerTraceForMaterial_Material;          // 0x0400(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_PlayerTraceForMaterial_Loc;               // 0x0408(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0420(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4A6C[0x7];                                     // 0x0421(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_GetMaxSpeed_ReturnValue;                  // 0x0428(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue;              // 0x0430(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue_1;    // 0x0438(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0450(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_PostEventAtLocation_ReturnValue;          // 0x0458(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x045C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4A6D[0x3];                                     // 0x045D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_RandomFloatInRange_ReturnValue;           // 0x0460(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_1;           // 0x0468(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue_2;    // 0x0470(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x0488(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	double                                        CallFunc_Vector_Distance_ReturnValue;              // 0x04A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_4;                    // 0x04A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4A6E[0x7];                                     // 0x04A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetDisplayName_ReturnValue_1;             // 0x04B0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x04C0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_5;                    // 0x04D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4A6F[0x7];                                     // 0x04D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x04D8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_2;              // 0x04E8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_3;              // 0x04F8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	double                                        CallFunc_RandomFloatInRange_ReturnValue_1;         // 0x0508(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_2;           // 0x0510(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(EAkCallbackType CallbackType, class UAkCallbackInfo* CallbackInfo)> Temp_delegate_Variable;                            // 0x0518(0x0010)(ConstParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_PostAkEvent_ReturnValue;                  // 0x0528(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_6;                    // 0x052C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4A70[0x3];                                     // 0x052D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_NameToString_ReturnValue;            // 0x0530(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Contains_ReturnValue;                     // 0x0540(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4A71[0x7];                                     // 0x0541(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_NameToString_ReturnValue_1;          // 0x0548(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Contains_ReturnValue_1;                   // 0x0558(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0559(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4A72[0x6];                                     // 0x055A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0560(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_1;                 // 0x0568(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_7;                    // 0x0580(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4A73[0x7];                                     // 0x0581(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_2;           // 0x0588(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UDecalComponent*                        CallFunc_SpawnDecalAtLocation_ReturnValue;         // 0x05A0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UNiagaraComponent*                      CallFunc_SpawnSystemAttached_ReturnValue;          // 0x05A8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_8;                    // 0x05B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4A74[0x7];                                     // 0x05B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Subtract_DoubleDouble_A_ImplicitCast;     // 0x05B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_A_ImplicitCast;          // 0x05C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeRotator_Pitch_ImplicitCast;           // 0x05C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeRotator_Yaw_ImplicitCast;             // 0x05CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetRTPCValue_Value_ImplicitCast;          // 0x05D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetFadeOut_Duration_ImplicitCast;         // 0x05D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetFadeOut_StartDelay_ImplicitCast;       // 0x05D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetFadeIn_Duration_ImplicitCast;          // 0x05DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetFadeIn_StartDelay_ImplicitCast;        // 0x05E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ak_SurfaceEffect_C_Received_Notify) == 0x000008, "Wrong alignment on Ak_SurfaceEffect_C_Received_Notify");
static_assert(sizeof(Ak_SurfaceEffect_C_Received_Notify) == 0x0005E8, "Wrong size on Ak_SurfaceEffect_C_Received_Notify");
static_assert(offsetof(Ak_SurfaceEffect_C_Received_Notify, MeshComp) == 0x000000, "Member 'Ak_SurfaceEffect_C_Received_Notify::MeshComp' has a wrong offset!");
static_assert(offsetof(Ak_SurfaceEffect_C_Received_Notify, Animation) == 0x000008, "Member 'Ak_SurfaceEffect_C_Received_Notify::Animation' has a wrong offset!");
static_assert(offsetof(Ak_SurfaceEffect_C_Received_Notify, EventReference) == 0x000010, "Member 'Ak_SurfaceEffect_C_Received_Notify::EventReference' has a wrong offset!");
static_assert(offsetof(Ak_SurfaceEffect_C_Received_Notify, ReturnValue) == 0x000040, "Member 'Ak_SurfaceEffect_C_Received_Notify::ReturnValue' has a wrong offset!");
static_assert(offsetof(Ak_SurfaceEffect_C_Received_Notify, VFXRotator) == 0x000048, "Member 'Ak_SurfaceEffect_C_Received_Notify::VFXRotator' has a wrong offset!");
static_assert(offsetof(Ak_SurfaceEffect_C_Received_Notify, ValeriaCharacterCustomizationComponent) == 0x000060, "Member 'Ak_SurfaceEffect_C_Received_Notify::ValeriaCharacterCustomizationComponent' has a wrong offset!");
static_assert(offsetof(Ak_SurfaceEffect_C_Received_Notify, MeshOwner) == 0x000068, "Member 'Ak_SurfaceEffect_C_Received_Notify::MeshOwner' has a wrong offset!");
static_assert(offsetof(Ak_SurfaceEffect_C_Received_Notify, MovementComp) == 0x000070, "Member 'Ak_SurfaceEffect_C_Received_Notify::MovementComp' has a wrong offset!");
static_assert(offsetof(Ak_SurfaceEffect_C_Received_Notify, IsLocallyControlled) == 0x000078, "Member 'Ak_SurfaceEffect_C_Received_Notify::IsLocallyControlled' has a wrong offset!");
static_assert(offsetof(Ak_SurfaceEffect_C_Received_Notify, EffectQualityDistanceModifier) == 0x000080, "Member 'Ak_SurfaceEffect_C_Received_Notify::EffectQualityDistanceModifier' has a wrong offset!");
static_assert(offsetof(Ak_SurfaceEffect_C_Received_Notify, DistanceToAudioListener) == 0x000088, "Member 'Ak_SurfaceEffect_C_Received_Notify::DistanceToAudioListener' has a wrong offset!");
static_assert(offsetof(Ak_SurfaceEffect_C_Received_Notify, NiagaraSystem) == 0x000090, "Member 'Ak_SurfaceEffect_C_Received_Notify::NiagaraSystem' has a wrong offset!");
static_assert(offsetof(Ak_SurfaceEffect_C_Received_Notify, MinSpeed) == 0x000098, "Member 'Ak_SurfaceEffect_C_Received_Notify::MinSpeed' has a wrong offset!");
static_assert(offsetof(Ak_SurfaceEffect_C_Received_Notify, CompActorAudio) == 0x0000A0, "Member 'Ak_SurfaceEffect_C_Received_Notify::CompActorAudio' has a wrong offset!");
static_assert(offsetof(Ak_SurfaceEffect_C_Received_Notify, SoundOffset) == 0x0000A8, "Member 'Ak_SurfaceEffect_C_Received_Notify::SoundOffset' has a wrong offset!");
static_assert(offsetof(Ak_SurfaceEffect_C_Received_Notify, Speed) == 0x0000C0, "Member 'Ak_SurfaceEffect_C_Received_Notify::Speed' has a wrong offset!");
static_assert(offsetof(Ak_SurfaceEffect_C_Received_Notify, MaxSpeed) == 0x0000C8, "Member 'Ak_SurfaceEffect_C_Received_Notify::MaxSpeed' has a wrong offset!");
static_assert(offsetof(Ak_SurfaceEffect_C_Received_Notify, DecalMatRight) == 0x0000D0, "Member 'Ak_SurfaceEffect_C_Received_Notify::DecalMatRight' has a wrong offset!");
static_assert(offsetof(Ak_SurfaceEffect_C_Received_Notify, DecalMatLeft) == 0x0000D8, "Member 'Ak_SurfaceEffect_C_Received_Notify::DecalMatLeft' has a wrong offset!");
static_assert(offsetof(Ak_SurfaceEffect_C_Received_Notify, RowNamePhysmat) == 0x0000E0, "Member 'Ak_SurfaceEffect_C_Received_Notify::RowNamePhysmat' has a wrong offset!");
static_assert(offsetof(Ak_SurfaceEffect_C_Received_Notify, DecalComp) == 0x0000E8, "Member 'Ak_SurfaceEffect_C_Received_Notify::DecalComp' has a wrong offset!");
static_assert(offsetof(Ak_SurfaceEffect_C_Received_Notify, DecalFadeOutDuration) == 0x0000F0, "Member 'Ak_SurfaceEffect_C_Received_Notify::DecalFadeOutDuration' has a wrong offset!");
static_assert(offsetof(Ak_SurfaceEffect_C_Received_Notify, DecalFadeOutStartDelay) == 0x0000F8, "Member 'Ak_SurfaceEffect_C_Received_Notify::DecalFadeOutStartDelay' has a wrong offset!");
static_assert(offsetof(Ak_SurfaceEffect_C_Received_Notify, DecalFadeInDuration) == 0x000100, "Member 'Ak_SurfaceEffect_C_Received_Notify::DecalFadeInDuration' has a wrong offset!");
static_assert(offsetof(Ak_SurfaceEffect_C_Received_Notify, DecalFadeInStartDelay) == 0x000108, "Member 'Ak_SurfaceEffect_C_Received_Notify::DecalFadeInStartDelay' has a wrong offset!");
static_assert(offsetof(Ak_SurfaceEffect_C_Received_Notify, DecalOffset) == 0x000110, "Member 'Ak_SurfaceEffect_C_Received_Notify::DecalOffset' has a wrong offset!");
static_assert(offsetof(Ak_SurfaceEffect_C_Received_Notify, DecalRandomRotationMax) == 0x000128, "Member 'Ak_SurfaceEffect_C_Received_Notify::DecalRandomRotationMax' has a wrong offset!");
static_assert(offsetof(Ak_SurfaceEffect_C_Received_Notify, DecalRandomSizeMax) == 0x000130, "Member 'Ak_SurfaceEffect_C_Received_Notify::DecalRandomSizeMax' has a wrong offset!");
static_assert(offsetof(Ak_SurfaceEffect_C_Received_Notify, DecalSize) == 0x000138, "Member 'Ak_SurfaceEffect_C_Received_Notify::DecalSize' has a wrong offset!");
static_assert(offsetof(Ak_SurfaceEffect_C_Received_Notify, DecalMat) == 0x000140, "Member 'Ak_SurfaceEffect_C_Received_Notify::DecalMat' has a wrong offset!");
static_assert(offsetof(Ak_SurfaceEffect_C_Received_Notify, SpawnedAkComponent) == 0x000148, "Member 'Ak_SurfaceEffect_C_Received_Notify::SpawnedAkComponent' has a wrong offset!");
static_assert(offsetof(Ak_SurfaceEffect_C_Received_Notify, Sound) == 0x000150, "Member 'Ak_SurfaceEffect_C_Received_Notify::Sound' has a wrong offset!");
static_assert(offsetof(Ak_SurfaceEffect_C_Received_Notify, CharacterMovementComponent) == 0x000158, "Member 'Ak_SurfaceEffect_C_Received_Notify::CharacterMovementComponent' has a wrong offset!");
static_assert(offsetof(Ak_SurfaceEffect_C_Received_Notify, SocketLocation) == 0x000160, "Member 'Ak_SurfaceEffect_C_Received_Notify::SocketLocation' has a wrong offset!");
static_assert(offsetof(Ak_SurfaceEffect_C_Received_Notify, PM) == 0x000178, "Member 'Ak_SurfaceEffect_C_Received_Notify::PM' has a wrong offset!");
static_assert(offsetof(Ak_SurfaceEffect_C_Received_Notify, Mesh) == 0x000180, "Member 'Ak_SurfaceEffect_C_Received_Notify::Mesh' has a wrong offset!");
static_assert(offsetof(Ak_SurfaceEffect_C_Received_Notify, CallFunc_Add_VectorVector_ReturnValue) == 0x000188, "Member 'Ak_SurfaceEffect_C_Received_Notify::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ak_SurfaceEffect_C_Received_Notify, CallFunc_GetRightVector_ReturnValue) == 0x0001A0, "Member 'Ak_SurfaceEffect_C_Received_Notify::CallFunc_GetRightVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ak_SurfaceEffect_C_Received_Notify, CallFunc_Conv_VectorToRotator_ReturnValue) == 0x0001B8, "Member 'Ak_SurfaceEffect_C_Received_Notify::CallFunc_Conv_VectorToRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ak_SurfaceEffect_C_Received_Notify, CallFunc_ComposeRotators_ReturnValue) == 0x0001D0, "Member 'Ak_SurfaceEffect_C_Received_Notify::CallFunc_ComposeRotators_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ak_SurfaceEffect_C_Received_Notify, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x0001E8, "Member 'Ak_SurfaceEffect_C_Received_Notify::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ak_SurfaceEffect_C_Received_Notify, CallFunc_TryPlayCharacterCustomizationFootstepEffect_ShouldPlayDefaultNiagaraEffect) == 0x0001E9, "Member 'Ak_SurfaceEffect_C_Received_Notify::CallFunc_TryPlayCharacterCustomizationFootstepEffect_ShouldPlayDefaultNiagaraEffect' has a wrong offset!");
static_assert(offsetof(Ak_SurfaceEffect_C_Received_Notify, CallFunc_RemoteTraceForMaterial_Material) == 0x0001F0, "Member 'Ak_SurfaceEffect_C_Received_Notify::CallFunc_RemoteTraceForMaterial_Material' has a wrong offset!");
static_assert(offsetof(Ak_SurfaceEffect_C_Received_Notify, CallFunc_RemoteTraceForMaterial_Loc) == 0x0001F8, "Member 'Ak_SurfaceEffect_C_Received_Notify::CallFunc_RemoteTraceForMaterial_Loc' has a wrong offset!");
static_assert(offsetof(Ak_SurfaceEffect_C_Received_Notify, CallFunc_GetComponentByClass_ReturnValue) == 0x000210, "Member 'Ak_SurfaceEffect_C_Received_Notify::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ak_SurfaceEffect_C_Received_Notify, CallFunc_GetComponentByClass_ReturnValue_1) == 0x000218, "Member 'Ak_SurfaceEffect_C_Received_Notify::CallFunc_GetComponentByClass_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ak_SurfaceEffect_C_Received_Notify, CallFunc_K2_GetRootComponent_ReturnValue) == 0x000220, "Member 'Ak_SurfaceEffect_C_Received_Notify::CallFunc_K2_GetRootComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ak_SurfaceEffect_C_Received_Notify, CallFunc_GetForwardVector_ReturnValue) == 0x000228, "Member 'Ak_SurfaceEffect_C_Received_Notify::CallFunc_GetForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ak_SurfaceEffect_C_Received_Notify, CallFunc_GetUpVector_ReturnValue) == 0x000240, "Member 'Ak_SurfaceEffect_C_Received_Notify::CallFunc_GetUpVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ak_SurfaceEffect_C_Received_Notify, CallFunc_MakeRotFromXZ_ReturnValue) == 0x000258, "Member 'Ak_SurfaceEffect_C_Received_Notify::CallFunc_MakeRotFromXZ_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ak_SurfaceEffect_C_Received_Notify, K2Node_DynamicCast_AsPawn) == 0x000270, "Member 'Ak_SurfaceEffect_C_Received_Notify::K2Node_DynamicCast_AsPawn' has a wrong offset!");
static_assert(offsetof(Ak_SurfaceEffect_C_Received_Notify, K2Node_DynamicCast_bSuccess) == 0x000278, "Member 'Ak_SurfaceEffect_C_Received_Notify::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Ak_SurfaceEffect_C_Received_Notify, CallFunc_BreakRotator_Roll) == 0x00027C, "Member 'Ak_SurfaceEffect_C_Received_Notify::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(Ak_SurfaceEffect_C_Received_Notify, CallFunc_BreakRotator_Pitch) == 0x000280, "Member 'Ak_SurfaceEffect_C_Received_Notify::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(Ak_SurfaceEffect_C_Received_Notify, CallFunc_BreakRotator_Yaw) == 0x000284, "Member 'Ak_SurfaceEffect_C_Received_Notify::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(Ak_SurfaceEffect_C_Received_Notify, CallFunc_IsLocallyControlled_ReturnValue) == 0x000288, "Member 'Ak_SurfaceEffect_C_Received_Notify::CallFunc_IsLocallyControlled_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ak_SurfaceEffect_C_Received_Notify, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000290, "Member 'Ak_SurfaceEffect_C_Received_Notify::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ak_SurfaceEffect_C_Received_Notify, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000298, "Member 'Ak_SurfaceEffect_C_Received_Notify::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ak_SurfaceEffect_C_Received_Notify, CallFunc_GetOwner_ReturnValue) == 0x0002A0, "Member 'Ak_SurfaceEffect_C_Received_Notify::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ak_SurfaceEffect_C_Received_Notify, CallFunc_GetPhysmatEffectData_PhysmatEffect) == 0x0002A8, "Member 'Ak_SurfaceEffect_C_Received_Notify::CallFunc_GetPhysmatEffectData_PhysmatEffect' has a wrong offset!");
static_assert(offsetof(Ak_SurfaceEffect_C_Received_Notify, CallFunc_GetSurfaceEffect_Value) == 0x0002B0, "Member 'Ak_SurfaceEffect_C_Received_Notify::CallFunc_GetSurfaceEffect_Value' has a wrong offset!");
static_assert(offsetof(Ak_SurfaceEffect_C_Received_Notify, CallFunc_GetSurfaceEffect_ReturnValue) == 0x0002D0, "Member 'Ak_SurfaceEffect_C_Received_Notify::CallFunc_GetSurfaceEffect_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ak_SurfaceEffect_C_Received_Notify, CallFunc_GlobalScalabilitySetting_ScalabilitySetting) == 0x0002D1, "Member 'Ak_SurfaceEffect_C_Received_Notify::CallFunc_GlobalScalabilitySetting_ScalabilitySetting' has a wrong offset!");
static_assert(offsetof(Ak_SurfaceEffect_C_Received_Notify, K2Node_SwitchEnum_CmpSuccess) == 0x0002D2, "Member 'Ak_SurfaceEffect_C_Received_Notify::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(Ak_SurfaceEffect_C_Received_Notify, CallFunc_Try_to_Propagate_Rtpcs_Success) == 0x0002D3, "Member 'Ak_SurfaceEffect_C_Received_Notify::CallFunc_Try_to_Propagate_Rtpcs_Success' has a wrong offset!");
static_assert(offsetof(Ak_SurfaceEffect_C_Received_Notify, CallFunc_BreakVector_X) == 0x0002D8, "Member 'Ak_SurfaceEffect_C_Received_Notify::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(Ak_SurfaceEffect_C_Received_Notify, CallFunc_BreakVector_Y) == 0x0002E0, "Member 'Ak_SurfaceEffect_C_Received_Notify::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(Ak_SurfaceEffect_C_Received_Notify, CallFunc_BreakVector_Z) == 0x0002E8, "Member 'Ak_SurfaceEffect_C_Received_Notify::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(Ak_SurfaceEffect_C_Received_Notify, CallFunc_MakeVector_ReturnValue) == 0x0002F0, "Member 'Ak_SurfaceEffect_C_Received_Notify::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ak_SurfaceEffect_C_Received_Notify, CallFunc_VSize_ReturnValue) == 0x000308, "Member 'Ak_SurfaceEffect_C_Received_Notify::CallFunc_VSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ak_SurfaceEffect_C_Received_Notify, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000310, "Member 'Ak_SurfaceEffect_C_Received_Notify::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ak_SurfaceEffect_C_Received_Notify, CallFunc_IsWithinAttenuation_Within) == 0x000328, "Member 'Ak_SurfaceEffect_C_Received_Notify::CallFunc_IsWithinAttenuation_Within' has a wrong offset!");
static_assert(offsetof(Ak_SurfaceEffect_C_Received_Notify, Temp_struct_Variable) == 0x000330, "Member 'Ak_SurfaceEffect_C_Received_Notify::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(Ak_SurfaceEffect_C_Received_Notify, CallFunc_GetAkComponent_ComponentCreated) == 0x000340, "Member 'Ak_SurfaceEffect_C_Received_Notify::CallFunc_GetAkComponent_ComponentCreated' has a wrong offset!");
static_assert(offsetof(Ak_SurfaceEffect_C_Received_Notify, CallFunc_GetAkComponent_ReturnValue) == 0x000348, "Member 'Ak_SurfaceEffect_C_Received_Notify::CallFunc_GetAkComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ak_SurfaceEffect_C_Received_Notify, CallFunc_Less_DoubleDouble_ReturnValue) == 0x000350, "Member 'Ak_SurfaceEffect_C_Received_Notify::CallFunc_Less_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ak_SurfaceEffect_C_Received_Notify, CallFunc_Less_DoubleDouble_ReturnValue_1) == 0x000351, "Member 'Ak_SurfaceEffect_C_Received_Notify::CallFunc_Less_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ak_SurfaceEffect_C_Received_Notify, CallFunc_GetValeriaAudioListenerPosition_OutLocation) == 0x000358, "Member 'Ak_SurfaceEffect_C_Received_Notify::CallFunc_GetValeriaAudioListenerPosition_OutLocation' has a wrong offset!");
static_assert(offsetof(Ak_SurfaceEffect_C_Received_Notify, CallFunc_GetValeriaAudioListenerPosition_OutFrontDir) == 0x000370, "Member 'Ak_SurfaceEffect_C_Received_Notify::CallFunc_GetValeriaAudioListenerPosition_OutFrontDir' has a wrong offset!");
static_assert(offsetof(Ak_SurfaceEffect_C_Received_Notify, CallFunc_GetValeriaAudioListenerPosition_OutRightDir) == 0x000388, "Member 'Ak_SurfaceEffect_C_Received_Notify::CallFunc_GetValeriaAudioListenerPosition_OutRightDir' has a wrong offset!");
static_assert(offsetof(Ak_SurfaceEffect_C_Received_Notify, CallFunc_GetDisplayName_ReturnValue) == 0x0003A0, "Member 'Ak_SurfaceEffect_C_Received_Notify::CallFunc_GetDisplayName_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ak_SurfaceEffect_C_Received_Notify, CallFunc_IsDedicatedServer_ReturnValue) == 0x0003B0, "Member 'Ak_SurfaceEffect_C_Received_Notify::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ak_SurfaceEffect_C_Received_Notify, CallFunc_Conv_ByteToInt_ReturnValue) == 0x0003B4, "Member 'Ak_SurfaceEffect_C_Received_Notify::CallFunc_Conv_ByteToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ak_SurfaceEffect_C_Received_Notify, CallFunc_GetSocketLocation_ReturnValue) == 0x0003B8, "Member 'Ak_SurfaceEffect_C_Received_Notify::CallFunc_GetSocketLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ak_SurfaceEffect_C_Received_Notify, CallFunc_Add_VectorVector_ReturnValue_1) == 0x0003D0, "Member 'Ak_SurfaceEffect_C_Received_Notify::CallFunc_Add_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ak_SurfaceEffect_C_Received_Notify, CallFunc_SpawnSystemAtLocation_ReturnValue) == 0x0003E8, "Member 'Ak_SurfaceEffect_C_Received_Notify::CallFunc_SpawnSystemAtLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ak_SurfaceEffect_C_Received_Notify, CallFunc_IsValid_ReturnValue) == 0x0003F0, "Member 'Ak_SurfaceEffect_C_Received_Notify::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ak_SurfaceEffect_C_Received_Notify, CallFunc_Conv_ByteToInt_ReturnValue_1) == 0x0003F4, "Member 'Ak_SurfaceEffect_C_Received_Notify::CallFunc_Conv_ByteToInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ak_SurfaceEffect_C_Received_Notify, CallFunc_IsValid_ReturnValue_1) == 0x0003F8, "Member 'Ak_SurfaceEffect_C_Received_Notify::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ak_SurfaceEffect_C_Received_Notify, CallFunc_PlayerTraceForMaterial_Material) == 0x000400, "Member 'Ak_SurfaceEffect_C_Received_Notify::CallFunc_PlayerTraceForMaterial_Material' has a wrong offset!");
static_assert(offsetof(Ak_SurfaceEffect_C_Received_Notify, CallFunc_PlayerTraceForMaterial_Loc) == 0x000408, "Member 'Ak_SurfaceEffect_C_Received_Notify::CallFunc_PlayerTraceForMaterial_Loc' has a wrong offset!");
static_assert(offsetof(Ak_SurfaceEffect_C_Received_Notify, CallFunc_IsValid_ReturnValue_2) == 0x000420, "Member 'Ak_SurfaceEffect_C_Received_Notify::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ak_SurfaceEffect_C_Received_Notify, CallFunc_GetMaxSpeed_ReturnValue) == 0x000428, "Member 'Ak_SurfaceEffect_C_Received_Notify::CallFunc_GetMaxSpeed_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ak_SurfaceEffect_C_Received_Notify, CallFunc_MapRangeClamped_ReturnValue) == 0x000430, "Member 'Ak_SurfaceEffect_C_Received_Notify::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ak_SurfaceEffect_C_Received_Notify, CallFunc_K2_GetComponentLocation_ReturnValue_1) == 0x000438, "Member 'Ak_SurfaceEffect_C_Received_Notify::CallFunc_K2_GetComponentLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ak_SurfaceEffect_C_Received_Notify, CallFunc_GetGameInstance_ReturnValue) == 0x000450, "Member 'Ak_SurfaceEffect_C_Received_Notify::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ak_SurfaceEffect_C_Received_Notify, CallFunc_PostEventAtLocation_ReturnValue) == 0x000458, "Member 'Ak_SurfaceEffect_C_Received_Notify::CallFunc_PostEventAtLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ak_SurfaceEffect_C_Received_Notify, CallFunc_IsValid_ReturnValue_3) == 0x00045C, "Member 'Ak_SurfaceEffect_C_Received_Notify::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ak_SurfaceEffect_C_Received_Notify, CallFunc_RandomFloatInRange_ReturnValue) == 0x000460, "Member 'Ak_SurfaceEffect_C_Received_Notify::CallFunc_RandomFloatInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ak_SurfaceEffect_C_Received_Notify, CallFunc_Add_DoubleDouble_ReturnValue_1) == 0x000468, "Member 'Ak_SurfaceEffect_C_Received_Notify::CallFunc_Add_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ak_SurfaceEffect_C_Received_Notify, CallFunc_K2_GetComponentLocation_ReturnValue_2) == 0x000470, "Member 'Ak_SurfaceEffect_C_Received_Notify::CallFunc_K2_GetComponentLocation_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ak_SurfaceEffect_C_Received_Notify, CallFunc_MakeRotator_ReturnValue) == 0x000488, "Member 'Ak_SurfaceEffect_C_Received_Notify::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ak_SurfaceEffect_C_Received_Notify, CallFunc_Vector_Distance_ReturnValue) == 0x0004A0, "Member 'Ak_SurfaceEffect_C_Received_Notify::CallFunc_Vector_Distance_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ak_SurfaceEffect_C_Received_Notify, CallFunc_IsValid_ReturnValue_4) == 0x0004A8, "Member 'Ak_SurfaceEffect_C_Received_Notify::CallFunc_IsValid_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Ak_SurfaceEffect_C_Received_Notify, CallFunc_GetDisplayName_ReturnValue_1) == 0x0004B0, "Member 'Ak_SurfaceEffect_C_Received_Notify::CallFunc_GetDisplayName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ak_SurfaceEffect_C_Received_Notify, CallFunc_Concat_StrStr_ReturnValue) == 0x0004C0, "Member 'Ak_SurfaceEffect_C_Received_Notify::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ak_SurfaceEffect_C_Received_Notify, CallFunc_IsValid_ReturnValue_5) == 0x0004D0, "Member 'Ak_SurfaceEffect_C_Received_Notify::CallFunc_IsValid_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(Ak_SurfaceEffect_C_Received_Notify, CallFunc_Concat_StrStr_ReturnValue_1) == 0x0004D8, "Member 'Ak_SurfaceEffect_C_Received_Notify::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ak_SurfaceEffect_C_Received_Notify, CallFunc_Concat_StrStr_ReturnValue_2) == 0x0004E8, "Member 'Ak_SurfaceEffect_C_Received_Notify::CallFunc_Concat_StrStr_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ak_SurfaceEffect_C_Received_Notify, CallFunc_Concat_StrStr_ReturnValue_3) == 0x0004F8, "Member 'Ak_SurfaceEffect_C_Received_Notify::CallFunc_Concat_StrStr_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ak_SurfaceEffect_C_Received_Notify, CallFunc_RandomFloatInRange_ReturnValue_1) == 0x000508, "Member 'Ak_SurfaceEffect_C_Received_Notify::CallFunc_RandomFloatInRange_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ak_SurfaceEffect_C_Received_Notify, CallFunc_Add_DoubleDouble_ReturnValue_2) == 0x000510, "Member 'Ak_SurfaceEffect_C_Received_Notify::CallFunc_Add_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ak_SurfaceEffect_C_Received_Notify, Temp_delegate_Variable) == 0x000518, "Member 'Ak_SurfaceEffect_C_Received_Notify::Temp_delegate_Variable' has a wrong offset!");
static_assert(offsetof(Ak_SurfaceEffect_C_Received_Notify, CallFunc_PostAkEvent_ReturnValue) == 0x000528, "Member 'Ak_SurfaceEffect_C_Received_Notify::CallFunc_PostAkEvent_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ak_SurfaceEffect_C_Received_Notify, CallFunc_IsValid_ReturnValue_6) == 0x00052C, "Member 'Ak_SurfaceEffect_C_Received_Notify::CallFunc_IsValid_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(Ak_SurfaceEffect_C_Received_Notify, CallFunc_Conv_NameToString_ReturnValue) == 0x000530, "Member 'Ak_SurfaceEffect_C_Received_Notify::CallFunc_Conv_NameToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ak_SurfaceEffect_C_Received_Notify, CallFunc_Contains_ReturnValue) == 0x000540, "Member 'Ak_SurfaceEffect_C_Received_Notify::CallFunc_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ak_SurfaceEffect_C_Received_Notify, CallFunc_Conv_NameToString_ReturnValue_1) == 0x000548, "Member 'Ak_SurfaceEffect_C_Received_Notify::CallFunc_Conv_NameToString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ak_SurfaceEffect_C_Received_Notify, CallFunc_Contains_ReturnValue_1) == 0x000558, "Member 'Ak_SurfaceEffect_C_Received_Notify::CallFunc_Contains_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ak_SurfaceEffect_C_Received_Notify, CallFunc_BooleanOR_ReturnValue) == 0x000559, "Member 'Ak_SurfaceEffect_C_Received_Notify::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ak_SurfaceEffect_C_Received_Notify, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000560, "Member 'Ak_SurfaceEffect_C_Received_Notify::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ak_SurfaceEffect_C_Received_Notify, CallFunc_MakeVector_ReturnValue_1) == 0x000568, "Member 'Ak_SurfaceEffect_C_Received_Notify::CallFunc_MakeVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ak_SurfaceEffect_C_Received_Notify, CallFunc_IsValid_ReturnValue_7) == 0x000580, "Member 'Ak_SurfaceEffect_C_Received_Notify::CallFunc_IsValid_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(Ak_SurfaceEffect_C_Received_Notify, CallFunc_Add_VectorVector_ReturnValue_2) == 0x000588, "Member 'Ak_SurfaceEffect_C_Received_Notify::CallFunc_Add_VectorVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ak_SurfaceEffect_C_Received_Notify, CallFunc_SpawnDecalAtLocation_ReturnValue) == 0x0005A0, "Member 'Ak_SurfaceEffect_C_Received_Notify::CallFunc_SpawnDecalAtLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ak_SurfaceEffect_C_Received_Notify, CallFunc_SpawnSystemAttached_ReturnValue) == 0x0005A8, "Member 'Ak_SurfaceEffect_C_Received_Notify::CallFunc_SpawnSystemAttached_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ak_SurfaceEffect_C_Received_Notify, CallFunc_IsValid_ReturnValue_8) == 0x0005B0, "Member 'Ak_SurfaceEffect_C_Received_Notify::CallFunc_IsValid_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(Ak_SurfaceEffect_C_Received_Notify, CallFunc_Subtract_DoubleDouble_A_ImplicitCast) == 0x0005B8, "Member 'Ak_SurfaceEffect_C_Received_Notify::CallFunc_Subtract_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ak_SurfaceEffect_C_Received_Notify, CallFunc_Add_DoubleDouble_A_ImplicitCast) == 0x0005C0, "Member 'Ak_SurfaceEffect_C_Received_Notify::CallFunc_Add_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ak_SurfaceEffect_C_Received_Notify, CallFunc_MakeRotator_Pitch_ImplicitCast) == 0x0005C8, "Member 'Ak_SurfaceEffect_C_Received_Notify::CallFunc_MakeRotator_Pitch_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ak_SurfaceEffect_C_Received_Notify, CallFunc_MakeRotator_Yaw_ImplicitCast) == 0x0005CC, "Member 'Ak_SurfaceEffect_C_Received_Notify::CallFunc_MakeRotator_Yaw_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ak_SurfaceEffect_C_Received_Notify, CallFunc_SetRTPCValue_Value_ImplicitCast) == 0x0005D0, "Member 'Ak_SurfaceEffect_C_Received_Notify::CallFunc_SetRTPCValue_Value_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ak_SurfaceEffect_C_Received_Notify, CallFunc_SetFadeOut_Duration_ImplicitCast) == 0x0005D4, "Member 'Ak_SurfaceEffect_C_Received_Notify::CallFunc_SetFadeOut_Duration_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ak_SurfaceEffect_C_Received_Notify, CallFunc_SetFadeOut_StartDelay_ImplicitCast) == 0x0005D8, "Member 'Ak_SurfaceEffect_C_Received_Notify::CallFunc_SetFadeOut_StartDelay_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ak_SurfaceEffect_C_Received_Notify, CallFunc_SetFadeIn_Duration_ImplicitCast) == 0x0005DC, "Member 'Ak_SurfaceEffect_C_Received_Notify::CallFunc_SetFadeIn_Duration_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ak_SurfaceEffect_C_Received_Notify, CallFunc_SetFadeIn_StartDelay_ImplicitCast) == 0x0005E0, "Member 'Ak_SurfaceEffect_C_Received_Notify::CallFunc_SetFadeIn_StartDelay_ImplicitCast' has a wrong offset!");

// Function Ak_SurfaceEffect.Ak_SurfaceEffect_C.RemoteTraceForMaterial
// 0x0268 (0x0268 - 0x0000)
struct Ak_SurfaceEffect_C_RemoteTraceForMaterial final
{
public:
	class USceneComponent*                        Mesh;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      Material;                                          // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Loc;                                               // 0x0010(0x0018)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      PM;                                                // 0x0028(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Location;                                          // 0x0030(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         K2Node_MakeArray_Array;                            // 0x0050(0x0010)(ConstParm, ReferenceParm)
	struct FVector                                CallFunc_GetTraceParams_Start;                     // 0x0060(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetTraceParams_End;                       // 0x0078(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_LineTraceSingle_OutHit;                   // 0x0090(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_LineTraceSingle_ReturnValue;              // 0x0178(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x0179(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x017A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4A75[0x1];                                     // 0x017B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x017C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x0180(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4A76[0x4];                                     // 0x0184(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x0188(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x01A0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x01B8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x01D0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x01E8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x01F0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x01F8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x0200(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_BoneName;                  // 0x0208(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x0210(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x0214(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x0218(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4A77[0x4];                                     // 0x021C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x0220(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x0238(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetSocketLocation_ReturnValue;            // 0x0250(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ak_SurfaceEffect_C_RemoteTraceForMaterial) == 0x000008, "Wrong alignment on Ak_SurfaceEffect_C_RemoteTraceForMaterial");
static_assert(sizeof(Ak_SurfaceEffect_C_RemoteTraceForMaterial) == 0x000268, "Wrong size on Ak_SurfaceEffect_C_RemoteTraceForMaterial");
static_assert(offsetof(Ak_SurfaceEffect_C_RemoteTraceForMaterial, Mesh) == 0x000000, "Member 'Ak_SurfaceEffect_C_RemoteTraceForMaterial::Mesh' has a wrong offset!");
static_assert(offsetof(Ak_SurfaceEffect_C_RemoteTraceForMaterial, Material) == 0x000008, "Member 'Ak_SurfaceEffect_C_RemoteTraceForMaterial::Material' has a wrong offset!");
static_assert(offsetof(Ak_SurfaceEffect_C_RemoteTraceForMaterial, Loc) == 0x000010, "Member 'Ak_SurfaceEffect_C_RemoteTraceForMaterial::Loc' has a wrong offset!");
static_assert(offsetof(Ak_SurfaceEffect_C_RemoteTraceForMaterial, PM) == 0x000028, "Member 'Ak_SurfaceEffect_C_RemoteTraceForMaterial::PM' has a wrong offset!");
static_assert(offsetof(Ak_SurfaceEffect_C_RemoteTraceForMaterial, Location) == 0x000030, "Member 'Ak_SurfaceEffect_C_RemoteTraceForMaterial::Location' has a wrong offset!");
static_assert(offsetof(Ak_SurfaceEffect_C_RemoteTraceForMaterial, CallFunc_GetOwner_ReturnValue) == 0x000048, "Member 'Ak_SurfaceEffect_C_RemoteTraceForMaterial::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ak_SurfaceEffect_C_RemoteTraceForMaterial, K2Node_MakeArray_Array) == 0x000050, "Member 'Ak_SurfaceEffect_C_RemoteTraceForMaterial::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(Ak_SurfaceEffect_C_RemoteTraceForMaterial, CallFunc_GetTraceParams_Start) == 0x000060, "Member 'Ak_SurfaceEffect_C_RemoteTraceForMaterial::CallFunc_GetTraceParams_Start' has a wrong offset!");
static_assert(offsetof(Ak_SurfaceEffect_C_RemoteTraceForMaterial, CallFunc_GetTraceParams_End) == 0x000078, "Member 'Ak_SurfaceEffect_C_RemoteTraceForMaterial::CallFunc_GetTraceParams_End' has a wrong offset!");
static_assert(offsetof(Ak_SurfaceEffect_C_RemoteTraceForMaterial, CallFunc_LineTraceSingle_OutHit) == 0x000090, "Member 'Ak_SurfaceEffect_C_RemoteTraceForMaterial::CallFunc_LineTraceSingle_OutHit' has a wrong offset!");
static_assert(offsetof(Ak_SurfaceEffect_C_RemoteTraceForMaterial, CallFunc_LineTraceSingle_ReturnValue) == 0x000178, "Member 'Ak_SurfaceEffect_C_RemoteTraceForMaterial::CallFunc_LineTraceSingle_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ak_SurfaceEffect_C_RemoteTraceForMaterial, CallFunc_BreakHitResult_bBlockingHit) == 0x000179, "Member 'Ak_SurfaceEffect_C_RemoteTraceForMaterial::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(Ak_SurfaceEffect_C_RemoteTraceForMaterial, CallFunc_BreakHitResult_bInitialOverlap) == 0x00017A, "Member 'Ak_SurfaceEffect_C_RemoteTraceForMaterial::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(Ak_SurfaceEffect_C_RemoteTraceForMaterial, CallFunc_BreakHitResult_Time) == 0x00017C, "Member 'Ak_SurfaceEffect_C_RemoteTraceForMaterial::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(Ak_SurfaceEffect_C_RemoteTraceForMaterial, CallFunc_BreakHitResult_Distance) == 0x000180, "Member 'Ak_SurfaceEffect_C_RemoteTraceForMaterial::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(Ak_SurfaceEffect_C_RemoteTraceForMaterial, CallFunc_BreakHitResult_Location) == 0x000188, "Member 'Ak_SurfaceEffect_C_RemoteTraceForMaterial::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(Ak_SurfaceEffect_C_RemoteTraceForMaterial, CallFunc_BreakHitResult_ImpactPoint) == 0x0001A0, "Member 'Ak_SurfaceEffect_C_RemoteTraceForMaterial::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(Ak_SurfaceEffect_C_RemoteTraceForMaterial, CallFunc_BreakHitResult_Normal) == 0x0001B8, "Member 'Ak_SurfaceEffect_C_RemoteTraceForMaterial::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(Ak_SurfaceEffect_C_RemoteTraceForMaterial, CallFunc_BreakHitResult_ImpactNormal) == 0x0001D0, "Member 'Ak_SurfaceEffect_C_RemoteTraceForMaterial::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(Ak_SurfaceEffect_C_RemoteTraceForMaterial, CallFunc_BreakHitResult_PhysMat) == 0x0001E8, "Member 'Ak_SurfaceEffect_C_RemoteTraceForMaterial::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(Ak_SurfaceEffect_C_RemoteTraceForMaterial, CallFunc_BreakHitResult_HitActor) == 0x0001F0, "Member 'Ak_SurfaceEffect_C_RemoteTraceForMaterial::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(Ak_SurfaceEffect_C_RemoteTraceForMaterial, CallFunc_BreakHitResult_HitComponent) == 0x0001F8, "Member 'Ak_SurfaceEffect_C_RemoteTraceForMaterial::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(Ak_SurfaceEffect_C_RemoteTraceForMaterial, CallFunc_BreakHitResult_HitBoneName) == 0x000200, "Member 'Ak_SurfaceEffect_C_RemoteTraceForMaterial::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(Ak_SurfaceEffect_C_RemoteTraceForMaterial, CallFunc_BreakHitResult_BoneName) == 0x000208, "Member 'Ak_SurfaceEffect_C_RemoteTraceForMaterial::CallFunc_BreakHitResult_BoneName' has a wrong offset!");
static_assert(offsetof(Ak_SurfaceEffect_C_RemoteTraceForMaterial, CallFunc_BreakHitResult_HitItem) == 0x000210, "Member 'Ak_SurfaceEffect_C_RemoteTraceForMaterial::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(Ak_SurfaceEffect_C_RemoteTraceForMaterial, CallFunc_BreakHitResult_ElementIndex) == 0x000214, "Member 'Ak_SurfaceEffect_C_RemoteTraceForMaterial::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(Ak_SurfaceEffect_C_RemoteTraceForMaterial, CallFunc_BreakHitResult_FaceIndex) == 0x000218, "Member 'Ak_SurfaceEffect_C_RemoteTraceForMaterial::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(Ak_SurfaceEffect_C_RemoteTraceForMaterial, CallFunc_BreakHitResult_TraceStart) == 0x000220, "Member 'Ak_SurfaceEffect_C_RemoteTraceForMaterial::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(Ak_SurfaceEffect_C_RemoteTraceForMaterial, CallFunc_BreakHitResult_TraceEnd) == 0x000238, "Member 'Ak_SurfaceEffect_C_RemoteTraceForMaterial::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(Ak_SurfaceEffect_C_RemoteTraceForMaterial, CallFunc_GetSocketLocation_ReturnValue) == 0x000250, "Member 'Ak_SurfaceEffect_C_RemoteTraceForMaterial::CallFunc_GetSocketLocation_ReturnValue' has a wrong offset!");

// Function Ak_SurfaceEffect.Ak_SurfaceEffect_C.SetStoredPhysmat
// 0x0018 (0x0018 - 0x0000)
struct Ak_SurfaceEffect_C_SetStoredPhysmat final
{
public:
	class UPhysicalMaterial*                      PM;                                                // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UComp_Actor_Audio_Data_C*               AudioData;                                         // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ak_SurfaceEffect_C_SetStoredPhysmat) == 0x000008, "Wrong alignment on Ak_SurfaceEffect_C_SetStoredPhysmat");
static_assert(sizeof(Ak_SurfaceEffect_C_SetStoredPhysmat) == 0x000018, "Wrong size on Ak_SurfaceEffect_C_SetStoredPhysmat");
static_assert(offsetof(Ak_SurfaceEffect_C_SetStoredPhysmat, PM) == 0x000000, "Member 'Ak_SurfaceEffect_C_SetStoredPhysmat::PM' has a wrong offset!");
static_assert(offsetof(Ak_SurfaceEffect_C_SetStoredPhysmat, AudioData) == 0x000008, "Member 'Ak_SurfaceEffect_C_SetStoredPhysmat::AudioData' has a wrong offset!");
static_assert(offsetof(Ak_SurfaceEffect_C_SetStoredPhysmat, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'Ak_SurfaceEffect_C_SetStoredPhysmat::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function Ak_SurfaceEffect.Ak_SurfaceEffect_C.TryPlayCharacterCustomizationFootstepEffect
// 0x0068 (0x0068 - 0x0000)
struct Ak_SurfaceEffect_C_TryPlayCharacterCustomizationFootstepEffect final
{
public:
	struct FVector                                SpawnLocation;                                     // 0x0000(0x0018)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               SpawnRotation;                                     // 0x0018(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class UObject*                                Object;                                            // 0x0030(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          ShouldPlayDefaultNiagaraEffect;                    // 0x0038(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4A78[0x7];                                     // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UVAL_CharacterCustomizationComponent*   ValeriaCharacterCustomizationComponent;            // 0x0040(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AValeriaCharacter*                      K2Node_DynamicCast_AsValeria_Character;            // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4A79[0x7];                                     // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UVAL_CharacterCustomizationComponent*   CallFunc_GetCharacterCustomizationComponent_ReturnValue; // 0x0058(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	EVAL_FootprintEffectType                      CallFunc_SpawnCustomFootprintEffects_ReturnValue;  // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasCustomFootprintEffects_ReturnValue;    // 0x0061(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0062(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ak_SurfaceEffect_C_TryPlayCharacterCustomizationFootstepEffect) == 0x000008, "Wrong alignment on Ak_SurfaceEffect_C_TryPlayCharacterCustomizationFootstepEffect");
static_assert(sizeof(Ak_SurfaceEffect_C_TryPlayCharacterCustomizationFootstepEffect) == 0x000068, "Wrong size on Ak_SurfaceEffect_C_TryPlayCharacterCustomizationFootstepEffect");
static_assert(offsetof(Ak_SurfaceEffect_C_TryPlayCharacterCustomizationFootstepEffect, SpawnLocation) == 0x000000, "Member 'Ak_SurfaceEffect_C_TryPlayCharacterCustomizationFootstepEffect::SpawnLocation' has a wrong offset!");
static_assert(offsetof(Ak_SurfaceEffect_C_TryPlayCharacterCustomizationFootstepEffect, SpawnRotation) == 0x000018, "Member 'Ak_SurfaceEffect_C_TryPlayCharacterCustomizationFootstepEffect::SpawnRotation' has a wrong offset!");
static_assert(offsetof(Ak_SurfaceEffect_C_TryPlayCharacterCustomizationFootstepEffect, Object) == 0x000030, "Member 'Ak_SurfaceEffect_C_TryPlayCharacterCustomizationFootstepEffect::Object' has a wrong offset!");
static_assert(offsetof(Ak_SurfaceEffect_C_TryPlayCharacterCustomizationFootstepEffect, ShouldPlayDefaultNiagaraEffect) == 0x000038, "Member 'Ak_SurfaceEffect_C_TryPlayCharacterCustomizationFootstepEffect::ShouldPlayDefaultNiagaraEffect' has a wrong offset!");
static_assert(offsetof(Ak_SurfaceEffect_C_TryPlayCharacterCustomizationFootstepEffect, ValeriaCharacterCustomizationComponent) == 0x000040, "Member 'Ak_SurfaceEffect_C_TryPlayCharacterCustomizationFootstepEffect::ValeriaCharacterCustomizationComponent' has a wrong offset!");
static_assert(offsetof(Ak_SurfaceEffect_C_TryPlayCharacterCustomizationFootstepEffect, K2Node_DynamicCast_AsValeria_Character) == 0x000048, "Member 'Ak_SurfaceEffect_C_TryPlayCharacterCustomizationFootstepEffect::K2Node_DynamicCast_AsValeria_Character' has a wrong offset!");
static_assert(offsetof(Ak_SurfaceEffect_C_TryPlayCharacterCustomizationFootstepEffect, K2Node_DynamicCast_bSuccess) == 0x000050, "Member 'Ak_SurfaceEffect_C_TryPlayCharacterCustomizationFootstepEffect::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Ak_SurfaceEffect_C_TryPlayCharacterCustomizationFootstepEffect, CallFunc_GetCharacterCustomizationComponent_ReturnValue) == 0x000058, "Member 'Ak_SurfaceEffect_C_TryPlayCharacterCustomizationFootstepEffect::CallFunc_GetCharacterCustomizationComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ak_SurfaceEffect_C_TryPlayCharacterCustomizationFootstepEffect, CallFunc_SpawnCustomFootprintEffects_ReturnValue) == 0x000060, "Member 'Ak_SurfaceEffect_C_TryPlayCharacterCustomizationFootstepEffect::CallFunc_SpawnCustomFootprintEffects_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ak_SurfaceEffect_C_TryPlayCharacterCustomizationFootstepEffect, CallFunc_HasCustomFootprintEffects_ReturnValue) == 0x000061, "Member 'Ak_SurfaceEffect_C_TryPlayCharacterCustomizationFootstepEffect::CallFunc_HasCustomFootprintEffects_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ak_SurfaceEffect_C_TryPlayCharacterCustomizationFootstepEffect, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000062, "Member 'Ak_SurfaceEffect_C_TryPlayCharacterCustomizationFootstepEffect::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");

}

