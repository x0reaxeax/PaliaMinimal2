#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_GpPopup_AnchoredPopupBase

#include "Basic.hpp"

#include "SlateCore_structs.hpp"


namespace SDK::Params
{

// Function WBP_GpPopup_AnchoredPopupBase.WBP_GpPopup_AnchoredPopupBase_C.ExecuteUbergraph_WBP_GpPopup_AnchoredPopupBase
// 0x0040 (0x0040 - 0x0000)
struct WBP_GpPopup_AnchoredPopupBase_C_ExecuteUbergraph_WBP_GpPopup_AnchoredPopupBase final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGeometry                              K2Node_Event_MyGeometry;                           // 0x0004(0x0038)(IsPlainOldData, NoDestructor)
	float                                         K2Node_Event_InDeltaTime;                          // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_GpPopup_AnchoredPopupBase_C_ExecuteUbergraph_WBP_GpPopup_AnchoredPopupBase) == 0x000004, "Wrong alignment on WBP_GpPopup_AnchoredPopupBase_C_ExecuteUbergraph_WBP_GpPopup_AnchoredPopupBase");
static_assert(sizeof(WBP_GpPopup_AnchoredPopupBase_C_ExecuteUbergraph_WBP_GpPopup_AnchoredPopupBase) == 0x000040, "Wrong size on WBP_GpPopup_AnchoredPopupBase_C_ExecuteUbergraph_WBP_GpPopup_AnchoredPopupBase");
static_assert(offsetof(WBP_GpPopup_AnchoredPopupBase_C_ExecuteUbergraph_WBP_GpPopup_AnchoredPopupBase, EntryPoint) == 0x000000, "Member 'WBP_GpPopup_AnchoredPopupBase_C_ExecuteUbergraph_WBP_GpPopup_AnchoredPopupBase::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_GpPopup_AnchoredPopupBase_C_ExecuteUbergraph_WBP_GpPopup_AnchoredPopupBase, K2Node_Event_MyGeometry) == 0x000004, "Member 'WBP_GpPopup_AnchoredPopupBase_C_ExecuteUbergraph_WBP_GpPopup_AnchoredPopupBase::K2Node_Event_MyGeometry' has a wrong offset!");
static_assert(offsetof(WBP_GpPopup_AnchoredPopupBase_C_ExecuteUbergraph_WBP_GpPopup_AnchoredPopupBase, K2Node_Event_InDeltaTime) == 0x00003C, "Member 'WBP_GpPopup_AnchoredPopupBase_C_ExecuteUbergraph_WBP_GpPopup_AnchoredPopupBase::K2Node_Event_InDeltaTime' has a wrong offset!");

// Function WBP_GpPopup_AnchoredPopupBase.WBP_GpPopup_AnchoredPopupBase_C.SetupWidget
// 0x0038 (0x0038 - 0x0000)
struct WBP_GpPopup_AnchoredPopupBase_C_SetupWidget final
{
public:
	class UGameplayInteractivePopupDataAsset*     PopupConfig;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	const class UVAL_AnchoredPopupType*           K2Node_DynamicCast_AsAnchored_Modal_Type;          // 0x0008(0x0008)(ConstParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5039[0x7];                                     // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_GPPopup_AnchoredPopup_C*           CallFunc_Create_ReturnValue;                       // 0x0018(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0020(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UCanvasPanelSlot*                       CallFunc_AddChildToCanvas_ReturnValue;             // 0x0030(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_GpPopup_AnchoredPopupBase_C_SetupWidget) == 0x000008, "Wrong alignment on WBP_GpPopup_AnchoredPopupBase_C_SetupWidget");
static_assert(sizeof(WBP_GpPopup_AnchoredPopupBase_C_SetupWidget) == 0x000038, "Wrong size on WBP_GpPopup_AnchoredPopupBase_C_SetupWidget");
static_assert(offsetof(WBP_GpPopup_AnchoredPopupBase_C_SetupWidget, PopupConfig) == 0x000000, "Member 'WBP_GpPopup_AnchoredPopupBase_C_SetupWidget::PopupConfig' has a wrong offset!");
static_assert(offsetof(WBP_GpPopup_AnchoredPopupBase_C_SetupWidget, K2Node_DynamicCast_AsAnchored_Modal_Type) == 0x000008, "Member 'WBP_GpPopup_AnchoredPopupBase_C_SetupWidget::K2Node_DynamicCast_AsAnchored_Modal_Type' has a wrong offset!");
static_assert(offsetof(WBP_GpPopup_AnchoredPopupBase_C_SetupWidget, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'WBP_GpPopup_AnchoredPopupBase_C_SetupWidget::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_GpPopup_AnchoredPopupBase_C_SetupWidget, CallFunc_Create_ReturnValue) == 0x000018, "Member 'WBP_GpPopup_AnchoredPopupBase_C_SetupWidget::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GpPopup_AnchoredPopupBase_C_SetupWidget, K2Node_CreateDelegate_OutputDelegate) == 0x000020, "Member 'WBP_GpPopup_AnchoredPopupBase_C_SetupWidget::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WBP_GpPopup_AnchoredPopupBase_C_SetupWidget, CallFunc_AddChildToCanvas_ReturnValue) == 0x000030, "Member 'WBP_GpPopup_AnchoredPopupBase_C_SetupWidget::CallFunc_AddChildToCanvas_ReturnValue' has a wrong offset!");

// Function WBP_GpPopup_AnchoredPopupBase.WBP_GpPopup_AnchoredPopupBase_C.Tick
// 0x003C (0x003C - 0x0000)
struct WBP_GpPopup_AnchoredPopupBase_C_Tick final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	float                                         InDeltaTime;                                       // 0x0038(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_GpPopup_AnchoredPopupBase_C_Tick) == 0x000004, "Wrong alignment on WBP_GpPopup_AnchoredPopupBase_C_Tick");
static_assert(sizeof(WBP_GpPopup_AnchoredPopupBase_C_Tick) == 0x00003C, "Wrong size on WBP_GpPopup_AnchoredPopupBase_C_Tick");
static_assert(offsetof(WBP_GpPopup_AnchoredPopupBase_C_Tick, MyGeometry) == 0x000000, "Member 'WBP_GpPopup_AnchoredPopupBase_C_Tick::MyGeometry' has a wrong offset!");
static_assert(offsetof(WBP_GpPopup_AnchoredPopupBase_C_Tick, InDeltaTime) == 0x000038, "Member 'WBP_GpPopup_AnchoredPopupBase_C_Tick::InDeltaTime' has a wrong offset!");

}

