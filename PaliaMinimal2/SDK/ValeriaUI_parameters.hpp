#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ValeriaUI

#include "Basic.hpp"

#include "ValeriaDTOs_structs.hpp"
#include "Palia_structs.hpp"
#include "ValeriaUI_structs.hpp"
#include "InputCore_structs.hpp"
#include "SlateCore_structs.hpp"
#include "EnhancedInput_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "S6UICommonWidgets_structs.hpp"
#include "S6PlatformServiceSubsystems_structs.hpp"
#include "FieldNotification_structs.hpp"
#include "UMG_structs.hpp"
#include "S6Core_structs.hpp"


namespace SDK::Params
{

// Function ValeriaUI.BaitUserWidget.OnBaitSelected
// 0x0060 (0x0060 - 0x0000)
struct BaitUserWidget_OnBaitSelected final
{
public:
	struct FValeriaItem                           baitItem;                                          // 0x0000(0x0060)(Parm, NativeAccessSpecifierPublic)
};
static_assert(alignof(BaitUserWidget_OnBaitSelected) == 0x000008, "Wrong alignment on BaitUserWidget_OnBaitSelected");
static_assert(sizeof(BaitUserWidget_OnBaitSelected) == 0x000060, "Wrong size on BaitUserWidget_OnBaitSelected");
static_assert(offsetof(BaitUserWidget_OnBaitSelected, baitItem) == 0x000000, "Member 'BaitUserWidget_OnBaitSelected::baitItem' has a wrong offset!");

// Function ValeriaUI.BaitUserWidget.OnShown
// 0x0001 (0x0001 - 0x0000)
struct BaitUserWidget_OnShown final
{
public:
	EAmmoType                                     AmmoType;                                          // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(BaitUserWidget_OnShown) == 0x000001, "Wrong alignment on BaitUserWidget_OnShown");
static_assert(sizeof(BaitUserWidget_OnShown) == 0x000001, "Wrong size on BaitUserWidget_OnShown");
static_assert(offsetof(BaitUserWidget_OnShown, AmmoType) == 0x000000, "Member 'BaitUserWidget_OnShown::AmmoType' has a wrong offset!");

// Function ValeriaUI.BaitUserWidget.ShowAmmoType
// 0x0001 (0x0001 - 0x0000)
struct BaitUserWidget_ShowAmmoType final
{
public:
	EAmmoType                                     AmmoType;                                          // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(BaitUserWidget_ShowAmmoType) == 0x000001, "Wrong alignment on BaitUserWidget_ShowAmmoType");
static_assert(sizeof(BaitUserWidget_ShowAmmoType) == 0x000001, "Wrong size on BaitUserWidget_ShowAmmoType");
static_assert(offsetof(BaitUserWidget_ShowAmmoType, AmmoType) == 0x000000, "Member 'BaitUserWidget_ShowAmmoType::AmmoType' has a wrong offset!");

// Function ValeriaUI.VAL_LocalizationUtils.GetGreetingLanguageSuffix
// 0x0010 (0x0010 - 0x0000)
struct VAL_LocalizationUtils_GetGreetingLanguageSuffix final
{
public:
	class FString                                 ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(VAL_LocalizationUtils_GetGreetingLanguageSuffix) == 0x000008, "Wrong alignment on VAL_LocalizationUtils_GetGreetingLanguageSuffix");
static_assert(sizeof(VAL_LocalizationUtils_GetGreetingLanguageSuffix) == 0x000010, "Wrong size on VAL_LocalizationUtils_GetGreetingLanguageSuffix");
static_assert(offsetof(VAL_LocalizationUtils_GetGreetingLanguageSuffix, ReturnValue) == 0x000000, "Member 'VAL_LocalizationUtils_GetGreetingLanguageSuffix::ReturnValue' has a wrong offset!");

// Function ValeriaUI.VAL_LocalizationUtils.GetGreetingStorageLocation
// 0x0010 (0x0010 - 0x0000)
struct VAL_LocalizationUtils_GetGreetingStorageLocation final
{
public:
	class FString                                 ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(VAL_LocalizationUtils_GetGreetingStorageLocation) == 0x000008, "Wrong alignment on VAL_LocalizationUtils_GetGreetingStorageLocation");
static_assert(sizeof(VAL_LocalizationUtils_GetGreetingStorageLocation) == 0x000010, "Wrong size on VAL_LocalizationUtils_GetGreetingStorageLocation");
static_assert(offsetof(VAL_LocalizationUtils_GetGreetingStorageLocation, ReturnValue) == 0x000000, "Member 'VAL_LocalizationUtils_GetGreetingStorageLocation::ReturnValue' has a wrong offset!");

// Function ValeriaUI.BookViewerWidget.MarkPageAsRead
// 0x0004 (0x0004 - 0x0000)
struct BookViewerWidget_MarkPageAsRead final
{
public:
	int32                                         Param_Index;                                       // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(BookViewerWidget_MarkPageAsRead) == 0x000004, "Wrong alignment on BookViewerWidget_MarkPageAsRead");
static_assert(sizeof(BookViewerWidget_MarkPageAsRead) == 0x000004, "Wrong size on BookViewerWidget_MarkPageAsRead");
static_assert(offsetof(BookViewerWidget_MarkPageAsRead, Param_Index) == 0x000000, "Member 'BookViewerWidget_MarkPageAsRead::Param_Index' has a wrong offset!");

// Function ValeriaUI.BookViewerWidget.GetContentForPage
// 0x0020 (0x0020 - 0x0000)
struct BookViewerWidget_GetContentForPage final
{
public:
	int32                                         Param_Index;                                       // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2CD0[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   ReturnValue;                                       // 0x0008(0x0018)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(BookViewerWidget_GetContentForPage) == 0x000008, "Wrong alignment on BookViewerWidget_GetContentForPage");
static_assert(sizeof(BookViewerWidget_GetContentForPage) == 0x000020, "Wrong size on BookViewerWidget_GetContentForPage");
static_assert(offsetof(BookViewerWidget_GetContentForPage, Param_Index) == 0x000000, "Member 'BookViewerWidget_GetContentForPage::Param_Index' has a wrong offset!");
static_assert(offsetof(BookViewerWidget_GetContentForPage, ReturnValue) == 0x000008, "Member 'BookViewerWidget_GetContentForPage::ReturnValue' has a wrong offset!");

// Function ValeriaUI.BookViewerWidget.GetNumberOfPages
// 0x0004 (0x0004 - 0x0000)
struct BookViewerWidget_GetNumberOfPages final
{
public:
	int32                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(BookViewerWidget_GetNumberOfPages) == 0x000004, "Wrong alignment on BookViewerWidget_GetNumberOfPages");
static_assert(sizeof(BookViewerWidget_GetNumberOfPages) == 0x000004, "Wrong size on BookViewerWidget_GetNumberOfPages");
static_assert(offsetof(BookViewerWidget_GetNumberOfPages, ReturnValue) == 0x000000, "Member 'BookViewerWidget_GetNumberOfPages::ReturnValue' has a wrong offset!");

// Function ValeriaUI.BookViewerWidget.GetSubTitle
// 0x0018 (0x0018 - 0x0000)
struct BookViewerWidget_GetSubTitle final
{
public:
	class FText                                   ReturnValue;                                       // 0x0000(0x0018)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(BookViewerWidget_GetSubTitle) == 0x000008, "Wrong alignment on BookViewerWidget_GetSubTitle");
static_assert(sizeof(BookViewerWidget_GetSubTitle) == 0x000018, "Wrong size on BookViewerWidget_GetSubTitle");
static_assert(offsetof(BookViewerWidget_GetSubTitle, ReturnValue) == 0x000000, "Member 'BookViewerWidget_GetSubTitle::ReturnValue' has a wrong offset!");

// Function ValeriaUI.BookViewerWidget.GetTitle
// 0x0018 (0x0018 - 0x0000)
struct BookViewerWidget_GetTitle final
{
public:
	class FText                                   ReturnValue;                                       // 0x0000(0x0018)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(BookViewerWidget_GetTitle) == 0x000008, "Wrong alignment on BookViewerWidget_GetTitle");
static_assert(sizeof(BookViewerWidget_GetTitle) == 0x000018, "Wrong size on BookViewerWidget_GetTitle");
static_assert(offsetof(BookViewerWidget_GetTitle, ReturnValue) == 0x000000, "Member 'BookViewerWidget_GetTitle::ReturnValue' has a wrong offset!");

// Function ValeriaUI.DetailUserWidget.UpdateDetail
// 0x0030 (0x0030 - 0x0000)
struct DetailUserWidget_UpdateDetail final
{
public:
	TSoftObjectPtr<class UVAL_ItemTypeDefinitionAsset> ItemType;                                          // 0x0000(0x0028)(ConstParm, Parm, OutParm, ReferenceParm, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0028(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2CD2[0x7];                                     // 0x0029(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(DetailUserWidget_UpdateDetail) == 0x000008, "Wrong alignment on DetailUserWidget_UpdateDetail");
static_assert(sizeof(DetailUserWidget_UpdateDetail) == 0x000030, "Wrong size on DetailUserWidget_UpdateDetail");
static_assert(offsetof(DetailUserWidget_UpdateDetail, ItemType) == 0x000000, "Member 'DetailUserWidget_UpdateDetail::ItemType' has a wrong offset!");
static_assert(offsetof(DetailUserWidget_UpdateDetail, ReturnValue) == 0x000028, "Member 'DetailUserWidget_UpdateDetail::ReturnValue' has a wrong offset!");

// DelegateFunction ValeriaUI.VALUI_ListView_Styled.OnListItemsChanged__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct VALUI_ListView_Styled_OnListItemsChanged__DelegateSignature final
{
public:
	TArray<class UObject*>                        AddedItems;                                        // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	TArray<class UObject*>                        RemovedItems;                                      // 0x0010(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(VALUI_ListView_Styled_OnListItemsChanged__DelegateSignature) == 0x000008, "Wrong alignment on VALUI_ListView_Styled_OnListItemsChanged__DelegateSignature");
static_assert(sizeof(VALUI_ListView_Styled_OnListItemsChanged__DelegateSignature) == 0x000020, "Wrong size on VALUI_ListView_Styled_OnListItemsChanged__DelegateSignature");
static_assert(offsetof(VALUI_ListView_Styled_OnListItemsChanged__DelegateSignature, AddedItems) == 0x000000, "Member 'VALUI_ListView_Styled_OnListItemsChanged__DelegateSignature::AddedItems' has a wrong offset!");
static_assert(offsetof(VALUI_ListView_Styled_OnListItemsChanged__DelegateSignature, RemovedItems) == 0x000010, "Member 'VALUI_ListView_Styled_OnListItemsChanged__DelegateSignature::RemovedItems' has a wrong offset!");

// DelegateFunction ValeriaUI.VALUI_ListView_Styled.OnListItemSelectionChangedWithInputTypeDynamic__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct VALUI_ListView_Styled_OnListItemSelectionChangedWithInputTypeDynamic__DelegateSignature final
{
public:
	class UObject*                                Item;                                              // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIsSelected;                                       // 0x0008(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ESelectInfo                                   SelectType;                                        // 0x0009(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2CD6[0x6];                                     // 0x000A(0x0006)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(VALUI_ListView_Styled_OnListItemSelectionChangedWithInputTypeDynamic__DelegateSignature) == 0x000008, "Wrong alignment on VALUI_ListView_Styled_OnListItemSelectionChangedWithInputTypeDynamic__DelegateSignature");
static_assert(sizeof(VALUI_ListView_Styled_OnListItemSelectionChangedWithInputTypeDynamic__DelegateSignature) == 0x000010, "Wrong size on VALUI_ListView_Styled_OnListItemSelectionChangedWithInputTypeDynamic__DelegateSignature");
static_assert(offsetof(VALUI_ListView_Styled_OnListItemSelectionChangedWithInputTypeDynamic__DelegateSignature, Item) == 0x000000, "Member 'VALUI_ListView_Styled_OnListItemSelectionChangedWithInputTypeDynamic__DelegateSignature::Item' has a wrong offset!");
static_assert(offsetof(VALUI_ListView_Styled_OnListItemSelectionChangedWithInputTypeDynamic__DelegateSignature, bIsSelected) == 0x000008, "Member 'VALUI_ListView_Styled_OnListItemSelectionChangedWithInputTypeDynamic__DelegateSignature::bIsSelected' has a wrong offset!");
static_assert(offsetof(VALUI_ListView_Styled_OnListItemSelectionChangedWithInputTypeDynamic__DelegateSignature, SelectType) == 0x000009, "Member 'VALUI_ListView_Styled_OnListItemSelectionChangedWithInputTypeDynamic__DelegateSignature::SelectType' has a wrong offset!");

// Function ValeriaUI.VALUI_ListView_Styled.ResetPoolAndSetListItems
// 0x0010 (0x0010 - 0x0000)
struct VALUI_ListView_Styled_ResetPoolAndSetListItems final
{
public:
	TArray<class UObject*>                        InListItems;                                       // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(VALUI_ListView_Styled_ResetPoolAndSetListItems) == 0x000008, "Wrong alignment on VALUI_ListView_Styled_ResetPoolAndSetListItems");
static_assert(sizeof(VALUI_ListView_Styled_ResetPoolAndSetListItems) == 0x000010, "Wrong size on VALUI_ListView_Styled_ResetPoolAndSetListItems");
static_assert(offsetof(VALUI_ListView_Styled_ResetPoolAndSetListItems, InListItems) == 0x000000, "Member 'VALUI_ListView_Styled_ResetPoolAndSetListItems::InListItems' has a wrong offset!");

// Function ValeriaUI.VALUI_ListView_Styled.SetEntryWidgetClass
// 0x0008 (0x0008 - 0x0000)
struct VALUI_ListView_Styled_SetEntryWidgetClass final
{
public:
	TSubclassOf<class UUserWidget>                NewWidgetClass;                                    // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(VALUI_ListView_Styled_SetEntryWidgetClass) == 0x000008, "Wrong alignment on VALUI_ListView_Styled_SetEntryWidgetClass");
static_assert(sizeof(VALUI_ListView_Styled_SetEntryWidgetClass) == 0x000008, "Wrong size on VALUI_ListView_Styled_SetEntryWidgetClass");
static_assert(offsetof(VALUI_ListView_Styled_SetEntryWidgetClass, NewWidgetClass) == 0x000000, "Member 'VALUI_ListView_Styled_SetEntryWidgetClass::NewWidgetClass' has a wrong offset!");

// DelegateFunction ValeriaUI.VALUI_ListView_Styled.VALUI_OnListViewUserMouseWheelScrolled__DelegateSignature
// 0x0004 (0x0004 - 0x0000)
struct VALUI_ListView_Styled_VALUI_OnListViewUserMouseWheelScrolled__DelegateSignature final
{
public:
	float                                         DesiredOffset;                                     // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(VALUI_ListView_Styled_VALUI_OnListViewUserMouseWheelScrolled__DelegateSignature) == 0x000004, "Wrong alignment on VALUI_ListView_Styled_VALUI_OnListViewUserMouseWheelScrolled__DelegateSignature");
static_assert(sizeof(VALUI_ListView_Styled_VALUI_OnListViewUserMouseWheelScrolled__DelegateSignature) == 0x000004, "Wrong size on VALUI_ListView_Styled_VALUI_OnListViewUserMouseWheelScrolled__DelegateSignature");
static_assert(offsetof(VALUI_ListView_Styled_VALUI_OnListViewUserMouseWheelScrolled__DelegateSignature, DesiredOffset) == 0x000000, "Member 'VALUI_ListView_Styled_VALUI_OnListViewUserMouseWheelScrolled__DelegateSignature::DesiredOffset' has a wrong offset!");

// DelegateFunction ValeriaUI.VALUI_ListView_Styled.VALUI_OnListViewUserScrolled__DelegateSignature
// 0x0004 (0x0004 - 0x0000)
struct VALUI_ListView_Styled_VALUI_OnListViewUserScrolled__DelegateSignature final
{
public:
	float                                         ScrollFraction;                                    // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(VALUI_ListView_Styled_VALUI_OnListViewUserScrolled__DelegateSignature) == 0x000004, "Wrong alignment on VALUI_ListView_Styled_VALUI_OnListViewUserScrolled__DelegateSignature");
static_assert(sizeof(VALUI_ListView_Styled_VALUI_OnListViewUserScrolled__DelegateSignature) == 0x000004, "Wrong size on VALUI_ListView_Styled_VALUI_OnListViewUserScrolled__DelegateSignature");
static_assert(offsetof(VALUI_ListView_Styled_VALUI_OnListViewUserScrolled__DelegateSignature, ScrollFraction) == 0x000000, "Member 'VALUI_ListView_Styled_VALUI_OnListViewUserScrolled__DelegateSignature::ScrollFraction' has a wrong offset!");

// Function ValeriaUI.VALUI_ListView_Styled.GetItemsWithinRange
// 0x0018 (0x0018 - 0x0000)
struct VALUI_ListView_Styled_GetItemsWithinRange final
{
public:
	int32                                         StartingIndex;                                     // 0x0000(0x0004)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Range;                                             // 0x0004(0x0004)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UObject*>                        ReturnValue;                                       // 0x0008(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(VALUI_ListView_Styled_GetItemsWithinRange) == 0x000008, "Wrong alignment on VALUI_ListView_Styled_GetItemsWithinRange");
static_assert(sizeof(VALUI_ListView_Styled_GetItemsWithinRange) == 0x000018, "Wrong size on VALUI_ListView_Styled_GetItemsWithinRange");
static_assert(offsetof(VALUI_ListView_Styled_GetItemsWithinRange, StartingIndex) == 0x000000, "Member 'VALUI_ListView_Styled_GetItemsWithinRange::StartingIndex' has a wrong offset!");
static_assert(offsetof(VALUI_ListView_Styled_GetItemsWithinRange, Range) == 0x000004, "Member 'VALUI_ListView_Styled_GetItemsWithinRange::Range' has a wrong offset!");
static_assert(offsetof(VALUI_ListView_Styled_GetItemsWithinRange, ReturnValue) == 0x000008, "Member 'VALUI_ListView_Styled_GetItemsWithinRange::ReturnValue' has a wrong offset!");

// Function ValeriaUI.VALUI_ListView_Styled.GetScrollbarDistanceFromBottom
// 0x0004 (0x0004 - 0x0000)
struct VALUI_ListView_Styled_GetScrollbarDistanceFromBottom final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(VALUI_ListView_Styled_GetScrollbarDistanceFromBottom) == 0x000004, "Wrong alignment on VALUI_ListView_Styled_GetScrollbarDistanceFromBottom");
static_assert(sizeof(VALUI_ListView_Styled_GetScrollbarDistanceFromBottom) == 0x000004, "Wrong size on VALUI_ListView_Styled_GetScrollbarDistanceFromBottom");
static_assert(offsetof(VALUI_ListView_Styled_GetScrollbarDistanceFromBottom, ReturnValue) == 0x000000, "Member 'VALUI_ListView_Styled_GetScrollbarDistanceFromBottom::ReturnValue' has a wrong offset!");

// Function ValeriaUI.VALUI_ListView_Styled.ShouldScrollBarBeVisible
// 0x0001 (0x0001 - 0x0000)
struct VALUI_ListView_Styled_ShouldScrollBarBeVisible final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(VALUI_ListView_Styled_ShouldScrollBarBeVisible) == 0x000001, "Wrong alignment on VALUI_ListView_Styled_ShouldScrollBarBeVisible");
static_assert(sizeof(VALUI_ListView_Styled_ShouldScrollBarBeVisible) == 0x000001, "Wrong size on VALUI_ListView_Styled_ShouldScrollBarBeVisible");
static_assert(offsetof(VALUI_ListView_Styled_ShouldScrollBarBeVisible, ReturnValue) == 0x000000, "Member 'VALUI_ListView_Styled_ShouldScrollBarBeVisible::ReturnValue' has a wrong offset!");

// Function ValeriaUI.VALUI_TileView_Styled.SetEntryHeight
// 0x0004 (0x0004 - 0x0000)
struct VALUI_TileView_Styled_SetEntryHeight final
{
public:
	float                                         NewHeight;                                         // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(VALUI_TileView_Styled_SetEntryHeight) == 0x000004, "Wrong alignment on VALUI_TileView_Styled_SetEntryHeight");
static_assert(sizeof(VALUI_TileView_Styled_SetEntryHeight) == 0x000004, "Wrong size on VALUI_TileView_Styled_SetEntryHeight");
static_assert(offsetof(VALUI_TileView_Styled_SetEntryHeight, NewHeight) == 0x000000, "Member 'VALUI_TileView_Styled_SetEntryHeight::NewHeight' has a wrong offset!");

// Function ValeriaUI.VALUI_TileView_Styled.SetEntryWidth
// 0x0004 (0x0004 - 0x0000)
struct VALUI_TileView_Styled_SetEntryWidth final
{
public:
	float                                         NewWidth;                                          // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(VALUI_TileView_Styled_SetEntryWidth) == 0x000004, "Wrong alignment on VALUI_TileView_Styled_SetEntryWidth");
static_assert(sizeof(VALUI_TileView_Styled_SetEntryWidth) == 0x000004, "Wrong size on VALUI_TileView_Styled_SetEntryWidth");
static_assert(offsetof(VALUI_TileView_Styled_SetEntryWidth, NewWidth) == 0x000000, "Member 'VALUI_TileView_Styled_SetEntryWidth::NewWidth' has a wrong offset!");

// Function ValeriaUI.VALUI_TileView_Styled.GetEntryHeight
// 0x0004 (0x0004 - 0x0000)
struct VALUI_TileView_Styled_GetEntryHeight final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(VALUI_TileView_Styled_GetEntryHeight) == 0x000004, "Wrong alignment on VALUI_TileView_Styled_GetEntryHeight");
static_assert(sizeof(VALUI_TileView_Styled_GetEntryHeight) == 0x000004, "Wrong size on VALUI_TileView_Styled_GetEntryHeight");
static_assert(offsetof(VALUI_TileView_Styled_GetEntryHeight, ReturnValue) == 0x000000, "Member 'VALUI_TileView_Styled_GetEntryHeight::ReturnValue' has a wrong offset!");

// Function ValeriaUI.VALUI_TileView_Styled.GetEntryWidth
// 0x0004 (0x0004 - 0x0000)
struct VALUI_TileView_Styled_GetEntryWidth final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(VALUI_TileView_Styled_GetEntryWidth) == 0x000004, "Wrong alignment on VALUI_TileView_Styled_GetEntryWidth");
static_assert(sizeof(VALUI_TileView_Styled_GetEntryWidth) == 0x000004, "Wrong size on VALUI_TileView_Styled_GetEntryWidth");
static_assert(offsetof(VALUI_TileView_Styled_GetEntryWidth, ReturnValue) == 0x000000, "Member 'VALUI_TileView_Styled_GetEntryWidth::ReturnValue' has a wrong offset!");

// Function ValeriaUI.HeadlessSteamAccountFlowBase.GetErrorMessageFromResponse
// 0x0020 (0x0020 - 0x0000)
struct HeadlessSteamAccountFlowBase_GetErrorMessageFromResponse final
{
public:
	class FString                                 Response;                                          // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 ReturnValue;                                       // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(HeadlessSteamAccountFlowBase_GetErrorMessageFromResponse) == 0x000008, "Wrong alignment on HeadlessSteamAccountFlowBase_GetErrorMessageFromResponse");
static_assert(sizeof(HeadlessSteamAccountFlowBase_GetErrorMessageFromResponse) == 0x000020, "Wrong size on HeadlessSteamAccountFlowBase_GetErrorMessageFromResponse");
static_assert(offsetof(HeadlessSteamAccountFlowBase_GetErrorMessageFromResponse, Response) == 0x000000, "Member 'HeadlessSteamAccountFlowBase_GetErrorMessageFromResponse::Response' has a wrong offset!");
static_assert(offsetof(HeadlessSteamAccountFlowBase_GetErrorMessageFromResponse, ReturnValue) == 0x000010, "Member 'HeadlessSteamAccountFlowBase_GetErrorMessageFromResponse::ReturnValue' has a wrong offset!");

// Function ValeriaUI.HeadlessSteamAccountFlowBase.IsErrorRetriable
// 0x0020 (0x0020 - 0x0000)
struct HeadlessSteamAccountFlowBase_IsErrorRetriable final
{
public:
	int32                                         Code;                                              // 0x0000(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2CD8[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Message;                                           // 0x0008(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2CD9[0x7];                                     // 0x0019(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(HeadlessSteamAccountFlowBase_IsErrorRetriable) == 0x000008, "Wrong alignment on HeadlessSteamAccountFlowBase_IsErrorRetriable");
static_assert(sizeof(HeadlessSteamAccountFlowBase_IsErrorRetriable) == 0x000020, "Wrong size on HeadlessSteamAccountFlowBase_IsErrorRetriable");
static_assert(offsetof(HeadlessSteamAccountFlowBase_IsErrorRetriable, Code) == 0x000000, "Member 'HeadlessSteamAccountFlowBase_IsErrorRetriable::Code' has a wrong offset!");
static_assert(offsetof(HeadlessSteamAccountFlowBase_IsErrorRetriable, Message) == 0x000008, "Member 'HeadlessSteamAccountFlowBase_IsErrorRetriable::Message' has a wrong offset!");
static_assert(offsetof(HeadlessSteamAccountFlowBase_IsErrorRetriable, ReturnValue) == 0x000018, "Member 'HeadlessSteamAccountFlowBase_IsErrorRetriable::ReturnValue' has a wrong offset!");

// Function ValeriaUI.HeadlessSteamAccountFlowBase.LoginErrorMessage
// 0x0030 (0x0030 - 0x0000)
struct HeadlessSteamAccountFlowBase_LoginErrorMessage final
{
public:
	int32                                         Code;                                              // 0x0000(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2CDA[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Message;                                           // 0x0008(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FText                                   ReturnValue;                                       // 0x0018(0x0018)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(HeadlessSteamAccountFlowBase_LoginErrorMessage) == 0x000008, "Wrong alignment on HeadlessSteamAccountFlowBase_LoginErrorMessage");
static_assert(sizeof(HeadlessSteamAccountFlowBase_LoginErrorMessage) == 0x000030, "Wrong size on HeadlessSteamAccountFlowBase_LoginErrorMessage");
static_assert(offsetof(HeadlessSteamAccountFlowBase_LoginErrorMessage, Code) == 0x000000, "Member 'HeadlessSteamAccountFlowBase_LoginErrorMessage::Code' has a wrong offset!");
static_assert(offsetof(HeadlessSteamAccountFlowBase_LoginErrorMessage, Message) == 0x000008, "Member 'HeadlessSteamAccountFlowBase_LoginErrorMessage::Message' has a wrong offset!");
static_assert(offsetof(HeadlessSteamAccountFlowBase_LoginErrorMessage, ReturnValue) == 0x000018, "Member 'HeadlessSteamAccountFlowBase_LoginErrorMessage::ReturnValue' has a wrong offset!");

// Function ValeriaUI.HeadlessSteamAccountFlowBase.OnPlatformLoggedInFailure
// 0x0018 (0x0018 - 0x0000)
struct HeadlessSteamAccountFlowBase_OnPlatformLoggedInFailure final
{
public:
	class FString                                 ErrorMessage;                                      // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ErrorCode;                                         // 0x0010(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2CDB[0x4];                                     // 0x0014(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(HeadlessSteamAccountFlowBase_OnPlatformLoggedInFailure) == 0x000008, "Wrong alignment on HeadlessSteamAccountFlowBase_OnPlatformLoggedInFailure");
static_assert(sizeof(HeadlessSteamAccountFlowBase_OnPlatformLoggedInFailure) == 0x000018, "Wrong size on HeadlessSteamAccountFlowBase_OnPlatformLoggedInFailure");
static_assert(offsetof(HeadlessSteamAccountFlowBase_OnPlatformLoggedInFailure, ErrorMessage) == 0x000000, "Member 'HeadlessSteamAccountFlowBase_OnPlatformLoggedInFailure::ErrorMessage' has a wrong offset!");
static_assert(offsetof(HeadlessSteamAccountFlowBase_OnPlatformLoggedInFailure, ErrorCode) == 0x000010, "Member 'HeadlessSteamAccountFlowBase_OnPlatformLoggedInFailure::ErrorCode' has a wrong offset!");

// Function ValeriaUI.HeadlessSteamAccountFlowBase.OnPlatformLoggedInFailure2
// 0x0018 (0x0018 - 0x0000)
struct HeadlessSteamAccountFlowBase_OnPlatformLoggedInFailure2 final
{
public:
	class FString                                 ErrorMessage;                                      // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ErrorCode;                                         // 0x0010(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2CDC[0x4];                                     // 0x0014(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(HeadlessSteamAccountFlowBase_OnPlatformLoggedInFailure2) == 0x000008, "Wrong alignment on HeadlessSteamAccountFlowBase_OnPlatformLoggedInFailure2");
static_assert(sizeof(HeadlessSteamAccountFlowBase_OnPlatformLoggedInFailure2) == 0x000018, "Wrong size on HeadlessSteamAccountFlowBase_OnPlatformLoggedInFailure2");
static_assert(offsetof(HeadlessSteamAccountFlowBase_OnPlatformLoggedInFailure2, ErrorMessage) == 0x000000, "Member 'HeadlessSteamAccountFlowBase_OnPlatformLoggedInFailure2::ErrorMessage' has a wrong offset!");
static_assert(offsetof(HeadlessSteamAccountFlowBase_OnPlatformLoggedInFailure2, ErrorCode) == 0x000010, "Member 'HeadlessSteamAccountFlowBase_OnPlatformLoggedInFailure2::ErrorCode' has a wrong offset!");

// Function ValeriaUI.HeadlessSteamAccountFlowBase.OnPlatformRegisterFailure
// 0x0018 (0x0018 - 0x0000)
struct HeadlessSteamAccountFlowBase_OnPlatformRegisterFailure final
{
public:
	class FString                                 ErrorMessage;                                      // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ErrorCode;                                         // 0x0010(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2CDD[0x4];                                     // 0x0014(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(HeadlessSteamAccountFlowBase_OnPlatformRegisterFailure) == 0x000008, "Wrong alignment on HeadlessSteamAccountFlowBase_OnPlatformRegisterFailure");
static_assert(sizeof(HeadlessSteamAccountFlowBase_OnPlatformRegisterFailure) == 0x000018, "Wrong size on HeadlessSteamAccountFlowBase_OnPlatformRegisterFailure");
static_assert(offsetof(HeadlessSteamAccountFlowBase_OnPlatformRegisterFailure, ErrorMessage) == 0x000000, "Member 'HeadlessSteamAccountFlowBase_OnPlatformRegisterFailure::ErrorMessage' has a wrong offset!");
static_assert(offsetof(HeadlessSteamAccountFlowBase_OnPlatformRegisterFailure, ErrorCode) == 0x000010, "Member 'HeadlessSteamAccountFlowBase_OnPlatformRegisterFailure::ErrorCode' has a wrong offset!");

// Function ValeriaUI.HeadlessSteamAccountFlowBase.OnPlatformRegisterFailure2
// 0x0018 (0x0018 - 0x0000)
struct HeadlessSteamAccountFlowBase_OnPlatformRegisterFailure2 final
{
public:
	class FString                                 ErrorMessage;                                      // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ErrorCode;                                         // 0x0010(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2CDE[0x4];                                     // 0x0014(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(HeadlessSteamAccountFlowBase_OnPlatformRegisterFailure2) == 0x000008, "Wrong alignment on HeadlessSteamAccountFlowBase_OnPlatformRegisterFailure2");
static_assert(sizeof(HeadlessSteamAccountFlowBase_OnPlatformRegisterFailure2) == 0x000018, "Wrong size on HeadlessSteamAccountFlowBase_OnPlatformRegisterFailure2");
static_assert(offsetof(HeadlessSteamAccountFlowBase_OnPlatformRegisterFailure2, ErrorMessage) == 0x000000, "Member 'HeadlessSteamAccountFlowBase_OnPlatformRegisterFailure2::ErrorMessage' has a wrong offset!");
static_assert(offsetof(HeadlessSteamAccountFlowBase_OnPlatformRegisterFailure2, ErrorCode) == 0x000010, "Member 'HeadlessSteamAccountFlowBase_OnPlatformRegisterFailure2::ErrorCode' has a wrong offset!");

// Function ValeriaUI.HeadlessSteamAccountFlowBase.RegistrationErrorMessage
// 0x0030 (0x0030 - 0x0000)
struct HeadlessSteamAccountFlowBase_RegistrationErrorMessage final
{
public:
	int32                                         Code;                                              // 0x0000(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2CDF[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Message;                                           // 0x0008(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FText                                   ReturnValue;                                       // 0x0018(0x0018)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(HeadlessSteamAccountFlowBase_RegistrationErrorMessage) == 0x000008, "Wrong alignment on HeadlessSteamAccountFlowBase_RegistrationErrorMessage");
static_assert(sizeof(HeadlessSteamAccountFlowBase_RegistrationErrorMessage) == 0x000030, "Wrong size on HeadlessSteamAccountFlowBase_RegistrationErrorMessage");
static_assert(offsetof(HeadlessSteamAccountFlowBase_RegistrationErrorMessage, Code) == 0x000000, "Member 'HeadlessSteamAccountFlowBase_RegistrationErrorMessage::Code' has a wrong offset!");
static_assert(offsetof(HeadlessSteamAccountFlowBase_RegistrationErrorMessage, Message) == 0x000008, "Member 'HeadlessSteamAccountFlowBase_RegistrationErrorMessage::Message' has a wrong offset!");
static_assert(offsetof(HeadlessSteamAccountFlowBase_RegistrationErrorMessage, ReturnValue) == 0x000018, "Member 'HeadlessSteamAccountFlowBase_RegistrationErrorMessage::ReturnValue' has a wrong offset!");

// Function ValeriaUI.LinkSteamAccountFlowBase.GetErrorMessageFromResponse
// 0x0020 (0x0020 - 0x0000)
struct LinkSteamAccountFlowBase_GetErrorMessageFromResponse final
{
public:
	class FString                                 Response;                                          // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 ReturnValue;                                       // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(LinkSteamAccountFlowBase_GetErrorMessageFromResponse) == 0x000008, "Wrong alignment on LinkSteamAccountFlowBase_GetErrorMessageFromResponse");
static_assert(sizeof(LinkSteamAccountFlowBase_GetErrorMessageFromResponse) == 0x000020, "Wrong size on LinkSteamAccountFlowBase_GetErrorMessageFromResponse");
static_assert(offsetof(LinkSteamAccountFlowBase_GetErrorMessageFromResponse, Response) == 0x000000, "Member 'LinkSteamAccountFlowBase_GetErrorMessageFromResponse::Response' has a wrong offset!");
static_assert(offsetof(LinkSteamAccountFlowBase_GetErrorMessageFromResponse, ReturnValue) == 0x000010, "Member 'LinkSteamAccountFlowBase_GetErrorMessageFromResponse::ReturnValue' has a wrong offset!");

// Function ValeriaUI.LinkSteamAccountFlowBase.LinkErrorMessage
// 0x0030 (0x0030 - 0x0000)
struct LinkSteamAccountFlowBase_LinkErrorMessage final
{
public:
	int32                                         Code;                                              // 0x0000(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2CE0[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Message;                                           // 0x0008(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FText                                   ReturnValue;                                       // 0x0018(0x0018)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(LinkSteamAccountFlowBase_LinkErrorMessage) == 0x000008, "Wrong alignment on LinkSteamAccountFlowBase_LinkErrorMessage");
static_assert(sizeof(LinkSteamAccountFlowBase_LinkErrorMessage) == 0x000030, "Wrong size on LinkSteamAccountFlowBase_LinkErrorMessage");
static_assert(offsetof(LinkSteamAccountFlowBase_LinkErrorMessage, Code) == 0x000000, "Member 'LinkSteamAccountFlowBase_LinkErrorMessage::Code' has a wrong offset!");
static_assert(offsetof(LinkSteamAccountFlowBase_LinkErrorMessage, Message) == 0x000008, "Member 'LinkSteamAccountFlowBase_LinkErrorMessage::Message' has a wrong offset!");
static_assert(offsetof(LinkSteamAccountFlowBase_LinkErrorMessage, ReturnValue) == 0x000018, "Member 'LinkSteamAccountFlowBase_LinkErrorMessage::ReturnValue' has a wrong offset!");

// Function ValeriaUI.LinkSteamAccountFlowBase.OnPlatformLinkFailure
// 0x0018 (0x0018 - 0x0000)
struct LinkSteamAccountFlowBase_OnPlatformLinkFailure final
{
public:
	class FString                                 ErrorMessage;                                      // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ErrorCode;                                         // 0x0010(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2CE1[0x4];                                     // 0x0014(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(LinkSteamAccountFlowBase_OnPlatformLinkFailure) == 0x000008, "Wrong alignment on LinkSteamAccountFlowBase_OnPlatformLinkFailure");
static_assert(sizeof(LinkSteamAccountFlowBase_OnPlatformLinkFailure) == 0x000018, "Wrong size on LinkSteamAccountFlowBase_OnPlatformLinkFailure");
static_assert(offsetof(LinkSteamAccountFlowBase_OnPlatformLinkFailure, ErrorMessage) == 0x000000, "Member 'LinkSteamAccountFlowBase_OnPlatformLinkFailure::ErrorMessage' has a wrong offset!");
static_assert(offsetof(LinkSteamAccountFlowBase_OnPlatformLinkFailure, ErrorCode) == 0x000010, "Member 'LinkSteamAccountFlowBase_OnPlatformLinkFailure::ErrorCode' has a wrong offset!");

// Function ValeriaUI.LinkSteamAccountFlowBase.OnPlatformLinkFailure2
// 0x0018 (0x0018 - 0x0000)
struct LinkSteamAccountFlowBase_OnPlatformLinkFailure2 final
{
public:
	class FString                                 ErrorMessage;                                      // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ErrorCode;                                         // 0x0010(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2CE2[0x4];                                     // 0x0014(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(LinkSteamAccountFlowBase_OnPlatformLinkFailure2) == 0x000008, "Wrong alignment on LinkSteamAccountFlowBase_OnPlatformLinkFailure2");
static_assert(sizeof(LinkSteamAccountFlowBase_OnPlatformLinkFailure2) == 0x000018, "Wrong size on LinkSteamAccountFlowBase_OnPlatformLinkFailure2");
static_assert(offsetof(LinkSteamAccountFlowBase_OnPlatformLinkFailure2, ErrorMessage) == 0x000000, "Member 'LinkSteamAccountFlowBase_OnPlatformLinkFailure2::ErrorMessage' has a wrong offset!");
static_assert(offsetof(LinkSteamAccountFlowBase_OnPlatformLinkFailure2, ErrorCode) == 0x000010, "Member 'LinkSteamAccountFlowBase_OnPlatformLinkFailure2::ErrorCode' has a wrong offset!");

// Function ValeriaUI.LinkSteamAccountFlowBase.OnPlatformLoggedInFailure
// 0x0018 (0x0018 - 0x0000)
struct LinkSteamAccountFlowBase_OnPlatformLoggedInFailure final
{
public:
	class FString                                 ErrorMessage;                                      // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ErrorCode;                                         // 0x0010(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2CE3[0x4];                                     // 0x0014(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(LinkSteamAccountFlowBase_OnPlatformLoggedInFailure) == 0x000008, "Wrong alignment on LinkSteamAccountFlowBase_OnPlatformLoggedInFailure");
static_assert(sizeof(LinkSteamAccountFlowBase_OnPlatformLoggedInFailure) == 0x000018, "Wrong size on LinkSteamAccountFlowBase_OnPlatformLoggedInFailure");
static_assert(offsetof(LinkSteamAccountFlowBase_OnPlatformLoggedInFailure, ErrorMessage) == 0x000000, "Member 'LinkSteamAccountFlowBase_OnPlatformLoggedInFailure::ErrorMessage' has a wrong offset!");
static_assert(offsetof(LinkSteamAccountFlowBase_OnPlatformLoggedInFailure, ErrorCode) == 0x000010, "Member 'LinkSteamAccountFlowBase_OnPlatformLoggedInFailure::ErrorCode' has a wrong offset!");

// Function ValeriaUI.LinkSteamAccountFlowBase.OnPlatformLoggedInFailure2
// 0x0018 (0x0018 - 0x0000)
struct LinkSteamAccountFlowBase_OnPlatformLoggedInFailure2 final
{
public:
	class FString                                 ErrorMessage;                                      // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ErrorCode;                                         // 0x0010(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2CE4[0x4];                                     // 0x0014(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(LinkSteamAccountFlowBase_OnPlatformLoggedInFailure2) == 0x000008, "Wrong alignment on LinkSteamAccountFlowBase_OnPlatformLoggedInFailure2");
static_assert(sizeof(LinkSteamAccountFlowBase_OnPlatformLoggedInFailure2) == 0x000018, "Wrong size on LinkSteamAccountFlowBase_OnPlatformLoggedInFailure2");
static_assert(offsetof(LinkSteamAccountFlowBase_OnPlatformLoggedInFailure2, ErrorMessage) == 0x000000, "Member 'LinkSteamAccountFlowBase_OnPlatformLoggedInFailure2::ErrorMessage' has a wrong offset!");
static_assert(offsetof(LinkSteamAccountFlowBase_OnPlatformLoggedInFailure2, ErrorCode) == 0x000010, "Member 'LinkSteamAccountFlowBase_OnPlatformLoggedInFailure2::ErrorCode' has a wrong offset!");

// Function ValeriaUI.VALUI_LoadingScreenUserWidget.HandleOnPawnChanged
// 0x0008 (0x0008 - 0x0000)
struct VALUI_LoadingScreenUserWidget_HandleOnPawnChanged final
{
public:
	class APawn*                                  Pawn;                                              // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(VALUI_LoadingScreenUserWidget_HandleOnPawnChanged) == 0x000008, "Wrong alignment on VALUI_LoadingScreenUserWidget_HandleOnPawnChanged");
static_assert(sizeof(VALUI_LoadingScreenUserWidget_HandleOnPawnChanged) == 0x000008, "Wrong size on VALUI_LoadingScreenUserWidget_HandleOnPawnChanged");
static_assert(offsetof(VALUI_LoadingScreenUserWidget_HandleOnPawnChanged, Pawn) == 0x000000, "Member 'VALUI_LoadingScreenUserWidget_HandleOnPawnChanged::Pawn' has a wrong offset!");

// Function ValeriaUI.VALUI_LoadingScreenUserWidget.HandleSetBackgroundImage
// 0x0008 (0x0008 - 0x0000)
struct VALUI_LoadingScreenUserWidget_HandleSetBackgroundImage final
{
public:
	class UTexture2D*                             Texture;                                           // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(VALUI_LoadingScreenUserWidget_HandleSetBackgroundImage) == 0x000008, "Wrong alignment on VALUI_LoadingScreenUserWidget_HandleSetBackgroundImage");
static_assert(sizeof(VALUI_LoadingScreenUserWidget_HandleSetBackgroundImage) == 0x000008, "Wrong size on VALUI_LoadingScreenUserWidget_HandleSetBackgroundImage");
static_assert(offsetof(VALUI_LoadingScreenUserWidget_HandleSetBackgroundImage, Texture) == 0x000000, "Member 'VALUI_LoadingScreenUserWidget_HandleSetBackgroundImage::Texture' has a wrong offset!");

// Function ValeriaUI.VALUI_LoadingScreenUserWidget.HandleSetLoadingScreenTip
// 0x0030 (0x0030 - 0x0000)
struct VALUI_LoadingScreenUserWidget_HandleSetLoadingScreenTip final
{
public:
	struct FPaliaLoadingScreenTip                 Tip;                                               // 0x0000(0x0030)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(VALUI_LoadingScreenUserWidget_HandleSetLoadingScreenTip) == 0x000008, "Wrong alignment on VALUI_LoadingScreenUserWidget_HandleSetLoadingScreenTip");
static_assert(sizeof(VALUI_LoadingScreenUserWidget_HandleSetLoadingScreenTip) == 0x000030, "Wrong size on VALUI_LoadingScreenUserWidget_HandleSetLoadingScreenTip");
static_assert(offsetof(VALUI_LoadingScreenUserWidget_HandleSetLoadingScreenTip, Tip) == 0x000000, "Member 'VALUI_LoadingScreenUserWidget_HandleSetLoadingScreenTip::Tip' has a wrong offset!");

// Function ValeriaUI.MailboxViewerUserWidget.CanAllRewardsBeCollected
// 0x0008 (0x0008 - 0x0000)
struct MailboxViewerUserWidget_CanAllRewardsBeCollected final
{
public:
	int32                                         Param_Index;                                       // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2CE8[0x3];                                     // 0x0005(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(MailboxViewerUserWidget_CanAllRewardsBeCollected) == 0x000004, "Wrong alignment on MailboxViewerUserWidget_CanAllRewardsBeCollected");
static_assert(sizeof(MailboxViewerUserWidget_CanAllRewardsBeCollected) == 0x000008, "Wrong size on MailboxViewerUserWidget_CanAllRewardsBeCollected");
static_assert(offsetof(MailboxViewerUserWidget_CanAllRewardsBeCollected, Param_Index) == 0x000000, "Member 'MailboxViewerUserWidget_CanAllRewardsBeCollected::Param_Index' has a wrong offset!");
static_assert(offsetof(MailboxViewerUserWidget_CanAllRewardsBeCollected, ReturnValue) == 0x000004, "Member 'MailboxViewerUserWidget_CanAllRewardsBeCollected::ReturnValue' has a wrong offset!");

// Function ValeriaUI.MailboxViewerUserWidget.HideMessage
// 0x0004 (0x0004 - 0x0000)
struct MailboxViewerUserWidget_HideMessage final
{
public:
	int32                                         Param_Index;                                       // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MailboxViewerUserWidget_HideMessage) == 0x000004, "Wrong alignment on MailboxViewerUserWidget_HideMessage");
static_assert(sizeof(MailboxViewerUserWidget_HideMessage) == 0x000004, "Wrong size on MailboxViewerUserWidget_HideMessage");
static_assert(offsetof(MailboxViewerUserWidget_HideMessage, Param_Index) == 0x000000, "Member 'MailboxViewerUserWidget_HideMessage::Param_Index' has a wrong offset!");

// Function ValeriaUI.MailboxViewerUserWidget.MarkAsRead
// 0x0004 (0x0004 - 0x0000)
struct MailboxViewerUserWidget_MarkAsRead final
{
public:
	int32                                         Param_Index;                                       // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MailboxViewerUserWidget_MarkAsRead) == 0x000004, "Wrong alignment on MailboxViewerUserWidget_MarkAsRead");
static_assert(sizeof(MailboxViewerUserWidget_MarkAsRead) == 0x000004, "Wrong size on MailboxViewerUserWidget_MarkAsRead");
static_assert(offsetof(MailboxViewerUserWidget_MarkAsRead, Param_Index) == 0x000000, "Member 'MailboxViewerUserWidget_MarkAsRead::Param_Index' has a wrong offset!");

// Function ValeriaUI.MailboxViewerUserWidget.OnPlayerToPlayerMailFailed
// 0x0010 (0x0010 - 0x0000)
struct MailboxViewerUserWidget_OnPlayerToPlayerMailFailed final
{
public:
	class FString                                 Error;                                             // 0x0000(0x0010)(ConstParm, Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MailboxViewerUserWidget_OnPlayerToPlayerMailFailed) == 0x000008, "Wrong alignment on MailboxViewerUserWidget_OnPlayerToPlayerMailFailed");
static_assert(sizeof(MailboxViewerUserWidget_OnPlayerToPlayerMailFailed) == 0x000010, "Wrong size on MailboxViewerUserWidget_OnPlayerToPlayerMailFailed");
static_assert(offsetof(MailboxViewerUserWidget_OnPlayerToPlayerMailFailed, Error) == 0x000000, "Member 'MailboxViewerUserWidget_OnPlayerToPlayerMailFailed::Error' has a wrong offset!");

// Function ValeriaUI.MailboxViewerUserWidget.OnPlayerToPlayerMailSuccess
// 0x0010 (0x0010 - 0x0000)
struct MailboxViewerUserWidget_OnPlayerToPlayerMailSuccess final
{
public:
	struct FMailbox                               Mailbox;                                           // 0x0000(0x0010)(ConstParm, Parm, NativeAccessSpecifierPublic)
};
static_assert(alignof(MailboxViewerUserWidget_OnPlayerToPlayerMailSuccess) == 0x000008, "Wrong alignment on MailboxViewerUserWidget_OnPlayerToPlayerMailSuccess");
static_assert(sizeof(MailboxViewerUserWidget_OnPlayerToPlayerMailSuccess) == 0x000010, "Wrong size on MailboxViewerUserWidget_OnPlayerToPlayerMailSuccess");
static_assert(offsetof(MailboxViewerUserWidget_OnPlayerToPlayerMailSuccess, Mailbox) == 0x000000, "Member 'MailboxViewerUserWidget_OnPlayerToPlayerMailSuccess::Mailbox' has a wrong offset!");

// Function ValeriaUI.MailboxViewerUserWidget.OnVillagerMailChanged
// 0x0008 (0x0008 - 0x0000)
struct MailboxViewerUserWidget_OnVillagerMailChanged final
{
public:
	class UVillagerMailInboxComponent*            VillagerMail;                                      // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MailboxViewerUserWidget_OnVillagerMailChanged) == 0x000008, "Wrong alignment on MailboxViewerUserWidget_OnVillagerMailChanged");
static_assert(sizeof(MailboxViewerUserWidget_OnVillagerMailChanged) == 0x000008, "Wrong size on MailboxViewerUserWidget_OnVillagerMailChanged");
static_assert(offsetof(MailboxViewerUserWidget_OnVillagerMailChanged, VillagerMail) == 0x000000, "Member 'MailboxViewerUserWidget_OnVillagerMailChanged::VillagerMail' has a wrong offset!");

// Function ValeriaUI.MailboxViewerUserWidget.RefreshMailMessages
// 0x0001 (0x0001 - 0x0000)
struct MailboxViewerUserWidget_RefreshMailMessages final
{
public:
	bool                                          AllowRemoval;                                      // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MailboxViewerUserWidget_RefreshMailMessages) == 0x000001, "Wrong alignment on MailboxViewerUserWidget_RefreshMailMessages");
static_assert(sizeof(MailboxViewerUserWidget_RefreshMailMessages) == 0x000001, "Wrong size on MailboxViewerUserWidget_RefreshMailMessages");
static_assert(offsetof(MailboxViewerUserWidget_RefreshMailMessages, AllowRemoval) == 0x000000, "Member 'MailboxViewerUserWidget_RefreshMailMessages::AllowRemoval' has a wrong offset!");

// Function ValeriaUI.MailboxViewerUserWidget.RemoveLoadedMessage
// 0x0004 (0x0004 - 0x0000)
struct MailboxViewerUserWidget_RemoveLoadedMessage final
{
public:
	int32                                         Param_Index;                                       // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MailboxViewerUserWidget_RemoveLoadedMessage) == 0x000004, "Wrong alignment on MailboxViewerUserWidget_RemoveLoadedMessage");
static_assert(sizeof(MailboxViewerUserWidget_RemoveLoadedMessage) == 0x000004, "Wrong size on MailboxViewerUserWidget_RemoveLoadedMessage");
static_assert(offsetof(MailboxViewerUserWidget_RemoveLoadedMessage, Param_Index) == 0x000000, "Member 'MailboxViewerUserWidget_RemoveLoadedMessage::Param_Index' has a wrong offset!");

// Function ValeriaUI.MailboxViewerUserWidget.TryCollectAllRewards
// 0x0008 (0x0008 - 0x0000)
struct MailboxViewerUserWidget_TryCollectAllRewards final
{
public:
	int32                                         Param_Index;                                       // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EValeriaFuncResult                            OutResult;                                         // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0005(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2CE9[0x2];                                     // 0x0006(0x0002)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(MailboxViewerUserWidget_TryCollectAllRewards) == 0x000004, "Wrong alignment on MailboxViewerUserWidget_TryCollectAllRewards");
static_assert(sizeof(MailboxViewerUserWidget_TryCollectAllRewards) == 0x000008, "Wrong size on MailboxViewerUserWidget_TryCollectAllRewards");
static_assert(offsetof(MailboxViewerUserWidget_TryCollectAllRewards, Param_Index) == 0x000000, "Member 'MailboxViewerUserWidget_TryCollectAllRewards::Param_Index' has a wrong offset!");
static_assert(offsetof(MailboxViewerUserWidget_TryCollectAllRewards, OutResult) == 0x000004, "Member 'MailboxViewerUserWidget_TryCollectAllRewards::OutResult' has a wrong offset!");
static_assert(offsetof(MailboxViewerUserWidget_TryCollectAllRewards, ReturnValue) == 0x000005, "Member 'MailboxViewerUserWidget_TryCollectAllRewards::ReturnValue' has a wrong offset!");

// Function ValeriaUI.MailboxViewerUserWidget.TryCollectReward
// 0x000C (0x000C - 0x0000)
struct MailboxViewerUserWidget_TryCollectReward final
{
public:
	int32                                         Param_Index;                                       // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         RewardIndex;                                       // 0x0004(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2CEA[0x3];                                     // 0x0009(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(MailboxViewerUserWidget_TryCollectReward) == 0x000004, "Wrong alignment on MailboxViewerUserWidget_TryCollectReward");
static_assert(sizeof(MailboxViewerUserWidget_TryCollectReward) == 0x00000C, "Wrong size on MailboxViewerUserWidget_TryCollectReward");
static_assert(offsetof(MailboxViewerUserWidget_TryCollectReward, Param_Index) == 0x000000, "Member 'MailboxViewerUserWidget_TryCollectReward::Param_Index' has a wrong offset!");
static_assert(offsetof(MailboxViewerUserWidget_TryCollectReward, RewardIndex) == 0x000004, "Member 'MailboxViewerUserWidget_TryCollectReward::RewardIndex' has a wrong offset!");
static_assert(offsetof(MailboxViewerUserWidget_TryCollectReward, ReturnValue) == 0x000008, "Member 'MailboxViewerUserWidget_TryCollectReward::ReturnValue' has a wrong offset!");

// Function ValeriaUI.MailboxViewerUserWidget.UpdateMailFilter
// 0x0001 (0x0001 - 0x0000)
struct MailboxViewerUserWidget_UpdateMailFilter final
{
public:
	EMailboxViewerFilter                          Filter;                                            // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MailboxViewerUserWidget_UpdateMailFilter) == 0x000001, "Wrong alignment on MailboxViewerUserWidget_UpdateMailFilter");
static_assert(sizeof(MailboxViewerUserWidget_UpdateMailFilter) == 0x000001, "Wrong size on MailboxViewerUserWidget_UpdateMailFilter");
static_assert(offsetof(MailboxViewerUserWidget_UpdateMailFilter, Filter) == 0x000000, "Member 'MailboxViewerUserWidget_UpdateMailFilter::Filter' has a wrong offset!");

// Function ValeriaUI.MailboxViewerUserWidget.AreAllRewardsCollected
// 0x0008 (0x0008 - 0x0000)
struct MailboxViewerUserWidget_AreAllRewardsCollected final
{
public:
	int32                                         Param_Index;                                       // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2CEB[0x3];                                     // 0x0005(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(MailboxViewerUserWidget_AreAllRewardsCollected) == 0x000004, "Wrong alignment on MailboxViewerUserWidget_AreAllRewardsCollected");
static_assert(sizeof(MailboxViewerUserWidget_AreAllRewardsCollected) == 0x000008, "Wrong size on MailboxViewerUserWidget_AreAllRewardsCollected");
static_assert(offsetof(MailboxViewerUserWidget_AreAllRewardsCollected, Param_Index) == 0x000000, "Member 'MailboxViewerUserWidget_AreAllRewardsCollected::Param_Index' has a wrong offset!");
static_assert(offsetof(MailboxViewerUserWidget_AreAllRewardsCollected, ReturnValue) == 0x000004, "Member 'MailboxViewerUserWidget_AreAllRewardsCollected::ReturnValue' has a wrong offset!");

// Function ValeriaUI.MailboxViewerUserWidget.GetCurrentFilter
// 0x0001 (0x0001 - 0x0000)
struct MailboxViewerUserWidget_GetCurrentFilter final
{
public:
	EMailboxViewerFilter                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MailboxViewerUserWidget_GetCurrentFilter) == 0x000001, "Wrong alignment on MailboxViewerUserWidget_GetCurrentFilter");
static_assert(sizeof(MailboxViewerUserWidget_GetCurrentFilter) == 0x000001, "Wrong size on MailboxViewerUserWidget_GetCurrentFilter");
static_assert(offsetof(MailboxViewerUserWidget_GetCurrentFilter, ReturnValue) == 0x000000, "Member 'MailboxViewerUserWidget_GetCurrentFilter::ReturnValue' has a wrong offset!");

// Function ValeriaUI.MailboxViewerUserWidget.GetIndexOfMailMessage
// 0x0138 (0x0138 - 0x0000)
struct MailboxViewerUserWidget_GetIndexOfMailMessage final
{
public:
	struct FMailMessageWidgetData                 Data;                                              // 0x0000(0x0130)(Parm, NativeAccessSpecifierPublic)
	int32                                         ReturnValue;                                       // 0x0130(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2CEC[0x4];                                     // 0x0134(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(MailboxViewerUserWidget_GetIndexOfMailMessage) == 0x000008, "Wrong alignment on MailboxViewerUserWidget_GetIndexOfMailMessage");
static_assert(sizeof(MailboxViewerUserWidget_GetIndexOfMailMessage) == 0x000138, "Wrong size on MailboxViewerUserWidget_GetIndexOfMailMessage");
static_assert(offsetof(MailboxViewerUserWidget_GetIndexOfMailMessage, Data) == 0x000000, "Member 'MailboxViewerUserWidget_GetIndexOfMailMessage::Data' has a wrong offset!");
static_assert(offsetof(MailboxViewerUserWidget_GetIndexOfMailMessage, ReturnValue) == 0x000130, "Member 'MailboxViewerUserWidget_GetIndexOfMailMessage::ReturnValue' has a wrong offset!");

// Function ValeriaUI.MailboxViewerUserWidget.GetMailMessage
// 0x0138 (0x0138 - 0x0000)
struct MailboxViewerUserWidget_GetMailMessage final
{
public:
	int32                                         Param_Index;                                       // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2CED[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMailMessageWidgetData                 ReturnValue;                                       // 0x0008(0x0130)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(MailboxViewerUserWidget_GetMailMessage) == 0x000008, "Wrong alignment on MailboxViewerUserWidget_GetMailMessage");
static_assert(sizeof(MailboxViewerUserWidget_GetMailMessage) == 0x000138, "Wrong size on MailboxViewerUserWidget_GetMailMessage");
static_assert(offsetof(MailboxViewerUserWidget_GetMailMessage, Param_Index) == 0x000000, "Member 'MailboxViewerUserWidget_GetMailMessage::Param_Index' has a wrong offset!");
static_assert(offsetof(MailboxViewerUserWidget_GetMailMessage, ReturnValue) == 0x000008, "Member 'MailboxViewerUserWidget_GetMailMessage::ReturnValue' has a wrong offset!");

// Function ValeriaUI.MailboxViewerUserWidget.GetNextNonHiddenMessage
// 0x0008 (0x0008 - 0x0000)
struct MailboxViewerUserWidget_GetNextNonHiddenMessage final
{
public:
	int32                                         StartIndex;                                        // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ReturnValue;                                       // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MailboxViewerUserWidget_GetNextNonHiddenMessage) == 0x000004, "Wrong alignment on MailboxViewerUserWidget_GetNextNonHiddenMessage");
static_assert(sizeof(MailboxViewerUserWidget_GetNextNonHiddenMessage) == 0x000008, "Wrong size on MailboxViewerUserWidget_GetNextNonHiddenMessage");
static_assert(offsetof(MailboxViewerUserWidget_GetNextNonHiddenMessage, StartIndex) == 0x000000, "Member 'MailboxViewerUserWidget_GetNextNonHiddenMessage::StartIndex' has a wrong offset!");
static_assert(offsetof(MailboxViewerUserWidget_GetNextNonHiddenMessage, ReturnValue) == 0x000004, "Member 'MailboxViewerUserWidget_GetNextNonHiddenMessage::ReturnValue' has a wrong offset!");

// Function ValeriaUI.MailboxViewerUserWidget.GetNumberOfMessages
// 0x0004 (0x0004 - 0x0000)
struct MailboxViewerUserWidget_GetNumberOfMessages final
{
public:
	int32                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MailboxViewerUserWidget_GetNumberOfMessages) == 0x000004, "Wrong alignment on MailboxViewerUserWidget_GetNumberOfMessages");
static_assert(sizeof(MailboxViewerUserWidget_GetNumberOfMessages) == 0x000004, "Wrong size on MailboxViewerUserWidget_GetNumberOfMessages");
static_assert(offsetof(MailboxViewerUserWidget_GetNumberOfMessages, ReturnValue) == 0x000000, "Member 'MailboxViewerUserWidget_GetNumberOfMessages::ReturnValue' has a wrong offset!");

// Function ValeriaUI.MailboxViewerUserWidget.GetNumberOfMessagesForFilter
// 0x0008 (0x0008 - 0x0000)
struct MailboxViewerUserWidget_GetNumberOfMessagesForFilter final
{
public:
	EMailboxViewerFilter                          Filter;                                            // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2CEE[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ReturnValue;                                       // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MailboxViewerUserWidget_GetNumberOfMessagesForFilter) == 0x000004, "Wrong alignment on MailboxViewerUserWidget_GetNumberOfMessagesForFilter");
static_assert(sizeof(MailboxViewerUserWidget_GetNumberOfMessagesForFilter) == 0x000008, "Wrong size on MailboxViewerUserWidget_GetNumberOfMessagesForFilter");
static_assert(offsetof(MailboxViewerUserWidget_GetNumberOfMessagesForFilter, Filter) == 0x000000, "Member 'MailboxViewerUserWidget_GetNumberOfMessagesForFilter::Filter' has a wrong offset!");
static_assert(offsetof(MailboxViewerUserWidget_GetNumberOfMessagesForFilter, ReturnValue) == 0x000004, "Member 'MailboxViewerUserWidget_GetNumberOfMessagesForFilter::ReturnValue' has a wrong offset!");

// Function ValeriaUI.MailboxViewerUserWidget.GetNumberOfNonHiddenMessages
// 0x0004 (0x0004 - 0x0000)
struct MailboxViewerUserWidget_GetNumberOfNonHiddenMessages final
{
public:
	int32                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MailboxViewerUserWidget_GetNumberOfNonHiddenMessages) == 0x000004, "Wrong alignment on MailboxViewerUserWidget_GetNumberOfNonHiddenMessages");
static_assert(sizeof(MailboxViewerUserWidget_GetNumberOfNonHiddenMessages) == 0x000004, "Wrong size on MailboxViewerUserWidget_GetNumberOfNonHiddenMessages");
static_assert(offsetof(MailboxViewerUserWidget_GetNumberOfNonHiddenMessages, ReturnValue) == 0x000000, "Member 'MailboxViewerUserWidget_GetNumberOfNonHiddenMessages::ReturnValue' has a wrong offset!");

// Function ValeriaUI.MainLobbyBase.HandleInitialSteamLoginFailure
// 0x0018 (0x0018 - 0x0000)
struct MainLobbyBase_HandleInitialSteamLoginFailure final
{
public:
	int32                                         Code;                                              // 0x0000(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2CEF[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Msg;                                               // 0x0008(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MainLobbyBase_HandleInitialSteamLoginFailure) == 0x000008, "Wrong alignment on MainLobbyBase_HandleInitialSteamLoginFailure");
static_assert(sizeof(MainLobbyBase_HandleInitialSteamLoginFailure) == 0x000018, "Wrong size on MainLobbyBase_HandleInitialSteamLoginFailure");
static_assert(offsetof(MainLobbyBase_HandleInitialSteamLoginFailure, Code) == 0x000000, "Member 'MainLobbyBase_HandleInitialSteamLoginFailure::Code' has a wrong offset!");
static_assert(offsetof(MainLobbyBase_HandleInitialSteamLoginFailure, Msg) == 0x000008, "Member 'MainLobbyBase_HandleInitialSteamLoginFailure::Msg' has a wrong offset!");

// Function ValeriaUI.MainLobbyBase.OnSteamLoginError
// 0x0018 (0x0018 - 0x0000)
struct MainLobbyBase_OnSteamLoginError final
{
public:
	class FText                                   Msg;                                               // 0x0000(0x0018)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(MainLobbyBase_OnSteamLoginError) == 0x000008, "Wrong alignment on MainLobbyBase_OnSteamLoginError");
static_assert(sizeof(MainLobbyBase_OnSteamLoginError) == 0x000018, "Wrong size on MainLobbyBase_OnSteamLoginError");
static_assert(offsetof(MainLobbyBase_OnSteamLoginError, Msg) == 0x000000, "Member 'MainLobbyBase_OnSteamLoginError::Msg' has a wrong offset!");

// Function ValeriaUI.ValeriaViewportClient.HandleOnFadeInBlack
// 0x0004 (0x0004 - 0x0000)
struct ValeriaViewportClient_HandleOnFadeInBlack final
{
public:
	float                                         DurationSeconds;                                   // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ValeriaViewportClient_HandleOnFadeInBlack) == 0x000004, "Wrong alignment on ValeriaViewportClient_HandleOnFadeInBlack");
static_assert(sizeof(ValeriaViewportClient_HandleOnFadeInBlack) == 0x000004, "Wrong size on ValeriaViewportClient_HandleOnFadeInBlack");
static_assert(offsetof(ValeriaViewportClient_HandleOnFadeInBlack, DurationSeconds) == 0x000000, "Member 'ValeriaViewportClient_HandleOnFadeInBlack::DurationSeconds' has a wrong offset!");

// Function ValeriaUI.ValeriaViewportClient.HandleOnFadeOutBlack
// 0x0004 (0x0004 - 0x0000)
struct ValeriaViewportClient_HandleOnFadeOutBlack final
{
public:
	float                                         DurationSeconds;                                   // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ValeriaViewportClient_HandleOnFadeOutBlack) == 0x000004, "Wrong alignment on ValeriaViewportClient_HandleOnFadeOutBlack");
static_assert(sizeof(ValeriaViewportClient_HandleOnFadeOutBlack) == 0x000004, "Wrong size on ValeriaViewportClient_HandleOnFadeOutBlack");
static_assert(offsetof(ValeriaViewportClient_HandleOnFadeOutBlack, DurationSeconds) == 0x000000, "Member 'ValeriaViewportClient_HandleOnFadeOutBlack::DurationSeconds' has a wrong offset!");

// Function ValeriaUI.VALUI_AnnouncementsMessageModalDialog.GetAnnouncementUrl
// 0x0010 (0x0010 - 0x0000)
struct VALUI_AnnouncementsMessageModalDialog_GetAnnouncementUrl final
{
public:
	class FString                                 ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(VALUI_AnnouncementsMessageModalDialog_GetAnnouncementUrl) == 0x000008, "Wrong alignment on VALUI_AnnouncementsMessageModalDialog_GetAnnouncementUrl");
static_assert(sizeof(VALUI_AnnouncementsMessageModalDialog_GetAnnouncementUrl) == 0x000010, "Wrong size on VALUI_AnnouncementsMessageModalDialog_GetAnnouncementUrl");
static_assert(offsetof(VALUI_AnnouncementsMessageModalDialog_GetAnnouncementUrl, ReturnValue) == 0x000000, "Member 'VALUI_AnnouncementsMessageModalDialog_GetAnnouncementUrl::ReturnValue' has a wrong offset!");

// Function ValeriaUI.VALUI_AnnouncementsMessageModalDialog.HandleRefreshedMessageFromWeb
// 0x0010 (0x0010 - 0x0000)
struct VALUI_AnnouncementsMessageModalDialog_HandleRefreshedMessageFromWeb final
{
public:
	class FString                                 Message;                                           // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(VALUI_AnnouncementsMessageModalDialog_HandleRefreshedMessageFromWeb) == 0x000008, "Wrong alignment on VALUI_AnnouncementsMessageModalDialog_HandleRefreshedMessageFromWeb");
static_assert(sizeof(VALUI_AnnouncementsMessageModalDialog_HandleRefreshedMessageFromWeb) == 0x000010, "Wrong size on VALUI_AnnouncementsMessageModalDialog_HandleRefreshedMessageFromWeb");
static_assert(offsetof(VALUI_AnnouncementsMessageModalDialog_HandleRefreshedMessageFromWeb, Message) == 0x000000, "Member 'VALUI_AnnouncementsMessageModalDialog_HandleRefreshedMessageFromWeb::Message' has a wrong offset!");

// Function ValeriaUI.VALUI_AnnouncementsMessageModalDialog.SetURL
// 0x0010 (0x0010 - 0x0000)
struct VALUI_AnnouncementsMessageModalDialog_SetURL final
{
public:
	class FString                                 NewURL;                                            // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(VALUI_AnnouncementsMessageModalDialog_SetURL) == 0x000008, "Wrong alignment on VALUI_AnnouncementsMessageModalDialog_SetURL");
static_assert(sizeof(VALUI_AnnouncementsMessageModalDialog_SetURL) == 0x000010, "Wrong size on VALUI_AnnouncementsMessageModalDialog_SetURL");
static_assert(offsetof(VALUI_AnnouncementsMessageModalDialog_SetURL, NewURL) == 0x000000, "Member 'VALUI_AnnouncementsMessageModalDialog_SetURL::NewURL' has a wrong offset!");

// Function ValeriaUI.VAL_AsyncActionRequestStorefront.RequestStorefront
// 0x0010 (0x0010 - 0x0000)
struct VAL_AsyncActionRequestStorefront_RequestStorefront final
{
public:
	class ULocalPlayer*                           LP;                                                // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UVAL_AsyncActionRequestStorefront*      ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(VAL_AsyncActionRequestStorefront_RequestStorefront) == 0x000008, "Wrong alignment on VAL_AsyncActionRequestStorefront_RequestStorefront");
static_assert(sizeof(VAL_AsyncActionRequestStorefront_RequestStorefront) == 0x000010, "Wrong size on VAL_AsyncActionRequestStorefront_RequestStorefront");
static_assert(offsetof(VAL_AsyncActionRequestStorefront_RequestStorefront, LP) == 0x000000, "Member 'VAL_AsyncActionRequestStorefront_RequestStorefront::LP' has a wrong offset!");
static_assert(offsetof(VAL_AsyncActionRequestStorefront_RequestStorefront, ReturnValue) == 0x000008, "Member 'VAL_AsyncActionRequestStorefront_RequestStorefront::ReturnValue' has a wrong offset!");

// DelegateFunction ValeriaUI.VAL_AsyncActionRequestStorefront.OnRequestStorefrontSuccess__DelegateSignature
// 0x0078 (0x0078 - 0x0000)
struct VAL_AsyncActionRequestStorefront_OnRequestStorefrontSuccess__DelegateSignature final
{
public:
	struct FVALUI_PremiumStorefrontResponse       Response;                                          // 0x0000(0x0078)(Parm, NativeAccessSpecifierPublic)
};
static_assert(alignof(VAL_AsyncActionRequestStorefront_OnRequestStorefrontSuccess__DelegateSignature) == 0x000008, "Wrong alignment on VAL_AsyncActionRequestStorefront_OnRequestStorefrontSuccess__DelegateSignature");
static_assert(sizeof(VAL_AsyncActionRequestStorefront_OnRequestStorefrontSuccess__DelegateSignature) == 0x000078, "Wrong size on VAL_AsyncActionRequestStorefront_OnRequestStorefrontSuccess__DelegateSignature");
static_assert(offsetof(VAL_AsyncActionRequestStorefront_OnRequestStorefrontSuccess__DelegateSignature, Response) == 0x000000, "Member 'VAL_AsyncActionRequestStorefront_OnRequestStorefrontSuccess__DelegateSignature::Response' has a wrong offset!");

// Function ValeriaUI.VALUI_AsyncUpdateLoadout.UpdateLoadout
// 0x0978 (0x0978 - 0x0000)
struct VALUI_AsyncUpdateLoadout_UpdateLoadout final
{
public:
	class UVALUI_CharacterCustomizationPanelBase* CustPanel;                                         // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVAL_CharacterCustomizationLoadout     NewLoadout;                                        // 0x0008(0x0900)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	struct FVALUI_CharCustomization_UpdateLoadoutContextPayload ContextPayload;                                    // 0x0908(0x0068)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	class UVALUI_AsyncUpdateLoadout*              ReturnValue;                                       // 0x0970(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(VALUI_AsyncUpdateLoadout_UpdateLoadout) == 0x000008, "Wrong alignment on VALUI_AsyncUpdateLoadout_UpdateLoadout");
static_assert(sizeof(VALUI_AsyncUpdateLoadout_UpdateLoadout) == 0x000978, "Wrong size on VALUI_AsyncUpdateLoadout_UpdateLoadout");
static_assert(offsetof(VALUI_AsyncUpdateLoadout_UpdateLoadout, CustPanel) == 0x000000, "Member 'VALUI_AsyncUpdateLoadout_UpdateLoadout::CustPanel' has a wrong offset!");
static_assert(offsetof(VALUI_AsyncUpdateLoadout_UpdateLoadout, NewLoadout) == 0x000008, "Member 'VALUI_AsyncUpdateLoadout_UpdateLoadout::NewLoadout' has a wrong offset!");
static_assert(offsetof(VALUI_AsyncUpdateLoadout_UpdateLoadout, ContextPayload) == 0x000908, "Member 'VALUI_AsyncUpdateLoadout_UpdateLoadout::ContextPayload' has a wrong offset!");
static_assert(offsetof(VALUI_AsyncUpdateLoadout_UpdateLoadout, ReturnValue) == 0x000970, "Member 'VALUI_AsyncUpdateLoadout_UpdateLoadout::ReturnValue' has a wrong offset!");

// DelegateFunction ValeriaUI.VALUI_AsyncUpdateLoadout.OnUpdateLoadoutFailed__DelegateSignature
// 0x0068 (0x0068 - 0x0000)
struct VALUI_AsyncUpdateLoadout_OnUpdateLoadoutFailed__DelegateSignature final
{
public:
	struct FVALUI_CharCustomization_UpdateLoadoutContextPayload ContextPayload;                                    // 0x0000(0x0068)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(VALUI_AsyncUpdateLoadout_OnUpdateLoadoutFailed__DelegateSignature) == 0x000008, "Wrong alignment on VALUI_AsyncUpdateLoadout_OnUpdateLoadoutFailed__DelegateSignature");
static_assert(sizeof(VALUI_AsyncUpdateLoadout_OnUpdateLoadoutFailed__DelegateSignature) == 0x000068, "Wrong size on VALUI_AsyncUpdateLoadout_OnUpdateLoadoutFailed__DelegateSignature");
static_assert(offsetof(VALUI_AsyncUpdateLoadout_OnUpdateLoadoutFailed__DelegateSignature, ContextPayload) == 0x000000, "Member 'VALUI_AsyncUpdateLoadout_OnUpdateLoadoutFailed__DelegateSignature::ContextPayload' has a wrong offset!");

// Function ValeriaUI.VALUI_BorderStyle.Apply
// 0x0008 (0x0008 - 0x0000)
struct VALUI_BorderStyle_Apply final
{
public:
	class UBorder*                                Border;                                            // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(VALUI_BorderStyle_Apply) == 0x000008, "Wrong alignment on VALUI_BorderStyle_Apply");
static_assert(sizeof(VALUI_BorderStyle_Apply) == 0x000008, "Wrong size on VALUI_BorderStyle_Apply");
static_assert(offsetof(VALUI_BorderStyle_Apply, Border) == 0x000000, "Member 'VALUI_BorderStyle_Apply::Border' has a wrong offset!");

// Function ValeriaUI.VALUI_Border_Styled.OnAccessbilitySettingsChanged
// 0x0003 (0x0003 - 0x0000)
struct VALUI_Border_Styled_OnAccessbilitySettingsChanged final
{
public:
	struct FValeriaAccessibilitySettings          AccessbilitySettings;                              // 0x0000(0x0003)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(VALUI_Border_Styled_OnAccessbilitySettingsChanged) == 0x000001, "Wrong alignment on VALUI_Border_Styled_OnAccessbilitySettingsChanged");
static_assert(sizeof(VALUI_Border_Styled_OnAccessbilitySettingsChanged) == 0x000003, "Wrong size on VALUI_Border_Styled_OnAccessbilitySettingsChanged");
static_assert(offsetof(VALUI_Border_Styled_OnAccessbilitySettingsChanged, AccessbilitySettings) == 0x000000, "Member 'VALUI_Border_Styled_OnAccessbilitySettingsChanged::AccessbilitySettings' has a wrong offset!");

// Function ValeriaUI.VALUI_Border_Styled.SetBorderStyle
// 0x0008 (0x0008 - 0x0000)
struct VALUI_Border_Styled_SetBorderStyle final
{
public:
	class UVALUI_BorderStyle*                     NewStyle;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(VALUI_Border_Styled_SetBorderStyle) == 0x000008, "Wrong alignment on VALUI_Border_Styled_SetBorderStyle");
static_assert(sizeof(VALUI_Border_Styled_SetBorderStyle) == 0x000008, "Wrong size on VALUI_Border_Styled_SetBorderStyle");
static_assert(offsetof(VALUI_Border_Styled_SetBorderStyle, NewStyle) == 0x000000, "Member 'VALUI_Border_Styled_SetBorderStyle::NewStyle' has a wrong offset!");

// Function ValeriaUI.VALUI_BoundInputActionStateWidget.SetInputAction
// 0x0008 (0x0008 - 0x0000)
struct VALUI_BoundInputActionStateWidget_SetInputAction final
{
public:
	class UInputAction*                           InInputAction;                                     // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(VALUI_BoundInputActionStateWidget_SetInputAction) == 0x000008, "Wrong alignment on VALUI_BoundInputActionStateWidget_SetInputAction");
static_assert(sizeof(VALUI_BoundInputActionStateWidget_SetInputAction) == 0x000008, "Wrong size on VALUI_BoundInputActionStateWidget_SetInputAction");
static_assert(offsetof(VALUI_BoundInputActionStateWidget_SetInputAction, InInputAction) == 0x000000, "Member 'VALUI_BoundInputActionStateWidget_SetInputAction::InInputAction' has a wrong offset!");

// Function ValeriaUI.VALUI_BoundInputActionStateWidget.UpdateInputActionState_Implementation
// 0x0028 (0x0028 - 0x0000)
struct VALUI_BoundInputActionStateWidget_UpdateInputActionState_Implementation final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ETriggerEvent                                 LatestTriggerEvent;                                // 0x0018(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2CFB[0x3];                                     // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         OngoingDuration;                                   // 0x001C(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         HoldTimeThreshold;                                 // 0x0020(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2CFC[0x4];                                     // 0x0024(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(VALUI_BoundInputActionStateWidget_UpdateInputActionState_Implementation) == 0x000008, "Wrong alignment on VALUI_BoundInputActionStateWidget_UpdateInputActionState_Implementation");
static_assert(sizeof(VALUI_BoundInputActionStateWidget_UpdateInputActionState_Implementation) == 0x000028, "Wrong size on VALUI_BoundInputActionStateWidget_UpdateInputActionState_Implementation");
static_assert(offsetof(VALUI_BoundInputActionStateWidget_UpdateInputActionState_Implementation, Key) == 0x000000, "Member 'VALUI_BoundInputActionStateWidget_UpdateInputActionState_Implementation::Key' has a wrong offset!");
static_assert(offsetof(VALUI_BoundInputActionStateWidget_UpdateInputActionState_Implementation, LatestTriggerEvent) == 0x000018, "Member 'VALUI_BoundInputActionStateWidget_UpdateInputActionState_Implementation::LatestTriggerEvent' has a wrong offset!");
static_assert(offsetof(VALUI_BoundInputActionStateWidget_UpdateInputActionState_Implementation, OngoingDuration) == 0x00001C, "Member 'VALUI_BoundInputActionStateWidget_UpdateInputActionState_Implementation::OngoingDuration' has a wrong offset!");
static_assert(offsetof(VALUI_BoundInputActionStateWidget_UpdateInputActionState_Implementation, HoldTimeThreshold) == 0x000020, "Member 'VALUI_BoundInputActionStateWidget_UpdateInputActionState_Implementation::HoldTimeThreshold' has a wrong offset!");

// Function ValeriaUI.VALUI_ButtonStyle.Apply
// 0x0008 (0x0008 - 0x0000)
struct VALUI_ButtonStyle_Apply final
{
public:
	class UVALUI_Button_Styled*                   Button;                                            // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(VALUI_ButtonStyle_Apply) == 0x000008, "Wrong alignment on VALUI_ButtonStyle_Apply");
static_assert(sizeof(VALUI_ButtonStyle_Apply) == 0x000008, "Wrong size on VALUI_ButtonStyle_Apply");
static_assert(offsetof(VALUI_ButtonStyle_Apply, Button) == 0x000000, "Member 'VALUI_ButtonStyle_Apply::Button' has a wrong offset!");

// Function ValeriaUI.VALUI_Button_Styled.HasFocus
// 0x0001 (0x0001 - 0x0000)
struct VALUI_Button_Styled_HasFocus final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(VALUI_Button_Styled_HasFocus) == 0x000001, "Wrong alignment on VALUI_Button_Styled_HasFocus");
static_assert(sizeof(VALUI_Button_Styled_HasFocus) == 0x000001, "Wrong size on VALUI_Button_Styled_HasFocus");
static_assert(offsetof(VALUI_Button_Styled_HasFocus, ReturnValue) == 0x000000, "Member 'VALUI_Button_Styled_HasFocus::ReturnValue' has a wrong offset!");

// Function ValeriaUI.VALUI_Button_Styled.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct VALUI_Button_Styled_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(VALUI_Button_Styled_PreConstruct) == 0x000001, "Wrong alignment on VALUI_Button_Styled_PreConstruct");
static_assert(sizeof(VALUI_Button_Styled_PreConstruct) == 0x000001, "Wrong size on VALUI_Button_Styled_PreConstruct");
static_assert(offsetof(VALUI_Button_Styled_PreConstruct, IsDesignTime) == 0x000000, "Member 'VALUI_Button_Styled_PreConstruct::IsDesignTime' has a wrong offset!");

// Function ValeriaUI.VALUI_Button_Styled.RemoveCursor
// 0x0008 (0x0008 - 0x0000)
struct VALUI_Button_Styled_RemoveCursor final
{
public:
	class UWidget*                                InCursor;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(VALUI_Button_Styled_RemoveCursor) == 0x000008, "Wrong alignment on VALUI_Button_Styled_RemoveCursor");
static_assert(sizeof(VALUI_Button_Styled_RemoveCursor) == 0x000008, "Wrong size on VALUI_Button_Styled_RemoveCursor");
static_assert(offsetof(VALUI_Button_Styled_RemoveCursor, InCursor) == 0x000000, "Member 'VALUI_Button_Styled_RemoveCursor::InCursor' has a wrong offset!");

// Function ValeriaUI.VALUI_Button_Styled.SetButtonStyle
// 0x0008 (0x0008 - 0x0000)
struct VALUI_Button_Styled_SetButtonStyle final
{
public:
	class UVALUI_ButtonStyle*                     NewStyle;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(VALUI_Button_Styled_SetButtonStyle) == 0x000008, "Wrong alignment on VALUI_Button_Styled_SetButtonStyle");
static_assert(sizeof(VALUI_Button_Styled_SetButtonStyle) == 0x000008, "Wrong size on VALUI_Button_Styled_SetButtonStyle");
static_assert(offsetof(VALUI_Button_Styled_SetButtonStyle, NewStyle) == 0x000000, "Member 'VALUI_Button_Styled_SetButtonStyle::NewStyle' has a wrong offset!");

// Function ValeriaUI.VALUI_Button_Styled.ShowCursor
// 0x0010 (0x0010 - 0x0000)
struct VALUI_Button_Styled_ShowCursor final
{
public:
	class UWidget*                                InCursor;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2D04[0x7];                                     // 0x0009(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(VALUI_Button_Styled_ShowCursor) == 0x000008, "Wrong alignment on VALUI_Button_Styled_ShowCursor");
static_assert(sizeof(VALUI_Button_Styled_ShowCursor) == 0x000010, "Wrong size on VALUI_Button_Styled_ShowCursor");
static_assert(offsetof(VALUI_Button_Styled_ShowCursor, InCursor) == 0x000000, "Member 'VALUI_Button_Styled_ShowCursor::InCursor' has a wrong offset!");
static_assert(offsetof(VALUI_Button_Styled_ShowCursor, ReturnValue) == 0x000008, "Member 'VALUI_Button_Styled_ShowCursor::ReturnValue' has a wrong offset!");

// Function ValeriaUI.VALUI_NameValidator.IsNameValid
// 0x0018 (0x0018 - 0x0000)
struct VALUI_NameValidator_IsNameValid final
{
public:
	class FString                                 InCharacterName;                                   // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2D09[0x7];                                     // 0x0011(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(VALUI_NameValidator_IsNameValid) == 0x000008, "Wrong alignment on VALUI_NameValidator_IsNameValid");
static_assert(sizeof(VALUI_NameValidator_IsNameValid) == 0x000018, "Wrong size on VALUI_NameValidator_IsNameValid");
static_assert(offsetof(VALUI_NameValidator_IsNameValid, InCharacterName) == 0x000000, "Member 'VALUI_NameValidator_IsNameValid::InCharacterName' has a wrong offset!");
static_assert(offsetof(VALUI_NameValidator_IsNameValid, ReturnValue) == 0x000010, "Member 'VALUI_NameValidator_IsNameValid::ReturnValue' has a wrong offset!");

// Function ValeriaUI.VALUI_CharacterCreationScreenBase.HandleCharacterNameChanged
// 0x0020 (0x0020 - 0x0000)
struct VALUI_CharacterCreationScreenBase_HandleCharacterNameChanged final
{
public:
	class FText                                   InCharacterName;                                   // 0x0000(0x0018)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	EVAL_CharacterNameType                        InCharacterNameType;                               // 0x0018(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2D0A[0x7];                                     // 0x0019(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(VALUI_CharacterCreationScreenBase_HandleCharacterNameChanged) == 0x000008, "Wrong alignment on VALUI_CharacterCreationScreenBase_HandleCharacterNameChanged");
static_assert(sizeof(VALUI_CharacterCreationScreenBase_HandleCharacterNameChanged) == 0x000020, "Wrong size on VALUI_CharacterCreationScreenBase_HandleCharacterNameChanged");
static_assert(offsetof(VALUI_CharacterCreationScreenBase_HandleCharacterNameChanged, InCharacterName) == 0x000000, "Member 'VALUI_CharacterCreationScreenBase_HandleCharacterNameChanged::InCharacterName' has a wrong offset!");
static_assert(offsetof(VALUI_CharacterCreationScreenBase_HandleCharacterNameChanged, InCharacterNameType) == 0x000018, "Member 'VALUI_CharacterCreationScreenBase_HandleCharacterNameChanged::InCharacterNameType' has a wrong offset!");

// Function ValeriaUI.VALUI_CharacterCreationScreenBase.HandleCharacterNameValidityResponse
// 0x0018 (0x0018 - 0x0000)
struct VALUI_CharacterCreationScreenBase_HandleCharacterNameValidityResponse final
{
public:
	struct FVALUI_CharacterNameValidityResponse   Response;                                          // 0x0000(0x0018)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(VALUI_CharacterCreationScreenBase_HandleCharacterNameValidityResponse) == 0x000008, "Wrong alignment on VALUI_CharacterCreationScreenBase_HandleCharacterNameValidityResponse");
static_assert(sizeof(VALUI_CharacterCreationScreenBase_HandleCharacterNameValidityResponse) == 0x000018, "Wrong size on VALUI_CharacterCreationScreenBase_HandleCharacterNameValidityResponse");
static_assert(offsetof(VALUI_CharacterCreationScreenBase_HandleCharacterNameValidityResponse, Response) == 0x000000, "Member 'VALUI_CharacterCreationScreenBase_HandleCharacterNameValidityResponse::Response' has a wrong offset!");

// DelegateFunction ValeriaUI.VALUI_CharacterCreationScreenBase.OnBodyTypeSelectionChange__DelegateSignature
// 0x0001 (0x0001 - 0x0000)
struct VALUI_CharacterCreationScreenBase_OnBodyTypeSelectionChange__DelegateSignature final
{
public:
	bool                                          bFirstSelection;                                   // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(VALUI_CharacterCreationScreenBase_OnBodyTypeSelectionChange__DelegateSignature) == 0x000001, "Wrong alignment on VALUI_CharacterCreationScreenBase_OnBodyTypeSelectionChange__DelegateSignature");
static_assert(sizeof(VALUI_CharacterCreationScreenBase_OnBodyTypeSelectionChange__DelegateSignature) == 0x000001, "Wrong size on VALUI_CharacterCreationScreenBase_OnBodyTypeSelectionChange__DelegateSignature");
static_assert(offsetof(VALUI_CharacterCreationScreenBase_OnBodyTypeSelectionChange__DelegateSignature, bFirstSelection) == 0x000000, "Member 'VALUI_CharacterCreationScreenBase_OnBodyTypeSelectionChange__DelegateSignature::bFirstSelection' has a wrong offset!");

// DelegateFunction ValeriaUI.VALUI_CharacterCreationScreenBase.OnCommitCharacter__DelegateSignature
// 0x0778 (0x0778 - 0x0000)
struct VALUI_CharacterCreationScreenBase_OnCommitCharacter__DelegateSignature final
{
public:
	struct FVALDTOS_MetaCharacterFormat           CommitedCharacter;                                 // 0x0000(0x0778)(Parm, NativeAccessSpecifierPublic)
};
static_assert(alignof(VALUI_CharacterCreationScreenBase_OnCommitCharacter__DelegateSignature) == 0x000008, "Wrong alignment on VALUI_CharacterCreationScreenBase_OnCommitCharacter__DelegateSignature");
static_assert(sizeof(VALUI_CharacterCreationScreenBase_OnCommitCharacter__DelegateSignature) == 0x000778, "Wrong size on VALUI_CharacterCreationScreenBase_OnCommitCharacter__DelegateSignature");
static_assert(offsetof(VALUI_CharacterCreationScreenBase_OnCommitCharacter__DelegateSignature, CommitedCharacter) == 0x000000, "Member 'VALUI_CharacterCreationScreenBase_OnCommitCharacter__DelegateSignature::CommitedCharacter' has a wrong offset!");

// Function ValeriaUI.VALUI_CharacterCreationScreenBase.SetEnableAllButtons
// 0x0001 (0x0001 - 0x0000)
struct VALUI_CharacterCreationScreenBase_SetEnableAllButtons final
{
public:
	bool                                          bEnable;                                           // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(VALUI_CharacterCreationScreenBase_SetEnableAllButtons) == 0x000001, "Wrong alignment on VALUI_CharacterCreationScreenBase_SetEnableAllButtons");
static_assert(sizeof(VALUI_CharacterCreationScreenBase_SetEnableAllButtons) == 0x000001, "Wrong size on VALUI_CharacterCreationScreenBase_SetEnableAllButtons");
static_assert(offsetof(VALUI_CharacterCreationScreenBase_SetEnableAllButtons, bEnable) == 0x000000, "Member 'VALUI_CharacterCreationScreenBase_SetEnableAllButtons::bEnable' has a wrong offset!");

// Function ValeriaUI.VALUI_CharacterCreationScreenBase.SetEnableContinueButton
// 0x0001 (0x0001 - 0x0000)
struct VALUI_CharacterCreationScreenBase_SetEnableContinueButton final
{
public:
	bool                                          bEnable;                                           // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(VALUI_CharacterCreationScreenBase_SetEnableContinueButton) == 0x000001, "Wrong alignment on VALUI_CharacterCreationScreenBase_SetEnableContinueButton");
static_assert(sizeof(VALUI_CharacterCreationScreenBase_SetEnableContinueButton) == 0x000001, "Wrong size on VALUI_CharacterCreationScreenBase_SetEnableContinueButton");
static_assert(offsetof(VALUI_CharacterCreationScreenBase_SetEnableContinueButton, bEnable) == 0x000000, "Member 'VALUI_CharacterCreationScreenBase_SetEnableContinueButton::bEnable' has a wrong offset!");

// Function ValeriaUI.VALUI_CharacterCreationScreenBase.SetEnableTurntable
// 0x0001 (0x0001 - 0x0000)
struct VALUI_CharacterCreationScreenBase_SetEnableTurntable final
{
public:
	bool                                          bEnable;                                           // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(VALUI_CharacterCreationScreenBase_SetEnableTurntable) == 0x000001, "Wrong alignment on VALUI_CharacterCreationScreenBase_SetEnableTurntable");
static_assert(sizeof(VALUI_CharacterCreationScreenBase_SetEnableTurntable) == 0x000001, "Wrong size on VALUI_CharacterCreationScreenBase_SetEnableTurntable");
static_assert(offsetof(VALUI_CharacterCreationScreenBase_SetEnableTurntable, bEnable) == 0x000000, "Member 'VALUI_CharacterCreationScreenBase_SetEnableTurntable::bEnable' has a wrong offset!");

// Function ValeriaUI.VALUI_CharacterCreationScreenBase.GetAllowedCustomizationItems
// 0x0050 (0x0050 - 0x0000)
struct VALUI_CharacterCreationScreenBase_GetAllowedCustomizationItems final
{
public:
	TSet<TSoftObjectPtr<class UVAL_CharacterCustomizationItemBase>> ReturnValue;                                       // 0x0000(0x0050)(Parm, OutParm, ReturnParm, UObjectWrapper, NativeAccessSpecifierPublic)
};
static_assert(alignof(VALUI_CharacterCreationScreenBase_GetAllowedCustomizationItems) == 0x000008, "Wrong alignment on VALUI_CharacterCreationScreenBase_GetAllowedCustomizationItems");
static_assert(sizeof(VALUI_CharacterCreationScreenBase_GetAllowedCustomizationItems) == 0x000050, "Wrong size on VALUI_CharacterCreationScreenBase_GetAllowedCustomizationItems");
static_assert(offsetof(VALUI_CharacterCreationScreenBase_GetAllowedCustomizationItems, ReturnValue) == 0x000000, "Member 'VALUI_CharacterCreationScreenBase_GetAllowedCustomizationItems::ReturnValue' has a wrong offset!");

// Function ValeriaUI.VALUI_CharacterCreationStatics.IsCharacterNameValidityResponseValid
// 0x0020 (0x0020 - 0x0000)
struct VALUI_CharacterCreationStatics_IsCharacterNameValidityResponseValid final
{
public:
	struct FVALUI_CharacterNameValidityResponse   Response;                                          // 0x0000(0x0018)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2D0B[0x7];                                     // 0x0019(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(VALUI_CharacterCreationStatics_IsCharacterNameValidityResponseValid) == 0x000008, "Wrong alignment on VALUI_CharacterCreationStatics_IsCharacterNameValidityResponseValid");
static_assert(sizeof(VALUI_CharacterCreationStatics_IsCharacterNameValidityResponseValid) == 0x000020, "Wrong size on VALUI_CharacterCreationStatics_IsCharacterNameValidityResponseValid");
static_assert(offsetof(VALUI_CharacterCreationStatics_IsCharacterNameValidityResponseValid, Response) == 0x000000, "Member 'VALUI_CharacterCreationStatics_IsCharacterNameValidityResponseValid::Response' has a wrong offset!");
static_assert(offsetof(VALUI_CharacterCreationStatics_IsCharacterNameValidityResponseValid, ReturnValue) == 0x000018, "Member 'VALUI_CharacterCreationStatics_IsCharacterNameValidityResponseValid::ReturnValue' has a wrong offset!");

// Function ValeriaUI.VALUI_CharacterCustomizationPanelBase.GenerateItemObject
// 0x0138 (0x0138 - 0x0000)
struct VALUI_CharacterCustomizationPanelBase_GenerateItemObject final
{
public:
	struct FVAL_CharCustomization_AssetData       AssetData;                                         // 0x0000(0x0128)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	const class UWidget*                          ViewWidget;                                        // 0x0128(0x0008)(ConstParm, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                ReturnValue;                                       // 0x0130(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(VALUI_CharacterCustomizationPanelBase_GenerateItemObject) == 0x000008, "Wrong alignment on VALUI_CharacterCustomizationPanelBase_GenerateItemObject");
static_assert(sizeof(VALUI_CharacterCustomizationPanelBase_GenerateItemObject) == 0x000138, "Wrong size on VALUI_CharacterCustomizationPanelBase_GenerateItemObject");
static_assert(offsetof(VALUI_CharacterCustomizationPanelBase_GenerateItemObject, AssetData) == 0x000000, "Member 'VALUI_CharacterCustomizationPanelBase_GenerateItemObject::AssetData' has a wrong offset!");
static_assert(offsetof(VALUI_CharacterCustomizationPanelBase_GenerateItemObject, ViewWidget) == 0x000128, "Member 'VALUI_CharacterCustomizationPanelBase_GenerateItemObject::ViewWidget' has a wrong offset!");
static_assert(offsetof(VALUI_CharacterCustomizationPanelBase_GenerateItemObject, ReturnValue) == 0x000130, "Member 'VALUI_CharacterCustomizationPanelBase_GenerateItemObject::ReturnValue' has a wrong offset!");

// Function ValeriaUI.VALUI_CharacterCustomizationPanelBase.HandleLoadoutSlotItemsGenerated
// 0x0040 (0x0040 - 0x0000)
struct VALUI_CharacterCustomizationPanelBase_HandleLoadoutSlotItemsGenerated final
{
public:
	class FName                                   LoadoutSlotName;                                   // 0x0000(0x0008)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVALUI_CharCustomization_LoadoutSlotData LoadoutSlotData;                                   // 0x0008(0x0038)(ConstParm, Parm, OutParm, ReferenceParm, ContainsInstancedReference, NativeAccessSpecifierPublic)
};
static_assert(alignof(VALUI_CharacterCustomizationPanelBase_HandleLoadoutSlotItemsGenerated) == 0x000008, "Wrong alignment on VALUI_CharacterCustomizationPanelBase_HandleLoadoutSlotItemsGenerated");
static_assert(sizeof(VALUI_CharacterCustomizationPanelBase_HandleLoadoutSlotItemsGenerated) == 0x000040, "Wrong size on VALUI_CharacterCustomizationPanelBase_HandleLoadoutSlotItemsGenerated");
static_assert(offsetof(VALUI_CharacterCustomizationPanelBase_HandleLoadoutSlotItemsGenerated, LoadoutSlotName) == 0x000000, "Member 'VALUI_CharacterCustomizationPanelBase_HandleLoadoutSlotItemsGenerated::LoadoutSlotName' has a wrong offset!");
static_assert(offsetof(VALUI_CharacterCustomizationPanelBase_HandleLoadoutSlotItemsGenerated, LoadoutSlotData) == 0x000008, "Member 'VALUI_CharacterCustomizationPanelBase_HandleLoadoutSlotItemsGenerated::LoadoutSlotData' has a wrong offset!");

// Function ValeriaUI.VALUI_CharacterCustomizationPanelBase.HandleLoadoutUpdated
// 0x0068 (0x0068 - 0x0000)
struct VALUI_CharacterCustomizationPanelBase_HandleLoadoutUpdated final
{
public:
	struct FVALUI_CharCustomization_UpdateLoadoutContextPayload ContextPayload;                                    // 0x0000(0x0068)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(VALUI_CharacterCustomizationPanelBase_HandleLoadoutUpdated) == 0x000008, "Wrong alignment on VALUI_CharacterCustomizationPanelBase_HandleLoadoutUpdated");
static_assert(sizeof(VALUI_CharacterCustomizationPanelBase_HandleLoadoutUpdated) == 0x000068, "Wrong size on VALUI_CharacterCustomizationPanelBase_HandleLoadoutUpdated");
static_assert(offsetof(VALUI_CharacterCustomizationPanelBase_HandleLoadoutUpdated, ContextPayload) == 0x000000, "Member 'VALUI_CharacterCustomizationPanelBase_HandleLoadoutUpdated::ContextPayload' has a wrong offset!");

// Function ValeriaUI.VALUI_CharacterCustomizationPanelBase.SetPreviewCharacterActor
// 0x0008 (0x0008 - 0x0000)
struct VALUI_CharacterCustomizationPanelBase_SetPreviewCharacterActor final
{
public:
	class AActor*                                 Actor;                                             // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(VALUI_CharacterCustomizationPanelBase_SetPreviewCharacterActor) == 0x000008, "Wrong alignment on VALUI_CharacterCustomizationPanelBase_SetPreviewCharacterActor");
static_assert(sizeof(VALUI_CharacterCustomizationPanelBase_SetPreviewCharacterActor) == 0x000008, "Wrong size on VALUI_CharacterCustomizationPanelBase_SetPreviewCharacterActor");
static_assert(offsetof(VALUI_CharacterCustomizationPanelBase_SetPreviewCharacterActor, Actor) == 0x000000, "Member 'VALUI_CharacterCustomizationPanelBase_SetPreviewCharacterActor::Actor' has a wrong offset!");

// Function ValeriaUI.VALUI_CharacterCustomizationPanelBase.GetCurrentLoadout
// 0x0900 (0x0900 - 0x0000)
struct VALUI_CharacterCustomizationPanelBase_GetCurrentLoadout final
{
public:
	struct FVAL_CharacterCustomizationLoadout     ReturnValue;                                       // 0x0000(0x0900)(ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(VALUI_CharacterCustomizationPanelBase_GetCurrentLoadout) == 0x000008, "Wrong alignment on VALUI_CharacterCustomizationPanelBase_GetCurrentLoadout");
static_assert(sizeof(VALUI_CharacterCustomizationPanelBase_GetCurrentLoadout) == 0x000900, "Wrong size on VALUI_CharacterCustomizationPanelBase_GetCurrentLoadout");
static_assert(offsetof(VALUI_CharacterCustomizationPanelBase_GetCurrentLoadout, ReturnValue) == 0x000000, "Member 'VALUI_CharacterCustomizationPanelBase_GetCurrentLoadout::ReturnValue' has a wrong offset!");

// Function ValeriaUI.VALUI_CharacterCustomizationPanelBase.GetLoadoutSlotDataFromItemObject
// 0x0050 (0x0050 - 0x0000)
struct VALUI_CharacterCustomizationPanelBase_GetLoadoutSlotDataFromItemObject final
{
public:
	class UObject*                                ItemObject;                                        // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   LoadoutSlotName;                                   // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVALUI_CharCustomization_LoadoutSlotData LoadoutSlotData;                                   // 0x0010(0x0038)(Parm, OutParm, ContainsInstancedReference, NativeAccessSpecifierPublic)
	bool                                          bSuccess;                                          // 0x0048(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2D0D[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(VALUI_CharacterCustomizationPanelBase_GetLoadoutSlotDataFromItemObject) == 0x000008, "Wrong alignment on VALUI_CharacterCustomizationPanelBase_GetLoadoutSlotDataFromItemObject");
static_assert(sizeof(VALUI_CharacterCustomizationPanelBase_GetLoadoutSlotDataFromItemObject) == 0x000050, "Wrong size on VALUI_CharacterCustomizationPanelBase_GetLoadoutSlotDataFromItemObject");
static_assert(offsetof(VALUI_CharacterCustomizationPanelBase_GetLoadoutSlotDataFromItemObject, ItemObject) == 0x000000, "Member 'VALUI_CharacterCustomizationPanelBase_GetLoadoutSlotDataFromItemObject::ItemObject' has a wrong offset!");
static_assert(offsetof(VALUI_CharacterCustomizationPanelBase_GetLoadoutSlotDataFromItemObject, LoadoutSlotName) == 0x000008, "Member 'VALUI_CharacterCustomizationPanelBase_GetLoadoutSlotDataFromItemObject::LoadoutSlotName' has a wrong offset!");
static_assert(offsetof(VALUI_CharacterCustomizationPanelBase_GetLoadoutSlotDataFromItemObject, LoadoutSlotData) == 0x000010, "Member 'VALUI_CharacterCustomizationPanelBase_GetLoadoutSlotDataFromItemObject::LoadoutSlotData' has a wrong offset!");
static_assert(offsetof(VALUI_CharacterCustomizationPanelBase_GetLoadoutSlotDataFromItemObject, bSuccess) == 0x000048, "Member 'VALUI_CharacterCustomizationPanelBase_GetLoadoutSlotDataFromItemObject::bSuccess' has a wrong offset!");

// Function ValeriaUI.VALUI_CharacterMovementStick_Mobile.InitMovementVirtualStack
// 0x0020 (0x0020 - 0x0000)
struct VALUI_CharacterMovementStick_Mobile_InitMovementVirtualStack final
{
public:
	struct FVector2D                              DefaultPosition;                                   // 0x0000(0x0010)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ValidTouchRadius;                                  // 0x0010(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         MovementValidDistanceTemp;                         // 0x0014(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         WalkBoundaryDistanceTemp;                          // 0x0018(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2D10[0x4];                                     // 0x001C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(VALUI_CharacterMovementStick_Mobile_InitMovementVirtualStack) == 0x000008, "Wrong alignment on VALUI_CharacterMovementStick_Mobile_InitMovementVirtualStack");
static_assert(sizeof(VALUI_CharacterMovementStick_Mobile_InitMovementVirtualStack) == 0x000020, "Wrong size on VALUI_CharacterMovementStick_Mobile_InitMovementVirtualStack");
static_assert(offsetof(VALUI_CharacterMovementStick_Mobile_InitMovementVirtualStack, DefaultPosition) == 0x000000, "Member 'VALUI_CharacterMovementStick_Mobile_InitMovementVirtualStack::DefaultPosition' has a wrong offset!");
static_assert(offsetof(VALUI_CharacterMovementStick_Mobile_InitMovementVirtualStack, ValidTouchRadius) == 0x000010, "Member 'VALUI_CharacterMovementStick_Mobile_InitMovementVirtualStack::ValidTouchRadius' has a wrong offset!");
static_assert(offsetof(VALUI_CharacterMovementStick_Mobile_InitMovementVirtualStack, MovementValidDistanceTemp) == 0x000014, "Member 'VALUI_CharacterMovementStick_Mobile_InitMovementVirtualStack::MovementValidDistanceTemp' has a wrong offset!");
static_assert(offsetof(VALUI_CharacterMovementStick_Mobile_InitMovementVirtualStack, WalkBoundaryDistanceTemp) == 0x000018, "Member 'VALUI_CharacterMovementStick_Mobile_InitMovementVirtualStack::WalkBoundaryDistanceTemp' has a wrong offset!");

// Function ValeriaUI.VALUI_CharacterMovementStick_Mobile.OnUpdateMovmentVirtualStick
// 0x0028 (0x0028 - 0x0000)
struct VALUI_CharacterMovementStick_Mobile_OnUpdateMovmentVirtualStick final
{
public:
	bool                                          TouchControlFlag;                                  // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2D11[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              Pos;                                               // 0x0008(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                              ControlVector;                                     // 0x0018(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(VALUI_CharacterMovementStick_Mobile_OnUpdateMovmentVirtualStick) == 0x000008, "Wrong alignment on VALUI_CharacterMovementStick_Mobile_OnUpdateMovmentVirtualStick");
static_assert(sizeof(VALUI_CharacterMovementStick_Mobile_OnUpdateMovmentVirtualStick) == 0x000028, "Wrong size on VALUI_CharacterMovementStick_Mobile_OnUpdateMovmentVirtualStick");
static_assert(offsetof(VALUI_CharacterMovementStick_Mobile_OnUpdateMovmentVirtualStick, TouchControlFlag) == 0x000000, "Member 'VALUI_CharacterMovementStick_Mobile_OnUpdateMovmentVirtualStick::TouchControlFlag' has a wrong offset!");
static_assert(offsetof(VALUI_CharacterMovementStick_Mobile_OnUpdateMovmentVirtualStick, Pos) == 0x000008, "Member 'VALUI_CharacterMovementStick_Mobile_OnUpdateMovmentVirtualStick::Pos' has a wrong offset!");
static_assert(offsetof(VALUI_CharacterMovementStick_Mobile_OnUpdateMovmentVirtualStick, ControlVector) == 0x000018, "Member 'VALUI_CharacterMovementStick_Mobile_OnUpdateMovmentVirtualStick::ControlVector' has a wrong offset!");

// Function ValeriaUI.VALUI_CharacterMovementStick_Mobile.SetHooker
// 0x0008 (0x0008 - 0x0000)
struct VALUI_CharacterMovementStick_Mobile_SetHooker final
{
public:
	class UVALUI_CameraVirtualMoveHooker_Mobile*  VirtualMoveHooker;                                 // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(VALUI_CharacterMovementStick_Mobile_SetHooker) == 0x000008, "Wrong alignment on VALUI_CharacterMovementStick_Mobile_SetHooker");
static_assert(sizeof(VALUI_CharacterMovementStick_Mobile_SetHooker) == 0x000008, "Wrong size on VALUI_CharacterMovementStick_Mobile_SetHooker");
static_assert(offsetof(VALUI_CharacterMovementStick_Mobile_SetHooker, VirtualMoveHooker) == 0x000000, "Member 'VALUI_CharacterMovementStick_Mobile_SetHooker::VirtualMoveHooker' has a wrong offset!");

// Function ValeriaUI.VAL_ChatBubbleWidgetInterface.DisplayMessage
// 0x0068 (0x0068 - 0x0000)
struct VAL_ChatBubbleWidgetInterface_DisplayMessage final
{
public:
	struct FValeriaChatMessage                    Message;                                           // 0x0000(0x0068)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(VAL_ChatBubbleWidgetInterface_DisplayMessage) == 0x000008, "Wrong alignment on VAL_ChatBubbleWidgetInterface_DisplayMessage");
static_assert(sizeof(VAL_ChatBubbleWidgetInterface_DisplayMessage) == 0x000068, "Wrong size on VAL_ChatBubbleWidgetInterface_DisplayMessage");
static_assert(offsetof(VAL_ChatBubbleWidgetInterface_DisplayMessage, Message) == 0x000000, "Member 'VAL_ChatBubbleWidgetInterface_DisplayMessage::Message' has a wrong offset!");

// Function ValeriaUI.VALUI_ChatBubbleManager.HandleOnNewChatMessageReceived
// 0x0068 (0x0068 - 0x0000)
struct VALUI_ChatBubbleManager_HandleOnNewChatMessageReceived final
{
public:
	struct FValeriaChatMessage                    Message;                                           // 0x0000(0x0068)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(VALUI_ChatBubbleManager_HandleOnNewChatMessageReceived) == 0x000008, "Wrong alignment on VALUI_ChatBubbleManager_HandleOnNewChatMessageReceived");
static_assert(sizeof(VALUI_ChatBubbleManager_HandleOnNewChatMessageReceived) == 0x000068, "Wrong size on VALUI_ChatBubbleManager_HandleOnNewChatMessageReceived");
static_assert(offsetof(VALUI_ChatBubbleManager_HandleOnNewChatMessageReceived, Message) == 0x000000, "Member 'VALUI_ChatBubbleManager_HandleOnNewChatMessageReceived::Message' has a wrong offset!");

// Function ValeriaUI.VALUI_ChatEmojiPanel.GetTexture
// 0x0078 (0x0078 - 0x0000)
struct VALUI_ChatEmojiPanel_GetTexture final
{
public:
	struct FS6UI_FRichImageRow_Soft               ImageRow;                                          // 0x0000(0x0050)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UTexture2D>              ReturnValue;                                       // 0x0050(0x0028)(ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(VALUI_ChatEmojiPanel_GetTexture) == 0x000008, "Wrong alignment on VALUI_ChatEmojiPanel_GetTexture");
static_assert(sizeof(VALUI_ChatEmojiPanel_GetTexture) == 0x000078, "Wrong size on VALUI_ChatEmojiPanel_GetTexture");
static_assert(offsetof(VALUI_ChatEmojiPanel_GetTexture, ImageRow) == 0x000000, "Member 'VALUI_ChatEmojiPanel_GetTexture::ImageRow' has a wrong offset!");
static_assert(offsetof(VALUI_ChatEmojiPanel_GetTexture, ReturnValue) == 0x000050, "Member 'VALUI_ChatEmojiPanel_GetTexture::ReturnValue' has a wrong offset!");

// Function ValeriaUI.VALUI_ChatInputBar.ChangeMessageTarget
// 0x0030 (0x0030 - 0x0000)
struct VALUI_ChatInputBar_ChangeMessageTarget final
{
public:
	struct FMessageTarget                         MessageTarget;                                     // 0x0000(0x0028)(ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0028(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2D16[0x7];                                     // 0x0029(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(VALUI_ChatInputBar_ChangeMessageTarget) == 0x000008, "Wrong alignment on VALUI_ChatInputBar_ChangeMessageTarget");
static_assert(sizeof(VALUI_ChatInputBar_ChangeMessageTarget) == 0x000030, "Wrong size on VALUI_ChatInputBar_ChangeMessageTarget");
static_assert(offsetof(VALUI_ChatInputBar_ChangeMessageTarget, MessageTarget) == 0x000000, "Member 'VALUI_ChatInputBar_ChangeMessageTarget::MessageTarget' has a wrong offset!");
static_assert(offsetof(VALUI_ChatInputBar_ChangeMessageTarget, ReturnValue) == 0x000028, "Member 'VALUI_ChatInputBar_ChangeMessageTarget::ReturnValue' has a wrong offset!");

// Function ValeriaUI.VALUI_ChatInputBar.DisplayActiveCommandHint
// 0x0010 (0x0010 - 0x0000)
struct VALUI_ChatInputBar_DisplayActiveCommandHint final
{
public:
	const class UVAL_ChatCommand_Base*            Command;                                           // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bDisplay;                                          // 0x0008(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2D17[0x7];                                     // 0x0009(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(VALUI_ChatInputBar_DisplayActiveCommandHint) == 0x000008, "Wrong alignment on VALUI_ChatInputBar_DisplayActiveCommandHint");
static_assert(sizeof(VALUI_ChatInputBar_DisplayActiveCommandHint) == 0x000010, "Wrong size on VALUI_ChatInputBar_DisplayActiveCommandHint");
static_assert(offsetof(VALUI_ChatInputBar_DisplayActiveCommandHint, Command) == 0x000000, "Member 'VALUI_ChatInputBar_DisplayActiveCommandHint::Command' has a wrong offset!");
static_assert(offsetof(VALUI_ChatInputBar_DisplayActiveCommandHint, bDisplay) == 0x000008, "Member 'VALUI_ChatInputBar_DisplayActiveCommandHint::bDisplay' has a wrong offset!");

// Function ValeriaUI.VALUI_ChatInputBar.DisplayCommandSuggestions
// 0x0001 (0x0001 - 0x0000)
struct VALUI_ChatInputBar_DisplayCommandSuggestions final
{
public:
	bool                                          bInDisplay;                                        // 0x0000(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(VALUI_ChatInputBar_DisplayCommandSuggestions) == 0x000001, "Wrong alignment on VALUI_ChatInputBar_DisplayCommandSuggestions");
static_assert(sizeof(VALUI_ChatInputBar_DisplayCommandSuggestions) == 0x000001, "Wrong size on VALUI_ChatInputBar_DisplayCommandSuggestions");
static_assert(offsetof(VALUI_ChatInputBar_DisplayCommandSuggestions, bInDisplay) == 0x000000, "Member 'VALUI_ChatInputBar_DisplayCommandSuggestions::bInDisplay' has a wrong offset!");

// Function ValeriaUI.VALUI_ChatInputBar.DisplayStringsSuggestions
// 0x0020 (0x0020 - 0x0000)
struct VALUI_ChatInputBar_DisplayStringsSuggestions final
{
public:
	class FString                                 InString;                                          // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class FString>                         Suggestions;                                       // 0x0010(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(VALUI_ChatInputBar_DisplayStringsSuggestions) == 0x000008, "Wrong alignment on VALUI_ChatInputBar_DisplayStringsSuggestions");
static_assert(sizeof(VALUI_ChatInputBar_DisplayStringsSuggestions) == 0x000020, "Wrong size on VALUI_ChatInputBar_DisplayStringsSuggestions");
static_assert(offsetof(VALUI_ChatInputBar_DisplayStringsSuggestions, InString) == 0x000000, "Member 'VALUI_ChatInputBar_DisplayStringsSuggestions::InString' has a wrong offset!");
static_assert(offsetof(VALUI_ChatInputBar_DisplayStringsSuggestions, Suggestions) == 0x000010, "Member 'VALUI_ChatInputBar_DisplayStringsSuggestions::Suggestions' has a wrong offset!");

// Function ValeriaUI.VALUI_ChatInputBar.HandleOnChatChannelSet
// 0x00B0 (0x00B0 - 0x0000)
struct VALUI_ChatInputBar_HandleOnChatChannelSet final
{
public:
	struct FVALUI_ChatChannel                     Channel;                                           // 0x0000(0x00B0)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(VALUI_ChatInputBar_HandleOnChatChannelSet) == 0x000008, "Wrong alignment on VALUI_ChatInputBar_HandleOnChatChannelSet");
static_assert(sizeof(VALUI_ChatInputBar_HandleOnChatChannelSet) == 0x0000B0, "Wrong size on VALUI_ChatInputBar_HandleOnChatChannelSet");
static_assert(offsetof(VALUI_ChatInputBar_HandleOnChatChannelSet, Channel) == 0x000000, "Member 'VALUI_ChatInputBar_HandleOnChatChannelSet::Channel' has a wrong offset!");

// Function ValeriaUI.VALUI_ChatInputBar.HandleOnDisplayCharacterNameSuggestions
// 0x0018 (0x0018 - 0x0000)
struct VALUI_ChatInputBar_HandleOnDisplayCharacterNameSuggestions final
{
public:
	class FString                                 CharacterNameSubstr;                               // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         MaxSuggestionsNum;                                 // 0x0010(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2D18[0x4];                                     // 0x0014(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(VALUI_ChatInputBar_HandleOnDisplayCharacterNameSuggestions) == 0x000008, "Wrong alignment on VALUI_ChatInputBar_HandleOnDisplayCharacterNameSuggestions");
static_assert(sizeof(VALUI_ChatInputBar_HandleOnDisplayCharacterNameSuggestions) == 0x000018, "Wrong size on VALUI_ChatInputBar_HandleOnDisplayCharacterNameSuggestions");
static_assert(offsetof(VALUI_ChatInputBar_HandleOnDisplayCharacterNameSuggestions, CharacterNameSubstr) == 0x000000, "Member 'VALUI_ChatInputBar_HandleOnDisplayCharacterNameSuggestions::CharacterNameSubstr' has a wrong offset!");
static_assert(offsetof(VALUI_ChatInputBar_HandleOnDisplayCharacterNameSuggestions, MaxSuggestionsNum) == 0x000010, "Member 'VALUI_ChatInputBar_HandleOnDisplayCharacterNameSuggestions::MaxSuggestionsNum' has a wrong offset!");

// Function ValeriaUI.VALUI_ChatInputBar.HandleOnStateChanged
// 0x0001 (0x0001 - 0x0000)
struct VALUI_ChatInputBar_HandleOnStateChanged final
{
public:
	EVALUI_ChatInputBarState                      NewStateId;                                        // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(VALUI_ChatInputBar_HandleOnStateChanged) == 0x000001, "Wrong alignment on VALUI_ChatInputBar_HandleOnStateChanged");
static_assert(sizeof(VALUI_ChatInputBar_HandleOnStateChanged) == 0x000001, "Wrong size on VALUI_ChatInputBar_HandleOnStateChanged");
static_assert(offsetof(VALUI_ChatInputBar_HandleOnStateChanged, NewStateId) == 0x000000, "Member 'VALUI_ChatInputBar_HandleOnStateChanged::NewStateId' has a wrong offset!");

// Function ValeriaUI.VALUI_ChatInputBar.HandleOnTextChanged
// 0x0018 (0x0018 - 0x0000)
struct VALUI_ChatInputBar_HandleOnTextChanged final
{
public:
	class FText                                   InText;                                            // 0x0000(0x0018)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(VALUI_ChatInputBar_HandleOnTextChanged) == 0x000008, "Wrong alignment on VALUI_ChatInputBar_HandleOnTextChanged");
static_assert(sizeof(VALUI_ChatInputBar_HandleOnTextChanged) == 0x000018, "Wrong size on VALUI_ChatInputBar_HandleOnTextChanged");
static_assert(offsetof(VALUI_ChatInputBar_HandleOnTextChanged, InText) == 0x000000, "Member 'VALUI_ChatInputBar_HandleOnTextChanged::InText' has a wrong offset!");

// Function ValeriaUI.VALUI_ChatInputBar.HandleOnTextCommitted
// 0x0020 (0x0020 - 0x0000)
struct VALUI_ChatInputBar_HandleOnTextCommitted final
{
public:
	class FText                                   InText;                                            // 0x0000(0x0018)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	ETextCommit                                   InCommitMethod;                                    // 0x0018(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2D19[0x7];                                     // 0x0019(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(VALUI_ChatInputBar_HandleOnTextCommitted) == 0x000008, "Wrong alignment on VALUI_ChatInputBar_HandleOnTextCommitted");
static_assert(sizeof(VALUI_ChatInputBar_HandleOnTextCommitted) == 0x000020, "Wrong size on VALUI_ChatInputBar_HandleOnTextCommitted");
static_assert(offsetof(VALUI_ChatInputBar_HandleOnTextCommitted, InText) == 0x000000, "Member 'VALUI_ChatInputBar_HandleOnTextCommitted::InText' has a wrong offset!");
static_assert(offsetof(VALUI_ChatInputBar_HandleOnTextCommitted, InCommitMethod) == 0x000018, "Member 'VALUI_ChatInputBar_HandleOnTextCommitted::InCommitMethod' has a wrong offset!");

// Function ValeriaUI.VALUI_ChatInputBar.PushErrorNotification
// 0x0018 (0x0018 - 0x0000)
struct VALUI_ChatInputBar_PushErrorNotification final
{
public:
	class FText                                   InErrorText;                                       // 0x0000(0x0018)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(VALUI_ChatInputBar_PushErrorNotification) == 0x000008, "Wrong alignment on VALUI_ChatInputBar_PushErrorNotification");
static_assert(sizeof(VALUI_ChatInputBar_PushErrorNotification) == 0x000018, "Wrong size on VALUI_ChatInputBar_PushErrorNotification");
static_assert(offsetof(VALUI_ChatInputBar_PushErrorNotification, InErrorText) == 0x000000, "Member 'VALUI_ChatInputBar_PushErrorNotification::InErrorText' has a wrong offset!");

// Function ValeriaUI.VALUI_ChatInputBar.SwitchToNextChannel
// 0x0030 (0x0030 - 0x0000)
struct VALUI_ChatInputBar_SwitchToNextChannel final
{
public:
	bool                                          bSwitchUp;                                         // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2D1A[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMessageTarget                         ReturnValue;                                       // 0x0008(0x0028)(Parm, OutParm, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(VALUI_ChatInputBar_SwitchToNextChannel) == 0x000008, "Wrong alignment on VALUI_ChatInputBar_SwitchToNextChannel");
static_assert(sizeof(VALUI_ChatInputBar_SwitchToNextChannel) == 0x000030, "Wrong size on VALUI_ChatInputBar_SwitchToNextChannel");
static_assert(offsetof(VALUI_ChatInputBar_SwitchToNextChannel, bSwitchUp) == 0x000000, "Member 'VALUI_ChatInputBar_SwitchToNextChannel::bSwitchUp' has a wrong offset!");
static_assert(offsetof(VALUI_ChatInputBar_SwitchToNextChannel, ReturnValue) == 0x000008, "Member 'VALUI_ChatInputBar_SwitchToNextChannel::ReturnValue' has a wrong offset!");

// DelegateFunction ValeriaUI.VALUI_ChatInputBar.VALUIEvent_OnCommandSuggestionsChanged__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct VALUI_ChatInputBar_VALUIEvent_OnCommandSuggestionsChanged__DelegateSignature final
{
public:
	class FString                                 InString;                                          // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UVAL_ChatCommand_Base*>          CommandObjects;                                    // 0x0010(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(VALUI_ChatInputBar_VALUIEvent_OnCommandSuggestionsChanged__DelegateSignature) == 0x000008, "Wrong alignment on VALUI_ChatInputBar_VALUIEvent_OnCommandSuggestionsChanged__DelegateSignature");
static_assert(sizeof(VALUI_ChatInputBar_VALUIEvent_OnCommandSuggestionsChanged__DelegateSignature) == 0x000020, "Wrong size on VALUI_ChatInputBar_VALUIEvent_OnCommandSuggestionsChanged__DelegateSignature");
static_assert(offsetof(VALUI_ChatInputBar_VALUIEvent_OnCommandSuggestionsChanged__DelegateSignature, InString) == 0x000000, "Member 'VALUI_ChatInputBar_VALUIEvent_OnCommandSuggestionsChanged__DelegateSignature::InString' has a wrong offset!");
static_assert(offsetof(VALUI_ChatInputBar_VALUIEvent_OnCommandSuggestionsChanged__DelegateSignature, CommandObjects) == 0x000010, "Member 'VALUI_ChatInputBar_VALUIEvent_OnCommandSuggestionsChanged__DelegateSignature::CommandObjects' has a wrong offset!");

// DelegateFunction ValeriaUI.VALUI_ChatInputBar.VALUIEvent_OnCommitBlankText__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct VALUI_ChatInputBar_VALUIEvent_OnCommitBlankText__DelegateSignature final
{
public:
	class UVALUI_ChatInputBar*                    InputBar;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(VALUI_ChatInputBar_VALUIEvent_OnCommitBlankText__DelegateSignature) == 0x000008, "Wrong alignment on VALUI_ChatInputBar_VALUIEvent_OnCommitBlankText__DelegateSignature");
static_assert(sizeof(VALUI_ChatInputBar_VALUIEvent_OnCommitBlankText__DelegateSignature) == 0x000008, "Wrong size on VALUI_ChatInputBar_VALUIEvent_OnCommitBlankText__DelegateSignature");
static_assert(offsetof(VALUI_ChatInputBar_VALUIEvent_OnCommitBlankText__DelegateSignature, InputBar) == 0x000000, "Member 'VALUI_ChatInputBar_VALUIEvent_OnCommitBlankText__DelegateSignature::InputBar' has a wrong offset!");

// DelegateFunction ValeriaUI.VALUI_ChatInputBar.VALUIEvent_OnMessageSubmitted__DelegateSignature
// 0x0048 (0x0048 - 0x0000)
struct VALUI_ChatInputBar_VALUIEvent_OnMessageSubmitted__DelegateSignature final
{
public:
	class UVALUI_ChatInputBar*                    InputBar;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FMessageTarget                         MessageTarget;                                     // 0x0008(0x0028)(ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FText                                   Message;                                           // 0x0030(0x0018)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(VALUI_ChatInputBar_VALUIEvent_OnMessageSubmitted__DelegateSignature) == 0x000008, "Wrong alignment on VALUI_ChatInputBar_VALUIEvent_OnMessageSubmitted__DelegateSignature");
static_assert(sizeof(VALUI_ChatInputBar_VALUIEvent_OnMessageSubmitted__DelegateSignature) == 0x000048, "Wrong size on VALUI_ChatInputBar_VALUIEvent_OnMessageSubmitted__DelegateSignature");
static_assert(offsetof(VALUI_ChatInputBar_VALUIEvent_OnMessageSubmitted__DelegateSignature, InputBar) == 0x000000, "Member 'VALUI_ChatInputBar_VALUIEvent_OnMessageSubmitted__DelegateSignature::InputBar' has a wrong offset!");
static_assert(offsetof(VALUI_ChatInputBar_VALUIEvent_OnMessageSubmitted__DelegateSignature, MessageTarget) == 0x000008, "Member 'VALUI_ChatInputBar_VALUIEvent_OnMessageSubmitted__DelegateSignature::MessageTarget' has a wrong offset!");
static_assert(offsetof(VALUI_ChatInputBar_VALUIEvent_OnMessageSubmitted__DelegateSignature, Message) == 0x000030, "Member 'VALUI_ChatInputBar_VALUIEvent_OnMessageSubmitted__DelegateSignature::Message' has a wrong offset!");

// DelegateFunction ValeriaUI.VALUI_ChatInputBar.VALUIEvent_OnMessageTargetCycled__DelegateSignature
// 0x0030 (0x0030 - 0x0000)
struct VALUI_ChatInputBar_VALUIEvent_OnMessageTargetCycled__DelegateSignature final
{
public:
	class UVALUI_ChatInputBar*                    InputBar;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FMessageTarget                         MessageTarget;                                     // 0x0008(0x0028)(ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(VALUI_ChatInputBar_VALUIEvent_OnMessageTargetCycled__DelegateSignature) == 0x000008, "Wrong alignment on VALUI_ChatInputBar_VALUIEvent_OnMessageTargetCycled__DelegateSignature");
static_assert(sizeof(VALUI_ChatInputBar_VALUIEvent_OnMessageTargetCycled__DelegateSignature) == 0x000030, "Wrong size on VALUI_ChatInputBar_VALUIEvent_OnMessageTargetCycled__DelegateSignature");
static_assert(offsetof(VALUI_ChatInputBar_VALUIEvent_OnMessageTargetCycled__DelegateSignature, InputBar) == 0x000000, "Member 'VALUI_ChatInputBar_VALUIEvent_OnMessageTargetCycled__DelegateSignature::InputBar' has a wrong offset!");
static_assert(offsetof(VALUI_ChatInputBar_VALUIEvent_OnMessageTargetCycled__DelegateSignature, MessageTarget) == 0x000008, "Member 'VALUI_ChatInputBar_VALUIEvent_OnMessageTargetCycled__DelegateSignature::MessageTarget' has a wrong offset!");

// DelegateFunction ValeriaUI.VALUI_ChatInputBar.VALUIEvent_OnTextChanged__DelegateSignature
// 0x0038 (0x0038 - 0x0000)
struct VALUI_ChatInputBar_VALUIEvent_OnTextChanged__DelegateSignature final
{
public:
	class UVALUI_ChatInputBar*                    InputBar;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FText                                   PreviousText;                                      // 0x0008(0x0018)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	class FText                                   NewText;                                           // 0x0020(0x0018)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(VALUI_ChatInputBar_VALUIEvent_OnTextChanged__DelegateSignature) == 0x000008, "Wrong alignment on VALUI_ChatInputBar_VALUIEvent_OnTextChanged__DelegateSignature");
static_assert(sizeof(VALUI_ChatInputBar_VALUIEvent_OnTextChanged__DelegateSignature) == 0x000038, "Wrong size on VALUI_ChatInputBar_VALUIEvent_OnTextChanged__DelegateSignature");
static_assert(offsetof(VALUI_ChatInputBar_VALUIEvent_OnTextChanged__DelegateSignature, InputBar) == 0x000000, "Member 'VALUI_ChatInputBar_VALUIEvent_OnTextChanged__DelegateSignature::InputBar' has a wrong offset!");
static_assert(offsetof(VALUI_ChatInputBar_VALUIEvent_OnTextChanged__DelegateSignature, PreviousText) == 0x000008, "Member 'VALUI_ChatInputBar_VALUIEvent_OnTextChanged__DelegateSignature::PreviousText' has a wrong offset!");
static_assert(offsetof(VALUI_ChatInputBar_VALUIEvent_OnTextChanged__DelegateSignature, NewText) == 0x000020, "Member 'VALUI_ChatInputBar_VALUIEvent_OnTextChanged__DelegateSignature::NewText' has a wrong offset!");

// Function ValeriaUI.VALUI_ChatInputBar.GetCharacterName
// 0x0010 (0x0010 - 0x0000)
struct VALUI_ChatInputBar_GetCharacterName final
{
public:
	class FString                                 ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(VALUI_ChatInputBar_GetCharacterName) == 0x000008, "Wrong alignment on VALUI_ChatInputBar_GetCharacterName");
static_assert(sizeof(VALUI_ChatInputBar_GetCharacterName) == 0x000010, "Wrong size on VALUI_ChatInputBar_GetCharacterName");
static_assert(offsetof(VALUI_ChatInputBar_GetCharacterName, ReturnValue) == 0x000000, "Member 'VALUI_ChatInputBar_GetCharacterName::ReturnValue' has a wrong offset!");

// Function ValeriaUI.VALUI_EditableRichText_Styled.SetTextBlockStyle
// 0x0008 (0x0008 - 0x0000)
struct VALUI_EditableRichText_Styled_SetTextBlockStyle final
{
public:
	class UVALUI_EditableRichTextStyle*           NewStyle;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(VALUI_EditableRichText_Styled_SetTextBlockStyle) == 0x000008, "Wrong alignment on VALUI_EditableRichText_Styled_SetTextBlockStyle");
static_assert(sizeof(VALUI_EditableRichText_Styled_SetTextBlockStyle) == 0x000008, "Wrong size on VALUI_EditableRichText_Styled_SetTextBlockStyle");
static_assert(offsetof(VALUI_EditableRichText_Styled_SetTextBlockStyle, NewStyle) == 0x000000, "Member 'VALUI_EditableRichText_Styled_SetTextBlockStyle::NewStyle' has a wrong offset!");

// Function ValeriaUI.VALUI_ChatInputEditableText.InsertTextAtCursorChecked
// 0x0018 (0x0018 - 0x0000)
struct VALUI_ChatInputEditableText_InsertTextAtCursorChecked final
{
public:
	class FText                                   InText;                                            // 0x0000(0x0018)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(VALUI_ChatInputEditableText_InsertTextAtCursorChecked) == 0x000008, "Wrong alignment on VALUI_ChatInputEditableText_InsertTextAtCursorChecked");
static_assert(sizeof(VALUI_ChatInputEditableText_InsertTextAtCursorChecked) == 0x000018, "Wrong size on VALUI_ChatInputEditableText_InsertTextAtCursorChecked");
static_assert(offsetof(VALUI_ChatInputEditableText_InsertTextAtCursorChecked, InText) == 0x000000, "Member 'VALUI_ChatInputEditableText_InsertTextAtCursorChecked::InText' has a wrong offset!");

// Function ValeriaUI.VALUI_ChatInputEditableText.StyleSelectedText
// 0x0010 (0x0010 - 0x0000)
struct VALUI_ChatInputEditableText_StyleSelectedText final
{
public:
	class FString                                 StyleTagString;                                    // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(VALUI_ChatInputEditableText_StyleSelectedText) == 0x000008, "Wrong alignment on VALUI_ChatInputEditableText_StyleSelectedText");
static_assert(sizeof(VALUI_ChatInputEditableText_StyleSelectedText) == 0x000010, "Wrong size on VALUI_ChatInputEditableText_StyleSelectedText");
static_assert(offsetof(VALUI_ChatInputEditableText_StyleSelectedText, StyleTagString) == 0x000000, "Member 'VALUI_ChatInputEditableText_StyleSelectedText::StyleTagString' has a wrong offset!");

// DelegateFunction ValeriaUI.VALUI_ChatInputEditableText.VALUI_OnSummonContextMenu__DelegateSignature
// 0x00B0 (0x00B0 - 0x0000)
struct VALUI_ChatInputEditableText_VALUI_OnSummonContextMenu__DelegateSignature final
{
public:
	struct FGeometry                              Geometry;                                          // 0x0000(0x0038)(ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FPointerEvent                          MouseEvent;                                        // 0x0038(0x0078)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(VALUI_ChatInputEditableText_VALUI_OnSummonContextMenu__DelegateSignature) == 0x000008, "Wrong alignment on VALUI_ChatInputEditableText_VALUI_OnSummonContextMenu__DelegateSignature");
static_assert(sizeof(VALUI_ChatInputEditableText_VALUI_OnSummonContextMenu__DelegateSignature) == 0x0000B0, "Wrong size on VALUI_ChatInputEditableText_VALUI_OnSummonContextMenu__DelegateSignature");
static_assert(offsetof(VALUI_ChatInputEditableText_VALUI_OnSummonContextMenu__DelegateSignature, Geometry) == 0x000000, "Member 'VALUI_ChatInputEditableText_VALUI_OnSummonContextMenu__DelegateSignature::Geometry' has a wrong offset!");
static_assert(offsetof(VALUI_ChatInputEditableText_VALUI_OnSummonContextMenu__DelegateSignature, MouseEvent) == 0x000038, "Member 'VALUI_ChatInputEditableText_VALUI_OnSummonContextMenu__DelegateSignature::MouseEvent' has a wrong offset!");

// Function ValeriaUI.VALUI_ChatMessage.ColorToHexString
// 0x0020 (0x0020 - 0x0000)
struct VALUI_ChatMessage_ColorToHexString final
{
public:
	struct FLinearColor                           Color;                                             // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 ReturnValue;                                       // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(VALUI_ChatMessage_ColorToHexString) == 0x000008, "Wrong alignment on VALUI_ChatMessage_ColorToHexString");
static_assert(sizeof(VALUI_ChatMessage_ColorToHexString) == 0x000020, "Wrong size on VALUI_ChatMessage_ColorToHexString");
static_assert(offsetof(VALUI_ChatMessage_ColorToHexString, Color) == 0x000000, "Member 'VALUI_ChatMessage_ColorToHexString::Color' has a wrong offset!");
static_assert(offsetof(VALUI_ChatMessage_ColorToHexString, ReturnValue) == 0x000010, "Member 'VALUI_ChatMessage_ColorToHexString::ReturnValue' has a wrong offset!");

// Function ValeriaUI.VALUI_ChatMessage.GetTimeZone
// 0x0010 (0x0010 - 0x0000)
struct VALUI_ChatMessage_GetTimeZone final
{
public:
	class FString                                 ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(VALUI_ChatMessage_GetTimeZone) == 0x000008, "Wrong alignment on VALUI_ChatMessage_GetTimeZone");
static_assert(sizeof(VALUI_ChatMessage_GetTimeZone) == 0x000010, "Wrong size on VALUI_ChatMessage_GetTimeZone");
static_assert(offsetof(VALUI_ChatMessage_GetTimeZone, ReturnValue) == 0x000000, "Member 'VALUI_ChatMessage_GetTimeZone::ReturnValue' has a wrong offset!");

// Function ValeriaUI.VALUI_ChatPanelBase.ClearTabSidePanel
// 0x0060 (0x0060 - 0x0000)
struct VALUI_ChatPanelBase_ClearTabSidePanel final
{
public:
	struct FVALUI_ChatTab                         Tab;                                               // 0x0000(0x0060)(ConstParm, Parm, OutParm, ReferenceParm, ContainsInstancedReference, NativeAccessSpecifierPublic)
};
static_assert(alignof(VALUI_ChatPanelBase_ClearTabSidePanel) == 0x000008, "Wrong alignment on VALUI_ChatPanelBase_ClearTabSidePanel");
static_assert(sizeof(VALUI_ChatPanelBase_ClearTabSidePanel) == 0x000060, "Wrong size on VALUI_ChatPanelBase_ClearTabSidePanel");
static_assert(offsetof(VALUI_ChatPanelBase_ClearTabSidePanel, Tab) == 0x000000, "Member 'VALUI_ChatPanelBase_ClearTabSidePanel::Tab' has a wrong offset!");

// Function ValeriaUI.VALUI_ChatPanelBase.DisplayTab
// 0x0008 (0x0008 - 0x0000)
struct VALUI_ChatPanelBase_DisplayTab final
{
public:
	class FName                                   TabName;                                           // 0x0000(0x0008)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(VALUI_ChatPanelBase_DisplayTab) == 0x000004, "Wrong alignment on VALUI_ChatPanelBase_DisplayTab");
static_assert(sizeof(VALUI_ChatPanelBase_DisplayTab) == 0x000008, "Wrong size on VALUI_ChatPanelBase_DisplayTab");
static_assert(offsetof(VALUI_ChatPanelBase_DisplayTab, TabName) == 0x000000, "Member 'VALUI_ChatPanelBase_DisplayTab::TabName' has a wrong offset!");

// Function ValeriaUI.VALUI_ChatPanelBase.GetTabWidgetReferences
// 0x0018 (0x0018 - 0x0000)
struct VALUI_ChatPanelBase_GetTabWidgetReferences final
{
public:
	class FName                                   TabName;                                           // 0x0000(0x0008)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWidget*                                OutSidePanelWidget;                                // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWidget*                                OutMessagePanelWidget;                             // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(VALUI_ChatPanelBase_GetTabWidgetReferences) == 0x000008, "Wrong alignment on VALUI_ChatPanelBase_GetTabWidgetReferences");
static_assert(sizeof(VALUI_ChatPanelBase_GetTabWidgetReferences) == 0x000018, "Wrong size on VALUI_ChatPanelBase_GetTabWidgetReferences");
static_assert(offsetof(VALUI_ChatPanelBase_GetTabWidgetReferences, TabName) == 0x000000, "Member 'VALUI_ChatPanelBase_GetTabWidgetReferences::TabName' has a wrong offset!");
static_assert(offsetof(VALUI_ChatPanelBase_GetTabWidgetReferences, OutSidePanelWidget) == 0x000008, "Member 'VALUI_ChatPanelBase_GetTabWidgetReferences::OutSidePanelWidget' has a wrong offset!");
static_assert(offsetof(VALUI_ChatPanelBase_GetTabWidgetReferences, OutMessagePanelWidget) == 0x000010, "Member 'VALUI_ChatPanelBase_GetTabWidgetReferences::OutMessagePanelWidget' has a wrong offset!");

// Function ValeriaUI.VALUI_ChatPanelBase.GotoChatState
// 0x0001 (0x0001 - 0x0000)
struct VALUI_ChatPanelBase_GotoChatState final
{
public:
	EVALUI_ChatPanelState                         State;                                             // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(VALUI_ChatPanelBase_GotoChatState) == 0x000001, "Wrong alignment on VALUI_ChatPanelBase_GotoChatState");
static_assert(sizeof(VALUI_ChatPanelBase_GotoChatState) == 0x000001, "Wrong size on VALUI_ChatPanelBase_GotoChatState");
static_assert(offsetof(VALUI_ChatPanelBase_GotoChatState, State) == 0x000000, "Member 'VALUI_ChatPanelBase_GotoChatState::State' has a wrong offset!");

// Function ValeriaUI.VALUI_ChatPanelBase.HandleAddMessageToPanel
// 0x0080 (0x0080 - 0x0000)
struct VALUI_ChatPanelBase_HandleAddMessageToPanel final
{
public:
	class UWidget*                                MessagePanel;                                      // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FValeriaChatMessage                    ChatMessage;                                       // 0x0008(0x0068)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	struct FVALUI_ChatMessageConfig               MessageConfig;                                     // 0x0070(0x000C)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_2D1E[0x4];                                     // 0x007C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(VALUI_ChatPanelBase_HandleAddMessageToPanel) == 0x000008, "Wrong alignment on VALUI_ChatPanelBase_HandleAddMessageToPanel");
static_assert(sizeof(VALUI_ChatPanelBase_HandleAddMessageToPanel) == 0x000080, "Wrong size on VALUI_ChatPanelBase_HandleAddMessageToPanel");
static_assert(offsetof(VALUI_ChatPanelBase_HandleAddMessageToPanel, MessagePanel) == 0x000000, "Member 'VALUI_ChatPanelBase_HandleAddMessageToPanel::MessagePanel' has a wrong offset!");
static_assert(offsetof(VALUI_ChatPanelBase_HandleAddMessageToPanel, ChatMessage) == 0x000008, "Member 'VALUI_ChatPanelBase_HandleAddMessageToPanel::ChatMessage' has a wrong offset!");
static_assert(offsetof(VALUI_ChatPanelBase_HandleAddMessageToPanel, MessageConfig) == 0x000070, "Member 'VALUI_ChatPanelBase_HandleAddMessageToPanel::MessageConfig' has a wrong offset!");

// Function ValeriaUI.VALUI_ChatPanelBase.HandleAddTabChannel
// 0x000C (0x000C - 0x0000)
struct VALUI_ChatPanelBase_HandleAddTabChannel final
{
public:
	struct FVALUI_ChatMessageConfig               MessageConfig;                                     // 0x0000(0x000C)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(VALUI_ChatPanelBase_HandleAddTabChannel) == 0x000004, "Wrong alignment on VALUI_ChatPanelBase_HandleAddTabChannel");
static_assert(sizeof(VALUI_ChatPanelBase_HandleAddTabChannel) == 0x00000C, "Wrong size on VALUI_ChatPanelBase_HandleAddTabChannel");
static_assert(offsetof(VALUI_ChatPanelBase_HandleAddTabChannel, MessageConfig) == 0x000000, "Member 'VALUI_ChatPanelBase_HandleAddTabChannel::MessageConfig' has a wrong offset!");

// Function ValeriaUI.VALUI_ChatPanelBase.HandleAddTabToTabHost
// 0x0020 (0x0020 - 0x0000)
struct VALUI_ChatPanelBase_HandleAddTabToTabHost final
{
public:
	class FName                                   TabName;                                           // 0x0000(0x0008)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FText                                   TabDisplayName;                                    // 0x0008(0x0018)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(VALUI_ChatPanelBase_HandleAddTabToTabHost) == 0x000008, "Wrong alignment on VALUI_ChatPanelBase_HandleAddTabToTabHost");
static_assert(sizeof(VALUI_ChatPanelBase_HandleAddTabToTabHost) == 0x000020, "Wrong size on VALUI_ChatPanelBase_HandleAddTabToTabHost");
static_assert(offsetof(VALUI_ChatPanelBase_HandleAddTabToTabHost, TabName) == 0x000000, "Member 'VALUI_ChatPanelBase_HandleAddTabToTabHost::TabName' has a wrong offset!");
static_assert(offsetof(VALUI_ChatPanelBase_HandleAddTabToTabHost, TabDisplayName) == 0x000008, "Member 'VALUI_ChatPanelBase_HandleAddTabToTabHost::TabDisplayName' has a wrong offset!");

// Function ValeriaUI.VALUI_ChatPanelBase.HandleClearMessagePanel
// 0x0008 (0x0008 - 0x0000)
struct VALUI_ChatPanelBase_HandleClearMessagePanel final
{
public:
	class UWidget*                                MessagePanel;                                      // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(VALUI_ChatPanelBase_HandleClearMessagePanel) == 0x000008, "Wrong alignment on VALUI_ChatPanelBase_HandleClearMessagePanel");
static_assert(sizeof(VALUI_ChatPanelBase_HandleClearMessagePanel) == 0x000008, "Wrong size on VALUI_ChatPanelBase_HandleClearMessagePanel");
static_assert(offsetof(VALUI_ChatPanelBase_HandleClearMessagePanel, MessagePanel) == 0x000000, "Member 'VALUI_ChatPanelBase_HandleClearMessagePanel::MessagePanel' has a wrong offset!");

// Function ValeriaUI.VALUI_ChatPanelBase.HandleDisplayChannelGlow
// 0x00C0 (0x00C0 - 0x0000)
struct VALUI_ChatPanelBase_HandleDisplayChannelGlow final
{
public:
	class UWidget*                                SidePanel;                                         // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVALUI_ChatChannel                     Channel;                                           // 0x0008(0x00B0)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	int32                                         ChannelIndex;                                      // 0x00B8(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2D1F[0x4];                                     // 0x00BC(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(VALUI_ChatPanelBase_HandleDisplayChannelGlow) == 0x000008, "Wrong alignment on VALUI_ChatPanelBase_HandleDisplayChannelGlow");
static_assert(sizeof(VALUI_ChatPanelBase_HandleDisplayChannelGlow) == 0x0000C0, "Wrong size on VALUI_ChatPanelBase_HandleDisplayChannelGlow");
static_assert(offsetof(VALUI_ChatPanelBase_HandleDisplayChannelGlow, SidePanel) == 0x000000, "Member 'VALUI_ChatPanelBase_HandleDisplayChannelGlow::SidePanel' has a wrong offset!");
static_assert(offsetof(VALUI_ChatPanelBase_HandleDisplayChannelGlow, Channel) == 0x000008, "Member 'VALUI_ChatPanelBase_HandleDisplayChannelGlow::Channel' has a wrong offset!");
static_assert(offsetof(VALUI_ChatPanelBase_HandleDisplayChannelGlow, ChannelIndex) == 0x0000B8, "Member 'VALUI_ChatPanelBase_HandleDisplayChannelGlow::ChannelIndex' has a wrong offset!");

// Function ValeriaUI.VALUI_ChatPanelBase.HandleDisplayTab
// 0x0008 (0x0008 - 0x0000)
struct VALUI_ChatPanelBase_HandleDisplayTab final
{
public:
	class FName                                   TabName;                                           // 0x0000(0x0008)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(VALUI_ChatPanelBase_HandleDisplayTab) == 0x000004, "Wrong alignment on VALUI_ChatPanelBase_HandleDisplayTab");
static_assert(sizeof(VALUI_ChatPanelBase_HandleDisplayTab) == 0x000008, "Wrong size on VALUI_ChatPanelBase_HandleDisplayTab");
static_assert(offsetof(VALUI_ChatPanelBase_HandleDisplayTab, TabName) == 0x000000, "Member 'VALUI_ChatPanelBase_HandleDisplayTab::TabName' has a wrong offset!");

// Function ValeriaUI.VALUI_ChatPanelBase.HandleMessageTargetRemoved
// 0x0028 (0x0028 - 0x0000)
struct VALUI_ChatPanelBase_HandleMessageTargetRemoved final
{
public:
	struct FMessageTarget                         MessageTarget;                                     // 0x0000(0x0028)(Parm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(VALUI_ChatPanelBase_HandleMessageTargetRemoved) == 0x000008, "Wrong alignment on VALUI_ChatPanelBase_HandleMessageTargetRemoved");
static_assert(sizeof(VALUI_ChatPanelBase_HandleMessageTargetRemoved) == 0x000028, "Wrong size on VALUI_ChatPanelBase_HandleMessageTargetRemoved");
static_assert(offsetof(VALUI_ChatPanelBase_HandleMessageTargetRemoved, MessageTarget) == 0x000000, "Member 'VALUI_ChatPanelBase_HandleMessageTargetRemoved::MessageTarget' has a wrong offset!");

// Function ValeriaUI.VALUI_ChatPanelBase.HandleNewChatMessage
// 0x0068 (0x0068 - 0x0000)
struct VALUI_ChatPanelBase_HandleNewChatMessage final
{
public:
	struct FValeriaChatMessage                    ChatMessage;                                       // 0x0000(0x0068)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(VALUI_ChatPanelBase_HandleNewChatMessage) == 0x000008, "Wrong alignment on VALUI_ChatPanelBase_HandleNewChatMessage");
static_assert(sizeof(VALUI_ChatPanelBase_HandleNewChatMessage) == 0x000068, "Wrong size on VALUI_ChatPanelBase_HandleNewChatMessage");
static_assert(offsetof(VALUI_ChatPanelBase_HandleNewChatMessage, ChatMessage) == 0x000000, "Member 'VALUI_ChatPanelBase_HandleNewChatMessage::ChatMessage' has a wrong offset!");

// Function ValeriaUI.VALUI_ChatPanelBase.HandleNewControlMessage
// 0x0070 (0x0070 - 0x0000)
struct VALUI_ChatPanelBase_HandleNewControlMessage final
{
public:
	struct FControlMessage                        ControlMessage;                                    // 0x0000(0x0070)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(VALUI_ChatPanelBase_HandleNewControlMessage) == 0x000008, "Wrong alignment on VALUI_ChatPanelBase_HandleNewControlMessage");
static_assert(sizeof(VALUI_ChatPanelBase_HandleNewControlMessage) == 0x000070, "Wrong size on VALUI_ChatPanelBase_HandleNewControlMessage");
static_assert(offsetof(VALUI_ChatPanelBase_HandleNewControlMessage, ControlMessage) == 0x000000, "Member 'VALUI_ChatPanelBase_HandleNewControlMessage::ControlMessage' has a wrong offset!");

// Function ValeriaUI.VALUI_ChatPanelBase.HandleNewMessageTarget
// 0x0028 (0x0028 - 0x0000)
struct VALUI_ChatPanelBase_HandleNewMessageTarget final
{
public:
	struct FMessageTarget                         MessageTarget;                                     // 0x0000(0x0028)(Parm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(VALUI_ChatPanelBase_HandleNewMessageTarget) == 0x000008, "Wrong alignment on VALUI_ChatPanelBase_HandleNewMessageTarget");
static_assert(sizeof(VALUI_ChatPanelBase_HandleNewMessageTarget) == 0x000028, "Wrong size on VALUI_ChatPanelBase_HandleNewMessageTarget");
static_assert(offsetof(VALUI_ChatPanelBase_HandleNewMessageTarget, MessageTarget) == 0x000000, "Member 'VALUI_ChatPanelBase_HandleNewMessageTarget::MessageTarget' has a wrong offset!");

// Function ValeriaUI.VALUI_ChatPanelBase.HandleOnStateChanged
// 0x0001 (0x0001 - 0x0000)
struct VALUI_ChatPanelBase_HandleOnStateChanged final
{
public:
	EVALUI_ChatPanelState                         State;                                             // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(VALUI_ChatPanelBase_HandleOnStateChanged) == 0x000001, "Wrong alignment on VALUI_ChatPanelBase_HandleOnStateChanged");
static_assert(sizeof(VALUI_ChatPanelBase_HandleOnStateChanged) == 0x000001, "Wrong size on VALUI_ChatPanelBase_HandleOnStateChanged");
static_assert(offsetof(VALUI_ChatPanelBase_HandleOnStateChanged, State) == 0x000000, "Member 'VALUI_ChatPanelBase_HandleOnStateChanged::State' has a wrong offset!");

// Function ValeriaUI.VALUI_ChatPanelBase.HandleRemoveSidePanelChannel
// 0x0010 (0x0010 - 0x0000)
struct VALUI_ChatPanelBase_HandleRemoveSidePanelChannel final
{
public:
	class UWidget*                                SidePanel;                                         // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ChannelIndex;                                      // 0x0008(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2D20[0x4];                                     // 0x000C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(VALUI_ChatPanelBase_HandleRemoveSidePanelChannel) == 0x000008, "Wrong alignment on VALUI_ChatPanelBase_HandleRemoveSidePanelChannel");
static_assert(sizeof(VALUI_ChatPanelBase_HandleRemoveSidePanelChannel) == 0x000010, "Wrong size on VALUI_ChatPanelBase_HandleRemoveSidePanelChannel");
static_assert(offsetof(VALUI_ChatPanelBase_HandleRemoveSidePanelChannel, SidePanel) == 0x000000, "Member 'VALUI_ChatPanelBase_HandleRemoveSidePanelChannel::SidePanel' has a wrong offset!");
static_assert(offsetof(VALUI_ChatPanelBase_HandleRemoveSidePanelChannel, ChannelIndex) == 0x000008, "Member 'VALUI_ChatPanelBase_HandleRemoveSidePanelChannel::ChannelIndex' has a wrong offset!");

// Function ValeriaUI.VALUI_ChatPanelBase.HandleTabChannelEnabled
// 0x0120 (0x0120 - 0x0000)
struct VALUI_ChatPanelBase_HandleTabChannelEnabled final
{
public:
	struct FVALUI_ChatTab                         Tab;                                               // 0x0000(0x0060)(ConstParm, Parm, OutParm, ReferenceParm, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FVALUI_ChatChannel                     Channel;                                           // 0x0060(0x00B0)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	struct FVALUI_ChatMessageConfig               Config;                                            // 0x0110(0x000C)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_2D21[0x4];                                     // 0x011C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(VALUI_ChatPanelBase_HandleTabChannelEnabled) == 0x000008, "Wrong alignment on VALUI_ChatPanelBase_HandleTabChannelEnabled");
static_assert(sizeof(VALUI_ChatPanelBase_HandleTabChannelEnabled) == 0x000120, "Wrong size on VALUI_ChatPanelBase_HandleTabChannelEnabled");
static_assert(offsetof(VALUI_ChatPanelBase_HandleTabChannelEnabled, Tab) == 0x000000, "Member 'VALUI_ChatPanelBase_HandleTabChannelEnabled::Tab' has a wrong offset!");
static_assert(offsetof(VALUI_ChatPanelBase_HandleTabChannelEnabled, Channel) == 0x000060, "Member 'VALUI_ChatPanelBase_HandleTabChannelEnabled::Channel' has a wrong offset!");
static_assert(offsetof(VALUI_ChatPanelBase_HandleTabChannelEnabled, Config) == 0x000110, "Member 'VALUI_ChatPanelBase_HandleTabChannelEnabled::Config' has a wrong offset!");

// Function ValeriaUI.VALUI_ChatPanelBase.HandleToggleTabHost
// 0x0001 (0x0001 - 0x0000)
struct VALUI_ChatPanelBase_HandleToggleTabHost final
{
public:
	bool                                          bEnabled;                                          // 0x0000(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(VALUI_ChatPanelBase_HandleToggleTabHost) == 0x000001, "Wrong alignment on VALUI_ChatPanelBase_HandleToggleTabHost");
static_assert(sizeof(VALUI_ChatPanelBase_HandleToggleTabHost) == 0x000001, "Wrong size on VALUI_ChatPanelBase_HandleToggleTabHost");
static_assert(offsetof(VALUI_ChatPanelBase_HandleToggleTabHost, bEnabled) == 0x000000, "Member 'VALUI_ChatPanelBase_HandleToggleTabHost::bEnabled' has a wrong offset!");

// Function ValeriaUI.VALUI_ChatPanelBase.IsTabChannelEnabled
// 0x0038 (0x0038 - 0x0000)
struct VALUI_ChatPanelBase_IsTabChannelEnabled final
{
public:
	class FName                                   TabName;                                           // 0x0000(0x0008)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FMessageTarget                         MessageTarget;                                     // 0x0008(0x0028)(ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0030(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2D22[0x7];                                     // 0x0031(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(VALUI_ChatPanelBase_IsTabChannelEnabled) == 0x000008, "Wrong alignment on VALUI_ChatPanelBase_IsTabChannelEnabled");
static_assert(sizeof(VALUI_ChatPanelBase_IsTabChannelEnabled) == 0x000038, "Wrong size on VALUI_ChatPanelBase_IsTabChannelEnabled");
static_assert(offsetof(VALUI_ChatPanelBase_IsTabChannelEnabled, TabName) == 0x000000, "Member 'VALUI_ChatPanelBase_IsTabChannelEnabled::TabName' has a wrong offset!");
static_assert(offsetof(VALUI_ChatPanelBase_IsTabChannelEnabled, MessageTarget) == 0x000008, "Member 'VALUI_ChatPanelBase_IsTabChannelEnabled::MessageTarget' has a wrong offset!");
static_assert(offsetof(VALUI_ChatPanelBase_IsTabChannelEnabled, ReturnValue) == 0x000030, "Member 'VALUI_ChatPanelBase_IsTabChannelEnabled::ReturnValue' has a wrong offset!");

// Function ValeriaUI.VALUI_ChatPanelBase.OnNewChatMessageAdded
// 0x0068 (0x0068 - 0x0000)
struct VALUI_ChatPanelBase_OnNewChatMessageAdded final
{
public:
	struct FValeriaChatMessage                    ChatMessage;                                       // 0x0000(0x0068)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(VALUI_ChatPanelBase_OnNewChatMessageAdded) == 0x000008, "Wrong alignment on VALUI_ChatPanelBase_OnNewChatMessageAdded");
static_assert(sizeof(VALUI_ChatPanelBase_OnNewChatMessageAdded) == 0x000068, "Wrong size on VALUI_ChatPanelBase_OnNewChatMessageAdded");
static_assert(offsetof(VALUI_ChatPanelBase_OnNewChatMessageAdded, ChatMessage) == 0x000000, "Member 'VALUI_ChatPanelBase_OnNewChatMessageAdded::ChatMessage' has a wrong offset!");

// Function ValeriaUI.VALUI_ChatPanelBase.RemoveTabChannel
// 0x0068 (0x0068 - 0x0000)
struct VALUI_ChatPanelBase_RemoveTabChannel final
{
public:
	struct FVALUI_ChatTab                         Tab;                                               // 0x0000(0x0060)(Parm, OutParm, ContainsInstancedReference, NativeAccessSpecifierPublic)
	int32                                         ChannelIndex;                                      // 0x0060(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2D23[0x4];                                     // 0x0064(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(VALUI_ChatPanelBase_RemoveTabChannel) == 0x000008, "Wrong alignment on VALUI_ChatPanelBase_RemoveTabChannel");
static_assert(sizeof(VALUI_ChatPanelBase_RemoveTabChannel) == 0x000068, "Wrong size on VALUI_ChatPanelBase_RemoveTabChannel");
static_assert(offsetof(VALUI_ChatPanelBase_RemoveTabChannel, Tab) == 0x000000, "Member 'VALUI_ChatPanelBase_RemoveTabChannel::Tab' has a wrong offset!");
static_assert(offsetof(VALUI_ChatPanelBase_RemoveTabChannel, ChannelIndex) == 0x000060, "Member 'VALUI_ChatPanelBase_RemoveTabChannel::ChannelIndex' has a wrong offset!");

// Function ValeriaUI.VALUI_ChatPanelBase.SwitchTab
// 0x0008 (0x0008 - 0x0000)
struct VALUI_ChatPanelBase_SwitchTab final
{
public:
	class FName                                   TabName;                                           // 0x0000(0x0008)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(VALUI_ChatPanelBase_SwitchTab) == 0x000004, "Wrong alignment on VALUI_ChatPanelBase_SwitchTab");
static_assert(sizeof(VALUI_ChatPanelBase_SwitchTab) == 0x000008, "Wrong size on VALUI_ChatPanelBase_SwitchTab");
static_assert(offsetof(VALUI_ChatPanelBase_SwitchTab, TabName) == 0x000000, "Member 'VALUI_ChatPanelBase_SwitchTab::TabName' has a wrong offset!");

// Function ValeriaUI.VALUI_ChatPanelBase.ToggleAllChannels
// 0x0001 (0x0001 - 0x0000)
struct VALUI_ChatPanelBase_ToggleAllChannels final
{
public:
	bool                                          bEnabled;                                          // 0x0000(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(VALUI_ChatPanelBase_ToggleAllChannels) == 0x000001, "Wrong alignment on VALUI_ChatPanelBase_ToggleAllChannels");
static_assert(sizeof(VALUI_ChatPanelBase_ToggleAllChannels) == 0x000001, "Wrong size on VALUI_ChatPanelBase_ToggleAllChannels");
static_assert(offsetof(VALUI_ChatPanelBase_ToggleAllChannels, bEnabled) == 0x000000, "Member 'VALUI_ChatPanelBase_ToggleAllChannels::bEnabled' has a wrong offset!");

// Function ValeriaUI.VALUI_ChatPanelBase.ToggleChannelsByType
// 0x0002 (0x0002 - 0x0000)
struct VALUI_ChatPanelBase_ToggleChannelsByType final
{
public:
	bool                                          bEnabled;                                          // 0x0000(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EMessageTargetType                            Type;                                              // 0x0001(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(VALUI_ChatPanelBase_ToggleChannelsByType) == 0x000001, "Wrong alignment on VALUI_ChatPanelBase_ToggleChannelsByType");
static_assert(sizeof(VALUI_ChatPanelBase_ToggleChannelsByType) == 0x000002, "Wrong size on VALUI_ChatPanelBase_ToggleChannelsByType");
static_assert(offsetof(VALUI_ChatPanelBase_ToggleChannelsByType, bEnabled) == 0x000000, "Member 'VALUI_ChatPanelBase_ToggleChannelsByType::bEnabled' has a wrong offset!");
static_assert(offsetof(VALUI_ChatPanelBase_ToggleChannelsByType, Type) == 0x000001, "Member 'VALUI_ChatPanelBase_ToggleChannelsByType::Type' has a wrong offset!");

// Function ValeriaUI.VALUI_ChatPanelBase.ToggleChatChannel
// 0x000C (0x000C - 0x0000)
struct VALUI_ChatPanelBase_ToggleChatChannel final
{
public:
	struct FVALUI_ChatMessageConfig               MessageConfig;                                     // 0x0000(0x000C)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(VALUI_ChatPanelBase_ToggleChatChannel) == 0x000004, "Wrong alignment on VALUI_ChatPanelBase_ToggleChatChannel");
static_assert(sizeof(VALUI_ChatPanelBase_ToggleChatChannel) == 0x00000C, "Wrong size on VALUI_ChatPanelBase_ToggleChatChannel");
static_assert(offsetof(VALUI_ChatPanelBase_ToggleChatChannel, MessageConfig) == 0x000000, "Member 'VALUI_ChatPanelBase_ToggleChatChannel::MessageConfig' has a wrong offset!");

// Function ValeriaUI.VALUI_ChatPanelBase.GetChatMessageConfigs
// 0x0078 (0x0078 - 0x0000)
struct VALUI_ChatPanelBase_GetChatMessageConfigs final
{
public:
	struct FValeriaChatMessage                    Message;                                           // 0x0000(0x0068)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	TArray<struct FVALUI_ChatMessageConfig>       OutMessageConfigs;                                 // 0x0068(0x0010)(Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(VALUI_ChatPanelBase_GetChatMessageConfigs) == 0x000008, "Wrong alignment on VALUI_ChatPanelBase_GetChatMessageConfigs");
static_assert(sizeof(VALUI_ChatPanelBase_GetChatMessageConfigs) == 0x000078, "Wrong size on VALUI_ChatPanelBase_GetChatMessageConfigs");
static_assert(offsetof(VALUI_ChatPanelBase_GetChatMessageConfigs, Message) == 0x000000, "Member 'VALUI_ChatPanelBase_GetChatMessageConfigs::Message' has a wrong offset!");
static_assert(offsetof(VALUI_ChatPanelBase_GetChatMessageConfigs, OutMessageConfigs) == 0x000068, "Member 'VALUI_ChatPanelBase_GetChatMessageConfigs::OutMessageConfigs' has a wrong offset!");

// Function ValeriaUI.VALUI_ChatPanelBase.GetCurrentChatState
// 0x0001 (0x0001 - 0x0000)
struct VALUI_ChatPanelBase_GetCurrentChatState final
{
public:
	EVALUI_ChatPanelState                         ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(VALUI_ChatPanelBase_GetCurrentChatState) == 0x000001, "Wrong alignment on VALUI_ChatPanelBase_GetCurrentChatState");
static_assert(sizeof(VALUI_ChatPanelBase_GetCurrentChatState) == 0x000001, "Wrong size on VALUI_ChatPanelBase_GetCurrentChatState");
static_assert(offsetof(VALUI_ChatPanelBase_GetCurrentChatState, ReturnValue) == 0x000000, "Member 'VALUI_ChatPanelBase_GetCurrentChatState::ReturnValue' has a wrong offset!");

// Function ValeriaUI.VALUI_ChatPanelBase.TryGetTabAndChannelFromMessageConfig
// 0x0128 (0x0128 - 0x0000)
struct VALUI_ChatPanelBase_TryGetTabAndChannelFromMessageConfig final
{
public:
	struct FVALUI_ChatMessageConfig               Config;                                            // 0x0000(0x000C)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_2D24[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVALUI_ChatTab                         OutTab;                                            // 0x0010(0x0060)(Parm, OutParm, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FVALUI_ChatChannel                     OutChannel;                                        // 0x0070(0x00B0)(Parm, OutParm, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0120(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2D25[0x7];                                     // 0x0121(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(VALUI_ChatPanelBase_TryGetTabAndChannelFromMessageConfig) == 0x000008, "Wrong alignment on VALUI_ChatPanelBase_TryGetTabAndChannelFromMessageConfig");
static_assert(sizeof(VALUI_ChatPanelBase_TryGetTabAndChannelFromMessageConfig) == 0x000128, "Wrong size on VALUI_ChatPanelBase_TryGetTabAndChannelFromMessageConfig");
static_assert(offsetof(VALUI_ChatPanelBase_TryGetTabAndChannelFromMessageConfig, Config) == 0x000000, "Member 'VALUI_ChatPanelBase_TryGetTabAndChannelFromMessageConfig::Config' has a wrong offset!");
static_assert(offsetof(VALUI_ChatPanelBase_TryGetTabAndChannelFromMessageConfig, OutTab) == 0x000010, "Member 'VALUI_ChatPanelBase_TryGetTabAndChannelFromMessageConfig::OutTab' has a wrong offset!");
static_assert(offsetof(VALUI_ChatPanelBase_TryGetTabAndChannelFromMessageConfig, OutChannel) == 0x000070, "Member 'VALUI_ChatPanelBase_TryGetTabAndChannelFromMessageConfig::OutChannel' has a wrong offset!");
static_assert(offsetof(VALUI_ChatPanelBase_TryGetTabAndChannelFromMessageConfig, ReturnValue) == 0x000120, "Member 'VALUI_ChatPanelBase_TryGetTabAndChannelFromMessageConfig::ReturnValue' has a wrong offset!");

// Function ValeriaUI.VALUI_ChatStatics.ConvertValeriaChatMessagesArrayToPlatformChatMessagesArray
// 0x0020 (0x0020 - 0x0000)
struct VALUI_ChatStatics_ConvertValeriaChatMessagesArrayToPlatformChatMessagesArray final
{
public:
	TArray<struct FValeriaChatMessage>            ChatMessages;                                      // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	TArray<struct FS6PLAT_ChatMessage>            ReturnValue;                                       // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(VALUI_ChatStatics_ConvertValeriaChatMessagesArrayToPlatformChatMessagesArray) == 0x000008, "Wrong alignment on VALUI_ChatStatics_ConvertValeriaChatMessagesArrayToPlatformChatMessagesArray");
static_assert(sizeof(VALUI_ChatStatics_ConvertValeriaChatMessagesArrayToPlatformChatMessagesArray) == 0x000020, "Wrong size on VALUI_ChatStatics_ConvertValeriaChatMessagesArrayToPlatformChatMessagesArray");
static_assert(offsetof(VALUI_ChatStatics_ConvertValeriaChatMessagesArrayToPlatformChatMessagesArray, ChatMessages) == 0x000000, "Member 'VALUI_ChatStatics_ConvertValeriaChatMessagesArrayToPlatformChatMessagesArray::ChatMessages' has a wrong offset!");
static_assert(offsetof(VALUI_ChatStatics_ConvertValeriaChatMessagesArrayToPlatformChatMessagesArray, ReturnValue) == 0x000010, "Member 'VALUI_ChatStatics_ConvertValeriaChatMessagesArrayToPlatformChatMessagesArray::ReturnValue' has a wrong offset!");

// Function ValeriaUI.VALUI_ChatStatics.ConvertValeriaChatMessageToPlatformChatMessage
// 0x00B0 (0x00B0 - 0x0000)
struct VALUI_ChatStatics_ConvertValeriaChatMessageToPlatformChatMessage final
{
public:
	struct FValeriaChatMessage                    ChatMessages;                                      // 0x0000(0x0068)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	struct FS6PLAT_ChatMessage                    ReturnValue;                                       // 0x0068(0x0048)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(VALUI_ChatStatics_ConvertValeriaChatMessageToPlatformChatMessage) == 0x000008, "Wrong alignment on VALUI_ChatStatics_ConvertValeriaChatMessageToPlatformChatMessage");
static_assert(sizeof(VALUI_ChatStatics_ConvertValeriaChatMessageToPlatformChatMessage) == 0x0000B0, "Wrong size on VALUI_ChatStatics_ConvertValeriaChatMessageToPlatformChatMessage");
static_assert(offsetof(VALUI_ChatStatics_ConvertValeriaChatMessageToPlatformChatMessage, ChatMessages) == 0x000000, "Member 'VALUI_ChatStatics_ConvertValeriaChatMessageToPlatformChatMessage::ChatMessages' has a wrong offset!");
static_assert(offsetof(VALUI_ChatStatics_ConvertValeriaChatMessageToPlatformChatMessage, ReturnValue) == 0x000068, "Member 'VALUI_ChatStatics_ConvertValeriaChatMessageToPlatformChatMessage::ReturnValue' has a wrong offset!");

// Function ValeriaUI.VALUI_ChatStatics.DoesChannelMatchMessageTarget
// 0x00E0 (0x00E0 - 0x0000)
struct VALUI_ChatStatics_DoesChannelMatchMessageTarget final
{
public:
	struct FVALUI_ChatChannel                     InChannel;                                         // 0x0000(0x00B0)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	struct FMessageTarget                         InMessageTarget;                                   // 0x00B0(0x0028)(ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x00D8(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2D26[0x7];                                     // 0x00D9(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(VALUI_ChatStatics_DoesChannelMatchMessageTarget) == 0x000008, "Wrong alignment on VALUI_ChatStatics_DoesChannelMatchMessageTarget");
static_assert(sizeof(VALUI_ChatStatics_DoesChannelMatchMessageTarget) == 0x0000E0, "Wrong size on VALUI_ChatStatics_DoesChannelMatchMessageTarget");
static_assert(offsetof(VALUI_ChatStatics_DoesChannelMatchMessageTarget, InChannel) == 0x000000, "Member 'VALUI_ChatStatics_DoesChannelMatchMessageTarget::InChannel' has a wrong offset!");
static_assert(offsetof(VALUI_ChatStatics_DoesChannelMatchMessageTarget, InMessageTarget) == 0x0000B0, "Member 'VALUI_ChatStatics_DoesChannelMatchMessageTarget::InMessageTarget' has a wrong offset!");
static_assert(offsetof(VALUI_ChatStatics_DoesChannelMatchMessageTarget, ReturnValue) == 0x0000D8, "Member 'VALUI_ChatStatics_DoesChannelMatchMessageTarget::ReturnValue' has a wrong offset!");

// Function ValeriaUI.VALUI_ChatStatics.FetchChatMessages
// 0x0070 (0x0070 - 0x0000)
struct VALUI_ChatStatics_FetchChatMessages final
{
public:
	class UObject*                                WorldContextObject;                                // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVALUI_ChatMessageFetchFilter          Filter;                                            // 0x0008(0x0058)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	TArray<struct FValeriaChatMessage>            ReturnValue;                                       // 0x0060(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(VALUI_ChatStatics_FetchChatMessages) == 0x000008, "Wrong alignment on VALUI_ChatStatics_FetchChatMessages");
static_assert(sizeof(VALUI_ChatStatics_FetchChatMessages) == 0x000070, "Wrong size on VALUI_ChatStatics_FetchChatMessages");
static_assert(offsetof(VALUI_ChatStatics_FetchChatMessages, WorldContextObject) == 0x000000, "Member 'VALUI_ChatStatics_FetchChatMessages::WorldContextObject' has a wrong offset!");
static_assert(offsetof(VALUI_ChatStatics_FetchChatMessages, Filter) == 0x000008, "Member 'VALUI_ChatStatics_FetchChatMessages::Filter' has a wrong offset!");
static_assert(offsetof(VALUI_ChatStatics_FetchChatMessages, ReturnValue) == 0x000060, "Member 'VALUI_ChatStatics_FetchChatMessages::ReturnValue' has a wrong offset!");

// Function ValeriaUI.VALUI_ChatStatics.GetMessageTargetsOfChannel
// 0x00C8 (0x00C8 - 0x0000)
struct VALUI_ChatStatics_GetMessageTargetsOfChannel final
{
public:
	class UWorld*                                 WorldContext;                                      // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVALUI_ChatChannel                     InChannel;                                         // 0x0008(0x00B0)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	TArray<struct FMessageTarget>                 ReturnValue;                                       // 0x00B8(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(VALUI_ChatStatics_GetMessageTargetsOfChannel) == 0x000008, "Wrong alignment on VALUI_ChatStatics_GetMessageTargetsOfChannel");
static_assert(sizeof(VALUI_ChatStatics_GetMessageTargetsOfChannel) == 0x0000C8, "Wrong size on VALUI_ChatStatics_GetMessageTargetsOfChannel");
static_assert(offsetof(VALUI_ChatStatics_GetMessageTargetsOfChannel, WorldContext) == 0x000000, "Member 'VALUI_ChatStatics_GetMessageTargetsOfChannel::WorldContext' has a wrong offset!");
static_assert(offsetof(VALUI_ChatStatics_GetMessageTargetsOfChannel, InChannel) == 0x000008, "Member 'VALUI_ChatStatics_GetMessageTargetsOfChannel::InChannel' has a wrong offset!");
static_assert(offsetof(VALUI_ChatStatics_GetMessageTargetsOfChannel, ReturnValue) == 0x0000B8, "Member 'VALUI_ChatStatics_GetMessageTargetsOfChannel::ReturnValue' has a wrong offset!");

// Function ValeriaUI.VALUI_CheckBoxStyle.Apply
// 0x0008 (0x0008 - 0x0000)
struct VALUI_CheckBoxStyle_Apply final
{
public:
	class UCheckBox*                              CheckBox;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(VALUI_CheckBoxStyle_Apply) == 0x000008, "Wrong alignment on VALUI_CheckBoxStyle_Apply");
static_assert(sizeof(VALUI_CheckBoxStyle_Apply) == 0x000008, "Wrong size on VALUI_CheckBoxStyle_Apply");
static_assert(offsetof(VALUI_CheckBoxStyle_Apply, CheckBox) == 0x000000, "Member 'VALUI_CheckBoxStyle_Apply::CheckBox' has a wrong offset!");

// Function ValeriaUI.VALUI_CheckBox_Styled.SetCheckBoxStyle
// 0x0008 (0x0008 - 0x0000)
struct VALUI_CheckBox_Styled_SetCheckBoxStyle final
{
public:
	class UVALUI_CheckBoxStyle*                   NewStyle;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(VALUI_CheckBox_Styled_SetCheckBoxStyle) == 0x000008, "Wrong alignment on VALUI_CheckBox_Styled_SetCheckBoxStyle");
static_assert(sizeof(VALUI_CheckBox_Styled_SetCheckBoxStyle) == 0x000008, "Wrong size on VALUI_CheckBox_Styled_SetCheckBoxStyle");
static_assert(offsetof(VALUI_CheckBox_Styled_SetCheckBoxStyle, NewStyle) == 0x000000, "Member 'VALUI_CheckBox_Styled_SetCheckBoxStyle::NewStyle' has a wrong offset!");

// Function ValeriaUI.VALUI_CrafterContentWidget.GetCrafterData
// 0x0138 (0x0138 - 0x0000)
struct VALUI_CrafterContentWidget_GetCrafterData final
{
public:
	struct FCrafterConfig                         CrafterConfig;                                     // 0x0000(0x00E0)(ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVALUI_Crafter                         CrafterData;                                       // 0x00E0(0x0050)(Parm, OutParm, ContainsInstancedReference, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0130(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2D27[0x7];                                     // 0x0131(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(VALUI_CrafterContentWidget_GetCrafterData) == 0x000008, "Wrong alignment on VALUI_CrafterContentWidget_GetCrafterData");
static_assert(sizeof(VALUI_CrafterContentWidget_GetCrafterData) == 0x000138, "Wrong size on VALUI_CrafterContentWidget_GetCrafterData");
static_assert(offsetof(VALUI_CrafterContentWidget_GetCrafterData, CrafterConfig) == 0x000000, "Member 'VALUI_CrafterContentWidget_GetCrafterData::CrafterConfig' has a wrong offset!");
static_assert(offsetof(VALUI_CrafterContentWidget_GetCrafterData, CrafterData) == 0x0000E0, "Member 'VALUI_CrafterContentWidget_GetCrafterData::CrafterData' has a wrong offset!");
static_assert(offsetof(VALUI_CrafterContentWidget_GetCrafterData, ReturnValue) == 0x000130, "Member 'VALUI_CrafterContentWidget_GetCrafterData::ReturnValue' has a wrong offset!");

// Function ValeriaUI.VALUI_CrafterContentWidget.GetCrafterRowName
// 0x00E8 (0x00E8 - 0x0000)
struct VALUI_CrafterContentWidget_GetCrafterRowName final
{
public:
	struct FCrafterConfig                         CrafterConfig;                                     // 0x0000(0x00E0)(ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   ReturnValue;                                       // 0x00E0(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(VALUI_CrafterContentWidget_GetCrafterRowName) == 0x000008, "Wrong alignment on VALUI_CrafterContentWidget_GetCrafterRowName");
static_assert(sizeof(VALUI_CrafterContentWidget_GetCrafterRowName) == 0x0000E8, "Wrong size on VALUI_CrafterContentWidget_GetCrafterRowName");
static_assert(offsetof(VALUI_CrafterContentWidget_GetCrafterRowName, CrafterConfig) == 0x000000, "Member 'VALUI_CrafterContentWidget_GetCrafterRowName::CrafterConfig' has a wrong offset!");
static_assert(offsetof(VALUI_CrafterContentWidget_GetCrafterRowName, ReturnValue) == 0x0000E0, "Member 'VALUI_CrafterContentWidget_GetCrafterRowName::ReturnValue' has a wrong offset!");

// Function ValeriaUI.VALUI_CrafterStationsViewWidget.DisplayCrafterStations
// 0x02B0 (0x02B0 - 0x0000)
struct VALUI_CrafterStationsViewWidget_DisplayCrafterStations final
{
public:
	struct FRecipeNeeds                           RecipeNeeds;                                       // 0x0000(0x02B0)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(VALUI_CrafterStationsViewWidget_DisplayCrafterStations) == 0x000008, "Wrong alignment on VALUI_CrafterStationsViewWidget_DisplayCrafterStations");
static_assert(sizeof(VALUI_CrafterStationsViewWidget_DisplayCrafterStations) == 0x0002B0, "Wrong size on VALUI_CrafterStationsViewWidget_DisplayCrafterStations");
static_assert(offsetof(VALUI_CrafterStationsViewWidget_DisplayCrafterStations, RecipeNeeds) == 0x000000, "Member 'VALUI_CrafterStationsViewWidget_DisplayCrafterStations::RecipeNeeds' has a wrong offset!");

// Function ValeriaUI.VALUI_DepthSortedHorizontalBox.SetForemostWidgetIndex
// 0x0004 (0x0004 - 0x0000)
struct VALUI_DepthSortedHorizontalBox_SetForemostWidgetIndex final
{
public:
	int32                                         Param_Index;                                       // 0x0000(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(VALUI_DepthSortedHorizontalBox_SetForemostWidgetIndex) == 0x000004, "Wrong alignment on VALUI_DepthSortedHorizontalBox_SetForemostWidgetIndex");
static_assert(sizeof(VALUI_DepthSortedHorizontalBox_SetForemostWidgetIndex) == 0x000004, "Wrong size on VALUI_DepthSortedHorizontalBox_SetForemostWidgetIndex");
static_assert(offsetof(VALUI_DepthSortedHorizontalBox_SetForemostWidgetIndex, Param_Index) == 0x000000, "Member 'VALUI_DepthSortedHorizontalBox_SetForemostWidgetIndex::Param_Index' has a wrong offset!");

// Function ValeriaUI.VALUI_DragDropOperation.DragStarted
// 0x0078 (0x0078 - 0x0000)
struct VALUI_DragDropOperation_DragStarted final
{
public:
	struct FPointerEvent                          PointerEvent;                                      // 0x0000(0x0078)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(VALUI_DragDropOperation_DragStarted) == 0x000008, "Wrong alignment on VALUI_DragDropOperation_DragStarted");
static_assert(sizeof(VALUI_DragDropOperation_DragStarted) == 0x000078, "Wrong size on VALUI_DragDropOperation_DragStarted");
static_assert(offsetof(VALUI_DragDropOperation_DragStarted, PointerEvent) == 0x000000, "Member 'VALUI_DragDropOperation_DragStarted::PointerEvent' has a wrong offset!");

// Function ValeriaUI.VALUI_EditableRichTextStyle.ApplyToTextBlock
// 0x0008 (0x0008 - 0x0000)
struct VALUI_EditableRichTextStyle_ApplyToTextBlock final
{
public:
	class US6UI_EditableRichText*                 TextWidget;                                        // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(VALUI_EditableRichTextStyle_ApplyToTextBlock) == 0x000008, "Wrong alignment on VALUI_EditableRichTextStyle_ApplyToTextBlock");
static_assert(sizeof(VALUI_EditableRichTextStyle_ApplyToTextBlock) == 0x000008, "Wrong size on VALUI_EditableRichTextStyle_ApplyToTextBlock");
static_assert(offsetof(VALUI_EditableRichTextStyle_ApplyToTextBlock, TextWidget) == 0x000000, "Member 'VALUI_EditableRichTextStyle_ApplyToTextBlock::TextWidget' has a wrong offset!");

// Function ValeriaUI.VALUI_EditableTextBoxStyle.ApplyToTextBox
// 0x0008 (0x0008 - 0x0000)
struct VALUI_EditableTextBoxStyle_ApplyToTextBox final
{
public:
	class UEditableTextBox*                       TextWidget;                                        // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(VALUI_EditableTextBoxStyle_ApplyToTextBox) == 0x000008, "Wrong alignment on VALUI_EditableTextBoxStyle_ApplyToTextBox");
static_assert(sizeof(VALUI_EditableTextBoxStyle_ApplyToTextBox) == 0x000008, "Wrong size on VALUI_EditableTextBoxStyle_ApplyToTextBox");
static_assert(offsetof(VALUI_EditableTextBoxStyle_ApplyToTextBox, TextWidget) == 0x000000, "Member 'VALUI_EditableTextBoxStyle_ApplyToTextBox::TextWidget' has a wrong offset!");

// Function ValeriaUI.VALUI_EditableTextBox_Styled.SetTextStyle
// 0x0008 (0x0008 - 0x0000)
struct VALUI_EditableTextBox_Styled_SetTextStyle final
{
public:
	class UVALUI_EditableTextBoxStyle*            NewStyle;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(VALUI_EditableTextBox_Styled_SetTextStyle) == 0x000008, "Wrong alignment on VALUI_EditableTextBox_Styled_SetTextStyle");
static_assert(sizeof(VALUI_EditableTextBox_Styled_SetTextStyle) == 0x000008, "Wrong size on VALUI_EditableTextBox_Styled_SetTextStyle");
static_assert(offsetof(VALUI_EditableTextBox_Styled_SetTextStyle, NewStyle) == 0x000000, "Member 'VALUI_EditableTextBox_Styled_SetTextStyle::NewStyle' has a wrong offset!");

// Function ValeriaUI.VALUI_EditableTextStyle.ApplyToTextBlock
// 0x0008 (0x0008 - 0x0000)
struct VALUI_EditableTextStyle_ApplyToTextBlock final
{
public:
	class UEditableText*                          TextWidget;                                        // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(VALUI_EditableTextStyle_ApplyToTextBlock) == 0x000008, "Wrong alignment on VALUI_EditableTextStyle_ApplyToTextBlock");
static_assert(sizeof(VALUI_EditableTextStyle_ApplyToTextBlock) == 0x000008, "Wrong size on VALUI_EditableTextStyle_ApplyToTextBlock");
static_assert(offsetof(VALUI_EditableTextStyle_ApplyToTextBlock, TextWidget) == 0x000000, "Member 'VALUI_EditableTextStyle_ApplyToTextBlock::TextWidget' has a wrong offset!");

// Function ValeriaUI.VALUI_EditableText_Styled.CaretGoTo
// 0x0008 (0x0008 - 0x0000)
struct VALUI_EditableText_Styled_CaretGoTo final
{
public:
	int32                                         LineIndex;                                         // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Offset;                                            // 0x0004(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(VALUI_EditableText_Styled_CaretGoTo) == 0x000004, "Wrong alignment on VALUI_EditableText_Styled_CaretGoTo");
static_assert(sizeof(VALUI_EditableText_Styled_CaretGoTo) == 0x000008, "Wrong size on VALUI_EditableText_Styled_CaretGoTo");
static_assert(offsetof(VALUI_EditableText_Styled_CaretGoTo, LineIndex) == 0x000000, "Member 'VALUI_EditableText_Styled_CaretGoTo::LineIndex' has a wrong offset!");
static_assert(offsetof(VALUI_EditableText_Styled_CaretGoTo, Offset) == 0x000004, "Member 'VALUI_EditableText_Styled_CaretGoTo::Offset' has a wrong offset!");

// Function ValeriaUI.VALUI_EditableText_Styled.SetTextStyle
// 0x0008 (0x0008 - 0x0000)
struct VALUI_EditableText_Styled_SetTextStyle final
{
public:
	class UVALUI_EditableTextStyle*               NewStyle;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(VALUI_EditableText_Styled_SetTextStyle) == 0x000008, "Wrong alignment on VALUI_EditableText_Styled_SetTextStyle");
static_assert(sizeof(VALUI_EditableText_Styled_SetTextStyle) == 0x000008, "Wrong size on VALUI_EditableText_Styled_SetTextStyle");
static_assert(offsetof(VALUI_EditableText_Styled_SetTextStyle, NewStyle) == 0x000000, "Member 'VALUI_EditableText_Styled_SetTextStyle::NewStyle' has a wrong offset!");

// DelegateFunction ValeriaUI.VALUI_EditableText_Styled.VALUIEvent_UMGEditableTextOnCursorMoved__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct VALUI_EditableText_Styled_VALUIEvent_UMGEditableTextOnCursorMoved__DelegateSignature final
{
public:
	int32                                         LineIndex;                                         // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Offset;                                            // 0x0004(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(VALUI_EditableText_Styled_VALUIEvent_UMGEditableTextOnCursorMoved__DelegateSignature) == 0x000004, "Wrong alignment on VALUI_EditableText_Styled_VALUIEvent_UMGEditableTextOnCursorMoved__DelegateSignature");
static_assert(sizeof(VALUI_EditableText_Styled_VALUIEvent_UMGEditableTextOnCursorMoved__DelegateSignature) == 0x000008, "Wrong size on VALUI_EditableText_Styled_VALUIEvent_UMGEditableTextOnCursorMoved__DelegateSignature");
static_assert(offsetof(VALUI_EditableText_Styled_VALUIEvent_UMGEditableTextOnCursorMoved__DelegateSignature, LineIndex) == 0x000000, "Member 'VALUI_EditableText_Styled_VALUIEvent_UMGEditableTextOnCursorMoved__DelegateSignature::LineIndex' has a wrong offset!");
static_assert(offsetof(VALUI_EditableText_Styled_VALUIEvent_UMGEditableTextOnCursorMoved__DelegateSignature, Offset) == 0x000004, "Member 'VALUI_EditableText_Styled_VALUIEvent_UMGEditableTextOnCursorMoved__DelegateSignature::Offset' has a wrong offset!");

// Function ValeriaUI.VALUI_EmoteButtonContainer.HandleAddButtonToContainer
// 0x0008 (0x0008 - 0x0000)
struct VALUI_EmoteButtonContainer_HandleAddButtonToContainer final
{
public:
	class UVALUI_EmoteButton*                     Button;                                            // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(VALUI_EmoteButtonContainer_HandleAddButtonToContainer) == 0x000008, "Wrong alignment on VALUI_EmoteButtonContainer_HandleAddButtonToContainer");
static_assert(sizeof(VALUI_EmoteButtonContainer_HandleAddButtonToContainer) == 0x000008, "Wrong size on VALUI_EmoteButtonContainer_HandleAddButtonToContainer");
static_assert(offsetof(VALUI_EmoteButtonContainer_HandleAddButtonToContainer, Button) == 0x000000, "Member 'VALUI_EmoteButtonContainer_HandleAddButtonToContainer::Button' has a wrong offset!");

// Function ValeriaUI.VALUI_EmoteButtonContainer.OnEmoteButtonClicked
// 0x0010 (0x0010 - 0x0000)
struct VALUI_EmoteButtonContainer_OnEmoteButtonClicked final
{
public:
	class UVALUI_EmoteButton*                     InButtonClicked;                                   // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	const class UEmoteDataAsset*                  InEmoteDataAsset;                                  // 0x0008(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(VALUI_EmoteButtonContainer_OnEmoteButtonClicked) == 0x000008, "Wrong alignment on VALUI_EmoteButtonContainer_OnEmoteButtonClicked");
static_assert(sizeof(VALUI_EmoteButtonContainer_OnEmoteButtonClicked) == 0x000010, "Wrong size on VALUI_EmoteButtonContainer_OnEmoteButtonClicked");
static_assert(offsetof(VALUI_EmoteButtonContainer_OnEmoteButtonClicked, InButtonClicked) == 0x000000, "Member 'VALUI_EmoteButtonContainer_OnEmoteButtonClicked::InButtonClicked' has a wrong offset!");
static_assert(offsetof(VALUI_EmoteButtonContainer_OnEmoteButtonClicked, InEmoteDataAsset) == 0x000008, "Member 'VALUI_EmoteButtonContainer_OnEmoteButtonClicked::InEmoteDataAsset' has a wrong offset!");

// DelegateFunction ValeriaUI.VALUI_EmoteButtonContainer.OnEmoteContainerButtonClicked__DelegateSignature
// 0x0018 (0x0018 - 0x0000)
struct VALUI_EmoteButtonContainer_OnEmoteContainerButtonClicked__DelegateSignature final
{
public:
	class UVALUI_EmoteButtonContainer*            Container;                                         // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UVALUI_EmoteButton*                     ButtonClicked;                                     // 0x0008(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	const class UEmoteDataAsset*                  EmoteDataAsset;                                    // 0x0010(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(VALUI_EmoteButtonContainer_OnEmoteContainerButtonClicked__DelegateSignature) == 0x000008, "Wrong alignment on VALUI_EmoteButtonContainer_OnEmoteContainerButtonClicked__DelegateSignature");
static_assert(sizeof(VALUI_EmoteButtonContainer_OnEmoteContainerButtonClicked__DelegateSignature) == 0x000018, "Wrong size on VALUI_EmoteButtonContainer_OnEmoteContainerButtonClicked__DelegateSignature");
static_assert(offsetof(VALUI_EmoteButtonContainer_OnEmoteContainerButtonClicked__DelegateSignature, Container) == 0x000000, "Member 'VALUI_EmoteButtonContainer_OnEmoteContainerButtonClicked__DelegateSignature::Container' has a wrong offset!");
static_assert(offsetof(VALUI_EmoteButtonContainer_OnEmoteContainerButtonClicked__DelegateSignature, ButtonClicked) == 0x000008, "Member 'VALUI_EmoteButtonContainer_OnEmoteContainerButtonClicked__DelegateSignature::ButtonClicked' has a wrong offset!");
static_assert(offsetof(VALUI_EmoteButtonContainer_OnEmoteContainerButtonClicked__DelegateSignature, EmoteDataAsset) == 0x000010, "Member 'VALUI_EmoteButtonContainer_OnEmoteContainerButtonClicked__DelegateSignature::EmoteDataAsset' has a wrong offset!");

// Function ValeriaUI.VALUI_ErrorDisplayHandlerInterface.HandleErrorDisplay
// 0x0018 (0x0018 - 0x0000)
struct VALUI_ErrorDisplayHandlerInterface_HandleErrorDisplay final
{
public:
	struct FVALUI_ErrorDisplayPayload             ErrorDisplayPayload;                               // 0x0000(0x0018)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(VALUI_ErrorDisplayHandlerInterface_HandleErrorDisplay) == 0x000008, "Wrong alignment on VALUI_ErrorDisplayHandlerInterface_HandleErrorDisplay");
static_assert(sizeof(VALUI_ErrorDisplayHandlerInterface_HandleErrorDisplay) == 0x000018, "Wrong size on VALUI_ErrorDisplayHandlerInterface_HandleErrorDisplay");
static_assert(offsetof(VALUI_ErrorDisplayHandlerInterface_HandleErrorDisplay, ErrorDisplayPayload) == 0x000000, "Member 'VALUI_ErrorDisplayHandlerInterface_HandleErrorDisplay::ErrorDisplayPayload' has a wrong offset!");

// Function ValeriaUI.VALUI_ErrorDisplayHandling.TryRaiseErrorForDisplay
// 0x0028 (0x0028 - 0x0000)
struct VALUI_ErrorDisplayHandling_TryRaiseErrorForDisplay final
{
public:
	class UWidget*                                InstigatingWidget;                                 // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVALUI_ErrorDisplayPayload             ErrorDisplayPayload;                               // 0x0008(0x0018)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0020(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2D2F[0x7];                                     // 0x0021(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(VALUI_ErrorDisplayHandling_TryRaiseErrorForDisplay) == 0x000008, "Wrong alignment on VALUI_ErrorDisplayHandling_TryRaiseErrorForDisplay");
static_assert(sizeof(VALUI_ErrorDisplayHandling_TryRaiseErrorForDisplay) == 0x000028, "Wrong size on VALUI_ErrorDisplayHandling_TryRaiseErrorForDisplay");
static_assert(offsetof(VALUI_ErrorDisplayHandling_TryRaiseErrorForDisplay, InstigatingWidget) == 0x000000, "Member 'VALUI_ErrorDisplayHandling_TryRaiseErrorForDisplay::InstigatingWidget' has a wrong offset!");
static_assert(offsetof(VALUI_ErrorDisplayHandling_TryRaiseErrorForDisplay, ErrorDisplayPayload) == 0x000008, "Member 'VALUI_ErrorDisplayHandling_TryRaiseErrorForDisplay::ErrorDisplayPayload' has a wrong offset!");
static_assert(offsetof(VALUI_ErrorDisplayHandling_TryRaiseErrorForDisplay, ReturnValue) == 0x000020, "Member 'VALUI_ErrorDisplayHandling_TryRaiseErrorForDisplay::ReturnValue' has a wrong offset!");

// Function ValeriaUI.VALUI_TextBlockStyle.ApplyToTextBlock
// 0x0008 (0x0008 - 0x0000)
struct VALUI_TextBlockStyle_ApplyToTextBlock final
{
public:
	class UTextBlock*                             TextWidget;                                        // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(VALUI_TextBlockStyle_ApplyToTextBlock) == 0x000008, "Wrong alignment on VALUI_TextBlockStyle_ApplyToTextBlock");
static_assert(sizeof(VALUI_TextBlockStyle_ApplyToTextBlock) == 0x000008, "Wrong size on VALUI_TextBlockStyle_ApplyToTextBlock");
static_assert(offsetof(VALUI_TextBlockStyle_ApplyToTextBlock, TextWidget) == 0x000000, "Member 'VALUI_TextBlockStyle_ApplyToTextBlock::TextWidget' has a wrong offset!");

// Function ValeriaUI.VALUI_ExpandableAreaStyle.Apply
// 0x0008 (0x0008 - 0x0000)
struct VALUI_ExpandableAreaStyle_Apply final
{
public:
	class UExpandableArea*                        ExpandableArea;                                    // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(VALUI_ExpandableAreaStyle_Apply) == 0x000008, "Wrong alignment on VALUI_ExpandableAreaStyle_Apply");
static_assert(sizeof(VALUI_ExpandableAreaStyle_Apply) == 0x000008, "Wrong size on VALUI_ExpandableAreaStyle_Apply");
static_assert(offsetof(VALUI_ExpandableAreaStyle_Apply, ExpandableArea) == 0x000000, "Member 'VALUI_ExpandableAreaStyle_Apply::ExpandableArea' has a wrong offset!");

// Function ValeriaUI.VALUI_ExpandableArea_Styled.SetExpandableAreaStyle
// 0x0008 (0x0008 - 0x0000)
struct VALUI_ExpandableArea_Styled_SetExpandableAreaStyle final
{
public:
	class UVALUI_ExpandableAreaStyle*             NewStyle;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(VALUI_ExpandableArea_Styled_SetExpandableAreaStyle) == 0x000008, "Wrong alignment on VALUI_ExpandableArea_Styled_SetExpandableAreaStyle");
static_assert(sizeof(VALUI_ExpandableArea_Styled_SetExpandableAreaStyle) == 0x000008, "Wrong size on VALUI_ExpandableArea_Styled_SetExpandableAreaStyle");
static_assert(offsetof(VALUI_ExpandableArea_Styled_SetExpandableAreaStyle, NewStyle) == 0x000000, "Member 'VALUI_ExpandableArea_Styled_SetExpandableAreaStyle::NewStyle' has a wrong offset!");

// Function ValeriaUI.VALUI_Slider_Styled.SetSliderStyle
// 0x0008 (0x0008 - 0x0000)
struct VALUI_Slider_Styled_SetSliderStyle final
{
public:
	class UVALUI_SliderStyle*                     NewStyle;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(VALUI_Slider_Styled_SetSliderStyle) == 0x000008, "Wrong alignment on VALUI_Slider_Styled_SetSliderStyle");
static_assert(sizeof(VALUI_Slider_Styled_SetSliderStyle) == 0x000008, "Wrong size on VALUI_Slider_Styled_SetSliderStyle");
static_assert(offsetof(VALUI_Slider_Styled_SetSliderStyle, NewStyle) == 0x000000, "Member 'VALUI_Slider_Styled_SetSliderStyle::NewStyle' has a wrong offset!");

// Function ValeriaUI.VALUI_ExtensionPointContainerBase.AddExtensibleWidget
// 0x0028 (0x0028 - 0x0000)
struct VALUI_ExtensionPointContainerBase_AddExtensibleWidget final
{
public:
	TSoftClassPtr<class UClass>                   WidgetReference;                                   // 0x0000(0x0028)(ConstParm, Parm, OutParm, ReferenceParm, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(VALUI_ExtensionPointContainerBase_AddExtensibleWidget) == 0x000008, "Wrong alignment on VALUI_ExtensionPointContainerBase_AddExtensibleWidget");
static_assert(sizeof(VALUI_ExtensionPointContainerBase_AddExtensibleWidget) == 0x000028, "Wrong size on VALUI_ExtensionPointContainerBase_AddExtensibleWidget");
static_assert(offsetof(VALUI_ExtensionPointContainerBase_AddExtensibleWidget, WidgetReference) == 0x000000, "Member 'VALUI_ExtensionPointContainerBase_AddExtensibleWidget::WidgetReference' has a wrong offset!");

// Function ValeriaUI.VALUI_GameInteractPopupSubsystem.AddPopupToQueue
// 0x0028 (0x0028 - 0x0000)
struct VALUI_GameInteractPopupSubsystem_AddPopupToQueue final
{
public:
	TSoftObjectPtr<class UGameplayInteractivePopupDataAsset> GpPopupAsset;                                      // 0x0000(0x0028)(ConstParm, Parm, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(VALUI_GameInteractPopupSubsystem_AddPopupToQueue) == 0x000008, "Wrong alignment on VALUI_GameInteractPopupSubsystem_AddPopupToQueue");
static_assert(sizeof(VALUI_GameInteractPopupSubsystem_AddPopupToQueue) == 0x000028, "Wrong size on VALUI_GameInteractPopupSubsystem_AddPopupToQueue");
static_assert(offsetof(VALUI_GameInteractPopupSubsystem_AddPopupToQueue, GpPopupAsset) == 0x000000, "Member 'VALUI_GameInteractPopupSubsystem_AddPopupToQueue::GpPopupAsset' has a wrong offset!");

// Function ValeriaUI.VALUI_GameInteractPopupSubsystem.OnHandlePopupClosed
// 0x0008 (0x0008 - 0x0000)
struct VALUI_GameInteractPopupSubsystem_OnHandlePopupClosed final
{
public:
	const class UGameplayInteractivePopupDataAsset* GpPopupAsset;                                      // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(VALUI_GameInteractPopupSubsystem_OnHandlePopupClosed) == 0x000008, "Wrong alignment on VALUI_GameInteractPopupSubsystem_OnHandlePopupClosed");
static_assert(sizeof(VALUI_GameInteractPopupSubsystem_OnHandlePopupClosed) == 0x000008, "Wrong size on VALUI_GameInteractPopupSubsystem_OnHandlePopupClosed");
static_assert(offsetof(VALUI_GameInteractPopupSubsystem_OnHandlePopupClosed, GpPopupAsset) == 0x000000, "Member 'VALUI_GameInteractPopupSubsystem_OnHandlePopupClosed::GpPopupAsset' has a wrong offset!");

// Function ValeriaUI.VALUI_GpInteractivePopupBase.SetInteractivePopupDataAsset
// 0x0008 (0x0008 - 0x0000)
struct VALUI_GpInteractivePopupBase_SetInteractivePopupDataAsset final
{
public:
	const class UGameplayInteractivePopupDataAsset* InteractivePopupAsset;                             // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(VALUI_GpInteractivePopupBase_SetInteractivePopupDataAsset) == 0x000008, "Wrong alignment on VALUI_GpInteractivePopupBase_SetInteractivePopupDataAsset");
static_assert(sizeof(VALUI_GpInteractivePopupBase_SetInteractivePopupDataAsset) == 0x000008, "Wrong size on VALUI_GpInteractivePopupBase_SetInteractivePopupDataAsset");
static_assert(offsetof(VALUI_GpInteractivePopupBase_SetInteractivePopupDataAsset, InteractivePopupAsset) == 0x000000, "Member 'VALUI_GpInteractivePopupBase_SetInteractivePopupDataAsset::InteractivePopupAsset' has a wrong offset!");

// Function ValeriaUI.VALUI_HotPotTurnTimer.BP_StartTimer
// 0x0008 (0x0008 - 0x0000)
struct VALUI_HotPotTurnTimer_BP_StartTimer final
{
public:
	float                                         SecondsLeft;                                       // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EHotPotTurnState                              TurnState;                                         // 0x0004(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2D36[0x3];                                     // 0x0005(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(VALUI_HotPotTurnTimer_BP_StartTimer) == 0x000004, "Wrong alignment on VALUI_HotPotTurnTimer_BP_StartTimer");
static_assert(sizeof(VALUI_HotPotTurnTimer_BP_StartTimer) == 0x000008, "Wrong size on VALUI_HotPotTurnTimer_BP_StartTimer");
static_assert(offsetof(VALUI_HotPotTurnTimer_BP_StartTimer, SecondsLeft) == 0x000000, "Member 'VALUI_HotPotTurnTimer_BP_StartTimer::SecondsLeft' has a wrong offset!");
static_assert(offsetof(VALUI_HotPotTurnTimer_BP_StartTimer, TurnState) == 0x000004, "Member 'VALUI_HotPotTurnTimer_BP_StartTimer::TurnState' has a wrong offset!");

// Function ValeriaUI.VALUI_HotPotTurnTimer.BP_UpdatePlayerID
// 0x0020 (0x0020 - 0x0000)
struct VALUI_HotPotTurnTimer_BP_UpdatePlayerID final
{
public:
	struct FGuid                                  PlayerId;                                          // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGuid                                  CharacterId;                                       // 0x0010(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(VALUI_HotPotTurnTimer_BP_UpdatePlayerID) == 0x000004, "Wrong alignment on VALUI_HotPotTurnTimer_BP_UpdatePlayerID");
static_assert(sizeof(VALUI_HotPotTurnTimer_BP_UpdatePlayerID) == 0x000020, "Wrong size on VALUI_HotPotTurnTimer_BP_UpdatePlayerID");
static_assert(offsetof(VALUI_HotPotTurnTimer_BP_UpdatePlayerID, PlayerId) == 0x000000, "Member 'VALUI_HotPotTurnTimer_BP_UpdatePlayerID::PlayerId' has a wrong offset!");
static_assert(offsetof(VALUI_HotPotTurnTimer_BP_UpdatePlayerID, CharacterId) == 0x000010, "Member 'VALUI_HotPotTurnTimer_BP_UpdatePlayerID::CharacterId' has a wrong offset!");

// Function ValeriaUI.VALUI_ImageStyle.Apply
// 0x0008 (0x0008 - 0x0000)
struct VALUI_ImageStyle_Apply final
{
public:
	class UImage*                                 Image;                                             // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(VALUI_ImageStyle_Apply) == 0x000008, "Wrong alignment on VALUI_ImageStyle_Apply");
static_assert(sizeof(VALUI_ImageStyle_Apply) == 0x000008, "Wrong size on VALUI_ImageStyle_Apply");
static_assert(offsetof(VALUI_ImageStyle_Apply, Image) == 0x000000, "Member 'VALUI_ImageStyle_Apply::Image' has a wrong offset!");

// Function ValeriaUI.VALUI_Image_Styled.OnAccessbilitySettingsChanged
// 0x0003 (0x0003 - 0x0000)
struct VALUI_Image_Styled_OnAccessbilitySettingsChanged final
{
public:
	struct FValeriaAccessibilitySettings          AccessbilitySettings;                              // 0x0000(0x0003)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(VALUI_Image_Styled_OnAccessbilitySettingsChanged) == 0x000001, "Wrong alignment on VALUI_Image_Styled_OnAccessbilitySettingsChanged");
static_assert(sizeof(VALUI_Image_Styled_OnAccessbilitySettingsChanged) == 0x000003, "Wrong size on VALUI_Image_Styled_OnAccessbilitySettingsChanged");
static_assert(offsetof(VALUI_Image_Styled_OnAccessbilitySettingsChanged, AccessbilitySettings) == 0x000000, "Member 'VALUI_Image_Styled_OnAccessbilitySettingsChanged::AccessbilitySettings' has a wrong offset!");

// Function ValeriaUI.VALUI_Image_Styled.SetImageStyle
// 0x0008 (0x0008 - 0x0000)
struct VALUI_Image_Styled_SetImageStyle final
{
public:
	class UVALUI_ImageStyle*                      NewStyle;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(VALUI_Image_Styled_SetImageStyle) == 0x000008, "Wrong alignment on VALUI_Image_Styled_SetImageStyle");
static_assert(sizeof(VALUI_Image_Styled_SetImageStyle) == 0x000008, "Wrong size on VALUI_Image_Styled_SetImageStyle");
static_assert(offsetof(VALUI_Image_Styled_SetImageStyle, NewStyle) == 0x000000, "Member 'VALUI_Image_Styled_SetImageStyle::NewStyle' has a wrong offset!");

// Function ValeriaUI.VALUI_InputValidationFunctionLibrary.ValidateUserName
// 0x0028 (0x0028 - 0x0000)
struct VALUI_InputValidationFunctionLibrary_ValidateUserName final
{
public:
	class FString                                 UserNameInput;                                     // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class FText>                           OutErrors;                                         // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0020(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2D39[0x7];                                     // 0x0021(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(VALUI_InputValidationFunctionLibrary_ValidateUserName) == 0x000008, "Wrong alignment on VALUI_InputValidationFunctionLibrary_ValidateUserName");
static_assert(sizeof(VALUI_InputValidationFunctionLibrary_ValidateUserName) == 0x000028, "Wrong size on VALUI_InputValidationFunctionLibrary_ValidateUserName");
static_assert(offsetof(VALUI_InputValidationFunctionLibrary_ValidateUserName, UserNameInput) == 0x000000, "Member 'VALUI_InputValidationFunctionLibrary_ValidateUserName::UserNameInput' has a wrong offset!");
static_assert(offsetof(VALUI_InputValidationFunctionLibrary_ValidateUserName, OutErrors) == 0x000010, "Member 'VALUI_InputValidationFunctionLibrary_ValidateUserName::OutErrors' has a wrong offset!");
static_assert(offsetof(VALUI_InputValidationFunctionLibrary_ValidateUserName, ReturnValue) == 0x000020, "Member 'VALUI_InputValidationFunctionLibrary_ValidateUserName::ReturnValue' has a wrong offset!");

// Function ValeriaUI.VALUI_ItemAcquisitionNotificationInterface.AppendAdditionalData
// 0x0060 (0x0060 - 0x0000)
struct VALUI_ItemAcquisitionNotificationInterface_AppendAdditionalData final
{
public:
	struct FValeriaItem                           Item;                                              // 0x0000(0x0060)(Parm, NativeAccessSpecifierPublic)
};
static_assert(alignof(VALUI_ItemAcquisitionNotificationInterface_AppendAdditionalData) == 0x000008, "Wrong alignment on VALUI_ItemAcquisitionNotificationInterface_AppendAdditionalData");
static_assert(sizeof(VALUI_ItemAcquisitionNotificationInterface_AppendAdditionalData) == 0x000060, "Wrong size on VALUI_ItemAcquisitionNotificationInterface_AppendAdditionalData");
static_assert(offsetof(VALUI_ItemAcquisitionNotificationInterface_AppendAdditionalData, Item) == 0x000000, "Member 'VALUI_ItemAcquisitionNotificationInterface_AppendAdditionalData::Item' has a wrong offset!");

// Function ValeriaUI.VALUI_ItemAcquisitionNotificationInterface.SetInitialData
// 0x0060 (0x0060 - 0x0000)
struct VALUI_ItemAcquisitionNotificationInterface_SetInitialData final
{
public:
	struct FValeriaItem                           Item;                                              // 0x0000(0x0060)(Parm, NativeAccessSpecifierPublic)
};
static_assert(alignof(VALUI_ItemAcquisitionNotificationInterface_SetInitialData) == 0x000008, "Wrong alignment on VALUI_ItemAcquisitionNotificationInterface_SetInitialData");
static_assert(sizeof(VALUI_ItemAcquisitionNotificationInterface_SetInitialData) == 0x000060, "Wrong size on VALUI_ItemAcquisitionNotificationInterface_SetInitialData");
static_assert(offsetof(VALUI_ItemAcquisitionNotificationInterface_SetInitialData, Item) == 0x000000, "Member 'VALUI_ItemAcquisitionNotificationInterface_SetInitialData::Item' has a wrong offset!");

// Function ValeriaUI.VALUI_ItemAcquisitionNotificationInterface.CanAppendAdditionalData
// 0x0001 (0x0001 - 0x0000)
struct VALUI_ItemAcquisitionNotificationInterface_CanAppendAdditionalData final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(VALUI_ItemAcquisitionNotificationInterface_CanAppendAdditionalData) == 0x000001, "Wrong alignment on VALUI_ItemAcquisitionNotificationInterface_CanAppendAdditionalData");
static_assert(sizeof(VALUI_ItemAcquisitionNotificationInterface_CanAppendAdditionalData) == 0x000001, "Wrong size on VALUI_ItemAcquisitionNotificationInterface_CanAppendAdditionalData");
static_assert(offsetof(VALUI_ItemAcquisitionNotificationInterface_CanAppendAdditionalData, ReturnValue) == 0x000000, "Member 'VALUI_ItemAcquisitionNotificationInterface_CanAppendAdditionalData::ReturnValue' has a wrong offset!");

// Function ValeriaUI.VALUI_ItemAcquisitionNotifier.HandleItemAcquired
// 0x0060 (0x0060 - 0x0000)
struct VALUI_ItemAcquisitionNotifier_HandleItemAcquired final
{
public:
	struct FValeriaItem                           Item;                                              // 0x0000(0x0060)(Parm, NativeAccessSpecifierPublic)
};
static_assert(alignof(VALUI_ItemAcquisitionNotifier_HandleItemAcquired) == 0x000008, "Wrong alignment on VALUI_ItemAcquisitionNotifier_HandleItemAcquired");
static_assert(sizeof(VALUI_ItemAcquisitionNotifier_HandleItemAcquired) == 0x000060, "Wrong size on VALUI_ItemAcquisitionNotifier_HandleItemAcquired");
static_assert(offsetof(VALUI_ItemAcquisitionNotifier_HandleItemAcquired, Item) == 0x000000, "Member 'VALUI_ItemAcquisitionNotifier_HandleItemAcquired::Item' has a wrong offset!");

// Function ValeriaUI.VALUI_ItemAcquisitionNotifier.HandleNotificationDismissed
// 0x0020 (0x0020 - 0x0000)
struct VALUI_ItemAcquisitionNotifier_HandleNotificationDismissed final
{
public:
	class UVALUI_NotificationQueue*               NotificationQueue;                                 // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGuid                                  AffectedNotificationId;                            // 0x0008(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWidget*                                NotificationWidget;                                // 0x0018(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(VALUI_ItemAcquisitionNotifier_HandleNotificationDismissed) == 0x000008, "Wrong alignment on VALUI_ItemAcquisitionNotifier_HandleNotificationDismissed");
static_assert(sizeof(VALUI_ItemAcquisitionNotifier_HandleNotificationDismissed) == 0x000020, "Wrong size on VALUI_ItemAcquisitionNotifier_HandleNotificationDismissed");
static_assert(offsetof(VALUI_ItemAcquisitionNotifier_HandleNotificationDismissed, NotificationQueue) == 0x000000, "Member 'VALUI_ItemAcquisitionNotifier_HandleNotificationDismissed::NotificationQueue' has a wrong offset!");
static_assert(offsetof(VALUI_ItemAcquisitionNotifier_HandleNotificationDismissed, AffectedNotificationId) == 0x000008, "Member 'VALUI_ItemAcquisitionNotifier_HandleNotificationDismissed::AffectedNotificationId' has a wrong offset!");
static_assert(offsetof(VALUI_ItemAcquisitionNotifier_HandleNotificationDismissed, NotificationWidget) == 0x000018, "Member 'VALUI_ItemAcquisitionNotifier_HandleNotificationDismissed::NotificationWidget' has a wrong offset!");

// DelegateFunction ValeriaUI.VALUI_ItemAcquisitionNotifier.OnCreateItemAcquisitionNotification__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct VALUI_ItemAcquisitionNotifier_OnCreateItemAcquisitionNotification__DelegateSignature final
{
public:
	class UVALUI_ItemAcquisitionNotifier*         Notifier;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWidget*                                ReturnValue;                                       // 0x0008(0x0008)(ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(VALUI_ItemAcquisitionNotifier_OnCreateItemAcquisitionNotification__DelegateSignature) == 0x000008, "Wrong alignment on VALUI_ItemAcquisitionNotifier_OnCreateItemAcquisitionNotification__DelegateSignature");
static_assert(sizeof(VALUI_ItemAcquisitionNotifier_OnCreateItemAcquisitionNotification__DelegateSignature) == 0x000010, "Wrong size on VALUI_ItemAcquisitionNotifier_OnCreateItemAcquisitionNotification__DelegateSignature");
static_assert(offsetof(VALUI_ItemAcquisitionNotifier_OnCreateItemAcquisitionNotification__DelegateSignature, Notifier) == 0x000000, "Member 'VALUI_ItemAcquisitionNotifier_OnCreateItemAcquisitionNotification__DelegateSignature::Notifier' has a wrong offset!");
static_assert(offsetof(VALUI_ItemAcquisitionNotifier_OnCreateItemAcquisitionNotification__DelegateSignature, ReturnValue) == 0x000008, "Member 'VALUI_ItemAcquisitionNotifier_OnCreateItemAcquisitionNotification__DelegateSignature::ReturnValue' has a wrong offset!");

// Function ValeriaUI.VALUI_ItemAcquisitionNotifier.Setup
// 0x0038 (0x0038 - 0x0000)
struct VALUI_ItemAcquisitionNotifier_Setup final
{
public:
	class UInventoryComponent*                    SourceInventoryComponent;                          // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UVALUI_NotificationQueue*               TargetNotificationQueue;                           // 0x0008(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftClassPtr<class UClass>                   InWidgetClass;                                     // 0x0010(0x0028)(ConstParm, Parm, OutParm, ReferenceParm, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(VALUI_ItemAcquisitionNotifier_Setup) == 0x000008, "Wrong alignment on VALUI_ItemAcquisitionNotifier_Setup");
static_assert(sizeof(VALUI_ItemAcquisitionNotifier_Setup) == 0x000038, "Wrong size on VALUI_ItemAcquisitionNotifier_Setup");
static_assert(offsetof(VALUI_ItemAcquisitionNotifier_Setup, SourceInventoryComponent) == 0x000000, "Member 'VALUI_ItemAcquisitionNotifier_Setup::SourceInventoryComponent' has a wrong offset!");
static_assert(offsetof(VALUI_ItemAcquisitionNotifier_Setup, TargetNotificationQueue) == 0x000008, "Member 'VALUI_ItemAcquisitionNotifier_Setup::TargetNotificationQueue' has a wrong offset!");
static_assert(offsetof(VALUI_ItemAcquisitionNotifier_Setup, InWidgetClass) == 0x000010, "Member 'VALUI_ItemAcquisitionNotifier_Setup::InWidgetClass' has a wrong offset!");

// Function ValeriaUI.VALUI_ItemDragDrop.GetItem
// 0x0060 (0x0060 - 0x0000)
struct VALUI_ItemDragDrop_GetItem final
{
public:
	struct FValeriaItem                           ReturnValue;                                       // 0x0000(0x0060)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(VALUI_ItemDragDrop_GetItem) == 0x000008, "Wrong alignment on VALUI_ItemDragDrop_GetItem");
static_assert(sizeof(VALUI_ItemDragDrop_GetItem) == 0x000060, "Wrong size on VALUI_ItemDragDrop_GetItem");
static_assert(offsetof(VALUI_ItemDragDrop_GetItem, ReturnValue) == 0x000000, "Member 'VALUI_ItemDragDrop_GetItem::ReturnValue' has a wrong offset!");

// Function ValeriaUI.VALUI_LoadingScreenBlackWidget.FadeFromBlackToNone
// 0x0004 (0x0004 - 0x0000)
struct VALUI_LoadingScreenBlackWidget_FadeFromBlackToNone final
{
public:
	float                                         FadeTimeInSeconds;                                 // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(VALUI_LoadingScreenBlackWidget_FadeFromBlackToNone) == 0x000004, "Wrong alignment on VALUI_LoadingScreenBlackWidget_FadeFromBlackToNone");
static_assert(sizeof(VALUI_LoadingScreenBlackWidget_FadeFromBlackToNone) == 0x000004, "Wrong size on VALUI_LoadingScreenBlackWidget_FadeFromBlackToNone");
static_assert(offsetof(VALUI_LoadingScreenBlackWidget_FadeFromBlackToNone, FadeTimeInSeconds) == 0x000000, "Member 'VALUI_LoadingScreenBlackWidget_FadeFromBlackToNone::FadeTimeInSeconds' has a wrong offset!");

// Function ValeriaUI.VALUI_LoadingScreenBlackWidget.FadeFromNoneToBlack
// 0x0004 (0x0004 - 0x0000)
struct VALUI_LoadingScreenBlackWidget_FadeFromNoneToBlack final
{
public:
	float                                         FadeTimeInSeconds;                                 // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(VALUI_LoadingScreenBlackWidget_FadeFromNoneToBlack) == 0x000004, "Wrong alignment on VALUI_LoadingScreenBlackWidget_FadeFromNoneToBlack");
static_assert(sizeof(VALUI_LoadingScreenBlackWidget_FadeFromNoneToBlack) == 0x000004, "Wrong size on VALUI_LoadingScreenBlackWidget_FadeFromNoneToBlack");
static_assert(offsetof(VALUI_LoadingScreenBlackWidget_FadeFromNoneToBlack, FadeTimeInSeconds) == 0x000000, "Member 'VALUI_LoadingScreenBlackWidget_FadeFromNoneToBlack::FadeTimeInSeconds' has a wrong offset!");

// Function ValeriaUI.VALUI_LoadingScreenBlackWidget.GetFadeFromBlackAnimation
// 0x0008 (0x0008 - 0x0000)
struct VALUI_LoadingScreenBlackWidget_GetFadeFromBlackAnimation final
{
public:
	class UWidgetAnimation*                       ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(VALUI_LoadingScreenBlackWidget_GetFadeFromBlackAnimation) == 0x000008, "Wrong alignment on VALUI_LoadingScreenBlackWidget_GetFadeFromBlackAnimation");
static_assert(sizeof(VALUI_LoadingScreenBlackWidget_GetFadeFromBlackAnimation) == 0x000008, "Wrong size on VALUI_LoadingScreenBlackWidget_GetFadeFromBlackAnimation");
static_assert(offsetof(VALUI_LoadingScreenBlackWidget_GetFadeFromBlackAnimation, ReturnValue) == 0x000000, "Member 'VALUI_LoadingScreenBlackWidget_GetFadeFromBlackAnimation::ReturnValue' has a wrong offset!");

// Function ValeriaUI.VALUI_MainHUDWidget.HandleOnHUDStateChanged
// 0x000C (0x000C - 0x0000)
struct VALUI_MainHUDWidget_HandleOnHUDStateChanged final
{
public:
	struct FVALUI_MainHUDState                    State;                                             // 0x0000(0x000C)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(VALUI_MainHUDWidget_HandleOnHUDStateChanged) == 0x000004, "Wrong alignment on VALUI_MainHUDWidget_HandleOnHUDStateChanged");
static_assert(sizeof(VALUI_MainHUDWidget_HandleOnHUDStateChanged) == 0x00000C, "Wrong size on VALUI_MainHUDWidget_HandleOnHUDStateChanged");
static_assert(offsetof(VALUI_MainHUDWidget_HandleOnHUDStateChanged, State) == 0x000000, "Member 'VALUI_MainHUDWidget_HandleOnHUDStateChanged::State' has a wrong offset!");

// Function ValeriaUI.VALUI_MainHUDWidget.HandleOnSocialTrackingDataChanged
// 0x0014 (0x0014 - 0x0000)
struct VALUI_MainHUDWidget_HandleOnSocialTrackingDataChanged final
{
public:
	struct FVALUI_SocialTrackingData              SocialData;                                        // 0x0000(0x0014)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(VALUI_MainHUDWidget_HandleOnSocialTrackingDataChanged) == 0x000004, "Wrong alignment on VALUI_MainHUDWidget_HandleOnSocialTrackingDataChanged");
static_assert(sizeof(VALUI_MainHUDWidget_HandleOnSocialTrackingDataChanged) == 0x000014, "Wrong size on VALUI_MainHUDWidget_HandleOnSocialTrackingDataChanged");
static_assert(offsetof(VALUI_MainHUDWidget_HandleOnSocialTrackingDataChanged, SocialData) == 0x000000, "Member 'VALUI_MainHUDWidget_HandleOnSocialTrackingDataChanged::SocialData' has a wrong offset!");

// Function ValeriaUI.VALUI_MainHUDWidget.HandleOnViewModelHUDStateChanged
// 0x0010 (0x0010 - 0x0000)
struct VALUI_MainHUDWidget_HandleOnViewModelHUDStateChanged final
{
public:
	class UObject*                                Object;                                            // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FFieldNotificationId                   Field;                                             // 0x0008(0x0008)(Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(VALUI_MainHUDWidget_HandleOnViewModelHUDStateChanged) == 0x000008, "Wrong alignment on VALUI_MainHUDWidget_HandleOnViewModelHUDStateChanged");
static_assert(sizeof(VALUI_MainHUDWidget_HandleOnViewModelHUDStateChanged) == 0x000010, "Wrong size on VALUI_MainHUDWidget_HandleOnViewModelHUDStateChanged");
static_assert(offsetof(VALUI_MainHUDWidget_HandleOnViewModelHUDStateChanged, Object) == 0x000000, "Member 'VALUI_MainHUDWidget_HandleOnViewModelHUDStateChanged::Object' has a wrong offset!");
static_assert(offsetof(VALUI_MainHUDWidget_HandleOnViewModelHUDStateChanged, Field) == 0x000008, "Member 'VALUI_MainHUDWidget_HandleOnViewModelHUDStateChanged::Field' has a wrong offset!");

// Function ValeriaUI.VALUI_MainHUDWidget.HandleOnViewModelSocialTrackingDataChanged
// 0x0010 (0x0010 - 0x0000)
struct VALUI_MainHUDWidget_HandleOnViewModelSocialTrackingDataChanged final
{
public:
	class UObject*                                Object;                                            // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FFieldNotificationId                   Field;                                             // 0x0008(0x0008)(Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(VALUI_MainHUDWidget_HandleOnViewModelSocialTrackingDataChanged) == 0x000008, "Wrong alignment on VALUI_MainHUDWidget_HandleOnViewModelSocialTrackingDataChanged");
static_assert(sizeof(VALUI_MainHUDWidget_HandleOnViewModelSocialTrackingDataChanged) == 0x000010, "Wrong size on VALUI_MainHUDWidget_HandleOnViewModelSocialTrackingDataChanged");
static_assert(offsetof(VALUI_MainHUDWidget_HandleOnViewModelSocialTrackingDataChanged, Object) == 0x000000, "Member 'VALUI_MainHUDWidget_HandleOnViewModelSocialTrackingDataChanged::Object' has a wrong offset!");
static_assert(offsetof(VALUI_MainHUDWidget_HandleOnViewModelSocialTrackingDataChanged, Field) == 0x000008, "Member 'VALUI_MainHUDWidget_HandleOnViewModelSocialTrackingDataChanged::Field' has a wrong offset!");

// Function ValeriaUI.VALUI_MultiLineEditableTextBoxStyle.ApplyToTextBox
// 0x0008 (0x0008 - 0x0000)
struct VALUI_MultiLineEditableTextBoxStyle_ApplyToTextBox final
{
public:
	class UMultiLineEditableTextBox*              TextWidget;                                        // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(VALUI_MultiLineEditableTextBoxStyle_ApplyToTextBox) == 0x000008, "Wrong alignment on VALUI_MultiLineEditableTextBoxStyle_ApplyToTextBox");
static_assert(sizeof(VALUI_MultiLineEditableTextBoxStyle_ApplyToTextBox) == 0x000008, "Wrong size on VALUI_MultiLineEditableTextBoxStyle_ApplyToTextBox");
static_assert(offsetof(VALUI_MultiLineEditableTextBoxStyle_ApplyToTextBox, TextWidget) == 0x000000, "Member 'VALUI_MultiLineEditableTextBoxStyle_ApplyToTextBox::TextWidget' has a wrong offset!");

// Function ValeriaUI.VALUI_MultiLineEditableTextBox_Styled.SetTextBoxStyle
// 0x0008 (0x0008 - 0x0000)
struct VALUI_MultiLineEditableTextBox_Styled_SetTextBoxStyle final
{
public:
	class UVALUI_MultiLineEditableTextBoxStyle*   NewStyle;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(VALUI_MultiLineEditableTextBox_Styled_SetTextBoxStyle) == 0x000008, "Wrong alignment on VALUI_MultiLineEditableTextBox_Styled_SetTextBoxStyle");
static_assert(sizeof(VALUI_MultiLineEditableTextBox_Styled_SetTextBoxStyle) == 0x000008, "Wrong size on VALUI_MultiLineEditableTextBox_Styled_SetTextBoxStyle");
static_assert(offsetof(VALUI_MultiLineEditableTextBox_Styled_SetTextBoxStyle, NewStyle) == 0x000000, "Member 'VALUI_MultiLineEditableTextBox_Styled_SetTextBoxStyle::NewStyle' has a wrong offset!");

// Function ValeriaUI.VALUI_MultiLineEditableTextStyle.ApplyToTextBlock
// 0x0008 (0x0008 - 0x0000)
struct VALUI_MultiLineEditableTextStyle_ApplyToTextBlock final
{
public:
	class UMultiLineEditableText*                 TextWidget;                                        // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(VALUI_MultiLineEditableTextStyle_ApplyToTextBlock) == 0x000008, "Wrong alignment on VALUI_MultiLineEditableTextStyle_ApplyToTextBlock");
static_assert(sizeof(VALUI_MultiLineEditableTextStyle_ApplyToTextBlock) == 0x000008, "Wrong size on VALUI_MultiLineEditableTextStyle_ApplyToTextBlock");
static_assert(offsetof(VALUI_MultiLineEditableTextStyle_ApplyToTextBlock, TextWidget) == 0x000000, "Member 'VALUI_MultiLineEditableTextStyle_ApplyToTextBlock::TextWidget' has a wrong offset!");

// Function ValeriaUI.VALUI_MultiLineEditableText_Styled.SetTextStyle
// 0x0008 (0x0008 - 0x0000)
struct VALUI_MultiLineEditableText_Styled_SetTextStyle final
{
public:
	class UVALUI_MultiLineEditableTextStyle*      NewStyle;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(VALUI_MultiLineEditableText_Styled_SetTextStyle) == 0x000008, "Wrong alignment on VALUI_MultiLineEditableText_Styled_SetTextStyle");
static_assert(sizeof(VALUI_MultiLineEditableText_Styled_SetTextStyle) == 0x000008, "Wrong size on VALUI_MultiLineEditableText_Styled_SetTextStyle");
static_assert(offsetof(VALUI_MultiLineEditableText_Styled_SetTextStyle, NewStyle) == 0x000000, "Member 'VALUI_MultiLineEditableText_Styled_SetTextStyle::NewStyle' has a wrong offset!");

// Function ValeriaUI.VALUI_NewsInbox_Widget.GetNewsInboxMessageDefinitionByType
// 0x0010 (0x0010 - 0x0000)
struct VALUI_NewsInbox_Widget_GetNewsInboxMessageDefinitionByType final
{
public:
	EVAL_NewsInboxMessageType                     EMessageType;                                      // 0x0000(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2D45[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UVALUI_NewsInboxMessageDataAsset*       ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(VALUI_NewsInbox_Widget_GetNewsInboxMessageDefinitionByType) == 0x000008, "Wrong alignment on VALUI_NewsInbox_Widget_GetNewsInboxMessageDefinitionByType");
static_assert(sizeof(VALUI_NewsInbox_Widget_GetNewsInboxMessageDefinitionByType) == 0x000010, "Wrong size on VALUI_NewsInbox_Widget_GetNewsInboxMessageDefinitionByType");
static_assert(offsetof(VALUI_NewsInbox_Widget_GetNewsInboxMessageDefinitionByType, EMessageType) == 0x000000, "Member 'VALUI_NewsInbox_Widget_GetNewsInboxMessageDefinitionByType::EMessageType' has a wrong offset!");
static_assert(offsetof(VALUI_NewsInbox_Widget_GetNewsInboxMessageDefinitionByType, ReturnValue) == 0x000008, "Member 'VALUI_NewsInbox_Widget_GetNewsInboxMessageDefinitionByType::ReturnValue' has a wrong offset!");

// Function ValeriaUI.VALUI_NewsInbox_Widget.GetNewsInboxMessageDefinitionFromRewardIndex
// 0x0010 (0x0010 - 0x0000)
struct VALUI_NewsInbox_Widget_GetNewsInboxMessageDefinitionFromRewardIndex final
{
public:
	int32                                         Param_Index;                                       // 0x0000(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Claimed;                                           // 0x0004(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2D46[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UVALUI_NewsInboxMessageDataAsset*       ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(VALUI_NewsInbox_Widget_GetNewsInboxMessageDefinitionFromRewardIndex) == 0x000008, "Wrong alignment on VALUI_NewsInbox_Widget_GetNewsInboxMessageDefinitionFromRewardIndex");
static_assert(sizeof(VALUI_NewsInbox_Widget_GetNewsInboxMessageDefinitionFromRewardIndex) == 0x000010, "Wrong size on VALUI_NewsInbox_Widget_GetNewsInboxMessageDefinitionFromRewardIndex");
static_assert(offsetof(VALUI_NewsInbox_Widget_GetNewsInboxMessageDefinitionFromRewardIndex, Param_Index) == 0x000000, "Member 'VALUI_NewsInbox_Widget_GetNewsInboxMessageDefinitionFromRewardIndex::Param_Index' has a wrong offset!");
static_assert(offsetof(VALUI_NewsInbox_Widget_GetNewsInboxMessageDefinitionFromRewardIndex, Claimed) == 0x000004, "Member 'VALUI_NewsInbox_Widget_GetNewsInboxMessageDefinitionFromRewardIndex::Claimed' has a wrong offset!");
static_assert(offsetof(VALUI_NewsInbox_Widget_GetNewsInboxMessageDefinitionFromRewardIndex, ReturnValue) == 0x000008, "Member 'VALUI_NewsInbox_Widget_GetNewsInboxMessageDefinitionFromRewardIndex::ReturnValue' has a wrong offset!");

// Function ValeriaUI.VALUI_NewsInbox_Widget.GetValeriaPlayer
// 0x0008 (0x0008 - 0x0000)
struct VALUI_NewsInbox_Widget_GetValeriaPlayer final
{
public:
	const class AValeriaPlayerController*         ReturnValue;                                       // 0x0000(0x0008)(ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(VALUI_NewsInbox_Widget_GetValeriaPlayer) == 0x000008, "Wrong alignment on VALUI_NewsInbox_Widget_GetValeriaPlayer");
static_assert(sizeof(VALUI_NewsInbox_Widget_GetValeriaPlayer) == 0x000008, "Wrong size on VALUI_NewsInbox_Widget_GetValeriaPlayer");
static_assert(offsetof(VALUI_NewsInbox_Widget_GetValeriaPlayer, ReturnValue) == 0x000000, "Member 'VALUI_NewsInbox_Widget_GetValeriaPlayer::ReturnValue' has a wrong offset!");

// Function ValeriaUI.VALUI_NotificationWidgetInterface.HandleNotificationDismissed
// 0x0018 (0x0018 - 0x0000)
struct VALUI_NotificationWidgetInterface_HandleNotificationDismissed final
{
public:
	class UVALUI_NotificationQueue*               NotificationQueue;                                 // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGuid                                  NotificationId;                                    // 0x0008(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(VALUI_NotificationWidgetInterface_HandleNotificationDismissed) == 0x000008, "Wrong alignment on VALUI_NotificationWidgetInterface_HandleNotificationDismissed");
static_assert(sizeof(VALUI_NotificationWidgetInterface_HandleNotificationDismissed) == 0x000018, "Wrong size on VALUI_NotificationWidgetInterface_HandleNotificationDismissed");
static_assert(offsetof(VALUI_NotificationWidgetInterface_HandleNotificationDismissed, NotificationQueue) == 0x000000, "Member 'VALUI_NotificationWidgetInterface_HandleNotificationDismissed::NotificationQueue' has a wrong offset!");
static_assert(offsetof(VALUI_NotificationWidgetInterface_HandleNotificationDismissed, NotificationId) == 0x000008, "Member 'VALUI_NotificationWidgetInterface_HandleNotificationDismissed::NotificationId' has a wrong offset!");

// Function ValeriaUI.VALUI_NotificationWidgetInterface.HandleNotificationShown
// 0x0018 (0x0018 - 0x0000)
struct VALUI_NotificationWidgetInterface_HandleNotificationShown final
{
public:
	class UVALUI_NotificationQueue*               NotificationQueue;                                 // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGuid                                  NotificationId;                                    // 0x0008(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(VALUI_NotificationWidgetInterface_HandleNotificationShown) == 0x000008, "Wrong alignment on VALUI_NotificationWidgetInterface_HandleNotificationShown");
static_assert(sizeof(VALUI_NotificationWidgetInterface_HandleNotificationShown) == 0x000018, "Wrong size on VALUI_NotificationWidgetInterface_HandleNotificationShown");
static_assert(offsetof(VALUI_NotificationWidgetInterface_HandleNotificationShown, NotificationQueue) == 0x000000, "Member 'VALUI_NotificationWidgetInterface_HandleNotificationShown::NotificationQueue' has a wrong offset!");
static_assert(offsetof(VALUI_NotificationWidgetInterface_HandleNotificationShown, NotificationId) == 0x000008, "Member 'VALUI_NotificationWidgetInterface_HandleNotificationShown::NotificationId' has a wrong offset!");

// Function ValeriaUI.VALUI_NotificationWidgetInterface.MatchesNotification
// 0x0048 (0x0048 - 0x0000)
struct VALUI_NotificationWidgetInterface_MatchesNotification final
{
public:
	class FText                                   NotificationText;                                  // 0x0000(0x0018)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UTexture2D>              NotificationIcon;                                  // 0x0018(0x0028)(ConstParm, Parm, OutParm, ReferenceParm, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0040(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2D47[0x7];                                     // 0x0041(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(VALUI_NotificationWidgetInterface_MatchesNotification) == 0x000008, "Wrong alignment on VALUI_NotificationWidgetInterface_MatchesNotification");
static_assert(sizeof(VALUI_NotificationWidgetInterface_MatchesNotification) == 0x000048, "Wrong size on VALUI_NotificationWidgetInterface_MatchesNotification");
static_assert(offsetof(VALUI_NotificationWidgetInterface_MatchesNotification, NotificationText) == 0x000000, "Member 'VALUI_NotificationWidgetInterface_MatchesNotification::NotificationText' has a wrong offset!");
static_assert(offsetof(VALUI_NotificationWidgetInterface_MatchesNotification, NotificationIcon) == 0x000018, "Member 'VALUI_NotificationWidgetInterface_MatchesNotification::NotificationIcon' has a wrong offset!");
static_assert(offsetof(VALUI_NotificationWidgetInterface_MatchesNotification, ReturnValue) == 0x000040, "Member 'VALUI_NotificationWidgetInterface_MatchesNotification::ReturnValue' has a wrong offset!");

// DelegateFunction ValeriaUI.VALUI_NotificationQueue.OnNotificationDismissed__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct VALUI_NotificationQueue_OnNotificationDismissed__DelegateSignature final
{
public:
	class UVALUI_NotificationQueue*               NotificationQueue;                                 // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGuid                                  AffectedNotificationId;                            // 0x0008(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWidget*                                NotificationWidget;                                // 0x0018(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(VALUI_NotificationQueue_OnNotificationDismissed__DelegateSignature) == 0x000008, "Wrong alignment on VALUI_NotificationQueue_OnNotificationDismissed__DelegateSignature");
static_assert(sizeof(VALUI_NotificationQueue_OnNotificationDismissed__DelegateSignature) == 0x000020, "Wrong size on VALUI_NotificationQueue_OnNotificationDismissed__DelegateSignature");
static_assert(offsetof(VALUI_NotificationQueue_OnNotificationDismissed__DelegateSignature, NotificationQueue) == 0x000000, "Member 'VALUI_NotificationQueue_OnNotificationDismissed__DelegateSignature::NotificationQueue' has a wrong offset!");
static_assert(offsetof(VALUI_NotificationQueue_OnNotificationDismissed__DelegateSignature, AffectedNotificationId) == 0x000008, "Member 'VALUI_NotificationQueue_OnNotificationDismissed__DelegateSignature::AffectedNotificationId' has a wrong offset!");
static_assert(offsetof(VALUI_NotificationQueue_OnNotificationDismissed__DelegateSignature, NotificationWidget) == 0x000018, "Member 'VALUI_NotificationQueue_OnNotificationDismissed__DelegateSignature::NotificationWidget' has a wrong offset!");

// DelegateFunction ValeriaUI.VALUI_NotificationQueue.OnNotificationPushed__DelegateSignature
// 0x0018 (0x0018 - 0x0000)
struct VALUI_NotificationQueue_OnNotificationPushed__DelegateSignature final
{
public:
	class UVALUI_NotificationQueue*               NotificationQueue;                                 // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGuid                                  AffectedNotificationId;                            // 0x0008(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(VALUI_NotificationQueue_OnNotificationPushed__DelegateSignature) == 0x000008, "Wrong alignment on VALUI_NotificationQueue_OnNotificationPushed__DelegateSignature");
static_assert(sizeof(VALUI_NotificationQueue_OnNotificationPushed__DelegateSignature) == 0x000018, "Wrong size on VALUI_NotificationQueue_OnNotificationPushed__DelegateSignature");
static_assert(offsetof(VALUI_NotificationQueue_OnNotificationPushed__DelegateSignature, NotificationQueue) == 0x000000, "Member 'VALUI_NotificationQueue_OnNotificationPushed__DelegateSignature::NotificationQueue' has a wrong offset!");
static_assert(offsetof(VALUI_NotificationQueue_OnNotificationPushed__DelegateSignature, AffectedNotificationId) == 0x000008, "Member 'VALUI_NotificationQueue_OnNotificationPushed__DelegateSignature::AffectedNotificationId' has a wrong offset!");

// Function ValeriaUI.VALUI_NotificationQueue.OnNotificationShown
// 0x0010 (0x0010 - 0x0000)
struct VALUI_NotificationQueue_OnNotificationShown final
{
public:
	struct FGuid                                  NotificationId;                                    // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(VALUI_NotificationQueue_OnNotificationShown) == 0x000004, "Wrong alignment on VALUI_NotificationQueue_OnNotificationShown");
static_assert(sizeof(VALUI_NotificationQueue_OnNotificationShown) == 0x000010, "Wrong size on VALUI_NotificationQueue_OnNotificationShown");
static_assert(offsetof(VALUI_NotificationQueue_OnNotificationShown, NotificationId) == 0x000000, "Member 'VALUI_NotificationQueue_OnNotificationShown::NotificationId' has a wrong offset!");

// Function ValeriaUI.VALUI_NotificationQueue.PushNotification
// 0x0018 (0x0018 - 0x0000)
struct VALUI_NotificationQueue_PushNotification final
{
public:
	class UWidget*                                NotificationWidget;                                // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGuid                                  ReturnValue;                                       // 0x0008(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(VALUI_NotificationQueue_PushNotification) == 0x000008, "Wrong alignment on VALUI_NotificationQueue_PushNotification");
static_assert(sizeof(VALUI_NotificationQueue_PushNotification) == 0x000018, "Wrong size on VALUI_NotificationQueue_PushNotification");
static_assert(offsetof(VALUI_NotificationQueue_PushNotification, NotificationWidget) == 0x000000, "Member 'VALUI_NotificationQueue_PushNotification::NotificationWidget' has a wrong offset!");
static_assert(offsetof(VALUI_NotificationQueue_PushNotification, ReturnValue) == 0x000008, "Member 'VALUI_NotificationQueue_PushNotification::ReturnValue' has a wrong offset!");

// Function ValeriaUI.VALUI_NotificationQueue.TryDismissNotification
// 0x0014 (0x0014 - 0x0000)
struct VALUI_NotificationQueue_TryDismissNotification final
{
public:
	struct FGuid                                  NotificationId;                                    // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2D49[0x3];                                     // 0x0011(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(VALUI_NotificationQueue_TryDismissNotification) == 0x000004, "Wrong alignment on VALUI_NotificationQueue_TryDismissNotification");
static_assert(sizeof(VALUI_NotificationQueue_TryDismissNotification) == 0x000014, "Wrong size on VALUI_NotificationQueue_TryDismissNotification");
static_assert(offsetof(VALUI_NotificationQueue_TryDismissNotification, NotificationId) == 0x000000, "Member 'VALUI_NotificationQueue_TryDismissNotification::NotificationId' has a wrong offset!");
static_assert(offsetof(VALUI_NotificationQueue_TryDismissNotification, ReturnValue) == 0x000010, "Member 'VALUI_NotificationQueue_TryDismissNotification::ReturnValue' has a wrong offset!");

// Function ValeriaUI.VALUI_NotificationQueue.TryDismissPendingNotification
// 0x0014 (0x0014 - 0x0000)
struct VALUI_NotificationQueue_TryDismissPendingNotification final
{
public:
	struct FGuid                                  NotificationId;                                    // 0x0000(0x0010)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2D4A[0x3];                                     // 0x0011(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(VALUI_NotificationQueue_TryDismissPendingNotification) == 0x000004, "Wrong alignment on VALUI_NotificationQueue_TryDismissPendingNotification");
static_assert(sizeof(VALUI_NotificationQueue_TryDismissPendingNotification) == 0x000014, "Wrong size on VALUI_NotificationQueue_TryDismissPendingNotification");
static_assert(offsetof(VALUI_NotificationQueue_TryDismissPendingNotification, NotificationId) == 0x000000, "Member 'VALUI_NotificationQueue_TryDismissPendingNotification::NotificationId' has a wrong offset!");
static_assert(offsetof(VALUI_NotificationQueue_TryDismissPendingNotification, ReturnValue) == 0x000010, "Member 'VALUI_NotificationQueue_TryDismissPendingNotification::ReturnValue' has a wrong offset!");

// Function ValeriaUI.VALUI_NotificationQueue.GetAlllNotificationIds
// 0x0010 (0x0010 - 0x0000)
struct VALUI_NotificationQueue_GetAlllNotificationIds final
{
public:
	TArray<struct FGuid>                          ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(VALUI_NotificationQueue_GetAlllNotificationIds) == 0x000008, "Wrong alignment on VALUI_NotificationQueue_GetAlllNotificationIds");
static_assert(sizeof(VALUI_NotificationQueue_GetAlllNotificationIds) == 0x000010, "Wrong size on VALUI_NotificationQueue_GetAlllNotificationIds");
static_assert(offsetof(VALUI_NotificationQueue_GetAlllNotificationIds, ReturnValue) == 0x000000, "Member 'VALUI_NotificationQueue_GetAlllNotificationIds::ReturnValue' has a wrong offset!");

// Function ValeriaUI.VALUI_NotificationQueue.GetIdForNotification
// 0x0018 (0x0018 - 0x0000)
struct VALUI_NotificationQueue_GetIdForNotification final
{
public:
	class UWidget*                                NotificationWidget;                                // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGuid                                  ReturnValue;                                       // 0x0008(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(VALUI_NotificationQueue_GetIdForNotification) == 0x000008, "Wrong alignment on VALUI_NotificationQueue_GetIdForNotification");
static_assert(sizeof(VALUI_NotificationQueue_GetIdForNotification) == 0x000018, "Wrong size on VALUI_NotificationQueue_GetIdForNotification");
static_assert(offsetof(VALUI_NotificationQueue_GetIdForNotification, NotificationWidget) == 0x000000, "Member 'VALUI_NotificationQueue_GetIdForNotification::NotificationWidget' has a wrong offset!");
static_assert(offsetof(VALUI_NotificationQueue_GetIdForNotification, ReturnValue) == 0x000008, "Member 'VALUI_NotificationQueue_GetIdForNotification::ReturnValue' has a wrong offset!");

// Function ValeriaUI.VALUI_NotificationQueue.GetLastNotificationOnStack
// 0x0008 (0x0008 - 0x0000)
struct VALUI_NotificationQueue_GetLastNotificationOnStack final
{
public:
	class UWidget*                                ReturnValue;                                       // 0x0000(0x0008)(ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(VALUI_NotificationQueue_GetLastNotificationOnStack) == 0x000008, "Wrong alignment on VALUI_NotificationQueue_GetLastNotificationOnStack");
static_assert(sizeof(VALUI_NotificationQueue_GetLastNotificationOnStack) == 0x000008, "Wrong size on VALUI_NotificationQueue_GetLastNotificationOnStack");
static_assert(offsetof(VALUI_NotificationQueue_GetLastNotificationOnStack, ReturnValue) == 0x000000, "Member 'VALUI_NotificationQueue_GetLastNotificationOnStack::ReturnValue' has a wrong offset!");

// Function ValeriaUI.VALUI_NotificationQueue.GetNotificationById
// 0x0018 (0x0018 - 0x0000)
struct VALUI_NotificationQueue_GetNotificationById final
{
public:
	struct FGuid                                  NotificationId;                                    // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWidget*                                ReturnValue;                                       // 0x0010(0x0008)(ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(VALUI_NotificationQueue_GetNotificationById) == 0x000008, "Wrong alignment on VALUI_NotificationQueue_GetNotificationById");
static_assert(sizeof(VALUI_NotificationQueue_GetNotificationById) == 0x000018, "Wrong size on VALUI_NotificationQueue_GetNotificationById");
static_assert(offsetof(VALUI_NotificationQueue_GetNotificationById, NotificationId) == 0x000000, "Member 'VALUI_NotificationQueue_GetNotificationById::NotificationId' has a wrong offset!");
static_assert(offsetof(VALUI_NotificationQueue_GetNotificationById, ReturnValue) == 0x000010, "Member 'VALUI_NotificationQueue_GetNotificationById::ReturnValue' has a wrong offset!");

// Function ValeriaUI.VALUI_NotificationQueue.GetPendingEntries
// 0x0010 (0x0010 - 0x0000)
struct VALUI_NotificationQueue_GetPendingEntries final
{
public:
	TArray<struct FVALUI_NotificationQueueEntry>  ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, ContainsInstancedReference, NativeAccessSpecifierPublic)
};
static_assert(alignof(VALUI_NotificationQueue_GetPendingEntries) == 0x000008, "Wrong alignment on VALUI_NotificationQueue_GetPendingEntries");
static_assert(sizeof(VALUI_NotificationQueue_GetPendingEntries) == 0x000010, "Wrong size on VALUI_NotificationQueue_GetPendingEntries");
static_assert(offsetof(VALUI_NotificationQueue_GetPendingEntries, ReturnValue) == 0x000000, "Member 'VALUI_NotificationQueue_GetPendingEntries::ReturnValue' has a wrong offset!");

// Function ValeriaUI.VALUI_PaliaPassHUDWidget.DisplayActiveTrack
// 0x0010 (0x0010 - 0x0000)
struct VALUI_PaliaPassHUDWidget_DisplayActiveTrack final
{
public:
	TArray<class UVAL_PaliaPassRewardObject_Base*> Rewards;                                           // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(VALUI_PaliaPassHUDWidget_DisplayActiveTrack) == 0x000008, "Wrong alignment on VALUI_PaliaPassHUDWidget_DisplayActiveTrack");
static_assert(sizeof(VALUI_PaliaPassHUDWidget_DisplayActiveTrack) == 0x000010, "Wrong size on VALUI_PaliaPassHUDWidget_DisplayActiveTrack");
static_assert(offsetof(VALUI_PaliaPassHUDWidget_DisplayActiveTrack, Rewards) == 0x000000, "Member 'VALUI_PaliaPassHUDWidget_DisplayActiveTrack::Rewards' has a wrong offset!");

// Function ValeriaUI.VALUI_PaliaPassHUDWidget.HandleOnHUDStateChanged
// 0x0001 (0x0001 - 0x0000)
struct VALUI_PaliaPassHUDWidget_HandleOnHUDStateChanged final
{
public:
	struct FVALUI_PaliaPassHUDState               State;                                             // 0x0000(0x0001)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(VALUI_PaliaPassHUDWidget_HandleOnHUDStateChanged) == 0x000001, "Wrong alignment on VALUI_PaliaPassHUDWidget_HandleOnHUDStateChanged");
static_assert(sizeof(VALUI_PaliaPassHUDWidget_HandleOnHUDStateChanged) == 0x000001, "Wrong size on VALUI_PaliaPassHUDWidget_HandleOnHUDStateChanged");
static_assert(offsetof(VALUI_PaliaPassHUDWidget_HandleOnHUDStateChanged, State) == 0x000000, "Member 'VALUI_PaliaPassHUDWidget_HandleOnHUDStateChanged::State' has a wrong offset!");

// Function ValeriaUI.VALUI_PaliaPassHUDWidget.HandleOnViewModelHUDStateChanged
// 0x0010 (0x0010 - 0x0000)
struct VALUI_PaliaPassHUDWidget_HandleOnViewModelHUDStateChanged final
{
public:
	class UObject*                                Object;                                            // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FFieldNotificationId                   Field;                                             // 0x0008(0x0008)(Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(VALUI_PaliaPassHUDWidget_HandleOnViewModelHUDStateChanged) == 0x000008, "Wrong alignment on VALUI_PaliaPassHUDWidget_HandleOnViewModelHUDStateChanged");
static_assert(sizeof(VALUI_PaliaPassHUDWidget_HandleOnViewModelHUDStateChanged) == 0x000010, "Wrong size on VALUI_PaliaPassHUDWidget_HandleOnViewModelHUDStateChanged");
static_assert(offsetof(VALUI_PaliaPassHUDWidget_HandleOnViewModelHUDStateChanged, Object) == 0x000000, "Member 'VALUI_PaliaPassHUDWidget_HandleOnViewModelHUDStateChanged::Object' has a wrong offset!");
static_assert(offsetof(VALUI_PaliaPassHUDWidget_HandleOnViewModelHUDStateChanged, Field) == 0x000008, "Member 'VALUI_PaliaPassHUDWidget_HandleOnViewModelHUDStateChanged::Field' has a wrong offset!");

// Function ValeriaUI.VALUI_PlayerSupport.DrawToCanvas
// 0x0030 (0x0030 - 0x0000)
struct VALUI_PlayerSupport_DrawToCanvas final
{
public:
	class UCanvas*                                Canvas;                                            // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                              ImageDimensions;                                   // 0x0008(0x0010)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<uint8>                                 QrData;                                            // 0x0018(0x0010)(Parm, ZeroConstructor, NativeAccessSpecifierPublic)
	int32                                         Size;                                              // 0x0028(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2D4C[0x4];                                     // 0x002C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(VALUI_PlayerSupport_DrawToCanvas) == 0x000008, "Wrong alignment on VALUI_PlayerSupport_DrawToCanvas");
static_assert(sizeof(VALUI_PlayerSupport_DrawToCanvas) == 0x000030, "Wrong size on VALUI_PlayerSupport_DrawToCanvas");
static_assert(offsetof(VALUI_PlayerSupport_DrawToCanvas, Canvas) == 0x000000, "Member 'VALUI_PlayerSupport_DrawToCanvas::Canvas' has a wrong offset!");
static_assert(offsetof(VALUI_PlayerSupport_DrawToCanvas, ImageDimensions) == 0x000008, "Member 'VALUI_PlayerSupport_DrawToCanvas::ImageDimensions' has a wrong offset!");
static_assert(offsetof(VALUI_PlayerSupport_DrawToCanvas, QrData) == 0x000018, "Member 'VALUI_PlayerSupport_DrawToCanvas::QrData' has a wrong offset!");
static_assert(offsetof(VALUI_PlayerSupport_DrawToCanvas, Size) == 0x000028, "Member 'VALUI_PlayerSupport_DrawToCanvas::Size' has a wrong offset!");

// Function ValeriaUI.VALUI_PlayerSupport.FetchQrCode
// 0x0008 (0x0008 - 0x0000)
struct VALUI_PlayerSupport_FetchQrCode final
{
public:
	class AValeriaPlayerController*               PC;                                                // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(VALUI_PlayerSupport_FetchQrCode) == 0x000008, "Wrong alignment on VALUI_PlayerSupport_FetchQrCode");
static_assert(sizeof(VALUI_PlayerSupport_FetchQrCode) == 0x000008, "Wrong size on VALUI_PlayerSupport_FetchQrCode");
static_assert(offsetof(VALUI_PlayerSupport_FetchQrCode, PC) == 0x000000, "Member 'VALUI_PlayerSupport_FetchQrCode::PC' has a wrong offset!");

// Function ValeriaUI.VALUI_PlayerSupport.OnQrFetchFailed
// 0x0010 (0x0010 - 0x0000)
struct VALUI_PlayerSupport_OnQrFetchFailed final
{
public:
	class FString                                 FailReason;                                        // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(VALUI_PlayerSupport_OnQrFetchFailed) == 0x000008, "Wrong alignment on VALUI_PlayerSupport_OnQrFetchFailed");
static_assert(sizeof(VALUI_PlayerSupport_OnQrFetchFailed) == 0x000010, "Wrong size on VALUI_PlayerSupport_OnQrFetchFailed");
static_assert(offsetof(VALUI_PlayerSupport_OnQrFetchFailed, FailReason) == 0x000000, "Member 'VALUI_PlayerSupport_OnQrFetchFailed::FailReason' has a wrong offset!");

// Function ValeriaUI.VALUI_PlayerSupport.OnQrReceived
// 0x0028 (0x0028 - 0x0000)
struct VALUI_PlayerSupport_OnQrReceived final
{
public:
	class FString                                 Link;                                              // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<uint8>                                 QrData;                                            // 0x0010(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	int32                                         Size;                                              // 0x0020(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2D4D[0x4];                                     // 0x0024(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(VALUI_PlayerSupport_OnQrReceived) == 0x000008, "Wrong alignment on VALUI_PlayerSupport_OnQrReceived");
static_assert(sizeof(VALUI_PlayerSupport_OnQrReceived) == 0x000028, "Wrong size on VALUI_PlayerSupport_OnQrReceived");
static_assert(offsetof(VALUI_PlayerSupport_OnQrReceived, Link) == 0x000000, "Member 'VALUI_PlayerSupport_OnQrReceived::Link' has a wrong offset!");
static_assert(offsetof(VALUI_PlayerSupport_OnQrReceived, QrData) == 0x000010, "Member 'VALUI_PlayerSupport_OnQrReceived::QrData' has a wrong offset!");
static_assert(offsetof(VALUI_PlayerSupport_OnQrReceived, Size) == 0x000020, "Member 'VALUI_PlayerSupport_OnQrReceived::Size' has a wrong offset!");

// Function ValeriaUI.VALUI_UIManagerWidgetBase.GetStoredCrafterUIState
// 0x0014 (0x0014 - 0x0000)
struct VALUI_UIManagerWidgetBase_GetStoredCrafterUIState final
{
public:
	class FName                                   CrafterName;                                       // 0x0000(0x0008)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FCrafterUIState                        OutCrafterUIState;                                 // 0x0008(0x0008)(Parm, OutParm, NoDestructor, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2D50[0x3];                                     // 0x0011(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(VALUI_UIManagerWidgetBase_GetStoredCrafterUIState) == 0x000004, "Wrong alignment on VALUI_UIManagerWidgetBase_GetStoredCrafterUIState");
static_assert(sizeof(VALUI_UIManagerWidgetBase_GetStoredCrafterUIState) == 0x000014, "Wrong size on VALUI_UIManagerWidgetBase_GetStoredCrafterUIState");
static_assert(offsetof(VALUI_UIManagerWidgetBase_GetStoredCrafterUIState, CrafterName) == 0x000000, "Member 'VALUI_UIManagerWidgetBase_GetStoredCrafterUIState::CrafterName' has a wrong offset!");
static_assert(offsetof(VALUI_UIManagerWidgetBase_GetStoredCrafterUIState, OutCrafterUIState) == 0x000008, "Member 'VALUI_UIManagerWidgetBase_GetStoredCrafterUIState::OutCrafterUIState' has a wrong offset!");
static_assert(offsetof(VALUI_UIManagerWidgetBase_GetStoredCrafterUIState, ReturnValue) == 0x000010, "Member 'VALUI_UIManagerWidgetBase_GetStoredCrafterUIState::ReturnValue' has a wrong offset!");

// Function ValeriaUI.VALUI_UIManagerWidgetBase.Implementation_HasAnyHousingPlotsTeleportOptions
// 0x0010 (0x0010 - 0x0000)
struct VALUI_UIManagerWidgetBase_Implementation_HasAnyHousingPlotsTeleportOptions final
{
public:
	class AVAL_TeleporterBase*                    Teleporter;                                        // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2D51[0x7];                                     // 0x0009(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(VALUI_UIManagerWidgetBase_Implementation_HasAnyHousingPlotsTeleportOptions) == 0x000008, "Wrong alignment on VALUI_UIManagerWidgetBase_Implementation_HasAnyHousingPlotsTeleportOptions");
static_assert(sizeof(VALUI_UIManagerWidgetBase_Implementation_HasAnyHousingPlotsTeleportOptions) == 0x000010, "Wrong size on VALUI_UIManagerWidgetBase_Implementation_HasAnyHousingPlotsTeleportOptions");
static_assert(offsetof(VALUI_UIManagerWidgetBase_Implementation_HasAnyHousingPlotsTeleportOptions, Teleporter) == 0x000000, "Member 'VALUI_UIManagerWidgetBase_Implementation_HasAnyHousingPlotsTeleportOptions::Teleporter' has a wrong offset!");
static_assert(offsetof(VALUI_UIManagerWidgetBase_Implementation_HasAnyHousingPlotsTeleportOptions, ReturnValue) == 0x000008, "Member 'VALUI_UIManagerWidgetBase_Implementation_HasAnyHousingPlotsTeleportOptions::ReturnValue' has a wrong offset!");

// Function ValeriaUI.VALUI_UIManagerWidgetBase.Implementation_NavigateToOnlinePhotoAlbum
// 0x0014 (0x0014 - 0x0000)
struct VALUI_UIManagerWidgetBase_Implementation_NavigateToOnlinePhotoAlbum final
{
public:
	struct FGuid                                  IdOfPhotoToNavigateTo;                             // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bShouldSelectPhoto;                                // 0x0010(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2D52[0x3];                                     // 0x0011(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(VALUI_UIManagerWidgetBase_Implementation_NavigateToOnlinePhotoAlbum) == 0x000004, "Wrong alignment on VALUI_UIManagerWidgetBase_Implementation_NavigateToOnlinePhotoAlbum");
static_assert(sizeof(VALUI_UIManagerWidgetBase_Implementation_NavigateToOnlinePhotoAlbum) == 0x000014, "Wrong size on VALUI_UIManagerWidgetBase_Implementation_NavigateToOnlinePhotoAlbum");
static_assert(offsetof(VALUI_UIManagerWidgetBase_Implementation_NavigateToOnlinePhotoAlbum, IdOfPhotoToNavigateTo) == 0x000000, "Member 'VALUI_UIManagerWidgetBase_Implementation_NavigateToOnlinePhotoAlbum::IdOfPhotoToNavigateTo' has a wrong offset!");
static_assert(offsetof(VALUI_UIManagerWidgetBase_Implementation_NavigateToOnlinePhotoAlbum, bShouldSelectPhoto) == 0x000010, "Member 'VALUI_UIManagerWidgetBase_Implementation_NavigateToOnlinePhotoAlbum::bShouldSelectPhoto' has a wrong offset!");

// Function ValeriaUI.VALUI_UIManagerWidgetBase.Implementation_NavigateToRecentPhotos
// 0x0014 (0x0014 - 0x0000)
struct VALUI_UIManagerWidgetBase_Implementation_NavigateToRecentPhotos final
{
public:
	struct FGuid                                  IdOfPhotoToNavigateTo;                             // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bShouldSelectPhoto;                                // 0x0010(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2D53[0x3];                                     // 0x0011(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(VALUI_UIManagerWidgetBase_Implementation_NavigateToRecentPhotos) == 0x000004, "Wrong alignment on VALUI_UIManagerWidgetBase_Implementation_NavigateToRecentPhotos");
static_assert(sizeof(VALUI_UIManagerWidgetBase_Implementation_NavigateToRecentPhotos) == 0x000014, "Wrong size on VALUI_UIManagerWidgetBase_Implementation_NavigateToRecentPhotos");
static_assert(offsetof(VALUI_UIManagerWidgetBase_Implementation_NavigateToRecentPhotos, IdOfPhotoToNavigateTo) == 0x000000, "Member 'VALUI_UIManagerWidgetBase_Implementation_NavigateToRecentPhotos::IdOfPhotoToNavigateTo' has a wrong offset!");
static_assert(offsetof(VALUI_UIManagerWidgetBase_Implementation_NavigateToRecentPhotos, bShouldSelectPhoto) == 0x000010, "Member 'VALUI_UIManagerWidgetBase_Implementation_NavigateToRecentPhotos::bShouldSelectPhoto' has a wrong offset!");

// Function ValeriaUI.VALUI_UIManagerWidgetBase.Implementation_OpenAmmoMenu
// 0x0001 (0x0001 - 0x0000)
struct VALUI_UIManagerWidgetBase_Implementation_OpenAmmoMenu final
{
public:
	EAmmoType                                     AmmoType;                                          // 0x0000(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(VALUI_UIManagerWidgetBase_Implementation_OpenAmmoMenu) == 0x000001, "Wrong alignment on VALUI_UIManagerWidgetBase_Implementation_OpenAmmoMenu");
static_assert(sizeof(VALUI_UIManagerWidgetBase_Implementation_OpenAmmoMenu) == 0x000001, "Wrong size on VALUI_UIManagerWidgetBase_Implementation_OpenAmmoMenu");
static_assert(offsetof(VALUI_UIManagerWidgetBase_Implementation_OpenAmmoMenu, AmmoType) == 0x000000, "Member 'VALUI_UIManagerWidgetBase_Implementation_OpenAmmoMenu::AmmoType' has a wrong offset!");

// Function ValeriaUI.VALUI_UIManagerWidgetBase.Implementation_OpenBook
// 0x0004 (0x0004 - 0x0000)
struct VALUI_UIManagerWidgetBase_Implementation_OpenBook final
{
public:
	int32                                         BookId;                                            // 0x0000(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(VALUI_UIManagerWidgetBase_Implementation_OpenBook) == 0x000004, "Wrong alignment on VALUI_UIManagerWidgetBase_Implementation_OpenBook");
static_assert(sizeof(VALUI_UIManagerWidgetBase_Implementation_OpenBook) == 0x000004, "Wrong size on VALUI_UIManagerWidgetBase_Implementation_OpenBook");
static_assert(offsetof(VALUI_UIManagerWidgetBase_Implementation_OpenBook, BookId) == 0x000000, "Member 'VALUI_UIManagerWidgetBase_Implementation_OpenBook::BookId' has a wrong offset!");

// Function ValeriaUI.VALUI_UIManagerWidgetBase.Implementation_OpenBundleDropOffMenu
// 0x0008 (0x0008 - 0x0000)
struct VALUI_UIManagerWidgetBase_Implementation_OpenBundleDropOffMenu final
{
public:
	const class UVAL_BundleShrineConfigAsset*     BundleShrineConfigAsset;                           // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(VALUI_UIManagerWidgetBase_Implementation_OpenBundleDropOffMenu) == 0x000008, "Wrong alignment on VALUI_UIManagerWidgetBase_Implementation_OpenBundleDropOffMenu");
static_assert(sizeof(VALUI_UIManagerWidgetBase_Implementation_OpenBundleDropOffMenu) == 0x000008, "Wrong size on VALUI_UIManagerWidgetBase_Implementation_OpenBundleDropOffMenu");
static_assert(offsetof(VALUI_UIManagerWidgetBase_Implementation_OpenBundleDropOffMenu, BundleShrineConfigAsset) == 0x000000, "Member 'VALUI_UIManagerWidgetBase_Implementation_OpenBundleDropOffMenu::BundleShrineConfigAsset' has a wrong offset!");

// Function ValeriaUI.VALUI_UIManagerWidgetBase.Implementation_OpenCrafter
// 0x0008 (0x0008 - 0x0000)
struct VALUI_UIManagerWidgetBase_Implementation_OpenCrafter final
{
public:
	class UCrafterComponent*                      CrafterComponent;                                  // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(VALUI_UIManagerWidgetBase_Implementation_OpenCrafter) == 0x000008, "Wrong alignment on VALUI_UIManagerWidgetBase_Implementation_OpenCrafter");
static_assert(sizeof(VALUI_UIManagerWidgetBase_Implementation_OpenCrafter) == 0x000008, "Wrong size on VALUI_UIManagerWidgetBase_Implementation_OpenCrafter");
static_assert(offsetof(VALUI_UIManagerWidgetBase_Implementation_OpenCrafter, CrafterComponent) == 0x000000, "Member 'VALUI_UIManagerWidgetBase_Implementation_OpenCrafter::CrafterComponent' has a wrong offset!");

// Function ValeriaUI.VALUI_UIManagerWidgetBase.Implementation_OpenDyeConfirmation
// 0x0001 (0x0001 - 0x0000)
struct VALUI_UIManagerWidgetBase_Implementation_OpenDyeConfirmation final
{
public:
	EWishType                                     WishType;                                          // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(VALUI_UIManagerWidgetBase_Implementation_OpenDyeConfirmation) == 0x000001, "Wrong alignment on VALUI_UIManagerWidgetBase_Implementation_OpenDyeConfirmation");
static_assert(sizeof(VALUI_UIManagerWidgetBase_Implementation_OpenDyeConfirmation) == 0x000001, "Wrong size on VALUI_UIManagerWidgetBase_Implementation_OpenDyeConfirmation");
static_assert(offsetof(VALUI_UIManagerWidgetBase_Implementation_OpenDyeConfirmation, WishType) == 0x000000, "Member 'VALUI_UIManagerWidgetBase_Implementation_OpenDyeConfirmation::WishType' has a wrong offset!");

// Function ValeriaUI.VALUI_UIManagerWidgetBase.Implementation_OpenGameplayInteractiveModal
// 0x0008 (0x0008 - 0x0000)
struct VALUI_UIManagerWidgetBase_Implementation_OpenGameplayInteractiveModal final
{
public:
	const class UGameplayInteractivePopupDataAsset* PopupAsset;                                        // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(VALUI_UIManagerWidgetBase_Implementation_OpenGameplayInteractiveModal) == 0x000008, "Wrong alignment on VALUI_UIManagerWidgetBase_Implementation_OpenGameplayInteractiveModal");
static_assert(sizeof(VALUI_UIManagerWidgetBase_Implementation_OpenGameplayInteractiveModal) == 0x000008, "Wrong size on VALUI_UIManagerWidgetBase_Implementation_OpenGameplayInteractiveModal");
static_assert(offsetof(VALUI_UIManagerWidgetBase_Implementation_OpenGameplayInteractiveModal, PopupAsset) == 0x000000, "Member 'VALUI_UIManagerWidgetBase_Implementation_OpenGameplayInteractiveModal::PopupAsset' has a wrong offset!");

// Function ValeriaUI.VALUI_UIManagerWidgetBase.Implementation_OpenHomeTeleporter
// 0x0008 (0x0008 - 0x0000)
struct VALUI_UIManagerWidgetBase_Implementation_OpenHomeTeleporter final
{
public:
	class AVAL_TeleporterBase*                    Teleporter;                                        // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(VALUI_UIManagerWidgetBase_Implementation_OpenHomeTeleporter) == 0x000008, "Wrong alignment on VALUI_UIManagerWidgetBase_Implementation_OpenHomeTeleporter");
static_assert(sizeof(VALUI_UIManagerWidgetBase_Implementation_OpenHomeTeleporter) == 0x000008, "Wrong size on VALUI_UIManagerWidgetBase_Implementation_OpenHomeTeleporter");
static_assert(offsetof(VALUI_UIManagerWidgetBase_Implementation_OpenHomeTeleporter, Teleporter) == 0x000000, "Member 'VALUI_UIManagerWidgetBase_Implementation_OpenHomeTeleporter::Teleporter' has a wrong offset!");

// Function ValeriaUI.VALUI_UIManagerWidgetBase.Implementation_OpenHouseUpgrade
// 0x0008 (0x0008 - 0x0000)
struct VALUI_UIManagerWidgetBase_Implementation_OpenHouseUpgrade final
{
public:
	class ULevelerComponent*                      LevelerComponent;                                  // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(VALUI_UIManagerWidgetBase_Implementation_OpenHouseUpgrade) == 0x000008, "Wrong alignment on VALUI_UIManagerWidgetBase_Implementation_OpenHouseUpgrade");
static_assert(sizeof(VALUI_UIManagerWidgetBase_Implementation_OpenHouseUpgrade) == 0x000008, "Wrong size on VALUI_UIManagerWidgetBase_Implementation_OpenHouseUpgrade");
static_assert(offsetof(VALUI_UIManagerWidgetBase_Implementation_OpenHouseUpgrade, LevelerComponent) == 0x000000, "Member 'VALUI_UIManagerWidgetBase_Implementation_OpenHouseUpgrade::LevelerComponent' has a wrong offset!");

// Function ValeriaUI.VALUI_UIManagerWidgetBase.Implementation_OpenHousingEdit
// 0x0008 (0x0008 - 0x0000)
struct VALUI_UIManagerWidgetBase_Implementation_OpenHousingEdit final
{
public:
	class AHousingPlotActor*                      HousingPlot;                                       // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(VALUI_UIManagerWidgetBase_Implementation_OpenHousingEdit) == 0x000008, "Wrong alignment on VALUI_UIManagerWidgetBase_Implementation_OpenHousingEdit");
static_assert(sizeof(VALUI_UIManagerWidgetBase_Implementation_OpenHousingEdit) == 0x000008, "Wrong size on VALUI_UIManagerWidgetBase_Implementation_OpenHousingEdit");
static_assert(offsetof(VALUI_UIManagerWidgetBase_Implementation_OpenHousingEdit, HousingPlot) == 0x000000, "Member 'VALUI_UIManagerWidgetBase_Implementation_OpenHousingEdit::HousingPlot' has a wrong offset!");

// Function ValeriaUI.VALUI_UIManagerWidgetBase.Implementation_OpenItemVariantCustomizer
// 0x0008 (0x0008 - 0x0000)
struct VALUI_UIManagerWidgetBase_Implementation_OpenItemVariantCustomizer final
{
public:
	class UItemVariantCustomizerComponent*        Customizer;                                        // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(VALUI_UIManagerWidgetBase_Implementation_OpenItemVariantCustomizer) == 0x000008, "Wrong alignment on VALUI_UIManagerWidgetBase_Implementation_OpenItemVariantCustomizer");
static_assert(sizeof(VALUI_UIManagerWidgetBase_Implementation_OpenItemVariantCustomizer) == 0x000008, "Wrong size on VALUI_UIManagerWidgetBase_Implementation_OpenItemVariantCustomizer");
static_assert(offsetof(VALUI_UIManagerWidgetBase_Implementation_OpenItemVariantCustomizer, Customizer) == 0x000000, "Member 'VALUI_UIManagerWidgetBase_Implementation_OpenItemVariantCustomizer::Customizer' has a wrong offset!");

// Function ValeriaUI.VALUI_UIManagerWidgetBase.Implementation_OpenPetBonus
// 0x0050 (0x0050 - 0x0000)
struct VALUI_UIManagerWidgetBase_Implementation_OpenPetBonus final
{
public:
	TSet<TSoftObjectPtr<class UVAL_CharacterCustomizationItem_Pet>> Items;                                             // 0x0000(0x0050)(ConstParm, Parm, OutParm, ReferenceParm, UObjectWrapper, NativeAccessSpecifierPublic)
};
static_assert(alignof(VALUI_UIManagerWidgetBase_Implementation_OpenPetBonus) == 0x000008, "Wrong alignment on VALUI_UIManagerWidgetBase_Implementation_OpenPetBonus");
static_assert(sizeof(VALUI_UIManagerWidgetBase_Implementation_OpenPetBonus) == 0x000050, "Wrong size on VALUI_UIManagerWidgetBase_Implementation_OpenPetBonus");
static_assert(offsetof(VALUI_UIManagerWidgetBase_Implementation_OpenPetBonus, Items) == 0x000000, "Member 'VALUI_UIManagerWidgetBase_Implementation_OpenPetBonus::Items' has a wrong offset!");

// Function ValeriaUI.VALUI_UIManagerWidgetBase.Implementation_OpenPremiumStore
// 0x0028 (0x0028 - 0x0000)
struct VALUI_UIManagerWidgetBase_Implementation_OpenPremiumStore final
{
public:
	struct FVAL_OpenStorePayload                  Payload;                                           // 0x0000(0x0028)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(VALUI_UIManagerWidgetBase_Implementation_OpenPremiumStore) == 0x000008, "Wrong alignment on VALUI_UIManagerWidgetBase_Implementation_OpenPremiumStore");
static_assert(sizeof(VALUI_UIManagerWidgetBase_Implementation_OpenPremiumStore) == 0x000028, "Wrong size on VALUI_UIManagerWidgetBase_Implementation_OpenPremiumStore");
static_assert(offsetof(VALUI_UIManagerWidgetBase_Implementation_OpenPremiumStore, Payload) == 0x000000, "Member 'VALUI_UIManagerWidgetBase_Implementation_OpenPremiumStore::Payload' has a wrong offset!");

// Function ValeriaUI.VALUI_UIManagerWidgetBase.Implementation_OpenRepairStation
// 0x0010 (0x0010 - 0x0000)
struct VALUI_UIManagerWidgetBase_Implementation_OpenRepairStation final
{
public:
	class AActor*                                 RepairStationActor;                                // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bAllowPurchases;                                   // 0x0008(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bAllowRepairKitsFromStorage;                       // 0x0009(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2D54[0x6];                                     // 0x000A(0x0006)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(VALUI_UIManagerWidgetBase_Implementation_OpenRepairStation) == 0x000008, "Wrong alignment on VALUI_UIManagerWidgetBase_Implementation_OpenRepairStation");
static_assert(sizeof(VALUI_UIManagerWidgetBase_Implementation_OpenRepairStation) == 0x000010, "Wrong size on VALUI_UIManagerWidgetBase_Implementation_OpenRepairStation");
static_assert(offsetof(VALUI_UIManagerWidgetBase_Implementation_OpenRepairStation, RepairStationActor) == 0x000000, "Member 'VALUI_UIManagerWidgetBase_Implementation_OpenRepairStation::RepairStationActor' has a wrong offset!");
static_assert(offsetof(VALUI_UIManagerWidgetBase_Implementation_OpenRepairStation, bAllowPurchases) == 0x000008, "Member 'VALUI_UIManagerWidgetBase_Implementation_OpenRepairStation::bAllowPurchases' has a wrong offset!");
static_assert(offsetof(VALUI_UIManagerWidgetBase_Implementation_OpenRepairStation, bAllowRepairKitsFromStorage) == 0x000009, "Member 'VALUI_UIManagerWidgetBase_Implementation_OpenRepairStation::bAllowRepairKitsFromStorage' has a wrong offset!");

// Function ValeriaUI.VALUI_UIManagerWidgetBase.Implementation_OpenRequestItem
// 0x0008 (0x0008 - 0x0000)
struct VALUI_UIManagerWidgetBase_Implementation_OpenRequestItem final
{
public:
	class FName                                   Tag;                                               // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(VALUI_UIManagerWidgetBase_Implementation_OpenRequestItem) == 0x000004, "Wrong alignment on VALUI_UIManagerWidgetBase_Implementation_OpenRequestItem");
static_assert(sizeof(VALUI_UIManagerWidgetBase_Implementation_OpenRequestItem) == 0x000008, "Wrong size on VALUI_UIManagerWidgetBase_Implementation_OpenRequestItem");
static_assert(offsetof(VALUI_UIManagerWidgetBase_Implementation_OpenRequestItem, Tag) == 0x000000, "Member 'VALUI_UIManagerWidgetBase_Implementation_OpenRequestItem::Tag' has a wrong offset!");

// Function ValeriaUI.VALUI_UIManagerWidgetBase.Implementation_OpenShippingBin
// 0x0008 (0x0008 - 0x0000)
struct VALUI_UIManagerWidgetBase_Implementation_OpenShippingBin final
{
public:
	class UShippingBinComponent*                  ShippingBinComponent;                              // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(VALUI_UIManagerWidgetBase_Implementation_OpenShippingBin) == 0x000008, "Wrong alignment on VALUI_UIManagerWidgetBase_Implementation_OpenShippingBin");
static_assert(sizeof(VALUI_UIManagerWidgetBase_Implementation_OpenShippingBin) == 0x000008, "Wrong size on VALUI_UIManagerWidgetBase_Implementation_OpenShippingBin");
static_assert(offsetof(VALUI_UIManagerWidgetBase_Implementation_OpenShippingBin, ShippingBinComponent) == 0x000000, "Member 'VALUI_UIManagerWidgetBase_Implementation_OpenShippingBin::ShippingBinComponent' has a wrong offset!");

// Function ValeriaUI.VALUI_UIManagerWidgetBase.Implementation_OpenSignTeleporter
// 0x0008 (0x0008 - 0x0000)
struct VALUI_UIManagerWidgetBase_Implementation_OpenSignTeleporter final
{
public:
	class AActor*                                 TeleporterActor;                                   // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(VALUI_UIManagerWidgetBase_Implementation_OpenSignTeleporter) == 0x000008, "Wrong alignment on VALUI_UIManagerWidgetBase_Implementation_OpenSignTeleporter");
static_assert(sizeof(VALUI_UIManagerWidgetBase_Implementation_OpenSignTeleporter) == 0x000008, "Wrong size on VALUI_UIManagerWidgetBase_Implementation_OpenSignTeleporter");
static_assert(offsetof(VALUI_UIManagerWidgetBase_Implementation_OpenSignTeleporter, TeleporterActor) == 0x000000, "Member 'VALUI_UIManagerWidgetBase_Implementation_OpenSignTeleporter::TeleporterActor' has a wrong offset!");

// Function ValeriaUI.VALUI_UIManagerWidgetBase.Implementation_OpenStables
// 0x0008 (0x0008 - 0x0000)
struct VALUI_UIManagerWidgetBase_Implementation_OpenStables final
{
public:
	class AActor*                                 StablesActor;                                      // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(VALUI_UIManagerWidgetBase_Implementation_OpenStables) == 0x000008, "Wrong alignment on VALUI_UIManagerWidgetBase_Implementation_OpenStables");
static_assert(sizeof(VALUI_UIManagerWidgetBase_Implementation_OpenStables) == 0x000008, "Wrong size on VALUI_UIManagerWidgetBase_Implementation_OpenStables");
static_assert(offsetof(VALUI_UIManagerWidgetBase_Implementation_OpenStables, StablesActor) == 0x000000, "Member 'VALUI_UIManagerWidgetBase_Implementation_OpenStables::StablesActor' has a wrong offset!");

// Function ValeriaUI.VALUI_UIManagerWidgetBase.Implementation_OpenStore
// 0x0008 (0x0008 - 0x0000)
struct VALUI_UIManagerWidgetBase_Implementation_OpenStore final
{
public:
	const class UVillagerStoreConfig*             StoreConfig;                                       // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(VALUI_UIManagerWidgetBase_Implementation_OpenStore) == 0x000008, "Wrong alignment on VALUI_UIManagerWidgetBase_Implementation_OpenStore");
static_assert(sizeof(VALUI_UIManagerWidgetBase_Implementation_OpenStore) == 0x000008, "Wrong size on VALUI_UIManagerWidgetBase_Implementation_OpenStore");
static_assert(offsetof(VALUI_UIManagerWidgetBase_Implementation_OpenStore, StoreConfig) == 0x000000, "Member 'VALUI_UIManagerWidgetBase_Implementation_OpenStore::StoreConfig' has a wrong offset!");

// Function ValeriaUI.VALUI_UIManagerWidgetBase.Implementation_OpenSubgameScreen
// 0x0008 (0x0008 - 0x0000)
struct VALUI_UIManagerWidgetBase_Implementation_OpenSubgameScreen final
{
public:
	const class USubgameConfig*                   InSubgameConfig;                                   // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(VALUI_UIManagerWidgetBase_Implementation_OpenSubgameScreen) == 0x000008, "Wrong alignment on VALUI_UIManagerWidgetBase_Implementation_OpenSubgameScreen");
static_assert(sizeof(VALUI_UIManagerWidgetBase_Implementation_OpenSubgameScreen) == 0x000008, "Wrong size on VALUI_UIManagerWidgetBase_Implementation_OpenSubgameScreen");
static_assert(offsetof(VALUI_UIManagerWidgetBase_Implementation_OpenSubgameScreen, InSubgameConfig) == 0x000000, "Member 'VALUI_UIManagerWidgetBase_Implementation_OpenSubgameScreen::InSubgameConfig' has a wrong offset!");

// Function ValeriaUI.VALUI_UIManagerWidgetBase.Implementation_OpenVillagerStore
// 0x0004 (0x0004 - 0x0000)
struct VALUI_UIManagerWidgetBase_Implementation_OpenVillagerStore final
{
public:
	int32                                         VillagerConfigId;                                  // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(VALUI_UIManagerWidgetBase_Implementation_OpenVillagerStore) == 0x000004, "Wrong alignment on VALUI_UIManagerWidgetBase_Implementation_OpenVillagerStore");
static_assert(sizeof(VALUI_UIManagerWidgetBase_Implementation_OpenVillagerStore) == 0x000004, "Wrong size on VALUI_UIManagerWidgetBase_Implementation_OpenVillagerStore");
static_assert(offsetof(VALUI_UIManagerWidgetBase_Implementation_OpenVillagerStore, VillagerConfigId) == 0x000000, "Member 'VALUI_UIManagerWidgetBase_Implementation_OpenVillagerStore::VillagerConfigId' has a wrong offset!");

// Function ValeriaUI.VALUI_UIManagerWidgetBase.Implementation_OpenWishView
// 0x0018 (0x0018 - 0x0000)
struct VALUI_UIManagerWidgetBase_Implementation_OpenWishView final
{
public:
	TArray<struct FWishTreeEntry>                 Wishes;                                            // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	const class UVillagerWishDataAsset*           VillagerWishOverride;                              // 0x0010(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(VALUI_UIManagerWidgetBase_Implementation_OpenWishView) == 0x000008, "Wrong alignment on VALUI_UIManagerWidgetBase_Implementation_OpenWishView");
static_assert(sizeof(VALUI_UIManagerWidgetBase_Implementation_OpenWishView) == 0x000018, "Wrong size on VALUI_UIManagerWidgetBase_Implementation_OpenWishView");
static_assert(offsetof(VALUI_UIManagerWidgetBase_Implementation_OpenWishView, Wishes) == 0x000000, "Member 'VALUI_UIManagerWidgetBase_Implementation_OpenWishView::Wishes' has a wrong offset!");
static_assert(offsetof(VALUI_UIManagerWidgetBase_Implementation_OpenWishView, VillagerWishOverride) == 0x000010, "Member 'VALUI_UIManagerWidgetBase_Implementation_OpenWishView::VillagerWishOverride' has a wrong offset!");

// Function ValeriaUI.VALUI_UIManagerWidgetBase.Implementation_ToggleCollectionsMenu
// 0x0001 (0x0001 - 0x0000)
struct VALUI_UIManagerWidgetBase_Implementation_ToggleCollectionsMenu final
{
public:
	EVAL_CollectionsTabState                      TabState;                                          // 0x0000(0x0001)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(VALUI_UIManagerWidgetBase_Implementation_ToggleCollectionsMenu) == 0x000001, "Wrong alignment on VALUI_UIManagerWidgetBase_Implementation_ToggleCollectionsMenu");
static_assert(sizeof(VALUI_UIManagerWidgetBase_Implementation_ToggleCollectionsMenu) == 0x000001, "Wrong size on VALUI_UIManagerWidgetBase_Implementation_ToggleCollectionsMenu");
static_assert(offsetof(VALUI_UIManagerWidgetBase_Implementation_ToggleCollectionsMenu, TabState) == 0x000000, "Member 'VALUI_UIManagerWidgetBase_Implementation_ToggleCollectionsMenu::TabState' has a wrong offset!");

// Function ValeriaUI.VALUI_UIManagerWidgetBase.Implementation_ToggleGameplayMenuMode
// 0x0001 (0x0001 - 0x0000)
struct VALUI_UIManagerWidgetBase_Implementation_ToggleGameplayMenuMode final
{
public:
	EVAL_GameplayMenuMode                         Mode;                                              // 0x0000(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(VALUI_UIManagerWidgetBase_Implementation_ToggleGameplayMenuMode) == 0x000001, "Wrong alignment on VALUI_UIManagerWidgetBase_Implementation_ToggleGameplayMenuMode");
static_assert(sizeof(VALUI_UIManagerWidgetBase_Implementation_ToggleGameplayMenuMode) == 0x000001, "Wrong size on VALUI_UIManagerWidgetBase_Implementation_ToggleGameplayMenuMode");
static_assert(offsetof(VALUI_UIManagerWidgetBase_Implementation_ToggleGameplayMenuMode, Mode) == 0x000000, "Member 'VALUI_UIManagerWidgetBase_Implementation_ToggleGameplayMenuMode::Mode' has a wrong offset!");

// Function ValeriaUI.VALUI_UIManagerWidgetBase.NavigateToOnlinePhotoAlbum
// 0x0014 (0x0014 - 0x0000)
struct VALUI_UIManagerWidgetBase_NavigateToOnlinePhotoAlbum final
{
public:
	struct FGuid                                  IdOfPhotoToNavigateTo;                             // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bShouldSelectPhoto;                                // 0x0010(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2D55[0x3];                                     // 0x0011(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(VALUI_UIManagerWidgetBase_NavigateToOnlinePhotoAlbum) == 0x000004, "Wrong alignment on VALUI_UIManagerWidgetBase_NavigateToOnlinePhotoAlbum");
static_assert(sizeof(VALUI_UIManagerWidgetBase_NavigateToOnlinePhotoAlbum) == 0x000014, "Wrong size on VALUI_UIManagerWidgetBase_NavigateToOnlinePhotoAlbum");
static_assert(offsetof(VALUI_UIManagerWidgetBase_NavigateToOnlinePhotoAlbum, IdOfPhotoToNavigateTo) == 0x000000, "Member 'VALUI_UIManagerWidgetBase_NavigateToOnlinePhotoAlbum::IdOfPhotoToNavigateTo' has a wrong offset!");
static_assert(offsetof(VALUI_UIManagerWidgetBase_NavigateToOnlinePhotoAlbum, bShouldSelectPhoto) == 0x000010, "Member 'VALUI_UIManagerWidgetBase_NavigateToOnlinePhotoAlbum::bShouldSelectPhoto' has a wrong offset!");

// Function ValeriaUI.VALUI_UIManagerWidgetBase.NavigateToRecentPhotos
// 0x0014 (0x0014 - 0x0000)
struct VALUI_UIManagerWidgetBase_NavigateToRecentPhotos final
{
public:
	struct FGuid                                  IdOfPhotoToNavigateTo;                             // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bShouldSelectPhoto;                                // 0x0010(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2D56[0x3];                                     // 0x0011(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(VALUI_UIManagerWidgetBase_NavigateToRecentPhotos) == 0x000004, "Wrong alignment on VALUI_UIManagerWidgetBase_NavigateToRecentPhotos");
static_assert(sizeof(VALUI_UIManagerWidgetBase_NavigateToRecentPhotos) == 0x000014, "Wrong size on VALUI_UIManagerWidgetBase_NavigateToRecentPhotos");
static_assert(offsetof(VALUI_UIManagerWidgetBase_NavigateToRecentPhotos, IdOfPhotoToNavigateTo) == 0x000000, "Member 'VALUI_UIManagerWidgetBase_NavigateToRecentPhotos::IdOfPhotoToNavigateTo' has a wrong offset!");
static_assert(offsetof(VALUI_UIManagerWidgetBase_NavigateToRecentPhotos, bShouldSelectPhoto) == 0x000010, "Member 'VALUI_UIManagerWidgetBase_NavigateToRecentPhotos::bShouldSelectPhoto' has a wrong offset!");

// Function ValeriaUI.VALUI_UIManagerWidgetBase.OnItemDragDropped
// 0x0008 (0x0008 - 0x0000)
struct VALUI_UIManagerWidgetBase_OnItemDragDropped final
{
public:
	class UDragDropOperation*                     Operation;                                         // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(VALUI_UIManagerWidgetBase_OnItemDragDropped) == 0x000008, "Wrong alignment on VALUI_UIManagerWidgetBase_OnItemDragDropped");
static_assert(sizeof(VALUI_UIManagerWidgetBase_OnItemDragDropped) == 0x000008, "Wrong size on VALUI_UIManagerWidgetBase_OnItemDragDropped");
static_assert(offsetof(VALUI_UIManagerWidgetBase_OnItemDragDropped, Operation) == 0x000000, "Member 'VALUI_UIManagerWidgetBase_OnItemDragDropped::Operation' has a wrong offset!");

// Function ValeriaUI.VALUI_UIManagerWidgetBase.OpenBook
// 0x0004 (0x0004 - 0x0000)
struct VALUI_UIManagerWidgetBase_OpenBook final
{
public:
	int32                                         BookId;                                            // 0x0000(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(VALUI_UIManagerWidgetBase_OpenBook) == 0x000004, "Wrong alignment on VALUI_UIManagerWidgetBase_OpenBook");
static_assert(sizeof(VALUI_UIManagerWidgetBase_OpenBook) == 0x000004, "Wrong size on VALUI_UIManagerWidgetBase_OpenBook");
static_assert(offsetof(VALUI_UIManagerWidgetBase_OpenBook, BookId) == 0x000000, "Member 'VALUI_UIManagerWidgetBase_OpenBook::BookId' has a wrong offset!");

// Function ValeriaUI.VALUI_UIManagerWidgetBase.OpenTutorialModal
// 0x0008 (0x0008 - 0x0000)
struct VALUI_UIManagerWidgetBase_OpenTutorialModal final
{
public:
	class FName                                   TutorialModalName;                                 // 0x0000(0x0008)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(VALUI_UIManagerWidgetBase_OpenTutorialModal) == 0x000004, "Wrong alignment on VALUI_UIManagerWidgetBase_OpenTutorialModal");
static_assert(sizeof(VALUI_UIManagerWidgetBase_OpenTutorialModal) == 0x000008, "Wrong size on VALUI_UIManagerWidgetBase_OpenTutorialModal");
static_assert(offsetof(VALUI_UIManagerWidgetBase_OpenTutorialModal, TutorialModalName) == 0x000000, "Member 'VALUI_UIManagerWidgetBase_OpenTutorialModal::TutorialModalName' has a wrong offset!");

// Function ValeriaUI.VALUI_UIManagerWidgetBase.OpenVillagerStore
// 0x0004 (0x0004 - 0x0000)
struct VALUI_UIManagerWidgetBase_OpenVillagerStore final
{
public:
	int32                                         VillagerConfigId;                                  // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(VALUI_UIManagerWidgetBase_OpenVillagerStore) == 0x000004, "Wrong alignment on VALUI_UIManagerWidgetBase_OpenVillagerStore");
static_assert(sizeof(VALUI_UIManagerWidgetBase_OpenVillagerStore) == 0x000004, "Wrong size on VALUI_UIManagerWidgetBase_OpenVillagerStore");
static_assert(offsetof(VALUI_UIManagerWidgetBase_OpenVillagerStore, VillagerConfigId) == 0x000000, "Member 'VALUI_UIManagerWidgetBase_OpenVillagerStore::VillagerConfigId' has a wrong offset!");

// Function ValeriaUI.VALUI_UIManagerWidgetBase.RegisterCallbacksAndBroadcastNewDragDrop
// 0x0008 (0x0008 - 0x0000)
struct VALUI_UIManagerWidgetBase_RegisterCallbacksAndBroadcastNewDragDrop final
{
public:
	const class UVALUI_ItemDragDrop*              ItemDragDrop;                                      // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(VALUI_UIManagerWidgetBase_RegisterCallbacksAndBroadcastNewDragDrop) == 0x000008, "Wrong alignment on VALUI_UIManagerWidgetBase_RegisterCallbacksAndBroadcastNewDragDrop");
static_assert(sizeof(VALUI_UIManagerWidgetBase_RegisterCallbacksAndBroadcastNewDragDrop) == 0x000008, "Wrong size on VALUI_UIManagerWidgetBase_RegisterCallbacksAndBroadcastNewDragDrop");
static_assert(offsetof(VALUI_UIManagerWidgetBase_RegisterCallbacksAndBroadcastNewDragDrop, ItemDragDrop) == 0x000000, "Member 'VALUI_UIManagerWidgetBase_RegisterCallbacksAndBroadcastNewDragDrop::ItemDragDrop' has a wrong offset!");

// Function ValeriaUI.VALUI_UIManagerWidgetBase.SetStoredCrafterUIState
// 0x0010 (0x0010 - 0x0000)
struct VALUI_UIManagerWidgetBase_SetStoredCrafterUIState final
{
public:
	class FName                                   CrafterName;                                       // 0x0000(0x0008)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FCrafterUIState                        CrafterUIState;                                    // 0x0008(0x0008)(Parm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(VALUI_UIManagerWidgetBase_SetStoredCrafterUIState) == 0x000004, "Wrong alignment on VALUI_UIManagerWidgetBase_SetStoredCrafterUIState");
static_assert(sizeof(VALUI_UIManagerWidgetBase_SetStoredCrafterUIState) == 0x000010, "Wrong size on VALUI_UIManagerWidgetBase_SetStoredCrafterUIState");
static_assert(offsetof(VALUI_UIManagerWidgetBase_SetStoredCrafterUIState, CrafterName) == 0x000000, "Member 'VALUI_UIManagerWidgetBase_SetStoredCrafterUIState::CrafterName' has a wrong offset!");
static_assert(offsetof(VALUI_UIManagerWidgetBase_SetStoredCrafterUIState, CrafterUIState) == 0x000008, "Member 'VALUI_UIManagerWidgetBase_SetStoredCrafterUIState::CrafterUIState' has a wrong offset!");

// Function ValeriaUI.VALUI_PregameUIManager.GetCachedCharacterAtIndex_Checked
// 0x0780 (0x0780 - 0x0000)
struct VALUI_PregameUIManager_GetCachedCharacterAtIndex_Checked final
{
public:
	int32                                         Param_Index;                                       // 0x0000(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2D59[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVALDTOS_MetaCharacterFormat           OutCharacter;                                      // 0x0008(0x0778)(Parm, OutParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(VALUI_PregameUIManager_GetCachedCharacterAtIndex_Checked) == 0x000008, "Wrong alignment on VALUI_PregameUIManager_GetCachedCharacterAtIndex_Checked");
static_assert(sizeof(VALUI_PregameUIManager_GetCachedCharacterAtIndex_Checked) == 0x000780, "Wrong size on VALUI_PregameUIManager_GetCachedCharacterAtIndex_Checked");
static_assert(offsetof(VALUI_PregameUIManager_GetCachedCharacterAtIndex_Checked, Param_Index) == 0x000000, "Member 'VALUI_PregameUIManager_GetCachedCharacterAtIndex_Checked::Param_Index' has a wrong offset!");
static_assert(offsetof(VALUI_PregameUIManager_GetCachedCharacterAtIndex_Checked, OutCharacter) == 0x000008, "Member 'VALUI_PregameUIManager_GetCachedCharacterAtIndex_Checked::OutCharacter' has a wrong offset!");

// Function ValeriaUI.VALUI_PregameUIManager.GetServerStatusUrl
// 0x0010 (0x0010 - 0x0000)
struct VALUI_PregameUIManager_GetServerStatusUrl final
{
public:
	class FString                                 ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(VALUI_PregameUIManager_GetServerStatusUrl) == 0x000008, "Wrong alignment on VALUI_PregameUIManager_GetServerStatusUrl");
static_assert(sizeof(VALUI_PregameUIManager_GetServerStatusUrl) == 0x000010, "Wrong size on VALUI_PregameUIManager_GetServerStatusUrl");
static_assert(offsetof(VALUI_PregameUIManager_GetServerStatusUrl, ReturnValue) == 0x000000, "Member 'VALUI_PregameUIManager_GetServerStatusUrl::ReturnValue' has a wrong offset!");

// Function ValeriaUI.VALUI_PregameUIManager.GoToCharacterCreationState
// 0x0001 (0x0001 - 0x0000)
struct VALUI_PregameUIManager_GoToCharacterCreationState final
{
public:
	EVALUI_CharacterCreationState                 NewState;                                          // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(VALUI_PregameUIManager_GoToCharacterCreationState) == 0x000001, "Wrong alignment on VALUI_PregameUIManager_GoToCharacterCreationState");
static_assert(sizeof(VALUI_PregameUIManager_GoToCharacterCreationState) == 0x000001, "Wrong size on VALUI_PregameUIManager_GoToCharacterCreationState");
static_assert(offsetof(VALUI_PregameUIManager_GoToCharacterCreationState, NewState) == 0x000000, "Member 'VALUI_PregameUIManager_GoToCharacterCreationState::NewState' has a wrong offset!");

// Function ValeriaUI.VALUI_PregameUIManager.GoToLobbyState
// 0x0001 (0x0001 - 0x0000)
struct VALUI_PregameUIManager_GoToLobbyState final
{
public:
	EVALUI_LobbyState                             NewState;                                          // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(VALUI_PregameUIManager_GoToLobbyState) == 0x000001, "Wrong alignment on VALUI_PregameUIManager_GoToLobbyState");
static_assert(sizeof(VALUI_PregameUIManager_GoToLobbyState) == 0x000001, "Wrong size on VALUI_PregameUIManager_GoToLobbyState");
static_assert(offsetof(VALUI_PregameUIManager_GoToLobbyState, NewState) == 0x000000, "Member 'VALUI_PregameUIManager_GoToLobbyState::NewState' has a wrong offset!");

// Function ValeriaUI.VALUI_PregameUIManager.GoToLoginState
// 0x0001 (0x0001 - 0x0000)
struct VALUI_PregameUIManager_GoToLoginState final
{
public:
	EVALUI_LoginState                             NewState;                                          // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(VALUI_PregameUIManager_GoToLoginState) == 0x000001, "Wrong alignment on VALUI_PregameUIManager_GoToLoginState");
static_assert(sizeof(VALUI_PregameUIManager_GoToLoginState) == 0x000001, "Wrong size on VALUI_PregameUIManager_GoToLoginState");
static_assert(offsetof(VALUI_PregameUIManager_GoToLoginState, NewState) == 0x000000, "Member 'VALUI_PregameUIManager_GoToLoginState::NewState' has a wrong offset!");

// Function ValeriaUI.VALUI_PregameUIManager.GoToPregameState
// 0x0001 (0x0001 - 0x0000)
struct VALUI_PregameUIManager_GoToPregameState final
{
public:
	EVALUI_PregameState                           NewState;                                          // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(VALUI_PregameUIManager_GoToPregameState) == 0x000001, "Wrong alignment on VALUI_PregameUIManager_GoToPregameState");
static_assert(sizeof(VALUI_PregameUIManager_GoToPregameState) == 0x000001, "Wrong size on VALUI_PregameUIManager_GoToPregameState");
static_assert(offsetof(VALUI_PregameUIManager_GoToPregameState, NewState) == 0x000000, "Member 'VALUI_PregameUIManager_GoToPregameState::NewState' has a wrong offset!");

// Function ValeriaUI.VALUI_PregameUIManager.HandleOnCharacterCreationStateChanged
// 0x0001 (0x0001 - 0x0000)
struct VALUI_PregameUIManager_HandleOnCharacterCreationStateChanged final
{
public:
	EVALUI_CharacterCreationState                 NewState;                                          // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(VALUI_PregameUIManager_HandleOnCharacterCreationStateChanged) == 0x000001, "Wrong alignment on VALUI_PregameUIManager_HandleOnCharacterCreationStateChanged");
static_assert(sizeof(VALUI_PregameUIManager_HandleOnCharacterCreationStateChanged) == 0x000001, "Wrong size on VALUI_PregameUIManager_HandleOnCharacterCreationStateChanged");
static_assert(offsetof(VALUI_PregameUIManager_HandleOnCharacterCreationStateChanged, NewState) == 0x000000, "Member 'VALUI_PregameUIManager_HandleOnCharacterCreationStateChanged::NewState' has a wrong offset!");

// Function ValeriaUI.VALUI_PregameUIManager.HandleOnCharacterListObtained
// 0x0010 (0x0010 - 0x0000)
struct VALUI_PregameUIManager_HandleOnCharacterListObtained final
{
public:
	TArray<struct FVALDTOS_MetaCharacterFormat>   InCachedCharacters;                                // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(VALUI_PregameUIManager_HandleOnCharacterListObtained) == 0x000008, "Wrong alignment on VALUI_PregameUIManager_HandleOnCharacterListObtained");
static_assert(sizeof(VALUI_PregameUIManager_HandleOnCharacterListObtained) == 0x000010, "Wrong size on VALUI_PregameUIManager_HandleOnCharacterListObtained");
static_assert(offsetof(VALUI_PregameUIManager_HandleOnCharacterListObtained, InCachedCharacters) == 0x000000, "Member 'VALUI_PregameUIManager_HandleOnCharacterListObtained::InCachedCharacters' has a wrong offset!");

// Function ValeriaUI.VALUI_PregameUIManager.HandleOnLobbyStateChanged
// 0x0001 (0x0001 - 0x0000)
struct VALUI_PregameUIManager_HandleOnLobbyStateChanged final
{
public:
	EVALUI_LobbyState                             NewState;                                          // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(VALUI_PregameUIManager_HandleOnLobbyStateChanged) == 0x000001, "Wrong alignment on VALUI_PregameUIManager_HandleOnLobbyStateChanged");
static_assert(sizeof(VALUI_PregameUIManager_HandleOnLobbyStateChanged) == 0x000001, "Wrong size on VALUI_PregameUIManager_HandleOnLobbyStateChanged");
static_assert(offsetof(VALUI_PregameUIManager_HandleOnLobbyStateChanged, NewState) == 0x000000, "Member 'VALUI_PregameUIManager_HandleOnLobbyStateChanged::NewState' has a wrong offset!");

// Function ValeriaUI.VALUI_PregameUIManager.HandleOnLoginStateChanged
// 0x0001 (0x0001 - 0x0000)
struct VALUI_PregameUIManager_HandleOnLoginStateChanged final
{
public:
	EVALUI_LoginState                             NewState;                                          // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(VALUI_PregameUIManager_HandleOnLoginStateChanged) == 0x000001, "Wrong alignment on VALUI_PregameUIManager_HandleOnLoginStateChanged");
static_assert(sizeof(VALUI_PregameUIManager_HandleOnLoginStateChanged) == 0x000001, "Wrong size on VALUI_PregameUIManager_HandleOnLoginStateChanged");
static_assert(offsetof(VALUI_PregameUIManager_HandleOnLoginStateChanged, NewState) == 0x000000, "Member 'VALUI_PregameUIManager_HandleOnLoginStateChanged::NewState' has a wrong offset!");

// Function ValeriaUI.VALUI_PregameUIManager.HandleOnPregameStateChanged
// 0x0001 (0x0001 - 0x0000)
struct VALUI_PregameUIManager_HandleOnPregameStateChanged final
{
public:
	EVALUI_PregameState                           NewState;                                          // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(VALUI_PregameUIManager_HandleOnPregameStateChanged) == 0x000001, "Wrong alignment on VALUI_PregameUIManager_HandleOnPregameStateChanged");
static_assert(sizeof(VALUI_PregameUIManager_HandleOnPregameStateChanged) == 0x000001, "Wrong size on VALUI_PregameUIManager_HandleOnPregameStateChanged");
static_assert(offsetof(VALUI_PregameUIManager_HandleOnPregameStateChanged, NewState) == 0x000000, "Member 'VALUI_PregameUIManager_HandleOnPregameStateChanged::NewState' has a wrong offset!");

// Function ValeriaUI.VALUI_PregameUIManager.HandleOnRetrievingCharacterListFailed
// 0x0004 (0x0004 - 0x0000)
struct VALUI_PregameUIManager_HandleOnRetrievingCharacterListFailed final
{
public:
	int32                                         ErrorCode;                                         // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(VALUI_PregameUIManager_HandleOnRetrievingCharacterListFailed) == 0x000004, "Wrong alignment on VALUI_PregameUIManager_HandleOnRetrievingCharacterListFailed");
static_assert(sizeof(VALUI_PregameUIManager_HandleOnRetrievingCharacterListFailed) == 0x000004, "Wrong size on VALUI_PregameUIManager_HandleOnRetrievingCharacterListFailed");
static_assert(offsetof(VALUI_PregameUIManager_HandleOnRetrievingCharacterListFailed, ErrorCode) == 0x000000, "Member 'VALUI_PregameUIManager_HandleOnRetrievingCharacterListFailed::ErrorCode' has a wrong offset!");

// DelegateFunction ValeriaUI.VALUI_PregameUIManager.OnLobbyStateChange__DelegateSignature
// 0x0001 (0x0001 - 0x0000)
struct VALUI_PregameUIManager_OnLobbyStateChange__DelegateSignature final
{
public:
	EVALUI_LobbyState                             State;                                             // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(VALUI_PregameUIManager_OnLobbyStateChange__DelegateSignature) == 0x000001, "Wrong alignment on VALUI_PregameUIManager_OnLobbyStateChange__DelegateSignature");
static_assert(sizeof(VALUI_PregameUIManager_OnLobbyStateChange__DelegateSignature) == 0x000001, "Wrong size on VALUI_PregameUIManager_OnLobbyStateChange__DelegateSignature");
static_assert(offsetof(VALUI_PregameUIManager_OnLobbyStateChange__DelegateSignature, State) == 0x000000, "Member 'VALUI_PregameUIManager_OnLobbyStateChange__DelegateSignature::State' has a wrong offset!");

// DelegateFunction ValeriaUI.VALUI_PregameUIManager.OnPregameStateChange__DelegateSignature
// 0x0001 (0x0001 - 0x0000)
struct VALUI_PregameUIManager_OnPregameStateChange__DelegateSignature final
{
public:
	EVALUI_PregameState                           State;                                             // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(VALUI_PregameUIManager_OnPregameStateChange__DelegateSignature) == 0x000001, "Wrong alignment on VALUI_PregameUIManager_OnPregameStateChange__DelegateSignature");
static_assert(sizeof(VALUI_PregameUIManager_OnPregameStateChange__DelegateSignature) == 0x000001, "Wrong size on VALUI_PregameUIManager_OnPregameStateChange__DelegateSignature");
static_assert(offsetof(VALUI_PregameUIManager_OnPregameStateChange__DelegateSignature, State) == 0x000000, "Member 'VALUI_PregameUIManager_OnPregameStateChange__DelegateSignature::State' has a wrong offset!");

// Function ValeriaUI.VALUI_PregameUIManager.StopAutoLogin
// 0x0001 (0x0001 - 0x0000)
struct VALUI_PregameUIManager_StopAutoLogin final
{
public:
	bool                                          bIsComplete;                                       // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(VALUI_PregameUIManager_StopAutoLogin) == 0x000001, "Wrong alignment on VALUI_PregameUIManager_StopAutoLogin");
static_assert(sizeof(VALUI_PregameUIManager_StopAutoLogin) == 0x000001, "Wrong size on VALUI_PregameUIManager_StopAutoLogin");
static_assert(offsetof(VALUI_PregameUIManager_StopAutoLogin, bIsComplete) == 0x000000, "Member 'VALUI_PregameUIManager_StopAutoLogin::bIsComplete' has a wrong offset!");

// Function ValeriaUI.VALUI_PregameUIManager.TryGetCachedCharacters
// 0x0018 (0x0018 - 0x0000)
struct VALUI_PregameUIManager_TryGetCachedCharacters final
{
public:
	TArray<struct FVALDTOS_MetaCharacterFormat>   OutOurCharacters;                                  // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2D5A[0x7];                                     // 0x0011(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(VALUI_PregameUIManager_TryGetCachedCharacters) == 0x000008, "Wrong alignment on VALUI_PregameUIManager_TryGetCachedCharacters");
static_assert(sizeof(VALUI_PregameUIManager_TryGetCachedCharacters) == 0x000018, "Wrong size on VALUI_PregameUIManager_TryGetCachedCharacters");
static_assert(offsetof(VALUI_PregameUIManager_TryGetCachedCharacters, OutOurCharacters) == 0x000000, "Member 'VALUI_PregameUIManager_TryGetCachedCharacters::OutOurCharacters' has a wrong offset!");
static_assert(offsetof(VALUI_PregameUIManager_TryGetCachedCharacters, ReturnValue) == 0x000010, "Member 'VALUI_PregameUIManager_TryGetCachedCharacters::ReturnValue' has a wrong offset!");

// Function ValeriaUI.VALUI_PregameUIManager.TryGetCachedCharacters_Checked
// 0x0010 (0x0010 - 0x0000)
struct VALUI_PregameUIManager_TryGetCachedCharacters_Checked final
{
public:
	TArray<struct FVALDTOS_MetaCharacterFormat>   OutOurCharacters;                                  // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(VALUI_PregameUIManager_TryGetCachedCharacters_Checked) == 0x000008, "Wrong alignment on VALUI_PregameUIManager_TryGetCachedCharacters_Checked");
static_assert(sizeof(VALUI_PregameUIManager_TryGetCachedCharacters_Checked) == 0x000010, "Wrong size on VALUI_PregameUIManager_TryGetCachedCharacters_Checked");
static_assert(offsetof(VALUI_PregameUIManager_TryGetCachedCharacters_Checked, OutOurCharacters) == 0x000000, "Member 'VALUI_PregameUIManager_TryGetCachedCharacters_Checked::OutOurCharacters' has a wrong offset!");

// Function ValeriaUI.VALUI_PregameUIManager.GetCurrentPregameStateId
// 0x0001 (0x0001 - 0x0000)
struct VALUI_PregameUIManager_GetCurrentPregameStateId final
{
public:
	EVALUI_PregameState                           ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(VALUI_PregameUIManager_GetCurrentPregameStateId) == 0x000001, "Wrong alignment on VALUI_PregameUIManager_GetCurrentPregameStateId");
static_assert(sizeof(VALUI_PregameUIManager_GetCurrentPregameStateId) == 0x000001, "Wrong size on VALUI_PregameUIManager_GetCurrentPregameStateId");
static_assert(offsetof(VALUI_PregameUIManager_GetCurrentPregameStateId, ReturnValue) == 0x000000, "Member 'VALUI_PregameUIManager_GetCurrentPregameStateId::ReturnValue' has a wrong offset!");

// Function ValeriaUI.VALUI_PregameUIManager.TryGetCurrentLobbyStateId
// 0x0002 (0x0002 - 0x0000)
struct VALUI_PregameUIManager_TryGetCurrentLobbyStateId final
{
public:
	EVALUI_LobbyState                             OutLobbyStateId;                                   // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(VALUI_PregameUIManager_TryGetCurrentLobbyStateId) == 0x000001, "Wrong alignment on VALUI_PregameUIManager_TryGetCurrentLobbyStateId");
static_assert(sizeof(VALUI_PregameUIManager_TryGetCurrentLobbyStateId) == 0x000002, "Wrong size on VALUI_PregameUIManager_TryGetCurrentLobbyStateId");
static_assert(offsetof(VALUI_PregameUIManager_TryGetCurrentLobbyStateId, OutLobbyStateId) == 0x000000, "Member 'VALUI_PregameUIManager_TryGetCurrentLobbyStateId::OutLobbyStateId' has a wrong offset!");
static_assert(offsetof(VALUI_PregameUIManager_TryGetCurrentLobbyStateId, ReturnValue) == 0x000001, "Member 'VALUI_PregameUIManager_TryGetCurrentLobbyStateId::ReturnValue' has a wrong offset!");

// Function ValeriaUI.VALUI_PregameUIManager.TryGetCurrentLoginStateId
// 0x0002 (0x0002 - 0x0000)
struct VALUI_PregameUIManager_TryGetCurrentLoginStateId final
{
public:
	EVALUI_LoginState                             OutLoginStateId;                                   // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(VALUI_PregameUIManager_TryGetCurrentLoginStateId) == 0x000001, "Wrong alignment on VALUI_PregameUIManager_TryGetCurrentLoginStateId");
static_assert(sizeof(VALUI_PregameUIManager_TryGetCurrentLoginStateId) == 0x000002, "Wrong size on VALUI_PregameUIManager_TryGetCurrentLoginStateId");
static_assert(offsetof(VALUI_PregameUIManager_TryGetCurrentLoginStateId, OutLoginStateId) == 0x000000, "Member 'VALUI_PregameUIManager_TryGetCurrentLoginStateId::OutLoginStateId' has a wrong offset!");
static_assert(offsetof(VALUI_PregameUIManager_TryGetCurrentLoginStateId, ReturnValue) == 0x000001, "Member 'VALUI_PregameUIManager_TryGetCurrentLoginStateId::ReturnValue' has a wrong offset!");

// Function ValeriaUI.VALUI_PremiumCurrencyPurchaseWidgetBase.HandleBundleOffersAvailable
// 0x0010 (0x0010 - 0x0000)
struct VALUI_PremiumCurrencyPurchaseWidgetBase_HandleBundleOffersAvailable final
{
public:
	TArray<struct FVALUI_PremiumCurrencyBundle>   Bundles;                                           // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(VALUI_PremiumCurrencyPurchaseWidgetBase_HandleBundleOffersAvailable) == 0x000008, "Wrong alignment on VALUI_PremiumCurrencyPurchaseWidgetBase_HandleBundleOffersAvailable");
static_assert(sizeof(VALUI_PremiumCurrencyPurchaseWidgetBase_HandleBundleOffersAvailable) == 0x000010, "Wrong size on VALUI_PremiumCurrencyPurchaseWidgetBase_HandleBundleOffersAvailable");
static_assert(offsetof(VALUI_PremiumCurrencyPurchaseWidgetBase_HandleBundleOffersAvailable, Bundles) == 0x000000, "Member 'VALUI_PremiumCurrencyPurchaseWidgetBase_HandleBundleOffersAvailable::Bundles' has a wrong offset!");

// Function ValeriaUI.VALUI_PremiumCurrencyPurchaseWidgetBase.HandleCheckoutSessionCreated
// 0x0010 (0x0010 - 0x0000)
struct VALUI_PremiumCurrencyPurchaseWidgetBase_HandleCheckoutSessionCreated final
{
public:
	class FString                                 URL;                                               // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(VALUI_PremiumCurrencyPurchaseWidgetBase_HandleCheckoutSessionCreated) == 0x000008, "Wrong alignment on VALUI_PremiumCurrencyPurchaseWidgetBase_HandleCheckoutSessionCreated");
static_assert(sizeof(VALUI_PremiumCurrencyPurchaseWidgetBase_HandleCheckoutSessionCreated) == 0x000010, "Wrong size on VALUI_PremiumCurrencyPurchaseWidgetBase_HandleCheckoutSessionCreated");
static_assert(offsetof(VALUI_PremiumCurrencyPurchaseWidgetBase_HandleCheckoutSessionCreated, URL) == 0x000000, "Member 'VALUI_PremiumCurrencyPurchaseWidgetBase_HandleCheckoutSessionCreated::URL' has a wrong offset!");

// Function ValeriaUI.VALUI_PremiumCurrencyPurchaseWidgetBase.HandleSteamMicrotransactionCompleted
// 0x0018 (0x0018 - 0x0000)
struct VALUI_PremiumCurrencyPurchaseWidgetBase_HandleSteamMicrotransactionCompleted final
{
public:
	uint32                                        AppID;                                             // 0x0000(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2D5D[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	uint64                                        OrderId;                                           // 0x0008(0x0008)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bAuthorized;                                       // 0x0010(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2D5E[0x7];                                     // 0x0011(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(VALUI_PremiumCurrencyPurchaseWidgetBase_HandleSteamMicrotransactionCompleted) == 0x000008, "Wrong alignment on VALUI_PremiumCurrencyPurchaseWidgetBase_HandleSteamMicrotransactionCompleted");
static_assert(sizeof(VALUI_PremiumCurrencyPurchaseWidgetBase_HandleSteamMicrotransactionCompleted) == 0x000018, "Wrong size on VALUI_PremiumCurrencyPurchaseWidgetBase_HandleSteamMicrotransactionCompleted");
static_assert(offsetof(VALUI_PremiumCurrencyPurchaseWidgetBase_HandleSteamMicrotransactionCompleted, AppID) == 0x000000, "Member 'VALUI_PremiumCurrencyPurchaseWidgetBase_HandleSteamMicrotransactionCompleted::AppID' has a wrong offset!");
static_assert(offsetof(VALUI_PremiumCurrencyPurchaseWidgetBase_HandleSteamMicrotransactionCompleted, OrderId) == 0x000008, "Member 'VALUI_PremiumCurrencyPurchaseWidgetBase_HandleSteamMicrotransactionCompleted::OrderId' has a wrong offset!");
static_assert(offsetof(VALUI_PremiumCurrencyPurchaseWidgetBase_HandleSteamMicrotransactionCompleted, bAuthorized) == 0x000010, "Member 'VALUI_PremiumCurrencyPurchaseWidgetBase_HandleSteamMicrotransactionCompleted::bAuthorized' has a wrong offset!");

// Function ValeriaUI.VALUI_PremiumCurrencyPurchaseWidgetBase.HandleUrlChanged
// 0x0018 (0x0018 - 0x0000)
struct VALUI_PremiumCurrencyPurchaseWidgetBase_HandleUrlChanged final
{
public:
	class FText                                   Text;                                              // 0x0000(0x0018)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(VALUI_PremiumCurrencyPurchaseWidgetBase_HandleUrlChanged) == 0x000008, "Wrong alignment on VALUI_PremiumCurrencyPurchaseWidgetBase_HandleUrlChanged");
static_assert(sizeof(VALUI_PremiumCurrencyPurchaseWidgetBase_HandleUrlChanged) == 0x000018, "Wrong size on VALUI_PremiumCurrencyPurchaseWidgetBase_HandleUrlChanged");
static_assert(offsetof(VALUI_PremiumCurrencyPurchaseWidgetBase_HandleUrlChanged, Text) == 0x000000, "Member 'VALUI_PremiumCurrencyPurchaseWidgetBase_HandleUrlChanged::Text' has a wrong offset!");

// Function ValeriaUI.VALUI_PremiumCurrencyPurchaseWidgetBase.HandleValidatePaymentFulfillmentTick
// 0x0010 (0x0010 - 0x0000)
struct VALUI_PremiumCurrencyPurchaseWidgetBase_HandleValidatePaymentFulfillmentTick final
{
public:
	struct FGuid                                  PaymentID;                                         // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(VALUI_PremiumCurrencyPurchaseWidgetBase_HandleValidatePaymentFulfillmentTick) == 0x000004, "Wrong alignment on VALUI_PremiumCurrencyPurchaseWidgetBase_HandleValidatePaymentFulfillmentTick");
static_assert(sizeof(VALUI_PremiumCurrencyPurchaseWidgetBase_HandleValidatePaymentFulfillmentTick) == 0x000010, "Wrong size on VALUI_PremiumCurrencyPurchaseWidgetBase_HandleValidatePaymentFulfillmentTick");
static_assert(offsetof(VALUI_PremiumCurrencyPurchaseWidgetBase_HandleValidatePaymentFulfillmentTick, PaymentID) == 0x000000, "Member 'VALUI_PremiumCurrencyPurchaseWidgetBase_HandleValidatePaymentFulfillmentTick::PaymentID' has a wrong offset!");

// Function ValeriaUI.VALUI_PremiumCurrencyPurchaseWidgetBase.PurchasePremiumCurrency
// 0x0010 (0x0010 - 0x0000)
struct VALUI_PremiumCurrencyPurchaseWidgetBase_PurchasePremiumCurrency final
{
public:
	struct FGuid                                  BundleId;                                          // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(VALUI_PremiumCurrencyPurchaseWidgetBase_PurchasePremiumCurrency) == 0x000004, "Wrong alignment on VALUI_PremiumCurrencyPurchaseWidgetBase_PurchasePremiumCurrency");
static_assert(sizeof(VALUI_PremiumCurrencyPurchaseWidgetBase_PurchasePremiumCurrency) == 0x000010, "Wrong size on VALUI_PremiumCurrencyPurchaseWidgetBase_PurchasePremiumCurrency");
static_assert(offsetof(VALUI_PremiumCurrencyPurchaseWidgetBase_PurchasePremiumCurrency, BundleId) == 0x000000, "Member 'VALUI_PremiumCurrencyPurchaseWidgetBase_PurchasePremiumCurrency::BundleId' has a wrong offset!");

// Function ValeriaUI.VALUI_PremiumItemPurchaseWidgetBase.GetCustomizationItemsForGuids
// 0x0020 (0x0020 - 0x0000)
struct VALUI_PremiumItemPurchaseWidgetBase_GetCustomizationItemsForGuids final
{
public:
	TArray<struct FGuid>                          ItemIds;                                           // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	TArray<class UVAL_CharacterCustomizationItemBase*> ReturnValue;                                       // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(VALUI_PremiumItemPurchaseWidgetBase_GetCustomizationItemsForGuids) == 0x000008, "Wrong alignment on VALUI_PremiumItemPurchaseWidgetBase_GetCustomizationItemsForGuids");
static_assert(sizeof(VALUI_PremiumItemPurchaseWidgetBase_GetCustomizationItemsForGuids) == 0x000020, "Wrong size on VALUI_PremiumItemPurchaseWidgetBase_GetCustomizationItemsForGuids");
static_assert(offsetof(VALUI_PremiumItemPurchaseWidgetBase_GetCustomizationItemsForGuids, ItemIds) == 0x000000, "Member 'VALUI_PremiumItemPurchaseWidgetBase_GetCustomizationItemsForGuids::ItemIds' has a wrong offset!");
static_assert(offsetof(VALUI_PremiumItemPurchaseWidgetBase_GetCustomizationItemsForGuids, ReturnValue) == 0x000010, "Member 'VALUI_PremiumItemPurchaseWidgetBase_GetCustomizationItemsForGuids::ReturnValue' has a wrong offset!");

// Function ValeriaUI.VALUI_PremiumItemPurchaseWidgetBase.GetLoadoutOverridesForCatalogItems
// 0x0060 (0x0060 - 0x0000)
struct VALUI_PremiumItemPurchaseWidgetBase_GetLoadoutOverridesForCatalogItems final
{
public:
	TArray<class UVAL_CharacterCustomizationItemBase*> Items;                                             // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	TMap<class FName, class UVAL_CharacterCustomizationItemBase*> ReturnValue;                                       // 0x0010(0x0050)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(VALUI_PremiumItemPurchaseWidgetBase_GetLoadoutOverridesForCatalogItems) == 0x000008, "Wrong alignment on VALUI_PremiumItemPurchaseWidgetBase_GetLoadoutOverridesForCatalogItems");
static_assert(sizeof(VALUI_PremiumItemPurchaseWidgetBase_GetLoadoutOverridesForCatalogItems) == 0x000060, "Wrong size on VALUI_PremiumItemPurchaseWidgetBase_GetLoadoutOverridesForCatalogItems");
static_assert(offsetof(VALUI_PremiumItemPurchaseWidgetBase_GetLoadoutOverridesForCatalogItems, Items) == 0x000000, "Member 'VALUI_PremiumItemPurchaseWidgetBase_GetLoadoutOverridesForCatalogItems::Items' has a wrong offset!");
static_assert(offsetof(VALUI_PremiumItemPurchaseWidgetBase_GetLoadoutOverridesForCatalogItems, ReturnValue) == 0x000010, "Member 'VALUI_PremiumItemPurchaseWidgetBase_GetLoadoutOverridesForCatalogItems::ReturnValue' has a wrong offset!");

// Function ValeriaUI.VALUI_PremiumStorefrontTileWidgetBase.HandleModelUpdate
// 0x0058 (0x0058 - 0x0000)
struct VALUI_PremiumStorefrontTileWidgetBase_HandleModelUpdate final
{
public:
	struct FVALUI_PremiumStorefrontWidgetModel    NewModel;                                          // 0x0000(0x0058)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(VALUI_PremiumStorefrontTileWidgetBase_HandleModelUpdate) == 0x000008, "Wrong alignment on VALUI_PremiumStorefrontTileWidgetBase_HandleModelUpdate");
static_assert(sizeof(VALUI_PremiumStorefrontTileWidgetBase_HandleModelUpdate) == 0x000058, "Wrong size on VALUI_PremiumStorefrontTileWidgetBase_HandleModelUpdate");
static_assert(offsetof(VALUI_PremiumStorefrontTileWidgetBase_HandleModelUpdate, NewModel) == 0x000000, "Member 'VALUI_PremiumStorefrontTileWidgetBase_HandleModelUpdate::NewModel' has a wrong offset!");

// DelegateFunction ValeriaUI.VALUI_PremiumStorefrontTileWidgetBase.OnSelected__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct VALUI_PremiumStorefrontTileWidgetBase_OnSelected__DelegateSignature final
{
public:
	class UVALUI_PremiumStorefrontTileWidgetBase* Widget;                                            // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(VALUI_PremiumStorefrontTileWidgetBase_OnSelected__DelegateSignature) == 0x000008, "Wrong alignment on VALUI_PremiumStorefrontTileWidgetBase_OnSelected__DelegateSignature");
static_assert(sizeof(VALUI_PremiumStorefrontTileWidgetBase_OnSelected__DelegateSignature) == 0x000008, "Wrong size on VALUI_PremiumStorefrontTileWidgetBase_OnSelected__DelegateSignature");
static_assert(offsetof(VALUI_PremiumStorefrontTileWidgetBase_OnSelected__DelegateSignature, Widget) == 0x000000, "Member 'VALUI_PremiumStorefrontTileWidgetBase_OnSelected__DelegateSignature::Widget' has a wrong offset!");

// Function ValeriaUI.VALUI_PremiumStorefrontTileWidgetBase.SetModel
// 0x0058 (0x0058 - 0x0000)
struct VALUI_PremiumStorefrontTileWidgetBase_SetModel final
{
public:
	struct FVALUI_PremiumStorefrontWidgetModel    NewModel;                                          // 0x0000(0x0058)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(VALUI_PremiumStorefrontTileWidgetBase_SetModel) == 0x000008, "Wrong alignment on VALUI_PremiumStorefrontTileWidgetBase_SetModel");
static_assert(sizeof(VALUI_PremiumStorefrontTileWidgetBase_SetModel) == 0x000058, "Wrong size on VALUI_PremiumStorefrontTileWidgetBase_SetModel");
static_assert(offsetof(VALUI_PremiumStorefrontTileWidgetBase_SetModel, NewModel) == 0x000000, "Member 'VALUI_PremiumStorefrontTileWidgetBase_SetModel::NewModel' has a wrong offset!");

// Function ValeriaUI.VALUI_PremiumStorefrontTileWidgetBase.GetModel
// 0x0058 (0x0058 - 0x0000)
struct VALUI_PremiumStorefrontTileWidgetBase_GetModel final
{
public:
	struct FVALUI_PremiumStorefrontWidgetModel    ReturnValue;                                       // 0x0000(0x0058)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(VALUI_PremiumStorefrontTileWidgetBase_GetModel) == 0x000008, "Wrong alignment on VALUI_PremiumStorefrontTileWidgetBase_GetModel");
static_assert(sizeof(VALUI_PremiumStorefrontTileWidgetBase_GetModel) == 0x000058, "Wrong size on VALUI_PremiumStorefrontTileWidgetBase_GetModel");
static_assert(offsetof(VALUI_PremiumStorefrontTileWidgetBase_GetModel, ReturnValue) == 0x000000, "Member 'VALUI_PremiumStorefrontTileWidgetBase_GetModel::ReturnValue' has a wrong offset!");

// Function ValeriaUI.VALUI_PremiumStorefrontTileWidgetBase.IsOwned
// 0x0001 (0x0001 - 0x0000)
struct VALUI_PremiumStorefrontTileWidgetBase_IsOwned final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(VALUI_PremiumStorefrontTileWidgetBase_IsOwned) == 0x000001, "Wrong alignment on VALUI_PremiumStorefrontTileWidgetBase_IsOwned");
static_assert(sizeof(VALUI_PremiumStorefrontTileWidgetBase_IsOwned) == 0x000001, "Wrong size on VALUI_PremiumStorefrontTileWidgetBase_IsOwned");
static_assert(offsetof(VALUI_PremiumStorefrontTileWidgetBase_IsOwned, ReturnValue) == 0x000000, "Member 'VALUI_PremiumStorefrontTileWidgetBase_IsOwned::ReturnValue' has a wrong offset!");

// Function ValeriaUI.VALUI_PremiumStorefrontWidgetBase.CreateStorefrontGrid
// 0x0018 (0x0018 - 0x0000)
struct VALUI_PremiumStorefrontWidgetBase_CreateStorefrontGrid final
{
public:
	int32                                         WidgetsPerRow;                                     // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2D60[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FVALUI_PremiumStorefrontWidgetModel> Models;                                            // 0x0008(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(VALUI_PremiumStorefrontWidgetBase_CreateStorefrontGrid) == 0x000008, "Wrong alignment on VALUI_PremiumStorefrontWidgetBase_CreateStorefrontGrid");
static_assert(sizeof(VALUI_PremiumStorefrontWidgetBase_CreateStorefrontGrid) == 0x000018, "Wrong size on VALUI_PremiumStorefrontWidgetBase_CreateStorefrontGrid");
static_assert(offsetof(VALUI_PremiumStorefrontWidgetBase_CreateStorefrontGrid, WidgetsPerRow) == 0x000000, "Member 'VALUI_PremiumStorefrontWidgetBase_CreateStorefrontGrid::WidgetsPerRow' has a wrong offset!");
static_assert(offsetof(VALUI_PremiumStorefrontWidgetBase_CreateStorefrontGrid, Models) == 0x000008, "Member 'VALUI_PremiumStorefrontWidgetBase_CreateStorefrontGrid::Models' has a wrong offset!");

// Function ValeriaUI.VALUI_PremiumStorefrontWidgetBase.FetchStorefront
// 0x0001 (0x0001 - 0x0000)
struct VALUI_PremiumStorefrontWidgetBase_FetchStorefront final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(VALUI_PremiumStorefrontWidgetBase_FetchStorefront) == 0x000001, "Wrong alignment on VALUI_PremiumStorefrontWidgetBase_FetchStorefront");
static_assert(sizeof(VALUI_PremiumStorefrontWidgetBase_FetchStorefront) == 0x000001, "Wrong size on VALUI_PremiumStorefrontWidgetBase_FetchStorefront");
static_assert(offsetof(VALUI_PremiumStorefrontWidgetBase_FetchStorefront, ReturnValue) == 0x000000, "Member 'VALUI_PremiumStorefrontWidgetBase_FetchStorefront::ReturnValue' has a wrong offset!");

// Function ValeriaUI.VALUI_PremiumStorefrontWidgetBase.HandleStorefrontAvailable
// 0x0078 (0x0078 - 0x0000)
struct VALUI_PremiumStorefrontWidgetBase_HandleStorefrontAvailable final
{
public:
	struct FVALUI_PremiumStorefrontResponse       Response;                                          // 0x0000(0x0078)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(VALUI_PremiumStorefrontWidgetBase_HandleStorefrontAvailable) == 0x000008, "Wrong alignment on VALUI_PremiumStorefrontWidgetBase_HandleStorefrontAvailable");
static_assert(sizeof(VALUI_PremiumStorefrontWidgetBase_HandleStorefrontAvailable) == 0x000078, "Wrong size on VALUI_PremiumStorefrontWidgetBase_HandleStorefrontAvailable");
static_assert(offsetof(VALUI_PremiumStorefrontWidgetBase_HandleStorefrontAvailable, Response) == 0x000000, "Member 'VALUI_PremiumStorefrontWidgetBase_HandleStorefrontAvailable::Response' has a wrong offset!");

// Function ValeriaUI.VALUI_PremiumStorefrontWidgetBase.HandleTileSelected
// 0x0058 (0x0058 - 0x0000)
struct VALUI_PremiumStorefrontWidgetBase_HandleTileSelected final
{
public:
	struct FVALUI_PremiumStorefrontWidgetModel    Model;                                             // 0x0000(0x0058)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(VALUI_PremiumStorefrontWidgetBase_HandleTileSelected) == 0x000008, "Wrong alignment on VALUI_PremiumStorefrontWidgetBase_HandleTileSelected");
static_assert(sizeof(VALUI_PremiumStorefrontWidgetBase_HandleTileSelected) == 0x000058, "Wrong size on VALUI_PremiumStorefrontWidgetBase_HandleTileSelected");
static_assert(offsetof(VALUI_PremiumStorefrontWidgetBase_HandleTileSelected, Model) == 0x000000, "Member 'VALUI_PremiumStorefrontWidgetBase_HandleTileSelected::Model' has a wrong offset!");

// Function ValeriaUI.VALUI_PremiumStorefrontWidgetBase.HandleTileWidgetSelected
// 0x0008 (0x0008 - 0x0000)
struct VALUI_PremiumStorefrontWidgetBase_HandleTileWidgetSelected final
{
public:
	class UVALUI_PremiumStorefrontTileWidgetBase* Tile;                                              // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(VALUI_PremiumStorefrontWidgetBase_HandleTileWidgetSelected) == 0x000008, "Wrong alignment on VALUI_PremiumStorefrontWidgetBase_HandleTileWidgetSelected");
static_assert(sizeof(VALUI_PremiumStorefrontWidgetBase_HandleTileWidgetSelected) == 0x000008, "Wrong size on VALUI_PremiumStorefrontWidgetBase_HandleTileWidgetSelected");
static_assert(offsetof(VALUI_PremiumStorefrontWidgetBase_HandleTileWidgetSelected, Tile) == 0x000000, "Member 'VALUI_PremiumStorefrontWidgetBase_HandleTileWidgetSelected::Tile' has a wrong offset!");

// Function ValeriaUI.VALUI_PremiumStorefrontWidgetBase.SetTileNavigation
// 0x0004 (0x0004 - 0x0000)
struct VALUI_PremiumStorefrontWidgetBase_SetTileNavigation final
{
public:
	int32                                         WidgetsPerRow;                                     // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(VALUI_PremiumStorefrontWidgetBase_SetTileNavigation) == 0x000004, "Wrong alignment on VALUI_PremiumStorefrontWidgetBase_SetTileNavigation");
static_assert(sizeof(VALUI_PremiumStorefrontWidgetBase_SetTileNavigation) == 0x000004, "Wrong size on VALUI_PremiumStorefrontWidgetBase_SetTileNavigation");
static_assert(offsetof(VALUI_PremiumStorefrontWidgetBase_SetTileNavigation, WidgetsPerRow) == 0x000000, "Member 'VALUI_PremiumStorefrontWidgetBase_SetTileNavigation::WidgetsPerRow' has a wrong offset!");

// Function ValeriaUI.VALUI_PremiumStoreScreenWidgetBase.GoToPremiumStoreState
// 0x0001 (0x0001 - 0x0000)
struct VALUI_PremiumStoreScreenWidgetBase_GoToPremiumStoreState final
{
public:
	EVALUI_PremiumStoreState                      NewState;                                          // 0x0000(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(VALUI_PremiumStoreScreenWidgetBase_GoToPremiumStoreState) == 0x000001, "Wrong alignment on VALUI_PremiumStoreScreenWidgetBase_GoToPremiumStoreState");
static_assert(sizeof(VALUI_PremiumStoreScreenWidgetBase_GoToPremiumStoreState) == 0x000001, "Wrong size on VALUI_PremiumStoreScreenWidgetBase_GoToPremiumStoreState");
static_assert(offsetof(VALUI_PremiumStoreScreenWidgetBase_GoToPremiumStoreState, NewState) == 0x000000, "Member 'VALUI_PremiumStoreScreenWidgetBase_GoToPremiumStoreState::NewState' has a wrong offset!");

// Function ValeriaUI.VALUI_PremiumStoreScreenWidgetBase.HandleBackAction
// 0x0028 (0x0028 - 0x0000)
struct VALUI_PremiumStoreScreenWidgetBase_HandleBackAction final
{
public:
	struct FInputActionValue                      ActionValue;                                       // 0x0000(0x0020)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	float                                         ElapsedTime;                                       // 0x0020(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         TriggeredTime;                                     // 0x0024(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(VALUI_PremiumStoreScreenWidgetBase_HandleBackAction) == 0x000008, "Wrong alignment on VALUI_PremiumStoreScreenWidgetBase_HandleBackAction");
static_assert(sizeof(VALUI_PremiumStoreScreenWidgetBase_HandleBackAction) == 0x000028, "Wrong size on VALUI_PremiumStoreScreenWidgetBase_HandleBackAction");
static_assert(offsetof(VALUI_PremiumStoreScreenWidgetBase_HandleBackAction, ActionValue) == 0x000000, "Member 'VALUI_PremiumStoreScreenWidgetBase_HandleBackAction::ActionValue' has a wrong offset!");
static_assert(offsetof(VALUI_PremiumStoreScreenWidgetBase_HandleBackAction, ElapsedTime) == 0x000020, "Member 'VALUI_PremiumStoreScreenWidgetBase_HandleBackAction::ElapsedTime' has a wrong offset!");
static_assert(offsetof(VALUI_PremiumStoreScreenWidgetBase_HandleBackAction, TriggeredTime) == 0x000024, "Member 'VALUI_PremiumStoreScreenWidgetBase_HandleBackAction::TriggeredTime' has a wrong offset!");

// Function ValeriaUI.VALUI_PremiumStoreScreenWidgetBase.HandleOnStateChanged
// 0x0001 (0x0001 - 0x0000)
struct VALUI_PremiumStoreScreenWidgetBase_HandleOnStateChanged final
{
public:
	EVALUI_PremiumStoreState                      State;                                             // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(VALUI_PremiumStoreScreenWidgetBase_HandleOnStateChanged) == 0x000001, "Wrong alignment on VALUI_PremiumStoreScreenWidgetBase_HandleOnStateChanged");
static_assert(sizeof(VALUI_PremiumStoreScreenWidgetBase_HandleOnStateChanged) == 0x000001, "Wrong size on VALUI_PremiumStoreScreenWidgetBase_HandleOnStateChanged");
static_assert(offsetof(VALUI_PremiumStoreScreenWidgetBase_HandleOnStateChanged, State) == 0x000000, "Member 'VALUI_PremiumStoreScreenWidgetBase_HandleOnStateChanged::State' has a wrong offset!");

// DelegateFunction ValeriaUI.VALUI_PremiumStoreScreenWidgetBase.OnStateChanged__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct VALUI_PremiumStoreScreenWidgetBase_OnStateChanged__DelegateSignature final
{
public:
	class UVALUI_PremiumStoreScreenWidgetBase*    StoreWidget;                                       // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EVALUI_PremiumStoreState                      State;                                             // 0x0008(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2D62[0x7];                                     // 0x0009(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(VALUI_PremiumStoreScreenWidgetBase_OnStateChanged__DelegateSignature) == 0x000008, "Wrong alignment on VALUI_PremiumStoreScreenWidgetBase_OnStateChanged__DelegateSignature");
static_assert(sizeof(VALUI_PremiumStoreScreenWidgetBase_OnStateChanged__DelegateSignature) == 0x000010, "Wrong size on VALUI_PremiumStoreScreenWidgetBase_OnStateChanged__DelegateSignature");
static_assert(offsetof(VALUI_PremiumStoreScreenWidgetBase_OnStateChanged__DelegateSignature, StoreWidget) == 0x000000, "Member 'VALUI_PremiumStoreScreenWidgetBase_OnStateChanged__DelegateSignature::StoreWidget' has a wrong offset!");
static_assert(offsetof(VALUI_PremiumStoreScreenWidgetBase_OnStateChanged__DelegateSignature, State) == 0x000008, "Member 'VALUI_PremiumStoreScreenWidgetBase_OnStateChanged__DelegateSignature::State' has a wrong offset!");

// Function ValeriaUI.VALUI_PremiumStoreScreenWidgetBase.GetPremiumStoreState
// 0x0001 (0x0001 - 0x0000)
struct VALUI_PremiumStoreScreenWidgetBase_GetPremiumStoreState final
{
public:
	EVALUI_PremiumStoreState                      ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(VALUI_PremiumStoreScreenWidgetBase_GetPremiumStoreState) == 0x000001, "Wrong alignment on VALUI_PremiumStoreScreenWidgetBase_GetPremiumStoreState");
static_assert(sizeof(VALUI_PremiumStoreScreenWidgetBase_GetPremiumStoreState) == 0x000001, "Wrong size on VALUI_PremiumStoreScreenWidgetBase_GetPremiumStoreState");
static_assert(offsetof(VALUI_PremiumStoreScreenWidgetBase_GetPremiumStoreState, ReturnValue) == 0x000000, "Member 'VALUI_PremiumStoreScreenWidgetBase_GetPremiumStoreState::ReturnValue' has a wrong offset!");

// Function ValeriaUI.VALUI_PremiumStoreFunctionLibrary.GetMultiplsVariantsDataFromItemIds
// 0x0118 (0x0118 - 0x0000)
struct VALUI_PremiumStoreFunctionLibrary_GetMultiplsVariantsDataFromItemIds final
{
public:
	struct FVALUI_PremiumStorefrontResponse       StorefrontResponse;                                // 0x0000(0x0078)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	TSet<struct FGuid>                            ItemIds;                                           // 0x0078(0x0050)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	TMap<struct FVALUI_PremiumStorefrontVariant, struct FVALUI_PremiumStorefrontWidgetModel> ReturnValue;                                       // 0x00C8(0x0050)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(VALUI_PremiumStoreFunctionLibrary_GetMultiplsVariantsDataFromItemIds) == 0x000008, "Wrong alignment on VALUI_PremiumStoreFunctionLibrary_GetMultiplsVariantsDataFromItemIds");
static_assert(sizeof(VALUI_PremiumStoreFunctionLibrary_GetMultiplsVariantsDataFromItemIds) == 0x000118, "Wrong size on VALUI_PremiumStoreFunctionLibrary_GetMultiplsVariantsDataFromItemIds");
static_assert(offsetof(VALUI_PremiumStoreFunctionLibrary_GetMultiplsVariantsDataFromItemIds, StorefrontResponse) == 0x000000, "Member 'VALUI_PremiumStoreFunctionLibrary_GetMultiplsVariantsDataFromItemIds::StorefrontResponse' has a wrong offset!");
static_assert(offsetof(VALUI_PremiumStoreFunctionLibrary_GetMultiplsVariantsDataFromItemIds, ItemIds) == 0x000078, "Member 'VALUI_PremiumStoreFunctionLibrary_GetMultiplsVariantsDataFromItemIds::ItemIds' has a wrong offset!");
static_assert(offsetof(VALUI_PremiumStoreFunctionLibrary_GetMultiplsVariantsDataFromItemIds, ReturnValue) == 0x0000C8, "Member 'VALUI_PremiumStoreFunctionLibrary_GetMultiplsVariantsDataFromItemIds::ReturnValue' has a wrong offset!");

// Function ValeriaUI.VALUI_PremiumStoreFunctionLibrary.GetNewPetsForBonusReceivedModal
// 0x01A8 (0x01A8 - 0x0000)
struct VALUI_PremiumStoreFunctionLibrary_GetNewPetsForBonusReceivedModal final
{
public:
	struct FVAL_CharacterCustomization_PetPurchaseBonus PetPurchaseBonus;                                  // 0x0000(0x0148)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	TSet<struct FGuid>                            NewEntitlements;                                   // 0x0148(0x0050)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	TArray<TSoftObjectPtr<class UVAL_CharacterCustomizationItem_Pet>> ReturnValue;                                       // 0x0198(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, UObjectWrapper, NativeAccessSpecifierPublic)
};
static_assert(alignof(VALUI_PremiumStoreFunctionLibrary_GetNewPetsForBonusReceivedModal) == 0x000008, "Wrong alignment on VALUI_PremiumStoreFunctionLibrary_GetNewPetsForBonusReceivedModal");
static_assert(sizeof(VALUI_PremiumStoreFunctionLibrary_GetNewPetsForBonusReceivedModal) == 0x0001A8, "Wrong size on VALUI_PremiumStoreFunctionLibrary_GetNewPetsForBonusReceivedModal");
static_assert(offsetof(VALUI_PremiumStoreFunctionLibrary_GetNewPetsForBonusReceivedModal, PetPurchaseBonus) == 0x000000, "Member 'VALUI_PremiumStoreFunctionLibrary_GetNewPetsForBonusReceivedModal::PetPurchaseBonus' has a wrong offset!");
static_assert(offsetof(VALUI_PremiumStoreFunctionLibrary_GetNewPetsForBonusReceivedModal, NewEntitlements) == 0x000148, "Member 'VALUI_PremiumStoreFunctionLibrary_GetNewPetsForBonusReceivedModal::NewEntitlements' has a wrong offset!");
static_assert(offsetof(VALUI_PremiumStoreFunctionLibrary_GetNewPetsForBonusReceivedModal, ReturnValue) == 0x000198, "Member 'VALUI_PremiumStoreFunctionLibrary_GetNewPetsForBonusReceivedModal::ReturnValue' has a wrong offset!");

// Function ValeriaUI.VALUI_PremiumStoreFunctionLibrary.GetPetPurchaseBonusFromPurchaseRewards
// 0x0158 (0x0158 - 0x0000)
struct VALUI_PremiumStoreFunctionLibrary_GetPetPurchaseBonusFromPurchaseRewards final
{
public:
	struct FVALUI_PremiumStorefrontPurchaseRewards PurchaseRewards;                                   // 0x0000(0x0010)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	struct FVAL_CharacterCustomization_PetPurchaseBonus ReturnValue;                                       // 0x0010(0x0148)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(VALUI_PremiumStoreFunctionLibrary_GetPetPurchaseBonusFromPurchaseRewards) == 0x000008, "Wrong alignment on VALUI_PremiumStoreFunctionLibrary_GetPetPurchaseBonusFromPurchaseRewards");
static_assert(sizeof(VALUI_PremiumStoreFunctionLibrary_GetPetPurchaseBonusFromPurchaseRewards) == 0x000158, "Wrong size on VALUI_PremiumStoreFunctionLibrary_GetPetPurchaseBonusFromPurchaseRewards");
static_assert(offsetof(VALUI_PremiumStoreFunctionLibrary_GetPetPurchaseBonusFromPurchaseRewards, PurchaseRewards) == 0x000000, "Member 'VALUI_PremiumStoreFunctionLibrary_GetPetPurchaseBonusFromPurchaseRewards::PurchaseRewards' has a wrong offset!");
static_assert(offsetof(VALUI_PremiumStoreFunctionLibrary_GetPetPurchaseBonusFromPurchaseRewards, ReturnValue) == 0x000010, "Member 'VALUI_PremiumStoreFunctionLibrary_GetPetPurchaseBonusFromPurchaseRewards::ReturnValue' has a wrong offset!");

// Function ValeriaUI.VALUI_PremiumStoreFunctionLibrary.ShouldShowBuyButtonOnTile
// 0x00E0 (0x00E0 - 0x0000)
struct VALUI_PremiumStoreFunctionLibrary_ShouldShowBuyButtonOnTile final
{
public:
	struct FVALUI_PremiumStorefrontVariant        Variant;                                           // 0x0000(0x00D8)(ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x00D8(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2D64[0x7];                                     // 0x00D9(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(VALUI_PremiumStoreFunctionLibrary_ShouldShowBuyButtonOnTile) == 0x000008, "Wrong alignment on VALUI_PremiumStoreFunctionLibrary_ShouldShowBuyButtonOnTile");
static_assert(sizeof(VALUI_PremiumStoreFunctionLibrary_ShouldShowBuyButtonOnTile) == 0x0000E0, "Wrong size on VALUI_PremiumStoreFunctionLibrary_ShouldShowBuyButtonOnTile");
static_assert(offsetof(VALUI_PremiumStoreFunctionLibrary_ShouldShowBuyButtonOnTile, Variant) == 0x000000, "Member 'VALUI_PremiumStoreFunctionLibrary_ShouldShowBuyButtonOnTile::Variant' has a wrong offset!");
static_assert(offsetof(VALUI_PremiumStoreFunctionLibrary_ShouldShowBuyButtonOnTile, ReturnValue) == 0x0000D8, "Member 'VALUI_PremiumStoreFunctionLibrary_ShouldShowBuyButtonOnTile::ReturnValue' has a wrong offset!");

// Function ValeriaUI.VALUI_PremiumStoreFunctionLibrary.SortItemsByItemSlot
// 0x0010 (0x0010 - 0x0000)
struct VALUI_PremiumStoreFunctionLibrary_SortItemsByItemSlot final
{
public:
	TArray<class UVAL_CharacterCustomizationItemBase*> OutItems;                                          // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(VALUI_PremiumStoreFunctionLibrary_SortItemsByItemSlot) == 0x000008, "Wrong alignment on VALUI_PremiumStoreFunctionLibrary_SortItemsByItemSlot");
static_assert(sizeof(VALUI_PremiumStoreFunctionLibrary_SortItemsByItemSlot) == 0x000010, "Wrong size on VALUI_PremiumStoreFunctionLibrary_SortItemsByItemSlot");
static_assert(offsetof(VALUI_PremiumStoreFunctionLibrary_SortItemsByItemSlot, OutItems) == 0x000000, "Member 'VALUI_PremiumStoreFunctionLibrary_SortItemsByItemSlot::OutItems' has a wrong offset!");

// Function ValeriaUI.VALUI_ProgressBarStyle.Apply
// 0x0008 (0x0008 - 0x0000)
struct VALUI_ProgressBarStyle_Apply final
{
public:
	class UProgressBar*                           ProgressBar;                                       // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(VALUI_ProgressBarStyle_Apply) == 0x000008, "Wrong alignment on VALUI_ProgressBarStyle_Apply");
static_assert(sizeof(VALUI_ProgressBarStyle_Apply) == 0x000008, "Wrong size on VALUI_ProgressBarStyle_Apply");
static_assert(offsetof(VALUI_ProgressBarStyle_Apply, ProgressBar) == 0x000000, "Member 'VALUI_ProgressBarStyle_Apply::ProgressBar' has a wrong offset!");

// Function ValeriaUI.VALUI_ProgressBar_Styled.SetProgressBarStyle
// 0x0008 (0x0008 - 0x0000)
struct VALUI_ProgressBar_Styled_SetProgressBarStyle final
{
public:
	class UVALUI_ProgressBarStyle*                NewStyle;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(VALUI_ProgressBar_Styled_SetProgressBarStyle) == 0x000008, "Wrong alignment on VALUI_ProgressBar_Styled_SetProgressBarStyle");
static_assert(sizeof(VALUI_ProgressBar_Styled_SetProgressBarStyle) == 0x000008, "Wrong size on VALUI_ProgressBar_Styled_SetProgressBarStyle");
static_assert(offsetof(VALUI_ProgressBar_Styled_SetProgressBarStyle, NewStyle) == 0x000000, "Member 'VALUI_ProgressBar_Styled_SetProgressBarStyle::NewStyle' has a wrong offset!");

// Function ValeriaUI.VALUI_RadioSlider.GetSliderWidget
// 0x0008 (0x0008 - 0x0000)
struct VALUI_RadioSlider_GetSliderWidget final
{
public:
	class UUserWidget*                            ReturnValue;                                       // 0x0000(0x0008)(ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(VALUI_RadioSlider_GetSliderWidget) == 0x000008, "Wrong alignment on VALUI_RadioSlider_GetSliderWidget");
static_assert(sizeof(VALUI_RadioSlider_GetSliderWidget) == 0x000008, "Wrong size on VALUI_RadioSlider_GetSliderWidget");
static_assert(offsetof(VALUI_RadioSlider_GetSliderWidget, ReturnValue) == 0x000000, "Member 'VALUI_RadioSlider_GetSliderWidget::ReturnValue' has a wrong offset!");

// DelegateFunction ValeriaUI.VALUI_RadioSlider.OnElementWidgetCreated__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct VALUI_RadioSlider_OnElementWidgetCreated__DelegateSignature final
{
public:
	class UUserWidget*                            ElementWidget;                                     // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ElementIndex;                                      // 0x0008(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2D68[0x4];                                     // 0x000C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(VALUI_RadioSlider_OnElementWidgetCreated__DelegateSignature) == 0x000008, "Wrong alignment on VALUI_RadioSlider_OnElementWidgetCreated__DelegateSignature");
static_assert(sizeof(VALUI_RadioSlider_OnElementWidgetCreated__DelegateSignature) == 0x000010, "Wrong size on VALUI_RadioSlider_OnElementWidgetCreated__DelegateSignature");
static_assert(offsetof(VALUI_RadioSlider_OnElementWidgetCreated__DelegateSignature, ElementWidget) == 0x000000, "Member 'VALUI_RadioSlider_OnElementWidgetCreated__DelegateSignature::ElementWidget' has a wrong offset!");
static_assert(offsetof(VALUI_RadioSlider_OnElementWidgetCreated__DelegateSignature, ElementIndex) == 0x000008, "Member 'VALUI_RadioSlider_OnElementWidgetCreated__DelegateSignature::ElementIndex' has a wrong offset!");

// DelegateFunction ValeriaUI.VALUI_RadioSlider.OnPageChanged__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct VALUI_RadioSlider_OnPageChanged__DelegateSignature final
{
public:
	int32                                         PageIndex;                                         // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         TotalNumPages;                                     // 0x0004(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(VALUI_RadioSlider_OnPageChanged__DelegateSignature) == 0x000004, "Wrong alignment on VALUI_RadioSlider_OnPageChanged__DelegateSignature");
static_assert(sizeof(VALUI_RadioSlider_OnPageChanged__DelegateSignature) == 0x000008, "Wrong size on VALUI_RadioSlider_OnPageChanged__DelegateSignature");
static_assert(offsetof(VALUI_RadioSlider_OnPageChanged__DelegateSignature, PageIndex) == 0x000000, "Member 'VALUI_RadioSlider_OnPageChanged__DelegateSignature::PageIndex' has a wrong offset!");
static_assert(offsetof(VALUI_RadioSlider_OnPageChanged__DelegateSignature, TotalNumPages) == 0x000004, "Member 'VALUI_RadioSlider_OnPageChanged__DelegateSignature::TotalNumPages' has a wrong offset!");

// DelegateFunction ValeriaUI.VALUI_RadioSlider.OnSliderChanged__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct VALUI_RadioSlider_OnSliderChanged__DelegateSignature final
{
public:
	class UUserWidget*                            PreviousElementWidget;                             // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         PreviousElementIndex;                              // 0x0008(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2D69[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUserWidget*                            NewElementWidget;                                  // 0x0010(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         NewElementIndex;                                   // 0x0018(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2D6A[0x4];                                     // 0x001C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(VALUI_RadioSlider_OnSliderChanged__DelegateSignature) == 0x000008, "Wrong alignment on VALUI_RadioSlider_OnSliderChanged__DelegateSignature");
static_assert(sizeof(VALUI_RadioSlider_OnSliderChanged__DelegateSignature) == 0x000020, "Wrong size on VALUI_RadioSlider_OnSliderChanged__DelegateSignature");
static_assert(offsetof(VALUI_RadioSlider_OnSliderChanged__DelegateSignature, PreviousElementWidget) == 0x000000, "Member 'VALUI_RadioSlider_OnSliderChanged__DelegateSignature::PreviousElementWidget' has a wrong offset!");
static_assert(offsetof(VALUI_RadioSlider_OnSliderChanged__DelegateSignature, PreviousElementIndex) == 0x000008, "Member 'VALUI_RadioSlider_OnSliderChanged__DelegateSignature::PreviousElementIndex' has a wrong offset!");
static_assert(offsetof(VALUI_RadioSlider_OnSliderChanged__DelegateSignature, NewElementWidget) == 0x000010, "Member 'VALUI_RadioSlider_OnSliderChanged__DelegateSignature::NewElementWidget' has a wrong offset!");
static_assert(offsetof(VALUI_RadioSlider_OnSliderChanged__DelegateSignature, NewElementIndex) == 0x000018, "Member 'VALUI_RadioSlider_OnSliderChanged__DelegateSignature::NewElementIndex' has a wrong offset!");

// DelegateFunction ValeriaUI.VALUI_RadioSlider.OnSliderWidgetCreated__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct VALUI_RadioSlider_OnSliderWidgetCreated__DelegateSignature final
{
public:
	class UUserWidget*                            Param_SliderWidget;                                // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(VALUI_RadioSlider_OnSliderWidgetCreated__DelegateSignature) == 0x000008, "Wrong alignment on VALUI_RadioSlider_OnSliderWidgetCreated__DelegateSignature");
static_assert(sizeof(VALUI_RadioSlider_OnSliderWidgetCreated__DelegateSignature) == 0x000008, "Wrong size on VALUI_RadioSlider_OnSliderWidgetCreated__DelegateSignature");
static_assert(offsetof(VALUI_RadioSlider_OnSliderWidgetCreated__DelegateSignature, Param_SliderWidget) == 0x000000, "Member 'VALUI_RadioSlider_OnSliderWidgetCreated__DelegateSignature::Param_SliderWidget' has a wrong offset!");

// Function ValeriaUI.VALUI_RadioSlider.SetIndex
// 0x0008 (0x0008 - 0x0000)
struct VALUI_RadioSlider_SetIndex final
{
public:
	int32                                         Param_Index;                                       // 0x0000(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bSkipSliderAnimation;                              // 0x0004(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2D6B[0x3];                                     // 0x0005(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(VALUI_RadioSlider_SetIndex) == 0x000004, "Wrong alignment on VALUI_RadioSlider_SetIndex");
static_assert(sizeof(VALUI_RadioSlider_SetIndex) == 0x000008, "Wrong size on VALUI_RadioSlider_SetIndex");
static_assert(offsetof(VALUI_RadioSlider_SetIndex, Param_Index) == 0x000000, "Member 'VALUI_RadioSlider_SetIndex::Param_Index' has a wrong offset!");
static_assert(offsetof(VALUI_RadioSlider_SetIndex, bSkipSliderAnimation) == 0x000004, "Member 'VALUI_RadioSlider_SetIndex::bSkipSliderAnimation' has a wrong offset!");

// Function ValeriaUI.VALUI_RadioSlider.GetCurrentIndex
// 0x0004 (0x0004 - 0x0000)
struct VALUI_RadioSlider_GetCurrentIndex final
{
public:
	int32                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(VALUI_RadioSlider_GetCurrentIndex) == 0x000004, "Wrong alignment on VALUI_RadioSlider_GetCurrentIndex");
static_assert(sizeof(VALUI_RadioSlider_GetCurrentIndex) == 0x000004, "Wrong size on VALUI_RadioSlider_GetCurrentIndex");
static_assert(offsetof(VALUI_RadioSlider_GetCurrentIndex, ReturnValue) == 0x000000, "Member 'VALUI_RadioSlider_GetCurrentIndex::ReturnValue' has a wrong offset!");

// Function ValeriaUI.VALUI_RadioSlider.GetCurrentPageIndex
// 0x0004 (0x0004 - 0x0000)
struct VALUI_RadioSlider_GetCurrentPageIndex final
{
public:
	int32                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(VALUI_RadioSlider_GetCurrentPageIndex) == 0x000004, "Wrong alignment on VALUI_RadioSlider_GetCurrentPageIndex");
static_assert(sizeof(VALUI_RadioSlider_GetCurrentPageIndex) == 0x000004, "Wrong size on VALUI_RadioSlider_GetCurrentPageIndex");
static_assert(offsetof(VALUI_RadioSlider_GetCurrentPageIndex, ReturnValue) == 0x000000, "Member 'VALUI_RadioSlider_GetCurrentPageIndex::ReturnValue' has a wrong offset!");

// Function ValeriaUI.VALUI_RadioSlider.GetElementIndexsInCurrentPage
// 0x0010 (0x0010 - 0x0000)
struct VALUI_RadioSlider_GetElementIndexsInCurrentPage final
{
public:
	TArray<int32>                                 ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(VALUI_RadioSlider_GetElementIndexsInCurrentPage) == 0x000008, "Wrong alignment on VALUI_RadioSlider_GetElementIndexsInCurrentPage");
static_assert(sizeof(VALUI_RadioSlider_GetElementIndexsInCurrentPage) == 0x000010, "Wrong size on VALUI_RadioSlider_GetElementIndexsInCurrentPage");
static_assert(offsetof(VALUI_RadioSlider_GetElementIndexsInCurrentPage, ReturnValue) == 0x000000, "Member 'VALUI_RadioSlider_GetElementIndexsInCurrentPage::ReturnValue' has a wrong offset!");

// Function ValeriaUI.VALUI_RadioSlider.GetElementWidgetsTable
// 0x0050 (0x0050 - 0x0000)
struct VALUI_RadioSlider_GetElementWidgetsTable final
{
public:
	TMap<int32, class UUserWidget*>               ReturnValue;                                       // 0x0000(0x0050)(ConstParm, ExportObject, Parm, OutParm, ReturnParm, ReferenceParm, ContainsInstancedReference, NativeAccessSpecifierPublic)
};
static_assert(alignof(VALUI_RadioSlider_GetElementWidgetsTable) == 0x000008, "Wrong alignment on VALUI_RadioSlider_GetElementWidgetsTable");
static_assert(sizeof(VALUI_RadioSlider_GetElementWidgetsTable) == 0x000050, "Wrong size on VALUI_RadioSlider_GetElementWidgetsTable");
static_assert(offsetof(VALUI_RadioSlider_GetElementWidgetsTable, ReturnValue) == 0x000000, "Member 'VALUI_RadioSlider_GetElementWidgetsTable::ReturnValue' has a wrong offset!");

// Function ValeriaUI.VALUI_RadioSlider.GetIndexFromWidget
// 0x0010 (0x0010 - 0x0000)
struct VALUI_RadioSlider_GetIndexFromWidget final
{
public:
	class UUserWidget*                            Widget;                                            // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Param_Index;                                       // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x000C(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2D6C[0x3];                                     // 0x000D(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(VALUI_RadioSlider_GetIndexFromWidget) == 0x000008, "Wrong alignment on VALUI_RadioSlider_GetIndexFromWidget");
static_assert(sizeof(VALUI_RadioSlider_GetIndexFromWidget) == 0x000010, "Wrong size on VALUI_RadioSlider_GetIndexFromWidget");
static_assert(offsetof(VALUI_RadioSlider_GetIndexFromWidget, Widget) == 0x000000, "Member 'VALUI_RadioSlider_GetIndexFromWidget::Widget' has a wrong offset!");
static_assert(offsetof(VALUI_RadioSlider_GetIndexFromWidget, Param_Index) == 0x000008, "Member 'VALUI_RadioSlider_GetIndexFromWidget::Param_Index' has a wrong offset!");
static_assert(offsetof(VALUI_RadioSlider_GetIndexFromWidget, ReturnValue) == 0x00000C, "Member 'VALUI_RadioSlider_GetIndexFromWidget::ReturnValue' has a wrong offset!");

// Function ValeriaUI.VALUI_RadioSlider.GetTotalNumPages
// 0x0004 (0x0004 - 0x0000)
struct VALUI_RadioSlider_GetTotalNumPages final
{
public:
	int32                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(VALUI_RadioSlider_GetTotalNumPages) == 0x000004, "Wrong alignment on VALUI_RadioSlider_GetTotalNumPages");
static_assert(sizeof(VALUI_RadioSlider_GetTotalNumPages) == 0x000004, "Wrong size on VALUI_RadioSlider_GetTotalNumPages");
static_assert(offsetof(VALUI_RadioSlider_GetTotalNumPages, ReturnValue) == 0x000000, "Member 'VALUI_RadioSlider_GetTotalNumPages::ReturnValue' has a wrong offset!");

// Function ValeriaUI.VALUI_RadioSlider.GetWidgetAtIndex
// 0x0010 (0x0010 - 0x0000)
struct VALUI_RadioSlider_GetWidgetAtIndex final
{
public:
	int32                                         Param_Index;                                       // 0x0000(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2D6D[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUserWidget*                            ReturnValue;                                       // 0x0008(0x0008)(ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(VALUI_RadioSlider_GetWidgetAtIndex) == 0x000008, "Wrong alignment on VALUI_RadioSlider_GetWidgetAtIndex");
static_assert(sizeof(VALUI_RadioSlider_GetWidgetAtIndex) == 0x000010, "Wrong size on VALUI_RadioSlider_GetWidgetAtIndex");
static_assert(offsetof(VALUI_RadioSlider_GetWidgetAtIndex, Param_Index) == 0x000000, "Member 'VALUI_RadioSlider_GetWidgetAtIndex::Param_Index' has a wrong offset!");
static_assert(offsetof(VALUI_RadioSlider_GetWidgetAtIndex, ReturnValue) == 0x000008, "Member 'VALUI_RadioSlider_GetWidgetAtIndex::ReturnValue' has a wrong offset!");

// Function ValeriaUI.VALUI_RichTextBlockStyle.ApplyToTextBlock
// 0x0008 (0x0008 - 0x0000)
struct VALUI_RichTextBlockStyle_ApplyToTextBlock final
{
public:
	class URichTextBlock*                         TextWidget;                                        // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(VALUI_RichTextBlockStyle_ApplyToTextBlock) == 0x000008, "Wrong alignment on VALUI_RichTextBlockStyle_ApplyToTextBlock");
static_assert(sizeof(VALUI_RichTextBlockStyle_ApplyToTextBlock) == 0x000008, "Wrong size on VALUI_RichTextBlockStyle_ApplyToTextBlock");
static_assert(offsetof(VALUI_RichTextBlockStyle_ApplyToTextBlock, TextWidget) == 0x000000, "Member 'VALUI_RichTextBlockStyle_ApplyToTextBlock::TextWidget' has a wrong offset!");

// Function ValeriaUI.VALUI_RichTextBlock_Styled.SetTextBlockStyle
// 0x0008 (0x0008 - 0x0000)
struct VALUI_RichTextBlock_Styled_SetTextBlockStyle final
{
public:
	class UVALUI_RichTextBlockStyle*              NewStyle;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(VALUI_RichTextBlock_Styled_SetTextBlockStyle) == 0x000008, "Wrong alignment on VALUI_RichTextBlock_Styled_SetTextBlockStyle");
static_assert(sizeof(VALUI_RichTextBlock_Styled_SetTextBlockStyle) == 0x000008, "Wrong size on VALUI_RichTextBlock_Styled_SetTextBlockStyle");
static_assert(offsetof(VALUI_RichTextBlock_Styled_SetTextBlockStyle, NewStyle) == 0x000000, "Member 'VALUI_RichTextBlock_Styled_SetTextBlockStyle::NewStyle' has a wrong offset!");

// Function ValeriaUI.VALUI_ScrollBoxStyle.ApplyToScrollBox
// 0x0008 (0x0008 - 0x0000)
struct VALUI_ScrollBoxStyle_ApplyToScrollBox final
{
public:
	class UScrollBox*                             ScrollBox;                                         // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(VALUI_ScrollBoxStyle_ApplyToScrollBox) == 0x000008, "Wrong alignment on VALUI_ScrollBoxStyle_ApplyToScrollBox");
static_assert(sizeof(VALUI_ScrollBoxStyle_ApplyToScrollBox) == 0x000008, "Wrong size on VALUI_ScrollBoxStyle_ApplyToScrollBox");
static_assert(offsetof(VALUI_ScrollBoxStyle_ApplyToScrollBox, ScrollBox) == 0x000000, "Member 'VALUI_ScrollBoxStyle_ApplyToScrollBox::ScrollBox' has a wrong offset!");

// Function ValeriaUI.VALUI_ScrollBox_Styled.SetScrollBoxStyle
// 0x0008 (0x0008 - 0x0000)
struct VALUI_ScrollBox_Styled_SetScrollBoxStyle final
{
public:
	class UVALUI_ScrollBoxStyle*                  NewStyle;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(VALUI_ScrollBox_Styled_SetScrollBoxStyle) == 0x000008, "Wrong alignment on VALUI_ScrollBox_Styled_SetScrollBoxStyle");
static_assert(sizeof(VALUI_ScrollBox_Styled_SetScrollBoxStyle) == 0x000008, "Wrong size on VALUI_ScrollBox_Styled_SetScrollBoxStyle");
static_assert(offsetof(VALUI_ScrollBox_Styled_SetScrollBoxStyle, NewStyle) == 0x000000, "Member 'VALUI_ScrollBox_Styled_SetScrollBoxStyle::NewStyle' has a wrong offset!");

// Function ValeriaUI.VALUI_SliderStyle.Apply
// 0x0008 (0x0008 - 0x0000)
struct VALUI_SliderStyle_Apply final
{
public:
	class USlider*                                Slider;                                            // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(VALUI_SliderStyle_Apply) == 0x000008, "Wrong alignment on VALUI_SliderStyle_Apply");
static_assert(sizeof(VALUI_SliderStyle_Apply) == 0x000008, "Wrong size on VALUI_SliderStyle_Apply");
static_assert(offsetof(VALUI_SliderStyle_Apply, Slider) == 0x000000, "Member 'VALUI_SliderStyle_Apply::Slider' has a wrong offset!");

// Function ValeriaUI.VALUI_SocialPanelBase.GetDebugSimulationFlag
// 0x0010 (0x0010 - 0x0000)
struct VALUI_SocialPanelBase_GetDebugSimulationFlag final
{
public:
	class FString                                 ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(VALUI_SocialPanelBase_GetDebugSimulationFlag) == 0x000008, "Wrong alignment on VALUI_SocialPanelBase_GetDebugSimulationFlag");
static_assert(sizeof(VALUI_SocialPanelBase_GetDebugSimulationFlag) == 0x000010, "Wrong size on VALUI_SocialPanelBase_GetDebugSimulationFlag");
static_assert(offsetof(VALUI_SocialPanelBase_GetDebugSimulationFlag, ReturnValue) == 0x000000, "Member 'VALUI_SocialPanelBase_GetDebugSimulationFlag::ReturnValue' has a wrong offset!");

// DelegateFunction ValeriaUI.VALUI_SocialPanelBase.ToggleDebugSimulation__DelegateSignature
// 0x0001 (0x0001 - 0x0000)
struct VALUI_SocialPanelBase_ToggleDebugSimulation__DelegateSignature final
{
public:
	bool                                          bDisplay;                                          // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(VALUI_SocialPanelBase_ToggleDebugSimulation__DelegateSignature) == 0x000001, "Wrong alignment on VALUI_SocialPanelBase_ToggleDebugSimulation__DelegateSignature");
static_assert(sizeof(VALUI_SocialPanelBase_ToggleDebugSimulation__DelegateSignature) == 0x000001, "Wrong size on VALUI_SocialPanelBase_ToggleDebugSimulation__DelegateSignature");
static_assert(offsetof(VALUI_SocialPanelBase_ToggleDebugSimulation__DelegateSignature, bDisplay) == 0x000000, "Member 'VALUI_SocialPanelBase_ToggleDebugSimulation__DelegateSignature::bDisplay' has a wrong offset!");

// Function ValeriaUI.VALUI_StateUserWidget_PregameHUD.DisplayMatchmakingQueueActive
// 0x0001 (0x0001 - 0x0000)
struct VALUI_StateUserWidget_PregameHUD_DisplayMatchmakingQueueActive final
{
public:
	bool                                          bActive;                                           // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(VALUI_StateUserWidget_PregameHUD_DisplayMatchmakingQueueActive) == 0x000001, "Wrong alignment on VALUI_StateUserWidget_PregameHUD_DisplayMatchmakingQueueActive");
static_assert(sizeof(VALUI_StateUserWidget_PregameHUD_DisplayMatchmakingQueueActive) == 0x000001, "Wrong size on VALUI_StateUserWidget_PregameHUD_DisplayMatchmakingQueueActive");
static_assert(offsetof(VALUI_StateUserWidget_PregameHUD_DisplayMatchmakingQueueActive, bActive) == 0x000000, "Member 'VALUI_StateUserWidget_PregameHUD_DisplayMatchmakingQueueActive::bActive' has a wrong offset!");

// Function ValeriaUI.VALUI_StateUserWidget_PregameHUD.DisplayMatchmakingQueueNumber
// 0x0004 (0x0004 - 0x0000)
struct VALUI_StateUserWidget_PregameHUD_DisplayMatchmakingQueueNumber final
{
public:
	int32                                         Number;                                            // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(VALUI_StateUserWidget_PregameHUD_DisplayMatchmakingQueueNumber) == 0x000004, "Wrong alignment on VALUI_StateUserWidget_PregameHUD_DisplayMatchmakingQueueNumber");
static_assert(sizeof(VALUI_StateUserWidget_PregameHUD_DisplayMatchmakingQueueNumber) == 0x000004, "Wrong size on VALUI_StateUserWidget_PregameHUD_DisplayMatchmakingQueueNumber");
static_assert(offsetof(VALUI_StateUserWidget_PregameHUD_DisplayMatchmakingQueueNumber, Number) == 0x000000, "Member 'VALUI_StateUserWidget_PregameHUD_DisplayMatchmakingQueueNumber::Number' has a wrong offset!");

// Function ValeriaUI.VALUI_StateUserWidget_PregameHUD.GetCharacterCreationScreen
// 0x0008 (0x0008 - 0x0000)
struct VALUI_StateUserWidget_PregameHUD_GetCharacterCreationScreen final
{
public:
	class UVALUI_CharacterCreationScreenBase*     ReturnValue;                                       // 0x0000(0x0008)(ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(VALUI_StateUserWidget_PregameHUD_GetCharacterCreationScreen) == 0x000008, "Wrong alignment on VALUI_StateUserWidget_PregameHUD_GetCharacterCreationScreen");
static_assert(sizeof(VALUI_StateUserWidget_PregameHUD_GetCharacterCreationScreen) == 0x000008, "Wrong size on VALUI_StateUserWidget_PregameHUD_GetCharacterCreationScreen");
static_assert(offsetof(VALUI_StateUserWidget_PregameHUD_GetCharacterCreationScreen, ReturnValue) == 0x000000, "Member 'VALUI_StateUserWidget_PregameHUD_GetCharacterCreationScreen::ReturnValue' has a wrong offset!");

// Function ValeriaUI.VALUI_StateUserWidget_PregameHUD.GetLobbyScreen
// 0x0008 (0x0008 - 0x0000)
struct VALUI_StateUserWidget_PregameHUD_GetLobbyScreen final
{
public:
	class UVALUI_LobbyScreenUserWidget*           ReturnValue;                                       // 0x0000(0x0008)(ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(VALUI_StateUserWidget_PregameHUD_GetLobbyScreen) == 0x000008, "Wrong alignment on VALUI_StateUserWidget_PregameHUD_GetLobbyScreen");
static_assert(sizeof(VALUI_StateUserWidget_PregameHUD_GetLobbyScreen) == 0x000008, "Wrong size on VALUI_StateUserWidget_PregameHUD_GetLobbyScreen");
static_assert(offsetof(VALUI_StateUserWidget_PregameHUD_GetLobbyScreen, ReturnValue) == 0x000000, "Member 'VALUI_StateUserWidget_PregameHUD_GetLobbyScreen::ReturnValue' has a wrong offset!");

// Function ValeriaUI.VALUI_StateUserWidget_PregameHUD.HandleOnCharacterCreationStateChanged
// 0x0001 (0x0001 - 0x0000)
struct VALUI_StateUserWidget_PregameHUD_HandleOnCharacterCreationStateChanged final
{
public:
	EVALUI_CharacterCreationState                 NewState;                                          // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(VALUI_StateUserWidget_PregameHUD_HandleOnCharacterCreationStateChanged) == 0x000001, "Wrong alignment on VALUI_StateUserWidget_PregameHUD_HandleOnCharacterCreationStateChanged");
static_assert(sizeof(VALUI_StateUserWidget_PregameHUD_HandleOnCharacterCreationStateChanged) == 0x000001, "Wrong size on VALUI_StateUserWidget_PregameHUD_HandleOnCharacterCreationStateChanged");
static_assert(offsetof(VALUI_StateUserWidget_PregameHUD_HandleOnCharacterCreationStateChanged, NewState) == 0x000000, "Member 'VALUI_StateUserWidget_PregameHUD_HandleOnCharacterCreationStateChanged::NewState' has a wrong offset!");

// Function ValeriaUI.VALUI_StateUserWidget_PregameHUD.HandleOnLobbyStateChanged
// 0x0001 (0x0001 - 0x0000)
struct VALUI_StateUserWidget_PregameHUD_HandleOnLobbyStateChanged final
{
public:
	EVALUI_LobbyState                             NewState;                                          // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(VALUI_StateUserWidget_PregameHUD_HandleOnLobbyStateChanged) == 0x000001, "Wrong alignment on VALUI_StateUserWidget_PregameHUD_HandleOnLobbyStateChanged");
static_assert(sizeof(VALUI_StateUserWidget_PregameHUD_HandleOnLobbyStateChanged) == 0x000001, "Wrong size on VALUI_StateUserWidget_PregameHUD_HandleOnLobbyStateChanged");
static_assert(offsetof(VALUI_StateUserWidget_PregameHUD_HandleOnLobbyStateChanged, NewState) == 0x000000, "Member 'VALUI_StateUserWidget_PregameHUD_HandleOnLobbyStateChanged::NewState' has a wrong offset!");

// Function ValeriaUI.VALUI_StateUserWidget_PregameHUD.HandleOnLoginStateChanged
// 0x0001 (0x0001 - 0x0000)
struct VALUI_StateUserWidget_PregameHUD_HandleOnLoginStateChanged final
{
public:
	EVALUI_LoginState                             NewState;                                          // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(VALUI_StateUserWidget_PregameHUD_HandleOnLoginStateChanged) == 0x000001, "Wrong alignment on VALUI_StateUserWidget_PregameHUD_HandleOnLoginStateChanged");
static_assert(sizeof(VALUI_StateUserWidget_PregameHUD_HandleOnLoginStateChanged) == 0x000001, "Wrong size on VALUI_StateUserWidget_PregameHUD_HandleOnLoginStateChanged");
static_assert(offsetof(VALUI_StateUserWidget_PregameHUD_HandleOnLoginStateChanged, NewState) == 0x000000, "Member 'VALUI_StateUserWidget_PregameHUD_HandleOnLoginStateChanged::NewState' has a wrong offset!");

// Function ValeriaUI.VALUI_StateUserWidget_PregameHUD.SetOwner
// 0x0008 (0x0008 - 0x0000)
struct VALUI_StateUserWidget_PregameHUD_SetOwner final
{
public:
	class UVALUI_PregameUIManager*                Owner;                                             // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(VALUI_StateUserWidget_PregameHUD_SetOwner) == 0x000008, "Wrong alignment on VALUI_StateUserWidget_PregameHUD_SetOwner");
static_assert(sizeof(VALUI_StateUserWidget_PregameHUD_SetOwner) == 0x000008, "Wrong size on VALUI_StateUserWidget_PregameHUD_SetOwner");
static_assert(offsetof(VALUI_StateUserWidget_PregameHUD_SetOwner, Owner) == 0x000000, "Member 'VALUI_StateUserWidget_PregameHUD_SetOwner::Owner' has a wrong offset!");

// Function ValeriaUI.VALUI_TabButtonHostBase.AddTabButton
// 0x0070 (0x0070 - 0x0000)
struct VALUI_TabButtonHostBase_AddTabButton final
{
public:
	class FName                                   TabName;                                           // 0x0000(0x0008)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVALUI_InstantiatedTabButtonInfo       Info;                                              // 0x0008(0x0068)(ConstParm, Parm, OutParm, ReferenceParm, ContainsInstancedReference, NativeAccessSpecifierPublic)
};
static_assert(alignof(VALUI_TabButtonHostBase_AddTabButton) == 0x000008, "Wrong alignment on VALUI_TabButtonHostBase_AddTabButton");
static_assert(sizeof(VALUI_TabButtonHostBase_AddTabButton) == 0x000070, "Wrong size on VALUI_TabButtonHostBase_AddTabButton");
static_assert(offsetof(VALUI_TabButtonHostBase_AddTabButton, TabName) == 0x000000, "Member 'VALUI_TabButtonHostBase_AddTabButton::TabName' has a wrong offset!");
static_assert(offsetof(VALUI_TabButtonHostBase_AddTabButton, Info) == 0x000008, "Member 'VALUI_TabButtonHostBase_AddTabButton::Info' has a wrong offset!");

// Function ValeriaUI.VALUI_TabButtonHostBase.HandleDifferentActiveTabSet
// 0x0008 (0x0008 - 0x0000)
struct VALUI_TabButtonHostBase_HandleDifferentActiveTabSet final
{
public:
	class FName                                   TabName;                                           // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(VALUI_TabButtonHostBase_HandleDifferentActiveTabSet) == 0x000004, "Wrong alignment on VALUI_TabButtonHostBase_HandleDifferentActiveTabSet");
static_assert(sizeof(VALUI_TabButtonHostBase_HandleDifferentActiveTabSet) == 0x000008, "Wrong size on VALUI_TabButtonHostBase_HandleDifferentActiveTabSet");
static_assert(offsetof(VALUI_TabButtonHostBase_HandleDifferentActiveTabSet, TabName) == 0x000000, "Member 'VALUI_TabButtonHostBase_HandleDifferentActiveTabSet::TabName' has a wrong offset!");

// Function ValeriaUI.VALUI_TabButtonHostBase.HideTabButton
// 0x0070 (0x0070 - 0x0000)
struct VALUI_TabButtonHostBase_HideTabButton final
{
public:
	class FName                                   TabName;                                           // 0x0000(0x0008)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVALUI_InstantiatedTabButtonInfo       Info;                                              // 0x0008(0x0068)(ConstParm, Parm, OutParm, ReferenceParm, ContainsInstancedReference, NativeAccessSpecifierPublic)
};
static_assert(alignof(VALUI_TabButtonHostBase_HideTabButton) == 0x000008, "Wrong alignment on VALUI_TabButtonHostBase_HideTabButton");
static_assert(sizeof(VALUI_TabButtonHostBase_HideTabButton) == 0x000070, "Wrong size on VALUI_TabButtonHostBase_HideTabButton");
static_assert(offsetof(VALUI_TabButtonHostBase_HideTabButton, TabName) == 0x000000, "Member 'VALUI_TabButtonHostBase_HideTabButton::TabName' has a wrong offset!");
static_assert(offsetof(VALUI_TabButtonHostBase_HideTabButton, Info) == 0x000008, "Member 'VALUI_TabButtonHostBase_HideTabButton::Info' has a wrong offset!");

// DelegateFunction ValeriaUI.VALUI_TabButtonHostBase.OnDifferentActiveTabSet__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct VALUI_TabButtonHostBase_OnDifferentActiveTabSet__DelegateSignature final
{
public:
	class UVALUI_TabButtonHostBase*               TabButtonHost;                                     // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(VALUI_TabButtonHostBase_OnDifferentActiveTabSet__DelegateSignature) == 0x000008, "Wrong alignment on VALUI_TabButtonHostBase_OnDifferentActiveTabSet__DelegateSignature");
static_assert(sizeof(VALUI_TabButtonHostBase_OnDifferentActiveTabSet__DelegateSignature) == 0x000008, "Wrong size on VALUI_TabButtonHostBase_OnDifferentActiveTabSet__DelegateSignature");
static_assert(offsetof(VALUI_TabButtonHostBase_OnDifferentActiveTabSet__DelegateSignature, TabButtonHost) == 0x000000, "Member 'VALUI_TabButtonHostBase_OnDifferentActiveTabSet__DelegateSignature::TabButtonHost' has a wrong offset!");

// Function ValeriaUI.VALUI_TabButtonHostBase.RegisterNewTab
// 0x0068 (0x0068 - 0x0000)
struct VALUI_TabButtonHostBase_RegisterNewTab final
{
public:
	class FName                                   TabName;                                           // 0x0000(0x0008)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FText                                   TabDisplayName;                                    // 0x0008(0x0018)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	class UButton*                                Button;                                            // 0x0020(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWidget*                                AssociatedContent;                                 // 0x0028(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UTexture2D>              IconTexture;                                       // 0x0030(0x0028)(Parm, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                              IconSize;                                          // 0x0058(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(VALUI_TabButtonHostBase_RegisterNewTab) == 0x000008, "Wrong alignment on VALUI_TabButtonHostBase_RegisterNewTab");
static_assert(sizeof(VALUI_TabButtonHostBase_RegisterNewTab) == 0x000068, "Wrong size on VALUI_TabButtonHostBase_RegisterNewTab");
static_assert(offsetof(VALUI_TabButtonHostBase_RegisterNewTab, TabName) == 0x000000, "Member 'VALUI_TabButtonHostBase_RegisterNewTab::TabName' has a wrong offset!");
static_assert(offsetof(VALUI_TabButtonHostBase_RegisterNewTab, TabDisplayName) == 0x000008, "Member 'VALUI_TabButtonHostBase_RegisterNewTab::TabDisplayName' has a wrong offset!");
static_assert(offsetof(VALUI_TabButtonHostBase_RegisterNewTab, Button) == 0x000020, "Member 'VALUI_TabButtonHostBase_RegisterNewTab::Button' has a wrong offset!");
static_assert(offsetof(VALUI_TabButtonHostBase_RegisterNewTab, AssociatedContent) == 0x000028, "Member 'VALUI_TabButtonHostBase_RegisterNewTab::AssociatedContent' has a wrong offset!");
static_assert(offsetof(VALUI_TabButtonHostBase_RegisterNewTab, IconTexture) == 0x000030, "Member 'VALUI_TabButtonHostBase_RegisterNewTab::IconTexture' has a wrong offset!");
static_assert(offsetof(VALUI_TabButtonHostBase_RegisterNewTab, IconSize) == 0x000058, "Member 'VALUI_TabButtonHostBase_RegisterNewTab::IconSize' has a wrong offset!");

// Function ValeriaUI.VALUI_TabButtonHostBase.RemoveTabButton
// 0x0070 (0x0070 - 0x0000)
struct VALUI_TabButtonHostBase_RemoveTabButton final
{
public:
	class FName                                   TabName;                                           // 0x0000(0x0008)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVALUI_InstantiatedTabButtonInfo       Info;                                              // 0x0008(0x0068)(ConstParm, Parm, OutParm, ReferenceParm, ContainsInstancedReference, NativeAccessSpecifierPublic)
};
static_assert(alignof(VALUI_TabButtonHostBase_RemoveTabButton) == 0x000008, "Wrong alignment on VALUI_TabButtonHostBase_RemoveTabButton");
static_assert(sizeof(VALUI_TabButtonHostBase_RemoveTabButton) == 0x000070, "Wrong size on VALUI_TabButtonHostBase_RemoveTabButton");
static_assert(offsetof(VALUI_TabButtonHostBase_RemoveTabButton, TabName) == 0x000000, "Member 'VALUI_TabButtonHostBase_RemoveTabButton::TabName' has a wrong offset!");
static_assert(offsetof(VALUI_TabButtonHostBase_RemoveTabButton, Info) == 0x000008, "Member 'VALUI_TabButtonHostBase_RemoveTabButton::Info' has a wrong offset!");

// Function ValeriaUI.VALUI_TabButtonHostBase.SetTabButtonVisibility
// 0x000C (0x000C - 0x0000)
struct VALUI_TabButtonHostBase_SetTabButtonVisibility final
{
public:
	class FName                                   TabName;                                           // 0x0000(0x0008)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ESlateVisibility                              NewVisibility;                                     // 0x0008(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2D73[0x3];                                     // 0x0009(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(VALUI_TabButtonHostBase_SetTabButtonVisibility) == 0x000004, "Wrong alignment on VALUI_TabButtonHostBase_SetTabButtonVisibility");
static_assert(sizeof(VALUI_TabButtonHostBase_SetTabButtonVisibility) == 0x00000C, "Wrong size on VALUI_TabButtonHostBase_SetTabButtonVisibility");
static_assert(offsetof(VALUI_TabButtonHostBase_SetTabButtonVisibility, TabName) == 0x000000, "Member 'VALUI_TabButtonHostBase_SetTabButtonVisibility::TabName' has a wrong offset!");
static_assert(offsetof(VALUI_TabButtonHostBase_SetTabButtonVisibility, NewVisibility) == 0x000008, "Member 'VALUI_TabButtonHostBase_SetTabButtonVisibility::NewVisibility' has a wrong offset!");

// Function ValeriaUI.VALUI_TabButtonHostBase.ShowTabButton
// 0x0070 (0x0070 - 0x0000)
struct VALUI_TabButtonHostBase_ShowTabButton final
{
public:
	class FName                                   TabName;                                           // 0x0000(0x0008)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVALUI_InstantiatedTabButtonInfo       Info;                                              // 0x0008(0x0068)(ConstParm, Parm, OutParm, ReferenceParm, ContainsInstancedReference, NativeAccessSpecifierPublic)
};
static_assert(alignof(VALUI_TabButtonHostBase_ShowTabButton) == 0x000008, "Wrong alignment on VALUI_TabButtonHostBase_ShowTabButton");
static_assert(sizeof(VALUI_TabButtonHostBase_ShowTabButton) == 0x000070, "Wrong size on VALUI_TabButtonHostBase_ShowTabButton");
static_assert(offsetof(VALUI_TabButtonHostBase_ShowTabButton, TabName) == 0x000000, "Member 'VALUI_TabButtonHostBase_ShowTabButton::TabName' has a wrong offset!");
static_assert(offsetof(VALUI_TabButtonHostBase_ShowTabButton, Info) == 0x000008, "Member 'VALUI_TabButtonHostBase_ShowTabButton::Info' has a wrong offset!");

// Function ValeriaUI.VALUI_TabButtonHostBase.TrySetActiveTabName
// 0x000C (0x000C - 0x0000)
struct VALUI_TabButtonHostBase_TrySetActiveTabName final
{
public:
	class FName                                   TabName;                                           // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bForceSet;                                         // 0x0008(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0009(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2D74[0x2];                                     // 0x000A(0x0002)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(VALUI_TabButtonHostBase_TrySetActiveTabName) == 0x000004, "Wrong alignment on VALUI_TabButtonHostBase_TrySetActiveTabName");
static_assert(sizeof(VALUI_TabButtonHostBase_TrySetActiveTabName) == 0x00000C, "Wrong size on VALUI_TabButtonHostBase_TrySetActiveTabName");
static_assert(offsetof(VALUI_TabButtonHostBase_TrySetActiveTabName, TabName) == 0x000000, "Member 'VALUI_TabButtonHostBase_TrySetActiveTabName::TabName' has a wrong offset!");
static_assert(offsetof(VALUI_TabButtonHostBase_TrySetActiveTabName, bForceSet) == 0x000008, "Member 'VALUI_TabButtonHostBase_TrySetActiveTabName::bForceSet' has a wrong offset!");
static_assert(offsetof(VALUI_TabButtonHostBase_TrySetActiveTabName, ReturnValue) == 0x000009, "Member 'VALUI_TabButtonHostBase_TrySetActiveTabName::ReturnValue' has a wrong offset!");

// Function ValeriaUI.VALUI_TabButtonHostBase.UnregisterTab
// 0x0008 (0x0008 - 0x0000)
struct VALUI_TabButtonHostBase_UnregisterTab final
{
public:
	class FName                                   TabName;                                           // 0x0000(0x0008)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(VALUI_TabButtonHostBase_UnregisterTab) == 0x000004, "Wrong alignment on VALUI_TabButtonHostBase_UnregisterTab");
static_assert(sizeof(VALUI_TabButtonHostBase_UnregisterTab) == 0x000008, "Wrong size on VALUI_TabButtonHostBase_UnregisterTab");
static_assert(offsetof(VALUI_TabButtonHostBase_UnregisterTab, TabName) == 0x000000, "Member 'VALUI_TabButtonHostBase_UnregisterTab::TabName' has a wrong offset!");

// Function ValeriaUI.VALUI_TabButtonHostBase.GetActiveTabName
// 0x0008 (0x0008 - 0x0000)
struct VALUI_TabButtonHostBase_GetActiveTabName final
{
public:
	class FName                                   ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(VALUI_TabButtonHostBase_GetActiveTabName) == 0x000004, "Wrong alignment on VALUI_TabButtonHostBase_GetActiveTabName");
static_assert(sizeof(VALUI_TabButtonHostBase_GetActiveTabName) == 0x000008, "Wrong size on VALUI_TabButtonHostBase_GetActiveTabName");
static_assert(offsetof(VALUI_TabButtonHostBase_GetActiveTabName, ReturnValue) == 0x000000, "Member 'VALUI_TabButtonHostBase_GetActiveTabName::ReturnValue' has a wrong offset!");

// Function ValeriaUI.VALUI_TabButtonHostBase.GetTabNames
// 0x0010 (0x0010 - 0x0000)
struct VALUI_TabButtonHostBase_GetTabNames final
{
public:
	TArray<class FName>                           ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(VALUI_TabButtonHostBase_GetTabNames) == 0x000008, "Wrong alignment on VALUI_TabButtonHostBase_GetTabNames");
static_assert(sizeof(VALUI_TabButtonHostBase_GetTabNames) == 0x000010, "Wrong size on VALUI_TabButtonHostBase_GetTabNames");
static_assert(offsetof(VALUI_TabButtonHostBase_GetTabNames, ReturnValue) == 0x000000, "Member 'VALUI_TabButtonHostBase_GetTabNames::ReturnValue' has a wrong offset!");

// Function ValeriaUI.VALUI_TabButtonHostBase.TryGetTabInfo
// 0x0078 (0x0078 - 0x0000)
struct VALUI_TabButtonHostBase_TryGetTabInfo final
{
public:
	class FName                                   TabName;                                           // 0x0000(0x0008)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVALUI_InstantiatedTabButtonInfo       OutInfo;                                           // 0x0008(0x0068)(Parm, OutParm, ContainsInstancedReference, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0070(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2D75[0x7];                                     // 0x0071(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(VALUI_TabButtonHostBase_TryGetTabInfo) == 0x000008, "Wrong alignment on VALUI_TabButtonHostBase_TryGetTabInfo");
static_assert(sizeof(VALUI_TabButtonHostBase_TryGetTabInfo) == 0x000078, "Wrong size on VALUI_TabButtonHostBase_TryGetTabInfo");
static_assert(offsetof(VALUI_TabButtonHostBase_TryGetTabInfo, TabName) == 0x000000, "Member 'VALUI_TabButtonHostBase_TryGetTabInfo::TabName' has a wrong offset!");
static_assert(offsetof(VALUI_TabButtonHostBase_TryGetTabInfo, OutInfo) == 0x000008, "Member 'VALUI_TabButtonHostBase_TryGetTabInfo::OutInfo' has a wrong offset!");
static_assert(offsetof(VALUI_TabButtonHostBase_TryGetTabInfo, ReturnValue) == 0x000070, "Member 'VALUI_TabButtonHostBase_TryGetTabInfo::ReturnValue' has a wrong offset!");

// Function ValeriaUI.VALUI_TabButtonInterface.SetIsActiveTabButton
// 0x0001 (0x0001 - 0x0000)
struct VALUI_TabButtonInterface_SetIsActiveTabButton final
{
public:
	bool                                          bIsActive;                                         // 0x0000(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(VALUI_TabButtonInterface_SetIsActiveTabButton) == 0x000001, "Wrong alignment on VALUI_TabButtonInterface_SetIsActiveTabButton");
static_assert(sizeof(VALUI_TabButtonInterface_SetIsActiveTabButton) == 0x000001, "Wrong size on VALUI_TabButtonInterface_SetIsActiveTabButton");
static_assert(offsetof(VALUI_TabButtonInterface_SetIsActiveTabButton, bIsActive) == 0x000000, "Member 'VALUI_TabButtonInterface_SetIsActiveTabButton::bIsActive' has a wrong offset!");

// Function ValeriaUI.VALUI_TextBlock_Styled.SetTextBlockStyle
// 0x0008 (0x0008 - 0x0000)
struct VALUI_TextBlock_Styled_SetTextBlockStyle final
{
public:
	class UVALUI_TextBlockStyle*                  NewStyle;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(VALUI_TextBlock_Styled_SetTextBlockStyle) == 0x000008, "Wrong alignment on VALUI_TextBlock_Styled_SetTextBlockStyle");
static_assert(sizeof(VALUI_TextBlock_Styled_SetTextBlockStyle) == 0x000008, "Wrong size on VALUI_TextBlock_Styled_SetTextBlockStyle");
static_assert(offsetof(VALUI_TextBlock_Styled_SetTextBlockStyle, NewStyle) == 0x000000, "Member 'VALUI_TextBlock_Styled_SetTextBlockStyle::NewStyle' has a wrong offset!");

// Function ValeriaUI.VALUI_TextBlock_Styled.UpdateCrossPlatformStyles
// 0x0050 (0x0050 - 0x0000)
struct VALUI_TextBlock_Styled_UpdateCrossPlatformStyles final
{
public:
	TMap<ERedirectsPlatform, TSoftObjectPtr<class UVALUI_TextBlockStyle>> NewCrossPlatformStyles;                            // 0x0000(0x0050)(ConstParm, Parm, OutParm, ReferenceParm, UObjectWrapper, NativeAccessSpecifierPublic)
};
static_assert(alignof(VALUI_TextBlock_Styled_UpdateCrossPlatformStyles) == 0x000008, "Wrong alignment on VALUI_TextBlock_Styled_UpdateCrossPlatformStyles");
static_assert(sizeof(VALUI_TextBlock_Styled_UpdateCrossPlatformStyles) == 0x000050, "Wrong size on VALUI_TextBlock_Styled_UpdateCrossPlatformStyles");
static_assert(offsetof(VALUI_TextBlock_Styled_UpdateCrossPlatformStyles, NewCrossPlatformStyles) == 0x000000, "Member 'VALUI_TextBlock_Styled_UpdateCrossPlatformStyles::NewCrossPlatformStyles' has a wrong offset!");

// Function ValeriaUI.VALUI_UButtonSlot.SetHorizontalAlignment
// 0x0001 (0x0001 - 0x0000)
struct VALUI_UButtonSlot_SetHorizontalAlignment final
{
public:
	EHorizontalAlignment                          InHorizontalAlignment;                             // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(VALUI_UButtonSlot_SetHorizontalAlignment) == 0x000001, "Wrong alignment on VALUI_UButtonSlot_SetHorizontalAlignment");
static_assert(sizeof(VALUI_UButtonSlot_SetHorizontalAlignment) == 0x000001, "Wrong size on VALUI_UButtonSlot_SetHorizontalAlignment");
static_assert(offsetof(VALUI_UButtonSlot_SetHorizontalAlignment, InHorizontalAlignment) == 0x000000, "Member 'VALUI_UButtonSlot_SetHorizontalAlignment::InHorizontalAlignment' has a wrong offset!");

// Function ValeriaUI.VALUI_UButtonSlot.SetPadding
// 0x0010 (0x0010 - 0x0000)
struct VALUI_UButtonSlot_SetPadding final
{
public:
	struct FMargin                                InPadding;                                         // 0x0000(0x0010)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(VALUI_UButtonSlot_SetPadding) == 0x000004, "Wrong alignment on VALUI_UButtonSlot_SetPadding");
static_assert(sizeof(VALUI_UButtonSlot_SetPadding) == 0x000010, "Wrong size on VALUI_UButtonSlot_SetPadding");
static_assert(offsetof(VALUI_UButtonSlot_SetPadding, InPadding) == 0x000000, "Member 'VALUI_UButtonSlot_SetPadding::InPadding' has a wrong offset!");

// Function ValeriaUI.VALUI_UButtonSlot.SetVerticalAlignment
// 0x0001 (0x0001 - 0x0000)
struct VALUI_UButtonSlot_SetVerticalAlignment final
{
public:
	EVerticalAlignment                            InVerticalAlignment;                               // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(VALUI_UButtonSlot_SetVerticalAlignment) == 0x000001, "Wrong alignment on VALUI_UButtonSlot_SetVerticalAlignment");
static_assert(sizeof(VALUI_UButtonSlot_SetVerticalAlignment) == 0x000001, "Wrong size on VALUI_UButtonSlot_SetVerticalAlignment");
static_assert(offsetof(VALUI_UButtonSlot_SetVerticalAlignment, InVerticalAlignment) == 0x000000, "Member 'VALUI_UButtonSlot_SetVerticalAlignment::InVerticalAlignment' has a wrong offset!");

// Function ValeriaUI.VALUI_UButton_Styled.OnMouseButtonClicked
// 0x0168 (0x0168 - 0x0000)
struct VALUI_UButton_Styled_OnMouseButtonClicked final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(Parm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FPointerEvent                          InMouseEvent;                                      // 0x0038(0x0078)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	struct FEventReply                            ReturnValue;                                       // 0x00B0(0x00B8)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(VALUI_UButton_Styled_OnMouseButtonClicked) == 0x000008, "Wrong alignment on VALUI_UButton_Styled_OnMouseButtonClicked");
static_assert(sizeof(VALUI_UButton_Styled_OnMouseButtonClicked) == 0x000168, "Wrong size on VALUI_UButton_Styled_OnMouseButtonClicked");
static_assert(offsetof(VALUI_UButton_Styled_OnMouseButtonClicked, MyGeometry) == 0x000000, "Member 'VALUI_UButton_Styled_OnMouseButtonClicked::MyGeometry' has a wrong offset!");
static_assert(offsetof(VALUI_UButton_Styled_OnMouseButtonClicked, InMouseEvent) == 0x000038, "Member 'VALUI_UButton_Styled_OnMouseButtonClicked::InMouseEvent' has a wrong offset!");
static_assert(offsetof(VALUI_UButton_Styled_OnMouseButtonClicked, ReturnValue) == 0x0000B0, "Member 'VALUI_UButton_Styled_OnMouseButtonClicked::ReturnValue' has a wrong offset!");

// Function ValeriaUI.VALUI_UButton_Styled.SetButtonConfig
// 0x0008 (0x0008 - 0x0000)
struct VALUI_UButton_Styled_SetButtonConfig final
{
public:
	const class UVALUI_ButtonStyle*               NewButtonStyle;                                    // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(VALUI_UButton_Styled_SetButtonConfig) == 0x000008, "Wrong alignment on VALUI_UButton_Styled_SetButtonConfig");
static_assert(sizeof(VALUI_UButton_Styled_SetButtonConfig) == 0x000008, "Wrong size on VALUI_UButton_Styled_SetButtonConfig");
static_assert(offsetof(VALUI_UButton_Styled_SetButtonConfig, NewButtonStyle) == 0x000000, "Member 'VALUI_UButton_Styled_SetButtonConfig::NewButtonStyle' has a wrong offset!");

// Function ValeriaUI.VALUI_UButton_Styled.SetButtonStyle
// 0x03F0 (0x03F0 - 0x0000)
struct VALUI_UButton_Styled_SetButtonStyle final
{
public:
	struct FButtonStyle                           WidgetStyle;                                       // 0x0000(0x03F0)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(VALUI_UButton_Styled_SetButtonStyle) == 0x000010, "Wrong alignment on VALUI_UButton_Styled_SetButtonStyle");
static_assert(sizeof(VALUI_UButton_Styled_SetButtonStyle) == 0x0003F0, "Wrong size on VALUI_UButton_Styled_SetButtonStyle");
static_assert(offsetof(VALUI_UButton_Styled_SetButtonStyle, WidgetStyle) == 0x000000, "Member 'VALUI_UButton_Styled_SetButtonStyle::WidgetStyle' has a wrong offset!");

// Function ValeriaUI.VALUI_UButton_Styled.SetClickMethod
// 0x0001 (0x0001 - 0x0000)
struct VALUI_UButton_Styled_SetClickMethod final
{
public:
	EButtonClickMethod                            InClickMethod;                                     // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(VALUI_UButton_Styled_SetClickMethod) == 0x000001, "Wrong alignment on VALUI_UButton_Styled_SetClickMethod");
static_assert(sizeof(VALUI_UButton_Styled_SetClickMethod) == 0x000001, "Wrong size on VALUI_UButton_Styled_SetClickMethod");
static_assert(offsetof(VALUI_UButton_Styled_SetClickMethod, InClickMethod) == 0x000000, "Member 'VALUI_UButton_Styled_SetClickMethod::InClickMethod' has a wrong offset!");

// Function ValeriaUI.VALUI_UButton_Styled.SetPressMethod
// 0x0001 (0x0001 - 0x0000)
struct VALUI_UButton_Styled_SetPressMethod final
{
public:
	EButtonPressMethod                            InPressMethod;                                     // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(VALUI_UButton_Styled_SetPressMethod) == 0x000001, "Wrong alignment on VALUI_UButton_Styled_SetPressMethod");
static_assert(sizeof(VALUI_UButton_Styled_SetPressMethod) == 0x000001, "Wrong size on VALUI_UButton_Styled_SetPressMethod");
static_assert(offsetof(VALUI_UButton_Styled_SetPressMethod, InPressMethod) == 0x000000, "Member 'VALUI_UButton_Styled_SetPressMethod::InPressMethod' has a wrong offset!");

// Function ValeriaUI.VALUI_UButton_Styled.SetTouchMethod
// 0x0001 (0x0001 - 0x0000)
struct VALUI_UButton_Styled_SetTouchMethod final
{
public:
	EButtonTouchMethod                            InTouchMethod;                                     // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(VALUI_UButton_Styled_SetTouchMethod) == 0x000001, "Wrong alignment on VALUI_UButton_Styled_SetTouchMethod");
static_assert(sizeof(VALUI_UButton_Styled_SetTouchMethod) == 0x000001, "Wrong size on VALUI_UButton_Styled_SetTouchMethod");
static_assert(offsetof(VALUI_UButton_Styled_SetTouchMethod, InTouchMethod) == 0x000000, "Member 'VALUI_UButton_Styled_SetTouchMethod::InTouchMethod' has a wrong offset!");

// Function ValeriaUI.VALUI_WidgetBlueprintLibrary.CaptureMouseWithHighPrecision
// 0x0178 (0x0178 - 0x0000)
struct VALUI_WidgetBlueprintLibrary_CaptureMouseWithHighPrecision final
{
public:
	struct FEventReply                            Reply;                                             // 0x0000(0x00B8)(Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	class UWidget*                                CapturingWidget;                                   // 0x00B8(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FEventReply                            ReturnValue;                                       // 0x00C0(0x00B8)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(VALUI_WidgetBlueprintLibrary_CaptureMouseWithHighPrecision) == 0x000008, "Wrong alignment on VALUI_WidgetBlueprintLibrary_CaptureMouseWithHighPrecision");
static_assert(sizeof(VALUI_WidgetBlueprintLibrary_CaptureMouseWithHighPrecision) == 0x000178, "Wrong size on VALUI_WidgetBlueprintLibrary_CaptureMouseWithHighPrecision");
static_assert(offsetof(VALUI_WidgetBlueprintLibrary_CaptureMouseWithHighPrecision, Reply) == 0x000000, "Member 'VALUI_WidgetBlueprintLibrary_CaptureMouseWithHighPrecision::Reply' has a wrong offset!");
static_assert(offsetof(VALUI_WidgetBlueprintLibrary_CaptureMouseWithHighPrecision, CapturingWidget) == 0x0000B8, "Member 'VALUI_WidgetBlueprintLibrary_CaptureMouseWithHighPrecision::CapturingWidget' has a wrong offset!");
static_assert(offsetof(VALUI_WidgetBlueprintLibrary_CaptureMouseWithHighPrecision, ReturnValue) == 0x0000C0, "Member 'VALUI_WidgetBlueprintLibrary_CaptureMouseWithHighPrecision::ReturnValue' has a wrong offset!");

// Function ValeriaUI.VALUI_WidgetBlueprintLibrary.ColorToHexString
// 0x0020 (0x0020 - 0x0000)
struct VALUI_WidgetBlueprintLibrary_ColorToHexString final
{
public:
	struct FLinearColor                           Color;                                             // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 ReturnValue;                                       // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(VALUI_WidgetBlueprintLibrary_ColorToHexString) == 0x000008, "Wrong alignment on VALUI_WidgetBlueprintLibrary_ColorToHexString");
static_assert(sizeof(VALUI_WidgetBlueprintLibrary_ColorToHexString) == 0x000020, "Wrong size on VALUI_WidgetBlueprintLibrary_ColorToHexString");
static_assert(offsetof(VALUI_WidgetBlueprintLibrary_ColorToHexString, Color) == 0x000000, "Member 'VALUI_WidgetBlueprintLibrary_ColorToHexString::Color' has a wrong offset!");
static_assert(offsetof(VALUI_WidgetBlueprintLibrary_ColorToHexString, ReturnValue) == 0x000010, "Member 'VALUI_WidgetBlueprintLibrary_ColorToHexString::ReturnValue' has a wrong offset!");

// Function ValeriaUI.VALUI_WidgetBlueprintLibrary.FindOuterMostWidget
// 0x0010 (0x0010 - 0x0000)
struct VALUI_WidgetBlueprintLibrary_FindOuterMostWidget final
{
public:
	class UWidget*                                BaseWidget;                                        // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWidget*                                ReturnValue;                                       // 0x0008(0x0008)(ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(VALUI_WidgetBlueprintLibrary_FindOuterMostWidget) == 0x000008, "Wrong alignment on VALUI_WidgetBlueprintLibrary_FindOuterMostWidget");
static_assert(sizeof(VALUI_WidgetBlueprintLibrary_FindOuterMostWidget) == 0x000010, "Wrong size on VALUI_WidgetBlueprintLibrary_FindOuterMostWidget");
static_assert(offsetof(VALUI_WidgetBlueprintLibrary_FindOuterMostWidget, BaseWidget) == 0x000000, "Member 'VALUI_WidgetBlueprintLibrary_FindOuterMostWidget::BaseWidget' has a wrong offset!");
static_assert(offsetof(VALUI_WidgetBlueprintLibrary_FindOuterMostWidget, ReturnValue) == 0x000008, "Member 'VALUI_WidgetBlueprintLibrary_FindOuterMostWidget::ReturnValue' has a wrong offset!");

// Function ValeriaUI.VALUI_WidgetBlueprintLibrary.GetOuterForConstructingNativeWidget
// 0x0010 (0x0010 - 0x0000)
struct VALUI_WidgetBlueprintLibrary_GetOuterForConstructingNativeWidget final
{
public:
	class UUserWidget*                            HostUserWidget;                                    // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(VALUI_WidgetBlueprintLibrary_GetOuterForConstructingNativeWidget) == 0x000008, "Wrong alignment on VALUI_WidgetBlueprintLibrary_GetOuterForConstructingNativeWidget");
static_assert(sizeof(VALUI_WidgetBlueprintLibrary_GetOuterForConstructingNativeWidget) == 0x000010, "Wrong size on VALUI_WidgetBlueprintLibrary_GetOuterForConstructingNativeWidget");
static_assert(offsetof(VALUI_WidgetBlueprintLibrary_GetOuterForConstructingNativeWidget, HostUserWidget) == 0x000000, "Member 'VALUI_WidgetBlueprintLibrary_GetOuterForConstructingNativeWidget::HostUserWidget' has a wrong offset!");
static_assert(offsetof(VALUI_WidgetBlueprintLibrary_GetOuterForConstructingNativeWidget, ReturnValue) == 0x000008, "Member 'VALUI_WidgetBlueprintLibrary_GetOuterForConstructingNativeWidget::ReturnValue' has a wrong offset!");

// Function ValeriaUI.VALUI_WidgetBlueprintLibrary.UpdateEntryWidgetTypeOnListView
// 0x0010 (0x0010 - 0x0000)
struct VALUI_WidgetBlueprintLibrary_UpdateEntryWidgetTypeOnListView final
{
public:
	class UListViewBase*                          ListView;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UUserWidget>                EntryWidgetType;                                   // 0x0008(0x0008)(Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(VALUI_WidgetBlueprintLibrary_UpdateEntryWidgetTypeOnListView) == 0x000008, "Wrong alignment on VALUI_WidgetBlueprintLibrary_UpdateEntryWidgetTypeOnListView");
static_assert(sizeof(VALUI_WidgetBlueprintLibrary_UpdateEntryWidgetTypeOnListView) == 0x000010, "Wrong size on VALUI_WidgetBlueprintLibrary_UpdateEntryWidgetTypeOnListView");
static_assert(offsetof(VALUI_WidgetBlueprintLibrary_UpdateEntryWidgetTypeOnListView, ListView) == 0x000000, "Member 'VALUI_WidgetBlueprintLibrary_UpdateEntryWidgetTypeOnListView::ListView' has a wrong offset!");
static_assert(offsetof(VALUI_WidgetBlueprintLibrary_UpdateEntryWidgetTypeOnListView, EntryWidgetType) == 0x000008, "Member 'VALUI_WidgetBlueprintLibrary_UpdateEntryWidgetTypeOnListView::EntryWidgetType' has a wrong offset!");

// Function ValeriaUI.VAL_PlatformInvitationManager.OnLoginFailure
// 0x0018 (0x0018 - 0x0000)
struct VAL_PlatformInvitationManager_OnLoginFailure final
{
public:
	class FString                                 ErrorMessage;                                      // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ErrorCode;                                         // 0x0010(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2D7D[0x4];                                     // 0x0014(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(VAL_PlatformInvitationManager_OnLoginFailure) == 0x000008, "Wrong alignment on VAL_PlatformInvitationManager_OnLoginFailure");
static_assert(sizeof(VAL_PlatformInvitationManager_OnLoginFailure) == 0x000018, "Wrong size on VAL_PlatformInvitationManager_OnLoginFailure");
static_assert(offsetof(VAL_PlatformInvitationManager_OnLoginFailure, ErrorMessage) == 0x000000, "Member 'VAL_PlatformInvitationManager_OnLoginFailure::ErrorMessage' has a wrong offset!");
static_assert(offsetof(VAL_PlatformInvitationManager_OnLoginFailure, ErrorCode) == 0x000010, "Member 'VAL_PlatformInvitationManager_OnLoginFailure::ErrorCode' has a wrong offset!");

// DelegateFunction ValeriaUI.VAL_PlatformInvitationManager.PlatformInvitedFailed_FTUEInProgress__DelegateSignature
// 0x0018 (0x0018 - 0x0000)
struct VAL_PlatformInvitationManager_PlatformInvitedFailed_FTUEInProgress__DelegateSignature final
{
public:
	class FText                                   ErrorMessage;                                      // 0x0000(0x0018)(Parm, NativeAccessSpecifierPublic)
};
static_assert(alignof(VAL_PlatformInvitationManager_PlatformInvitedFailed_FTUEInProgress__DelegateSignature) == 0x000008, "Wrong alignment on VAL_PlatformInvitationManager_PlatformInvitedFailed_FTUEInProgress__DelegateSignature");
static_assert(sizeof(VAL_PlatformInvitationManager_PlatformInvitedFailed_FTUEInProgress__DelegateSignature) == 0x000018, "Wrong size on VAL_PlatformInvitationManager_PlatformInvitedFailed_FTUEInProgress__DelegateSignature");
static_assert(offsetof(VAL_PlatformInvitationManager_PlatformInvitedFailed_FTUEInProgress__DelegateSignature, ErrorMessage) == 0x000000, "Member 'VAL_PlatformInvitationManager_PlatformInvitedFailed_FTUEInProgress__DelegateSignature::ErrorMessage' has a wrong offset!");

}

