#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Comp_Audio_Pool_Manager

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "Palia_classes.hpp"
#include "S6Core_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass Comp_Audio_Pool_Manager.Comp_Audio_Pool_Manager_C
// 0x0228 (0x02C8 - 0x00A0)
class UComp_Audio_Pool_Manager_C final : public UAudioFoliageManagerComponent
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x00A0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	bool                                          ShowDebug;                                         // 0x00A8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_45F8[0x7];                                     // 0x00A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Tick_Interval;                                     // 0x00B0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         WindPoolSize;                                      // 0x00B8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         InsectPoolSize;                                    // 0x00BC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         OneShotObjectPoolSize;                             // 0x00C0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         OneShotObjectsPerFoliage;                          // 0x00C4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        InitialStartDelayMin;                              // 0x00C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        InitialStartDelayMax;                              // 0x00D0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        MinRetriggerTime;                                  // 0x00D8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        MaxRetriggerTime;                                  // 0x00E0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TSet<class ABP_AudioPool_StaticLoop_C*>       StaticLoopAkObjects;                               // 0x00E8(0x0050)(Edit, BlueprintVisible, DisableEditOnTemplate, Transient, DisableEditOnInstance)
	TSet<class ABP_AudioPool_StaticLoop_C*>       AvailableStaticLoopObj;                            // 0x0138(0x0050)(Edit, BlueprintVisible, DisableEditOnTemplate, Transient, DisableEditOnInstance)
	TSet<class ABP_AudioPool_RandomLoop_C*>       RandomLoopAkObjects;                               // 0x0188(0x0050)(Edit, BlueprintVisible, DisableEditOnTemplate, Transient, DisableEditOnInstance)
	TSet<class ABP_AudioPool_OneShot_C*>          OneShotAkObjects;                                  // 0x01D8(0x0050)(Edit, BlueprintVisible, DisableEditOnTemplate, Transient, DisableEditOnInstance)
	class APawn*                                  PlayerCharacter;                                   // 0x0228(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	struct FVector                                CachedListenerLocation;                            // 0x0230(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TSet<class ABP_Env_Audio_Pool_Base_C*>        PoolObjectsInRange;                                // 0x0248(0x0050)(Edit, BlueprintVisible, DisableEditOnTemplate, Transient, DisableEditOnInstance)
	TArray<class ABP_Env_Audio_Pool_Base_C*>      ClosestPoolObjects;                                // 0x0298(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate, Transient, DisableEditOnInstance)
	bool                                          Initialized;                                       // 0x02A8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_45F9[0x3];                                     // 0x02A9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         OneShotPoolSizeLowSpec;                            // 0x02AC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         WindPoolSizeLowSpec;                               // 0x02B0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         InsectPoolSizeLowSpec;                             // 0x02B4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         SortedArray;                                       // 0x02B8(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate, DisableEditOnInstance)

public:
	void AudioDebugFoliage(bool On);
	void DrawDebugText();
	void ExecuteUbergraph_Comp_Audio_Pool_Manager(int32 EntryPoint, TArray<class AActor*>& Temp_object_Variable, class ABP_AudioPool_StaticLoop_C* CallFunc_GetAvailableStaticLoopEmitter_Output, bool CallFunc_GetAvailableStaticLoopEmitter_Available, int32 Temp_int_Loop_Counter_Variable, int32 CallFunc_Add_IntInt_ReturnValue, TArray<class ABP_Env_Audio_Pool_Base_C*>& CallFunc_GetClosestStaticLoopObjects_ClosestStaticLoopObjects, int32 CallFunc_Array_Length_ReturnValue, bool CallFunc_Set_Remove_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue, int32 Temp_int_Variable, int32 CallFunc_Add_IntInt_ReturnValue_1, TArray<class ABP_Env_Audio_Pool_Base_C*>& CallFunc_GetClosestObjects_ClosestFoliage, const struct FTransform& CallFunc_MakeTransform_ReturnValue, const struct FVector& CallFunc_GetValeriaAudioListenerPosition_OutLocation, const struct FVector& CallFunc_GetValeriaAudioListenerPosition_OutFrontDir, const struct FVector& CallFunc_GetValeriaAudioListenerPosition_OutRightDir, TArray<EObjectTypeQuery>& K2Node_MakeArray_Array, int32 Temp_int_Array_Index_Variable, TArray<class AActor*>& CallFunc_SphereOverlapActors_OutActors, bool CallFunc_SphereOverlapActors_ReturnValue, class AActor* CallFunc_Array_Get_Item, int32 CallFunc_Array_Length_ReturnValue_1, class ABP_Env_Audio_Pool_Base_C* K2Node_DynamicCast_AsBP_Env_Audio_Pool_Base, bool K2Node_DynamicCast_bSuccess, int32 Temp_int_Loop_Counter_Variable_1, int32 CallFunc_Add_IntInt_ReturnValue_2, int32 Temp_int_Array_Index_Variable_1, int32 Temp_int_Variable_1, int32 CallFunc_Add_IntInt_ReturnValue_3, int32 Temp_int_Loop_Counter_Variable_2, int32 CallFunc_Add_IntInt_ReturnValue_4, int32 Temp_int_Array_Index_Variable_2, float K2Node_Event_DeltaSeconds, class AActor* CallFunc_GetOwner_ReturnValue, class APawn* K2Node_DynamicCast_AsPawn, bool K2Node_DynamicCast_bSuccess_1, bool CallFunc_IsLocallyControlled_ReturnValue, ERedirectsPlatform Temp_byte_Variable, class AActor* CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue, class ABP_AudioPool_OneShot_C* CallFunc_FinishSpawningActor_ReturnValue, bool CallFunc_IsServer_ReturnValue, bool CallFunc_Not_PreBool_ReturnValue, bool CallFunc_BooleanAND_ReturnValue, int32 Temp_int_Variable_2, int32 CallFunc_Multiply_IntInt_ReturnValue, int32 CallFunc_Add_IntInt_ReturnValue_5, ERedirectsPlatform Temp_byte_Variable_1, ERedirectsPlatform Temp_byte_Variable_2, int32 Temp_int_Loop_Counter_Variable_3, bool CallFunc_Less_IntInt_ReturnValue_1, int32 CallFunc_Add_IntInt_ReturnValue_6, const struct FTransform& CallFunc_MakeTransform_ReturnValue_1, TDelegate<void(class ABP_AudioPool_StaticLoop_C* PoolObject)> K2Node_CreateDelegate_OutputDelegate, class AActor* CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_1, class ABP_AudioPool_RandomLoop_C* CallFunc_FinishSpawningActor_ReturnValue_1, int32 Temp_int_Array_Index_Variable_3, class ABP_Env_Audio_Pool_Base_C* CallFunc_Array_Get_Item_1, bool CallFunc_IsValid_ReturnValue, ERedirectsPlatform CallFunc_GetPlatformType_ReturnValue, ERedirectsPlatform CallFunc_GetPlatformType_ReturnValue_1, int32 K2Node_Select_Default, int32 CallFunc_Subtract_IntInt_ReturnValue, bool CallFunc_LessEqual_IntInt_ReturnValue, int32 K2Node_Select_Default_1, bool CallFunc_LessEqual_IntInt_ReturnValue_1, ERedirectsPlatform CallFunc_GetPlatformType_ReturnValue_2, const class FString& CallFunc_Conv_IntToString_ReturnValue, int32 K2Node_Select_Default_2, const struct FTransform& CallFunc_MakeTransform_ReturnValue_2, bool CallFunc_LessEqual_IntInt_ReturnValue_2, class AActor* CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_2, class ABP_AudioPool_StaticLoop_C* CallFunc_FinishSpawningActor_ReturnValue_2, int32 CallFunc_Set_Length_ReturnValue, const class FString& CallFunc_Conv_IntToString_ReturnValue_1, TArray<class ABP_Env_Audio_Pool_Base_C*>& CallFunc_Set_ToArray_Result, class ABP_Env_Audio_Pool_Base_C* CallFunc_Array_Get_Item_2, int32 CallFunc_Set_Length_ReturnValue_1, const struct FVector& CallFunc_K2_GetActorLocation_ReturnValue, const class FString& CallFunc_Conv_IntToString_ReturnValue_2, bool CallFunc_IsValid_ReturnValue_1, const class FString& CallFunc_Concat_StrStr_ReturnValue, const class FString& CallFunc_Concat_StrStr_ReturnValue_1, int32 CallFunc_Array_Length_ReturnValue_2, const class FString& CallFunc_Concat_StrStr_ReturnValue_2, bool CallFunc_Less_IntInt_ReturnValue_2, const class FString& CallFunc_Concat_StrStr_ReturnValue_3, const class FString& CallFunc_Concat_StrStr_ReturnValue_4, const class FString& CallFunc_Concat_StrStr_ReturnValue_5, TArray<class ABP_AudioPool_RandomLoop_C*>& CallFunc_Set_ToArray_Result_1, const class FString& CallFunc_Concat_StrStr_ReturnValue_6, class ABP_AudioPool_RandomLoop_C* CallFunc_Array_Get_Item_3, int32 CallFunc_Array_Length_ReturnValue_3, const struct FVector& CallFunc_K2_GetActorLocation_ReturnValue_1, bool CallFunc_Less_IntInt_ReturnValue_3, bool CallFunc_IsValid_ReturnValue_2, bool K2Node_CustomEvent_On, double CallFunc_SelectFloat_ReturnValue, const struct FTimerHandle& CallFunc_K2_SetTimer_ReturnValue, const struct FVector& CallFunc_K2_GetActorLocation_ReturnValue_2, float CallFunc_SetComponentTickInterval_TickInterval_ImplicitCast, float CallFunc_DrawDebugSphere_Duration_ImplicitCast, float CallFunc_K2_SetTimer_Time_ImplicitCast, float CallFunc_DrawDebugSphere_Duration_ImplicitCast_1);
	void GetAvailableInsectEmitter(class ABP_AudioPool_RandomLoop_C** Emitter, bool* Found, const TMap<struct FVector, class UObject*>& InsectLocations, bool EmitterFound, class ABP_AudioPool_RandomLoop_C* EmitterLocal, bool Temp_bool_True_if_break_was_hit_Variable, int32 Temp_int_Array_Index_Variable, bool CallFunc_Not_PreBool_ReturnValue, int32 Temp_int_Loop_Counter_Variable, int32 CallFunc_Add_IntInt_ReturnValue, TArray<class ABP_AudioPool_RandomLoop_C*>& CallFunc_Set_ToArray_Result, TArray<class ABP_AudioPool_RandomLoop_C*>& CallFunc_Set_ToArray_Result_1, TArray<class AActor*>& CallFunc_SortActorsByClosest_ReturnValue, class ABP_AudioPool_RandomLoop_C* CallFunc_Array_Get_Item, int32 CallFunc_Array_LastIndex_ReturnValue, class AActor* CallFunc_Array_Get_Item_1, class ABP_AudioPool_RandomLoop_C* K2Node_DynamicCast_AsBP_Audio_Pool_Random_Loop, bool K2Node_DynamicCast_bSuccess, int32 CallFunc_Array_Length_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue, bool CallFunc_BooleanAND_ReturnValue);
	void GetAvailableStaticLoopEmitter(class ABP_AudioPool_StaticLoop_C** Output, bool* Available, bool Break, class ABP_AudioPool_StaticLoop_C* FoliageActor, double LDistance, int32 Temp_int_Array_Index_Variable, bool CallFunc_Greater_DoubleDouble_ReturnValue, TArray<class ABP_AudioPool_StaticLoop_C*>& CallFunc_Set_ToArray_Result, class ABP_AudioPool_StaticLoop_C* CallFunc_Array_Get_Item, int32 CallFunc_Set_Length_ReturnValue, const struct FVector& CallFunc_GetValeriaAudioListenerPosition_OutLocation, const struct FVector& CallFunc_GetValeriaAudioListenerPosition_OutFrontDir, const struct FVector& CallFunc_GetValeriaAudioListenerPosition_OutRightDir, bool CallFunc_Greater_IntInt_ReturnValue, int32 Temp_int_Loop_Counter_Variable, int32 CallFunc_Add_IntInt_ReturnValue, bool CallFunc_IsValid_ReturnValue, TArray<class ABP_AudioPool_StaticLoop_C*>& CallFunc_Set_ToArray_Result_1, int32 CallFunc_Array_Length_ReturnValue, class ABP_AudioPool_StaticLoop_C* CallFunc_Array_Get_Item_1, bool CallFunc_Less_IntInt_ReturnValue, float CallFunc_GetMaxAttenuationRadius_ReturnValue, const struct FVector& CallFunc_K2_GetActorLocation_ReturnValue, double CallFunc_Vector_Distance_ReturnValue, double CallFunc_SafeDivide_ReturnValue, bool CallFunc_Greater_DoubleDouble_ReturnValue_1, double CallFunc_SafeDivide_B_ImplicitCast);
	void GetClosestInsectObjects(TArray<class ABP_Env_Audio_Pool_Base_C*>* ClosestInsectObjects, const TArray<class ABP_Env_Audio_Pool_Base_C*>& LClosestInsectObjects, bool Temp_bool_True_if_break_was_hit_Variable, int32 Temp_int_Array_Index_Variable, bool CallFunc_Not_PreBool_ReturnValue, int32 Temp_int_Loop_Counter_Variable, int32 CallFunc_Add_IntInt_ReturnValue, int32 CallFunc_Array_Length_ReturnValue, class ABP_Env_Audio_Pool_Base_C* CallFunc_Array_Get_Item, bool CallFunc_Less_IntInt_ReturnValue, int32 CallFunc_Array_Add_ReturnValue, bool CallFunc_BooleanAND_ReturnValue, int32 CallFunc_Add_IntInt_ReturnValue_1, bool CallFunc_GreaterEqual_IntInt_ReturnValue);
	void GetClosestObjects(TArray<class ABP_Env_Audio_Pool_Base_C*>* ClosestFoliage, const TArray<class ABP_Env_Audio_Pool_Base_C*>& SortedObjectsNear, const TSet<class ABP_Env_Audio_Pool_Base_C*>& LocalAllObjectsNear, const TArray<struct FVector>& Closest, TArray<class ABP_Env_Audio_Pool_Base_C*>& CallFunc_Set_ToArray_Result, int32 Temp_int_Array_Index_Variable, int32 Temp_int_Loop_Counter_Variable, int32 CallFunc_Add_IntInt_ReturnValue, class AActor* CallFunc_Array_Get_Item, class ABP_Env_Audio_Pool_Base_C* K2Node_DynamicCast_AsBP_Env_Audio_Pool_Base, bool K2Node_DynamicCast_bSuccess, int32 CallFunc_Array_Length_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue, int32 CallFunc_Array_Add_ReturnValue, const struct FVector& CallFunc_GetValeriaAudioListenerPosition_OutLocation, const struct FVector& CallFunc_GetValeriaAudioListenerPosition_OutFrontDir, const struct FVector& CallFunc_GetValeriaAudioListenerPosition_OutRightDir, TArray<class AActor*>& CallFunc_SortActorsByClosest_ReturnValue);
	void GetClosestStaticLoopObjects(TArray<class ABP_Env_Audio_Pool_Base_C*>* ClosestStaticLoopObjects, const TArray<class ABP_Env_Audio_Pool_Base_C*>& LClosestWindObjects, int32 CallFunc_Array_Length_ReturnValue, int32 Temp_int_Variable, class ABP_Env_Audio_Pool_Base_C* CallFunc_Array_Get_Item, int32 CallFunc_Add_IntInt_ReturnValue, int32 CallFunc_Array_Add_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue, int32 CallFunc_SelectInt_ReturnValue, int32 CallFunc_Subtract_IntInt_ReturnValue, bool CallFunc_LessEqual_IntInt_ReturnValue);
	void GetCritterValidFoliage(TArray<class ABP_Env_Audio_Pool_Base_C*>* CritterValidFoliage, const TArray<class ABP_Env_Audio_Pool_Base_C*>& LocalCritterValidFoliage, int32 Temp_int_Array_Index_Variable, int32 Temp_int_Loop_Counter_Variable, int32 CallFunc_Add_IntInt_ReturnValue, TArray<class ABP_Env_Audio_Pool_Base_C*>& CallFunc_Set_ToArray_Result, int32 CallFunc_Array_Length_ReturnValue, class ABP_Env_Audio_Pool_Base_C* CallFunc_Array_Get_Item, bool CallFunc_Less_IntInt_ReturnValue, int32 CallFunc_Array_Add_ReturnValue, bool CallFunc_IsValid_ReturnValue, bool CallFunc_IsValid_ReturnValue_1);
	void OnPossessionChanged();
	void ReceiveBeginPlay();
	void ReceiveTick(float DeltaSeconds);
	void StaticLoopStopped(class ABP_AudioPool_StaticLoop_C* PoolObject);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"Comp_Audio_Pool_Manager_C">();
	}
	static class UComp_Audio_Pool_Manager_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UComp_Audio_Pool_Manager_C>();
	}
};
static_assert(alignof(UComp_Audio_Pool_Manager_C) == 0x000008, "Wrong alignment on UComp_Audio_Pool_Manager_C");
static_assert(sizeof(UComp_Audio_Pool_Manager_C) == 0x0002C8, "Wrong size on UComp_Audio_Pool_Manager_C");
static_assert(offsetof(UComp_Audio_Pool_Manager_C, UberGraphFrame) == 0x0000A0, "Member 'UComp_Audio_Pool_Manager_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UComp_Audio_Pool_Manager_C, ShowDebug) == 0x0000A8, "Member 'UComp_Audio_Pool_Manager_C::ShowDebug' has a wrong offset!");
static_assert(offsetof(UComp_Audio_Pool_Manager_C, Tick_Interval) == 0x0000B0, "Member 'UComp_Audio_Pool_Manager_C::Tick_Interval' has a wrong offset!");
static_assert(offsetof(UComp_Audio_Pool_Manager_C, WindPoolSize) == 0x0000B8, "Member 'UComp_Audio_Pool_Manager_C::WindPoolSize' has a wrong offset!");
static_assert(offsetof(UComp_Audio_Pool_Manager_C, InsectPoolSize) == 0x0000BC, "Member 'UComp_Audio_Pool_Manager_C::InsectPoolSize' has a wrong offset!");
static_assert(offsetof(UComp_Audio_Pool_Manager_C, OneShotObjectPoolSize) == 0x0000C0, "Member 'UComp_Audio_Pool_Manager_C::OneShotObjectPoolSize' has a wrong offset!");
static_assert(offsetof(UComp_Audio_Pool_Manager_C, OneShotObjectsPerFoliage) == 0x0000C4, "Member 'UComp_Audio_Pool_Manager_C::OneShotObjectsPerFoliage' has a wrong offset!");
static_assert(offsetof(UComp_Audio_Pool_Manager_C, InitialStartDelayMin) == 0x0000C8, "Member 'UComp_Audio_Pool_Manager_C::InitialStartDelayMin' has a wrong offset!");
static_assert(offsetof(UComp_Audio_Pool_Manager_C, InitialStartDelayMax) == 0x0000D0, "Member 'UComp_Audio_Pool_Manager_C::InitialStartDelayMax' has a wrong offset!");
static_assert(offsetof(UComp_Audio_Pool_Manager_C, MinRetriggerTime) == 0x0000D8, "Member 'UComp_Audio_Pool_Manager_C::MinRetriggerTime' has a wrong offset!");
static_assert(offsetof(UComp_Audio_Pool_Manager_C, MaxRetriggerTime) == 0x0000E0, "Member 'UComp_Audio_Pool_Manager_C::MaxRetriggerTime' has a wrong offset!");
static_assert(offsetof(UComp_Audio_Pool_Manager_C, StaticLoopAkObjects) == 0x0000E8, "Member 'UComp_Audio_Pool_Manager_C::StaticLoopAkObjects' has a wrong offset!");
static_assert(offsetof(UComp_Audio_Pool_Manager_C, AvailableStaticLoopObj) == 0x000138, "Member 'UComp_Audio_Pool_Manager_C::AvailableStaticLoopObj' has a wrong offset!");
static_assert(offsetof(UComp_Audio_Pool_Manager_C, RandomLoopAkObjects) == 0x000188, "Member 'UComp_Audio_Pool_Manager_C::RandomLoopAkObjects' has a wrong offset!");
static_assert(offsetof(UComp_Audio_Pool_Manager_C, OneShotAkObjects) == 0x0001D8, "Member 'UComp_Audio_Pool_Manager_C::OneShotAkObjects' has a wrong offset!");
static_assert(offsetof(UComp_Audio_Pool_Manager_C, PlayerCharacter) == 0x000228, "Member 'UComp_Audio_Pool_Manager_C::PlayerCharacter' has a wrong offset!");
static_assert(offsetof(UComp_Audio_Pool_Manager_C, CachedListenerLocation) == 0x000230, "Member 'UComp_Audio_Pool_Manager_C::CachedListenerLocation' has a wrong offset!");
static_assert(offsetof(UComp_Audio_Pool_Manager_C, PoolObjectsInRange) == 0x000248, "Member 'UComp_Audio_Pool_Manager_C::PoolObjectsInRange' has a wrong offset!");
static_assert(offsetof(UComp_Audio_Pool_Manager_C, ClosestPoolObjects) == 0x000298, "Member 'UComp_Audio_Pool_Manager_C::ClosestPoolObjects' has a wrong offset!");
static_assert(offsetof(UComp_Audio_Pool_Manager_C, Initialized) == 0x0002A8, "Member 'UComp_Audio_Pool_Manager_C::Initialized' has a wrong offset!");
static_assert(offsetof(UComp_Audio_Pool_Manager_C, OneShotPoolSizeLowSpec) == 0x0002AC, "Member 'UComp_Audio_Pool_Manager_C::OneShotPoolSizeLowSpec' has a wrong offset!");
static_assert(offsetof(UComp_Audio_Pool_Manager_C, WindPoolSizeLowSpec) == 0x0002B0, "Member 'UComp_Audio_Pool_Manager_C::WindPoolSizeLowSpec' has a wrong offset!");
static_assert(offsetof(UComp_Audio_Pool_Manager_C, InsectPoolSizeLowSpec) == 0x0002B4, "Member 'UComp_Audio_Pool_Manager_C::InsectPoolSizeLowSpec' has a wrong offset!");
static_assert(offsetof(UComp_Audio_Pool_Manager_C, SortedArray) == 0x0002B8, "Member 'UComp_Audio_Pool_Manager_C::SortedArray' has a wrong offset!");

}

