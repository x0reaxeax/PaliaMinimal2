#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_InventorySlot_CM

#include "Basic.hpp"

#include "Palia_structs.hpp"
#include "UMG_structs.hpp"
#include "S6Core_structs.hpp"
#include "GameplayTags_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "SlateCore_structs.hpp"


namespace SDK::Params
{

// Function WBP_InventorySlot_CM.WBP_InventorySlot_CM_C.OnLeftClicked__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct WBP_InventorySlot_CM_C_OnLeftClicked__DelegateSignature final
{
public:
	class UWBP_InventorySlot_CM_C*                Param_Slot;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_InventorySlot_CM_C_OnLeftClicked__DelegateSignature) == 0x000008, "Wrong alignment on WBP_InventorySlot_CM_C_OnLeftClicked__DelegateSignature");
static_assert(sizeof(WBP_InventorySlot_CM_C_OnLeftClicked__DelegateSignature) == 0x000008, "Wrong size on WBP_InventorySlot_CM_C_OnLeftClicked__DelegateSignature");
static_assert(offsetof(WBP_InventorySlot_CM_C_OnLeftClicked__DelegateSignature, Param_Slot) == 0x000000, "Member 'WBP_InventorySlot_CM_C_OnLeftClicked__DelegateSignature::Param_Slot' has a wrong offset!");

// Function WBP_InventorySlot_CM.WBP_InventorySlot_CM_C.OnRightClicked__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct WBP_InventorySlot_CM_C_OnRightClicked__DelegateSignature final
{
public:
	class UWBP_InventorySlot_CM_C*                Param_Slot;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_InventorySlot_CM_C_OnRightClicked__DelegateSignature) == 0x000008, "Wrong alignment on WBP_InventorySlot_CM_C_OnRightClicked__DelegateSignature");
static_assert(sizeof(WBP_InventorySlot_CM_C_OnRightClicked__DelegateSignature) == 0x000008, "Wrong size on WBP_InventorySlot_CM_C_OnRightClicked__DelegateSignature");
static_assert(offsetof(WBP_InventorySlot_CM_C_OnRightClicked__DelegateSignature, Param_Slot) == 0x000000, "Member 'WBP_InventorySlot_CM_C_OnRightClicked__DelegateSignature::Param_Slot' has a wrong offset!");

// Function WBP_InventorySlot_CM.WBP_InventorySlot_CM_C.OnGamepadSelect__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct WBP_InventorySlot_CM_C_OnGamepadSelect__DelegateSignature final
{
public:
	class UWBP_InventorySlot_CM_C*                Param_Slot;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_InventorySlot_CM_C_OnGamepadSelect__DelegateSignature) == 0x000008, "Wrong alignment on WBP_InventorySlot_CM_C_OnGamepadSelect__DelegateSignature");
static_assert(sizeof(WBP_InventorySlot_CM_C_OnGamepadSelect__DelegateSignature) == 0x000008, "Wrong size on WBP_InventorySlot_CM_C_OnGamepadSelect__DelegateSignature");
static_assert(offsetof(WBP_InventorySlot_CM_C_OnGamepadSelect__DelegateSignature, Param_Slot) == 0x000000, "Member 'WBP_InventorySlot_CM_C_OnGamepadSelect__DelegateSignature::Param_Slot' has a wrong offset!");

// Function WBP_InventorySlot_CM.WBP_InventorySlot_CM_C.OnGamepadCancel__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct WBP_InventorySlot_CM_C_OnGamepadCancel__DelegateSignature final
{
public:
	class UWBP_InventorySlot_CM_C*                Param_Slot;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_InventorySlot_CM_C_OnGamepadCancel__DelegateSignature) == 0x000008, "Wrong alignment on WBP_InventorySlot_CM_C_OnGamepadCancel__DelegateSignature");
static_assert(sizeof(WBP_InventorySlot_CM_C_OnGamepadCancel__DelegateSignature) == 0x000008, "Wrong size on WBP_InventorySlot_CM_C_OnGamepadCancel__DelegateSignature");
static_assert(offsetof(WBP_InventorySlot_CM_C_OnGamepadCancel__DelegateSignature, Param_Slot) == 0x000000, "Member 'WBP_InventorySlot_CM_C_OnGamepadCancel__DelegateSignature::Param_Slot' has a wrong offset!");

// Function WBP_InventorySlot_CM.WBP_InventorySlot_CM_C.OnOpenActionMenu__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct WBP_InventorySlot_CM_C_OnOpenActionMenu__DelegateSignature final
{
public:
	class UWBP_InventorySlot_CM_C*                Param_Slot;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_InventorySlot_CM_C_OnOpenActionMenu__DelegateSignature) == 0x000008, "Wrong alignment on WBP_InventorySlot_CM_C_OnOpenActionMenu__DelegateSignature");
static_assert(sizeof(WBP_InventorySlot_CM_C_OnOpenActionMenu__DelegateSignature) == 0x000008, "Wrong size on WBP_InventorySlot_CM_C_OnOpenActionMenu__DelegateSignature");
static_assert(offsetof(WBP_InventorySlot_CM_C_OnOpenActionMenu__DelegateSignature, Param_Slot) == 0x000000, "Member 'WBP_InventorySlot_CM_C_OnOpenActionMenu__DelegateSignature::Param_Slot' has a wrong offset!");

// Function WBP_InventorySlot_CM.WBP_InventorySlot_CM_C.OnSlotFocused__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct WBP_InventorySlot_CM_C_OnSlotFocused__DelegateSignature final
{
public:
	class UWidget*                                Param_Slot;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_InventorySlot_CM_C_OnSlotFocused__DelegateSignature) == 0x000008, "Wrong alignment on WBP_InventorySlot_CM_C_OnSlotFocused__DelegateSignature");
static_assert(sizeof(WBP_InventorySlot_CM_C_OnSlotFocused__DelegateSignature) == 0x000008, "Wrong size on WBP_InventorySlot_CM_C_OnSlotFocused__DelegateSignature");
static_assert(offsetof(WBP_InventorySlot_CM_C_OnSlotFocused__DelegateSignature, Param_Slot) == 0x000000, "Member 'WBP_InventorySlot_CM_C_OnSlotFocused__DelegateSignature::Param_Slot' has a wrong offset!");

// Function WBP_InventorySlot_CM.WBP_InventorySlot_CM_C.BndEvt__WBP_InventorySlot_CM_WBP_ItemSlot_CM_K2Node_ComponentBoundEvent_10_OnHovered__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct WBP_InventorySlot_CM_C_BndEvt__WBP_InventorySlot_CM_WBP_ItemSlot_CM_K2Node_ComponentBoundEvent_10_OnHovered__DelegateSignature final
{
public:
	class UWBP_ItemSlot_CM_C*                     Param_Slot;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_InventorySlot_CM_C_BndEvt__WBP_InventorySlot_CM_WBP_ItemSlot_CM_K2Node_ComponentBoundEvent_10_OnHovered__DelegateSignature) == 0x000008, "Wrong alignment on WBP_InventorySlot_CM_C_BndEvt__WBP_InventorySlot_CM_WBP_ItemSlot_CM_K2Node_ComponentBoundEvent_10_OnHovered__DelegateSignature");
static_assert(sizeof(WBP_InventorySlot_CM_C_BndEvt__WBP_InventorySlot_CM_WBP_ItemSlot_CM_K2Node_ComponentBoundEvent_10_OnHovered__DelegateSignature) == 0x000008, "Wrong size on WBP_InventorySlot_CM_C_BndEvt__WBP_InventorySlot_CM_WBP_ItemSlot_CM_K2Node_ComponentBoundEvent_10_OnHovered__DelegateSignature");
static_assert(offsetof(WBP_InventorySlot_CM_C_BndEvt__WBP_InventorySlot_CM_WBP_ItemSlot_CM_K2Node_ComponentBoundEvent_10_OnHovered__DelegateSignature, Param_Slot) == 0x000000, "Member 'WBP_InventorySlot_CM_C_BndEvt__WBP_InventorySlot_CM_WBP_ItemSlot_CM_K2Node_ComponentBoundEvent_10_OnHovered__DelegateSignature::Param_Slot' has a wrong offset!");

// Function WBP_InventorySlot_CM.WBP_InventorySlot_CM_C.BndEvt__WBP_InventorySlot_CM_WBP_ItemSlot_CM_K2Node_ComponentBoundEvent_11_OnUnhovered__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct WBP_InventorySlot_CM_C_BndEvt__WBP_InventorySlot_CM_WBP_ItemSlot_CM_K2Node_ComponentBoundEvent_11_OnUnhovered__DelegateSignature final
{
public:
	class UWBP_ItemSlot_CM_C*                     Param_Slot;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_InventorySlot_CM_C_BndEvt__WBP_InventorySlot_CM_WBP_ItemSlot_CM_K2Node_ComponentBoundEvent_11_OnUnhovered__DelegateSignature) == 0x000008, "Wrong alignment on WBP_InventorySlot_CM_C_BndEvt__WBP_InventorySlot_CM_WBP_ItemSlot_CM_K2Node_ComponentBoundEvent_11_OnUnhovered__DelegateSignature");
static_assert(sizeof(WBP_InventorySlot_CM_C_BndEvt__WBP_InventorySlot_CM_WBP_ItemSlot_CM_K2Node_ComponentBoundEvent_11_OnUnhovered__DelegateSignature) == 0x000008, "Wrong size on WBP_InventorySlot_CM_C_BndEvt__WBP_InventorySlot_CM_WBP_ItemSlot_CM_K2Node_ComponentBoundEvent_11_OnUnhovered__DelegateSignature");
static_assert(offsetof(WBP_InventorySlot_CM_C_BndEvt__WBP_InventorySlot_CM_WBP_ItemSlot_CM_K2Node_ComponentBoundEvent_11_OnUnhovered__DelegateSignature, Param_Slot) == 0x000000, "Member 'WBP_InventorySlot_CM_C_BndEvt__WBP_InventorySlot_CM_WBP_ItemSlot_CM_K2Node_ComponentBoundEvent_11_OnUnhovered__DelegateSignature::Param_Slot' has a wrong offset!");

// Function WBP_InventorySlot_CM.WBP_InventorySlot_CM_C.BndEvt__WBP_InventorySlot_CM_WBP_ItemSlot_CM_K2Node_ComponentBoundEvent_1_OnItemDropped__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct WBP_InventorySlot_CM_C_BndEvt__WBP_InventorySlot_CM_WBP_ItemSlot_CM_K2Node_ComponentBoundEvent_1_OnItemDropped__DelegateSignature final
{
public:
	class UWBP_ItemSlot_CM_C*                     Param_Slot;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UVALUI_ItemDragDrop*                    Operation;                                         // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_InventorySlot_CM_C_BndEvt__WBP_InventorySlot_CM_WBP_ItemSlot_CM_K2Node_ComponentBoundEvent_1_OnItemDropped__DelegateSignature) == 0x000008, "Wrong alignment on WBP_InventorySlot_CM_C_BndEvt__WBP_InventorySlot_CM_WBP_ItemSlot_CM_K2Node_ComponentBoundEvent_1_OnItemDropped__DelegateSignature");
static_assert(sizeof(WBP_InventorySlot_CM_C_BndEvt__WBP_InventorySlot_CM_WBP_ItemSlot_CM_K2Node_ComponentBoundEvent_1_OnItemDropped__DelegateSignature) == 0x000010, "Wrong size on WBP_InventorySlot_CM_C_BndEvt__WBP_InventorySlot_CM_WBP_ItemSlot_CM_K2Node_ComponentBoundEvent_1_OnItemDropped__DelegateSignature");
static_assert(offsetof(WBP_InventorySlot_CM_C_BndEvt__WBP_InventorySlot_CM_WBP_ItemSlot_CM_K2Node_ComponentBoundEvent_1_OnItemDropped__DelegateSignature, Param_Slot) == 0x000000, "Member 'WBP_InventorySlot_CM_C_BndEvt__WBP_InventorySlot_CM_WBP_ItemSlot_CM_K2Node_ComponentBoundEvent_1_OnItemDropped__DelegateSignature::Param_Slot' has a wrong offset!");
static_assert(offsetof(WBP_InventorySlot_CM_C_BndEvt__WBP_InventorySlot_CM_WBP_ItemSlot_CM_K2Node_ComponentBoundEvent_1_OnItemDropped__DelegateSignature, Operation) == 0x000008, "Member 'WBP_InventorySlot_CM_C_BndEvt__WBP_InventorySlot_CM_WBP_ItemSlot_CM_K2Node_ComponentBoundEvent_1_OnItemDropped__DelegateSignature::Operation' has a wrong offset!");

// Function WBP_InventorySlot_CM.WBP_InventorySlot_CM_C.BndEvt__WBP_InventorySlot_CM_WBP_ItemSlot_CM_K2Node_ComponentBoundEvent_3_OnLeftClicked__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct WBP_InventorySlot_CM_C_BndEvt__WBP_InventorySlot_CM_WBP_ItemSlot_CM_K2Node_ComponentBoundEvent_3_OnLeftClicked__DelegateSignature final
{
public:
	class UWBP_ItemSlot_CM_C*                     Param_Slot;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_InventorySlot_CM_C_BndEvt__WBP_InventorySlot_CM_WBP_ItemSlot_CM_K2Node_ComponentBoundEvent_3_OnLeftClicked__DelegateSignature) == 0x000008, "Wrong alignment on WBP_InventorySlot_CM_C_BndEvt__WBP_InventorySlot_CM_WBP_ItemSlot_CM_K2Node_ComponentBoundEvent_3_OnLeftClicked__DelegateSignature");
static_assert(sizeof(WBP_InventorySlot_CM_C_BndEvt__WBP_InventorySlot_CM_WBP_ItemSlot_CM_K2Node_ComponentBoundEvent_3_OnLeftClicked__DelegateSignature) == 0x000008, "Wrong size on WBP_InventorySlot_CM_C_BndEvt__WBP_InventorySlot_CM_WBP_ItemSlot_CM_K2Node_ComponentBoundEvent_3_OnLeftClicked__DelegateSignature");
static_assert(offsetof(WBP_InventorySlot_CM_C_BndEvt__WBP_InventorySlot_CM_WBP_ItemSlot_CM_K2Node_ComponentBoundEvent_3_OnLeftClicked__DelegateSignature, Param_Slot) == 0x000000, "Member 'WBP_InventorySlot_CM_C_BndEvt__WBP_InventorySlot_CM_WBP_ItemSlot_CM_K2Node_ComponentBoundEvent_3_OnLeftClicked__DelegateSignature::Param_Slot' has a wrong offset!");

// Function WBP_InventorySlot_CM.WBP_InventorySlot_CM_C.BndEvt__WBP_InventorySlot_CM_WBP_ItemSlot_CM_K2Node_ComponentBoundEvent_7_OnRightClicked__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct WBP_InventorySlot_CM_C_BndEvt__WBP_InventorySlot_CM_WBP_ItemSlot_CM_K2Node_ComponentBoundEvent_7_OnRightClicked__DelegateSignature final
{
public:
	class UWBP_ItemSlot_CM_C*                     Param_Slot;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_InventorySlot_CM_C_BndEvt__WBP_InventorySlot_CM_WBP_ItemSlot_CM_K2Node_ComponentBoundEvent_7_OnRightClicked__DelegateSignature) == 0x000008, "Wrong alignment on WBP_InventorySlot_CM_C_BndEvt__WBP_InventorySlot_CM_WBP_ItemSlot_CM_K2Node_ComponentBoundEvent_7_OnRightClicked__DelegateSignature");
static_assert(sizeof(WBP_InventorySlot_CM_C_BndEvt__WBP_InventorySlot_CM_WBP_ItemSlot_CM_K2Node_ComponentBoundEvent_7_OnRightClicked__DelegateSignature) == 0x000008, "Wrong size on WBP_InventorySlot_CM_C_BndEvt__WBP_InventorySlot_CM_WBP_ItemSlot_CM_K2Node_ComponentBoundEvent_7_OnRightClicked__DelegateSignature");
static_assert(offsetof(WBP_InventorySlot_CM_C_BndEvt__WBP_InventorySlot_CM_WBP_ItemSlot_CM_K2Node_ComponentBoundEvent_7_OnRightClicked__DelegateSignature, Param_Slot) == 0x000000, "Member 'WBP_InventorySlot_CM_C_BndEvt__WBP_InventorySlot_CM_WBP_ItemSlot_CM_K2Node_ComponentBoundEvent_7_OnRightClicked__DelegateSignature::Param_Slot' has a wrong offset!");

// Function WBP_InventorySlot_CM.WBP_InventorySlot_CM_C.BndEvt__WBP_InventorySlot_CM_WBP_ItemSlot_CM_K2Node_ComponentBoundEvent_8_OnDragged__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct WBP_InventorySlot_CM_C_BndEvt__WBP_InventorySlot_CM_WBP_ItemSlot_CM_K2Node_ComponentBoundEvent_8_OnDragged__DelegateSignature final
{
public:
	class UWBP_ItemSlot_CM_C*                     Param_Slot;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_InventorySlot_CM_C_BndEvt__WBP_InventorySlot_CM_WBP_ItemSlot_CM_K2Node_ComponentBoundEvent_8_OnDragged__DelegateSignature) == 0x000008, "Wrong alignment on WBP_InventorySlot_CM_C_BndEvt__WBP_InventorySlot_CM_WBP_ItemSlot_CM_K2Node_ComponentBoundEvent_8_OnDragged__DelegateSignature");
static_assert(sizeof(WBP_InventorySlot_CM_C_BndEvt__WBP_InventorySlot_CM_WBP_ItemSlot_CM_K2Node_ComponentBoundEvent_8_OnDragged__DelegateSignature) == 0x000008, "Wrong size on WBP_InventorySlot_CM_C_BndEvt__WBP_InventorySlot_CM_WBP_ItemSlot_CM_K2Node_ComponentBoundEvent_8_OnDragged__DelegateSignature");
static_assert(offsetof(WBP_InventorySlot_CM_C_BndEvt__WBP_InventorySlot_CM_WBP_ItemSlot_CM_K2Node_ComponentBoundEvent_8_OnDragged__DelegateSignature, Param_Slot) == 0x000000, "Member 'WBP_InventorySlot_CM_C_BndEvt__WBP_InventorySlot_CM_WBP_ItemSlot_CM_K2Node_ComponentBoundEvent_8_OnDragged__DelegateSignature::Param_Slot' has a wrong offset!");

// Function WBP_InventorySlot_CM.WBP_InventorySlot_CM_C.CanOpenTooltip
// 0x0070 (0x0070 - 0x0000)
struct WBP_InventorySlot_CM_C_CanOpenTooltip final
{
public:
	bool                                          CanOpen;                                           // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_58E7[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FValeriaItem                           CallFunc_GetItem_Item;                             // 0x0008(0x0060)()
	bool                                          CallFunc_ItemIsEmpty_ReturnValue;                  // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0069(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_InventorySlot_CM_C_CanOpenTooltip) == 0x000008, "Wrong alignment on WBP_InventorySlot_CM_C_CanOpenTooltip");
static_assert(sizeof(WBP_InventorySlot_CM_C_CanOpenTooltip) == 0x000070, "Wrong size on WBP_InventorySlot_CM_C_CanOpenTooltip");
static_assert(offsetof(WBP_InventorySlot_CM_C_CanOpenTooltip, CanOpen) == 0x000000, "Member 'WBP_InventorySlot_CM_C_CanOpenTooltip::CanOpen' has a wrong offset!");
static_assert(offsetof(WBP_InventorySlot_CM_C_CanOpenTooltip, CallFunc_GetItem_Item) == 0x000008, "Member 'WBP_InventorySlot_CM_C_CanOpenTooltip::CallFunc_GetItem_Item' has a wrong offset!");
static_assert(offsetof(WBP_InventorySlot_CM_C_CanOpenTooltip, CallFunc_ItemIsEmpty_ReturnValue) == 0x000068, "Member 'WBP_InventorySlot_CM_C_CanOpenTooltip::CallFunc_ItemIsEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InventorySlot_CM_C_CanOpenTooltip, CallFunc_Not_PreBool_ReturnValue) == 0x000069, "Member 'WBP_InventorySlot_CM_C_CanOpenTooltip::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function WBP_InventorySlot_CM.WBP_InventorySlot_CM_C.CustomEvent
// 0x0008 (0x0008 - 0x0000)
struct WBP_InventorySlot_CM_C_CustomEvent final
{
public:
	class UWBP_InventorySlot_CM_C*                Param_Slot;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_InventorySlot_CM_C_CustomEvent) == 0x000008, "Wrong alignment on WBP_InventorySlot_CM_C_CustomEvent");
static_assert(sizeof(WBP_InventorySlot_CM_C_CustomEvent) == 0x000008, "Wrong size on WBP_InventorySlot_CM_C_CustomEvent");
static_assert(offsetof(WBP_InventorySlot_CM_C_CustomEvent, Param_Slot) == 0x000000, "Member 'WBP_InventorySlot_CM_C_CustomEvent::Param_Slot' has a wrong offset!");

// Function WBP_InventorySlot_CM.WBP_InventorySlot_CM_C.ExecuteUbergraph_WBP_InventorySlot_CM
// 0x0480 (0x0480 - 0x0000)
struct WBP_InventorySlot_CM_C_ExecuteUbergraph_WBP_InventorySlot_CM final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_58E8[0x1];                                     // 0x0007(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class UVALUI_BorderStyle*                     Temp_object_Variable;                              // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UVALUI_BorderStyle*                     Temp_object_Variable_1;                            // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_2;                              // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_3;                              // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x001B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_4;                              // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_5;                              // 0x001D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_58E9[0x2];                                     // 0x001E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class UWBP_InventorySlot_CM_C* Slot)> K2Node_CreateDelegate_OutputDelegate;              // 0x0020(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UInventoryComponent* Inventory)> K2Node_CreateDelegate_OutputDelegate_1;            // 0x0030(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UCommonUserWidget* Widget, bool bIsVisible)> K2Node_CreateDelegate_OutputDelegate_2;            // 0x0040(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(ESlateVisibility InVisibility)> K2Node_CreateDelegate_OutputDelegate_3;            // 0x0050(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x0060(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsShiftDown__Result;                      // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue;              // 0x0069(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_58EA[0x6];                                     // 0x006A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FValeriaItem                           CallFunc_GetItem_Item;                             // 0x0070(0x0060)()
	bool                                          CallFunc_ItemIsEmpty_ReturnValue;                  // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_58EB[0x3];                                     // 0x00D1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           CallFunc_GetBagType_ReturnValue;                   // 0x00D4(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_GameplayTag_ReturnValue;       // 0x00DC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_58EC[0x3];                                     // 0x00DD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UValeriaGameUserSettings*               CallFunc_GetValeriaGameUserSettings_ReturnValue;   // 0x00E0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UVALUI_BorderStyle*                     K2Node_Select_Default;                             // 0x00E8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FValeriaGameplaySettings               K2Node_CustomEvent_GameplaySettings;               // 0x00F0(0x0018)(ConstParm, NoDestructor)
	class UValeriaGameUserSettings*               CallFunc_GetValeriaGameUserSettings_ReturnValue_1; // 0x0108(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FValeriaItem                           CallFunc_GetItem_Item_1;                           // 0x0110(0x0060)()
	bool                                          CallFunc_ItemIsEmpty_ReturnValue_1;                // 0x0170(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_3;                              // 0x0171(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_58ED[0x6];                                     // 0x0172(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_DraggedItem_CM_C*                  CallFunc_Create_ReturnValue;                       // 0x0178(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0180(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_58EE[0x4];                                     // 0x0184(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FValeriaItem                           CallFunc_GetItem_Item_2;                           // 0x0188(0x0060)()
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x01E8(0x0018)()
	bool                                          CallFunc_ItemIsEmpty_ReturnValue_2;                // 0x0200(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_58EF[0x3];                                     // 0x0201(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(struct FValeriaGameplaySettings& GameplaySettings)> K2Node_CreateDelegate_OutputDelegate_4;            // 0x0204(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ShouldShowDestroyWarning_bShow;           // 0x0214(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_1;                           // 0x0215(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_58F0[0x2];                                     // 0x0216(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationForward_ReturnValue;         // 0x0218(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationReverse_ReturnValue;         // 0x0220(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0228(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0229(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_58F1[0x6];                                     // 0x022A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FValeriaItem                           CallFunc_GetItem_Item_3;                           // 0x0230(0x0060)()
	class UBP_ItemDrag_Inventory_C*               CallFunc_CreateDragDropOperation_ReturnValue;      // 0x0290(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ItemIsEmpty_ReturnValue_3;                // 0x0298(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x0299(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x029A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_2;                           // 0x029B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EValeriaFuncResult                            CallFunc_GetValeriaCharacter_OutResult;            // 0x029C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_58F2[0x3];                                     // 0x029D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AValeriaCharacter*                      CallFunc_GetValeriaCharacter_ReturnValue;          // 0x02A0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	EValeriaFuncResult                            CallFunc_GetValeriaCharacter_OutResult_1;          // 0x02A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_58F3[0x7];                                     // 0x02A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AValeriaCharacter*                      CallFunc_GetValeriaCharacter_ReturnValue_1;        // 0x02B0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UStorageComponent*                      CallFunc_GetStorage_ReturnValue;                   // 0x02B8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UStorageComponent*                      CallFunc_GetStorage_ReturnValue_1;                 // 0x02C0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x02C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess_1;                    // 0x02C9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_58F4[0x2];                                     // 0x02CA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFocusEvent                            K2Node_Event_InFocusEvent;                         // 0x02CC(0x0008)(NoDestructor)
	uint8                                         Pad_58F5[0x4];                                     // 0x02D4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x02D8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UVAL_GameUISubsystem*                   CallFunc_GetLocalPlayerSubSystemFromPlayerController_ReturnValue; // 0x02E0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FValeriaItem                           CallFunc_GetItem_Item_4;                           // 0x02E8(0x0060)()
	bool                                          CallFunc_ItemIsEmpty_ReturnValue_4;                // 0x0348(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsSelected_bSelected;                     // 0x0349(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsSelected_bSelected_1;                   // 0x034A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_58F6[0x5];                                     // 0x034B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationReverse_ReturnValue_1;       // 0x0350(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsSelected_bSelected_2;                   // 0x0358(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0359(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_58F7[0x6];                                     // 0x035A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_ItemSlot_CM_C*                     K2Node_ComponentBoundEvent_Slot_5;                 // 0x0360(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UVALUI_ItemDragDrop*                    K2Node_ComponentBoundEvent_Operation;              // 0x0368(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HandleDrop_ReturnValue;                   // 0x0370(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_58F8[0x7];                                     // 0x0371(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_ItemSlot_CM_C*                     K2Node_ComponentBoundEvent_Slot_4;                 // 0x0378(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UWBP_ItemSlot_CM_C*                     K2Node_ComponentBoundEvent_Slot_3;                 // 0x0380(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UWBP_ItemSlot_CM_C*                     K2Node_ComponentBoundEvent_Slot_2;                 // 0x0388(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UWBP_ItemSlot_CM_C*                     K2Node_ComponentBoundEvent_Slot_1;                 // 0x0390(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UWBP_ItemSlot_CM_C*                     K2Node_ComponentBoundEvent_Slot;                   // 0x0398(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ShouldShowHotkeyText_ShouldShow;          // 0x03A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_58F9[0x7];                                     // 0x03A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_InventorySlot_CM_C*                K2Node_CustomEvent_Slot;                           // 0x03A8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FValeriaItem                           CallFunc_GetItem_Item_5;                           // 0x03B0(0x0060)()
	ESlateVisibility                              K2Node_Select_Default_3;                           // 0x0410(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_58FA[0x3];                                     // 0x0411(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_AkEventGlobal_ReturnValue;                // 0x0414(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsEmpty_bEmpty;                           // 0x0418(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_58FB[0x7];                                     // 0x0419(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UInventoryComponent*                    K2Node_CustomEvent_Inventory;                      // 0x0420(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bIsShow;                              // 0x0428(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ShouldUpdateSlotFromEvent_UpdateNow;      // 0x0429(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_58FC[0x6];                                     // 0x042A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue_1;            // 0x0430(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class US6UI_UIManagerWidgetBase*              CallFunc_GetUIManagerWidget_ReturnValue;           // 0x0438(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UCommonUserWidget*                      K2Node_CustomEvent_Widget;                         // 0x0440(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_bIsVisible;                     // 0x0448(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_58FD[0x7];                                     // 0x0449(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UVALUI_UIManagerWidgetBase*             K2Node_DynamicCast_AsVALUI_UIManager_Widget_Base;  // 0x0450(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0458(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_58FE[0x7];                                     // 0x0459(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue_2;            // 0x0460(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class US6UI_UIManagerWidgetBase*              CallFunc_GetUIManagerWidget_ReturnValue_1;         // 0x0468(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UVALUI_UIManagerWidgetBase*             K2Node_DynamicCast_AsVALUI_UIManager_Widget_Base_1; // 0x0470(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0478(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsChildOf_StandaloneInventory_FoundStandaloneInventory; // 0x0479(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_3;                // 0x047A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_CustomEvent_InVisibility;                   // 0x047B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_InventorySlot_CM_C_ExecuteUbergraph_WBP_InventorySlot_CM) == 0x000008, "Wrong alignment on WBP_InventorySlot_CM_C_ExecuteUbergraph_WBP_InventorySlot_CM");
static_assert(sizeof(WBP_InventorySlot_CM_C_ExecuteUbergraph_WBP_InventorySlot_CM) == 0x000480, "Wrong size on WBP_InventorySlot_CM_C_ExecuteUbergraph_WBP_InventorySlot_CM");
static_assert(offsetof(WBP_InventorySlot_CM_C_ExecuteUbergraph_WBP_InventorySlot_CM, EntryPoint) == 0x000000, "Member 'WBP_InventorySlot_CM_C_ExecuteUbergraph_WBP_InventorySlot_CM::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_InventorySlot_CM_C_ExecuteUbergraph_WBP_InventorySlot_CM, Temp_byte_Variable) == 0x000004, "Member 'WBP_InventorySlot_CM_C_ExecuteUbergraph_WBP_InventorySlot_CM::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_InventorySlot_CM_C_ExecuteUbergraph_WBP_InventorySlot_CM, Temp_byte_Variable_1) == 0x000005, "Member 'WBP_InventorySlot_CM_C_ExecuteUbergraph_WBP_InventorySlot_CM::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_InventorySlot_CM_C_ExecuteUbergraph_WBP_InventorySlot_CM, Temp_bool_Variable) == 0x000006, "Member 'WBP_InventorySlot_CM_C_ExecuteUbergraph_WBP_InventorySlot_CM::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_InventorySlot_CM_C_ExecuteUbergraph_WBP_InventorySlot_CM, Temp_object_Variable) == 0x000008, "Member 'WBP_InventorySlot_CM_C_ExecuteUbergraph_WBP_InventorySlot_CM::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(WBP_InventorySlot_CM_C_ExecuteUbergraph_WBP_InventorySlot_CM, Temp_object_Variable_1) == 0x000010, "Member 'WBP_InventorySlot_CM_C_ExecuteUbergraph_WBP_InventorySlot_CM::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_InventorySlot_CM_C_ExecuteUbergraph_WBP_InventorySlot_CM, Temp_bool_Variable_1) == 0x000018, "Member 'WBP_InventorySlot_CM_C_ExecuteUbergraph_WBP_InventorySlot_CM::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_InventorySlot_CM_C_ExecuteUbergraph_WBP_InventorySlot_CM, Temp_byte_Variable_2) == 0x000019, "Member 'WBP_InventorySlot_CM_C_ExecuteUbergraph_WBP_InventorySlot_CM::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_InventorySlot_CM_C_ExecuteUbergraph_WBP_InventorySlot_CM, Temp_byte_Variable_3) == 0x00001A, "Member 'WBP_InventorySlot_CM_C_ExecuteUbergraph_WBP_InventorySlot_CM::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(WBP_InventorySlot_CM_C_ExecuteUbergraph_WBP_InventorySlot_CM, Temp_bool_Variable_2) == 0x00001B, "Member 'WBP_InventorySlot_CM_C_ExecuteUbergraph_WBP_InventorySlot_CM::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_InventorySlot_CM_C_ExecuteUbergraph_WBP_InventorySlot_CM, Temp_byte_Variable_4) == 0x00001C, "Member 'WBP_InventorySlot_CM_C_ExecuteUbergraph_WBP_InventorySlot_CM::Temp_byte_Variable_4' has a wrong offset!");
static_assert(offsetof(WBP_InventorySlot_CM_C_ExecuteUbergraph_WBP_InventorySlot_CM, Temp_byte_Variable_5) == 0x00001D, "Member 'WBP_InventorySlot_CM_C_ExecuteUbergraph_WBP_InventorySlot_CM::Temp_byte_Variable_5' has a wrong offset!");
static_assert(offsetof(WBP_InventorySlot_CM_C_ExecuteUbergraph_WBP_InventorySlot_CM, K2Node_CreateDelegate_OutputDelegate) == 0x000020, "Member 'WBP_InventorySlot_CM_C_ExecuteUbergraph_WBP_InventorySlot_CM::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WBP_InventorySlot_CM_C_ExecuteUbergraph_WBP_InventorySlot_CM, K2Node_CreateDelegate_OutputDelegate_1) == 0x000030, "Member 'WBP_InventorySlot_CM_C_ExecuteUbergraph_WBP_InventorySlot_CM::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(WBP_InventorySlot_CM_C_ExecuteUbergraph_WBP_InventorySlot_CM, K2Node_CreateDelegate_OutputDelegate_2) == 0x000040, "Member 'WBP_InventorySlot_CM_C_ExecuteUbergraph_WBP_InventorySlot_CM::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(WBP_InventorySlot_CM_C_ExecuteUbergraph_WBP_InventorySlot_CM, K2Node_CreateDelegate_OutputDelegate_3) == 0x000050, "Member 'WBP_InventorySlot_CM_C_ExecuteUbergraph_WBP_InventorySlot_CM::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");
static_assert(offsetof(WBP_InventorySlot_CM_C_ExecuteUbergraph_WBP_InventorySlot_CM, CallFunc_GetOwningPlayer_ReturnValue) == 0x000060, "Member 'WBP_InventorySlot_CM_C_ExecuteUbergraph_WBP_InventorySlot_CM::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InventorySlot_CM_C_ExecuteUbergraph_WBP_InventorySlot_CM, CallFunc_IsShiftDown__Result) == 0x000068, "Member 'WBP_InventorySlot_CM_C_ExecuteUbergraph_WBP_InventorySlot_CM::CallFunc_IsShiftDown__Result' has a wrong offset!");
static_assert(offsetof(WBP_InventorySlot_CM_C_ExecuteUbergraph_WBP_InventorySlot_CM, CallFunc_MakeLiteralByte_ReturnValue) == 0x000069, "Member 'WBP_InventorySlot_CM_C_ExecuteUbergraph_WBP_InventorySlot_CM::CallFunc_MakeLiteralByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InventorySlot_CM_C_ExecuteUbergraph_WBP_InventorySlot_CM, CallFunc_GetItem_Item) == 0x000070, "Member 'WBP_InventorySlot_CM_C_ExecuteUbergraph_WBP_InventorySlot_CM::CallFunc_GetItem_Item' has a wrong offset!");
static_assert(offsetof(WBP_InventorySlot_CM_C_ExecuteUbergraph_WBP_InventorySlot_CM, CallFunc_ItemIsEmpty_ReturnValue) == 0x0000D0, "Member 'WBP_InventorySlot_CM_C_ExecuteUbergraph_WBP_InventorySlot_CM::CallFunc_ItemIsEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InventorySlot_CM_C_ExecuteUbergraph_WBP_InventorySlot_CM, CallFunc_GetBagType_ReturnValue) == 0x0000D4, "Member 'WBP_InventorySlot_CM_C_ExecuteUbergraph_WBP_InventorySlot_CM::CallFunc_GetBagType_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InventorySlot_CM_C_ExecuteUbergraph_WBP_InventorySlot_CM, CallFunc_EqualEqual_GameplayTag_ReturnValue) == 0x0000DC, "Member 'WBP_InventorySlot_CM_C_ExecuteUbergraph_WBP_InventorySlot_CM::CallFunc_EqualEqual_GameplayTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InventorySlot_CM_C_ExecuteUbergraph_WBP_InventorySlot_CM, CallFunc_GetValeriaGameUserSettings_ReturnValue) == 0x0000E0, "Member 'WBP_InventorySlot_CM_C_ExecuteUbergraph_WBP_InventorySlot_CM::CallFunc_GetValeriaGameUserSettings_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InventorySlot_CM_C_ExecuteUbergraph_WBP_InventorySlot_CM, K2Node_Select_Default) == 0x0000E8, "Member 'WBP_InventorySlot_CM_C_ExecuteUbergraph_WBP_InventorySlot_CM::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_InventorySlot_CM_C_ExecuteUbergraph_WBP_InventorySlot_CM, K2Node_CustomEvent_GameplaySettings) == 0x0000F0, "Member 'WBP_InventorySlot_CM_C_ExecuteUbergraph_WBP_InventorySlot_CM::K2Node_CustomEvent_GameplaySettings' has a wrong offset!");
static_assert(offsetof(WBP_InventorySlot_CM_C_ExecuteUbergraph_WBP_InventorySlot_CM, CallFunc_GetValeriaGameUserSettings_ReturnValue_1) == 0x000108, "Member 'WBP_InventorySlot_CM_C_ExecuteUbergraph_WBP_InventorySlot_CM::CallFunc_GetValeriaGameUserSettings_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_InventorySlot_CM_C_ExecuteUbergraph_WBP_InventorySlot_CM, CallFunc_GetItem_Item_1) == 0x000110, "Member 'WBP_InventorySlot_CM_C_ExecuteUbergraph_WBP_InventorySlot_CM::CallFunc_GetItem_Item_1' has a wrong offset!");
static_assert(offsetof(WBP_InventorySlot_CM_C_ExecuteUbergraph_WBP_InventorySlot_CM, CallFunc_ItemIsEmpty_ReturnValue_1) == 0x000170, "Member 'WBP_InventorySlot_CM_C_ExecuteUbergraph_WBP_InventorySlot_CM::CallFunc_ItemIsEmpty_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_InventorySlot_CM_C_ExecuteUbergraph_WBP_InventorySlot_CM, Temp_bool_Variable_3) == 0x000171, "Member 'WBP_InventorySlot_CM_C_ExecuteUbergraph_WBP_InventorySlot_CM::Temp_bool_Variable_3' has a wrong offset!");
static_assert(offsetof(WBP_InventorySlot_CM_C_ExecuteUbergraph_WBP_InventorySlot_CM, CallFunc_Create_ReturnValue) == 0x000178, "Member 'WBP_InventorySlot_CM_C_ExecuteUbergraph_WBP_InventorySlot_CM::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InventorySlot_CM_C_ExecuteUbergraph_WBP_InventorySlot_CM, CallFunc_Add_IntInt_ReturnValue) == 0x000180, "Member 'WBP_InventorySlot_CM_C_ExecuteUbergraph_WBP_InventorySlot_CM::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InventorySlot_CM_C_ExecuteUbergraph_WBP_InventorySlot_CM, CallFunc_GetItem_Item_2) == 0x000188, "Member 'WBP_InventorySlot_CM_C_ExecuteUbergraph_WBP_InventorySlot_CM::CallFunc_GetItem_Item_2' has a wrong offset!");
static_assert(offsetof(WBP_InventorySlot_CM_C_ExecuteUbergraph_WBP_InventorySlot_CM, CallFunc_Conv_IntToText_ReturnValue) == 0x0001E8, "Member 'WBP_InventorySlot_CM_C_ExecuteUbergraph_WBP_InventorySlot_CM::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InventorySlot_CM_C_ExecuteUbergraph_WBP_InventorySlot_CM, CallFunc_ItemIsEmpty_ReturnValue_2) == 0x000200, "Member 'WBP_InventorySlot_CM_C_ExecuteUbergraph_WBP_InventorySlot_CM::CallFunc_ItemIsEmpty_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_InventorySlot_CM_C_ExecuteUbergraph_WBP_InventorySlot_CM, K2Node_CreateDelegate_OutputDelegate_4) == 0x000204, "Member 'WBP_InventorySlot_CM_C_ExecuteUbergraph_WBP_InventorySlot_CM::K2Node_CreateDelegate_OutputDelegate_4' has a wrong offset!");
static_assert(offsetof(WBP_InventorySlot_CM_C_ExecuteUbergraph_WBP_InventorySlot_CM, CallFunc_ShouldShowDestroyWarning_bShow) == 0x000214, "Member 'WBP_InventorySlot_CM_C_ExecuteUbergraph_WBP_InventorySlot_CM::CallFunc_ShouldShowDestroyWarning_bShow' has a wrong offset!");
static_assert(offsetof(WBP_InventorySlot_CM_C_ExecuteUbergraph_WBP_InventorySlot_CM, K2Node_Select_Default_1) == 0x000215, "Member 'WBP_InventorySlot_CM_C_ExecuteUbergraph_WBP_InventorySlot_CM::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(WBP_InventorySlot_CM_C_ExecuteUbergraph_WBP_InventorySlot_CM, CallFunc_PlayAnimationForward_ReturnValue) == 0x000218, "Member 'WBP_InventorySlot_CM_C_ExecuteUbergraph_WBP_InventorySlot_CM::CallFunc_PlayAnimationForward_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InventorySlot_CM_C_ExecuteUbergraph_WBP_InventorySlot_CM, CallFunc_PlayAnimationReverse_ReturnValue) == 0x000220, "Member 'WBP_InventorySlot_CM_C_ExecuteUbergraph_WBP_InventorySlot_CM::CallFunc_PlayAnimationReverse_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InventorySlot_CM_C_ExecuteUbergraph_WBP_InventorySlot_CM, CallFunc_Not_PreBool_ReturnValue) == 0x000228, "Member 'WBP_InventorySlot_CM_C_ExecuteUbergraph_WBP_InventorySlot_CM::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InventorySlot_CM_C_ExecuteUbergraph_WBP_InventorySlot_CM, CallFunc_Not_PreBool_ReturnValue_1) == 0x000229, "Member 'WBP_InventorySlot_CM_C_ExecuteUbergraph_WBP_InventorySlot_CM::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_InventorySlot_CM_C_ExecuteUbergraph_WBP_InventorySlot_CM, CallFunc_GetItem_Item_3) == 0x000230, "Member 'WBP_InventorySlot_CM_C_ExecuteUbergraph_WBP_InventorySlot_CM::CallFunc_GetItem_Item_3' has a wrong offset!");
static_assert(offsetof(WBP_InventorySlot_CM_C_ExecuteUbergraph_WBP_InventorySlot_CM, CallFunc_CreateDragDropOperation_ReturnValue) == 0x000290, "Member 'WBP_InventorySlot_CM_C_ExecuteUbergraph_WBP_InventorySlot_CM::CallFunc_CreateDragDropOperation_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InventorySlot_CM_C_ExecuteUbergraph_WBP_InventorySlot_CM, CallFunc_ItemIsEmpty_ReturnValue_3) == 0x000298, "Member 'WBP_InventorySlot_CM_C_ExecuteUbergraph_WBP_InventorySlot_CM::CallFunc_ItemIsEmpty_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WBP_InventorySlot_CM_C_ExecuteUbergraph_WBP_InventorySlot_CM, CallFunc_Not_PreBool_ReturnValue_2) == 0x000299, "Member 'WBP_InventorySlot_CM_C_ExecuteUbergraph_WBP_InventorySlot_CM::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_InventorySlot_CM_C_ExecuteUbergraph_WBP_InventorySlot_CM, CallFunc_BooleanAND_ReturnValue) == 0x00029A, "Member 'WBP_InventorySlot_CM_C_ExecuteUbergraph_WBP_InventorySlot_CM::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InventorySlot_CM_C_ExecuteUbergraph_WBP_InventorySlot_CM, K2Node_Select_Default_2) == 0x00029B, "Member 'WBP_InventorySlot_CM_C_ExecuteUbergraph_WBP_InventorySlot_CM::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(WBP_InventorySlot_CM_C_ExecuteUbergraph_WBP_InventorySlot_CM, CallFunc_GetValeriaCharacter_OutResult) == 0x00029C, "Member 'WBP_InventorySlot_CM_C_ExecuteUbergraph_WBP_InventorySlot_CM::CallFunc_GetValeriaCharacter_OutResult' has a wrong offset!");
static_assert(offsetof(WBP_InventorySlot_CM_C_ExecuteUbergraph_WBP_InventorySlot_CM, CallFunc_GetValeriaCharacter_ReturnValue) == 0x0002A0, "Member 'WBP_InventorySlot_CM_C_ExecuteUbergraph_WBP_InventorySlot_CM::CallFunc_GetValeriaCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InventorySlot_CM_C_ExecuteUbergraph_WBP_InventorySlot_CM, CallFunc_GetValeriaCharacter_OutResult_1) == 0x0002A8, "Member 'WBP_InventorySlot_CM_C_ExecuteUbergraph_WBP_InventorySlot_CM::CallFunc_GetValeriaCharacter_OutResult_1' has a wrong offset!");
static_assert(offsetof(WBP_InventorySlot_CM_C_ExecuteUbergraph_WBP_InventorySlot_CM, CallFunc_GetValeriaCharacter_ReturnValue_1) == 0x0002B0, "Member 'WBP_InventorySlot_CM_C_ExecuteUbergraph_WBP_InventorySlot_CM::CallFunc_GetValeriaCharacter_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_InventorySlot_CM_C_ExecuteUbergraph_WBP_InventorySlot_CM, CallFunc_GetStorage_ReturnValue) == 0x0002B8, "Member 'WBP_InventorySlot_CM_C_ExecuteUbergraph_WBP_InventorySlot_CM::CallFunc_GetStorage_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InventorySlot_CM_C_ExecuteUbergraph_WBP_InventorySlot_CM, CallFunc_GetStorage_ReturnValue_1) == 0x0002C0, "Member 'WBP_InventorySlot_CM_C_ExecuteUbergraph_WBP_InventorySlot_CM::CallFunc_GetStorage_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_InventorySlot_CM_C_ExecuteUbergraph_WBP_InventorySlot_CM, K2Node_SwitchEnum_CmpSuccess) == 0x0002C8, "Member 'WBP_InventorySlot_CM_C_ExecuteUbergraph_WBP_InventorySlot_CM::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(WBP_InventorySlot_CM_C_ExecuteUbergraph_WBP_InventorySlot_CM, K2Node_SwitchEnum_CmpSuccess_1) == 0x0002C9, "Member 'WBP_InventorySlot_CM_C_ExecuteUbergraph_WBP_InventorySlot_CM::K2Node_SwitchEnum_CmpSuccess_1' has a wrong offset!");
static_assert(offsetof(WBP_InventorySlot_CM_C_ExecuteUbergraph_WBP_InventorySlot_CM, K2Node_Event_InFocusEvent) == 0x0002CC, "Member 'WBP_InventorySlot_CM_C_ExecuteUbergraph_WBP_InventorySlot_CM::K2Node_Event_InFocusEvent' has a wrong offset!");
static_assert(offsetof(WBP_InventorySlot_CM_C_ExecuteUbergraph_WBP_InventorySlot_CM, CallFunc_GetPlayerController_ReturnValue) == 0x0002D8, "Member 'WBP_InventorySlot_CM_C_ExecuteUbergraph_WBP_InventorySlot_CM::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InventorySlot_CM_C_ExecuteUbergraph_WBP_InventorySlot_CM, CallFunc_GetLocalPlayerSubSystemFromPlayerController_ReturnValue) == 0x0002E0, "Member 'WBP_InventorySlot_CM_C_ExecuteUbergraph_WBP_InventorySlot_CM::CallFunc_GetLocalPlayerSubSystemFromPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InventorySlot_CM_C_ExecuteUbergraph_WBP_InventorySlot_CM, CallFunc_GetItem_Item_4) == 0x0002E8, "Member 'WBP_InventorySlot_CM_C_ExecuteUbergraph_WBP_InventorySlot_CM::CallFunc_GetItem_Item_4' has a wrong offset!");
static_assert(offsetof(WBP_InventorySlot_CM_C_ExecuteUbergraph_WBP_InventorySlot_CM, CallFunc_ItemIsEmpty_ReturnValue_4) == 0x000348, "Member 'WBP_InventorySlot_CM_C_ExecuteUbergraph_WBP_InventorySlot_CM::CallFunc_ItemIsEmpty_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(WBP_InventorySlot_CM_C_ExecuteUbergraph_WBP_InventorySlot_CM, CallFunc_IsSelected_bSelected) == 0x000349, "Member 'WBP_InventorySlot_CM_C_ExecuteUbergraph_WBP_InventorySlot_CM::CallFunc_IsSelected_bSelected' has a wrong offset!");
static_assert(offsetof(WBP_InventorySlot_CM_C_ExecuteUbergraph_WBP_InventorySlot_CM, CallFunc_IsSelected_bSelected_1) == 0x00034A, "Member 'WBP_InventorySlot_CM_C_ExecuteUbergraph_WBP_InventorySlot_CM::CallFunc_IsSelected_bSelected_1' has a wrong offset!");
static_assert(offsetof(WBP_InventorySlot_CM_C_ExecuteUbergraph_WBP_InventorySlot_CM, CallFunc_PlayAnimationReverse_ReturnValue_1) == 0x000350, "Member 'WBP_InventorySlot_CM_C_ExecuteUbergraph_WBP_InventorySlot_CM::CallFunc_PlayAnimationReverse_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_InventorySlot_CM_C_ExecuteUbergraph_WBP_InventorySlot_CM, CallFunc_IsSelected_bSelected_2) == 0x000358, "Member 'WBP_InventorySlot_CM_C_ExecuteUbergraph_WBP_InventorySlot_CM::CallFunc_IsSelected_bSelected_2' has a wrong offset!");
static_assert(offsetof(WBP_InventorySlot_CM_C_ExecuteUbergraph_WBP_InventorySlot_CM, K2Node_Event_IsDesignTime) == 0x000359, "Member 'WBP_InventorySlot_CM_C_ExecuteUbergraph_WBP_InventorySlot_CM::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(WBP_InventorySlot_CM_C_ExecuteUbergraph_WBP_InventorySlot_CM, K2Node_ComponentBoundEvent_Slot_5) == 0x000360, "Member 'WBP_InventorySlot_CM_C_ExecuteUbergraph_WBP_InventorySlot_CM::K2Node_ComponentBoundEvent_Slot_5' has a wrong offset!");
static_assert(offsetof(WBP_InventorySlot_CM_C_ExecuteUbergraph_WBP_InventorySlot_CM, K2Node_ComponentBoundEvent_Operation) == 0x000368, "Member 'WBP_InventorySlot_CM_C_ExecuteUbergraph_WBP_InventorySlot_CM::K2Node_ComponentBoundEvent_Operation' has a wrong offset!");
static_assert(offsetof(WBP_InventorySlot_CM_C_ExecuteUbergraph_WBP_InventorySlot_CM, CallFunc_HandleDrop_ReturnValue) == 0x000370, "Member 'WBP_InventorySlot_CM_C_ExecuteUbergraph_WBP_InventorySlot_CM::CallFunc_HandleDrop_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InventorySlot_CM_C_ExecuteUbergraph_WBP_InventorySlot_CM, K2Node_ComponentBoundEvent_Slot_4) == 0x000378, "Member 'WBP_InventorySlot_CM_C_ExecuteUbergraph_WBP_InventorySlot_CM::K2Node_ComponentBoundEvent_Slot_4' has a wrong offset!");
static_assert(offsetof(WBP_InventorySlot_CM_C_ExecuteUbergraph_WBP_InventorySlot_CM, K2Node_ComponentBoundEvent_Slot_3) == 0x000380, "Member 'WBP_InventorySlot_CM_C_ExecuteUbergraph_WBP_InventorySlot_CM::K2Node_ComponentBoundEvent_Slot_3' has a wrong offset!");
static_assert(offsetof(WBP_InventorySlot_CM_C_ExecuteUbergraph_WBP_InventorySlot_CM, K2Node_ComponentBoundEvent_Slot_2) == 0x000388, "Member 'WBP_InventorySlot_CM_C_ExecuteUbergraph_WBP_InventorySlot_CM::K2Node_ComponentBoundEvent_Slot_2' has a wrong offset!");
static_assert(offsetof(WBP_InventorySlot_CM_C_ExecuteUbergraph_WBP_InventorySlot_CM, K2Node_ComponentBoundEvent_Slot_1) == 0x000390, "Member 'WBP_InventorySlot_CM_C_ExecuteUbergraph_WBP_InventorySlot_CM::K2Node_ComponentBoundEvent_Slot_1' has a wrong offset!");
static_assert(offsetof(WBP_InventorySlot_CM_C_ExecuteUbergraph_WBP_InventorySlot_CM, K2Node_ComponentBoundEvent_Slot) == 0x000398, "Member 'WBP_InventorySlot_CM_C_ExecuteUbergraph_WBP_InventorySlot_CM::K2Node_ComponentBoundEvent_Slot' has a wrong offset!");
static_assert(offsetof(WBP_InventorySlot_CM_C_ExecuteUbergraph_WBP_InventorySlot_CM, CallFunc_ShouldShowHotkeyText_ShouldShow) == 0x0003A0, "Member 'WBP_InventorySlot_CM_C_ExecuteUbergraph_WBP_InventorySlot_CM::CallFunc_ShouldShowHotkeyText_ShouldShow' has a wrong offset!");
static_assert(offsetof(WBP_InventorySlot_CM_C_ExecuteUbergraph_WBP_InventorySlot_CM, K2Node_CustomEvent_Slot) == 0x0003A8, "Member 'WBP_InventorySlot_CM_C_ExecuteUbergraph_WBP_InventorySlot_CM::K2Node_CustomEvent_Slot' has a wrong offset!");
static_assert(offsetof(WBP_InventorySlot_CM_C_ExecuteUbergraph_WBP_InventorySlot_CM, CallFunc_GetItem_Item_5) == 0x0003B0, "Member 'WBP_InventorySlot_CM_C_ExecuteUbergraph_WBP_InventorySlot_CM::CallFunc_GetItem_Item_5' has a wrong offset!");
static_assert(offsetof(WBP_InventorySlot_CM_C_ExecuteUbergraph_WBP_InventorySlot_CM, K2Node_Select_Default_3) == 0x000410, "Member 'WBP_InventorySlot_CM_C_ExecuteUbergraph_WBP_InventorySlot_CM::K2Node_Select_Default_3' has a wrong offset!");
static_assert(offsetof(WBP_InventorySlot_CM_C_ExecuteUbergraph_WBP_InventorySlot_CM, CallFunc_AkEventGlobal_ReturnValue) == 0x000414, "Member 'WBP_InventorySlot_CM_C_ExecuteUbergraph_WBP_InventorySlot_CM::CallFunc_AkEventGlobal_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InventorySlot_CM_C_ExecuteUbergraph_WBP_InventorySlot_CM, CallFunc_IsEmpty_bEmpty) == 0x000418, "Member 'WBP_InventorySlot_CM_C_ExecuteUbergraph_WBP_InventorySlot_CM::CallFunc_IsEmpty_bEmpty' has a wrong offset!");
static_assert(offsetof(WBP_InventorySlot_CM_C_ExecuteUbergraph_WBP_InventorySlot_CM, K2Node_CustomEvent_Inventory) == 0x000420, "Member 'WBP_InventorySlot_CM_C_ExecuteUbergraph_WBP_InventorySlot_CM::K2Node_CustomEvent_Inventory' has a wrong offset!");
static_assert(offsetof(WBP_InventorySlot_CM_C_ExecuteUbergraph_WBP_InventorySlot_CM, K2Node_Event_bIsShow) == 0x000428, "Member 'WBP_InventorySlot_CM_C_ExecuteUbergraph_WBP_InventorySlot_CM::K2Node_Event_bIsShow' has a wrong offset!");
static_assert(offsetof(WBP_InventorySlot_CM_C_ExecuteUbergraph_WBP_InventorySlot_CM, CallFunc_ShouldUpdateSlotFromEvent_UpdateNow) == 0x000429, "Member 'WBP_InventorySlot_CM_C_ExecuteUbergraph_WBP_InventorySlot_CM::CallFunc_ShouldUpdateSlotFromEvent_UpdateNow' has a wrong offset!");
static_assert(offsetof(WBP_InventorySlot_CM_C_ExecuteUbergraph_WBP_InventorySlot_CM, CallFunc_GetOwningPlayer_ReturnValue_1) == 0x000430, "Member 'WBP_InventorySlot_CM_C_ExecuteUbergraph_WBP_InventorySlot_CM::CallFunc_GetOwningPlayer_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_InventorySlot_CM_C_ExecuteUbergraph_WBP_InventorySlot_CM, CallFunc_GetUIManagerWidget_ReturnValue) == 0x000438, "Member 'WBP_InventorySlot_CM_C_ExecuteUbergraph_WBP_InventorySlot_CM::CallFunc_GetUIManagerWidget_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InventorySlot_CM_C_ExecuteUbergraph_WBP_InventorySlot_CM, K2Node_CustomEvent_Widget) == 0x000440, "Member 'WBP_InventorySlot_CM_C_ExecuteUbergraph_WBP_InventorySlot_CM::K2Node_CustomEvent_Widget' has a wrong offset!");
static_assert(offsetof(WBP_InventorySlot_CM_C_ExecuteUbergraph_WBP_InventorySlot_CM, K2Node_CustomEvent_bIsVisible) == 0x000448, "Member 'WBP_InventorySlot_CM_C_ExecuteUbergraph_WBP_InventorySlot_CM::K2Node_CustomEvent_bIsVisible' has a wrong offset!");
static_assert(offsetof(WBP_InventorySlot_CM_C_ExecuteUbergraph_WBP_InventorySlot_CM, K2Node_DynamicCast_AsVALUI_UIManager_Widget_Base) == 0x000450, "Member 'WBP_InventorySlot_CM_C_ExecuteUbergraph_WBP_InventorySlot_CM::K2Node_DynamicCast_AsVALUI_UIManager_Widget_Base' has a wrong offset!");
static_assert(offsetof(WBP_InventorySlot_CM_C_ExecuteUbergraph_WBP_InventorySlot_CM, K2Node_DynamicCast_bSuccess) == 0x000458, "Member 'WBP_InventorySlot_CM_C_ExecuteUbergraph_WBP_InventorySlot_CM::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_InventorySlot_CM_C_ExecuteUbergraph_WBP_InventorySlot_CM, CallFunc_GetOwningPlayer_ReturnValue_2) == 0x000460, "Member 'WBP_InventorySlot_CM_C_ExecuteUbergraph_WBP_InventorySlot_CM::CallFunc_GetOwningPlayer_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_InventorySlot_CM_C_ExecuteUbergraph_WBP_InventorySlot_CM, CallFunc_GetUIManagerWidget_ReturnValue_1) == 0x000468, "Member 'WBP_InventorySlot_CM_C_ExecuteUbergraph_WBP_InventorySlot_CM::CallFunc_GetUIManagerWidget_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_InventorySlot_CM_C_ExecuteUbergraph_WBP_InventorySlot_CM, K2Node_DynamicCast_AsVALUI_UIManager_Widget_Base_1) == 0x000470, "Member 'WBP_InventorySlot_CM_C_ExecuteUbergraph_WBP_InventorySlot_CM::K2Node_DynamicCast_AsVALUI_UIManager_Widget_Base_1' has a wrong offset!");
static_assert(offsetof(WBP_InventorySlot_CM_C_ExecuteUbergraph_WBP_InventorySlot_CM, K2Node_DynamicCast_bSuccess_1) == 0x000478, "Member 'WBP_InventorySlot_CM_C_ExecuteUbergraph_WBP_InventorySlot_CM::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(WBP_InventorySlot_CM_C_ExecuteUbergraph_WBP_InventorySlot_CM, CallFunc_IsChildOf_StandaloneInventory_FoundStandaloneInventory) == 0x000479, "Member 'WBP_InventorySlot_CM_C_ExecuteUbergraph_WBP_InventorySlot_CM::CallFunc_IsChildOf_StandaloneInventory_FoundStandaloneInventory' has a wrong offset!");
static_assert(offsetof(WBP_InventorySlot_CM_C_ExecuteUbergraph_WBP_InventorySlot_CM, CallFunc_Not_PreBool_ReturnValue_3) == 0x00047A, "Member 'WBP_InventorySlot_CM_C_ExecuteUbergraph_WBP_InventorySlot_CM::CallFunc_Not_PreBool_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WBP_InventorySlot_CM_C_ExecuteUbergraph_WBP_InventorySlot_CM, K2Node_CustomEvent_InVisibility) == 0x00047B, "Member 'WBP_InventorySlot_CM_C_ExecuteUbergraph_WBP_InventorySlot_CM::K2Node_CustomEvent_InVisibility' has a wrong offset!");

// Function WBP_InventorySlot_CM.WBP_InventorySlot_CM_C.GetBagType
// 0x0010 (0x0010 - 0x0000)
struct WBP_InventorySlot_CM_C_GetBagType final
{
public:
	struct FGameplayTag                           ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           CallFunc_GetBagTypeForBagIndex_ReturnValue;        // 0x0008(0x0008)(NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_InventorySlot_CM_C_GetBagType) == 0x000004, "Wrong alignment on WBP_InventorySlot_CM_C_GetBagType");
static_assert(sizeof(WBP_InventorySlot_CM_C_GetBagType) == 0x000010, "Wrong size on WBP_InventorySlot_CM_C_GetBagType");
static_assert(offsetof(WBP_InventorySlot_CM_C_GetBagType, ReturnValue) == 0x000000, "Member 'WBP_InventorySlot_CM_C_GetBagType::ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InventorySlot_CM_C_GetBagType, CallFunc_GetBagTypeForBagIndex_ReturnValue) == 0x000008, "Member 'WBP_InventorySlot_CM_C_GetBagType::CallFunc_GetBagTypeForBagIndex_ReturnValue' has a wrong offset!");

// Function WBP_InventorySlot_CM.WBP_InventorySlot_CM_C.GetInventory
// 0x0008 (0x0008 - 0x0000)
struct WBP_InventorySlot_CM_C_GetInventory final
{
public:
	class UInventoryComponent*                    Param_Inventory;                                   // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_InventorySlot_CM_C_GetInventory) == 0x000008, "Wrong alignment on WBP_InventorySlot_CM_C_GetInventory");
static_assert(sizeof(WBP_InventorySlot_CM_C_GetInventory) == 0x000008, "Wrong size on WBP_InventorySlot_CM_C_GetInventory");
static_assert(offsetof(WBP_InventorySlot_CM_C_GetInventory, Param_Inventory) == 0x000000, "Member 'WBP_InventorySlot_CM_C_GetInventory::Param_Inventory' has a wrong offset!");

// Function WBP_InventorySlot_CM.WBP_InventorySlot_CM_C.GetItem
// 0x00C0 (0x00C0 - 0x0000)
struct WBP_InventorySlot_CM_C_GetItem final
{
public:
	struct FValeriaItem                           Item;                                              // 0x0000(0x0060)(Parm, OutParm)
	struct FValeriaItem                           CallFunc_GetItemAt_ReturnValue;                    // 0x0060(0x0060)()
};
static_assert(alignof(WBP_InventorySlot_CM_C_GetItem) == 0x000008, "Wrong alignment on WBP_InventorySlot_CM_C_GetItem");
static_assert(sizeof(WBP_InventorySlot_CM_C_GetItem) == 0x0000C0, "Wrong size on WBP_InventorySlot_CM_C_GetItem");
static_assert(offsetof(WBP_InventorySlot_CM_C_GetItem, Item) == 0x000000, "Member 'WBP_InventorySlot_CM_C_GetItem::Item' has a wrong offset!");
static_assert(offsetof(WBP_InventorySlot_CM_C_GetItem, CallFunc_GetItemAt_ReturnValue) == 0x000060, "Member 'WBP_InventorySlot_CM_C_GetItem::CallFunc_GetItemAt_ReturnValue' has a wrong offset!");

// Function WBP_InventorySlot_CM.WBP_InventorySlot_CM_C.GetItemAudioConfig
// 0x00F0 (0x00F0 - 0x0000)
struct WBP_InventorySlot_CM_C_GetItemAudioConfig final
{
public:
	struct FValeriaItem                           ValeriaItem;                                       // 0x0000(0x0060)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	struct FItemAudioConfig                       AudioConfig;                                       // 0x0060(0x0038)(Parm, OutParm)
	class UObject*                                CallFunc_LoadAsset_Blocking_ReturnValue;           // 0x0098(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UVAL_ItemTypeDefinitionAsset*           K2Node_DynamicCast_AsItem_Type_Definition;         // 0x00A0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_58FF[0x6];                                     // 0x00AA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FItemAudioConfig                       CallFunc_GetDataTableRowFromName_OutRow;           // 0x00B0(0x0038)()
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_InventorySlot_CM_C_GetItemAudioConfig) == 0x000008, "Wrong alignment on WBP_InventorySlot_CM_C_GetItemAudioConfig");
static_assert(sizeof(WBP_InventorySlot_CM_C_GetItemAudioConfig) == 0x0000F0, "Wrong size on WBP_InventorySlot_CM_C_GetItemAudioConfig");
static_assert(offsetof(WBP_InventorySlot_CM_C_GetItemAudioConfig, ValeriaItem) == 0x000000, "Member 'WBP_InventorySlot_CM_C_GetItemAudioConfig::ValeriaItem' has a wrong offset!");
static_assert(offsetof(WBP_InventorySlot_CM_C_GetItemAudioConfig, AudioConfig) == 0x000060, "Member 'WBP_InventorySlot_CM_C_GetItemAudioConfig::AudioConfig' has a wrong offset!");
static_assert(offsetof(WBP_InventorySlot_CM_C_GetItemAudioConfig, CallFunc_LoadAsset_Blocking_ReturnValue) == 0x000098, "Member 'WBP_InventorySlot_CM_C_GetItemAudioConfig::CallFunc_LoadAsset_Blocking_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InventorySlot_CM_C_GetItemAudioConfig, K2Node_DynamicCast_AsItem_Type_Definition) == 0x0000A0, "Member 'WBP_InventorySlot_CM_C_GetItemAudioConfig::K2Node_DynamicCast_AsItem_Type_Definition' has a wrong offset!");
static_assert(offsetof(WBP_InventorySlot_CM_C_GetItemAudioConfig, K2Node_DynamicCast_bSuccess) == 0x0000A8, "Member 'WBP_InventorySlot_CM_C_GetItemAudioConfig::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_InventorySlot_CM_C_GetItemAudioConfig, CallFunc_IsValid_ReturnValue) == 0x0000A9, "Member 'WBP_InventorySlot_CM_C_GetItemAudioConfig::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InventorySlot_CM_C_GetItemAudioConfig, CallFunc_GetDataTableRowFromName_OutRow) == 0x0000B0, "Member 'WBP_InventorySlot_CM_C_GetItemAudioConfig::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(WBP_InventorySlot_CM_C_GetItemAudioConfig, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x0000E8, "Member 'WBP_InventorySlot_CM_C_GetItemAudioConfig::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");

// Function WBP_InventorySlot_CM.WBP_InventorySlot_CM_C.GetTooltipWidget
// 0x0008 (0x0008 - 0x0000)
struct WBP_InventorySlot_CM_C_GetTooltipWidget final
{
public:
	class UUserWidget*                            ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_InventorySlot_CM_C_GetTooltipWidget) == 0x000008, "Wrong alignment on WBP_InventorySlot_CM_C_GetTooltipWidget");
static_assert(sizeof(WBP_InventorySlot_CM_C_GetTooltipWidget) == 0x000008, "Wrong size on WBP_InventorySlot_CM_C_GetTooltipWidget");
static_assert(offsetof(WBP_InventorySlot_CM_C_GetTooltipWidget, ReturnValue) == 0x000000, "Member 'WBP_InventorySlot_CM_C_GetTooltipWidget::ReturnValue' has a wrong offset!");

// Function WBP_InventorySlot_CM.WBP_InventorySlot_CM_C.HandleDrop
// 0x0148 (0x0148 - 0x0000)
struct WBP_InventorySlot_CM_C_HandleDrop final
{
public:
	class UVALUI_ItemDragDrop*                    Operation;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5900[0x7];                                     // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_ItemDrag_Inventory_C*               DragFromInventory;                                 // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	EValeriaFuncResult                            CallFunc_GetValeriaPlayerController_OutResult;     // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5901[0x7];                                     // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AValeriaPlayerController*               CallFunc_GetValeriaPlayerController_ReturnValue;   // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5902[0x7];                                     // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UBP_ItemDrag_Storage_C*                 K2Node_DynamicCast_AsBP_Item_Drag_Storage;         // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CanAddItemTypeHere_ReturnValue;           // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5903[0x2];                                     // 0x0042(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           Temp_struct_Variable;                              // 0x0044(0x0008)(ConstParm, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5904[0x4];                                     // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_ItemDrag_Inventory_C*               K2Node_DynamicCast_AsBP_Item_Drag_Inventory;       // 0x0050(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5905[0x7];                                     // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_ItemDrag_Gear_C*                    K2Node_DynamicCast_AsBP_Item_Drag_Gear;            // 0x0060(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5906[0x7];                                     // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                CallFunc_UnequipGear_Widget;                       // 0x0070(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UBP_ItemDrag_Storage_C*                 K2Node_DynamicCast_AsBP_Item_Drag_Storage_1;       // 0x0078(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EValeriaFuncResult                            CallFunc_GetValeriaCharacter_OutResult;            // 0x0081(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5907[0x6];                                     // 0x0082(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AValeriaCharacter*                      CallFunc_GetValeriaCharacter_ReturnValue;          // 0x0088(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPlayerInventoryComponent*              CallFunc_GetInventory_ReturnValue;                 // 0x0090(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess_1;                    // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0099(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EValeriaFuncResult                            CallFunc_GetValeriaPlayerController_OutResult_1;   // 0x009A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5908[0x5];                                     // 0x009B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class AValeriaPlayerController*               CallFunc_GetValeriaPlayerController_ReturnValue_1; // 0x00A0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FValeriaItem                           CallFunc_GetItemAt_ReturnValue;                    // 0x00A8(0x0060)()
	bool                                          K2Node_SwitchEnum_CmpSuccess_2;                    // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CanAddItemTypeHere_ReturnValue_1;         // 0x0109(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EInventoryAmount                              Temp_byte_Variable;                                // 0x010A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EInventoryAmount                              Temp_byte_Variable_1;                              // 0x010B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x010C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EValeriaFuncResult                            CallFunc_GetValeriaCharacter_OutResult_1;          // 0x010D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5909[0x2];                                     // 0x010E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class AValeriaCharacter*                      CallFunc_GetValeriaCharacter_ReturnValue_1;        // 0x0110(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UItemUpgradeComponent*                  CallFunc_GetItemUpgradeComponent_ReturnValue;      // 0x0118(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_UpgradeToolWithKit_ReturnValue;           // 0x0120(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsSlotUpgradeKit_ReturnValue;             // 0x0121(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess_3;                    // 0x0122(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EValeriaFuncResult                            CallFunc_GetValeriaPlayerController_OutResult_2;   // 0x0123(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_590A[0x4];                                     // 0x0124(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AValeriaPlayerController*               CallFunc_GetValeriaPlayerController_ReturnValue_2; // 0x0128(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess_4;                    // 0x0130(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EValeriaFuncResult                            CallFunc_GetValeriaPlayerController_OutResult_3;   // 0x0131(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_590B[0x6];                                     // 0x0132(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AValeriaPlayerController*               CallFunc_GetValeriaPlayerController_ReturnValue_3; // 0x0138(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	EInventoryAmount                              K2Node_Select_Default;                             // 0x0140(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess_5;                    // 0x0141(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_InventorySlot_CM_C_HandleDrop) == 0x000008, "Wrong alignment on WBP_InventorySlot_CM_C_HandleDrop");
static_assert(sizeof(WBP_InventorySlot_CM_C_HandleDrop) == 0x000148, "Wrong size on WBP_InventorySlot_CM_C_HandleDrop");
static_assert(offsetof(WBP_InventorySlot_CM_C_HandleDrop, Operation) == 0x000000, "Member 'WBP_InventorySlot_CM_C_HandleDrop::Operation' has a wrong offset!");
static_assert(offsetof(WBP_InventorySlot_CM_C_HandleDrop, ReturnValue) == 0x000008, "Member 'WBP_InventorySlot_CM_C_HandleDrop::ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InventorySlot_CM_C_HandleDrop, DragFromInventory) == 0x000010, "Member 'WBP_InventorySlot_CM_C_HandleDrop::DragFromInventory' has a wrong offset!");
static_assert(offsetof(WBP_InventorySlot_CM_C_HandleDrop, CallFunc_GetValeriaPlayerController_OutResult) == 0x000018, "Member 'WBP_InventorySlot_CM_C_HandleDrop::CallFunc_GetValeriaPlayerController_OutResult' has a wrong offset!");
static_assert(offsetof(WBP_InventorySlot_CM_C_HandleDrop, CallFunc_GetValeriaPlayerController_ReturnValue) == 0x000020, "Member 'WBP_InventorySlot_CM_C_HandleDrop::CallFunc_GetValeriaPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InventorySlot_CM_C_HandleDrop, K2Node_SwitchEnum_CmpSuccess) == 0x000028, "Member 'WBP_InventorySlot_CM_C_HandleDrop::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(WBP_InventorySlot_CM_C_HandleDrop, CallFunc_GetOwningPlayer_ReturnValue) == 0x000030, "Member 'WBP_InventorySlot_CM_C_HandleDrop::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InventorySlot_CM_C_HandleDrop, K2Node_DynamicCast_AsBP_Item_Drag_Storage) == 0x000038, "Member 'WBP_InventorySlot_CM_C_HandleDrop::K2Node_DynamicCast_AsBP_Item_Drag_Storage' has a wrong offset!");
static_assert(offsetof(WBP_InventorySlot_CM_C_HandleDrop, K2Node_DynamicCast_bSuccess) == 0x000040, "Member 'WBP_InventorySlot_CM_C_HandleDrop::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_InventorySlot_CM_C_HandleDrop, CallFunc_CanAddItemTypeHere_ReturnValue) == 0x000041, "Member 'WBP_InventorySlot_CM_C_HandleDrop::CallFunc_CanAddItemTypeHere_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InventorySlot_CM_C_HandleDrop, Temp_struct_Variable) == 0x000044, "Member 'WBP_InventorySlot_CM_C_HandleDrop::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(WBP_InventorySlot_CM_C_HandleDrop, K2Node_DynamicCast_AsBP_Item_Drag_Inventory) == 0x000050, "Member 'WBP_InventorySlot_CM_C_HandleDrop::K2Node_DynamicCast_AsBP_Item_Drag_Inventory' has a wrong offset!");
static_assert(offsetof(WBP_InventorySlot_CM_C_HandleDrop, K2Node_DynamicCast_bSuccess_1) == 0x000058, "Member 'WBP_InventorySlot_CM_C_HandleDrop::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(WBP_InventorySlot_CM_C_HandleDrop, K2Node_DynamicCast_AsBP_Item_Drag_Gear) == 0x000060, "Member 'WBP_InventorySlot_CM_C_HandleDrop::K2Node_DynamicCast_AsBP_Item_Drag_Gear' has a wrong offset!");
static_assert(offsetof(WBP_InventorySlot_CM_C_HandleDrop, K2Node_DynamicCast_bSuccess_2) == 0x000068, "Member 'WBP_InventorySlot_CM_C_HandleDrop::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(WBP_InventorySlot_CM_C_HandleDrop, CallFunc_UnequipGear_Widget) == 0x000070, "Member 'WBP_InventorySlot_CM_C_HandleDrop::CallFunc_UnequipGear_Widget' has a wrong offset!");
static_assert(offsetof(WBP_InventorySlot_CM_C_HandleDrop, K2Node_DynamicCast_AsBP_Item_Drag_Storage_1) == 0x000078, "Member 'WBP_InventorySlot_CM_C_HandleDrop::K2Node_DynamicCast_AsBP_Item_Drag_Storage_1' has a wrong offset!");
static_assert(offsetof(WBP_InventorySlot_CM_C_HandleDrop, K2Node_DynamicCast_bSuccess_3) == 0x000080, "Member 'WBP_InventorySlot_CM_C_HandleDrop::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(WBP_InventorySlot_CM_C_HandleDrop, CallFunc_GetValeriaCharacter_OutResult) == 0x000081, "Member 'WBP_InventorySlot_CM_C_HandleDrop::CallFunc_GetValeriaCharacter_OutResult' has a wrong offset!");
static_assert(offsetof(WBP_InventorySlot_CM_C_HandleDrop, CallFunc_GetValeriaCharacter_ReturnValue) == 0x000088, "Member 'WBP_InventorySlot_CM_C_HandleDrop::CallFunc_GetValeriaCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InventorySlot_CM_C_HandleDrop, CallFunc_GetInventory_ReturnValue) == 0x000090, "Member 'WBP_InventorySlot_CM_C_HandleDrop::CallFunc_GetInventory_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InventorySlot_CM_C_HandleDrop, K2Node_SwitchEnum_CmpSuccess_1) == 0x000098, "Member 'WBP_InventorySlot_CM_C_HandleDrop::K2Node_SwitchEnum_CmpSuccess_1' has a wrong offset!");
static_assert(offsetof(WBP_InventorySlot_CM_C_HandleDrop, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000099, "Member 'WBP_InventorySlot_CM_C_HandleDrop::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InventorySlot_CM_C_HandleDrop, CallFunc_GetValeriaPlayerController_OutResult_1) == 0x00009A, "Member 'WBP_InventorySlot_CM_C_HandleDrop::CallFunc_GetValeriaPlayerController_OutResult_1' has a wrong offset!");
static_assert(offsetof(WBP_InventorySlot_CM_C_HandleDrop, CallFunc_GetValeriaPlayerController_ReturnValue_1) == 0x0000A0, "Member 'WBP_InventorySlot_CM_C_HandleDrop::CallFunc_GetValeriaPlayerController_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_InventorySlot_CM_C_HandleDrop, CallFunc_GetItemAt_ReturnValue) == 0x0000A8, "Member 'WBP_InventorySlot_CM_C_HandleDrop::CallFunc_GetItemAt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InventorySlot_CM_C_HandleDrop, K2Node_SwitchEnum_CmpSuccess_2) == 0x000108, "Member 'WBP_InventorySlot_CM_C_HandleDrop::K2Node_SwitchEnum_CmpSuccess_2' has a wrong offset!");
static_assert(offsetof(WBP_InventorySlot_CM_C_HandleDrop, CallFunc_CanAddItemTypeHere_ReturnValue_1) == 0x000109, "Member 'WBP_InventorySlot_CM_C_HandleDrop::CallFunc_CanAddItemTypeHere_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_InventorySlot_CM_C_HandleDrop, Temp_byte_Variable) == 0x00010A, "Member 'WBP_InventorySlot_CM_C_HandleDrop::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_InventorySlot_CM_C_HandleDrop, Temp_byte_Variable_1) == 0x00010B, "Member 'WBP_InventorySlot_CM_C_HandleDrop::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_InventorySlot_CM_C_HandleDrop, Temp_bool_Variable) == 0x00010C, "Member 'WBP_InventorySlot_CM_C_HandleDrop::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_InventorySlot_CM_C_HandleDrop, CallFunc_GetValeriaCharacter_OutResult_1) == 0x00010D, "Member 'WBP_InventorySlot_CM_C_HandleDrop::CallFunc_GetValeriaCharacter_OutResult_1' has a wrong offset!");
static_assert(offsetof(WBP_InventorySlot_CM_C_HandleDrop, CallFunc_GetValeriaCharacter_ReturnValue_1) == 0x000110, "Member 'WBP_InventorySlot_CM_C_HandleDrop::CallFunc_GetValeriaCharacter_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_InventorySlot_CM_C_HandleDrop, CallFunc_GetItemUpgradeComponent_ReturnValue) == 0x000118, "Member 'WBP_InventorySlot_CM_C_HandleDrop::CallFunc_GetItemUpgradeComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InventorySlot_CM_C_HandleDrop, CallFunc_UpgradeToolWithKit_ReturnValue) == 0x000120, "Member 'WBP_InventorySlot_CM_C_HandleDrop::CallFunc_UpgradeToolWithKit_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InventorySlot_CM_C_HandleDrop, CallFunc_IsSlotUpgradeKit_ReturnValue) == 0x000121, "Member 'WBP_InventorySlot_CM_C_HandleDrop::CallFunc_IsSlotUpgradeKit_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InventorySlot_CM_C_HandleDrop, K2Node_SwitchEnum_CmpSuccess_3) == 0x000122, "Member 'WBP_InventorySlot_CM_C_HandleDrop::K2Node_SwitchEnum_CmpSuccess_3' has a wrong offset!");
static_assert(offsetof(WBP_InventorySlot_CM_C_HandleDrop, CallFunc_GetValeriaPlayerController_OutResult_2) == 0x000123, "Member 'WBP_InventorySlot_CM_C_HandleDrop::CallFunc_GetValeriaPlayerController_OutResult_2' has a wrong offset!");
static_assert(offsetof(WBP_InventorySlot_CM_C_HandleDrop, CallFunc_GetValeriaPlayerController_ReturnValue_2) == 0x000128, "Member 'WBP_InventorySlot_CM_C_HandleDrop::CallFunc_GetValeriaPlayerController_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_InventorySlot_CM_C_HandleDrop, K2Node_SwitchEnum_CmpSuccess_4) == 0x000130, "Member 'WBP_InventorySlot_CM_C_HandleDrop::K2Node_SwitchEnum_CmpSuccess_4' has a wrong offset!");
static_assert(offsetof(WBP_InventorySlot_CM_C_HandleDrop, CallFunc_GetValeriaPlayerController_OutResult_3) == 0x000131, "Member 'WBP_InventorySlot_CM_C_HandleDrop::CallFunc_GetValeriaPlayerController_OutResult_3' has a wrong offset!");
static_assert(offsetof(WBP_InventorySlot_CM_C_HandleDrop, CallFunc_GetValeriaPlayerController_ReturnValue_3) == 0x000138, "Member 'WBP_InventorySlot_CM_C_HandleDrop::CallFunc_GetValeriaPlayerController_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WBP_InventorySlot_CM_C_HandleDrop, K2Node_Select_Default) == 0x000140, "Member 'WBP_InventorySlot_CM_C_HandleDrop::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_InventorySlot_CM_C_HandleDrop, K2Node_SwitchEnum_CmpSuccess_5) == 0x000141, "Member 'WBP_InventorySlot_CM_C_HandleDrop::K2Node_SwitchEnum_CmpSuccess_5' has a wrong offset!");

// Function WBP_InventorySlot_CM.WBP_InventorySlot_CM_C.HandleInventoryChanged
// 0x0008 (0x0008 - 0x0000)
struct WBP_InventorySlot_CM_C_HandleInventoryChanged final
{
public:
	class UInventoryComponent*                    Param_Inventory;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_InventorySlot_CM_C_HandleInventoryChanged) == 0x000008, "Wrong alignment on WBP_InventorySlot_CM_C_HandleInventoryChanged");
static_assert(sizeof(WBP_InventorySlot_CM_C_HandleInventoryChanged) == 0x000008, "Wrong size on WBP_InventorySlot_CM_C_HandleInventoryChanged");
static_assert(offsetof(WBP_InventorySlot_CM_C_HandleInventoryChanged, Param_Inventory) == 0x000000, "Member 'WBP_InventorySlot_CM_C_HandleInventoryChanged::Param_Inventory' has a wrong offset!");

// Function WBP_InventorySlot_CM.WBP_InventorySlot_CM_C.HandleInventorySettingsChanged
// 0x0018 (0x0018 - 0x0000)
struct WBP_InventorySlot_CM_C_HandleInventorySettingsChanged final
{
public:
	struct FValeriaGameplaySettings               GameplaySettings;                                  // 0x0000(0x0018)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor)
};
static_assert(alignof(WBP_InventorySlot_CM_C_HandleInventorySettingsChanged) == 0x000004, "Wrong alignment on WBP_InventorySlot_CM_C_HandleInventorySettingsChanged");
static_assert(sizeof(WBP_InventorySlot_CM_C_HandleInventorySettingsChanged) == 0x000018, "Wrong size on WBP_InventorySlot_CM_C_HandleInventorySettingsChanged");
static_assert(offsetof(WBP_InventorySlot_CM_C_HandleInventorySettingsChanged, GameplaySettings) == 0x000000, "Member 'WBP_InventorySlot_CM_C_HandleInventorySettingsChanged::GameplaySettings' has a wrong offset!");

// Function WBP_InventorySlot_CM.WBP_InventorySlot_CM_C.HandleVisibilityToggled
// 0x0001 (0x0001 - 0x0000)
struct WBP_InventorySlot_CM_C_HandleVisibilityToggled final
{
public:
	ESlateVisibility                              InVisibility;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_InventorySlot_CM_C_HandleVisibilityToggled) == 0x000001, "Wrong alignment on WBP_InventorySlot_CM_C_HandleVisibilityToggled");
static_assert(sizeof(WBP_InventorySlot_CM_C_HandleVisibilityToggled) == 0x000001, "Wrong size on WBP_InventorySlot_CM_C_HandleVisibilityToggled");
static_assert(offsetof(WBP_InventorySlot_CM_C_HandleVisibilityToggled, InVisibility) == 0x000000, "Member 'WBP_InventorySlot_CM_C_HandleVisibilityToggled::InVisibility' has a wrong offset!");

// Function WBP_InventorySlot_CM.WBP_InventorySlot_CM_C.HandleWarpItem
// 0x00B8 (0x00B8 - 0x0000)
struct WBP_InventorySlot_CM_C_HandleWarpItem final
{
public:
	struct FValeriaItem                           CallFunc_GetItem_Item;                             // 0x0000(0x0060)()
	class UBP_ItemDrag_Inventory_C*               CallFunc_CreateDragDropOperation_ReturnValue;      // 0x0060(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ItemIsEmpty_ReturnValue;                  // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_590C[0x7];                                     // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0070(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue;              // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_590D[0x7];                                     // 0x0079(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UVAL_GameUISubsystem*                   CallFunc_GetLocalPlayerSubSystemFromPlayerController_ReturnValue; // 0x0080(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UDragDropOperation*                     CallFunc_GetDraggedItem_ReturnValue;               // 0x0088(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_590E[0x7];                                     // 0x0091(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UVALUI_ItemDragDrop*                    K2Node_DynamicCast_AsVALUI_Item_Drag_Drop;         // 0x0098(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_590F[0x7];                                     // 0x00A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_ItemDrag_Inventory_C*               K2Node_DynamicCast_AsBP_Item_Drag_Inventory;       // 0x00A8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HandleDrop_ReturnValue;                   // 0x00B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_InventorySlot_CM_C_HandleWarpItem) == 0x000008, "Wrong alignment on WBP_InventorySlot_CM_C_HandleWarpItem");
static_assert(sizeof(WBP_InventorySlot_CM_C_HandleWarpItem) == 0x0000B8, "Wrong size on WBP_InventorySlot_CM_C_HandleWarpItem");
static_assert(offsetof(WBP_InventorySlot_CM_C_HandleWarpItem, CallFunc_GetItem_Item) == 0x000000, "Member 'WBP_InventorySlot_CM_C_HandleWarpItem::CallFunc_GetItem_Item' has a wrong offset!");
static_assert(offsetof(WBP_InventorySlot_CM_C_HandleWarpItem, CallFunc_CreateDragDropOperation_ReturnValue) == 0x000060, "Member 'WBP_InventorySlot_CM_C_HandleWarpItem::CallFunc_CreateDragDropOperation_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InventorySlot_CM_C_HandleWarpItem, CallFunc_ItemIsEmpty_ReturnValue) == 0x000068, "Member 'WBP_InventorySlot_CM_C_HandleWarpItem::CallFunc_ItemIsEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InventorySlot_CM_C_HandleWarpItem, CallFunc_GetPlayerController_ReturnValue) == 0x000070, "Member 'WBP_InventorySlot_CM_C_HandleWarpItem::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InventorySlot_CM_C_HandleWarpItem, CallFunc_MakeLiteralByte_ReturnValue) == 0x000078, "Member 'WBP_InventorySlot_CM_C_HandleWarpItem::CallFunc_MakeLiteralByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InventorySlot_CM_C_HandleWarpItem, CallFunc_GetLocalPlayerSubSystemFromPlayerController_ReturnValue) == 0x000080, "Member 'WBP_InventorySlot_CM_C_HandleWarpItem::CallFunc_GetLocalPlayerSubSystemFromPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InventorySlot_CM_C_HandleWarpItem, CallFunc_GetDraggedItem_ReturnValue) == 0x000088, "Member 'WBP_InventorySlot_CM_C_HandleWarpItem::CallFunc_GetDraggedItem_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InventorySlot_CM_C_HandleWarpItem, CallFunc_IsValid_ReturnValue) == 0x000090, "Member 'WBP_InventorySlot_CM_C_HandleWarpItem::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InventorySlot_CM_C_HandleWarpItem, K2Node_DynamicCast_AsVALUI_Item_Drag_Drop) == 0x000098, "Member 'WBP_InventorySlot_CM_C_HandleWarpItem::K2Node_DynamicCast_AsVALUI_Item_Drag_Drop' has a wrong offset!");
static_assert(offsetof(WBP_InventorySlot_CM_C_HandleWarpItem, K2Node_DynamicCast_bSuccess) == 0x0000A0, "Member 'WBP_InventorySlot_CM_C_HandleWarpItem::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_InventorySlot_CM_C_HandleWarpItem, K2Node_DynamicCast_AsBP_Item_Drag_Inventory) == 0x0000A8, "Member 'WBP_InventorySlot_CM_C_HandleWarpItem::K2Node_DynamicCast_AsBP_Item_Drag_Inventory' has a wrong offset!");
static_assert(offsetof(WBP_InventorySlot_CM_C_HandleWarpItem, K2Node_DynamicCast_bSuccess_1) == 0x0000B0, "Member 'WBP_InventorySlot_CM_C_HandleWarpItem::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(WBP_InventorySlot_CM_C_HandleWarpItem, CallFunc_HandleDrop_ReturnValue) == 0x0000B1, "Member 'WBP_InventorySlot_CM_C_HandleWarpItem::CallFunc_HandleDrop_ReturnValue' has a wrong offset!");

// Function WBP_InventorySlot_CM.WBP_InventorySlot_CM_C.InventoryVisibilityToggled
// 0x0010 (0x0010 - 0x0000)
struct WBP_InventorySlot_CM_C_InventoryVisibilityToggled final
{
public:
	class UCommonUserWidget*                      Widget;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          bIsVisible;                                        // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_InventorySlot_CM_C_InventoryVisibilityToggled) == 0x000008, "Wrong alignment on WBP_InventorySlot_CM_C_InventoryVisibilityToggled");
static_assert(sizeof(WBP_InventorySlot_CM_C_InventoryVisibilityToggled) == 0x000010, "Wrong size on WBP_InventorySlot_CM_C_InventoryVisibilityToggled");
static_assert(offsetof(WBP_InventorySlot_CM_C_InventoryVisibilityToggled, Widget) == 0x000000, "Member 'WBP_InventorySlot_CM_C_InventoryVisibilityToggled::Widget' has a wrong offset!");
static_assert(offsetof(WBP_InventorySlot_CM_C_InventoryVisibilityToggled, bIsVisible) == 0x000008, "Member 'WBP_InventorySlot_CM_C_InventoryVisibilityToggled::bIsVisible' has a wrong offset!");

// Function WBP_InventorySlot_CM.WBP_InventorySlot_CM_C.IsChildOf_StandaloneInventory
// 0x0030 (0x0030 - 0x0000)
struct WBP_InventorySlot_CM_C_IsChildOf_StandaloneInventory final
{
public:
	bool                                          FoundStandaloneInventory;                          // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5910[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                OuterObjectToCheck;                                // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UObject*                                CallFunc_GetOuterObject_ReturnValue;               // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 CallFunc_GetObjectClass_ReturnValue;               // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ClassIsChildOf_ReturnValue;               // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5911[0x6];                                     // 0x0022(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_GetOuterObject_ReturnValue_1;             // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_InventorySlot_CM_C_IsChildOf_StandaloneInventory) == 0x000008, "Wrong alignment on WBP_InventorySlot_CM_C_IsChildOf_StandaloneInventory");
static_assert(sizeof(WBP_InventorySlot_CM_C_IsChildOf_StandaloneInventory) == 0x000030, "Wrong size on WBP_InventorySlot_CM_C_IsChildOf_StandaloneInventory");
static_assert(offsetof(WBP_InventorySlot_CM_C_IsChildOf_StandaloneInventory, FoundStandaloneInventory) == 0x000000, "Member 'WBP_InventorySlot_CM_C_IsChildOf_StandaloneInventory::FoundStandaloneInventory' has a wrong offset!");
static_assert(offsetof(WBP_InventorySlot_CM_C_IsChildOf_StandaloneInventory, OuterObjectToCheck) == 0x000008, "Member 'WBP_InventorySlot_CM_C_IsChildOf_StandaloneInventory::OuterObjectToCheck' has a wrong offset!");
static_assert(offsetof(WBP_InventorySlot_CM_C_IsChildOf_StandaloneInventory, CallFunc_GetOuterObject_ReturnValue) == 0x000010, "Member 'WBP_InventorySlot_CM_C_IsChildOf_StandaloneInventory::CallFunc_GetOuterObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InventorySlot_CM_C_IsChildOf_StandaloneInventory, CallFunc_GetObjectClass_ReturnValue) == 0x000018, "Member 'WBP_InventorySlot_CM_C_IsChildOf_StandaloneInventory::CallFunc_GetObjectClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InventorySlot_CM_C_IsChildOf_StandaloneInventory, CallFunc_IsValid_ReturnValue) == 0x000020, "Member 'WBP_InventorySlot_CM_C_IsChildOf_StandaloneInventory::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InventorySlot_CM_C_IsChildOf_StandaloneInventory, CallFunc_ClassIsChildOf_ReturnValue) == 0x000021, "Member 'WBP_InventorySlot_CM_C_IsChildOf_StandaloneInventory::CallFunc_ClassIsChildOf_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InventorySlot_CM_C_IsChildOf_StandaloneInventory, CallFunc_GetOuterObject_ReturnValue_1) == 0x000028, "Member 'WBP_InventorySlot_CM_C_IsChildOf_StandaloneInventory::CallFunc_GetOuterObject_ReturnValue_1' has a wrong offset!");

// Function WBP_InventorySlot_CM.WBP_InventorySlot_CM_C.IsInActionBar
// 0x0002 (0x0002 - 0x0000)
struct WBP_InventorySlot_CM_C_IsInActionBar final
{
public:
	bool                                          bInActionBar;                                      // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsBagInActionBar_ReturnValue;             // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_InventorySlot_CM_C_IsInActionBar) == 0x000001, "Wrong alignment on WBP_InventorySlot_CM_C_IsInActionBar");
static_assert(sizeof(WBP_InventorySlot_CM_C_IsInActionBar) == 0x000002, "Wrong size on WBP_InventorySlot_CM_C_IsInActionBar");
static_assert(offsetof(WBP_InventorySlot_CM_C_IsInActionBar, bInActionBar) == 0x000000, "Member 'WBP_InventorySlot_CM_C_IsInActionBar::bInActionBar' has a wrong offset!");
static_assert(offsetof(WBP_InventorySlot_CM_C_IsInActionBar, CallFunc_IsBagInActionBar_ReturnValue) == 0x000001, "Member 'WBP_InventorySlot_CM_C_IsInActionBar::CallFunc_IsBagInActionBar_ReturnValue' has a wrong offset!");

// Function WBP_InventorySlot_CM.WBP_InventorySlot_CM_C.OnContentChanged__DelegateSignature
// 0x0068 (0x0068 - 0x0000)
struct WBP_InventorySlot_CM_C_OnContentChanged__DelegateSignature final
{
public:
	struct FValeriaItem                           Item;                                              // 0x0000(0x0060)(BlueprintVisible, BlueprintReadOnly, Parm)
	class UWBP_InventorySlot_CM_C*                InventorySlot;                                     // 0x0060(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_InventorySlot_CM_C_OnContentChanged__DelegateSignature) == 0x000008, "Wrong alignment on WBP_InventorySlot_CM_C_OnContentChanged__DelegateSignature");
static_assert(sizeof(WBP_InventorySlot_CM_C_OnContentChanged__DelegateSignature) == 0x000068, "Wrong size on WBP_InventorySlot_CM_C_OnContentChanged__DelegateSignature");
static_assert(offsetof(WBP_InventorySlot_CM_C_OnContentChanged__DelegateSignature, Item) == 0x000000, "Member 'WBP_InventorySlot_CM_C_OnContentChanged__DelegateSignature::Item' has a wrong offset!");
static_assert(offsetof(WBP_InventorySlot_CM_C_OnContentChanged__DelegateSignature, InventorySlot) == 0x000060, "Member 'WBP_InventorySlot_CM_C_OnContentChanged__DelegateSignature::InventorySlot' has a wrong offset!");

// Function WBP_InventorySlot_CM.WBP_InventorySlot_CM_C.OnFocusLost
// 0x0008 (0x0008 - 0x0000)
struct WBP_InventorySlot_CM_C_OnFocusLost final
{
public:
	struct FFocusEvent                            InFocusEvent;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
};
static_assert(alignof(WBP_InventorySlot_CM_C_OnFocusLost) == 0x000004, "Wrong alignment on WBP_InventorySlot_CM_C_OnFocusLost");
static_assert(sizeof(WBP_InventorySlot_CM_C_OnFocusLost) == 0x000008, "Wrong size on WBP_InventorySlot_CM_C_OnFocusLost");
static_assert(offsetof(WBP_InventorySlot_CM_C_OnFocusLost, InFocusEvent) == 0x000000, "Member 'WBP_InventorySlot_CM_C_OnFocusLost::InFocusEvent' has a wrong offset!");

// Function WBP_InventorySlot_CM.WBP_InventorySlot_CM_C.OnFocusReceived
// 0x01B0 (0x01B0 - 0x0000)
struct WBP_InventorySlot_CM_C_OnFocusReceived final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FFocusEvent                            InFocusEvent;                                      // 0x0038(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	struct FEventReply                            ReturnValue;                                       // 0x0040(0x00B8)(Parm, OutParm, ReturnParm)
	struct FEventReply                            CallFunc_Handled_ReturnValue;                      // 0x00F8(0x00B8)()
};
static_assert(alignof(WBP_InventorySlot_CM_C_OnFocusReceived) == 0x000008, "Wrong alignment on WBP_InventorySlot_CM_C_OnFocusReceived");
static_assert(sizeof(WBP_InventorySlot_CM_C_OnFocusReceived) == 0x0001B0, "Wrong size on WBP_InventorySlot_CM_C_OnFocusReceived");
static_assert(offsetof(WBP_InventorySlot_CM_C_OnFocusReceived, MyGeometry) == 0x000000, "Member 'WBP_InventorySlot_CM_C_OnFocusReceived::MyGeometry' has a wrong offset!");
static_assert(offsetof(WBP_InventorySlot_CM_C_OnFocusReceived, InFocusEvent) == 0x000038, "Member 'WBP_InventorySlot_CM_C_OnFocusReceived::InFocusEvent' has a wrong offset!");
static_assert(offsetof(WBP_InventorySlot_CM_C_OnFocusReceived, ReturnValue) == 0x000040, "Member 'WBP_InventorySlot_CM_C_OnFocusReceived::ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InventorySlot_CM_C_OnFocusReceived, CallFunc_Handled_ReturnValue) == 0x0000F8, "Member 'WBP_InventorySlot_CM_C_OnFocusReceived::CallFunc_Handled_ReturnValue' has a wrong offset!");

// Function WBP_InventorySlot_CM.WBP_InventorySlot_CM_C.OpenTooltip
// 0x0068 (0x0068 - 0x0000)
struct WBP_InventorySlot_CM_C_OpenTooltip final
{
public:
	struct FValeriaItem                           CallFunc_GetItem_Item;                             // 0x0000(0x0060)()
	bool                                          CallFunc_ShouldShowDestroyWarning_bShow;           // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CanOpenTooltip_CanOpen;                   // 0x0061(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_InventorySlot_CM_C_OpenTooltip) == 0x000008, "Wrong alignment on WBP_InventorySlot_CM_C_OpenTooltip");
static_assert(sizeof(WBP_InventorySlot_CM_C_OpenTooltip) == 0x000068, "Wrong size on WBP_InventorySlot_CM_C_OpenTooltip");
static_assert(offsetof(WBP_InventorySlot_CM_C_OpenTooltip, CallFunc_GetItem_Item) == 0x000000, "Member 'WBP_InventorySlot_CM_C_OpenTooltip::CallFunc_GetItem_Item' has a wrong offset!");
static_assert(offsetof(WBP_InventorySlot_CM_C_OpenTooltip, CallFunc_ShouldShowDestroyWarning_bShow) == 0x000060, "Member 'WBP_InventorySlot_CM_C_OpenTooltip::CallFunc_ShouldShowDestroyWarning_bShow' has a wrong offset!");
static_assert(offsetof(WBP_InventorySlot_CM_C_OpenTooltip, CallFunc_CanOpenTooltip_CanOpen) == 0x000061, "Member 'WBP_InventorySlot_CM_C_OpenTooltip::CallFunc_CanOpenTooltip_CanOpen' has a wrong offset!");

// Function WBP_InventorySlot_CM.WBP_InventorySlot_CM_C.PlayClickSound
// 0x00B0 (0x00B0 - 0x0000)
struct WBP_InventorySlot_CM_C_PlayClickSound final
{
public:
	struct FValeriaItem                           ValeriaItem;                                       // 0x0000(0x0060)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	int32                                         CallFunc_AkEventGlobal_ReturnValue;                // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5912[0x4];                                     // 0x0064(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FItemAudioConfig                       CallFunc_GetItemAudioConfig_AudioConfig;           // 0x0068(0x0038)()
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5913[0x3];                                     // 0x00A1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_AkEventGlobal_ReturnValue_1;              // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5914[0x3];                                     // 0x00A9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_AkEventGlobal_ReturnValue_2;              // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_InventorySlot_CM_C_PlayClickSound) == 0x000008, "Wrong alignment on WBP_InventorySlot_CM_C_PlayClickSound");
static_assert(sizeof(WBP_InventorySlot_CM_C_PlayClickSound) == 0x0000B0, "Wrong size on WBP_InventorySlot_CM_C_PlayClickSound");
static_assert(offsetof(WBP_InventorySlot_CM_C_PlayClickSound, ValeriaItem) == 0x000000, "Member 'WBP_InventorySlot_CM_C_PlayClickSound::ValeriaItem' has a wrong offset!");
static_assert(offsetof(WBP_InventorySlot_CM_C_PlayClickSound, CallFunc_AkEventGlobal_ReturnValue) == 0x000060, "Member 'WBP_InventorySlot_CM_C_PlayClickSound::CallFunc_AkEventGlobal_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InventorySlot_CM_C_PlayClickSound, CallFunc_GetItemAudioConfig_AudioConfig) == 0x000068, "Member 'WBP_InventorySlot_CM_C_PlayClickSound::CallFunc_GetItemAudioConfig_AudioConfig' has a wrong offset!");
static_assert(offsetof(WBP_InventorySlot_CM_C_PlayClickSound, CallFunc_IsValid_ReturnValue) == 0x0000A0, "Member 'WBP_InventorySlot_CM_C_PlayClickSound::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InventorySlot_CM_C_PlayClickSound, CallFunc_AkEventGlobal_ReturnValue_1) == 0x0000A4, "Member 'WBP_InventorySlot_CM_C_PlayClickSound::CallFunc_AkEventGlobal_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_InventorySlot_CM_C_PlayClickSound, CallFunc_IsValid_ReturnValue_1) == 0x0000A8, "Member 'WBP_InventorySlot_CM_C_PlayClickSound::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_InventorySlot_CM_C_PlayClickSound, CallFunc_AkEventGlobal_ReturnValue_2) == 0x0000AC, "Member 'WBP_InventorySlot_CM_C_PlayClickSound::CallFunc_AkEventGlobal_ReturnValue_2' has a wrong offset!");

// Function WBP_InventorySlot_CM.WBP_InventorySlot_CM_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct WBP_InventorySlot_CM_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_InventorySlot_CM_C_PreConstruct) == 0x000001, "Wrong alignment on WBP_InventorySlot_CM_C_PreConstruct");
static_assert(sizeof(WBP_InventorySlot_CM_C_PreConstruct) == 0x000001, "Wrong size on WBP_InventorySlot_CM_C_PreConstruct");
static_assert(offsetof(WBP_InventorySlot_CM_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'WBP_InventorySlot_CM_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function WBP_InventorySlot_CM.WBP_InventorySlot_CM_C.SetDraggable
// 0x0001 (0x0001 - 0x0000)
struct WBP_InventorySlot_CM_C_SetDraggable final
{
public:
	bool                                          Param_bDraggable;                                  // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_InventorySlot_CM_C_SetDraggable) == 0x000001, "Wrong alignment on WBP_InventorySlot_CM_C_SetDraggable");
static_assert(sizeof(WBP_InventorySlot_CM_C_SetDraggable) == 0x000001, "Wrong size on WBP_InventorySlot_CM_C_SetDraggable");
static_assert(offsetof(WBP_InventorySlot_CM_C_SetDraggable, Param_bDraggable) == 0x000000, "Member 'WBP_InventorySlot_CM_C_SetDraggable::Param_bDraggable' has a wrong offset!");

// Function WBP_InventorySlot_CM.WBP_InventorySlot_CM_C.SetSelected
// 0x0070 (0x0070 - 0x0000)
struct WBP_InventorySlot_CM_C_SetSelected final
{
public:
	bool                                          bSelected;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsEmpty_bEmpty;                           // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5915[0x6];                                     // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FValeriaItem                           CallFunc_GetItem_Item;                             // 0x0008(0x0060)()
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0069(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_InventorySlot_CM_C_SetSelected) == 0x000008, "Wrong alignment on WBP_InventorySlot_CM_C_SetSelected");
static_assert(sizeof(WBP_InventorySlot_CM_C_SetSelected) == 0x000070, "Wrong size on WBP_InventorySlot_CM_C_SetSelected");
static_assert(offsetof(WBP_InventorySlot_CM_C_SetSelected, bSelected) == 0x000000, "Member 'WBP_InventorySlot_CM_C_SetSelected::bSelected' has a wrong offset!");
static_assert(offsetof(WBP_InventorySlot_CM_C_SetSelected, CallFunc_IsEmpty_bEmpty) == 0x000001, "Member 'WBP_InventorySlot_CM_C_SetSelected::CallFunc_IsEmpty_bEmpty' has a wrong offset!");
static_assert(offsetof(WBP_InventorySlot_CM_C_SetSelected, CallFunc_GetItem_Item) == 0x000008, "Member 'WBP_InventorySlot_CM_C_SetSelected::CallFunc_GetItem_Item' has a wrong offset!");
static_assert(offsetof(WBP_InventorySlot_CM_C_SetSelected, CallFunc_Not_PreBool_ReturnValue) == 0x000068, "Member 'WBP_InventorySlot_CM_C_SetSelected::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InventorySlot_CM_C_SetSelected, CallFunc_BooleanAND_ReturnValue) == 0x000069, "Member 'WBP_InventorySlot_CM_C_SetSelected::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function WBP_InventorySlot_CM.WBP_InventorySlot_CM_C.SetSlotStyle
// 0x0018 (0x0018 - 0x0000)
struct WBP_InventorySlot_CM_C_SetSlotStyle final
{
public:
	class UVALUI_ItemSlotStyle*                   L_ActionSlotStyle;                                 // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UVALUI_ItemSlotStyle*                   L_DefaultSlotStyle;                                // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsConsole_ReturnValue;                    // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDesktop_ReturnValue;                    // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsInActionBar_bInActionBar;               // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_InventorySlot_CM_C_SetSlotStyle) == 0x000008, "Wrong alignment on WBP_InventorySlot_CM_C_SetSlotStyle");
static_assert(sizeof(WBP_InventorySlot_CM_C_SetSlotStyle) == 0x000018, "Wrong size on WBP_InventorySlot_CM_C_SetSlotStyle");
static_assert(offsetof(WBP_InventorySlot_CM_C_SetSlotStyle, L_ActionSlotStyle) == 0x000000, "Member 'WBP_InventorySlot_CM_C_SetSlotStyle::L_ActionSlotStyle' has a wrong offset!");
static_assert(offsetof(WBP_InventorySlot_CM_C_SetSlotStyle, L_DefaultSlotStyle) == 0x000008, "Member 'WBP_InventorySlot_CM_C_SetSlotStyle::L_DefaultSlotStyle' has a wrong offset!");
static_assert(offsetof(WBP_InventorySlot_CM_C_SetSlotStyle, CallFunc_IsConsole_ReturnValue) == 0x000010, "Member 'WBP_InventorySlot_CM_C_SetSlotStyle::CallFunc_IsConsole_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InventorySlot_CM_C_SetSlotStyle, CallFunc_IsDesktop_ReturnValue) == 0x000011, "Member 'WBP_InventorySlot_CM_C_SetSlotStyle::CallFunc_IsDesktop_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InventorySlot_CM_C_SetSlotStyle, CallFunc_IsInActionBar_bInActionBar) == 0x000012, "Member 'WBP_InventorySlot_CM_C_SetSlotStyle::CallFunc_IsInActionBar_bInActionBar' has a wrong offset!");

// Function WBP_InventorySlot_CM.WBP_InventorySlot_CM_C.ShouldShowDestroyWarning
// 0x0010 (0x0010 - 0x0000)
struct WBP_InventorySlot_CM_C_ShouldShowDestroyWarning final
{
public:
	bool                                          bShow;                                             // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5916[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           CallFunc_GetBagType_ReturnValue;                   // 0x0004(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_GameplayTag_ReturnValue;       // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x000E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_InventorySlot_CM_C_ShouldShowDestroyWarning) == 0x000004, "Wrong alignment on WBP_InventorySlot_CM_C_ShouldShowDestroyWarning");
static_assert(sizeof(WBP_InventorySlot_CM_C_ShouldShowDestroyWarning) == 0x000010, "Wrong size on WBP_InventorySlot_CM_C_ShouldShowDestroyWarning");
static_assert(offsetof(WBP_InventorySlot_CM_C_ShouldShowDestroyWarning, bShow) == 0x000000, "Member 'WBP_InventorySlot_CM_C_ShouldShowDestroyWarning::bShow' has a wrong offset!");
static_assert(offsetof(WBP_InventorySlot_CM_C_ShouldShowDestroyWarning, CallFunc_GetBagType_ReturnValue) == 0x000004, "Member 'WBP_InventorySlot_CM_C_ShouldShowDestroyWarning::CallFunc_GetBagType_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InventorySlot_CM_C_ShouldShowDestroyWarning, CallFunc_EqualEqual_GameplayTag_ReturnValue) == 0x00000C, "Member 'WBP_InventorySlot_CM_C_ShouldShowDestroyWarning::CallFunc_EqualEqual_GameplayTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InventorySlot_CM_C_ShouldShowDestroyWarning, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x00000D, "Member 'WBP_InventorySlot_CM_C_ShouldShowDestroyWarning::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InventorySlot_CM_C_ShouldShowDestroyWarning, CallFunc_BooleanAND_ReturnValue) == 0x00000E, "Member 'WBP_InventorySlot_CM_C_ShouldShowDestroyWarning::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function WBP_InventorySlot_CM.WBP_InventorySlot_CM_C.ShouldShowHotkeyText
// 0x0005 (0x0005 - 0x0000)
struct WBP_InventorySlot_CM_C_ShouldShowHotkeyText final
{
public:
	bool                                          ShouldShow;                                        // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ERedirectsPlatform                            CallFunc_GetPlatformType_ReturnValue;              // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsInActionBar_bInActionBar;               // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_InventorySlot_CM_C_ShouldShowHotkeyText) == 0x000001, "Wrong alignment on WBP_InventorySlot_CM_C_ShouldShowHotkeyText");
static_assert(sizeof(WBP_InventorySlot_CM_C_ShouldShowHotkeyText) == 0x000005, "Wrong size on WBP_InventorySlot_CM_C_ShouldShowHotkeyText");
static_assert(offsetof(WBP_InventorySlot_CM_C_ShouldShowHotkeyText, ShouldShow) == 0x000000, "Member 'WBP_InventorySlot_CM_C_ShouldShowHotkeyText::ShouldShow' has a wrong offset!");
static_assert(offsetof(WBP_InventorySlot_CM_C_ShouldShowHotkeyText, CallFunc_GetPlatformType_ReturnValue) == 0x000001, "Member 'WBP_InventorySlot_CM_C_ShouldShowHotkeyText::CallFunc_GetPlatformType_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InventorySlot_CM_C_ShouldShowHotkeyText, CallFunc_IsInActionBar_bInActionBar) == 0x000002, "Member 'WBP_InventorySlot_CM_C_ShouldShowHotkeyText::CallFunc_IsInActionBar_bInActionBar' has a wrong offset!");
static_assert(offsetof(WBP_InventorySlot_CM_C_ShouldShowHotkeyText, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000003, "Member 'WBP_InventorySlot_CM_C_ShouldShowHotkeyText::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InventorySlot_CM_C_ShouldShowHotkeyText, CallFunc_BooleanAND_ReturnValue) == 0x000004, "Member 'WBP_InventorySlot_CM_C_ShouldShowHotkeyText::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function WBP_InventorySlot_CM.WBP_InventorySlot_CM_C.ShouldUpdateSlotFromEvent
// 0x0002 (0x0002 - 0x0000)
struct WBP_InventorySlot_CM_C_ShouldUpdateSlotFromEvent final
{
public:
	bool                                          UpdateNow;                                         // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsVisible_ReturnValue;                    // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_InventorySlot_CM_C_ShouldUpdateSlotFromEvent) == 0x000001, "Wrong alignment on WBP_InventorySlot_CM_C_ShouldUpdateSlotFromEvent");
static_assert(sizeof(WBP_InventorySlot_CM_C_ShouldUpdateSlotFromEvent) == 0x000002, "Wrong size on WBP_InventorySlot_CM_C_ShouldUpdateSlotFromEvent");
static_assert(offsetof(WBP_InventorySlot_CM_C_ShouldUpdateSlotFromEvent, UpdateNow) == 0x000000, "Member 'WBP_InventorySlot_CM_C_ShouldUpdateSlotFromEvent::UpdateNow' has a wrong offset!");
static_assert(offsetof(WBP_InventorySlot_CM_C_ShouldUpdateSlotFromEvent, CallFunc_IsVisible_ReturnValue) == 0x000001, "Member 'WBP_InventorySlot_CM_C_ShouldUpdateSlotFromEvent::CallFunc_IsVisible_ReturnValue' has a wrong offset!");

// Function WBP_InventorySlot_CM.WBP_InventorySlot_CM_C.ShowFocusTip
// 0x0001 (0x0001 - 0x0000)
struct WBP_InventorySlot_CM_C_ShowFocusTip final
{
public:
	bool                                          bIsShow;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_InventorySlot_CM_C_ShowFocusTip) == 0x000001, "Wrong alignment on WBP_InventorySlot_CM_C_ShowFocusTip");
static_assert(sizeof(WBP_InventorySlot_CM_C_ShowFocusTip) == 0x000001, "Wrong size on WBP_InventorySlot_CM_C_ShowFocusTip");
static_assert(offsetof(WBP_InventorySlot_CM_C_ShowFocusTip, bIsShow) == 0x000000, "Member 'WBP_InventorySlot_CM_C_ShowFocusTip::bIsShow' has a wrong offset!");

// Function WBP_InventorySlot_CM.WBP_InventorySlot_CM_C.UpdateSize
// 0x0030 (0x0030 - 0x0000)
struct WBP_InventorySlot_CM_C_UpdateSize final
{
public:
	struct FVector2D                              CallFunc_Map_Find_Value;                           // 0x0000(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5917[0x7];                                     // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_BreakVector2D_X;                          // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y;                          // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetWidthOverride_InWidthOverride_ImplicitCast; // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetHeightOverride_InHeightOverride_ImplicitCast; // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_InventorySlot_CM_C_UpdateSize) == 0x000008, "Wrong alignment on WBP_InventorySlot_CM_C_UpdateSize");
static_assert(sizeof(WBP_InventorySlot_CM_C_UpdateSize) == 0x000030, "Wrong size on WBP_InventorySlot_CM_C_UpdateSize");
static_assert(offsetof(WBP_InventorySlot_CM_C_UpdateSize, CallFunc_Map_Find_Value) == 0x000000, "Member 'WBP_InventorySlot_CM_C_UpdateSize::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(WBP_InventorySlot_CM_C_UpdateSize, CallFunc_Map_Find_ReturnValue) == 0x000010, "Member 'WBP_InventorySlot_CM_C_UpdateSize::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InventorySlot_CM_C_UpdateSize, CallFunc_BreakVector2D_X) == 0x000018, "Member 'WBP_InventorySlot_CM_C_UpdateSize::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(WBP_InventorySlot_CM_C_UpdateSize, CallFunc_BreakVector2D_Y) == 0x000020, "Member 'WBP_InventorySlot_CM_C_UpdateSize::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(WBP_InventorySlot_CM_C_UpdateSize, CallFunc_SetWidthOverride_InWidthOverride_ImplicitCast) == 0x000028, "Member 'WBP_InventorySlot_CM_C_UpdateSize::CallFunc_SetWidthOverride_InWidthOverride_ImplicitCast' has a wrong offset!");
static_assert(offsetof(WBP_InventorySlot_CM_C_UpdateSize, CallFunc_SetHeightOverride_InHeightOverride_ImplicitCast) == 0x00002C, "Member 'WBP_InventorySlot_CM_C_UpdateSize::CallFunc_SetHeightOverride_InHeightOverride_ImplicitCast' has a wrong offset!");

// Function WBP_InventorySlot_CM.WBP_InventorySlot_CM_C.UpdateTextStyle
// 0x0018 (0x0018 - 0x0000)
struct WBP_InventorySlot_CM_C_UpdateTextStyle final
{
public:
	bool                                          IsHighlighted;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5918[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UVALUI_TextBlockStyle*                  TextBlockStyle;                                    // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsSelected_bSelected;                     // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_InventorySlot_CM_C_UpdateTextStyle) == 0x000008, "Wrong alignment on WBP_InventorySlot_CM_C_UpdateTextStyle");
static_assert(sizeof(WBP_InventorySlot_CM_C_UpdateTextStyle) == 0x000018, "Wrong size on WBP_InventorySlot_CM_C_UpdateTextStyle");
static_assert(offsetof(WBP_InventorySlot_CM_C_UpdateTextStyle, IsHighlighted) == 0x000000, "Member 'WBP_InventorySlot_CM_C_UpdateTextStyle::IsHighlighted' has a wrong offset!");
static_assert(offsetof(WBP_InventorySlot_CM_C_UpdateTextStyle, TextBlockStyle) == 0x000008, "Member 'WBP_InventorySlot_CM_C_UpdateTextStyle::TextBlockStyle' has a wrong offset!");
static_assert(offsetof(WBP_InventorySlot_CM_C_UpdateTextStyle, K2Node_SwitchEnum_CmpSuccess) == 0x000010, "Member 'WBP_InventorySlot_CM_C_UpdateTextStyle::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(WBP_InventorySlot_CM_C_UpdateTextStyle, CallFunc_IsSelected_bSelected) == 0x000011, "Member 'WBP_InventorySlot_CM_C_UpdateTextStyle::CallFunc_IsSelected_bSelected' has a wrong offset!");
static_assert(offsetof(WBP_InventorySlot_CM_C_UpdateTextStyle, CallFunc_BooleanOR_ReturnValue) == 0x000012, "Member 'WBP_InventorySlot_CM_C_UpdateTextStyle::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");

// Function WBP_InventorySlot_CM.WBP_InventorySlot_CM_C.UpdateVisibilityAndContent
// 0x0005 (0x0005 - 0x0000)
struct WBP_InventorySlot_CM_C_UpdateVisibilityAndContent final
{
public:
	bool                                          LocalIsVisible;                                    // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsVisible_ReturnValue;                    // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsSelfOrParentHidden_ReturnValue;         // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_InventorySlot_CM_C_UpdateVisibilityAndContent) == 0x000001, "Wrong alignment on WBP_InventorySlot_CM_C_UpdateVisibilityAndContent");
static_assert(sizeof(WBP_InventorySlot_CM_C_UpdateVisibilityAndContent) == 0x000005, "Wrong size on WBP_InventorySlot_CM_C_UpdateVisibilityAndContent");
static_assert(offsetof(WBP_InventorySlot_CM_C_UpdateVisibilityAndContent, LocalIsVisible) == 0x000000, "Member 'WBP_InventorySlot_CM_C_UpdateVisibilityAndContent::LocalIsVisible' has a wrong offset!");
static_assert(offsetof(WBP_InventorySlot_CM_C_UpdateVisibilityAndContent, CallFunc_IsVisible_ReturnValue) == 0x000001, "Member 'WBP_InventorySlot_CM_C_UpdateVisibilityAndContent::CallFunc_IsVisible_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InventorySlot_CM_C_UpdateVisibilityAndContent, CallFunc_BooleanAND_ReturnValue) == 0x000002, "Member 'WBP_InventorySlot_CM_C_UpdateVisibilityAndContent::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InventorySlot_CM_C_UpdateVisibilityAndContent, CallFunc_IsSelfOrParentHidden_ReturnValue) == 0x000003, "Member 'WBP_InventorySlot_CM_C_UpdateVisibilityAndContent::CallFunc_IsSelfOrParentHidden_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InventorySlot_CM_C_UpdateVisibilityAndContent, CallFunc_Not_PreBool_ReturnValue) == 0x000004, "Member 'WBP_InventorySlot_CM_C_UpdateVisibilityAndContent::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function WBP_InventorySlot_CM.WBP_InventorySlot_CM_C.IsEmpty
// 0x0002 (0x0002 - 0x0000)
struct WBP_InventorySlot_CM_C_IsEmpty final
{
public:
	bool                                          bIsEmpty;                                          // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsEmpty_bEmpty;                           // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_InventorySlot_CM_C_IsEmpty) == 0x000001, "Wrong alignment on WBP_InventorySlot_CM_C_IsEmpty");
static_assert(sizeof(WBP_InventorySlot_CM_C_IsEmpty) == 0x000002, "Wrong size on WBP_InventorySlot_CM_C_IsEmpty");
static_assert(offsetof(WBP_InventorySlot_CM_C_IsEmpty, bIsEmpty) == 0x000000, "Member 'WBP_InventorySlot_CM_C_IsEmpty::bIsEmpty' has a wrong offset!");
static_assert(offsetof(WBP_InventorySlot_CM_C_IsEmpty, CallFunc_IsEmpty_bEmpty) == 0x000001, "Member 'WBP_InventorySlot_CM_C_IsEmpty::CallFunc_IsEmpty_bEmpty' has a wrong offset!");

}

