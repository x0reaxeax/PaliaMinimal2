#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: S6UICommonWidgets

#include "Basic.hpp"

#include "SlateCore_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK
{

// ScriptStruct S6UICommonWidgets.S6UI_BackgroundBlurSettings
// 0x0100 (0x0100 - 0x0000)
struct FS6UI_BackgroundBlurSettings final
{
public:
	struct FLinearColor                           Color;                                             // 0x0000(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FMargin                                Padding;                                           // 0x0010(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	EHorizontalAlignment                          HorizontalAlignment;                               // 0x0020(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EVerticalAlignment                            VerticalAlignment;                                 // 0x0021(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bApplyAlphaToBlur;                                 // 0x0022(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2C99[0x1];                                     // 0x0023(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         BlurStrength;                                      // 0x0024(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bOverrideAutoRadiusCalculation;                    // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2C9A[0x3];                                     // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         BlurRadius;                                        // 0x002C(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FSlateBrush                            LowQualityFallbackBrush;                           // 0x0030(0x00D0)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
};
static_assert(alignof(FS6UI_BackgroundBlurSettings) == 0x000010, "Wrong alignment on FS6UI_BackgroundBlurSettings");
static_assert(sizeof(FS6UI_BackgroundBlurSettings) == 0x000100, "Wrong size on FS6UI_BackgroundBlurSettings");
static_assert(offsetof(FS6UI_BackgroundBlurSettings, Color) == 0x000000, "Member 'FS6UI_BackgroundBlurSettings::Color' has a wrong offset!");
static_assert(offsetof(FS6UI_BackgroundBlurSettings, Padding) == 0x000010, "Member 'FS6UI_BackgroundBlurSettings::Padding' has a wrong offset!");
static_assert(offsetof(FS6UI_BackgroundBlurSettings, HorizontalAlignment) == 0x000020, "Member 'FS6UI_BackgroundBlurSettings::HorizontalAlignment' has a wrong offset!");
static_assert(offsetof(FS6UI_BackgroundBlurSettings, VerticalAlignment) == 0x000021, "Member 'FS6UI_BackgroundBlurSettings::VerticalAlignment' has a wrong offset!");
static_assert(offsetof(FS6UI_BackgroundBlurSettings, bApplyAlphaToBlur) == 0x000022, "Member 'FS6UI_BackgroundBlurSettings::bApplyAlphaToBlur' has a wrong offset!");
static_assert(offsetof(FS6UI_BackgroundBlurSettings, BlurStrength) == 0x000024, "Member 'FS6UI_BackgroundBlurSettings::BlurStrength' has a wrong offset!");
static_assert(offsetof(FS6UI_BackgroundBlurSettings, bOverrideAutoRadiusCalculation) == 0x000028, "Member 'FS6UI_BackgroundBlurSettings::bOverrideAutoRadiusCalculation' has a wrong offset!");
static_assert(offsetof(FS6UI_BackgroundBlurSettings, BlurRadius) == 0x00002C, "Member 'FS6UI_BackgroundBlurSettings::BlurRadius' has a wrong offset!");
static_assert(offsetof(FS6UI_BackgroundBlurSettings, LowQualityFallbackBrush) == 0x000030, "Member 'FS6UI_BackgroundBlurSettings::LowQualityFallbackBrush' has a wrong offset!");

// ScriptStruct S6UICommonWidgets.S6UI_FEditableRichTextStyleRow
// 0x02F8 (0x0300 - 0x0008)
struct FS6UI_FEditableRichTextStyleRow final : public FTableRowBase
{
public:
	uint8                                         Pad_2C9B[0x8];                                     // 0x0008(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEditableTextStyle                     TextStyle;                                         // 0x0010(0x02F0)(Edit, NativeAccessSpecifierPublic)
};
static_assert(alignof(FS6UI_FEditableRichTextStyleRow) == 0x000010, "Wrong alignment on FS6UI_FEditableRichTextStyleRow");
static_assert(sizeof(FS6UI_FEditableRichTextStyleRow) == 0x000300, "Wrong size on FS6UI_FEditableRichTextStyleRow");
static_assert(offsetof(FS6UI_FEditableRichTextStyleRow, TextStyle) == 0x000010, "Member 'FS6UI_FEditableRichTextStyleRow::TextStyle' has a wrong offset!");

// ScriptStruct S6UICommonWidgets.S6UI_FRichImageRow_Soft
// 0x0048 (0x0050 - 0x0008)
struct FS6UI_FRichImageRow_Soft final : public FTableRowBase
{
public:
	TSoftObjectPtr<class UTexture2D>              ImageTexture;                                      // 0x0008(0x0028)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                              ImageSize;                                         // 0x0030(0x0010)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                           TintColor;                                         // 0x0040(0x0010)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FS6UI_FRichImageRow_Soft) == 0x000008, "Wrong alignment on FS6UI_FRichImageRow_Soft");
static_assert(sizeof(FS6UI_FRichImageRow_Soft) == 0x000050, "Wrong size on FS6UI_FRichImageRow_Soft");
static_assert(offsetof(FS6UI_FRichImageRow_Soft, ImageTexture) == 0x000008, "Member 'FS6UI_FRichImageRow_Soft::ImageTexture' has a wrong offset!");
static_assert(offsetof(FS6UI_FRichImageRow_Soft, ImageSize) == 0x000030, "Member 'FS6UI_FRichImageRow_Soft::ImageSize' has a wrong offset!");
static_assert(offsetof(FS6UI_FRichImageRow_Soft, TintColor) == 0x000040, "Member 'FS6UI_FRichImageRow_Soft::TintColor' has a wrong offset!");

// ScriptStruct S6UICommonWidgets.S6UI_RichTextHyperlinkStyle
// 0x0758 (0x0760 - 0x0008)
struct FS6UI_RichTextHyperlinkStyle final : public FTableRowBase
{
public:
	uint8                                         Pad_2C9C[0x8];                                     // 0x0008(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHyperlinkStyle                        Style;                                             // 0x0010(0x0750)(Edit, NativeAccessSpecifierPublic)
};
static_assert(alignof(FS6UI_RichTextHyperlinkStyle) == 0x000010, "Wrong alignment on FS6UI_RichTextHyperlinkStyle");
static_assert(sizeof(FS6UI_RichTextHyperlinkStyle) == 0x000760, "Wrong size on FS6UI_RichTextHyperlinkStyle");
static_assert(offsetof(FS6UI_RichTextHyperlinkStyle, Style) == 0x000010, "Member 'FS6UI_RichTextHyperlinkStyle::Style' has a wrong offset!");

}

