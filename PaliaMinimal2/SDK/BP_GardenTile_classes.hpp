#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_GardenTile

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "Palia_structs.hpp"
#include "Palia_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_GardenTile.BP_GardenTile_C
// 0x0290 (0x07B0 - 0x0520)
class ABP_GardenTile_C final : public AGardenTile
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0520(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UBP_PlateHealthBar_Tree_C*              BP_PlateHealthBar;                                 // 0x0528(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UAkComponent*                           HarvestableAudio;                                  // 0x0530(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UComp_PlaceableAudio_C*                 Comp_PlaceableAudio;                               // 0x0538(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UNiagaraComponent*                      NS_Fertilizer_Idle;                                // 0x0540(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UTextRenderComponent*                   DebugMultiGridInfo;                                // 0x0548(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   HiddenLoot;                                        // 0x0550(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UArrowComponent*                        Fertilizer_root;                                   // 0x0558(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_plotSelection;                                  // 0x0560(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UDecalComponent*                        Decal_selection;                                   // 0x0568(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USpotLightComponent*                    Light_Selection;                                   // 0x0570(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UArrowComponent*                        Selection_root;                                    // 0x0578(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UArrowComponent*                        Vfx_root;                                          // 0x0580(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UDecalComponent*                        Decal;                                             // 0x0588(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBP_WaterDropletPlate_C*                BP_GardenPlate;                                    // 0x0590(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBP_PlateWidgetComponent_C*             WeedPlate;                                         // 0x0598(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Weed02;                                            // 0x05A0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Weed01;                                            // 0x05A8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Weed00;                                            // 0x05B0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         TL_seedingMe_seeding_2E6931844EDBB4E08CBBB182CAD0C4D6; // 0x05B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            TL_seedingMe__Direction_2E6931844EDBB4E08CBBB182CAD0C4D6; // 0x05BC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_519B[0x3];                                     // 0x05BD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     TL_seedingMe;                                      // 0x05C0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	float                                         TL_tillRevert_Tilled_9F46A20D41E6501E8A9675AFED64CB0C; // 0x05C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            TL_tillRevert__Direction_9F46A20D41E6501E8A9675AFED64CB0C; // 0x05CC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_519C[0x3];                                     // 0x05CD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     TL_tillRevert;                                     // 0x05D0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         LastWeedState;                                     // 0x05D8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_519D[0x4];                                     // 0x05DC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UTextureRenderTarget2D*                 TillingMask;                                       // 0x05E0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	bool                                          SentWaterRpcToServer;                              // 0x05E8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_519E[0x3];                                     // 0x05E9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         AmountWatered;                                     // 0x05EC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        TimeToResetWaterStatus;                            // 0x05F0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        WaterResetCooldown;                                // 0x05F8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          WasWatered;                                        // 0x0600(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_519F[0x7];                                     // 0x0601(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               FertilizerDynamicMaterialInstance;                 // 0x0608(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	bool                                          TillFull_vfx;                                      // 0x0610(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          NeedsOffset;                                       // 0x0611(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          HasOffset;                                         // 0x0612(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_51A0[0x5];                                     // 0x0613(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                WaterDropletOffset;                                // 0x0618(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   LastCalculatedFertilizerString;                    // 0x0630(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)
	int32                                         LastCheckedFertilizerLength;                       // 0x0648(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_51A1[0x4];                                     // 0x064C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UNiagaraComponent*                      NS_HarvestIdle;                                    // 0x0650(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          IsDisplayingHiddenLoot;                            // 0x0658(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_51A2[0x7];                                     // 0x0659(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        HiddenLootConstOffset;                             // 0x0660(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        HiddenLootStartingZ;                               // 0x0668(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        HiddenLootTargetZ;                                 // 0x0670(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Color_tilled;                                      // 0x0678(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Color_watered;                                     // 0x0688(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Color_ferted;                                      // 0x0698(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   WateredParamName;                                  // 0x06A8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        LastKnownPlotMeshUnplantedIsWatered;               // 0x06B0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        LastKnownPlantMeshIsWatered;                       // 0x06B8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   FertilizedParamName;                               // 0x06C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        LastKnownPlotMeshUnplantedFertilized;              // 0x06C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        LastKnownPlantMeshFertilized;                      // 0x06D0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   TilledParamName;                                   // 0x06D8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        LastKnownPlotMeshUnplantedIsTilled;                // 0x06E0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          OldIsChild;                                        // 0x06E8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          OLDIsParent;                                       // 0x06E9(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          OLDIsSolo;                                         // 0x06EA(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_51A3[0x5];                                     // 0x06EB(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UAkAudioEvent*                          SeedPlantedSound;                                  // 0x06F0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAkAudioEvent*                          SeedCantPlantSound;                                // 0x06F8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAkAudioEvent*                          PlotHoverAvailableSFX;                             // 0x0700(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Is_Available;                                      // 0x0708(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash)
	bool                                          LastHadAnyTilled;                                  // 0x0709(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_51A4[0x6];                                     // 0x070A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                PlotMeshUnplantedOffset;                           // 0x0710(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ShouldWaterPlateBeVisible;                         // 0x0728(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ShouldIconPlateBeVisible;                          // 0x0729(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ShouldBuffPlateBeVisible;                          // 0x072A(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_51A5[0x5];                                     // 0x072B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UVAL_ItemTypeDefinitionAsset*           Fertilized_Item_Type;                              // 0x0730(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UVAL_ItemTypeDefinitionAsset*           MyFertBuff;                                        // 0x0738(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	EGardenBuffEffectType                         FertBuff_Type;                                     // 0x0740(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_51A6[0x3];                                     // 0x0741(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   SeededParamName;                                   // 0x0744(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_51A7[0x4];                                     // 0x074C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        LastKnownPlotMeshUnplantedIsSeeded;                // 0x0750(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class FString>                         String_NS_FertType;                                // 0x0758(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	bool                                          IsPlayingAudio;                                    // 0x0768(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_51A8[0x7];                                     // 0x0769(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        PlateZOffset;                                      // 0x0770(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   NewVar;                                            // 0x0778(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FVector                                BoundsToUse;                                       // 0x0790(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UVitalsComponent*                       VitalsComp;                                        // 0x07A8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)

public:
	void BeginSeedingSFX(class AActor* Param_Instigator);
	void CanBuffPlateBeVisible(bool* PlateVisible, bool CallFunc_IsPlanted_ReturnValue, bool CallFunc_IsPlantMaster_ReturnValue, bool CallFunc_Not_PreBool_ReturnValue, bool CallFunc_BooleanOR_ReturnValue, bool CallFunc_HasValidGardenData_ReturnValue);
	void Check_and_Set_Plate_Offset(const struct FVector2D& CallFunc_GetPlantCenter_OutLocation, const struct FVector& CallFunc_K2_GetComponentLocation_ReturnValue, double CallFunc_BreakVector2D_X, double CallFunc_BreakVector2D_Y, double CallFunc_BreakVector_X, double CallFunc_BreakVector_Y, double CallFunc_BreakVector_Z, double CallFunc_Add_DoubleDouble_ReturnValue, const struct FVector& CallFunc_MakeVector_ReturnValue, const struct FHitResult& CallFunc_K2_SetWorldLocation_SweepHitResult);
	void Client_HandleHealthChanged(class AActor* InstigatingPlayer, int32 HealthChange, int32 NewHealth);
	void DebugTick(double ChildZOffset, bool WasChanged, bool CallFunc_BuildIsShipping_ReturnValue);
	void Event_plotSelection_changeState(EPlantingState PlantState);
	void Event_plotSelection_init();
	void Event_plotSpawn();
	void Event_tilledRevert();
	void EventOnFullyWatered(class AGardenTile* GardenTile);
	void EventOnWaterChanged(class AGardenTile* GardenTile);
	void ExecuteUbergraph_BP_GardenTile(int32 EntryPoint, const struct FVector& CallFunc_K2_GetActorLocation_ReturnValue, class UNiagaraComponent* CallFunc_SpawnSystemAttached_ReturnValue, class AValeriaCharacter* K2Node_Event_actor_1, class UVAL_ItemTypeDefinitionAsset* K2Node_Event_SeedItemType_1, class UNiagaraComponent* CallFunc_SpawnSystemAttached_ReturnValue_1, const struct FVector& CallFunc_K2_GetComponentLocation_ReturnValue, double CallFunc_BreakVector_X, double CallFunc_BreakVector_Y, double CallFunc_BreakVector_Z, const struct FVector& CallFunc_K2_GetComponentLocation_ReturnValue_1, double CallFunc_BreakVector_X_1, double CallFunc_BreakVector_Y_1, double CallFunc_BreakVector_Z_1, const struct FVector& CallFunc_MakeVector_ReturnValue, const struct FHitResult& CallFunc_K2_SetWorldLocation_SweepHitResult, class UNiagaraComponent* CallFunc_SpawnSystemAttached_ReturnValue_2, class AValeriaCharacter* K2Node_Event_actor, class UVAL_ItemTypeDefinitionAsset* K2Node_Event_FertilizedItemType_1, const struct FVector& CallFunc_K2_GetComponentLocation_ReturnValue_2, const struct FVector& CallFunc_GetComponentBounds_Origin, const struct FVector& CallFunc_GetComponentBounds_BoxExtent, float CallFunc_GetComponentBounds_SphereRadius, class UNiagaraComponent* CallFunc_SpawnSystemAtLocation_ReturnValue, const struct FVector& CallFunc_K2_GetComponentLocation_ReturnValue_3, const struct FVector& CallFunc_GetComponentBounds_Origin_1, const struct FVector& CallFunc_GetComponentBounds_BoxExtent_1, float CallFunc_GetComponentBounds_SphereRadius_1, class UNiagaraComponent* CallFunc_SpawnSystemAtLocation_ReturnValue_1, bool CallFunc_IsValid_ReturnValue, class UNiagaraComponent* CallFunc_SpawnSystemAttached_ReturnValue_3, bool CallFunc_IsValid_ReturnValue_1, EPlantingState K2Node_CustomEvent_NewState, bool CallFunc_SetStaticMesh_ReturnValue, class AActor* K2Node_CustomEvent_instigator, EPlantingState K2Node_CustomEvent_plantState, int32 CallFunc_AkEventActor_ReturnValue, bool K2Node_SwitchEnum_CmpSuccess, bool K2Node_CustomEvent_IsAvailable, int32 CallFunc_AkEventActor_ReturnValue_1, int32 CallFunc_AkEventActor_ReturnValue_2, bool CallFunc_HasAnyTilling_ReturnValue, bool CallFunc_Not_PreBool_ReturnValue, bool CallFunc_BooleanAND_ReturnValue, float CallFunc_GetWateredPercent_ReturnValue, class UNiagaraComponent* CallFunc_SpawnSystemAttached_ReturnValue_4, bool CallFunc_HasValidGardenData_ReturnValue, bool CallFunc_SetStaticMesh_ReturnValue_1, float K2Node_Event_DeltaSeconds, EMinigameState K2Node_CustomEvent_state, class UVAL_ItemTypeDefinitionAsset* K2Node_Event_FertilizedItemType, class UVAL_ItemTypeDefinitionAsset* K2Node_Event_SeedItemType, class AGardenTile* K2Node_CustomEvent_gardenTile_1, TDelegate<void(class UVAL_ItemTypeDefinitionAsset* PlantItemType, bool OutRepeatHarvest)> K2Node_CreateDelegate_OutputDelegate, TDelegate<void(class AGardenTile* GardenTile)> K2Node_CreateDelegate_OutputDelegate_1, class UVAL_ItemTypeDefinitionAsset* K2Node_Event_PlantItemType, bool K2Node_Event_RepeatHarvest, const struct FFormatArgumentData& K2Node_MakeStruct_FormatArgumentData, TArray<struct FFormatArgumentData>& K2Node_MakeArray_Array, class FText CallFunc_Format_ReturnValue, const class FString& CallFunc_Conv_TextToString_ReturnValue, TDelegate<void()> K2Node_CreateDelegate_OutputDelegate_2, const struct FTimerHandle& CallFunc_K2_SetTimerDelegate_ReturnValue, class AGardenTile* K2Node_CustomEvent_gardenTile, int32 CallFunc_PlayPersistSoundLoop_ReturnValue, class UVAL_ItemTypeDefinitionAsset* K2Node_CustomEvent_PlantItemType, bool K2Node_CustomEvent_outRepeatHarvest, const struct FFormatArgumentData& K2Node_MakeStruct_FormatArgumentData_1, bool CallFunc_Not_PreBool_ReturnValue_1, TArray<struct FFormatArgumentData>& K2Node_MakeArray_Array_1, class FText CallFunc_Format_ReturnValue_1, const class FString& CallFunc_Conv_TextToString_ReturnValue_1, TDelegate<void(class AGardenTile* GardenTile)> K2Node_CreateDelegate_OutputDelegate_3, bool CallFunc_IsValid_ReturnValue_2, const struct FVector& CallFunc_GetComponentBounds_Origin_2, const struct FVector& CallFunc_GetComponentBounds_BoxExtent_2, float CallFunc_GetComponentBounds_SphereRadius_2, bool CallFunc_IsReadyToHarvest_ReturnValue, bool CallFunc_BooleanAND_ReturnValue_1, TDelegate<void()> K2Node_CreateDelegate_OutputDelegate_4, const struct FTimerHandle& CallFunc_K2_SetTimerDelegate_ReturnValue_1, class AActor* K2Node_Event_InstigatingPlayer, int32 K2Node_Event_HealthChange, int32 K2Node_Event_NewHealth, bool CallFunc_Less_IntInt_ReturnValue, class UAkComponent* CallFunc_AkEventLocation_AkComponent, int32 CallFunc_AkEventLocation_Playing_ID, const struct FVitalsChangeContext& K2Node_MakeStruct_VitalsChangeContext, TDelegate<void(EMinigameState State)> K2Node_CreateDelegate_OutputDelegate_5, class UUserWidget* CallFunc_GetUserWidgetObject_ReturnValue, class UWBP_GardenPlotActor_WeedStatusPlate_C* K2Node_DynamicCast_AsWBP_Garden_Plot_Actor_Weed_Status_Plate, bool K2Node_DynamicCast_bSuccess, TDelegate<void(EPlantingState NewState)> K2Node_CreateDelegate_OutputDelegate_6, bool CallFunc_IsServer_ReturnValue, double CallFunc_Add_DoubleDouble_ReturnValue, class UVitalsComponent* CallFunc_GetVitals_ReturnValue, int32 CallFunc_GetVital_ReturnValue, int32 CallFunc_Subtract_IntInt_ReturnValue, const struct FVitalsChange& K2Node_MakeStruct_VitalsChange, int32 CallFunc_GetVital_ReturnValue_1, bool CallFunc_TryVitalChange_ReturnValue, bool CallFunc_LessEqual_IntInt_ReturnValue, bool CallFunc_IsServer_ReturnValue_1, bool CallFunc_IsServer_ReturnValue_2, bool CallFunc_IsServer_ReturnValue_3, double CallFunc_UpdateMaterialInstanceValue_ParamValue_ImplicitCast, double CallFunc_UpdateMaterialInstanceValue_ParamValue_ImplicitCast_1, double CallFunc_ManageHiddenLoot_DeltaTime_ImplicitCast, double CallFunc_UpdateMaterialInstanceValue_ParamValue_ImplicitCast_2);
	class UImage* GetMinigameImage(class UUserWidget* CallFunc_GetUserWidgetObject_ReturnValue, class UWBP_GardenPlotActor_WeedStatusPlate_C* K2Node_DynamicCast_AsWBP_Garden_Plot_Actor_Weed_Status_Plate, bool K2Node_DynamicCast_bSuccess);
	void GetRequiredWaterAmount(int32* MaxAmount);
	void HideHealthBar();
	void ManageHiddenLoot(double DeltaTime, const struct FVector& CallFunc_K2_GetComponentLocation_ReturnValue, double CallFunc_BreakVector_X, double CallFunc_BreakVector_Y, double CallFunc_BreakVector_Z, double CallFunc_Lerp_ReturnValue, bool CallFunc_IsVisible_ReturnValue, const struct FVector& CallFunc_MakeVector_ReturnValue, const struct FHitResult& CallFunc_K2_SetWorldLocation_SweepHitResult, bool CallFunc_Less_DoubleDouble_ReturnValue);
	void OnBeginFertilizing(class AValeriaCharacter* Actor, class UVAL_ItemTypeDefinitionAsset* FertilizedItemType);
	void OnBeginSeeding(class AValeriaCharacter* Actor, class UVAL_ItemTypeDefinitionAsset* SeedItemType);
	void OneSecondTick();
	void OnFertilized(class UVAL_ItemTypeDefinitionAsset* FertilizedItemType);
	void OnFullyTilled();
	void OnGardenPlotChanged();
	void OnHarvested_Event_0(class UVAL_ItemTypeDefinitionAsset* PlantItemType, bool OutRepeatHarvest);
	void OnHiddenLootPickedUp();
	void OnHiddenLootUncovered();
	void OnPlantChanged();
	void OnPreviewState(EPlantingState NewState);
	void OnReadyToHarvest(class UVAL_ItemTypeDefinitionAsset* PlantItemType, bool RepeatHarvest);
	void OnSeeded(class UVAL_ItemTypeDefinitionAsset* SeedItemType);
	void OnSoilChanged();
	void OnStateChanged(EMinigameState State);
	void OnWeedRemoved();
	void PlayCropDestroyEffects(class AActor* Param_Instigator, const struct FVector& CallFunc_GetComponentBounds_Origin, const struct FVector& CallFunc_GetComponentBounds_BoxExtent, float CallFunc_GetComponentBounds_SphereRadius, bool CallFunc_IsValid_ReturnValue, class UNiagaraComponent* CallFunc_SpawnSystemAttached_ReturnValue, bool CallFunc_IsValid_ReturnValue_1);
	void PlayCropHitEffects(class AActor* Param_Instigator, class UVitalsComponent* Param_Vitals, const struct FVector& CallFunc_GetComponentBounds_Origin, const struct FVector& CallFunc_GetComponentBounds_BoxExtent, float CallFunc_GetComponentBounds_SphereRadius, bool CallFunc_IsValid_ReturnValue, const struct FVector& CallFunc_K2_GetComponentLocation_ReturnValue, class UNiagaraComponent* CallFunc_SpawnSystemAttached_ReturnValue, class UAkComponent* CallFunc_AkEventLocation_AkComponent, int32 CallFunc_AkEventLocation_Playing_ID, bool CallFunc_IsValid_ReturnValue_1);
	void PlotHoverSFX(bool IsAvailable);
	void ReceiveBeginPlay();
	void ReceiveTick(float DeltaSeconds);
	void Tick_fertCheck();
	void Tick_waterCheck();
	void TL_seedingMe__FinishedFunc();
	void TL_seedingMe__UpdateFunc();
	void TL_tillRevert__FinishedFunc();
	void TL_tillRevert__UpdateFunc();
	void TryUpdateWeedState(int32 CheckWeedState, bool CallFunc_EqualEqual_IntInt_ReturnValue, bool CallFunc_EqualEqual_IntInt_ReturnValue_1, bool CallFunc_EqualEqual_IntInt_ReturnValue_2, bool CallFunc_NotEqual_IntInt_ReturnValue, struct FGardenPlot& CallFunc_GetGardenPlot_ReturnValue);
	void Update_Buff_Visuals(bool HasFertilizer, bool HasBuff, const struct FGardenTileBuffInfo& GardenBuffInfo, const struct FGardenTileBuffInfo& CallFunc_K2_TryGetGardenTileBuffInfo_fertilizerInfo, bool CallFunc_K2_TryGetGardenTileBuffInfo_ReturnValue, int32 Temp_int_Loop_Counter_Variable, int32 CallFunc_Add_IntInt_ReturnValue, bool CallFunc_HasValidGardenData_ReturnValue, bool CallFunc_IsPlantMaster_ReturnValue, class UTexture2D* CallFunc_GetPlantIcon_ReturnValue, int32 Temp_int_Loop_Counter_Variable_1, bool CallFunc_IsValid_ReturnValue, int32 CallFunc_Add_IntInt_ReturnValue_1, bool CallFunc_BooleanAND_ReturnValue, bool CallFunc_IsValid_ReturnValue_1, int32 CallFunc_Array_Length_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue, int32 Temp_int_Array_Index_Variable, const struct FLinearColor& Temp_struct_Variable, int32 Temp_int_Array_Index_Variable_1, const class FString& CallFunc_Array_Get_Item, bool Temp_bool_Variable, const class FString& CallFunc_Array_Get_Item_1, int32 CallFunc_Array_Length_ReturnValue_1, EGardenBuffEffectType Temp_byte_Variable, bool CallFunc_Less_IntInt_ReturnValue_1, const class FString& CallFunc_Array_Get_Item_2, const class FString& CallFunc_Array_Get_Item_3, const class FString& CallFunc_Array_Get_Item_4, const class FString& CallFunc_Array_Get_Item_5, const class FString& CallFunc_Array_Get_Item_6, const class FString& CallFunc_Array_Get_Item_7, const class FString& K2Node_Select_Default, bool CallFunc_IsValid_ReturnValue_2, class UUserWidget* CallFunc_GetUserWidgetObject_ReturnValue, class UWBP_GardenPlate_C* K2Node_DynamicCast_AsWBP_Garden_Plate, bool K2Node_DynamicCast_bSuccess, bool CallFunc_CanBuffPlateBeVisible_PlateVisible, bool CallFunc_BooleanAND_ReturnValue_1, double CallFunc_Conv_BoolToDouble_ReturnValue, const struct FLinearColor& K2Node_Select_Default_1, bool CallFunc_IsValid_ReturnValue_3);
	void UpdateHealthBarPosition(const struct FVector2D& CallFunc_GetPlantCenter_OutLocation, const struct FVector& CallFunc_K2_GetComponentLocation_ReturnValue, double CallFunc_BreakVector2D_X, double CallFunc_BreakVector2D_Y, double CallFunc_BreakVector_X, double CallFunc_BreakVector_Y, double CallFunc_BreakVector_Z, const struct FVector& CallFunc_MakeVector_ReturnValue, const struct FHitResult& CallFunc_K2_SetWorldLocation_SweepHitResult);
	void UpdateMaterialInstanceValue(class UStaticMeshComponent* TargetMesh, class FName ParamName, double ParamValue, double& PreviousValueByRef, int32 DebugTracker_IGNORE, bool CallFunc_EqualEqual_DoubleDouble_ReturnValue, float CallFunc_SetScalarParameterValueOnMaterials_ParameterValue_ImplicitCast);
	void UpdateOnFullyWatered();
	void UpdatePlateVisibility(bool CallFunc_BooleanOR_ReturnValue, bool CallFunc_IsValid_ReturnValue, bool CallFunc_BooleanOR_ReturnValue_1);
	void UpdateSoilVisualsForPlant(bool Animated, int32 Temp_int_Variable, class UStaticMesh* Temp_object_Variable, class UStaticMesh* Temp_object_Variable_1, class UStaticMesh* Temp_object_Variable_2, class UStaticMesh* Temp_object_Variable_3, double Temp_real_Variable, const struct FVector& CallFunc_K2_GetComponentLocation_ReturnValue, const struct FVector& CallFunc_Add_VectorVector_ReturnValue, double Temp_real_Variable_1, bool Temp_bool_Variable, const struct FVector& CallFunc_K2_GetComponentLocation_ReturnValue_1, double K2Node_Select_Default, const struct FVector& CallFunc_Add_VectorVector_ReturnValue_1, const struct FHitResult& CallFunc_K2_SetWorldLocation_SweepHitResult, bool CallFunc_SetStaticMesh_ReturnValue, bool CallFunc_IsPlanted_ReturnValue, int32 CallFunc_GetPlantSize_ReturnValue, const struct FHitResult& CallFunc_K2_SetWorldLocation_SweepHitResult_1, class UStaticMesh* K2Node_Select_Default_1, bool CallFunc_Greater_IntInt_ReturnValue, bool CallFunc_SetStaticMesh_ReturnValue_1, bool CallFunc_IsPlantMaster_ReturnValue);
	void UpdateWaterDropletUI(float CallFunc_GetWateredPercent_ReturnValue, bool CallFunc_IsValid_ReturnValue, bool CallFunc_IsPlantMaster_ReturnValue, bool CallFunc_HasValidGardenData_ReturnValue, bool CallFunc_IsReadyToHarvest_ReturnValue, bool CallFunc_Not_PreBool_ReturnValue, bool CallFunc_BooleanAND_ReturnValue, class UUserWidget* CallFunc_GetUserWidgetObject_ReturnValue, class UWBP_GardenPlate_C* K2Node_DynamicCast_AsWBP_Garden_Plate, bool K2Node_DynamicCast_bSuccess, bool CallFunc_Set_Water_Droplet_Progress_IsVisible, bool CallFunc_IsValid_ReturnValue_1, double CallFunc_Set_Water_Droplet_Progress_Progress_ImplicitCast);
	void UserConstructionScript(double CallFunc_RandomFloatInRange_ReturnValue, double CallFunc_RandomFloatInRange_ReturnValue_1, const struct FRotator& CallFunc_MakeRotator_ReturnValue, const struct FRotator& CallFunc_MakeRotator_ReturnValue_1, const struct FHitResult& CallFunc_K2_SetRelativeRotation_SweepHitResult, double CallFunc_RandomFloatInRange_ReturnValue_2, const struct FRotator& CallFunc_MakeRotator_ReturnValue_2, const struct FHitResult& CallFunc_K2_SetRelativeRotation_SweepHitResult_1, const struct FHitResult& CallFunc_K2_SetRelativeRotation_SweepHitResult_2, int32 CallFunc_RandomIntegerInRange_ReturnValue, double CallFunc_Conv_IntToDouble_ReturnValue, double CallFunc_Divide_DoubleDouble_ReturnValue, double CallFunc_Multiply_DoubleDouble_ReturnValue, const struct FRotator& CallFunc_MakeRotator_ReturnValue_3, const struct FHitResult& CallFunc_K2_SetRelativeRotation_SweepHitResult_3, float CallFunc_MakeRotator_Yaw_ImplicitCast, float CallFunc_MakeRotator_Yaw_ImplicitCast_1, float CallFunc_MakeRotator_Yaw_ImplicitCast_2, float CallFunc_MakeRotator_Yaw_ImplicitCast_3);
	void WaterPlot(int32 WaterAmount, class AValeriaPlayerController* Vpc, class AValeriaCharacter* VC, EValeriaFuncResult CallFunc_GetValeriaPlayerController_OutResult, class AValeriaPlayerController* CallFunc_GetValeriaPlayerController_ReturnValue, class AValeriaCharacter* CallFunc_GetValeriaCharacter_ReturnValue, bool K2Node_SwitchEnum_CmpSuccess);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_GardenTile_C">();
	}
	static class ABP_GardenTile_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_GardenTile_C>();
	}
};
static_assert(alignof(ABP_GardenTile_C) == 0x000010, "Wrong alignment on ABP_GardenTile_C");
static_assert(sizeof(ABP_GardenTile_C) == 0x0007B0, "Wrong size on ABP_GardenTile_C");
static_assert(offsetof(ABP_GardenTile_C, UberGraphFrame) == 0x000520, "Member 'ABP_GardenTile_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_GardenTile_C, BP_PlateHealthBar) == 0x000528, "Member 'ABP_GardenTile_C::BP_PlateHealthBar' has a wrong offset!");
static_assert(offsetof(ABP_GardenTile_C, HarvestableAudio) == 0x000530, "Member 'ABP_GardenTile_C::HarvestableAudio' has a wrong offset!");
static_assert(offsetof(ABP_GardenTile_C, Comp_PlaceableAudio) == 0x000538, "Member 'ABP_GardenTile_C::Comp_PlaceableAudio' has a wrong offset!");
static_assert(offsetof(ABP_GardenTile_C, NS_Fertilizer_Idle) == 0x000540, "Member 'ABP_GardenTile_C::NS_Fertilizer_Idle' has a wrong offset!");
static_assert(offsetof(ABP_GardenTile_C, DebugMultiGridInfo) == 0x000548, "Member 'ABP_GardenTile_C::DebugMultiGridInfo' has a wrong offset!");
static_assert(offsetof(ABP_GardenTile_C, HiddenLoot) == 0x000550, "Member 'ABP_GardenTile_C::HiddenLoot' has a wrong offset!");
static_assert(offsetof(ABP_GardenTile_C, Fertilizer_root) == 0x000558, "Member 'ABP_GardenTile_C::Fertilizer_root' has a wrong offset!");
static_assert(offsetof(ABP_GardenTile_C, SM_plotSelection) == 0x000560, "Member 'ABP_GardenTile_C::SM_plotSelection' has a wrong offset!");
static_assert(offsetof(ABP_GardenTile_C, Decal_selection) == 0x000568, "Member 'ABP_GardenTile_C::Decal_selection' has a wrong offset!");
static_assert(offsetof(ABP_GardenTile_C, Light_Selection) == 0x000570, "Member 'ABP_GardenTile_C::Light_Selection' has a wrong offset!");
static_assert(offsetof(ABP_GardenTile_C, Selection_root) == 0x000578, "Member 'ABP_GardenTile_C::Selection_root' has a wrong offset!");
static_assert(offsetof(ABP_GardenTile_C, Vfx_root) == 0x000580, "Member 'ABP_GardenTile_C::Vfx_root' has a wrong offset!");
static_assert(offsetof(ABP_GardenTile_C, Decal) == 0x000588, "Member 'ABP_GardenTile_C::Decal' has a wrong offset!");
static_assert(offsetof(ABP_GardenTile_C, BP_GardenPlate) == 0x000590, "Member 'ABP_GardenTile_C::BP_GardenPlate' has a wrong offset!");
static_assert(offsetof(ABP_GardenTile_C, WeedPlate) == 0x000598, "Member 'ABP_GardenTile_C::WeedPlate' has a wrong offset!");
static_assert(offsetof(ABP_GardenTile_C, Weed02) == 0x0005A0, "Member 'ABP_GardenTile_C::Weed02' has a wrong offset!");
static_assert(offsetof(ABP_GardenTile_C, Weed01) == 0x0005A8, "Member 'ABP_GardenTile_C::Weed01' has a wrong offset!");
static_assert(offsetof(ABP_GardenTile_C, Weed00) == 0x0005B0, "Member 'ABP_GardenTile_C::Weed00' has a wrong offset!");
static_assert(offsetof(ABP_GardenTile_C, TL_seedingMe_seeding_2E6931844EDBB4E08CBBB182CAD0C4D6) == 0x0005B8, "Member 'ABP_GardenTile_C::TL_seedingMe_seeding_2E6931844EDBB4E08CBBB182CAD0C4D6' has a wrong offset!");
static_assert(offsetof(ABP_GardenTile_C, TL_seedingMe__Direction_2E6931844EDBB4E08CBBB182CAD0C4D6) == 0x0005BC, "Member 'ABP_GardenTile_C::TL_seedingMe__Direction_2E6931844EDBB4E08CBBB182CAD0C4D6' has a wrong offset!");
static_assert(offsetof(ABP_GardenTile_C, TL_seedingMe) == 0x0005C0, "Member 'ABP_GardenTile_C::TL_seedingMe' has a wrong offset!");
static_assert(offsetof(ABP_GardenTile_C, TL_tillRevert_Tilled_9F46A20D41E6501E8A9675AFED64CB0C) == 0x0005C8, "Member 'ABP_GardenTile_C::TL_tillRevert_Tilled_9F46A20D41E6501E8A9675AFED64CB0C' has a wrong offset!");
static_assert(offsetof(ABP_GardenTile_C, TL_tillRevert__Direction_9F46A20D41E6501E8A9675AFED64CB0C) == 0x0005CC, "Member 'ABP_GardenTile_C::TL_tillRevert__Direction_9F46A20D41E6501E8A9675AFED64CB0C' has a wrong offset!");
static_assert(offsetof(ABP_GardenTile_C, TL_tillRevert) == 0x0005D0, "Member 'ABP_GardenTile_C::TL_tillRevert' has a wrong offset!");
static_assert(offsetof(ABP_GardenTile_C, LastWeedState) == 0x0005D8, "Member 'ABP_GardenTile_C::LastWeedState' has a wrong offset!");
static_assert(offsetof(ABP_GardenTile_C, TillingMask) == 0x0005E0, "Member 'ABP_GardenTile_C::TillingMask' has a wrong offset!");
static_assert(offsetof(ABP_GardenTile_C, SentWaterRpcToServer) == 0x0005E8, "Member 'ABP_GardenTile_C::SentWaterRpcToServer' has a wrong offset!");
static_assert(offsetof(ABP_GardenTile_C, AmountWatered) == 0x0005EC, "Member 'ABP_GardenTile_C::AmountWatered' has a wrong offset!");
static_assert(offsetof(ABP_GardenTile_C, TimeToResetWaterStatus) == 0x0005F0, "Member 'ABP_GardenTile_C::TimeToResetWaterStatus' has a wrong offset!");
static_assert(offsetof(ABP_GardenTile_C, WaterResetCooldown) == 0x0005F8, "Member 'ABP_GardenTile_C::WaterResetCooldown' has a wrong offset!");
static_assert(offsetof(ABP_GardenTile_C, WasWatered) == 0x000600, "Member 'ABP_GardenTile_C::WasWatered' has a wrong offset!");
static_assert(offsetof(ABP_GardenTile_C, FertilizerDynamicMaterialInstance) == 0x000608, "Member 'ABP_GardenTile_C::FertilizerDynamicMaterialInstance' has a wrong offset!");
static_assert(offsetof(ABP_GardenTile_C, TillFull_vfx) == 0x000610, "Member 'ABP_GardenTile_C::TillFull_vfx' has a wrong offset!");
static_assert(offsetof(ABP_GardenTile_C, NeedsOffset) == 0x000611, "Member 'ABP_GardenTile_C::NeedsOffset' has a wrong offset!");
static_assert(offsetof(ABP_GardenTile_C, HasOffset) == 0x000612, "Member 'ABP_GardenTile_C::HasOffset' has a wrong offset!");
static_assert(offsetof(ABP_GardenTile_C, WaterDropletOffset) == 0x000618, "Member 'ABP_GardenTile_C::WaterDropletOffset' has a wrong offset!");
static_assert(offsetof(ABP_GardenTile_C, LastCalculatedFertilizerString) == 0x000630, "Member 'ABP_GardenTile_C::LastCalculatedFertilizerString' has a wrong offset!");
static_assert(offsetof(ABP_GardenTile_C, LastCheckedFertilizerLength) == 0x000648, "Member 'ABP_GardenTile_C::LastCheckedFertilizerLength' has a wrong offset!");
static_assert(offsetof(ABP_GardenTile_C, NS_HarvestIdle) == 0x000650, "Member 'ABP_GardenTile_C::NS_HarvestIdle' has a wrong offset!");
static_assert(offsetof(ABP_GardenTile_C, IsDisplayingHiddenLoot) == 0x000658, "Member 'ABP_GardenTile_C::IsDisplayingHiddenLoot' has a wrong offset!");
static_assert(offsetof(ABP_GardenTile_C, HiddenLootConstOffset) == 0x000660, "Member 'ABP_GardenTile_C::HiddenLootConstOffset' has a wrong offset!");
static_assert(offsetof(ABP_GardenTile_C, HiddenLootStartingZ) == 0x000668, "Member 'ABP_GardenTile_C::HiddenLootStartingZ' has a wrong offset!");
static_assert(offsetof(ABP_GardenTile_C, HiddenLootTargetZ) == 0x000670, "Member 'ABP_GardenTile_C::HiddenLootTargetZ' has a wrong offset!");
static_assert(offsetof(ABP_GardenTile_C, Color_tilled) == 0x000678, "Member 'ABP_GardenTile_C::Color_tilled' has a wrong offset!");
static_assert(offsetof(ABP_GardenTile_C, Color_watered) == 0x000688, "Member 'ABP_GardenTile_C::Color_watered' has a wrong offset!");
static_assert(offsetof(ABP_GardenTile_C, Color_ferted) == 0x000698, "Member 'ABP_GardenTile_C::Color_ferted' has a wrong offset!");
static_assert(offsetof(ABP_GardenTile_C, WateredParamName) == 0x0006A8, "Member 'ABP_GardenTile_C::WateredParamName' has a wrong offset!");
static_assert(offsetof(ABP_GardenTile_C, LastKnownPlotMeshUnplantedIsWatered) == 0x0006B0, "Member 'ABP_GardenTile_C::LastKnownPlotMeshUnplantedIsWatered' has a wrong offset!");
static_assert(offsetof(ABP_GardenTile_C, LastKnownPlantMeshIsWatered) == 0x0006B8, "Member 'ABP_GardenTile_C::LastKnownPlantMeshIsWatered' has a wrong offset!");
static_assert(offsetof(ABP_GardenTile_C, FertilizedParamName) == 0x0006C0, "Member 'ABP_GardenTile_C::FertilizedParamName' has a wrong offset!");
static_assert(offsetof(ABP_GardenTile_C, LastKnownPlotMeshUnplantedFertilized) == 0x0006C8, "Member 'ABP_GardenTile_C::LastKnownPlotMeshUnplantedFertilized' has a wrong offset!");
static_assert(offsetof(ABP_GardenTile_C, LastKnownPlantMeshFertilized) == 0x0006D0, "Member 'ABP_GardenTile_C::LastKnownPlantMeshFertilized' has a wrong offset!");
static_assert(offsetof(ABP_GardenTile_C, TilledParamName) == 0x0006D8, "Member 'ABP_GardenTile_C::TilledParamName' has a wrong offset!");
static_assert(offsetof(ABP_GardenTile_C, LastKnownPlotMeshUnplantedIsTilled) == 0x0006E0, "Member 'ABP_GardenTile_C::LastKnownPlotMeshUnplantedIsTilled' has a wrong offset!");
static_assert(offsetof(ABP_GardenTile_C, OldIsChild) == 0x0006E8, "Member 'ABP_GardenTile_C::OldIsChild' has a wrong offset!");
static_assert(offsetof(ABP_GardenTile_C, OLDIsParent) == 0x0006E9, "Member 'ABP_GardenTile_C::OLDIsParent' has a wrong offset!");
static_assert(offsetof(ABP_GardenTile_C, OLDIsSolo) == 0x0006EA, "Member 'ABP_GardenTile_C::OLDIsSolo' has a wrong offset!");
static_assert(offsetof(ABP_GardenTile_C, SeedPlantedSound) == 0x0006F0, "Member 'ABP_GardenTile_C::SeedPlantedSound' has a wrong offset!");
static_assert(offsetof(ABP_GardenTile_C, SeedCantPlantSound) == 0x0006F8, "Member 'ABP_GardenTile_C::SeedCantPlantSound' has a wrong offset!");
static_assert(offsetof(ABP_GardenTile_C, PlotHoverAvailableSFX) == 0x000700, "Member 'ABP_GardenTile_C::PlotHoverAvailableSFX' has a wrong offset!");
static_assert(offsetof(ABP_GardenTile_C, Is_Available) == 0x000708, "Member 'ABP_GardenTile_C::Is_Available' has a wrong offset!");
static_assert(offsetof(ABP_GardenTile_C, LastHadAnyTilled) == 0x000709, "Member 'ABP_GardenTile_C::LastHadAnyTilled' has a wrong offset!");
static_assert(offsetof(ABP_GardenTile_C, PlotMeshUnplantedOffset) == 0x000710, "Member 'ABP_GardenTile_C::PlotMeshUnplantedOffset' has a wrong offset!");
static_assert(offsetof(ABP_GardenTile_C, ShouldWaterPlateBeVisible) == 0x000728, "Member 'ABP_GardenTile_C::ShouldWaterPlateBeVisible' has a wrong offset!");
static_assert(offsetof(ABP_GardenTile_C, ShouldIconPlateBeVisible) == 0x000729, "Member 'ABP_GardenTile_C::ShouldIconPlateBeVisible' has a wrong offset!");
static_assert(offsetof(ABP_GardenTile_C, ShouldBuffPlateBeVisible) == 0x00072A, "Member 'ABP_GardenTile_C::ShouldBuffPlateBeVisible' has a wrong offset!");
static_assert(offsetof(ABP_GardenTile_C, Fertilized_Item_Type) == 0x000730, "Member 'ABP_GardenTile_C::Fertilized_Item_Type' has a wrong offset!");
static_assert(offsetof(ABP_GardenTile_C, MyFertBuff) == 0x000738, "Member 'ABP_GardenTile_C::MyFertBuff' has a wrong offset!");
static_assert(offsetof(ABP_GardenTile_C, FertBuff_Type) == 0x000740, "Member 'ABP_GardenTile_C::FertBuff_Type' has a wrong offset!");
static_assert(offsetof(ABP_GardenTile_C, SeededParamName) == 0x000744, "Member 'ABP_GardenTile_C::SeededParamName' has a wrong offset!");
static_assert(offsetof(ABP_GardenTile_C, LastKnownPlotMeshUnplantedIsSeeded) == 0x000750, "Member 'ABP_GardenTile_C::LastKnownPlotMeshUnplantedIsSeeded' has a wrong offset!");
static_assert(offsetof(ABP_GardenTile_C, String_NS_FertType) == 0x000758, "Member 'ABP_GardenTile_C::String_NS_FertType' has a wrong offset!");
static_assert(offsetof(ABP_GardenTile_C, IsPlayingAudio) == 0x000768, "Member 'ABP_GardenTile_C::IsPlayingAudio' has a wrong offset!");
static_assert(offsetof(ABP_GardenTile_C, PlateZOffset) == 0x000770, "Member 'ABP_GardenTile_C::PlateZOffset' has a wrong offset!");
static_assert(offsetof(ABP_GardenTile_C, NewVar) == 0x000778, "Member 'ABP_GardenTile_C::NewVar' has a wrong offset!");
static_assert(offsetof(ABP_GardenTile_C, BoundsToUse) == 0x000790, "Member 'ABP_GardenTile_C::BoundsToUse' has a wrong offset!");
static_assert(offsetof(ABP_GardenTile_C, VitalsComp) == 0x0007A8, "Member 'ABP_GardenTile_C::VitalsComp' has a wrong offset!");

}

