#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_FocusTip_CM

#include "Basic.hpp"

#include "CommonInput_structs.hpp"


namespace SDK::Params
{

// Function WBP_FocusTip_CM.WBP_FocusTip_CM_C.ExecuteUbergraph_WBP_FocusTip_CM
// 0x0038 (0x0038 - 0x0000)
struct WBP_FocusTip_CM_C_ExecuteUbergraph_WBP_FocusTip_CM final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4201[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UCommonInputSubsystem*                  CallFunc_GetLocalPlayerSubsystem_ReturnValue;      // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4202[0x7];                                     // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UOverlaySlot*                           CallFunc_SlotAsOverlaySlot_ReturnValue;            // 0x0018(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	ECommonInputType                              K2Node_CustomEvent_bNewInputType;                  // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4203[0x3];                                     // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(ECommonInputType bNewInputType)> K2Node_CreateDelegate_OutputDelegate;              // 0x0024(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_FocusTip_CM_C_ExecuteUbergraph_WBP_FocusTip_CM) == 0x000008, "Wrong alignment on WBP_FocusTip_CM_C_ExecuteUbergraph_WBP_FocusTip_CM");
static_assert(sizeof(WBP_FocusTip_CM_C_ExecuteUbergraph_WBP_FocusTip_CM) == 0x000038, "Wrong size on WBP_FocusTip_CM_C_ExecuteUbergraph_WBP_FocusTip_CM");
static_assert(offsetof(WBP_FocusTip_CM_C_ExecuteUbergraph_WBP_FocusTip_CM, EntryPoint) == 0x000000, "Member 'WBP_FocusTip_CM_C_ExecuteUbergraph_WBP_FocusTip_CM::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_FocusTip_CM_C_ExecuteUbergraph_WBP_FocusTip_CM, CallFunc_GetLocalPlayerSubsystem_ReturnValue) == 0x000008, "Member 'WBP_FocusTip_CM_C_ExecuteUbergraph_WBP_FocusTip_CM::CallFunc_GetLocalPlayerSubsystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_FocusTip_CM_C_ExecuteUbergraph_WBP_FocusTip_CM, K2Node_Event_IsDesignTime) == 0x000010, "Member 'WBP_FocusTip_CM_C_ExecuteUbergraph_WBP_FocusTip_CM::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(WBP_FocusTip_CM_C_ExecuteUbergraph_WBP_FocusTip_CM, CallFunc_SlotAsOverlaySlot_ReturnValue) == 0x000018, "Member 'WBP_FocusTip_CM_C_ExecuteUbergraph_WBP_FocusTip_CM::CallFunc_SlotAsOverlaySlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_FocusTip_CM_C_ExecuteUbergraph_WBP_FocusTip_CM, K2Node_CustomEvent_bNewInputType) == 0x000020, "Member 'WBP_FocusTip_CM_C_ExecuteUbergraph_WBP_FocusTip_CM::K2Node_CustomEvent_bNewInputType' has a wrong offset!");
static_assert(offsetof(WBP_FocusTip_CM_C_ExecuteUbergraph_WBP_FocusTip_CM, K2Node_CreateDelegate_OutputDelegate) == 0x000024, "Member 'WBP_FocusTip_CM_C_ExecuteUbergraph_WBP_FocusTip_CM::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WBP_FocusTip_CM_C_ExecuteUbergraph_WBP_FocusTip_CM, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000034, "Member 'WBP_FocusTip_CM_C_ExecuteUbergraph_WBP_FocusTip_CM::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function WBP_FocusTip_CM.WBP_FocusTip_CM_C.HandledOnInputMethodChanged
// 0x0001 (0x0001 - 0x0000)
struct WBP_FocusTip_CM_C_HandledOnInputMethodChanged final
{
public:
	ECommonInputType                              bNewInputType;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_FocusTip_CM_C_HandledOnInputMethodChanged) == 0x000001, "Wrong alignment on WBP_FocusTip_CM_C_HandledOnInputMethodChanged");
static_assert(sizeof(WBP_FocusTip_CM_C_HandledOnInputMethodChanged) == 0x000001, "Wrong size on WBP_FocusTip_CM_C_HandledOnInputMethodChanged");
static_assert(offsetof(WBP_FocusTip_CM_C_HandledOnInputMethodChanged, bNewInputType) == 0x000000, "Member 'WBP_FocusTip_CM_C_HandledOnInputMethodChanged::bNewInputType' has a wrong offset!");

// Function WBP_FocusTip_CM.WBP_FocusTip_CM_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct WBP_FocusTip_CM_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_FocusTip_CM_C_PreConstruct) == 0x000001, "Wrong alignment on WBP_FocusTip_CM_C_PreConstruct");
static_assert(sizeof(WBP_FocusTip_CM_C_PreConstruct) == 0x000001, "Wrong size on WBP_FocusTip_CM_C_PreConstruct");
static_assert(offsetof(WBP_FocusTip_CM_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'WBP_FocusTip_CM_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function WBP_FocusTip_CM.WBP_FocusTip_CM_C.SetFocusTip
// 0x0010 (0x0010 - 0x0000)
struct WBP_FocusTip_CM_C_SetFocusTip final
{
public:
	class UCommonInputSubsystem*                  CallFunc_GetLocalPlayerSubsystem_ReturnValue;      // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	ECommonInputType                              CallFunc_GetCurrentInputType_ReturnValue;          // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_FocusTip_CM_C_SetFocusTip) == 0x000008, "Wrong alignment on WBP_FocusTip_CM_C_SetFocusTip");
static_assert(sizeof(WBP_FocusTip_CM_C_SetFocusTip) == 0x000010, "Wrong size on WBP_FocusTip_CM_C_SetFocusTip");
static_assert(offsetof(WBP_FocusTip_CM_C_SetFocusTip, CallFunc_GetLocalPlayerSubsystem_ReturnValue) == 0x000000, "Member 'WBP_FocusTip_CM_C_SetFocusTip::CallFunc_GetLocalPlayerSubsystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_FocusTip_CM_C_SetFocusTip, CallFunc_GetCurrentInputType_ReturnValue) == 0x000008, "Member 'WBP_FocusTip_CM_C_SetFocusTip::CallFunc_GetCurrentInputType_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_FocusTip_CM_C_SetFocusTip, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000009, "Member 'WBP_FocusTip_CM_C_SetFocusTip::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");

}

