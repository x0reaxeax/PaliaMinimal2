#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_RadioSlider_ButtonWithIconText_CM

#include "Basic.hpp"

#include "UMG_structs.hpp"
#include "SlateCore_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function WBP_RadioSlider_ButtonWithIconText_CM.WBP_RadioSlider_ButtonWithIconText_CM_C.AddOptionalContent
// 0x0020 (0x0020 - 0x0000)
struct WBP_RadioSlider_ButtonWithIconText_CM_C_AddOptionalContent final
{
public:
	class UUserWidget*                            Content;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UHorizontalBoxSlot*                     NamedSlot;                                         // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UPanelSlot*                             CallFunc_SetContent_ReturnValue;                   // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UHorizontalBoxSlot*                     CallFunc_SlotAsHorizontalBoxSlot_ReturnValue;      // 0x0018(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_RadioSlider_ButtonWithIconText_CM_C_AddOptionalContent) == 0x000008, "Wrong alignment on WBP_RadioSlider_ButtonWithIconText_CM_C_AddOptionalContent");
static_assert(sizeof(WBP_RadioSlider_ButtonWithIconText_CM_C_AddOptionalContent) == 0x000020, "Wrong size on WBP_RadioSlider_ButtonWithIconText_CM_C_AddOptionalContent");
static_assert(offsetof(WBP_RadioSlider_ButtonWithIconText_CM_C_AddOptionalContent, Content) == 0x000000, "Member 'WBP_RadioSlider_ButtonWithIconText_CM_C_AddOptionalContent::Content' has a wrong offset!");
static_assert(offsetof(WBP_RadioSlider_ButtonWithIconText_CM_C_AddOptionalContent, NamedSlot) == 0x000008, "Member 'WBP_RadioSlider_ButtonWithIconText_CM_C_AddOptionalContent::NamedSlot' has a wrong offset!");
static_assert(offsetof(WBP_RadioSlider_ButtonWithIconText_CM_C_AddOptionalContent, CallFunc_SetContent_ReturnValue) == 0x000010, "Member 'WBP_RadioSlider_ButtonWithIconText_CM_C_AddOptionalContent::CallFunc_SetContent_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_RadioSlider_ButtonWithIconText_CM_C_AddOptionalContent, CallFunc_SlotAsHorizontalBoxSlot_ReturnValue) == 0x000018, "Member 'WBP_RadioSlider_ButtonWithIconText_CM_C_AddOptionalContent::CallFunc_SlotAsHorizontalBoxSlot_ReturnValue' has a wrong offset!");

// Function WBP_RadioSlider_ButtonWithIconText_CM.WBP_RadioSlider_ButtonWithIconText_CM_C.BindIA
// 0x0008 (0x0008 - 0x0000)
struct WBP_RadioSlider_ButtonWithIconText_CM_C_BindIA final
{
public:
	class UInputAction*                           IA;                                                // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_RadioSlider_ButtonWithIconText_CM_C_BindIA) == 0x000008, "Wrong alignment on WBP_RadioSlider_ButtonWithIconText_CM_C_BindIA");
static_assert(sizeof(WBP_RadioSlider_ButtonWithIconText_CM_C_BindIA) == 0x000008, "Wrong size on WBP_RadioSlider_ButtonWithIconText_CM_C_BindIA");
static_assert(offsetof(WBP_RadioSlider_ButtonWithIconText_CM_C_BindIA, IA) == 0x000000, "Member 'WBP_RadioSlider_ButtonWithIconText_CM_C_BindIA::IA' has a wrong offset!");

// Function WBP_RadioSlider_ButtonWithIconText_CM.WBP_RadioSlider_ButtonWithIconText_CM_C.BndEvt__WBP_RadioSlider_ButtonWithIconText_CM_Button_Root_K2Node_ComponentBoundEvent_1_CommonButtonBaseClicked__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct WBP_RadioSlider_ButtonWithIconText_CM_C_BndEvt__WBP_RadioSlider_ButtonWithIconText_CM_Button_Root_K2Node_ComponentBoundEvent_1_CommonButtonBaseClicked__DelegateSignature final
{
public:
	class UCommonButtonBase*                      Button;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_RadioSlider_ButtonWithIconText_CM_C_BndEvt__WBP_RadioSlider_ButtonWithIconText_CM_Button_Root_K2Node_ComponentBoundEvent_1_CommonButtonBaseClicked__DelegateSignature) == 0x000008, "Wrong alignment on WBP_RadioSlider_ButtonWithIconText_CM_C_BndEvt__WBP_RadioSlider_ButtonWithIconText_CM_Button_Root_K2Node_ComponentBoundEvent_1_CommonButtonBaseClicked__DelegateSignature");
static_assert(sizeof(WBP_RadioSlider_ButtonWithIconText_CM_C_BndEvt__WBP_RadioSlider_ButtonWithIconText_CM_Button_Root_K2Node_ComponentBoundEvent_1_CommonButtonBaseClicked__DelegateSignature) == 0x000008, "Wrong size on WBP_RadioSlider_ButtonWithIconText_CM_C_BndEvt__WBP_RadioSlider_ButtonWithIconText_CM_Button_Root_K2Node_ComponentBoundEvent_1_CommonButtonBaseClicked__DelegateSignature");
static_assert(offsetof(WBP_RadioSlider_ButtonWithIconText_CM_C_BndEvt__WBP_RadioSlider_ButtonWithIconText_CM_Button_Root_K2Node_ComponentBoundEvent_1_CommonButtonBaseClicked__DelegateSignature, Button) == 0x000000, "Member 'WBP_RadioSlider_ButtonWithIconText_CM_C_BndEvt__WBP_RadioSlider_ButtonWithIconText_CM_Button_Root_K2Node_ComponentBoundEvent_1_CommonButtonBaseClicked__DelegateSignature::Button' has a wrong offset!");

// Function WBP_RadioSlider_ButtonWithIconText_CM.WBP_RadioSlider_ButtonWithIconText_CM_C.ExecuteUbergraph_WBP_RadioSlider_ButtonWithIconText_CM
// 0x0010 (0x0010 - 0x0000)
struct WBP_RadioSlider_ButtonWithIconText_CM_C_ExecuteUbergraph_WBP_RadioSlider_ButtonWithIconText_CM final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C92[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UCommonButtonBase*                      K2Node_ComponentBoundEvent_Button;                 // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_RadioSlider_ButtonWithIconText_CM_C_ExecuteUbergraph_WBP_RadioSlider_ButtonWithIconText_CM) == 0x000008, "Wrong alignment on WBP_RadioSlider_ButtonWithIconText_CM_C_ExecuteUbergraph_WBP_RadioSlider_ButtonWithIconText_CM");
static_assert(sizeof(WBP_RadioSlider_ButtonWithIconText_CM_C_ExecuteUbergraph_WBP_RadioSlider_ButtonWithIconText_CM) == 0x000010, "Wrong size on WBP_RadioSlider_ButtonWithIconText_CM_C_ExecuteUbergraph_WBP_RadioSlider_ButtonWithIconText_CM");
static_assert(offsetof(WBP_RadioSlider_ButtonWithIconText_CM_C_ExecuteUbergraph_WBP_RadioSlider_ButtonWithIconText_CM, EntryPoint) == 0x000000, "Member 'WBP_RadioSlider_ButtonWithIconText_CM_C_ExecuteUbergraph_WBP_RadioSlider_ButtonWithIconText_CM::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_RadioSlider_ButtonWithIconText_CM_C_ExecuteUbergraph_WBP_RadioSlider_ButtonWithIconText_CM, K2Node_ComponentBoundEvent_Button) == 0x000008, "Member 'WBP_RadioSlider_ButtonWithIconText_CM_C_ExecuteUbergraph_WBP_RadioSlider_ButtonWithIconText_CM::K2Node_ComponentBoundEvent_Button' has a wrong offset!");

// Function WBP_RadioSlider_ButtonWithIconText_CM.WBP_RadioSlider_ButtonWithIconText_CM_C.OnButtonClicked__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct WBP_RadioSlider_ButtonWithIconText_CM_C_OnButtonClicked__DelegateSignature final
{
public:
	class UWBP_RadioSlider_ButtonWithIconText_CM_C* Button;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_RadioSlider_ButtonWithIconText_CM_C_OnButtonClicked__DelegateSignature) == 0x000008, "Wrong alignment on WBP_RadioSlider_ButtonWithIconText_CM_C_OnButtonClicked__DelegateSignature");
static_assert(sizeof(WBP_RadioSlider_ButtonWithIconText_CM_C_OnButtonClicked__DelegateSignature) == 0x000008, "Wrong size on WBP_RadioSlider_ButtonWithIconText_CM_C_OnButtonClicked__DelegateSignature");
static_assert(offsetof(WBP_RadioSlider_ButtonWithIconText_CM_C_OnButtonClicked__DelegateSignature, Button) == 0x000000, "Member 'WBP_RadioSlider_ButtonWithIconText_CM_C_OnButtonClicked__DelegateSignature::Button' has a wrong offset!");

// Function WBP_RadioSlider_ButtonWithIconText_CM.WBP_RadioSlider_ButtonWithIconText_CM_C.SetActive
// 0x0050 (0x0050 - 0x0000)
struct WBP_RadioSlider_ButtonWithIconText_CM_C_SetActive final
{
public:
	bool                                          Active;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C93[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UVALUI_TextBlockStyle*                  InactiveStyle;                                     // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UVALUI_TextBlockStyle*                  ActiveStyle;                                       // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsConsole_ReturnValue;                    // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C94[0x5];                                     // 0x001B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UVALUI_TextBlockStyle*                  K2Node_Select_Default;                             // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C95[0x3];                                     // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           CallFunc_SelectColor_ReturnValue;                  // 0x002C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C96[0x4];                                     // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UVALUI_TextBlockStyle*                  K2Node_Select_Default_1;                           // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UVALUI_TextBlockStyle*                  K2Node_Select_Default_2;                           // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_RadioSlider_ButtonWithIconText_CM_C_SetActive) == 0x000008, "Wrong alignment on WBP_RadioSlider_ButtonWithIconText_CM_C_SetActive");
static_assert(sizeof(WBP_RadioSlider_ButtonWithIconText_CM_C_SetActive) == 0x000050, "Wrong size on WBP_RadioSlider_ButtonWithIconText_CM_C_SetActive");
static_assert(offsetof(WBP_RadioSlider_ButtonWithIconText_CM_C_SetActive, Active) == 0x000000, "Member 'WBP_RadioSlider_ButtonWithIconText_CM_C_SetActive::Active' has a wrong offset!");
static_assert(offsetof(WBP_RadioSlider_ButtonWithIconText_CM_C_SetActive, InactiveStyle) == 0x000008, "Member 'WBP_RadioSlider_ButtonWithIconText_CM_C_SetActive::InactiveStyle' has a wrong offset!");
static_assert(offsetof(WBP_RadioSlider_ButtonWithIconText_CM_C_SetActive, ActiveStyle) == 0x000010, "Member 'WBP_RadioSlider_ButtonWithIconText_CM_C_SetActive::ActiveStyle' has a wrong offset!");
static_assert(offsetof(WBP_RadioSlider_ButtonWithIconText_CM_C_SetActive, Temp_bool_Variable) == 0x000018, "Member 'WBP_RadioSlider_ButtonWithIconText_CM_C_SetActive::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_RadioSlider_ButtonWithIconText_CM_C_SetActive, Temp_bool_Variable_1) == 0x000019, "Member 'WBP_RadioSlider_ButtonWithIconText_CM_C_SetActive::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_RadioSlider_ButtonWithIconText_CM_C_SetActive, CallFunc_IsConsole_ReturnValue) == 0x00001A, "Member 'WBP_RadioSlider_ButtonWithIconText_CM_C_SetActive::CallFunc_IsConsole_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_RadioSlider_ButtonWithIconText_CM_C_SetActive, K2Node_Select_Default) == 0x000020, "Member 'WBP_RadioSlider_ButtonWithIconText_CM_C_SetActive::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_RadioSlider_ButtonWithIconText_CM_C_SetActive, Temp_bool_Variable_2) == 0x000028, "Member 'WBP_RadioSlider_ButtonWithIconText_CM_C_SetActive::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_RadioSlider_ButtonWithIconText_CM_C_SetActive, CallFunc_SelectColor_ReturnValue) == 0x00002C, "Member 'WBP_RadioSlider_ButtonWithIconText_CM_C_SetActive::CallFunc_SelectColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_RadioSlider_ButtonWithIconText_CM_C_SetActive, K2Node_Select_Default_1) == 0x000040, "Member 'WBP_RadioSlider_ButtonWithIconText_CM_C_SetActive::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(WBP_RadioSlider_ButtonWithIconText_CM_C_SetActive, K2Node_Select_Default_2) == 0x000048, "Member 'WBP_RadioSlider_ButtonWithIconText_CM_C_SetActive::K2Node_Select_Default_2' has a wrong offset!");

// Function WBP_RadioSlider_ButtonWithIconText_CM.WBP_RadioSlider_ButtonWithIconText_CM_C.SetIconAndText
// 0x0040 (0x0040 - 0x0000)
struct WBP_RadioSlider_ButtonWithIconText_CM_C_SetIconAndText final
{
public:
	class FText                                   Text;                                              // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
	TSoftObjectPtr<class UTexture2D>              Icon;                                              // 0x0018(0x0028)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(WBP_RadioSlider_ButtonWithIconText_CM_C_SetIconAndText) == 0x000008, "Wrong alignment on WBP_RadioSlider_ButtonWithIconText_CM_C_SetIconAndText");
static_assert(sizeof(WBP_RadioSlider_ButtonWithIconText_CM_C_SetIconAndText) == 0x000040, "Wrong size on WBP_RadioSlider_ButtonWithIconText_CM_C_SetIconAndText");
static_assert(offsetof(WBP_RadioSlider_ButtonWithIconText_CM_C_SetIconAndText, Text) == 0x000000, "Member 'WBP_RadioSlider_ButtonWithIconText_CM_C_SetIconAndText::Text' has a wrong offset!");
static_assert(offsetof(WBP_RadioSlider_ButtonWithIconText_CM_C_SetIconAndText, Icon) == 0x000018, "Member 'WBP_RadioSlider_ButtonWithIconText_CM_C_SetIconAndText::Icon' has a wrong offset!");

// Function WBP_RadioSlider_ButtonWithIconText_CM.WBP_RadioSlider_ButtonWithIconText_CM_C.SetIconVisibility
// 0x0005 (0x0005 - 0x0000)
struct WBP_RadioSlider_ButtonWithIconText_CM_C_SetIconVisibility final
{
public:
	bool                                          Param_IsVisible;                                   // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_RadioSlider_ButtonWithIconText_CM_C_SetIconVisibility) == 0x000001, "Wrong alignment on WBP_RadioSlider_ButtonWithIconText_CM_C_SetIconVisibility");
static_assert(sizeof(WBP_RadioSlider_ButtonWithIconText_CM_C_SetIconVisibility) == 0x000005, "Wrong size on WBP_RadioSlider_ButtonWithIconText_CM_C_SetIconVisibility");
static_assert(offsetof(WBP_RadioSlider_ButtonWithIconText_CM_C_SetIconVisibility, Param_IsVisible) == 0x000000, "Member 'WBP_RadioSlider_ButtonWithIconText_CM_C_SetIconVisibility::Param_IsVisible' has a wrong offset!");
static_assert(offsetof(WBP_RadioSlider_ButtonWithIconText_CM_C_SetIconVisibility, Temp_bool_Variable) == 0x000001, "Member 'WBP_RadioSlider_ButtonWithIconText_CM_C_SetIconVisibility::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_RadioSlider_ButtonWithIconText_CM_C_SetIconVisibility, Temp_byte_Variable) == 0x000002, "Member 'WBP_RadioSlider_ButtonWithIconText_CM_C_SetIconVisibility::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_RadioSlider_ButtonWithIconText_CM_C_SetIconVisibility, Temp_byte_Variable_1) == 0x000003, "Member 'WBP_RadioSlider_ButtonWithIconText_CM_C_SetIconVisibility::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_RadioSlider_ButtonWithIconText_CM_C_SetIconVisibility, K2Node_Select_Default) == 0x000004, "Member 'WBP_RadioSlider_ButtonWithIconText_CM_C_SetIconVisibility::K2Node_Select_Default' has a wrong offset!");

// Function WBP_RadioSlider_ButtonWithIconText_CM.WBP_RadioSlider_ButtonWithIconText_CM_C.SetNewPadding
// 0x0020 (0x0020 - 0x0000)
struct WBP_RadioSlider_ButtonWithIconText_CM_C_SetNewPadding final
{
public:
	struct FMargin                                Param_Padding;                                     // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class UOverlaySlot*                           CallFunc_SlotAsOverlaySlot_ReturnValue;            // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_RadioSlider_ButtonWithIconText_CM_C_SetNewPadding) == 0x000008, "Wrong alignment on WBP_RadioSlider_ButtonWithIconText_CM_C_SetNewPadding");
static_assert(sizeof(WBP_RadioSlider_ButtonWithIconText_CM_C_SetNewPadding) == 0x000020, "Wrong size on WBP_RadioSlider_ButtonWithIconText_CM_C_SetNewPadding");
static_assert(offsetof(WBP_RadioSlider_ButtonWithIconText_CM_C_SetNewPadding, Param_Padding) == 0x000000, "Member 'WBP_RadioSlider_ButtonWithIconText_CM_C_SetNewPadding::Param_Padding' has a wrong offset!");
static_assert(offsetof(WBP_RadioSlider_ButtonWithIconText_CM_C_SetNewPadding, CallFunc_SlotAsOverlaySlot_ReturnValue) == 0x000010, "Member 'WBP_RadioSlider_ButtonWithIconText_CM_C_SetNewPadding::CallFunc_SlotAsOverlaySlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_RadioSlider_ButtonWithIconText_CM_C_SetNewPadding, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'WBP_RadioSlider_ButtonWithIconText_CM_C_SetNewPadding::CallFunc_IsValid_ReturnValue' has a wrong offset!");

}

