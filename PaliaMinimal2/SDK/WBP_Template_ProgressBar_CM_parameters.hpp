#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_Template_ProgressBar_CM

#include "Basic.hpp"

#include "UMG_structs.hpp"
#include "SlateCore_structs.hpp"
#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function WBP_Template_ProgressBar_CM.WBP_Template_ProgressBar_CM_C.AttemptToSetSliderValue
// 0x0020 (0x0020 - 0x0000)
struct WBP_Template_ProgressBar_CM_C_AttemptToSetSliderValue final
{
public:
	double                                        Value;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          WasSet;                                            // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4B98[0x3];                                     // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetValue_ReturnValue;                     // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NearlyEqual_FloatFloat_ReturnValue;       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4B99[0x6];                                     // 0x0012(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_NearlyEqual_FloatFloat_A_ImplicitCast;    // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Template_ProgressBar_CM_C_AttemptToSetSliderValue) == 0x000008, "Wrong alignment on WBP_Template_ProgressBar_CM_C_AttemptToSetSliderValue");
static_assert(sizeof(WBP_Template_ProgressBar_CM_C_AttemptToSetSliderValue) == 0x000020, "Wrong size on WBP_Template_ProgressBar_CM_C_AttemptToSetSliderValue");
static_assert(offsetof(WBP_Template_ProgressBar_CM_C_AttemptToSetSliderValue, Value) == 0x000000, "Member 'WBP_Template_ProgressBar_CM_C_AttemptToSetSliderValue::Value' has a wrong offset!");
static_assert(offsetof(WBP_Template_ProgressBar_CM_C_AttemptToSetSliderValue, WasSet) == 0x000008, "Member 'WBP_Template_ProgressBar_CM_C_AttemptToSetSliderValue::WasSet' has a wrong offset!");
static_assert(offsetof(WBP_Template_ProgressBar_CM_C_AttemptToSetSliderValue, CallFunc_GetValue_ReturnValue) == 0x00000C, "Member 'WBP_Template_ProgressBar_CM_C_AttemptToSetSliderValue::CallFunc_GetValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Template_ProgressBar_CM_C_AttemptToSetSliderValue, CallFunc_NearlyEqual_FloatFloat_ReturnValue) == 0x000010, "Member 'WBP_Template_ProgressBar_CM_C_AttemptToSetSliderValue::CallFunc_NearlyEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Template_ProgressBar_CM_C_AttemptToSetSliderValue, CallFunc_Not_PreBool_ReturnValue) == 0x000011, "Member 'WBP_Template_ProgressBar_CM_C_AttemptToSetSliderValue::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Template_ProgressBar_CM_C_AttemptToSetSliderValue, CallFunc_NearlyEqual_FloatFloat_A_ImplicitCast) == 0x000018, "Member 'WBP_Template_ProgressBar_CM_C_AttemptToSetSliderValue::CallFunc_NearlyEqual_FloatFloat_A_ImplicitCast' has a wrong offset!");

// Function WBP_Template_ProgressBar_CM.WBP_Template_ProgressBar_CM_C.BndEvt__WBP_Template_ProgressBar_CM_WBP_Slider_CM_K2Node_ComponentBoundEvent_0_OnSliderValueChanged__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct WBP_Template_ProgressBar_CM_C_BndEvt__WBP_Template_ProgressBar_CM_WBP_Slider_CM_K2Node_ComponentBoundEvent_0_OnSliderValueChanged__DelegateSignature final
{
public:
	double                                        Value;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Template_ProgressBar_CM_C_BndEvt__WBP_Template_ProgressBar_CM_WBP_Slider_CM_K2Node_ComponentBoundEvent_0_OnSliderValueChanged__DelegateSignature) == 0x000008, "Wrong alignment on WBP_Template_ProgressBar_CM_C_BndEvt__WBP_Template_ProgressBar_CM_WBP_Slider_CM_K2Node_ComponentBoundEvent_0_OnSliderValueChanged__DelegateSignature");
static_assert(sizeof(WBP_Template_ProgressBar_CM_C_BndEvt__WBP_Template_ProgressBar_CM_WBP_Slider_CM_K2Node_ComponentBoundEvent_0_OnSliderValueChanged__DelegateSignature) == 0x000008, "Wrong size on WBP_Template_ProgressBar_CM_C_BndEvt__WBP_Template_ProgressBar_CM_WBP_Slider_CM_K2Node_ComponentBoundEvent_0_OnSliderValueChanged__DelegateSignature");
static_assert(offsetof(WBP_Template_ProgressBar_CM_C_BndEvt__WBP_Template_ProgressBar_CM_WBP_Slider_CM_K2Node_ComponentBoundEvent_0_OnSliderValueChanged__DelegateSignature, Value) == 0x000000, "Member 'WBP_Template_ProgressBar_CM_C_BndEvt__WBP_Template_ProgressBar_CM_WBP_Slider_CM_K2Node_ComponentBoundEvent_0_OnSliderValueChanged__DelegateSignature::Value' has a wrong offset!");

// Function WBP_Template_ProgressBar_CM.WBP_Template_ProgressBar_CM_C.Clamp Values
// 0x0048 (0x0048 - 0x0000)
struct WBP_Template_ProgressBar_CM_C_Clamp_Values final
{
public:
	double                                        Current;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Locked;                                            // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Max;                                               // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Possible;                                          // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue;                       // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue_1;                     // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FMin_ReturnValue;                         // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue_2;                     // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Template_ProgressBar_CM_C_Clamp_Values) == 0x000008, "Wrong alignment on WBP_Template_ProgressBar_CM_C_Clamp_Values");
static_assert(sizeof(WBP_Template_ProgressBar_CM_C_Clamp_Values) == 0x000048, "Wrong size on WBP_Template_ProgressBar_CM_C_Clamp_Values");
static_assert(offsetof(WBP_Template_ProgressBar_CM_C_Clamp_Values, Current) == 0x000000, "Member 'WBP_Template_ProgressBar_CM_C_Clamp_Values::Current' has a wrong offset!");
static_assert(offsetof(WBP_Template_ProgressBar_CM_C_Clamp_Values, Locked) == 0x000008, "Member 'WBP_Template_ProgressBar_CM_C_Clamp_Values::Locked' has a wrong offset!");
static_assert(offsetof(WBP_Template_ProgressBar_CM_C_Clamp_Values, Max) == 0x000010, "Member 'WBP_Template_ProgressBar_CM_C_Clamp_Values::Max' has a wrong offset!");
static_assert(offsetof(WBP_Template_ProgressBar_CM_C_Clamp_Values, Possible) == 0x000018, "Member 'WBP_Template_ProgressBar_CM_C_Clamp_Values::Possible' has a wrong offset!");
static_assert(offsetof(WBP_Template_ProgressBar_CM_C_Clamp_Values, CallFunc_FClamp_ReturnValue) == 0x000020, "Member 'WBP_Template_ProgressBar_CM_C_Clamp_Values::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Template_ProgressBar_CM_C_Clamp_Values, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000028, "Member 'WBP_Template_ProgressBar_CM_C_Clamp_Values::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Template_ProgressBar_CM_C_Clamp_Values, CallFunc_FClamp_ReturnValue_1) == 0x000030, "Member 'WBP_Template_ProgressBar_CM_C_Clamp_Values::CallFunc_FClamp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_Template_ProgressBar_CM_C_Clamp_Values, CallFunc_FMin_ReturnValue) == 0x000038, "Member 'WBP_Template_ProgressBar_CM_C_Clamp_Values::CallFunc_FMin_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Template_ProgressBar_CM_C_Clamp_Values, CallFunc_FClamp_ReturnValue_2) == 0x000040, "Member 'WBP_Template_ProgressBar_CM_C_Clamp_Values::CallFunc_FClamp_ReturnValue_2' has a wrong offset!");

// Function WBP_Template_ProgressBar_CM.WBP_Template_ProgressBar_CM_C.ExecuteUbergraph_WBP_Template_ProgressBar_CM
// 0x00D0 (0x00D0 - 0x0000)
struct WBP_Template_ProgressBar_CM_C_ExecuteUbergraph_WBP_Template_ProgressBar_CM final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4B9A[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetValue_ReturnValue;                     // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4B9B[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_ComponentBoundEvent_Value;                  // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGeometry                              K2Node_Event_MyGeometry;                           // 0x0018(0x0038)(IsPlainOldData, NoDestructor)
	struct FPointerEvent                          K2Node_Event_MouseEvent;                           // 0x0050(0x0078)(ConstParm)
	double                                        CallFunc_SetNewValue_Amount_ImplicitCast;          // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Template_ProgressBar_CM_C_ExecuteUbergraph_WBP_Template_ProgressBar_CM) == 0x000008, "Wrong alignment on WBP_Template_ProgressBar_CM_C_ExecuteUbergraph_WBP_Template_ProgressBar_CM");
static_assert(sizeof(WBP_Template_ProgressBar_CM_C_ExecuteUbergraph_WBP_Template_ProgressBar_CM) == 0x0000D0, "Wrong size on WBP_Template_ProgressBar_CM_C_ExecuteUbergraph_WBP_Template_ProgressBar_CM");
static_assert(offsetof(WBP_Template_ProgressBar_CM_C_ExecuteUbergraph_WBP_Template_ProgressBar_CM, EntryPoint) == 0x000000, "Member 'WBP_Template_ProgressBar_CM_C_ExecuteUbergraph_WBP_Template_ProgressBar_CM::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_Template_ProgressBar_CM_C_ExecuteUbergraph_WBP_Template_ProgressBar_CM, K2Node_Event_IsDesignTime) == 0x000004, "Member 'WBP_Template_ProgressBar_CM_C_ExecuteUbergraph_WBP_Template_ProgressBar_CM::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(WBP_Template_ProgressBar_CM_C_ExecuteUbergraph_WBP_Template_ProgressBar_CM, CallFunc_GetValue_ReturnValue) == 0x000008, "Member 'WBP_Template_ProgressBar_CM_C_ExecuteUbergraph_WBP_Template_ProgressBar_CM::CallFunc_GetValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Template_ProgressBar_CM_C_ExecuteUbergraph_WBP_Template_ProgressBar_CM, K2Node_ComponentBoundEvent_Value) == 0x000010, "Member 'WBP_Template_ProgressBar_CM_C_ExecuteUbergraph_WBP_Template_ProgressBar_CM::K2Node_ComponentBoundEvent_Value' has a wrong offset!");
static_assert(offsetof(WBP_Template_ProgressBar_CM_C_ExecuteUbergraph_WBP_Template_ProgressBar_CM, K2Node_Event_MyGeometry) == 0x000018, "Member 'WBP_Template_ProgressBar_CM_C_ExecuteUbergraph_WBP_Template_ProgressBar_CM::K2Node_Event_MyGeometry' has a wrong offset!");
static_assert(offsetof(WBP_Template_ProgressBar_CM_C_ExecuteUbergraph_WBP_Template_ProgressBar_CM, K2Node_Event_MouseEvent) == 0x000050, "Member 'WBP_Template_ProgressBar_CM_C_ExecuteUbergraph_WBP_Template_ProgressBar_CM::K2Node_Event_MouseEvent' has a wrong offset!");
static_assert(offsetof(WBP_Template_ProgressBar_CM_C_ExecuteUbergraph_WBP_Template_ProgressBar_CM, CallFunc_SetNewValue_Amount_ImplicitCast) == 0x0000C8, "Member 'WBP_Template_ProgressBar_CM_C_ExecuteUbergraph_WBP_Template_ProgressBar_CM::CallFunc_SetNewValue_Amount_ImplicitCast' has a wrong offset!");

// Function WBP_Template_ProgressBar_CM.WBP_Template_ProgressBar_CM_C.GetCurrentValue
// 0x0010 (0x0010 - 0x0000)
struct WBP_Template_ProgressBar_CM_C_GetCurrentValue final
{
public:
	double                                        ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Template_ProgressBar_CM_C_GetCurrentValue) == 0x000008, "Wrong alignment on WBP_Template_ProgressBar_CM_C_GetCurrentValue");
static_assert(sizeof(WBP_Template_ProgressBar_CM_C_GetCurrentValue) == 0x000010, "Wrong size on WBP_Template_ProgressBar_CM_C_GetCurrentValue");
static_assert(offsetof(WBP_Template_ProgressBar_CM_C_GetCurrentValue, ReturnValue) == 0x000000, "Member 'WBP_Template_ProgressBar_CM_C_GetCurrentValue::ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Template_ProgressBar_CM_C_GetCurrentValue, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000008, "Member 'WBP_Template_ProgressBar_CM_C_GetCurrentValue::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");

// Function WBP_Template_ProgressBar_CM.WBP_Template_ProgressBar_CM_C.InitializeValues
// 0x0050 (0x0050 - 0x0000)
struct WBP_Template_ProgressBar_CM_C_InitializeValues final
{
public:
	double                                        Current;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Locked;                                            // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Max;                                               // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Possible;                                          // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsKeepSliderValue;                                 // 0x0020(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4B9C[0x7];                                     // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_NormalizeValues_OutCurrent;               // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_NormalizeValues_OutLocked;                // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_NormalizeValues_OutMax;                   // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_NormalizeValues_OutPossible;              // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetValue_InValue_ImplicitCast;            // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Template_ProgressBar_CM_C_InitializeValues) == 0x000008, "Wrong alignment on WBP_Template_ProgressBar_CM_C_InitializeValues");
static_assert(sizeof(WBP_Template_ProgressBar_CM_C_InitializeValues) == 0x000050, "Wrong size on WBP_Template_ProgressBar_CM_C_InitializeValues");
static_assert(offsetof(WBP_Template_ProgressBar_CM_C_InitializeValues, Current) == 0x000000, "Member 'WBP_Template_ProgressBar_CM_C_InitializeValues::Current' has a wrong offset!");
static_assert(offsetof(WBP_Template_ProgressBar_CM_C_InitializeValues, Locked) == 0x000008, "Member 'WBP_Template_ProgressBar_CM_C_InitializeValues::Locked' has a wrong offset!");
static_assert(offsetof(WBP_Template_ProgressBar_CM_C_InitializeValues, Max) == 0x000010, "Member 'WBP_Template_ProgressBar_CM_C_InitializeValues::Max' has a wrong offset!");
static_assert(offsetof(WBP_Template_ProgressBar_CM_C_InitializeValues, Possible) == 0x000018, "Member 'WBP_Template_ProgressBar_CM_C_InitializeValues::Possible' has a wrong offset!");
static_assert(offsetof(WBP_Template_ProgressBar_CM_C_InitializeValues, IsKeepSliderValue) == 0x000020, "Member 'WBP_Template_ProgressBar_CM_C_InitializeValues::IsKeepSliderValue' has a wrong offset!");
static_assert(offsetof(WBP_Template_ProgressBar_CM_C_InitializeValues, CallFunc_NormalizeValues_OutCurrent) == 0x000028, "Member 'WBP_Template_ProgressBar_CM_C_InitializeValues::CallFunc_NormalizeValues_OutCurrent' has a wrong offset!");
static_assert(offsetof(WBP_Template_ProgressBar_CM_C_InitializeValues, CallFunc_NormalizeValues_OutLocked) == 0x000030, "Member 'WBP_Template_ProgressBar_CM_C_InitializeValues::CallFunc_NormalizeValues_OutLocked' has a wrong offset!");
static_assert(offsetof(WBP_Template_ProgressBar_CM_C_InitializeValues, CallFunc_NormalizeValues_OutMax) == 0x000038, "Member 'WBP_Template_ProgressBar_CM_C_InitializeValues::CallFunc_NormalizeValues_OutMax' has a wrong offset!");
static_assert(offsetof(WBP_Template_ProgressBar_CM_C_InitializeValues, CallFunc_NormalizeValues_OutPossible) == 0x000040, "Member 'WBP_Template_ProgressBar_CM_C_InitializeValues::CallFunc_NormalizeValues_OutPossible' has a wrong offset!");
static_assert(offsetof(WBP_Template_ProgressBar_CM_C_InitializeValues, CallFunc_SetValue_InValue_ImplicitCast) == 0x000048, "Member 'WBP_Template_ProgressBar_CM_C_InitializeValues::CallFunc_SetValue_InValue_ImplicitCast' has a wrong offset!");

// Function WBP_Template_ProgressBar_CM.WBP_Template_ProgressBar_CM_C.NormalizeValues
// 0x0080 (0x0080 - 0x0000)
struct WBP_Template_ProgressBar_CM_C_NormalizeValues final
{
public:
	double                                        Current;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Locked;                                            // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Max;                                               // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Possible;                                          // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        OutCurrent;                                        // 0x0020(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        OutLocked;                                         // 0x0028(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        OutMax;                                            // 0x0030(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        OutPossible;                                       // 0x0038(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_1;        // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_2;        // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_3;        // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_4;        // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_B_ImplicitCast;     // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetStepSize_InValue_ImplicitCast;         // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Template_ProgressBar_CM_C_NormalizeValues) == 0x000008, "Wrong alignment on WBP_Template_ProgressBar_CM_C_NormalizeValues");
static_assert(sizeof(WBP_Template_ProgressBar_CM_C_NormalizeValues) == 0x000080, "Wrong size on WBP_Template_ProgressBar_CM_C_NormalizeValues");
static_assert(offsetof(WBP_Template_ProgressBar_CM_C_NormalizeValues, Current) == 0x000000, "Member 'WBP_Template_ProgressBar_CM_C_NormalizeValues::Current' has a wrong offset!");
static_assert(offsetof(WBP_Template_ProgressBar_CM_C_NormalizeValues, Locked) == 0x000008, "Member 'WBP_Template_ProgressBar_CM_C_NormalizeValues::Locked' has a wrong offset!");
static_assert(offsetof(WBP_Template_ProgressBar_CM_C_NormalizeValues, Max) == 0x000010, "Member 'WBP_Template_ProgressBar_CM_C_NormalizeValues::Max' has a wrong offset!");
static_assert(offsetof(WBP_Template_ProgressBar_CM_C_NormalizeValues, Possible) == 0x000018, "Member 'WBP_Template_ProgressBar_CM_C_NormalizeValues::Possible' has a wrong offset!");
static_assert(offsetof(WBP_Template_ProgressBar_CM_C_NormalizeValues, OutCurrent) == 0x000020, "Member 'WBP_Template_ProgressBar_CM_C_NormalizeValues::OutCurrent' has a wrong offset!");
static_assert(offsetof(WBP_Template_ProgressBar_CM_C_NormalizeValues, OutLocked) == 0x000028, "Member 'WBP_Template_ProgressBar_CM_C_NormalizeValues::OutLocked' has a wrong offset!");
static_assert(offsetof(WBP_Template_ProgressBar_CM_C_NormalizeValues, OutMax) == 0x000030, "Member 'WBP_Template_ProgressBar_CM_C_NormalizeValues::OutMax' has a wrong offset!");
static_assert(offsetof(WBP_Template_ProgressBar_CM_C_NormalizeValues, OutPossible) == 0x000038, "Member 'WBP_Template_ProgressBar_CM_C_NormalizeValues::OutPossible' has a wrong offset!");
static_assert(offsetof(WBP_Template_ProgressBar_CM_C_NormalizeValues, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000040, "Member 'WBP_Template_ProgressBar_CM_C_NormalizeValues::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Template_ProgressBar_CM_C_NormalizeValues, CallFunc_Divide_DoubleDouble_ReturnValue_1) == 0x000048, "Member 'WBP_Template_ProgressBar_CM_C_NormalizeValues::CallFunc_Divide_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_Template_ProgressBar_CM_C_NormalizeValues, CallFunc_Divide_DoubleDouble_ReturnValue_2) == 0x000050, "Member 'WBP_Template_ProgressBar_CM_C_NormalizeValues::CallFunc_Divide_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_Template_ProgressBar_CM_C_NormalizeValues, CallFunc_Divide_DoubleDouble_ReturnValue_3) == 0x000058, "Member 'WBP_Template_ProgressBar_CM_C_NormalizeValues::CallFunc_Divide_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WBP_Template_ProgressBar_CM_C_NormalizeValues, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000060, "Member 'WBP_Template_ProgressBar_CM_C_NormalizeValues::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Template_ProgressBar_CM_C_NormalizeValues, CallFunc_Divide_DoubleDouble_ReturnValue_4) == 0x000068, "Member 'WBP_Template_ProgressBar_CM_C_NormalizeValues::CallFunc_Divide_DoubleDouble_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(WBP_Template_ProgressBar_CM_C_NormalizeValues, CallFunc_Subtract_DoubleDouble_B_ImplicitCast) == 0x000070, "Member 'WBP_Template_ProgressBar_CM_C_NormalizeValues::CallFunc_Subtract_DoubleDouble_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(WBP_Template_ProgressBar_CM_C_NormalizeValues, CallFunc_SetStepSize_InValue_ImplicitCast) == 0x000078, "Member 'WBP_Template_ProgressBar_CM_C_NormalizeValues::CallFunc_SetStepSize_InValue_ImplicitCast' has a wrong offset!");

// Function WBP_Template_ProgressBar_CM.WBP_Template_ProgressBar_CM_C.OnFocusedSlider__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct WBP_Template_ProgressBar_CM_C_OnFocusedSlider__DelegateSignature final
{
public:
	class UWidget*                                Widget;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Template_ProgressBar_CM_C_OnFocusedSlider__DelegateSignature) == 0x000008, "Wrong alignment on WBP_Template_ProgressBar_CM_C_OnFocusedSlider__DelegateSignature");
static_assert(sizeof(WBP_Template_ProgressBar_CM_C_OnFocusedSlider__DelegateSignature) == 0x000008, "Wrong size on WBP_Template_ProgressBar_CM_C_OnFocusedSlider__DelegateSignature");
static_assert(offsetof(WBP_Template_ProgressBar_CM_C_OnFocusedSlider__DelegateSignature, Widget) == 0x000000, "Member 'WBP_Template_ProgressBar_CM_C_OnFocusedSlider__DelegateSignature::Widget' has a wrong offset!");

// Function WBP_Template_ProgressBar_CM.WBP_Template_ProgressBar_CM_C.OnFocusReceived
// 0x01B0 (0x01B0 - 0x0000)
struct WBP_Template_ProgressBar_CM_C_OnFocusReceived final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FFocusEvent                            InFocusEvent;                                      // 0x0038(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	struct FEventReply                            ReturnValue;                                       // 0x0040(0x00B8)(Parm, OutParm, ReturnParm)
	struct FEventReply                            CallFunc_Handled_ReturnValue;                      // 0x00F8(0x00B8)()
};
static_assert(alignof(WBP_Template_ProgressBar_CM_C_OnFocusReceived) == 0x000008, "Wrong alignment on WBP_Template_ProgressBar_CM_C_OnFocusReceived");
static_assert(sizeof(WBP_Template_ProgressBar_CM_C_OnFocusReceived) == 0x0001B0, "Wrong size on WBP_Template_ProgressBar_CM_C_OnFocusReceived");
static_assert(offsetof(WBP_Template_ProgressBar_CM_C_OnFocusReceived, MyGeometry) == 0x000000, "Member 'WBP_Template_ProgressBar_CM_C_OnFocusReceived::MyGeometry' has a wrong offset!");
static_assert(offsetof(WBP_Template_ProgressBar_CM_C_OnFocusReceived, InFocusEvent) == 0x000038, "Member 'WBP_Template_ProgressBar_CM_C_OnFocusReceived::InFocusEvent' has a wrong offset!");
static_assert(offsetof(WBP_Template_ProgressBar_CM_C_OnFocusReceived, ReturnValue) == 0x000040, "Member 'WBP_Template_ProgressBar_CM_C_OnFocusReceived::ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Template_ProgressBar_CM_C_OnFocusReceived, CallFunc_Handled_ReturnValue) == 0x0000F8, "Member 'WBP_Template_ProgressBar_CM_C_OnFocusReceived::CallFunc_Handled_ReturnValue' has a wrong offset!");

// Function WBP_Template_ProgressBar_CM.WBP_Template_ProgressBar_CM_C.OnMouseEnter
// 0x00B0 (0x00B0 - 0x0000)
struct WBP_Template_ProgressBar_CM_C_OnMouseEnter final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FPointerEvent                          MouseEvent;                                        // 0x0038(0x0078)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(WBP_Template_ProgressBar_CM_C_OnMouseEnter) == 0x000008, "Wrong alignment on WBP_Template_ProgressBar_CM_C_OnMouseEnter");
static_assert(sizeof(WBP_Template_ProgressBar_CM_C_OnMouseEnter) == 0x0000B0, "Wrong size on WBP_Template_ProgressBar_CM_C_OnMouseEnter");
static_assert(offsetof(WBP_Template_ProgressBar_CM_C_OnMouseEnter, MyGeometry) == 0x000000, "Member 'WBP_Template_ProgressBar_CM_C_OnMouseEnter::MyGeometry' has a wrong offset!");
static_assert(offsetof(WBP_Template_ProgressBar_CM_C_OnMouseEnter, MouseEvent) == 0x000038, "Member 'WBP_Template_ProgressBar_CM_C_OnMouseEnter::MouseEvent' has a wrong offset!");

// Function WBP_Template_ProgressBar_CM.WBP_Template_ProgressBar_CM_C.OnSliderMouseEnter__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct WBP_Template_ProgressBar_CM_C_OnSliderMouseEnter__DelegateSignature final
{
public:
	class UWidget*                                Widget;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Template_ProgressBar_CM_C_OnSliderMouseEnter__DelegateSignature) == 0x000008, "Wrong alignment on WBP_Template_ProgressBar_CM_C_OnSliderMouseEnter__DelegateSignature");
static_assert(sizeof(WBP_Template_ProgressBar_CM_C_OnSliderMouseEnter__DelegateSignature) == 0x000008, "Wrong size on WBP_Template_ProgressBar_CM_C_OnSliderMouseEnter__DelegateSignature");
static_assert(offsetof(WBP_Template_ProgressBar_CM_C_OnSliderMouseEnter__DelegateSignature, Widget) == 0x000000, "Member 'WBP_Template_ProgressBar_CM_C_OnSliderMouseEnter__DelegateSignature::Widget' has a wrong offset!");

// Function WBP_Template_ProgressBar_CM.WBP_Template_ProgressBar_CM_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct WBP_Template_ProgressBar_CM_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Template_ProgressBar_CM_C_PreConstruct) == 0x000001, "Wrong alignment on WBP_Template_ProgressBar_CM_C_PreConstruct");
static_assert(sizeof(WBP_Template_ProgressBar_CM_C_PreConstruct) == 0x000001, "Wrong size on WBP_Template_ProgressBar_CM_C_PreConstruct");
static_assert(offsetof(WBP_Template_ProgressBar_CM_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'WBP_Template_ProgressBar_CM_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function WBP_Template_ProgressBar_CM.WBP_Template_ProgressBar_CM_C.SetNewValue
// 0x0010 (0x0010 - 0x0000)
struct WBP_Template_ProgressBar_CM_C_SetNewValue final
{
public:
	double                                        Amount;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Template_ProgressBar_CM_C_SetNewValue) == 0x000008, "Wrong alignment on WBP_Template_ProgressBar_CM_C_SetNewValue");
static_assert(sizeof(WBP_Template_ProgressBar_CM_C_SetNewValue) == 0x000010, "Wrong size on WBP_Template_ProgressBar_CM_C_SetNewValue");
static_assert(offsetof(WBP_Template_ProgressBar_CM_C_SetNewValue, Amount) == 0x000000, "Member 'WBP_Template_ProgressBar_CM_C_SetNewValue::Amount' has a wrong offset!");
static_assert(offsetof(WBP_Template_ProgressBar_CM_C_SetNewValue, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000008, "Member 'WBP_Template_ProgressBar_CM_C_SetNewValue::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");

// Function WBP_Template_ProgressBar_CM.WBP_Template_ProgressBar_CM_C.SetProgressBarState
// 0x0005 (0x0005 - 0x0000)
struct WBP_Template_ProgressBar_CM_C_SetProgressBarState final
{
public:
	bool                                          IsEnabled;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Template_ProgressBar_CM_C_SetProgressBarState) == 0x000001, "Wrong alignment on WBP_Template_ProgressBar_CM_C_SetProgressBarState");
static_assert(sizeof(WBP_Template_ProgressBar_CM_C_SetProgressBarState) == 0x000005, "Wrong size on WBP_Template_ProgressBar_CM_C_SetProgressBarState");
static_assert(offsetof(WBP_Template_ProgressBar_CM_C_SetProgressBarState, IsEnabled) == 0x000000, "Member 'WBP_Template_ProgressBar_CM_C_SetProgressBarState::IsEnabled' has a wrong offset!");
static_assert(offsetof(WBP_Template_ProgressBar_CM_C_SetProgressBarState, Temp_bool_Variable) == 0x000001, "Member 'WBP_Template_ProgressBar_CM_C_SetProgressBarState::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Template_ProgressBar_CM_C_SetProgressBarState, Temp_byte_Variable) == 0x000002, "Member 'WBP_Template_ProgressBar_CM_C_SetProgressBarState::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Template_ProgressBar_CM_C_SetProgressBarState, Temp_byte_Variable_1) == 0x000003, "Member 'WBP_Template_ProgressBar_CM_C_SetProgressBarState::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_Template_ProgressBar_CM_C_SetProgressBarState, K2Node_Select_Default) == 0x000004, "Member 'WBP_Template_ProgressBar_CM_C_SetProgressBarState::K2Node_Select_Default' has a wrong offset!");

// Function WBP_Template_ProgressBar_CM.WBP_Template_ProgressBar_CM_C.SetValues
// 0x0048 (0x0048 - 0x0000)
struct WBP_Template_ProgressBar_CM_C_SetValues final
{
public:
	double                                        Current;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Locked;                                            // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Max;                                               // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Possible;                                          // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetValue_ReturnValue;                     // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4B9D[0x4];                                     // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4B9E[0x7];                                     // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_FClamp_ReturnValue;                       // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_Value_ImplicitCast;                // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Template_ProgressBar_CM_C_SetValues) == 0x000008, "Wrong alignment on WBP_Template_ProgressBar_CM_C_SetValues");
static_assert(sizeof(WBP_Template_ProgressBar_CM_C_SetValues) == 0x000048, "Wrong size on WBP_Template_ProgressBar_CM_C_SetValues");
static_assert(offsetof(WBP_Template_ProgressBar_CM_C_SetValues, Current) == 0x000000, "Member 'WBP_Template_ProgressBar_CM_C_SetValues::Current' has a wrong offset!");
static_assert(offsetof(WBP_Template_ProgressBar_CM_C_SetValues, Locked) == 0x000008, "Member 'WBP_Template_ProgressBar_CM_C_SetValues::Locked' has a wrong offset!");
static_assert(offsetof(WBP_Template_ProgressBar_CM_C_SetValues, Max) == 0x000010, "Member 'WBP_Template_ProgressBar_CM_C_SetValues::Max' has a wrong offset!");
static_assert(offsetof(WBP_Template_ProgressBar_CM_C_SetValues, Possible) == 0x000018, "Member 'WBP_Template_ProgressBar_CM_C_SetValues::Possible' has a wrong offset!");
static_assert(offsetof(WBP_Template_ProgressBar_CM_C_SetValues, CallFunc_GetValue_ReturnValue) == 0x000020, "Member 'WBP_Template_ProgressBar_CM_C_SetValues::CallFunc_GetValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Template_ProgressBar_CM_C_SetValues, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000028, "Member 'WBP_Template_ProgressBar_CM_C_SetValues::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Template_ProgressBar_CM_C_SetValues, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000030, "Member 'WBP_Template_ProgressBar_CM_C_SetValues::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Template_ProgressBar_CM_C_SetValues, CallFunc_FClamp_ReturnValue) == 0x000038, "Member 'WBP_Template_ProgressBar_CM_C_SetValues::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Template_ProgressBar_CM_C_SetValues, CallFunc_FClamp_Value_ImplicitCast) == 0x000040, "Member 'WBP_Template_ProgressBar_CM_C_SetValues::CallFunc_FClamp_Value_ImplicitCast' has a wrong offset!");

// Function WBP_Template_ProgressBar_CM.WBP_Template_ProgressBar_CM_C.UpdateProgressVisuals
// 0x0260 (0x0260 - 0x0000)
struct WBP_Template_ProgressBar_CM_C_UpdateProgressVisuals final
{
public:
	double                                        _CurrentAndLocked;                                 // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_AkEventGlobal_ReturnValue;                // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue;                       // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue_1;                     // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4B9F[0x3];                                     // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4BA0[0x7];                                     // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Round_ReturnValue;                        // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4BA1[0x4];                                     // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x0040(0x0018)()
	int32                                         CallFunc_Round_ReturnValue_1;                      // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4BA2[0x4];                                     // 0x005C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_IntToText_ReturnValue_1;             // 0x0060(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0078(0x0050)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x00C8(0x0010)(ReferenceParm)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_2;      // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x00E0(0x0018)()
	int32                                         CallFunc_Round_ReturnValue_2;                      // 0x00F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4BA3[0x4];                                     // 0x00FC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	int64                                         CallFunc_Conv_IntToInt64_ReturnValue;              // 0x0100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x0108(0x0050)(HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_3;      // 0x0158(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Round_ReturnValue_3;                      // 0x0160(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4BA4[0x4];                                     // 0x0164(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	int64                                         CallFunc_Conv_IntToInt64_ReturnValue_1;            // 0x0168(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_DoubleDouble_ReturnValue;      // 0x0170(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4BA5[0x7];                                     // 0x0171(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_2;            // 0x0178(0x0050)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_1;                          // 0x01C8(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue_1;                     // 0x01D8(0x0018)()
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x01F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue;              // 0x01F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x0200(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_1;      // 0x0210(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue_1;            // 0x0218(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue_1;               // 0x0220(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0230(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_1;        // 0x0238(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetMaxValue_InValue_ImplicitCast;         // 0x0240(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4BA6[0x4];                                     // 0x0244(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Subtract_DoubleDouble_A_ImplicitCast;     // 0x0248(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_A_ImplicitCast_1;   // 0x0250(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetPercent_InPercent_ImplicitCast;        // 0x0258(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetPercent_InPercent_ImplicitCast_1;      // 0x025C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Template_ProgressBar_CM_C_UpdateProgressVisuals) == 0x000008, "Wrong alignment on WBP_Template_ProgressBar_CM_C_UpdateProgressVisuals");
static_assert(sizeof(WBP_Template_ProgressBar_CM_C_UpdateProgressVisuals) == 0x000260, "Wrong size on WBP_Template_ProgressBar_CM_C_UpdateProgressVisuals");
static_assert(offsetof(WBP_Template_ProgressBar_CM_C_UpdateProgressVisuals, _CurrentAndLocked) == 0x000000, "Member 'WBP_Template_ProgressBar_CM_C_UpdateProgressVisuals::_CurrentAndLocked' has a wrong offset!");
static_assert(offsetof(WBP_Template_ProgressBar_CM_C_UpdateProgressVisuals, CallFunc_AkEventGlobal_ReturnValue) == 0x000008, "Member 'WBP_Template_ProgressBar_CM_C_UpdateProgressVisuals::CallFunc_AkEventGlobal_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Template_ProgressBar_CM_C_UpdateProgressVisuals, CallFunc_FTrunc_ReturnValue) == 0x00000C, "Member 'WBP_Template_ProgressBar_CM_C_UpdateProgressVisuals::CallFunc_FTrunc_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Template_ProgressBar_CM_C_UpdateProgressVisuals, CallFunc_FTrunc_ReturnValue_1) == 0x000010, "Member 'WBP_Template_ProgressBar_CM_C_UpdateProgressVisuals::CallFunc_FTrunc_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_Template_ProgressBar_CM_C_UpdateProgressVisuals, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000014, "Member 'WBP_Template_ProgressBar_CM_C_UpdateProgressVisuals::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Template_ProgressBar_CM_C_UpdateProgressVisuals, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000018, "Member 'WBP_Template_ProgressBar_CM_C_UpdateProgressVisuals::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Template_ProgressBar_CM_C_UpdateProgressVisuals, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000020, "Member 'WBP_Template_ProgressBar_CM_C_UpdateProgressVisuals::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Template_ProgressBar_CM_C_UpdateProgressVisuals, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000028, "Member 'WBP_Template_ProgressBar_CM_C_UpdateProgressVisuals::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Template_ProgressBar_CM_C_UpdateProgressVisuals, CallFunc_Round_ReturnValue) == 0x000030, "Member 'WBP_Template_ProgressBar_CM_C_UpdateProgressVisuals::CallFunc_Round_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Template_ProgressBar_CM_C_UpdateProgressVisuals, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000038, "Member 'WBP_Template_ProgressBar_CM_C_UpdateProgressVisuals::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_Template_ProgressBar_CM_C_UpdateProgressVisuals, CallFunc_Conv_IntToText_ReturnValue) == 0x000040, "Member 'WBP_Template_ProgressBar_CM_C_UpdateProgressVisuals::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Template_ProgressBar_CM_C_UpdateProgressVisuals, CallFunc_Round_ReturnValue_1) == 0x000058, "Member 'WBP_Template_ProgressBar_CM_C_UpdateProgressVisuals::CallFunc_Round_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_Template_ProgressBar_CM_C_UpdateProgressVisuals, CallFunc_Conv_IntToText_ReturnValue_1) == 0x000060, "Member 'WBP_Template_ProgressBar_CM_C_UpdateProgressVisuals::CallFunc_Conv_IntToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_Template_ProgressBar_CM_C_UpdateProgressVisuals, K2Node_MakeStruct_FormatArgumentData) == 0x000078, "Member 'WBP_Template_ProgressBar_CM_C_UpdateProgressVisuals::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(WBP_Template_ProgressBar_CM_C_UpdateProgressVisuals, K2Node_MakeArray_Array) == 0x0000C8, "Member 'WBP_Template_ProgressBar_CM_C_UpdateProgressVisuals::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(WBP_Template_ProgressBar_CM_C_UpdateProgressVisuals, CallFunc_Multiply_DoubleDouble_ReturnValue_2) == 0x0000D8, "Member 'WBP_Template_ProgressBar_CM_C_UpdateProgressVisuals::CallFunc_Multiply_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_Template_ProgressBar_CM_C_UpdateProgressVisuals, CallFunc_Format_ReturnValue) == 0x0000E0, "Member 'WBP_Template_ProgressBar_CM_C_UpdateProgressVisuals::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Template_ProgressBar_CM_C_UpdateProgressVisuals, CallFunc_Round_ReturnValue_2) == 0x0000F8, "Member 'WBP_Template_ProgressBar_CM_C_UpdateProgressVisuals::CallFunc_Round_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_Template_ProgressBar_CM_C_UpdateProgressVisuals, CallFunc_Conv_IntToInt64_ReturnValue) == 0x000100, "Member 'WBP_Template_ProgressBar_CM_C_UpdateProgressVisuals::CallFunc_Conv_IntToInt64_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Template_ProgressBar_CM_C_UpdateProgressVisuals, K2Node_MakeStruct_FormatArgumentData_1) == 0x000108, "Member 'WBP_Template_ProgressBar_CM_C_UpdateProgressVisuals::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(WBP_Template_ProgressBar_CM_C_UpdateProgressVisuals, CallFunc_Multiply_DoubleDouble_ReturnValue_3) == 0x000158, "Member 'WBP_Template_ProgressBar_CM_C_UpdateProgressVisuals::CallFunc_Multiply_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WBP_Template_ProgressBar_CM_C_UpdateProgressVisuals, CallFunc_Round_ReturnValue_3) == 0x000160, "Member 'WBP_Template_ProgressBar_CM_C_UpdateProgressVisuals::CallFunc_Round_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WBP_Template_ProgressBar_CM_C_UpdateProgressVisuals, CallFunc_Conv_IntToInt64_ReturnValue_1) == 0x000168, "Member 'WBP_Template_ProgressBar_CM_C_UpdateProgressVisuals::CallFunc_Conv_IntToInt64_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_Template_ProgressBar_CM_C_UpdateProgressVisuals, CallFunc_EqualEqual_DoubleDouble_ReturnValue) == 0x000170, "Member 'WBP_Template_ProgressBar_CM_C_UpdateProgressVisuals::CallFunc_EqualEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Template_ProgressBar_CM_C_UpdateProgressVisuals, K2Node_MakeStruct_FormatArgumentData_2) == 0x000178, "Member 'WBP_Template_ProgressBar_CM_C_UpdateProgressVisuals::K2Node_MakeStruct_FormatArgumentData_2' has a wrong offset!");
static_assert(offsetof(WBP_Template_ProgressBar_CM_C_UpdateProgressVisuals, K2Node_MakeArray_Array_1) == 0x0001C8, "Member 'WBP_Template_ProgressBar_CM_C_UpdateProgressVisuals::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(WBP_Template_ProgressBar_CM_C_UpdateProgressVisuals, CallFunc_Format_ReturnValue_1) == 0x0001D8, "Member 'WBP_Template_ProgressBar_CM_C_UpdateProgressVisuals::CallFunc_Format_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_Template_ProgressBar_CM_C_UpdateProgressVisuals, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x0001F0, "Member 'WBP_Template_ProgressBar_CM_C_UpdateProgressVisuals::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Template_ProgressBar_CM_C_UpdateProgressVisuals, CallFunc_MapRangeClamped_ReturnValue) == 0x0001F8, "Member 'WBP_Template_ProgressBar_CM_C_UpdateProgressVisuals::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Template_ProgressBar_CM_C_UpdateProgressVisuals, CallFunc_MakeVector2D_ReturnValue) == 0x000200, "Member 'WBP_Template_ProgressBar_CM_C_UpdateProgressVisuals::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Template_ProgressBar_CM_C_UpdateProgressVisuals, CallFunc_Subtract_DoubleDouble_ReturnValue_1) == 0x000210, "Member 'WBP_Template_ProgressBar_CM_C_UpdateProgressVisuals::CallFunc_Subtract_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_Template_ProgressBar_CM_C_UpdateProgressVisuals, CallFunc_MapRangeClamped_ReturnValue_1) == 0x000218, "Member 'WBP_Template_ProgressBar_CM_C_UpdateProgressVisuals::CallFunc_MapRangeClamped_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_Template_ProgressBar_CM_C_UpdateProgressVisuals, CallFunc_MakeVector2D_ReturnValue_1) == 0x000220, "Member 'WBP_Template_ProgressBar_CM_C_UpdateProgressVisuals::CallFunc_MakeVector2D_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_Template_ProgressBar_CM_C_UpdateProgressVisuals, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000230, "Member 'WBP_Template_ProgressBar_CM_C_UpdateProgressVisuals::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Template_ProgressBar_CM_C_UpdateProgressVisuals, CallFunc_Divide_DoubleDouble_ReturnValue_1) == 0x000238, "Member 'WBP_Template_ProgressBar_CM_C_UpdateProgressVisuals::CallFunc_Divide_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_Template_ProgressBar_CM_C_UpdateProgressVisuals, CallFunc_SetMaxValue_InValue_ImplicitCast) == 0x000240, "Member 'WBP_Template_ProgressBar_CM_C_UpdateProgressVisuals::CallFunc_SetMaxValue_InValue_ImplicitCast' has a wrong offset!");
static_assert(offsetof(WBP_Template_ProgressBar_CM_C_UpdateProgressVisuals, CallFunc_Subtract_DoubleDouble_A_ImplicitCast) == 0x000248, "Member 'WBP_Template_ProgressBar_CM_C_UpdateProgressVisuals::CallFunc_Subtract_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(WBP_Template_ProgressBar_CM_C_UpdateProgressVisuals, CallFunc_Subtract_DoubleDouble_A_ImplicitCast_1) == 0x000250, "Member 'WBP_Template_ProgressBar_CM_C_UpdateProgressVisuals::CallFunc_Subtract_DoubleDouble_A_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(WBP_Template_ProgressBar_CM_C_UpdateProgressVisuals, CallFunc_SetPercent_InPercent_ImplicitCast) == 0x000258, "Member 'WBP_Template_ProgressBar_CM_C_UpdateProgressVisuals::CallFunc_SetPercent_InPercent_ImplicitCast' has a wrong offset!");
static_assert(offsetof(WBP_Template_ProgressBar_CM_C_UpdateProgressVisuals, CallFunc_SetPercent_InPercent_ImplicitCast_1) == 0x00025C, "Member 'WBP_Template_ProgressBar_CM_C_UpdateProgressVisuals::CallFunc_SetPercent_InPercent_ImplicitCast_1' has a wrong offset!");

}

