#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_NameValidator_AllowList_Preferred

#include "Basic.hpp"


namespace SDK::Params
{

// Function BP_NameValidator_AllowList_Preferred.BP_NameValidator_AllowList_Preferred_C.IsNameValid
// 0x0078 (0x0078 - 0x0000)
struct BP_NameValidator_AllowList_Preferred_C_IsNameValid final
{
public:
	class FString                                 InCharacterName;                                   // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Valid;                                             // 0x0011(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C4D[0x6];                                     // 0x0012(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FString>                         CallFunc_GetCharacterArrayFromString_ReturnValue;  // 0x0018(0x0010)(ReferenceParm)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C4E[0x3];                                     // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C4F[0x3];                                     // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C50[0x4];                                     // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Array_Get_Item;                           // 0x0040(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C51[0x3];                                     // 0x0051(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C52[0x7];                                     // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0060(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Contains_ReturnValue;                     // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_NameValidator_AllowList_Preferred_C_IsNameValid) == 0x000008, "Wrong alignment on BP_NameValidator_AllowList_Preferred_C_IsNameValid");
static_assert(sizeof(BP_NameValidator_AllowList_Preferred_C_IsNameValid) == 0x000078, "Wrong size on BP_NameValidator_AllowList_Preferred_C_IsNameValid");
static_assert(offsetof(BP_NameValidator_AllowList_Preferred_C_IsNameValid, InCharacterName) == 0x000000, "Member 'BP_NameValidator_AllowList_Preferred_C_IsNameValid::InCharacterName' has a wrong offset!");
static_assert(offsetof(BP_NameValidator_AllowList_Preferred_C_IsNameValid, ReturnValue) == 0x000010, "Member 'BP_NameValidator_AllowList_Preferred_C_IsNameValid::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NameValidator_AllowList_Preferred_C_IsNameValid, Valid) == 0x000011, "Member 'BP_NameValidator_AllowList_Preferred_C_IsNameValid::Valid' has a wrong offset!");
static_assert(offsetof(BP_NameValidator_AllowList_Preferred_C_IsNameValid, CallFunc_GetCharacterArrayFromString_ReturnValue) == 0x000018, "Member 'BP_NameValidator_AllowList_Preferred_C_IsNameValid::CallFunc_GetCharacterArrayFromString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NameValidator_AllowList_Preferred_C_IsNameValid, Temp_bool_True_if_break_was_hit_Variable) == 0x000028, "Member 'BP_NameValidator_AllowList_Preferred_C_IsNameValid::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(BP_NameValidator_AllowList_Preferred_C_IsNameValid, CallFunc_Array_Length_ReturnValue) == 0x00002C, "Member 'BP_NameValidator_AllowList_Preferred_C_IsNameValid::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NameValidator_AllowList_Preferred_C_IsNameValid, CallFunc_Not_PreBool_ReturnValue) == 0x000030, "Member 'BP_NameValidator_AllowList_Preferred_C_IsNameValid::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NameValidator_AllowList_Preferred_C_IsNameValid, Temp_int_Array_Index_Variable) == 0x000034, "Member 'BP_NameValidator_AllowList_Preferred_C_IsNameValid::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_NameValidator_AllowList_Preferred_C_IsNameValid, Temp_int_Loop_Counter_Variable) == 0x000038, "Member 'BP_NameValidator_AllowList_Preferred_C_IsNameValid::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_NameValidator_AllowList_Preferred_C_IsNameValid, CallFunc_Array_Get_Item) == 0x000040, "Member 'BP_NameValidator_AllowList_Preferred_C_IsNameValid::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_NameValidator_AllowList_Preferred_C_IsNameValid, CallFunc_Less_IntInt_ReturnValue) == 0x000050, "Member 'BP_NameValidator_AllowList_Preferred_C_IsNameValid::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NameValidator_AllowList_Preferred_C_IsNameValid, CallFunc_Add_IntInt_ReturnValue) == 0x000054, "Member 'BP_NameValidator_AllowList_Preferred_C_IsNameValid::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NameValidator_AllowList_Preferred_C_IsNameValid, CallFunc_BooleanAND_ReturnValue) == 0x000058, "Member 'BP_NameValidator_AllowList_Preferred_C_IsNameValid::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NameValidator_AllowList_Preferred_C_IsNameValid, CallFunc_Concat_StrStr_ReturnValue) == 0x000060, "Member 'BP_NameValidator_AllowList_Preferred_C_IsNameValid::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NameValidator_AllowList_Preferred_C_IsNameValid, CallFunc_Contains_ReturnValue) == 0x000070, "Member 'BP_NameValidator_AllowList_Preferred_C_IsNameValid::CallFunc_Contains_ReturnValue' has a wrong offset!");

}

