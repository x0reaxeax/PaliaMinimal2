#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Ak_Continuous

#include "Basic.hpp"

#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function Ak_Continuous.Ak_Continuous_C.Received_NotifyBegin
// 0x0070 (0x0070 - 0x0000)
struct Ak_Continuous_C_Received_NotifyBegin final
{
public:
	class USkeletalMeshComponent*                 MeshComp;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UAnimSequenceBase*                      Animation;                                         // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         TotalDuration;                                     // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4DE8[0x4];                                     // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FAnimNotifyEventReference              EventReference;                                    // 0x0018(0x0030)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	bool                                          ReturnValue;                                       // 0x0048(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsServer_ReturnValue;                     // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4DE9[0x6];                                     // 0x004A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0050(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x005A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_AkGetComponent_ComponentCreated;          // 0x005B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4DEA[0x4];                                     // 0x005C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAkComponent*                           CallFunc_AkGetComponent_AkComponent;               // 0x0060(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4DEB[0x3];                                     // 0x0069(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_AkEventComponent_ReturnValue;             // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ak_Continuous_C_Received_NotifyBegin) == 0x000008, "Wrong alignment on Ak_Continuous_C_Received_NotifyBegin");
static_assert(sizeof(Ak_Continuous_C_Received_NotifyBegin) == 0x000070, "Wrong size on Ak_Continuous_C_Received_NotifyBegin");
static_assert(offsetof(Ak_Continuous_C_Received_NotifyBegin, MeshComp) == 0x000000, "Member 'Ak_Continuous_C_Received_NotifyBegin::MeshComp' has a wrong offset!");
static_assert(offsetof(Ak_Continuous_C_Received_NotifyBegin, Animation) == 0x000008, "Member 'Ak_Continuous_C_Received_NotifyBegin::Animation' has a wrong offset!");
static_assert(offsetof(Ak_Continuous_C_Received_NotifyBegin, TotalDuration) == 0x000010, "Member 'Ak_Continuous_C_Received_NotifyBegin::TotalDuration' has a wrong offset!");
static_assert(offsetof(Ak_Continuous_C_Received_NotifyBegin, EventReference) == 0x000018, "Member 'Ak_Continuous_C_Received_NotifyBegin::EventReference' has a wrong offset!");
static_assert(offsetof(Ak_Continuous_C_Received_NotifyBegin, ReturnValue) == 0x000048, "Member 'Ak_Continuous_C_Received_NotifyBegin::ReturnValue' has a wrong offset!");
static_assert(offsetof(Ak_Continuous_C_Received_NotifyBegin, CallFunc_IsServer_ReturnValue) == 0x000049, "Member 'Ak_Continuous_C_Received_NotifyBegin::CallFunc_IsServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ak_Continuous_C_Received_NotifyBegin, CallFunc_GetGameInstance_ReturnValue) == 0x000050, "Member 'Ak_Continuous_C_Received_NotifyBegin::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ak_Continuous_C_Received_NotifyBegin, CallFunc_Not_PreBool_ReturnValue) == 0x000058, "Member 'Ak_Continuous_C_Received_NotifyBegin::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ak_Continuous_C_Received_NotifyBegin, CallFunc_IsValid_ReturnValue) == 0x000059, "Member 'Ak_Continuous_C_Received_NotifyBegin::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ak_Continuous_C_Received_NotifyBegin, CallFunc_IsValid_ReturnValue_1) == 0x00005A, "Member 'Ak_Continuous_C_Received_NotifyBegin::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ak_Continuous_C_Received_NotifyBegin, CallFunc_AkGetComponent_ComponentCreated) == 0x00005B, "Member 'Ak_Continuous_C_Received_NotifyBegin::CallFunc_AkGetComponent_ComponentCreated' has a wrong offset!");
static_assert(offsetof(Ak_Continuous_C_Received_NotifyBegin, CallFunc_AkGetComponent_AkComponent) == 0x000060, "Member 'Ak_Continuous_C_Received_NotifyBegin::CallFunc_AkGetComponent_AkComponent' has a wrong offset!");
static_assert(offsetof(Ak_Continuous_C_Received_NotifyBegin, CallFunc_IsValid_ReturnValue_2) == 0x000068, "Member 'Ak_Continuous_C_Received_NotifyBegin::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ak_Continuous_C_Received_NotifyBegin, CallFunc_AkEventComponent_ReturnValue) == 0x00006C, "Member 'Ak_Continuous_C_Received_NotifyBegin::CallFunc_AkEventComponent_ReturnValue' has a wrong offset!");

// Function Ak_Continuous.Ak_Continuous_C.Received_NotifyEnd
// 0x0060 (0x0060 - 0x0000)
struct Ak_Continuous_C_Received_NotifyEnd final
{
public:
	class USkeletalMeshComponent*                 MeshComp;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UAnimSequenceBase*                      Animation;                                         // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FAnimNotifyEventReference              EventReference;                                    // 0x0010(0x0030)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	bool                                          ReturnValue;                                       // 0x0040(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4DEC[0x7];                                     // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsServer_ReturnValue;                     // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0052(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4DED[0x1];                                     // 0x0053(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetAkNotifyId_ReturnValue;                // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ak_Continuous_C_Received_NotifyEnd) == 0x000008, "Wrong alignment on Ak_Continuous_C_Received_NotifyEnd");
static_assert(sizeof(Ak_Continuous_C_Received_NotifyEnd) == 0x000060, "Wrong size on Ak_Continuous_C_Received_NotifyEnd");
static_assert(offsetof(Ak_Continuous_C_Received_NotifyEnd, MeshComp) == 0x000000, "Member 'Ak_Continuous_C_Received_NotifyEnd::MeshComp' has a wrong offset!");
static_assert(offsetof(Ak_Continuous_C_Received_NotifyEnd, Animation) == 0x000008, "Member 'Ak_Continuous_C_Received_NotifyEnd::Animation' has a wrong offset!");
static_assert(offsetof(Ak_Continuous_C_Received_NotifyEnd, EventReference) == 0x000010, "Member 'Ak_Continuous_C_Received_NotifyEnd::EventReference' has a wrong offset!");
static_assert(offsetof(Ak_Continuous_C_Received_NotifyEnd, ReturnValue) == 0x000040, "Member 'Ak_Continuous_C_Received_NotifyEnd::ReturnValue' has a wrong offset!");
static_assert(offsetof(Ak_Continuous_C_Received_NotifyEnd, CallFunc_GetGameInstance_ReturnValue) == 0x000048, "Member 'Ak_Continuous_C_Received_NotifyEnd::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ak_Continuous_C_Received_NotifyEnd, CallFunc_IsServer_ReturnValue) == 0x000050, "Member 'Ak_Continuous_C_Received_NotifyEnd::CallFunc_IsServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ak_Continuous_C_Received_NotifyEnd, CallFunc_IsValid_ReturnValue) == 0x000051, "Member 'Ak_Continuous_C_Received_NotifyEnd::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ak_Continuous_C_Received_NotifyEnd, CallFunc_Not_PreBool_ReturnValue) == 0x000052, "Member 'Ak_Continuous_C_Received_NotifyEnd::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ak_Continuous_C_Received_NotifyEnd, CallFunc_GetAkNotifyId_ReturnValue) == 0x000054, "Member 'Ak_Continuous_C_Received_NotifyEnd::CallFunc_GetAkNotifyId_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ak_Continuous_C_Received_NotifyEnd, CallFunc_IsValid_ReturnValue_1) == 0x000058, "Member 'Ak_Continuous_C_Received_NotifyEnd::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");

}

