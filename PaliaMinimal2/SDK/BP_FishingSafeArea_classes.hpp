#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_FishingSafeArea

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "CoreUObject_structs.hpp"
#include "Palia_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_FishingSafeArea.BP_FishingSafeArea_C
// 0x00C0 (0x0368 - 0x02A8)
class ABP_FishingSafeArea_C final : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02A8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UAkComponent*                           Ak;                                                // 0x02B0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Plane;                                             // 0x02B8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x02C0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         Timeline_ReticleScaleProgress_3C7E62FF462162448E105C8DD8A7AFDF; // 0x02C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            Timeline__Direction_3C7E62FF462162448E105C8DD8A7AFDF; // 0x02CC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_46BE[0x3];                                     // 0x02CD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     Timeline;                                          // 0x02D0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          PreventSoundSpamSafeZoneOn;                        // 0x02D8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          PreventSoundSpamSafeZoneOff;                       // 0x02D9(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_46BF[0x6];                                     // 0x02DA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                PrevLocation;                                      // 0x02E0(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsScalingSafeZone;                                 // 0x02F8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_46C0[0x7];                                     // 0x02F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                DesiredSize;                                       // 0x0300(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           SafeZoneColor_Out;                                 // 0x0318(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           SafeZoneColor_Center;                              // 0x0328(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           SafeZoneColor_Edge;                                // 0x0338(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           SafeZoneColor_BobberLocation;                      // 0x0348(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           SafeZoneColor_JumpCaution;                         // 0x0358(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_FishingSafeArea(int32 EntryPoint, float K2Node_Event_DeltaSeconds, const struct FVector& CallFunc_Ak_Object_Velocity_Set_Previous_Location, double CallFunc_Ak_Object_Velocity_VectorLength, double CallFunc_Ak_Object_Velocity_VectorLengthClamped, int32 CallFunc_AkEventComponent_ReturnValue, const struct FVector& CallFunc_K2_GetComponentScale_ReturnValue, const struct FVector& CallFunc_VLerp_ReturnValue, double CallFunc_Ak_Object_Velocity_Delta_Time_ImplicitCast);
	void FishLost();
	void HandleFishLost(class UFishingViewComponent* FishingView, float CallFunc_GetSafeZoneLength_ReturnValue, double CallFunc_Multiply_DoubleDouble_ReturnValue, const struct FVector& CallFunc_Conv_DoubleToVector_ReturnValue, double CallFunc_Multiply_DoubleDouble_A_ImplicitCast);
	void InitSafeZoneColorParams(const struct FLinearColor& CallFunc_GetVectorParameterValue_ReturnValue, const struct FLinearColor& CallFunc_GetVectorParameterValue_ReturnValue_1, const struct FLinearColor& CallFunc_GetVectorParameterValue_ReturnValue_2, const struct FLinearColor& CallFunc_GetVectorParameterValue_ReturnValue_3, const struct FLinearColor& CallFunc_GetVectorParameterValue_ReturnValue_4);
	void ReceiveBeginPlay();
	void ReceiveDestroyed();
	void ReceiveTick(float DeltaSeconds);
	void Timeline__FinishedFunc();
	void Timeline__UpdateFunc();
	void UpdateFishingSafeZone(const struct FFishingMiniGameViewState& ViewState, class UFishingComponent* Fishing, class UFishingViewComponent* FishingView, EFishingSafeTier Temp_byte_Variable, int32 CallFunc_AkEventComponent_ReturnValue, EFishingSafeTier CallFunc_GetCurrentSafetyTier_ReturnValue, const struct FVector& CallFunc_K2_GetComponentLocation_ReturnValue, bool CallFunc_EqualEqual_ByteByte_ReturnValue, bool CallFunc_EqualEqual_ByteByte_ReturnValue_1, bool CallFunc_BooleanOR_ReturnValue, bool CallFunc_IsVisible_ReturnValue, bool CallFunc_BooleanAND_ReturnValue, class APlayerController* CallFunc_GetPlayerController_ReturnValue, class APlayerController* CallFunc_GetPlayerController_ReturnValue_1, bool CallFunc_IsLocalController_ReturnValue, bool CallFunc_IsLocalController_ReturnValue_1, int32 CallFunc_AkEventComponent_ReturnValue_1, const struct FSlateColor& K2Node_MakeStruct_SlateColor, const struct FSlateColor& K2Node_MakeStruct_SlateColor_1, float CallFunc_GetSafeZoneLength_ReturnValue, const struct FFishingMiniGameViewState& CallFunc_GetViewState_ReturnValue, double CallFunc_Multiply_DoubleDouble_ReturnValue, const struct FVector& CallFunc_Conv_DoubleToVector_ReturnValue, const struct FVector& CallFunc_BreakTransform_Location, const struct FRotator& CallFunc_BreakTransform_Rotation, const struct FVector& CallFunc_BreakTransform_Scale, const struct FVector& CallFunc_GetSafeZoneCenter_ReturnValue, const struct FVector& CallFunc_Add_VectorVector_ReturnValue, const struct FHitResult& CallFunc_K2_SetActorLocationAndRotation_SweepHitResult, bool CallFunc_K2_SetActorLocationAndRotation_ReturnValue, const struct FVector& CallFunc_Conv_LinearColorToVector_ReturnValue, double CallFunc_Vector_Distance_ReturnValue, double CallFunc_Multiply_DoubleDouble_ReturnValue_1, double CallFunc_FClamp_ReturnValue, const struct FLinearColor& CallFunc_LinearColorLerp_ReturnValue, const struct FSlateColor& K2Node_MakeStruct_SlateColor_2, struct FSlateColor& K2Node_Select_Default, double CallFunc_Multiply_DoubleDouble_A_ImplicitCast, float CallFunc_LinearColorLerp_Alpha_ImplicitCast);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_FishingSafeArea_C">();
	}
	static class ABP_FishingSafeArea_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_FishingSafeArea_C>();
	}
};
static_assert(alignof(ABP_FishingSafeArea_C) == 0x000008, "Wrong alignment on ABP_FishingSafeArea_C");
static_assert(sizeof(ABP_FishingSafeArea_C) == 0x000368, "Wrong size on ABP_FishingSafeArea_C");
static_assert(offsetof(ABP_FishingSafeArea_C, UberGraphFrame) == 0x0002A8, "Member 'ABP_FishingSafeArea_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_FishingSafeArea_C, Ak) == 0x0002B0, "Member 'ABP_FishingSafeArea_C::Ak' has a wrong offset!");
static_assert(offsetof(ABP_FishingSafeArea_C, Plane) == 0x0002B8, "Member 'ABP_FishingSafeArea_C::Plane' has a wrong offset!");
static_assert(offsetof(ABP_FishingSafeArea_C, DefaultSceneRoot) == 0x0002C0, "Member 'ABP_FishingSafeArea_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(ABP_FishingSafeArea_C, Timeline_ReticleScaleProgress_3C7E62FF462162448E105C8DD8A7AFDF) == 0x0002C8, "Member 'ABP_FishingSafeArea_C::Timeline_ReticleScaleProgress_3C7E62FF462162448E105C8DD8A7AFDF' has a wrong offset!");
static_assert(offsetof(ABP_FishingSafeArea_C, Timeline__Direction_3C7E62FF462162448E105C8DD8A7AFDF) == 0x0002CC, "Member 'ABP_FishingSafeArea_C::Timeline__Direction_3C7E62FF462162448E105C8DD8A7AFDF' has a wrong offset!");
static_assert(offsetof(ABP_FishingSafeArea_C, Timeline) == 0x0002D0, "Member 'ABP_FishingSafeArea_C::Timeline' has a wrong offset!");
static_assert(offsetof(ABP_FishingSafeArea_C, PreventSoundSpamSafeZoneOn) == 0x0002D8, "Member 'ABP_FishingSafeArea_C::PreventSoundSpamSafeZoneOn' has a wrong offset!");
static_assert(offsetof(ABP_FishingSafeArea_C, PreventSoundSpamSafeZoneOff) == 0x0002D9, "Member 'ABP_FishingSafeArea_C::PreventSoundSpamSafeZoneOff' has a wrong offset!");
static_assert(offsetof(ABP_FishingSafeArea_C, PrevLocation) == 0x0002E0, "Member 'ABP_FishingSafeArea_C::PrevLocation' has a wrong offset!");
static_assert(offsetof(ABP_FishingSafeArea_C, IsScalingSafeZone) == 0x0002F8, "Member 'ABP_FishingSafeArea_C::IsScalingSafeZone' has a wrong offset!");
static_assert(offsetof(ABP_FishingSafeArea_C, DesiredSize) == 0x000300, "Member 'ABP_FishingSafeArea_C::DesiredSize' has a wrong offset!");
static_assert(offsetof(ABP_FishingSafeArea_C, SafeZoneColor_Out) == 0x000318, "Member 'ABP_FishingSafeArea_C::SafeZoneColor_Out' has a wrong offset!");
static_assert(offsetof(ABP_FishingSafeArea_C, SafeZoneColor_Center) == 0x000328, "Member 'ABP_FishingSafeArea_C::SafeZoneColor_Center' has a wrong offset!");
static_assert(offsetof(ABP_FishingSafeArea_C, SafeZoneColor_Edge) == 0x000338, "Member 'ABP_FishingSafeArea_C::SafeZoneColor_Edge' has a wrong offset!");
static_assert(offsetof(ABP_FishingSafeArea_C, SafeZoneColor_BobberLocation) == 0x000348, "Member 'ABP_FishingSafeArea_C::SafeZoneColor_BobberLocation' has a wrong offset!");
static_assert(offsetof(ABP_FishingSafeArea_C, SafeZoneColor_JumpCaution) == 0x000358, "Member 'ABP_FishingSafeArea_C::SafeZoneColor_JumpCaution' has a wrong offset!");

}

