#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_OutOfBoundsVolume

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function BP_OutOfBoundsVolume.BP_OutOfBoundsVolume_C.ClientBeginOverlap
// 0x0108 (0x0108 - 0x0000)
struct BP_OutOfBoundsVolume_C_ClientBeginOverlap final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bFromSweep;                                        // 0x001C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_445F[0x3];                                     // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             SweepResult;                                       // 0x0020(0x00E8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(BP_OutOfBoundsVolume_C_ClientBeginOverlap) == 0x000008, "Wrong alignment on BP_OutOfBoundsVolume_C_ClientBeginOverlap");
static_assert(sizeof(BP_OutOfBoundsVolume_C_ClientBeginOverlap) == 0x000108, "Wrong size on BP_OutOfBoundsVolume_C_ClientBeginOverlap");
static_assert(offsetof(BP_OutOfBoundsVolume_C_ClientBeginOverlap, OverlappedComponent) == 0x000000, "Member 'BP_OutOfBoundsVolume_C_ClientBeginOverlap::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(BP_OutOfBoundsVolume_C_ClientBeginOverlap, OtherActor) == 0x000008, "Member 'BP_OutOfBoundsVolume_C_ClientBeginOverlap::OtherActor' has a wrong offset!");
static_assert(offsetof(BP_OutOfBoundsVolume_C_ClientBeginOverlap, OtherComp) == 0x000010, "Member 'BP_OutOfBoundsVolume_C_ClientBeginOverlap::OtherComp' has a wrong offset!");
static_assert(offsetof(BP_OutOfBoundsVolume_C_ClientBeginOverlap, OtherBodyIndex) == 0x000018, "Member 'BP_OutOfBoundsVolume_C_ClientBeginOverlap::OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(BP_OutOfBoundsVolume_C_ClientBeginOverlap, bFromSweep) == 0x00001C, "Member 'BP_OutOfBoundsVolume_C_ClientBeginOverlap::bFromSweep' has a wrong offset!");
static_assert(offsetof(BP_OutOfBoundsVolume_C_ClientBeginOverlap, SweepResult) == 0x000020, "Member 'BP_OutOfBoundsVolume_C_ClientBeginOverlap::SweepResult' has a wrong offset!");

// Function BP_OutOfBoundsVolume.BP_OutOfBoundsVolume_C.ClientEndOverlap
// 0x0020 (0x0020 - 0x0000)
struct BP_OutOfBoundsVolume_C_ClientEndOverlap final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_OutOfBoundsVolume_C_ClientEndOverlap) == 0x000008, "Wrong alignment on BP_OutOfBoundsVolume_C_ClientEndOverlap");
static_assert(sizeof(BP_OutOfBoundsVolume_C_ClientEndOverlap) == 0x000020, "Wrong size on BP_OutOfBoundsVolume_C_ClientEndOverlap");
static_assert(offsetof(BP_OutOfBoundsVolume_C_ClientEndOverlap, OverlappedComponent) == 0x000000, "Member 'BP_OutOfBoundsVolume_C_ClientEndOverlap::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(BP_OutOfBoundsVolume_C_ClientEndOverlap, OtherActor) == 0x000008, "Member 'BP_OutOfBoundsVolume_C_ClientEndOverlap::OtherActor' has a wrong offset!");
static_assert(offsetof(BP_OutOfBoundsVolume_C_ClientEndOverlap, OtherComp) == 0x000010, "Member 'BP_OutOfBoundsVolume_C_ClientEndOverlap::OtherComp' has a wrong offset!");
static_assert(offsetof(BP_OutOfBoundsVolume_C_ClientEndOverlap, OtherBodyIndex) == 0x000018, "Member 'BP_OutOfBoundsVolume_C_ClientEndOverlap::OtherBodyIndex' has a wrong offset!");

// Function BP_OutOfBoundsVolume.BP_OutOfBoundsVolume_C.ExecuteUbergraph_BP_OutOfBoundsVolume
// 0x0358 (0x0358 - 0x0000)
struct BP_OutOfBoundsVolume_C_ExecuteUbergraph_BP_OutOfBoundsVolume final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Whether_the_gate_is_currently_open_or_close_Variable; // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Has_Been_Initd_Variable;                 // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable;                       // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4460[0x1];                                     // 0x0007(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    K2Node_CustomEvent_OverlappedComponent_3;          // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_CustomEvent_OtherActor_3;                   // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_CustomEvent_OtherComp_3;                    // 0x0018(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_OtherBodyIndex_3;               // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_bFromSweep_1;                   // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4461[0x3];                                     // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             K2Node_CustomEvent_SweepResult_1;                  // 0x0028(0x00E8)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class UPrimitiveComponent*                    K2Node_CustomEvent_OverlappedComponent_2;          // 0x0110(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_CustomEvent_OtherActor_2;                   // 0x0118(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_CustomEvent_OtherComp_2;                    // 0x0120(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_OtherBodyIndex_2;               // 0x0128(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4462[0x4];                                     // 0x012C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AValeriaCharacter*                      K2Node_DynamicCast_AsValeria_Character;            // 0x0130(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0138(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsLocallyControlled_ReturnValue;          // 0x0139(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x013A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4463[0x5];                                     // 0x013B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0140(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetTimelineLength_ReturnValue;            // 0x0148(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4464[0x4];                                     // 0x014C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0150(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0158(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, struct FHitResult& SweepResult)> K2Node_CreateDelegate_OutputDelegate;              // 0x0160(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex)> K2Node_CreateDelegate_OutputDelegate_1;            // 0x0170(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsServer_ReturnValue;                     // 0x0180(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4465[0x3];                                     // 0x0181(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, struct FHitResult& SweepResult)> K2Node_CreateDelegate_OutputDelegate_2;            // 0x0184(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex)> K2Node_CreateDelegate_OutputDelegate_3;            // 0x0194(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4466[0x4];                                     // 0x01A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    K2Node_CustomEvent_OverlappedComponent_1;          // 0x01A8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_CustomEvent_OtherActor_1;                   // 0x01B0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_CustomEvent_OtherComp_1;                    // 0x01B8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_OtherBodyIndex_1;               // 0x01C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_bFromSweep;                     // 0x01C4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4467[0x3];                                     // 0x01C5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             K2Node_CustomEvent_SweepResult;                    // 0x01C8(0x00E8)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class UPrimitiveComponent*                    K2Node_CustomEvent_OverlappedComponent;            // 0x02B0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_CustomEvent_OtherActor;                     // 0x02B8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_CustomEvent_OtherComp;                      // 0x02C0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_OtherBodyIndex;                 // 0x02C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4468[0x4];                                     // 0x02CC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AValeriaCharacter*                      K2Node_DynamicCast_AsValeria_Character_1;          // 0x02D0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x02D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4469[0x7];                                     // 0x02D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AValeriaCharacter*                      K2Node_DynamicCast_AsValeria_Character_2;          // 0x02E0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x02E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_446A[0x7];                                     // 0x02E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_GetTimeSeconds_ReturnValue;               // 0x02F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x02F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Map_Length_ReturnValue;                   // 0x0300(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0304(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Remove_ReturnValue;                   // 0x0305(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_446B[0x2];                                     // 0x0306(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Map_Length_ReturnValue_1;                 // 0x0308(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_1;          // 0x030C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EEndPlayReason                                K2Node_Event_EndPlayReason;                        // 0x030D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_446C[0x2];                                     // 0x030E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_4;            // 0x0310(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0320(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0328(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_446D[0x3];                                     // 0x0329(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_AkEventActor_ReturnValue;                 // 0x032C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_A_ImplicitCast;       // 0x0330(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetPlayRate_NewRate_ImplicitCast;         // 0x0338(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RetriggerableDelay_Duration_ImplicitCast; // 0x033C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_K2_SetTimerDelegate_Time_ImplicitCast;    // 0x0340(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_446E[0x4];                                     // 0x0344(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_AkSetRTPC_Value_ImplicitCast;             // 0x0348(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_AkSetRTPC_Value_ImplicitCast_1;           // 0x0350(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_OutOfBoundsVolume_C_ExecuteUbergraph_BP_OutOfBoundsVolume) == 0x000008, "Wrong alignment on BP_OutOfBoundsVolume_C_ExecuteUbergraph_BP_OutOfBoundsVolume");
static_assert(sizeof(BP_OutOfBoundsVolume_C_ExecuteUbergraph_BP_OutOfBoundsVolume) == 0x000358, "Wrong size on BP_OutOfBoundsVolume_C_ExecuteUbergraph_BP_OutOfBoundsVolume");
static_assert(offsetof(BP_OutOfBoundsVolume_C_ExecuteUbergraph_BP_OutOfBoundsVolume, EntryPoint) == 0x000000, "Member 'BP_OutOfBoundsVolume_C_ExecuteUbergraph_BP_OutOfBoundsVolume::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_OutOfBoundsVolume_C_ExecuteUbergraph_BP_OutOfBoundsVolume, Temp_bool_Whether_the_gate_is_currently_open_or_close_Variable) == 0x000004, "Member 'BP_OutOfBoundsVolume_C_ExecuteUbergraph_BP_OutOfBoundsVolume::Temp_bool_Whether_the_gate_is_currently_open_or_close_Variable' has a wrong offset!");
static_assert(offsetof(BP_OutOfBoundsVolume_C_ExecuteUbergraph_BP_OutOfBoundsVolume, Temp_bool_Has_Been_Initd_Variable) == 0x000005, "Member 'BP_OutOfBoundsVolume_C_ExecuteUbergraph_BP_OutOfBoundsVolume::Temp_bool_Has_Been_Initd_Variable' has a wrong offset!");
static_assert(offsetof(BP_OutOfBoundsVolume_C_ExecuteUbergraph_BP_OutOfBoundsVolume, Temp_bool_IsClosed_Variable) == 0x000006, "Member 'BP_OutOfBoundsVolume_C_ExecuteUbergraph_BP_OutOfBoundsVolume::Temp_bool_IsClosed_Variable' has a wrong offset!");
static_assert(offsetof(BP_OutOfBoundsVolume_C_ExecuteUbergraph_BP_OutOfBoundsVolume, K2Node_CustomEvent_OverlappedComponent_3) == 0x000008, "Member 'BP_OutOfBoundsVolume_C_ExecuteUbergraph_BP_OutOfBoundsVolume::K2Node_CustomEvent_OverlappedComponent_3' has a wrong offset!");
static_assert(offsetof(BP_OutOfBoundsVolume_C_ExecuteUbergraph_BP_OutOfBoundsVolume, K2Node_CustomEvent_OtherActor_3) == 0x000010, "Member 'BP_OutOfBoundsVolume_C_ExecuteUbergraph_BP_OutOfBoundsVolume::K2Node_CustomEvent_OtherActor_3' has a wrong offset!");
static_assert(offsetof(BP_OutOfBoundsVolume_C_ExecuteUbergraph_BP_OutOfBoundsVolume, K2Node_CustomEvent_OtherComp_3) == 0x000018, "Member 'BP_OutOfBoundsVolume_C_ExecuteUbergraph_BP_OutOfBoundsVolume::K2Node_CustomEvent_OtherComp_3' has a wrong offset!");
static_assert(offsetof(BP_OutOfBoundsVolume_C_ExecuteUbergraph_BP_OutOfBoundsVolume, K2Node_CustomEvent_OtherBodyIndex_3) == 0x000020, "Member 'BP_OutOfBoundsVolume_C_ExecuteUbergraph_BP_OutOfBoundsVolume::K2Node_CustomEvent_OtherBodyIndex_3' has a wrong offset!");
static_assert(offsetof(BP_OutOfBoundsVolume_C_ExecuteUbergraph_BP_OutOfBoundsVolume, K2Node_CustomEvent_bFromSweep_1) == 0x000024, "Member 'BP_OutOfBoundsVolume_C_ExecuteUbergraph_BP_OutOfBoundsVolume::K2Node_CustomEvent_bFromSweep_1' has a wrong offset!");
static_assert(offsetof(BP_OutOfBoundsVolume_C_ExecuteUbergraph_BP_OutOfBoundsVolume, K2Node_CustomEvent_SweepResult_1) == 0x000028, "Member 'BP_OutOfBoundsVolume_C_ExecuteUbergraph_BP_OutOfBoundsVolume::K2Node_CustomEvent_SweepResult_1' has a wrong offset!");
static_assert(offsetof(BP_OutOfBoundsVolume_C_ExecuteUbergraph_BP_OutOfBoundsVolume, K2Node_CustomEvent_OverlappedComponent_2) == 0x000110, "Member 'BP_OutOfBoundsVolume_C_ExecuteUbergraph_BP_OutOfBoundsVolume::K2Node_CustomEvent_OverlappedComponent_2' has a wrong offset!");
static_assert(offsetof(BP_OutOfBoundsVolume_C_ExecuteUbergraph_BP_OutOfBoundsVolume, K2Node_CustomEvent_OtherActor_2) == 0x000118, "Member 'BP_OutOfBoundsVolume_C_ExecuteUbergraph_BP_OutOfBoundsVolume::K2Node_CustomEvent_OtherActor_2' has a wrong offset!");
static_assert(offsetof(BP_OutOfBoundsVolume_C_ExecuteUbergraph_BP_OutOfBoundsVolume, K2Node_CustomEvent_OtherComp_2) == 0x000120, "Member 'BP_OutOfBoundsVolume_C_ExecuteUbergraph_BP_OutOfBoundsVolume::K2Node_CustomEvent_OtherComp_2' has a wrong offset!");
static_assert(offsetof(BP_OutOfBoundsVolume_C_ExecuteUbergraph_BP_OutOfBoundsVolume, K2Node_CustomEvent_OtherBodyIndex_2) == 0x000128, "Member 'BP_OutOfBoundsVolume_C_ExecuteUbergraph_BP_OutOfBoundsVolume::K2Node_CustomEvent_OtherBodyIndex_2' has a wrong offset!");
static_assert(offsetof(BP_OutOfBoundsVolume_C_ExecuteUbergraph_BP_OutOfBoundsVolume, K2Node_DynamicCast_AsValeria_Character) == 0x000130, "Member 'BP_OutOfBoundsVolume_C_ExecuteUbergraph_BP_OutOfBoundsVolume::K2Node_DynamicCast_AsValeria_Character' has a wrong offset!");
static_assert(offsetof(BP_OutOfBoundsVolume_C_ExecuteUbergraph_BP_OutOfBoundsVolume, K2Node_DynamicCast_bSuccess) == 0x000138, "Member 'BP_OutOfBoundsVolume_C_ExecuteUbergraph_BP_OutOfBoundsVolume::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_OutOfBoundsVolume_C_ExecuteUbergraph_BP_OutOfBoundsVolume, CallFunc_IsLocallyControlled_ReturnValue) == 0x000139, "Member 'BP_OutOfBoundsVolume_C_ExecuteUbergraph_BP_OutOfBoundsVolume::CallFunc_IsLocallyControlled_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_OutOfBoundsVolume_C_ExecuteUbergraph_BP_OutOfBoundsVolume, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x00013A, "Member 'BP_OutOfBoundsVolume_C_ExecuteUbergraph_BP_OutOfBoundsVolume::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_OutOfBoundsVolume_C_ExecuteUbergraph_BP_OutOfBoundsVolume, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000140, "Member 'BP_OutOfBoundsVolume_C_ExecuteUbergraph_BP_OutOfBoundsVolume::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_OutOfBoundsVolume_C_ExecuteUbergraph_BP_OutOfBoundsVolume, CallFunc_GetTimelineLength_ReturnValue) == 0x000148, "Member 'BP_OutOfBoundsVolume_C_ExecuteUbergraph_BP_OutOfBoundsVolume::CallFunc_GetTimelineLength_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_OutOfBoundsVolume_C_ExecuteUbergraph_BP_OutOfBoundsVolume, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000150, "Member 'BP_OutOfBoundsVolume_C_ExecuteUbergraph_BP_OutOfBoundsVolume::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_OutOfBoundsVolume_C_ExecuteUbergraph_BP_OutOfBoundsVolume, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000158, "Member 'BP_OutOfBoundsVolume_C_ExecuteUbergraph_BP_OutOfBoundsVolume::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_OutOfBoundsVolume_C_ExecuteUbergraph_BP_OutOfBoundsVolume, K2Node_CreateDelegate_OutputDelegate) == 0x000160, "Member 'BP_OutOfBoundsVolume_C_ExecuteUbergraph_BP_OutOfBoundsVolume::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_OutOfBoundsVolume_C_ExecuteUbergraph_BP_OutOfBoundsVolume, K2Node_CreateDelegate_OutputDelegate_1) == 0x000170, "Member 'BP_OutOfBoundsVolume_C_ExecuteUbergraph_BP_OutOfBoundsVolume::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(BP_OutOfBoundsVolume_C_ExecuteUbergraph_BP_OutOfBoundsVolume, CallFunc_IsServer_ReturnValue) == 0x000180, "Member 'BP_OutOfBoundsVolume_C_ExecuteUbergraph_BP_OutOfBoundsVolume::CallFunc_IsServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_OutOfBoundsVolume_C_ExecuteUbergraph_BP_OutOfBoundsVolume, K2Node_CreateDelegate_OutputDelegate_2) == 0x000184, "Member 'BP_OutOfBoundsVolume_C_ExecuteUbergraph_BP_OutOfBoundsVolume::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(BP_OutOfBoundsVolume_C_ExecuteUbergraph_BP_OutOfBoundsVolume, K2Node_CreateDelegate_OutputDelegate_3) == 0x000194, "Member 'BP_OutOfBoundsVolume_C_ExecuteUbergraph_BP_OutOfBoundsVolume::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");
static_assert(offsetof(BP_OutOfBoundsVolume_C_ExecuteUbergraph_BP_OutOfBoundsVolume, K2Node_CustomEvent_OverlappedComponent_1) == 0x0001A8, "Member 'BP_OutOfBoundsVolume_C_ExecuteUbergraph_BP_OutOfBoundsVolume::K2Node_CustomEvent_OverlappedComponent_1' has a wrong offset!");
static_assert(offsetof(BP_OutOfBoundsVolume_C_ExecuteUbergraph_BP_OutOfBoundsVolume, K2Node_CustomEvent_OtherActor_1) == 0x0001B0, "Member 'BP_OutOfBoundsVolume_C_ExecuteUbergraph_BP_OutOfBoundsVolume::K2Node_CustomEvent_OtherActor_1' has a wrong offset!");
static_assert(offsetof(BP_OutOfBoundsVolume_C_ExecuteUbergraph_BP_OutOfBoundsVolume, K2Node_CustomEvent_OtherComp_1) == 0x0001B8, "Member 'BP_OutOfBoundsVolume_C_ExecuteUbergraph_BP_OutOfBoundsVolume::K2Node_CustomEvent_OtherComp_1' has a wrong offset!");
static_assert(offsetof(BP_OutOfBoundsVolume_C_ExecuteUbergraph_BP_OutOfBoundsVolume, K2Node_CustomEvent_OtherBodyIndex_1) == 0x0001C0, "Member 'BP_OutOfBoundsVolume_C_ExecuteUbergraph_BP_OutOfBoundsVolume::K2Node_CustomEvent_OtherBodyIndex_1' has a wrong offset!");
static_assert(offsetof(BP_OutOfBoundsVolume_C_ExecuteUbergraph_BP_OutOfBoundsVolume, K2Node_CustomEvent_bFromSweep) == 0x0001C4, "Member 'BP_OutOfBoundsVolume_C_ExecuteUbergraph_BP_OutOfBoundsVolume::K2Node_CustomEvent_bFromSweep' has a wrong offset!");
static_assert(offsetof(BP_OutOfBoundsVolume_C_ExecuteUbergraph_BP_OutOfBoundsVolume, K2Node_CustomEvent_SweepResult) == 0x0001C8, "Member 'BP_OutOfBoundsVolume_C_ExecuteUbergraph_BP_OutOfBoundsVolume::K2Node_CustomEvent_SweepResult' has a wrong offset!");
static_assert(offsetof(BP_OutOfBoundsVolume_C_ExecuteUbergraph_BP_OutOfBoundsVolume, K2Node_CustomEvent_OverlappedComponent) == 0x0002B0, "Member 'BP_OutOfBoundsVolume_C_ExecuteUbergraph_BP_OutOfBoundsVolume::K2Node_CustomEvent_OverlappedComponent' has a wrong offset!");
static_assert(offsetof(BP_OutOfBoundsVolume_C_ExecuteUbergraph_BP_OutOfBoundsVolume, K2Node_CustomEvent_OtherActor) == 0x0002B8, "Member 'BP_OutOfBoundsVolume_C_ExecuteUbergraph_BP_OutOfBoundsVolume::K2Node_CustomEvent_OtherActor' has a wrong offset!");
static_assert(offsetof(BP_OutOfBoundsVolume_C_ExecuteUbergraph_BP_OutOfBoundsVolume, K2Node_CustomEvent_OtherComp) == 0x0002C0, "Member 'BP_OutOfBoundsVolume_C_ExecuteUbergraph_BP_OutOfBoundsVolume::K2Node_CustomEvent_OtherComp' has a wrong offset!");
static_assert(offsetof(BP_OutOfBoundsVolume_C_ExecuteUbergraph_BP_OutOfBoundsVolume, K2Node_CustomEvent_OtherBodyIndex) == 0x0002C8, "Member 'BP_OutOfBoundsVolume_C_ExecuteUbergraph_BP_OutOfBoundsVolume::K2Node_CustomEvent_OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(BP_OutOfBoundsVolume_C_ExecuteUbergraph_BP_OutOfBoundsVolume, K2Node_DynamicCast_AsValeria_Character_1) == 0x0002D0, "Member 'BP_OutOfBoundsVolume_C_ExecuteUbergraph_BP_OutOfBoundsVolume::K2Node_DynamicCast_AsValeria_Character_1' has a wrong offset!");
static_assert(offsetof(BP_OutOfBoundsVolume_C_ExecuteUbergraph_BP_OutOfBoundsVolume, K2Node_DynamicCast_bSuccess_1) == 0x0002D8, "Member 'BP_OutOfBoundsVolume_C_ExecuteUbergraph_BP_OutOfBoundsVolume::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_OutOfBoundsVolume_C_ExecuteUbergraph_BP_OutOfBoundsVolume, K2Node_DynamicCast_AsValeria_Character_2) == 0x0002E0, "Member 'BP_OutOfBoundsVolume_C_ExecuteUbergraph_BP_OutOfBoundsVolume::K2Node_DynamicCast_AsValeria_Character_2' has a wrong offset!");
static_assert(offsetof(BP_OutOfBoundsVolume_C_ExecuteUbergraph_BP_OutOfBoundsVolume, K2Node_DynamicCast_bSuccess_2) == 0x0002E8, "Member 'BP_OutOfBoundsVolume_C_ExecuteUbergraph_BP_OutOfBoundsVolume::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_OutOfBoundsVolume_C_ExecuteUbergraph_BP_OutOfBoundsVolume, CallFunc_GetTimeSeconds_ReturnValue) == 0x0002F0, "Member 'BP_OutOfBoundsVolume_C_ExecuteUbergraph_BP_OutOfBoundsVolume::CallFunc_GetTimeSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_OutOfBoundsVolume_C_ExecuteUbergraph_BP_OutOfBoundsVolume, CallFunc_Add_DoubleDouble_ReturnValue) == 0x0002F8, "Member 'BP_OutOfBoundsVolume_C_ExecuteUbergraph_BP_OutOfBoundsVolume::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_OutOfBoundsVolume_C_ExecuteUbergraph_BP_OutOfBoundsVolume, CallFunc_Map_Length_ReturnValue) == 0x000300, "Member 'BP_OutOfBoundsVolume_C_ExecuteUbergraph_BP_OutOfBoundsVolume::CallFunc_Map_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_OutOfBoundsVolume_C_ExecuteUbergraph_BP_OutOfBoundsVolume, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000304, "Member 'BP_OutOfBoundsVolume_C_ExecuteUbergraph_BP_OutOfBoundsVolume::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_OutOfBoundsVolume_C_ExecuteUbergraph_BP_OutOfBoundsVolume, CallFunc_Map_Remove_ReturnValue) == 0x000305, "Member 'BP_OutOfBoundsVolume_C_ExecuteUbergraph_BP_OutOfBoundsVolume::CallFunc_Map_Remove_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_OutOfBoundsVolume_C_ExecuteUbergraph_BP_OutOfBoundsVolume, CallFunc_Map_Length_ReturnValue_1) == 0x000308, "Member 'BP_OutOfBoundsVolume_C_ExecuteUbergraph_BP_OutOfBoundsVolume::CallFunc_Map_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_OutOfBoundsVolume_C_ExecuteUbergraph_BP_OutOfBoundsVolume, CallFunc_EqualEqual_IntInt_ReturnValue_1) == 0x00030C, "Member 'BP_OutOfBoundsVolume_C_ExecuteUbergraph_BP_OutOfBoundsVolume::CallFunc_EqualEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_OutOfBoundsVolume_C_ExecuteUbergraph_BP_OutOfBoundsVolume, K2Node_Event_EndPlayReason) == 0x00030D, "Member 'BP_OutOfBoundsVolume_C_ExecuteUbergraph_BP_OutOfBoundsVolume::K2Node_Event_EndPlayReason' has a wrong offset!");
static_assert(offsetof(BP_OutOfBoundsVolume_C_ExecuteUbergraph_BP_OutOfBoundsVolume, K2Node_CreateDelegate_OutputDelegate_4) == 0x000310, "Member 'BP_OutOfBoundsVolume_C_ExecuteUbergraph_BP_OutOfBoundsVolume::K2Node_CreateDelegate_OutputDelegate_4' has a wrong offset!");
static_assert(offsetof(BP_OutOfBoundsVolume_C_ExecuteUbergraph_BP_OutOfBoundsVolume, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000320, "Member 'BP_OutOfBoundsVolume_C_ExecuteUbergraph_BP_OutOfBoundsVolume::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_OutOfBoundsVolume_C_ExecuteUbergraph_BP_OutOfBoundsVolume, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000328, "Member 'BP_OutOfBoundsVolume_C_ExecuteUbergraph_BP_OutOfBoundsVolume::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_OutOfBoundsVolume_C_ExecuteUbergraph_BP_OutOfBoundsVolume, CallFunc_AkEventActor_ReturnValue) == 0x00032C, "Member 'BP_OutOfBoundsVolume_C_ExecuteUbergraph_BP_OutOfBoundsVolume::CallFunc_AkEventActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_OutOfBoundsVolume_C_ExecuteUbergraph_BP_OutOfBoundsVolume, CallFunc_Divide_DoubleDouble_A_ImplicitCast) == 0x000330, "Member 'BP_OutOfBoundsVolume_C_ExecuteUbergraph_BP_OutOfBoundsVolume::CallFunc_Divide_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_OutOfBoundsVolume_C_ExecuteUbergraph_BP_OutOfBoundsVolume, CallFunc_SetPlayRate_NewRate_ImplicitCast) == 0x000338, "Member 'BP_OutOfBoundsVolume_C_ExecuteUbergraph_BP_OutOfBoundsVolume::CallFunc_SetPlayRate_NewRate_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_OutOfBoundsVolume_C_ExecuteUbergraph_BP_OutOfBoundsVolume, CallFunc_RetriggerableDelay_Duration_ImplicitCast) == 0x00033C, "Member 'BP_OutOfBoundsVolume_C_ExecuteUbergraph_BP_OutOfBoundsVolume::CallFunc_RetriggerableDelay_Duration_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_OutOfBoundsVolume_C_ExecuteUbergraph_BP_OutOfBoundsVolume, CallFunc_K2_SetTimerDelegate_Time_ImplicitCast) == 0x000340, "Member 'BP_OutOfBoundsVolume_C_ExecuteUbergraph_BP_OutOfBoundsVolume::CallFunc_K2_SetTimerDelegate_Time_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_OutOfBoundsVolume_C_ExecuteUbergraph_BP_OutOfBoundsVolume, CallFunc_AkSetRTPC_Value_ImplicitCast) == 0x000348, "Member 'BP_OutOfBoundsVolume_C_ExecuteUbergraph_BP_OutOfBoundsVolume::CallFunc_AkSetRTPC_Value_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_OutOfBoundsVolume_C_ExecuteUbergraph_BP_OutOfBoundsVolume, CallFunc_AkSetRTPC_Value_ImplicitCast_1) == 0x000350, "Member 'BP_OutOfBoundsVolume_C_ExecuteUbergraph_BP_OutOfBoundsVolume::CallFunc_AkSetRTPC_Value_ImplicitCast_1' has a wrong offset!");

// Function BP_OutOfBoundsVolume.BP_OutOfBoundsVolume_C.FindClosestActor
// 0x0028 (0x0028 - 0x0000)
struct BP_OutOfBoundsVolume_C_FindClosestActor final
{
public:
	TArray<class AActor*>                         Actors;                                            // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	TArray<class AActor*>                         Actor;                                             // 0x0010(0x0010)(Parm, OutParm)
	double                                        Distance;                                          // 0x0020(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_OutOfBoundsVolume_C_FindClosestActor) == 0x000008, "Wrong alignment on BP_OutOfBoundsVolume_C_FindClosestActor");
static_assert(sizeof(BP_OutOfBoundsVolume_C_FindClosestActor) == 0x000028, "Wrong size on BP_OutOfBoundsVolume_C_FindClosestActor");
static_assert(offsetof(BP_OutOfBoundsVolume_C_FindClosestActor, Actors) == 0x000000, "Member 'BP_OutOfBoundsVolume_C_FindClosestActor::Actors' has a wrong offset!");
static_assert(offsetof(BP_OutOfBoundsVolume_C_FindClosestActor, Actor) == 0x000010, "Member 'BP_OutOfBoundsVolume_C_FindClosestActor::Actor' has a wrong offset!");
static_assert(offsetof(BP_OutOfBoundsVolume_C_FindClosestActor, Distance) == 0x000020, "Member 'BP_OutOfBoundsVolume_C_FindClosestActor::Distance' has a wrong offset!");

// Function BP_OutOfBoundsVolume.BP_OutOfBoundsVolume_C.ReceiveEndPlay
// 0x0001 (0x0001 - 0x0000)
struct BP_OutOfBoundsVolume_C_ReceiveEndPlay final
{
public:
	EEndPlayReason                                EndPlayReason;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_OutOfBoundsVolume_C_ReceiveEndPlay) == 0x000001, "Wrong alignment on BP_OutOfBoundsVolume_C_ReceiveEndPlay");
static_assert(sizeof(BP_OutOfBoundsVolume_C_ReceiveEndPlay) == 0x000001, "Wrong size on BP_OutOfBoundsVolume_C_ReceiveEndPlay");
static_assert(offsetof(BP_OutOfBoundsVolume_C_ReceiveEndPlay, EndPlayReason) == 0x000000, "Member 'BP_OutOfBoundsVolume_C_ReceiveEndPlay::EndPlayReason' has a wrong offset!");

// Function BP_OutOfBoundsVolume.BP_OutOfBoundsVolume_C.ServerBeginOverlap
// 0x0108 (0x0108 - 0x0000)
struct BP_OutOfBoundsVolume_C_ServerBeginOverlap final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bFromSweep;                                        // 0x001C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_446F[0x3];                                     // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             SweepResult;                                       // 0x0020(0x00E8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(BP_OutOfBoundsVolume_C_ServerBeginOverlap) == 0x000008, "Wrong alignment on BP_OutOfBoundsVolume_C_ServerBeginOverlap");
static_assert(sizeof(BP_OutOfBoundsVolume_C_ServerBeginOverlap) == 0x000108, "Wrong size on BP_OutOfBoundsVolume_C_ServerBeginOverlap");
static_assert(offsetof(BP_OutOfBoundsVolume_C_ServerBeginOverlap, OverlappedComponent) == 0x000000, "Member 'BP_OutOfBoundsVolume_C_ServerBeginOverlap::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(BP_OutOfBoundsVolume_C_ServerBeginOverlap, OtherActor) == 0x000008, "Member 'BP_OutOfBoundsVolume_C_ServerBeginOverlap::OtherActor' has a wrong offset!");
static_assert(offsetof(BP_OutOfBoundsVolume_C_ServerBeginOverlap, OtherComp) == 0x000010, "Member 'BP_OutOfBoundsVolume_C_ServerBeginOverlap::OtherComp' has a wrong offset!");
static_assert(offsetof(BP_OutOfBoundsVolume_C_ServerBeginOverlap, OtherBodyIndex) == 0x000018, "Member 'BP_OutOfBoundsVolume_C_ServerBeginOverlap::OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(BP_OutOfBoundsVolume_C_ServerBeginOverlap, bFromSweep) == 0x00001C, "Member 'BP_OutOfBoundsVolume_C_ServerBeginOverlap::bFromSweep' has a wrong offset!");
static_assert(offsetof(BP_OutOfBoundsVolume_C_ServerBeginOverlap, SweepResult) == 0x000020, "Member 'BP_OutOfBoundsVolume_C_ServerBeginOverlap::SweepResult' has a wrong offset!");

// Function BP_OutOfBoundsVolume.BP_OutOfBoundsVolume_C.ServerEndOverlap
// 0x0020 (0x0020 - 0x0000)
struct BP_OutOfBoundsVolume_C_ServerEndOverlap final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_OutOfBoundsVolume_C_ServerEndOverlap) == 0x000008, "Wrong alignment on BP_OutOfBoundsVolume_C_ServerEndOverlap");
static_assert(sizeof(BP_OutOfBoundsVolume_C_ServerEndOverlap) == 0x000020, "Wrong size on BP_OutOfBoundsVolume_C_ServerEndOverlap");
static_assert(offsetof(BP_OutOfBoundsVolume_C_ServerEndOverlap, OverlappedComponent) == 0x000000, "Member 'BP_OutOfBoundsVolume_C_ServerEndOverlap::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(BP_OutOfBoundsVolume_C_ServerEndOverlap, OtherActor) == 0x000008, "Member 'BP_OutOfBoundsVolume_C_ServerEndOverlap::OtherActor' has a wrong offset!");
static_assert(offsetof(BP_OutOfBoundsVolume_C_ServerEndOverlap, OtherComp) == 0x000010, "Member 'BP_OutOfBoundsVolume_C_ServerEndOverlap::OtherComp' has a wrong offset!");
static_assert(offsetof(BP_OutOfBoundsVolume_C_ServerEndOverlap, OtherBodyIndex) == 0x000018, "Member 'BP_OutOfBoundsVolume_C_ServerEndOverlap::OtherBodyIndex' has a wrong offset!");

// Function BP_OutOfBoundsVolume.BP_OutOfBoundsVolume_C.TeleportTimePassed
// 0x0088 (0x0088 - 0x0000)
struct BP_OutOfBoundsVolume_C_TeleportTimePassed final
{
public:
	double                                        CurrentTime;                                       // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	const class AValeriaCharacter*                Temp_object_Variable;                              // 0x0008(0x0008)(ConstParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Map_Length_ReturnValue;                   // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4470[0x7];                                     // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_GetTimeSeconds_ReturnValue;               // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0030(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0040(0x0008)(NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Map_Find_Value;                           // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue;            // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4471[0x2];                                     // 0x0052(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Map_Length_ReturnValue_1;                 // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Remove_ReturnValue;                   // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_1;             // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4472[0x6];                                     // 0x005A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AValeriaCharacter*>              CallFunc_Map_Keys_Keys;                            // 0x0060(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4473[0x4];                                     // 0x0074(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AValeriaCharacter*                      CallFunc_Array_Get_Item;                           // 0x0078(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4474[0x3];                                     // 0x0081(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_K2_SetTimerDelegate_Time_ImplicitCast;    // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_OutOfBoundsVolume_C_TeleportTimePassed) == 0x000008, "Wrong alignment on BP_OutOfBoundsVolume_C_TeleportTimePassed");
static_assert(sizeof(BP_OutOfBoundsVolume_C_TeleportTimePassed) == 0x000088, "Wrong size on BP_OutOfBoundsVolume_C_TeleportTimePassed");
static_assert(offsetof(BP_OutOfBoundsVolume_C_TeleportTimePassed, CurrentTime) == 0x000000, "Member 'BP_OutOfBoundsVolume_C_TeleportTimePassed::CurrentTime' has a wrong offset!");
static_assert(offsetof(BP_OutOfBoundsVolume_C_TeleportTimePassed, Temp_object_Variable) == 0x000008, "Member 'BP_OutOfBoundsVolume_C_TeleportTimePassed::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(BP_OutOfBoundsVolume_C_TeleportTimePassed, Temp_int_Array_Index_Variable) == 0x000010, "Member 'BP_OutOfBoundsVolume_C_TeleportTimePassed::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_OutOfBoundsVolume_C_TeleportTimePassed, Temp_int_Loop_Counter_Variable) == 0x000014, "Member 'BP_OutOfBoundsVolume_C_TeleportTimePassed::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_OutOfBoundsVolume_C_TeleportTimePassed, CallFunc_Add_IntInt_ReturnValue) == 0x000018, "Member 'BP_OutOfBoundsVolume_C_TeleportTimePassed::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_OutOfBoundsVolume_C_TeleportTimePassed, CallFunc_Map_Length_ReturnValue) == 0x00001C, "Member 'BP_OutOfBoundsVolume_C_TeleportTimePassed::CallFunc_Map_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_OutOfBoundsVolume_C_TeleportTimePassed, CallFunc_Greater_IntInt_ReturnValue) == 0x000020, "Member 'BP_OutOfBoundsVolume_C_TeleportTimePassed::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_OutOfBoundsVolume_C_TeleportTimePassed, CallFunc_GetTimeSeconds_ReturnValue) == 0x000028, "Member 'BP_OutOfBoundsVolume_C_TeleportTimePassed::CallFunc_GetTimeSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_OutOfBoundsVolume_C_TeleportTimePassed, K2Node_CreateDelegate_OutputDelegate) == 0x000030, "Member 'BP_OutOfBoundsVolume_C_TeleportTimePassed::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_OutOfBoundsVolume_C_TeleportTimePassed, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000040, "Member 'BP_OutOfBoundsVolume_C_TeleportTimePassed::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_OutOfBoundsVolume_C_TeleportTimePassed, CallFunc_Map_Find_Value) == 0x000048, "Member 'BP_OutOfBoundsVolume_C_TeleportTimePassed::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(BP_OutOfBoundsVolume_C_TeleportTimePassed, CallFunc_Map_Find_ReturnValue) == 0x000050, "Member 'BP_OutOfBoundsVolume_C_TeleportTimePassed::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_OutOfBoundsVolume_C_TeleportTimePassed, CallFunc_Less_DoubleDouble_ReturnValue) == 0x000051, "Member 'BP_OutOfBoundsVolume_C_TeleportTimePassed::CallFunc_Less_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_OutOfBoundsVolume_C_TeleportTimePassed, CallFunc_Map_Length_ReturnValue_1) == 0x000054, "Member 'BP_OutOfBoundsVolume_C_TeleportTimePassed::CallFunc_Map_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_OutOfBoundsVolume_C_TeleportTimePassed, CallFunc_Map_Remove_ReturnValue) == 0x000058, "Member 'BP_OutOfBoundsVolume_C_TeleportTimePassed::CallFunc_Map_Remove_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_OutOfBoundsVolume_C_TeleportTimePassed, CallFunc_Greater_IntInt_ReturnValue_1) == 0x000059, "Member 'BP_OutOfBoundsVolume_C_TeleportTimePassed::CallFunc_Greater_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_OutOfBoundsVolume_C_TeleportTimePassed, CallFunc_Map_Keys_Keys) == 0x000060, "Member 'BP_OutOfBoundsVolume_C_TeleportTimePassed::CallFunc_Map_Keys_Keys' has a wrong offset!");
static_assert(offsetof(BP_OutOfBoundsVolume_C_TeleportTimePassed, CallFunc_Array_Length_ReturnValue) == 0x000070, "Member 'BP_OutOfBoundsVolume_C_TeleportTimePassed::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_OutOfBoundsVolume_C_TeleportTimePassed, CallFunc_Array_Get_Item) == 0x000078, "Member 'BP_OutOfBoundsVolume_C_TeleportTimePassed::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_OutOfBoundsVolume_C_TeleportTimePassed, CallFunc_Less_IntInt_ReturnValue) == 0x000080, "Member 'BP_OutOfBoundsVolume_C_TeleportTimePassed::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_OutOfBoundsVolume_C_TeleportTimePassed, CallFunc_K2_SetTimerDelegate_Time_ImplicitCast) == 0x000084, "Member 'BP_OutOfBoundsVolume_C_TeleportTimePassed::CallFunc_K2_SetTimerDelegate_Time_ImplicitCast' has a wrong offset!");

// Function BP_OutOfBoundsVolume.BP_OutOfBoundsVolume_C.TryTeleportPawn
// 0x0140 (0x0140 - 0x0000)
struct BP_OutOfBoundsVolume_C_TryTeleportPawn final
{
public:
	class AValeriaMoveablePawn*                   MoveablePawn;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4475[0x7];                                     // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         SortedActors;                                      // 0x0010(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0020(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4476[0x4];                                     // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_Array_Get_Item;                           // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4477[0x4];                                     // 0x0054(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetDisplayName_ReturnValue;               // 0x0058(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4478[0x7];                                     // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0070(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_GetTransform_ReturnValue;                 // 0x0080(0x0060)(ConstParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x00E0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x00F8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x0110(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         CallFunc_SortActorsByClosest_ReturnValue;          // 0x0128(0x0010)(ReferenceParm)
	bool                                          CallFunc_K2_TeleportTo_ReturnValue;                // 0x0138(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_OutOfBoundsVolume_C_TryTeleportPawn) == 0x000010, "Wrong alignment on BP_OutOfBoundsVolume_C_TryTeleportPawn");
static_assert(sizeof(BP_OutOfBoundsVolume_C_TryTeleportPawn) == 0x000140, "Wrong size on BP_OutOfBoundsVolume_C_TryTeleportPawn");
static_assert(offsetof(BP_OutOfBoundsVolume_C_TryTeleportPawn, MoveablePawn) == 0x000000, "Member 'BP_OutOfBoundsVolume_C_TryTeleportPawn::MoveablePawn' has a wrong offset!");
static_assert(offsetof(BP_OutOfBoundsVolume_C_TryTeleportPawn, ReturnValue) == 0x000008, "Member 'BP_OutOfBoundsVolume_C_TryTeleportPawn::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_OutOfBoundsVolume_C_TryTeleportPawn, SortedActors) == 0x000010, "Member 'BP_OutOfBoundsVolume_C_TryTeleportPawn::SortedActors' has a wrong offset!");
static_assert(offsetof(BP_OutOfBoundsVolume_C_TryTeleportPawn, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000020, "Member 'BP_OutOfBoundsVolume_C_TryTeleportPawn::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_OutOfBoundsVolume_C_TryTeleportPawn, Temp_int_Array_Index_Variable) == 0x000038, "Member 'BP_OutOfBoundsVolume_C_TryTeleportPawn::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_OutOfBoundsVolume_C_TryTeleportPawn, Temp_int_Loop_Counter_Variable) == 0x00003C, "Member 'BP_OutOfBoundsVolume_C_TryTeleportPawn::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_OutOfBoundsVolume_C_TryTeleportPawn, CallFunc_Add_IntInt_ReturnValue) == 0x000040, "Member 'BP_OutOfBoundsVolume_C_TryTeleportPawn::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_OutOfBoundsVolume_C_TryTeleportPawn, CallFunc_Array_Get_Item) == 0x000048, "Member 'BP_OutOfBoundsVolume_C_TryTeleportPawn::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_OutOfBoundsVolume_C_TryTeleportPawn, CallFunc_Array_Length_ReturnValue) == 0x000050, "Member 'BP_OutOfBoundsVolume_C_TryTeleportPawn::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_OutOfBoundsVolume_C_TryTeleportPawn, CallFunc_GetDisplayName_ReturnValue) == 0x000058, "Member 'BP_OutOfBoundsVolume_C_TryTeleportPawn::CallFunc_GetDisplayName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_OutOfBoundsVolume_C_TryTeleportPawn, CallFunc_Less_IntInt_ReturnValue) == 0x000068, "Member 'BP_OutOfBoundsVolume_C_TryTeleportPawn::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_OutOfBoundsVolume_C_TryTeleportPawn, CallFunc_Concat_StrStr_ReturnValue) == 0x000070, "Member 'BP_OutOfBoundsVolume_C_TryTeleportPawn::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_OutOfBoundsVolume_C_TryTeleportPawn, CallFunc_GetTransform_ReturnValue) == 0x000080, "Member 'BP_OutOfBoundsVolume_C_TryTeleportPawn::CallFunc_GetTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_OutOfBoundsVolume_C_TryTeleportPawn, CallFunc_BreakTransform_Location) == 0x0000E0, "Member 'BP_OutOfBoundsVolume_C_TryTeleportPawn::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(BP_OutOfBoundsVolume_C_TryTeleportPawn, CallFunc_BreakTransform_Rotation) == 0x0000F8, "Member 'BP_OutOfBoundsVolume_C_TryTeleportPawn::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(BP_OutOfBoundsVolume_C_TryTeleportPawn, CallFunc_BreakTransform_Scale) == 0x000110, "Member 'BP_OutOfBoundsVolume_C_TryTeleportPawn::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(BP_OutOfBoundsVolume_C_TryTeleportPawn, CallFunc_SortActorsByClosest_ReturnValue) == 0x000128, "Member 'BP_OutOfBoundsVolume_C_TryTeleportPawn::CallFunc_SortActorsByClosest_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_OutOfBoundsVolume_C_TryTeleportPawn, CallFunc_K2_TeleportTo_ReturnValue) == 0x000138, "Member 'BP_OutOfBoundsVolume_C_TryTeleportPawn::CallFunc_K2_TeleportTo_ReturnValue' has a wrong offset!");

// Function BP_OutOfBoundsVolume.BP_OutOfBoundsVolume_C.UserConstructionScript
// 0x0002 (0x0002 - 0x0000)
struct BP_OutOfBoundsVolume_C_UserConstructionScript final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SetStaticMesh_ReturnValue;                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_OutOfBoundsVolume_C_UserConstructionScript) == 0x000001, "Wrong alignment on BP_OutOfBoundsVolume_C_UserConstructionScript");
static_assert(sizeof(BP_OutOfBoundsVolume_C_UserConstructionScript) == 0x000002, "Wrong size on BP_OutOfBoundsVolume_C_UserConstructionScript");
static_assert(offsetof(BP_OutOfBoundsVolume_C_UserConstructionScript, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'BP_OutOfBoundsVolume_C_UserConstructionScript::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_OutOfBoundsVolume_C_UserConstructionScript, CallFunc_SetStaticMesh_ReturnValue) == 0x000001, "Member 'BP_OutOfBoundsVolume_C_UserConstructionScript::CallFunc_SetStaticMesh_ReturnValue' has a wrong offset!");

}

