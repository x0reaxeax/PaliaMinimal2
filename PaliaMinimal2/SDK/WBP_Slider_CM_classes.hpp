#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_Slider_CM

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "UMG_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_Slider_CM.WBP_Slider_CM_C
// 0x0060 (0x0320 - 0x02C0)
class UWBP_Slider_CM_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02C0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UAnalogSlider*                          AnalogSlider;                                      // 0x02C8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	FMulticastInlineDelegateProperty_             OnSliderValueChanged;                              // 0x02D0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	FMulticastInlineDelegateProperty_             OnMouseCaptureBegin;                               // 0x02E0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	FMulticastInlineDelegateProperty_             OnMouseCaptureEnd;                                 // 0x02F0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	FMulticastInlineDelegateProperty_             OnControllerCaptureBegin;                          // 0x0300(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	FMulticastInlineDelegateProperty_             OnControllerCaptureEnd;                            // 0x0310(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)

public:
	void BndEvt__WBP_Slider_CM_AnalogSlider_193_K2Node_ComponentBoundEvent_5_OnMouseCaptureBeginEvent__DelegateSignature();
	void BndEvt__WBP_Slider_CM_AnalogSlider_K2Node_ComponentBoundEvent_6_OnMouseCaptureEndEvent__DelegateSignature();
	void BndEvt__WBP_Slider_CM_AnalogSlider_K2Node_ComponentBoundEvent_7_OnControllerCaptureBeginEvent__DelegateSignature();
	void BndEvt__WBP_Slider_CM_AnalogSlider_K2Node_ComponentBoundEvent_8_OnControllerCaptureEndEvent__DelegateSignature();
	void BndEvt__WBP_Slider_CM_AnalogSlider_K2Node_ComponentBoundEvent_9_OnFloatValueChangedEvent__DelegateSignature(float Value);
	void ExecuteUbergraph_WBP_Slider_CM(int32 EntryPoint, int32 CallFunc_AkEventGlobal_ReturnValue, int32 CallFunc_AkEventGlobal_ReturnValue_1, int32 CallFunc_AkEventGlobal_ReturnValue_2, float K2Node_ComponentBoundEvent_Value, double CallFunc_MapRangeClamped_ReturnValue, double CallFunc_MapRangeClamped_Value_ImplicitCast, double K2Node_CallDelegate_Value_ImplicitCast, double CallFunc_MapRangeClamped_InRangeB_ImplicitCast, double CallFunc_MapRangeClamped_InRangeA_ImplicitCast);
	void OnControllerCaptureBegin__DelegateSignature();
	void OnControllerCaptureEnd__DelegateSignature();
	struct FEventReply OnFocusReceived(const struct FGeometry& MyGeometry, const struct FFocusEvent& InFocusEvent, const struct FEventReply& CallFunc_Handled_ReturnValue);
	void OnMouseCaptureBegin__DelegateSignature();
	void OnMouseCaptureEnd__DelegateSignature();
	void OnSliderValueChanged__DelegateSignature(double Value);
	void SetValue(double Value, float CallFunc_SetValue_InValue_ImplicitCast);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_Slider_CM_C">();
	}
	static class UWBP_Slider_CM_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_Slider_CM_C>();
	}
};
static_assert(alignof(UWBP_Slider_CM_C) == 0x000008, "Wrong alignment on UWBP_Slider_CM_C");
static_assert(sizeof(UWBP_Slider_CM_C) == 0x000320, "Wrong size on UWBP_Slider_CM_C");
static_assert(offsetof(UWBP_Slider_CM_C, UberGraphFrame) == 0x0002C0, "Member 'UWBP_Slider_CM_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWBP_Slider_CM_C, AnalogSlider) == 0x0002C8, "Member 'UWBP_Slider_CM_C::AnalogSlider' has a wrong offset!");
static_assert(offsetof(UWBP_Slider_CM_C, OnSliderValueChanged) == 0x0002D0, "Member 'UWBP_Slider_CM_C::OnSliderValueChanged' has a wrong offset!");
static_assert(offsetof(UWBP_Slider_CM_C, OnMouseCaptureBegin) == 0x0002E0, "Member 'UWBP_Slider_CM_C::OnMouseCaptureBegin' has a wrong offset!");
static_assert(offsetof(UWBP_Slider_CM_C, OnMouseCaptureEnd) == 0x0002F0, "Member 'UWBP_Slider_CM_C::OnMouseCaptureEnd' has a wrong offset!");
static_assert(offsetof(UWBP_Slider_CM_C, OnControllerCaptureBegin) == 0x000300, "Member 'UWBP_Slider_CM_C::OnControllerCaptureBegin' has a wrong offset!");
static_assert(offsetof(UWBP_Slider_CM_C, OnControllerCaptureEnd) == 0x000310, "Member 'UWBP_Slider_CM_C::OnControllerCaptureEnd' has a wrong offset!");

}

