#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Comp_Actor_Audio_Data

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "E_WaterEffect_structs.hpp"
#include "E_Footwear_structs.hpp"
#include "AkAudio_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass Comp_Actor_Audio_Data.Comp_Actor_Audio_Data_C
// 0x0068 (0x0108 - 0x00A0)
class UComp_Actor_Audio_Data_C final : public UActorComponent
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x00A0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	E_WaterEffect                                 E_Water_Effects;                                   // 0x00A8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_Footwear                                    E_Footwear;                                        // 0x00A9(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_458A[0x6];                                     // 0x00AA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        WetRTPC;                                           // 0x00B0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        WetExterior;                                       // 0x00B8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           Handle;                                            // 0x00C0(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	bool                                          IsInside;                                          // 0x00C8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_458B[0x7];                                     // 0x00C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        WetInterior;                                       // 0x00D0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        WetDecayValue;                                     // 0x00D8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        WetAccelerateValue;                                // 0x00E0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        StepDecayValue;                                    // 0x00E8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        UpdateFrequency;                                   // 0x00F0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      StoredPhysmat;                                     // 0x00F8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	bool                                          IsInWater;                                         // 0x0100(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsRaining;                                         // 0x0101(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsInWetArea;                                       // 0x0102(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsPlayingIntro;                                    // 0x0103(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsPlayingOutro;                                    // 0x0104(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsOnQuest;                                         // 0x0105(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          WetnessDecayOverride;                              // 0x0106(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void DecreaseWetness();
	void DialogueEntered(class UDialogueComponent* Diag, class AValeriaCharacter* PlayerParticipant);
	void DialogueExited(class UDialogueComponent* Diag, class AValeriaCharacter* PlayerParticipant);
	void DistanceFade_Exterior_Overlap();
	void DistanceFadeInteriorOverlap();
	void ExecuteUbergraph_Comp_Actor_Audio_Data(int32 EntryPoint, TDelegate<void(struct FWeatherStateProperties& State)> K2Node_CreateDelegate_OutputDelegate, double CallFunc_FClamp_ReturnValue, double CallFunc_FClamp_ReturnValue_1, bool K2Node_CustomEvent_True_1, class UValeriaWeather* CallFunc_GetWorldSubsystem_ReturnValue, bool CallFunc_BooleanOR_ReturnValue, bool K2Node_CustomEvent_True, bool CallFunc_WeatherManagerIsRaining_bIsRaining, bool CallFunc_BooleanOR_ReturnValue_1, struct FWeatherStateProperties& K2Node_CustomEvent_state, bool CallFunc_LessEqual_DoubleDouble_ReturnValue, bool CallFunc_WeatherManagerIsRaining_bIsRaining_1, double CallFunc_Add_DoubleDouble_ReturnValue, double CallFunc_FClamp_ReturnValue_2, double CallFunc_Subtract_DoubleDouble_ReturnValue, double CallFunc_FClamp_ReturnValue_3, class AActor* CallFunc_GetOwner_ReturnValue, const struct FVector& CallFunc_K2_GetActorLocation_ReturnValue, bool CallFunc_Not_PreBool_ReturnValue, bool CallFunc_IsInside_IsInside, bool CallFunc_BooleanAND_ReturnValue, bool CallFunc_Greater_DoubleDouble_ReturnValue, bool CallFunc_Not_PreBool_ReturnValue_1, class AActor* CallFunc_GetOwner_ReturnValue_1, bool CallFunc_BooleanAND_ReturnValue_1, class UDialogueComponent* CallFunc_GetComponentByClass_ReturnValue, bool CallFunc_IsValid_ReturnValue, bool CallFunc_IsDedicatedServer_ReturnValue, TDelegate<void(class UDialogueComponent* Diag, class AValeriaCharacter* PlayerParticipant)> K2Node_CreateDelegate_OutputDelegate_1, bool CallFunc_GreaterEqual_DoubleDouble_ReturnValue, class UDialogueComponent* K2Node_CustomEvent_diag_1, class AValeriaCharacter* K2Node_CustomEvent_playerParticipant_1, TDelegate<void(class UDialogueComponent* Diag, class AValeriaCharacter* PlayerParticipant)> K2Node_CreateDelegate_OutputDelegate_2, class UAkAudioEvent* CallFunc_GetDialogBookend_DialogEvent, class UDialogueComponent* K2Node_CustomEvent_diag, class AValeriaCharacter* K2Node_CustomEvent_playerParticipant, class UAkAudioEvent* CallFunc_GetDialogBookend_DialogEvent_1, class AValeriaVillagerCharacter* CallFunc_GetVillager_ReturnValue, bool CallFunc_IsValid_ReturnValue_1, bool CallFunc_NotEqual_ByteByte_ReturnValue, bool CallFunc_IsVillager_ReturnValue, class AActor* CallFunc_GetOwner_ReturnValue_2, class AActor* CallFunc_GetOwner_ReturnValue_3, EAkCallbackType K2Node_CustomEvent_CallbackType_1, class UAkCallbackInfo* K2Node_CustomEvent_CallbackInfo_1, EAkCallbackType K2Node_CustomEvent_CallbackType, class UAkCallbackInfo* K2Node_CustomEvent_CallbackInfo, class UAkComponent* CallFunc_Get_Voice_Audio_Component_AkComponent, bool K2Node_CustomEvent_Intro, class UAkAudioEvent* K2Node_CustomEvent_AkEvent, bool CallFunc_IsValid_ReturnValue_2, double CallFunc_Subtract_DoubleDouble_ReturnValue_1, TDelegate<void(EAkCallbackType CallbackType, class UAkCallbackInfo* CallbackInfo)> K2Node_CreateDelegate_OutputDelegate_3, TDelegate<void(EAkCallbackType CallbackType, class UAkCallbackInfo* CallbackInfo)> K2Node_CreateDelegate_OutputDelegate_4, bool Temp_bool_Variable, TDelegate<void(EAkCallbackType CallbackType, class UAkCallbackInfo* CallbackInfo)> K2Node_Select_Default, int32 CallFunc_AkEventComponentCallback_ReturnValue);
	void Get_Voice_Audio_Component(class UAkComponent** AkComponent, class AActor* CallFunc_GetOwner_ReturnValue, TScriptInterface<class IDialogueable> K2Node_DynamicCast_AsDialogueable, bool K2Node_DynamicCast_bSuccess, class UAkComponent* CallFunc_BPNE_GetOrCreateVoicePositionAkComponent_ReturnValue);
	void GetDialogBookend(bool Intro, class UDialogueComponent* Dialog, class AValeriaCharacter* Player, class UAkAudioEvent** DialogEvent, class UDialogBookendConfig_C* CurrentDialogBookendConfig, class AValeriaVillagerCharacter* Villager, class UDialogBookendAudioSet_C* CurrentDialogSet, const TArray<struct FStruct_DialogBookendConfig>& Config, int32 Temp_int_Loop_Counter_Variable, bool CallFunc_IsLocallyControlled_ReturnValue, int32 CallFunc_Add_IntInt_ReturnValue, class AValeriaVillagerCharacter* CallFunc_GetVillager_ReturnValue, bool CallFunc_IsVillager_ReturnValue, bool CallFunc_IsValid_ReturnValue, class UDialogBookendConfig_C* K2Node_DynamicCast_AsDialog_Bookend_Config, bool K2Node_DynamicCast_bSuccess, bool Temp_bool_True_if_break_was_hit_Variable, bool CallFunc_Not_PreBool_ReturnValue, int32 Temp_int_Loop_Counter_Variable_1, int32 CallFunc_Add_IntInt_ReturnValue_1, bool Temp_bool_True_if_break_was_hit_Variable_1, int32 Temp_int_Array_Index_Variable, bool CallFunc_Not_PreBool_ReturnValue_1, bool CallFunc_IsValid_ReturnValue_1, bool CallFunc_IsDedicatedServer_ReturnValue, int32 CallFunc_Array_Length_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue, const struct FStruct_DialogBookendConfig& CallFunc_Array_Get_Item, bool CallFunc_BooleanAND_ReturnValue, int32 CallFunc_Array_Length_ReturnValue_1, bool CallFunc_Less_IntInt_ReturnValue_1, class UAkAudioEvent* CallFunc_GetRandomDialogEvent_DialogEvent, bool CallFunc_BooleanAND_ReturnValue_1, int32 Temp_int_Array_Index_Variable_1, bool Temp_bool_Variable, const struct FStruct_DialogBookendConfig& CallFunc_Array_Get_Item_1, bool CallFunc_IsDialogueRequirementMetForVillagerId_ReturnValue, class UAkAudioEvent* CallFunc_GetRandomDialogEvent_DialogEvent_1, bool CallFunc_IsDialogueRequirementMetForWorldVillager_ReturnValue, TArray<struct FStruct_DialogBookendConfig>& K2Node_Select_Default);
	void HasEnteredWater(bool TURR);
	void HasEnteredWetArea(bool TURR);
	void IntroAudioFinished(EAkCallbackType CallbackType, class UAkCallbackInfo* CallbackInfo);
	void NotRaining();
	void OutroAudioFinished(EAkCallbackType CallbackType, class UAkCallbackInfo* CallbackInfo);
	void PlayDialogBookend(bool Intro, class UAkAudioEvent* AkEvent);
	void Raining();
	void RainStart();
	void RainStop();
	void ReceiveBeginPlay();
	void SetDialogIntro(bool Param_IsPlayingIntro);
	void SetDialogOutro(bool Param_IsPlayingOutro);
	void UpdatePhysmat(class UPhysicalMaterial* PhysMat, bool CallFunc_EqualEqual_ByteByte_ReturnValue, bool CallFunc_EqualEqual_ByteByte_ReturnValue_1, bool CallFunc_BooleanOR_ReturnValue);
	void WeatherChanged(struct FWeatherStateProperties& State);
	void WeatherManagerIsRaining(bool* bIsRaining, class UValeriaWeather* CallFunc_GetWorldSubsystem_ReturnValue, const struct FWeatherStateProperties& CallFunc_GetCurrentWorldWeatherState_ReturnValue, bool CallFunc_HasTag_ReturnValue);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"Comp_Actor_Audio_Data_C">();
	}
	static class UComp_Actor_Audio_Data_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UComp_Actor_Audio_Data_C>();
	}
};
static_assert(alignof(UComp_Actor_Audio_Data_C) == 0x000008, "Wrong alignment on UComp_Actor_Audio_Data_C");
static_assert(sizeof(UComp_Actor_Audio_Data_C) == 0x000108, "Wrong size on UComp_Actor_Audio_Data_C");
static_assert(offsetof(UComp_Actor_Audio_Data_C, UberGraphFrame) == 0x0000A0, "Member 'UComp_Actor_Audio_Data_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UComp_Actor_Audio_Data_C, E_Water_Effects) == 0x0000A8, "Member 'UComp_Actor_Audio_Data_C::E_Water_Effects' has a wrong offset!");
static_assert(offsetof(UComp_Actor_Audio_Data_C, E_Footwear) == 0x0000A9, "Member 'UComp_Actor_Audio_Data_C::E_Footwear' has a wrong offset!");
static_assert(offsetof(UComp_Actor_Audio_Data_C, WetRTPC) == 0x0000B0, "Member 'UComp_Actor_Audio_Data_C::WetRTPC' has a wrong offset!");
static_assert(offsetof(UComp_Actor_Audio_Data_C, WetExterior) == 0x0000B8, "Member 'UComp_Actor_Audio_Data_C::WetExterior' has a wrong offset!");
static_assert(offsetof(UComp_Actor_Audio_Data_C, Handle) == 0x0000C0, "Member 'UComp_Actor_Audio_Data_C::Handle' has a wrong offset!");
static_assert(offsetof(UComp_Actor_Audio_Data_C, IsInside) == 0x0000C8, "Member 'UComp_Actor_Audio_Data_C::IsInside' has a wrong offset!");
static_assert(offsetof(UComp_Actor_Audio_Data_C, WetInterior) == 0x0000D0, "Member 'UComp_Actor_Audio_Data_C::WetInterior' has a wrong offset!");
static_assert(offsetof(UComp_Actor_Audio_Data_C, WetDecayValue) == 0x0000D8, "Member 'UComp_Actor_Audio_Data_C::WetDecayValue' has a wrong offset!");
static_assert(offsetof(UComp_Actor_Audio_Data_C, WetAccelerateValue) == 0x0000E0, "Member 'UComp_Actor_Audio_Data_C::WetAccelerateValue' has a wrong offset!");
static_assert(offsetof(UComp_Actor_Audio_Data_C, StepDecayValue) == 0x0000E8, "Member 'UComp_Actor_Audio_Data_C::StepDecayValue' has a wrong offset!");
static_assert(offsetof(UComp_Actor_Audio_Data_C, UpdateFrequency) == 0x0000F0, "Member 'UComp_Actor_Audio_Data_C::UpdateFrequency' has a wrong offset!");
static_assert(offsetof(UComp_Actor_Audio_Data_C, StoredPhysmat) == 0x0000F8, "Member 'UComp_Actor_Audio_Data_C::StoredPhysmat' has a wrong offset!");
static_assert(offsetof(UComp_Actor_Audio_Data_C, IsInWater) == 0x000100, "Member 'UComp_Actor_Audio_Data_C::IsInWater' has a wrong offset!");
static_assert(offsetof(UComp_Actor_Audio_Data_C, IsRaining) == 0x000101, "Member 'UComp_Actor_Audio_Data_C::IsRaining' has a wrong offset!");
static_assert(offsetof(UComp_Actor_Audio_Data_C, IsInWetArea) == 0x000102, "Member 'UComp_Actor_Audio_Data_C::IsInWetArea' has a wrong offset!");
static_assert(offsetof(UComp_Actor_Audio_Data_C, IsPlayingIntro) == 0x000103, "Member 'UComp_Actor_Audio_Data_C::IsPlayingIntro' has a wrong offset!");
static_assert(offsetof(UComp_Actor_Audio_Data_C, IsPlayingOutro) == 0x000104, "Member 'UComp_Actor_Audio_Data_C::IsPlayingOutro' has a wrong offset!");
static_assert(offsetof(UComp_Actor_Audio_Data_C, IsOnQuest) == 0x000105, "Member 'UComp_Actor_Audio_Data_C::IsOnQuest' has a wrong offset!");
static_assert(offsetof(UComp_Actor_Audio_Data_C, WetnessDecayOverride) == 0x000106, "Member 'UComp_Actor_Audio_Data_C::WetnessDecayOverride' has a wrong offset!");

}

