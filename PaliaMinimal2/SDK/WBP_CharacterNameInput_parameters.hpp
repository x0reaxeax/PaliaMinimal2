#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_CharacterNameInput

#include "Basic.hpp"

#include "UMG_structs.hpp"
#include "SlateCore_structs.hpp"
#include "ValeriaUI_structs.hpp"


namespace SDK::Params
{

// Function WBP_CharacterNameInput.WBP_CharacterNameInput_C.BndEvt__WBP_CharacterNameInput_EditableTextBox_Name_K2Node_ComponentBoundEvent_0_OnEditableTextBoxChangedEvent__DelegateSignature
// 0x0018 (0x0018 - 0x0000)
struct WBP_CharacterNameInput_C_BndEvt__WBP_CharacterNameInput_EditableTextBox_Name_K2Node_ComponentBoundEvent_0_OnEditableTextBoxChangedEvent__DelegateSignature final
{
public:
	class FText                                   Text;                                              // 0x0000(0x0018)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(WBP_CharacterNameInput_C_BndEvt__WBP_CharacterNameInput_EditableTextBox_Name_K2Node_ComponentBoundEvent_0_OnEditableTextBoxChangedEvent__DelegateSignature) == 0x000008, "Wrong alignment on WBP_CharacterNameInput_C_BndEvt__WBP_CharacterNameInput_EditableTextBox_Name_K2Node_ComponentBoundEvent_0_OnEditableTextBoxChangedEvent__DelegateSignature");
static_assert(sizeof(WBP_CharacterNameInput_C_BndEvt__WBP_CharacterNameInput_EditableTextBox_Name_K2Node_ComponentBoundEvent_0_OnEditableTextBoxChangedEvent__DelegateSignature) == 0x000018, "Wrong size on WBP_CharacterNameInput_C_BndEvt__WBP_CharacterNameInput_EditableTextBox_Name_K2Node_ComponentBoundEvent_0_OnEditableTextBoxChangedEvent__DelegateSignature");
static_assert(offsetof(WBP_CharacterNameInput_C_BndEvt__WBP_CharacterNameInput_EditableTextBox_Name_K2Node_ComponentBoundEvent_0_OnEditableTextBoxChangedEvent__DelegateSignature, Text) == 0x000000, "Member 'WBP_CharacterNameInput_C_BndEvt__WBP_CharacterNameInput_EditableTextBox_Name_K2Node_ComponentBoundEvent_0_OnEditableTextBoxChangedEvent__DelegateSignature::Text' has a wrong offset!");

// Function WBP_CharacterNameInput.WBP_CharacterNameInput_C.BndEvt__WBP_CharacterNameInput_EditableTextBox_Name_K2Node_ComponentBoundEvent_1_OnEditableTextBoxCommittedEvent__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct WBP_CharacterNameInput_C_BndEvt__WBP_CharacterNameInput_EditableTextBox_Name_K2Node_ComponentBoundEvent_1_OnEditableTextBoxCommittedEvent__DelegateSignature final
{
public:
	class FText                                   Text;                                              // 0x0000(0x0018)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	ETextCommit                                   CommitMethod;                                      // 0x0018(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_CharacterNameInput_C_BndEvt__WBP_CharacterNameInput_EditableTextBox_Name_K2Node_ComponentBoundEvent_1_OnEditableTextBoxCommittedEvent__DelegateSignature) == 0x000008, "Wrong alignment on WBP_CharacterNameInput_C_BndEvt__WBP_CharacterNameInput_EditableTextBox_Name_K2Node_ComponentBoundEvent_1_OnEditableTextBoxCommittedEvent__DelegateSignature");
static_assert(sizeof(WBP_CharacterNameInput_C_BndEvt__WBP_CharacterNameInput_EditableTextBox_Name_K2Node_ComponentBoundEvent_1_OnEditableTextBoxCommittedEvent__DelegateSignature) == 0x000020, "Wrong size on WBP_CharacterNameInput_C_BndEvt__WBP_CharacterNameInput_EditableTextBox_Name_K2Node_ComponentBoundEvent_1_OnEditableTextBoxCommittedEvent__DelegateSignature");
static_assert(offsetof(WBP_CharacterNameInput_C_BndEvt__WBP_CharacterNameInput_EditableTextBox_Name_K2Node_ComponentBoundEvent_1_OnEditableTextBoxCommittedEvent__DelegateSignature, Text) == 0x000000, "Member 'WBP_CharacterNameInput_C_BndEvt__WBP_CharacterNameInput_EditableTextBox_Name_K2Node_ComponentBoundEvent_1_OnEditableTextBoxCommittedEvent__DelegateSignature::Text' has a wrong offset!");
static_assert(offsetof(WBP_CharacterNameInput_C_BndEvt__WBP_CharacterNameInput_EditableTextBox_Name_K2Node_ComponentBoundEvent_1_OnEditableTextBoxCommittedEvent__DelegateSignature, CommitMethod) == 0x000018, "Member 'WBP_CharacterNameInput_C_BndEvt__WBP_CharacterNameInput_EditableTextBox_Name_K2Node_ComponentBoundEvent_1_OnEditableTextBoxCommittedEvent__DelegateSignature::CommitMethod' has a wrong offset!");

// Function WBP_CharacterNameInput.WBP_CharacterNameInput_C.ExecuteUbergraph_WBP_CharacterNameInput
// 0x0168 (0x0168 - 0x0000)
struct WBP_CharacterNameInput_C_ExecuteUbergraph_WBP_CharacterNameInput final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5344[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_ComponentBoundEvent_Text;                   // 0x0008(0x0018)(ConstParm)
	ETextCommit                                   K2Node_ComponentBoundEvent_CommitMethod;           // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5345[0x7];                                     // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_ComponentBoundEvent_Text_1;                 // 0x0028(0x0018)(ConstParm)
	struct FGeometry                              K2Node_Event_MyGeometry;                           // 0x0040(0x0038)(IsPlainOldData, NoDestructor)
	struct FPointerEvent                          K2Node_Event_MouseEvent_1;                         // 0x0078(0x0078)(ConstParm)
	struct FPointerEvent                          K2Node_Event_MouseEvent;                           // 0x00F0(0x0078)(ConstParm)
};
static_assert(alignof(WBP_CharacterNameInput_C_ExecuteUbergraph_WBP_CharacterNameInput) == 0x000008, "Wrong alignment on WBP_CharacterNameInput_C_ExecuteUbergraph_WBP_CharacterNameInput");
static_assert(sizeof(WBP_CharacterNameInput_C_ExecuteUbergraph_WBP_CharacterNameInput) == 0x000168, "Wrong size on WBP_CharacterNameInput_C_ExecuteUbergraph_WBP_CharacterNameInput");
static_assert(offsetof(WBP_CharacterNameInput_C_ExecuteUbergraph_WBP_CharacterNameInput, EntryPoint) == 0x000000, "Member 'WBP_CharacterNameInput_C_ExecuteUbergraph_WBP_CharacterNameInput::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_CharacterNameInput_C_ExecuteUbergraph_WBP_CharacterNameInput, K2Node_Event_IsDesignTime) == 0x000004, "Member 'WBP_CharacterNameInput_C_ExecuteUbergraph_WBP_CharacterNameInput::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(WBP_CharacterNameInput_C_ExecuteUbergraph_WBP_CharacterNameInput, K2Node_ComponentBoundEvent_Text) == 0x000008, "Member 'WBP_CharacterNameInput_C_ExecuteUbergraph_WBP_CharacterNameInput::K2Node_ComponentBoundEvent_Text' has a wrong offset!");
static_assert(offsetof(WBP_CharacterNameInput_C_ExecuteUbergraph_WBP_CharacterNameInput, K2Node_ComponentBoundEvent_CommitMethod) == 0x000020, "Member 'WBP_CharacterNameInput_C_ExecuteUbergraph_WBP_CharacterNameInput::K2Node_ComponentBoundEvent_CommitMethod' has a wrong offset!");
static_assert(offsetof(WBP_CharacterNameInput_C_ExecuteUbergraph_WBP_CharacterNameInput, K2Node_ComponentBoundEvent_Text_1) == 0x000028, "Member 'WBP_CharacterNameInput_C_ExecuteUbergraph_WBP_CharacterNameInput::K2Node_ComponentBoundEvent_Text_1' has a wrong offset!");
static_assert(offsetof(WBP_CharacterNameInput_C_ExecuteUbergraph_WBP_CharacterNameInput, K2Node_Event_MyGeometry) == 0x000040, "Member 'WBP_CharacterNameInput_C_ExecuteUbergraph_WBP_CharacterNameInput::K2Node_Event_MyGeometry' has a wrong offset!");
static_assert(offsetof(WBP_CharacterNameInput_C_ExecuteUbergraph_WBP_CharacterNameInput, K2Node_Event_MouseEvent_1) == 0x000078, "Member 'WBP_CharacterNameInput_C_ExecuteUbergraph_WBP_CharacterNameInput::K2Node_Event_MouseEvent_1' has a wrong offset!");
static_assert(offsetof(WBP_CharacterNameInput_C_ExecuteUbergraph_WBP_CharacterNameInput, K2Node_Event_MouseEvent) == 0x0000F0, "Member 'WBP_CharacterNameInput_C_ExecuteUbergraph_WBP_CharacterNameInput::K2Node_Event_MouseEvent' has a wrong offset!");

// Function WBP_CharacterNameInput.WBP_CharacterNameInput_C.HandleOnTextChanged
// 0x0100 (0x0100 - 0x0000)
struct WBP_CharacterNameInput_C_HandleOnTextChanged final
{
public:
	class FText                                   InputText;                                         // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
	bool                                          bIsCommit;                                         // 0x0018(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5346[0x7];                                     // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   NewText;                                           // 0x0020(0x0018)(Edit, BlueprintVisible)
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x0038(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_TextToString_ReturnValue_1;          // 0x0048(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Len_ReturnValue;                          // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Len_ReturnValue_1;                        // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_AkEventGlobal_ReturnValue;                // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5347[0x4];                                     // 0x0064(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_TextToString_ReturnValue_2;          // 0x0068(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_TextToString_ReturnValue_3;          // 0x0078(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_EndsWith_ReturnValue;                     // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5348[0x3];                                     // 0x0089(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Len_ReturnValue_2;                        // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0091(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5349[0x2];                                     // 0x0092(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_AkEventGlobal_ReturnValue_1;              // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_AkEventGlobal_ReturnValue_2;              // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_534A[0x4];                                     // 0x009C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_GetText_ReturnValue;                      // 0x00A0(0x0018)()
	class FText                                   CallFunc_GetText_ReturnValue_1;                    // 0x00B8(0x0018)()
	bool                                          CallFunc_Greater_IntInt_ReturnValue_1;             // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_534B[0x7];                                     // 0x00D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Left_ReturnValue;                         // 0x00D8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x00E8(0x0018)()
};
static_assert(alignof(WBP_CharacterNameInput_C_HandleOnTextChanged) == 0x000008, "Wrong alignment on WBP_CharacterNameInput_C_HandleOnTextChanged");
static_assert(sizeof(WBP_CharacterNameInput_C_HandleOnTextChanged) == 0x000100, "Wrong size on WBP_CharacterNameInput_C_HandleOnTextChanged");
static_assert(offsetof(WBP_CharacterNameInput_C_HandleOnTextChanged, InputText) == 0x000000, "Member 'WBP_CharacterNameInput_C_HandleOnTextChanged::InputText' has a wrong offset!");
static_assert(offsetof(WBP_CharacterNameInput_C_HandleOnTextChanged, bIsCommit) == 0x000018, "Member 'WBP_CharacterNameInput_C_HandleOnTextChanged::bIsCommit' has a wrong offset!");
static_assert(offsetof(WBP_CharacterNameInput_C_HandleOnTextChanged, NewText) == 0x000020, "Member 'WBP_CharacterNameInput_C_HandleOnTextChanged::NewText' has a wrong offset!");
static_assert(offsetof(WBP_CharacterNameInput_C_HandleOnTextChanged, CallFunc_Conv_TextToString_ReturnValue) == 0x000038, "Member 'WBP_CharacterNameInput_C_HandleOnTextChanged::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CharacterNameInput_C_HandleOnTextChanged, CallFunc_Conv_TextToString_ReturnValue_1) == 0x000048, "Member 'WBP_CharacterNameInput_C_HandleOnTextChanged::CallFunc_Conv_TextToString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_CharacterNameInput_C_HandleOnTextChanged, CallFunc_Len_ReturnValue) == 0x000058, "Member 'WBP_CharacterNameInput_C_HandleOnTextChanged::CallFunc_Len_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CharacterNameInput_C_HandleOnTextChanged, CallFunc_Len_ReturnValue_1) == 0x00005C, "Member 'WBP_CharacterNameInput_C_HandleOnTextChanged::CallFunc_Len_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_CharacterNameInput_C_HandleOnTextChanged, CallFunc_AkEventGlobal_ReturnValue) == 0x000060, "Member 'WBP_CharacterNameInput_C_HandleOnTextChanged::CallFunc_AkEventGlobal_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CharacterNameInput_C_HandleOnTextChanged, CallFunc_Conv_TextToString_ReturnValue_2) == 0x000068, "Member 'WBP_CharacterNameInput_C_HandleOnTextChanged::CallFunc_Conv_TextToString_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_CharacterNameInput_C_HandleOnTextChanged, CallFunc_Conv_TextToString_ReturnValue_3) == 0x000078, "Member 'WBP_CharacterNameInput_C_HandleOnTextChanged::CallFunc_Conv_TextToString_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WBP_CharacterNameInput_C_HandleOnTextChanged, CallFunc_EndsWith_ReturnValue) == 0x000088, "Member 'WBP_CharacterNameInput_C_HandleOnTextChanged::CallFunc_EndsWith_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CharacterNameInput_C_HandleOnTextChanged, CallFunc_Len_ReturnValue_2) == 0x00008C, "Member 'WBP_CharacterNameInput_C_HandleOnTextChanged::CallFunc_Len_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_CharacterNameInput_C_HandleOnTextChanged, CallFunc_Less_IntInt_ReturnValue) == 0x000090, "Member 'WBP_CharacterNameInput_C_HandleOnTextChanged::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CharacterNameInput_C_HandleOnTextChanged, CallFunc_Greater_IntInt_ReturnValue) == 0x000091, "Member 'WBP_CharacterNameInput_C_HandleOnTextChanged::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CharacterNameInput_C_HandleOnTextChanged, CallFunc_AkEventGlobal_ReturnValue_1) == 0x000094, "Member 'WBP_CharacterNameInput_C_HandleOnTextChanged::CallFunc_AkEventGlobal_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_CharacterNameInput_C_HandleOnTextChanged, CallFunc_AkEventGlobal_ReturnValue_2) == 0x000098, "Member 'WBP_CharacterNameInput_C_HandleOnTextChanged::CallFunc_AkEventGlobal_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_CharacterNameInput_C_HandleOnTextChanged, CallFunc_GetText_ReturnValue) == 0x0000A0, "Member 'WBP_CharacterNameInput_C_HandleOnTextChanged::CallFunc_GetText_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CharacterNameInput_C_HandleOnTextChanged, CallFunc_GetText_ReturnValue_1) == 0x0000B8, "Member 'WBP_CharacterNameInput_C_HandleOnTextChanged::CallFunc_GetText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_CharacterNameInput_C_HandleOnTextChanged, CallFunc_Greater_IntInt_ReturnValue_1) == 0x0000D0, "Member 'WBP_CharacterNameInput_C_HandleOnTextChanged::CallFunc_Greater_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_CharacterNameInput_C_HandleOnTextChanged, CallFunc_Left_ReturnValue) == 0x0000D8, "Member 'WBP_CharacterNameInput_C_HandleOnTextChanged::CallFunc_Left_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CharacterNameInput_C_HandleOnTextChanged, CallFunc_Conv_StringToText_ReturnValue) == 0x0000E8, "Member 'WBP_CharacterNameInput_C_HandleOnTextChanged::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");

// Function WBP_CharacterNameInput.WBP_CharacterNameInput_C.OnGetUserMenuContent
// 0x00C0 (0x00C0 - 0x0000)
struct WBP_CharacterNameInput_C_OnGetUserMenuContent final
{
public:
	class UUserWidget*                            ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsNotEmpty_ReturnValue;             // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_534C[0x3];                                     // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FText>                           K2Node_MakeArray_Array;                            // 0x0018(0x0010)(ReferenceParm)
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_534D[0x4];                                     // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_NamingErrorTooltip_C*              CallFunc_Create_ReturnValue;                       // 0x0038(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_534E[0x3];                                     // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Array_Get_Item;                           // 0x0048(0x0018)()
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x0060(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0071(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_534F[0x2];                                     // 0x0072(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Array_Get_Item_1;                         // 0x0078(0x0018)()
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5350[0x7];                                     // 0x0099(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_TextToString_ReturnValue_1;          // 0x00A0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_StriStri_ReturnValue;          // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x00B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x00B2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5351[0x1];                                     // 0x00B3(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x00B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_CharacterNameInput_C_OnGetUserMenuContent) == 0x000008, "Wrong alignment on WBP_CharacterNameInput_C_OnGetUserMenuContent");
static_assert(sizeof(WBP_CharacterNameInput_C_OnGetUserMenuContent) == 0x0000C0, "Wrong size on WBP_CharacterNameInput_C_OnGetUserMenuContent");
static_assert(offsetof(WBP_CharacterNameInput_C_OnGetUserMenuContent, ReturnValue) == 0x000000, "Member 'WBP_CharacterNameInput_C_OnGetUserMenuContent::ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CharacterNameInput_C_OnGetUserMenuContent, Temp_int_Loop_Counter_Variable) == 0x000008, "Member 'WBP_CharacterNameInput_C_OnGetUserMenuContent::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WBP_CharacterNameInput_C_OnGetUserMenuContent, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'WBP_CharacterNameInput_C_OnGetUserMenuContent::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CharacterNameInput_C_OnGetUserMenuContent, Temp_int_Array_Index_Variable) == 0x000010, "Member 'WBP_CharacterNameInput_C_OnGetUserMenuContent::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WBP_CharacterNameInput_C_OnGetUserMenuContent, CallFunc_Array_IsNotEmpty_ReturnValue) == 0x000014, "Member 'WBP_CharacterNameInput_C_OnGetUserMenuContent::CallFunc_Array_IsNotEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CharacterNameInput_C_OnGetUserMenuContent, K2Node_MakeArray_Array) == 0x000018, "Member 'WBP_CharacterNameInput_C_OnGetUserMenuContent::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(WBP_CharacterNameInput_C_OnGetUserMenuContent, CallFunc_GetOwningPlayer_ReturnValue) == 0x000028, "Member 'WBP_CharacterNameInput_C_OnGetUserMenuContent::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CharacterNameInput_C_OnGetUserMenuContent, CallFunc_Array_Length_ReturnValue) == 0x000030, "Member 'WBP_CharacterNameInput_C_OnGetUserMenuContent::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CharacterNameInput_C_OnGetUserMenuContent, CallFunc_Create_ReturnValue) == 0x000038, "Member 'WBP_CharacterNameInput_C_OnGetUserMenuContent::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CharacterNameInput_C_OnGetUserMenuContent, Temp_bool_True_if_break_was_hit_Variable) == 0x000040, "Member 'WBP_CharacterNameInput_C_OnGetUserMenuContent::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(WBP_CharacterNameInput_C_OnGetUserMenuContent, Temp_int_Array_Index_Variable_1) == 0x000044, "Member 'WBP_CharacterNameInput_C_OnGetUserMenuContent::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_CharacterNameInput_C_OnGetUserMenuContent, CallFunc_Array_Get_Item) == 0x000048, "Member 'WBP_CharacterNameInput_C_OnGetUserMenuContent::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_CharacterNameInput_C_OnGetUserMenuContent, CallFunc_Conv_TextToString_ReturnValue) == 0x000060, "Member 'WBP_CharacterNameInput_C_OnGetUserMenuContent::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CharacterNameInput_C_OnGetUserMenuContent, CallFunc_Not_PreBool_ReturnValue) == 0x000070, "Member 'WBP_CharacterNameInput_C_OnGetUserMenuContent::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CharacterNameInput_C_OnGetUserMenuContent, CallFunc_Not_PreBool_ReturnValue_1) == 0x000071, "Member 'WBP_CharacterNameInput_C_OnGetUserMenuContent::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_CharacterNameInput_C_OnGetUserMenuContent, Temp_int_Loop_Counter_Variable_1) == 0x000074, "Member 'WBP_CharacterNameInput_C_OnGetUserMenuContent::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_CharacterNameInput_C_OnGetUserMenuContent, CallFunc_Array_Get_Item_1) == 0x000078, "Member 'WBP_CharacterNameInput_C_OnGetUserMenuContent::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(WBP_CharacterNameInput_C_OnGetUserMenuContent, CallFunc_Array_Length_ReturnValue_1) == 0x000090, "Member 'WBP_CharacterNameInput_C_OnGetUserMenuContent::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_CharacterNameInput_C_OnGetUserMenuContent, CallFunc_Array_Add_ReturnValue) == 0x000094, "Member 'WBP_CharacterNameInput_C_OnGetUserMenuContent::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CharacterNameInput_C_OnGetUserMenuContent, CallFunc_Less_IntInt_ReturnValue) == 0x000098, "Member 'WBP_CharacterNameInput_C_OnGetUserMenuContent::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CharacterNameInput_C_OnGetUserMenuContent, CallFunc_Conv_TextToString_ReturnValue_1) == 0x0000A0, "Member 'WBP_CharacterNameInput_C_OnGetUserMenuContent::CallFunc_Conv_TextToString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_CharacterNameInput_C_OnGetUserMenuContent, CallFunc_EqualEqual_StriStri_ReturnValue) == 0x0000B0, "Member 'WBP_CharacterNameInput_C_OnGetUserMenuContent::CallFunc_EqualEqual_StriStri_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CharacterNameInput_C_OnGetUserMenuContent, CallFunc_Less_IntInt_ReturnValue_1) == 0x0000B1, "Member 'WBP_CharacterNameInput_C_OnGetUserMenuContent::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_CharacterNameInput_C_OnGetUserMenuContent, CallFunc_BooleanAND_ReturnValue) == 0x0000B2, "Member 'WBP_CharacterNameInput_C_OnGetUserMenuContent::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CharacterNameInput_C_OnGetUserMenuContent, CallFunc_Add_IntInt_ReturnValue_1) == 0x0000B4, "Member 'WBP_CharacterNameInput_C_OnGetUserMenuContent::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_CharacterNameInput_C_OnGetUserMenuContent, CallFunc_Not_PreBool_ReturnValue_2) == 0x0000B8, "Member 'WBP_CharacterNameInput_C_OnGetUserMenuContent::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_CharacterNameInput_C_OnGetUserMenuContent, CallFunc_BooleanAND_ReturnValue_1) == 0x0000B9, "Member 'WBP_CharacterNameInput_C_OnGetUserMenuContent::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");

// Function WBP_CharacterNameInput.WBP_CharacterNameInput_C.OnMouseEnter
// 0x00B0 (0x00B0 - 0x0000)
struct WBP_CharacterNameInput_C_OnMouseEnter final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FPointerEvent                          MouseEvent;                                        // 0x0038(0x0078)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(WBP_CharacterNameInput_C_OnMouseEnter) == 0x000008, "Wrong alignment on WBP_CharacterNameInput_C_OnMouseEnter");
static_assert(sizeof(WBP_CharacterNameInput_C_OnMouseEnter) == 0x0000B0, "Wrong size on WBP_CharacterNameInput_C_OnMouseEnter");
static_assert(offsetof(WBP_CharacterNameInput_C_OnMouseEnter, MyGeometry) == 0x000000, "Member 'WBP_CharacterNameInput_C_OnMouseEnter::MyGeometry' has a wrong offset!");
static_assert(offsetof(WBP_CharacterNameInput_C_OnMouseEnter, MouseEvent) == 0x000038, "Member 'WBP_CharacterNameInput_C_OnMouseEnter::MouseEvent' has a wrong offset!");

// Function WBP_CharacterNameInput.WBP_CharacterNameInput_C.OnMouseLeave
// 0x0078 (0x0078 - 0x0000)
struct WBP_CharacterNameInput_C_OnMouseLeave final
{
public:
	struct FPointerEvent                          MouseEvent;                                        // 0x0000(0x0078)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(WBP_CharacterNameInput_C_OnMouseLeave) == 0x000008, "Wrong alignment on WBP_CharacterNameInput_C_OnMouseLeave");
static_assert(sizeof(WBP_CharacterNameInput_C_OnMouseLeave) == 0x000078, "Wrong size on WBP_CharacterNameInput_C_OnMouseLeave");
static_assert(offsetof(WBP_CharacterNameInput_C_OnMouseLeave, MouseEvent) == 0x000000, "Member 'WBP_CharacterNameInput_C_OnMouseLeave::MouseEvent' has a wrong offset!");

// Function WBP_CharacterNameInput.WBP_CharacterNameInput_C.OnNameChanged__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct WBP_CharacterNameInput_C_OnNameChanged__DelegateSignature final
{
public:
	class FText                                   Text;                                              // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
	EVAL_CharacterNameType                        Type;                                              // 0x0018(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsCommit;                                          // 0x0019(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_CharacterNameInput_C_OnNameChanged__DelegateSignature) == 0x000008, "Wrong alignment on WBP_CharacterNameInput_C_OnNameChanged__DelegateSignature");
static_assert(sizeof(WBP_CharacterNameInput_C_OnNameChanged__DelegateSignature) == 0x000020, "Wrong size on WBP_CharacterNameInput_C_OnNameChanged__DelegateSignature");
static_assert(offsetof(WBP_CharacterNameInput_C_OnNameChanged__DelegateSignature, Text) == 0x000000, "Member 'WBP_CharacterNameInput_C_OnNameChanged__DelegateSignature::Text' has a wrong offset!");
static_assert(offsetof(WBP_CharacterNameInput_C_OnNameChanged__DelegateSignature, Type) == 0x000018, "Member 'WBP_CharacterNameInput_C_OnNameChanged__DelegateSignature::Type' has a wrong offset!");
static_assert(offsetof(WBP_CharacterNameInput_C_OnNameChanged__DelegateSignature, IsCommit) == 0x000019, "Member 'WBP_CharacterNameInput_C_OnNameChanged__DelegateSignature::IsCommit' has a wrong offset!");

// Function WBP_CharacterNameInput.WBP_CharacterNameInput_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct WBP_CharacterNameInput_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_CharacterNameInput_C_PreConstruct) == 0x000001, "Wrong alignment on WBP_CharacterNameInput_C_PreConstruct");
static_assert(sizeof(WBP_CharacterNameInput_C_PreConstruct) == 0x000001, "Wrong size on WBP_CharacterNameInput_C_PreConstruct");
static_assert(offsetof(WBP_CharacterNameInput_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'WBP_CharacterNameInput_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function WBP_CharacterNameInput.WBP_CharacterNameInput_C.SetValidState
// 0x0028 (0x0028 - 0x0000)
struct WBP_CharacterNameInput_C_SetValidState final
{
public:
	bool                                          IsValid;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5352[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FText>                           Param_ErrorTexts;                                  // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	bool                                          Temp_bool_Variable;                                // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x001B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5353[0x3];                                     // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UVALUI_EditableTextBoxStyle*            K2Node_Select_Default_1;                           // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_CharacterNameInput_C_SetValidState) == 0x000008, "Wrong alignment on WBP_CharacterNameInput_C_SetValidState");
static_assert(sizeof(WBP_CharacterNameInput_C_SetValidState) == 0x000028, "Wrong size on WBP_CharacterNameInput_C_SetValidState");
static_assert(offsetof(WBP_CharacterNameInput_C_SetValidState, IsValid) == 0x000000, "Member 'WBP_CharacterNameInput_C_SetValidState::IsValid' has a wrong offset!");
static_assert(offsetof(WBP_CharacterNameInput_C_SetValidState, Param_ErrorTexts) == 0x000008, "Member 'WBP_CharacterNameInput_C_SetValidState::Param_ErrorTexts' has a wrong offset!");
static_assert(offsetof(WBP_CharacterNameInput_C_SetValidState, Temp_bool_Variable) == 0x000018, "Member 'WBP_CharacterNameInput_C_SetValidState::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_CharacterNameInput_C_SetValidState, Temp_byte_Variable) == 0x000019, "Member 'WBP_CharacterNameInput_C_SetValidState::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_CharacterNameInput_C_SetValidState, Temp_byte_Variable_1) == 0x00001A, "Member 'WBP_CharacterNameInput_C_SetValidState::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_CharacterNameInput_C_SetValidState, Temp_bool_Variable_1) == 0x00001B, "Member 'WBP_CharacterNameInput_C_SetValidState::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_CharacterNameInput_C_SetValidState, K2Node_Select_Default) == 0x00001C, "Member 'WBP_CharacterNameInput_C_SetValidState::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_CharacterNameInput_C_SetValidState, K2Node_Select_Default_1) == 0x000020, "Member 'WBP_CharacterNameInput_C_SetValidState::K2Node_Select_Default_1' has a wrong offset!");

}

