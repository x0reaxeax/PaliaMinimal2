#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GA_MontageEvent_Base

#include "Basic.hpp"

#include "GameplayTags_structs.hpp"
#include "GameplayAbilities_structs.hpp"
#include "Palia_structs.hpp"


namespace SDK::Params
{

// Function GA_MontageEvent_Base.GA_MontageEvent_Base_C.DoesMontageSectionExist
// 0x0038 (0x0038 - 0x0000)
struct GA_MontageEvent_Base_C_DoesMontageSectionExist final
{
public:
	class FName                                   MontageName;                                       // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   SectionName;                                       // 0x0008(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_43C0[0x7];                                     // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AValeriaCharacter*                      CallFunc_GetValeriaCharacterFromActorInfo_ReturnValue; // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable;                                // 0x0020(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           CallFunc_FindMontageByMapping_ReturnValue;         // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_MontageHasSection_ReturnValue;            // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_MontageEvent_Base_C_DoesMontageSectionExist) == 0x000008, "Wrong alignment on GA_MontageEvent_Base_C_DoesMontageSectionExist");
static_assert(sizeof(GA_MontageEvent_Base_C_DoesMontageSectionExist) == 0x000038, "Wrong size on GA_MontageEvent_Base_C_DoesMontageSectionExist");
static_assert(offsetof(GA_MontageEvent_Base_C_DoesMontageSectionExist, MontageName) == 0x000000, "Member 'GA_MontageEvent_Base_C_DoesMontageSectionExist::MontageName' has a wrong offset!");
static_assert(offsetof(GA_MontageEvent_Base_C_DoesMontageSectionExist, SectionName) == 0x000008, "Member 'GA_MontageEvent_Base_C_DoesMontageSectionExist::SectionName' has a wrong offset!");
static_assert(offsetof(GA_MontageEvent_Base_C_DoesMontageSectionExist, ReturnValue) == 0x000010, "Member 'GA_MontageEvent_Base_C_DoesMontageSectionExist::ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_MontageEvent_Base_C_DoesMontageSectionExist, CallFunc_GetValeriaCharacterFromActorInfo_ReturnValue) == 0x000018, "Member 'GA_MontageEvent_Base_C_DoesMontageSectionExist::CallFunc_GetValeriaCharacterFromActorInfo_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_MontageEvent_Base_C_DoesMontageSectionExist, Temp_name_Variable) == 0x000020, "Member 'GA_MontageEvent_Base_C_DoesMontageSectionExist::Temp_name_Variable' has a wrong offset!");
static_assert(offsetof(GA_MontageEvent_Base_C_DoesMontageSectionExist, CallFunc_FindMontageByMapping_ReturnValue) == 0x000028, "Member 'GA_MontageEvent_Base_C_DoesMontageSectionExist::CallFunc_FindMontageByMapping_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_MontageEvent_Base_C_DoesMontageSectionExist, CallFunc_IsValid_ReturnValue) == 0x000030, "Member 'GA_MontageEvent_Base_C_DoesMontageSectionExist::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_MontageEvent_Base_C_DoesMontageSectionExist, CallFunc_MontageHasSection_ReturnValue) == 0x000031, "Member 'GA_MontageEvent_Base_C_DoesMontageSectionExist::CallFunc_MontageHasSection_ReturnValue' has a wrong offset!");

// Function GA_MontageEvent_Base.GA_MontageEvent_Base_C.EndTaskAndClearReference
// 0x0001 (0x0001 - 0x0000)
struct GA_MontageEvent_Base_C_EndTaskAndClearReference final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_MontageEvent_Base_C_EndTaskAndClearReference) == 0x000001, "Wrong alignment on GA_MontageEvent_Base_C_EndTaskAndClearReference");
static_assert(sizeof(GA_MontageEvent_Base_C_EndTaskAndClearReference) == 0x000001, "Wrong size on GA_MontageEvent_Base_C_EndTaskAndClearReference");
static_assert(offsetof(GA_MontageEvent_Base_C_EndTaskAndClearReference, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'GA_MontageEvent_Base_C_EndTaskAndClearReference::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function GA_MontageEvent_Base.GA_MontageEvent_Base_C.EventReceived_7FADF818480F78C2A5D48AA0819385E5
// 0x00B8 (0x00B8 - 0x0000)
struct GA_MontageEvent_Base_C_EventReceived_7FADF818480F78C2A5D48AA0819385E5 final
{
public:
	struct FGameplayTag                           EventTag;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	struct FGameplayEventData                     EventData;                                         // 0x0008(0x00B0)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(GA_MontageEvent_Base_C_EventReceived_7FADF818480F78C2A5D48AA0819385E5) == 0x000008, "Wrong alignment on GA_MontageEvent_Base_C_EventReceived_7FADF818480F78C2A5D48AA0819385E5");
static_assert(sizeof(GA_MontageEvent_Base_C_EventReceived_7FADF818480F78C2A5D48AA0819385E5) == 0x0000B8, "Wrong size on GA_MontageEvent_Base_C_EventReceived_7FADF818480F78C2A5D48AA0819385E5");
static_assert(offsetof(GA_MontageEvent_Base_C_EventReceived_7FADF818480F78C2A5D48AA0819385E5, EventTag) == 0x000000, "Member 'GA_MontageEvent_Base_C_EventReceived_7FADF818480F78C2A5D48AA0819385E5::EventTag' has a wrong offset!");
static_assert(offsetof(GA_MontageEvent_Base_C_EventReceived_7FADF818480F78C2A5D48AA0819385E5, EventData) == 0x000008, "Member 'GA_MontageEvent_Base_C_EventReceived_7FADF818480F78C2A5D48AA0819385E5::EventData' has a wrong offset!");

// Function GA_MontageEvent_Base.GA_MontageEvent_Base_C.ExecuteUbergraph_GA_MontageEvent_Base
// 0x04D8 (0x04D8 - 0x0000)
struct GA_MontageEvent_Base_C_ExecuteUbergraph_GA_MontageEvent_Base final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           K2Node_CustomEvent_EventTag_3;                     // 0x0004(0x0008)(NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_43C1[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayEventData                     K2Node_CustomEvent_EventData_3;                    // 0x0010(0x00B0)()
	struct FGameplayTag                           K2Node_CustomEvent_EventTag_2;                     // 0x00C0(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FGameplayEventData                     K2Node_CustomEvent_EventData_2;                    // 0x00C8(0x00B0)()
	TDelegate<void(const struct FGameplayTag& EventTag, const struct FGameplayEventData& EventData)> K2Node_CreateDelegate_OutputDelegate;              // 0x0178(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           K2Node_CustomEvent_EventTag_1;                     // 0x0188(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FGameplayEventData                     K2Node_CustomEvent_EventData_1;                    // 0x0190(0x00B0)()
	TDelegate<void(const struct FGameplayTag& EventTag, const struct FGameplayEventData& EventData)> K2Node_CreateDelegate_OutputDelegate_1;            // 0x0240(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           K2Node_CustomEvent_EventTag;                       // 0x0250(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FGameplayEventData                     K2Node_CustomEvent_EventData;                      // 0x0258(0x00B0)()
	TDelegate<void(const struct FGameplayTag& EventTag, const struct FGameplayEventData& EventData)> K2Node_CreateDelegate_OutputDelegate_2;            // 0x0308(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGameplayEventData                     Temp_struct_Variable;                              // 0x0318(0x00B0)()
	struct FGameplayTag                           Temp_struct_Variable_1;                            // 0x03C8(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_CommitAbility_ReturnValue;             // 0x03D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bWasCancelled;                        // 0x03D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_43C2[0x2];                                     // 0x03D2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_CustomEvent_Montage;                        // 0x03D4(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_MontageSection;                 // 0x03DC(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_EndAbilityWhenFinished;         // 0x03E4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_Force__Used_by_child_outro_;    // 0x03E5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_43C3[0x2];                                     // 0x03E6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UVAL_TaskProxy_PlayMontageAndWaitForEvent* CallFunc_PlayMontageByMappingAndWaitForEvent_ReturnValue; // 0x03E8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x03F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_43C4[0x3];                                     // 0x03F1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(const struct FGameplayTag& EventTag, const struct FGameplayEventData& EventData)> K2Node_CreateDelegate_OutputDelegate_3;            // 0x03F4(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           K2Node_CustomEvent_EventTag_4;                     // 0x0404(0x0008)(NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_43C5[0x4];                                     // 0x040C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayEventData                     K2Node_CustomEvent_EventData_4;                    // 0x0410(0x00B0)()
	bool                                          CallFunc_FNameIsNone_ReturnValue;                  // 0x04C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_43C6[0x3];                                     // 0x04C1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(const struct FGameplayTag& EventTag, const struct FGameplayEventData& EventData)> K2Node_CreateDelegate_OutputDelegate_4;            // 0x04C4(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_DoesMontageSectionExist_ReturnValue;      // 0x04D4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x04D5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_MontageEvent_Base_C_ExecuteUbergraph_GA_MontageEvent_Base) == 0x000008, "Wrong alignment on GA_MontageEvent_Base_C_ExecuteUbergraph_GA_MontageEvent_Base");
static_assert(sizeof(GA_MontageEvent_Base_C_ExecuteUbergraph_GA_MontageEvent_Base) == 0x0004D8, "Wrong size on GA_MontageEvent_Base_C_ExecuteUbergraph_GA_MontageEvent_Base");
static_assert(offsetof(GA_MontageEvent_Base_C_ExecuteUbergraph_GA_MontageEvent_Base, EntryPoint) == 0x000000, "Member 'GA_MontageEvent_Base_C_ExecuteUbergraph_GA_MontageEvent_Base::EntryPoint' has a wrong offset!");
static_assert(offsetof(GA_MontageEvent_Base_C_ExecuteUbergraph_GA_MontageEvent_Base, K2Node_CustomEvent_EventTag_3) == 0x000004, "Member 'GA_MontageEvent_Base_C_ExecuteUbergraph_GA_MontageEvent_Base::K2Node_CustomEvent_EventTag_3' has a wrong offset!");
static_assert(offsetof(GA_MontageEvent_Base_C_ExecuteUbergraph_GA_MontageEvent_Base, K2Node_CustomEvent_EventData_3) == 0x000010, "Member 'GA_MontageEvent_Base_C_ExecuteUbergraph_GA_MontageEvent_Base::K2Node_CustomEvent_EventData_3' has a wrong offset!");
static_assert(offsetof(GA_MontageEvent_Base_C_ExecuteUbergraph_GA_MontageEvent_Base, K2Node_CustomEvent_EventTag_2) == 0x0000C0, "Member 'GA_MontageEvent_Base_C_ExecuteUbergraph_GA_MontageEvent_Base::K2Node_CustomEvent_EventTag_2' has a wrong offset!");
static_assert(offsetof(GA_MontageEvent_Base_C_ExecuteUbergraph_GA_MontageEvent_Base, K2Node_CustomEvent_EventData_2) == 0x0000C8, "Member 'GA_MontageEvent_Base_C_ExecuteUbergraph_GA_MontageEvent_Base::K2Node_CustomEvent_EventData_2' has a wrong offset!");
static_assert(offsetof(GA_MontageEvent_Base_C_ExecuteUbergraph_GA_MontageEvent_Base, K2Node_CreateDelegate_OutputDelegate) == 0x000178, "Member 'GA_MontageEvent_Base_C_ExecuteUbergraph_GA_MontageEvent_Base::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(GA_MontageEvent_Base_C_ExecuteUbergraph_GA_MontageEvent_Base, K2Node_CustomEvent_EventTag_1) == 0x000188, "Member 'GA_MontageEvent_Base_C_ExecuteUbergraph_GA_MontageEvent_Base::K2Node_CustomEvent_EventTag_1' has a wrong offset!");
static_assert(offsetof(GA_MontageEvent_Base_C_ExecuteUbergraph_GA_MontageEvent_Base, K2Node_CustomEvent_EventData_1) == 0x000190, "Member 'GA_MontageEvent_Base_C_ExecuteUbergraph_GA_MontageEvent_Base::K2Node_CustomEvent_EventData_1' has a wrong offset!");
static_assert(offsetof(GA_MontageEvent_Base_C_ExecuteUbergraph_GA_MontageEvent_Base, K2Node_CreateDelegate_OutputDelegate_1) == 0x000240, "Member 'GA_MontageEvent_Base_C_ExecuteUbergraph_GA_MontageEvent_Base::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(GA_MontageEvent_Base_C_ExecuteUbergraph_GA_MontageEvent_Base, K2Node_CustomEvent_EventTag) == 0x000250, "Member 'GA_MontageEvent_Base_C_ExecuteUbergraph_GA_MontageEvent_Base::K2Node_CustomEvent_EventTag' has a wrong offset!");
static_assert(offsetof(GA_MontageEvent_Base_C_ExecuteUbergraph_GA_MontageEvent_Base, K2Node_CustomEvent_EventData) == 0x000258, "Member 'GA_MontageEvent_Base_C_ExecuteUbergraph_GA_MontageEvent_Base::K2Node_CustomEvent_EventData' has a wrong offset!");
static_assert(offsetof(GA_MontageEvent_Base_C_ExecuteUbergraph_GA_MontageEvent_Base, K2Node_CreateDelegate_OutputDelegate_2) == 0x000308, "Member 'GA_MontageEvent_Base_C_ExecuteUbergraph_GA_MontageEvent_Base::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(GA_MontageEvent_Base_C_ExecuteUbergraph_GA_MontageEvent_Base, Temp_struct_Variable) == 0x000318, "Member 'GA_MontageEvent_Base_C_ExecuteUbergraph_GA_MontageEvent_Base::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(GA_MontageEvent_Base_C_ExecuteUbergraph_GA_MontageEvent_Base, Temp_struct_Variable_1) == 0x0003C8, "Member 'GA_MontageEvent_Base_C_ExecuteUbergraph_GA_MontageEvent_Base::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(GA_MontageEvent_Base_C_ExecuteUbergraph_GA_MontageEvent_Base, CallFunc_K2_CommitAbility_ReturnValue) == 0x0003D0, "Member 'GA_MontageEvent_Base_C_ExecuteUbergraph_GA_MontageEvent_Base::CallFunc_K2_CommitAbility_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_MontageEvent_Base_C_ExecuteUbergraph_GA_MontageEvent_Base, K2Node_Event_bWasCancelled) == 0x0003D1, "Member 'GA_MontageEvent_Base_C_ExecuteUbergraph_GA_MontageEvent_Base::K2Node_Event_bWasCancelled' has a wrong offset!");
static_assert(offsetof(GA_MontageEvent_Base_C_ExecuteUbergraph_GA_MontageEvent_Base, K2Node_CustomEvent_Montage) == 0x0003D4, "Member 'GA_MontageEvent_Base_C_ExecuteUbergraph_GA_MontageEvent_Base::K2Node_CustomEvent_Montage' has a wrong offset!");
static_assert(offsetof(GA_MontageEvent_Base_C_ExecuteUbergraph_GA_MontageEvent_Base, K2Node_CustomEvent_MontageSection) == 0x0003DC, "Member 'GA_MontageEvent_Base_C_ExecuteUbergraph_GA_MontageEvent_Base::K2Node_CustomEvent_MontageSection' has a wrong offset!");
static_assert(offsetof(GA_MontageEvent_Base_C_ExecuteUbergraph_GA_MontageEvent_Base, K2Node_CustomEvent_EndAbilityWhenFinished) == 0x0003E4, "Member 'GA_MontageEvent_Base_C_ExecuteUbergraph_GA_MontageEvent_Base::K2Node_CustomEvent_EndAbilityWhenFinished' has a wrong offset!");
static_assert(offsetof(GA_MontageEvent_Base_C_ExecuteUbergraph_GA_MontageEvent_Base, K2Node_CustomEvent_Force__Used_by_child_outro_) == 0x0003E5, "Member 'GA_MontageEvent_Base_C_ExecuteUbergraph_GA_MontageEvent_Base::K2Node_CustomEvent_Force__Used_by_child_outro_' has a wrong offset!");
static_assert(offsetof(GA_MontageEvent_Base_C_ExecuteUbergraph_GA_MontageEvent_Base, CallFunc_PlayMontageByMappingAndWaitForEvent_ReturnValue) == 0x0003E8, "Member 'GA_MontageEvent_Base_C_ExecuteUbergraph_GA_MontageEvent_Base::CallFunc_PlayMontageByMappingAndWaitForEvent_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_MontageEvent_Base_C_ExecuteUbergraph_GA_MontageEvent_Base, CallFunc_IsValid_ReturnValue) == 0x0003F0, "Member 'GA_MontageEvent_Base_C_ExecuteUbergraph_GA_MontageEvent_Base::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_MontageEvent_Base_C_ExecuteUbergraph_GA_MontageEvent_Base, K2Node_CreateDelegate_OutputDelegate_3) == 0x0003F4, "Member 'GA_MontageEvent_Base_C_ExecuteUbergraph_GA_MontageEvent_Base::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");
static_assert(offsetof(GA_MontageEvent_Base_C_ExecuteUbergraph_GA_MontageEvent_Base, K2Node_CustomEvent_EventTag_4) == 0x000404, "Member 'GA_MontageEvent_Base_C_ExecuteUbergraph_GA_MontageEvent_Base::K2Node_CustomEvent_EventTag_4' has a wrong offset!");
static_assert(offsetof(GA_MontageEvent_Base_C_ExecuteUbergraph_GA_MontageEvent_Base, K2Node_CustomEvent_EventData_4) == 0x000410, "Member 'GA_MontageEvent_Base_C_ExecuteUbergraph_GA_MontageEvent_Base::K2Node_CustomEvent_EventData_4' has a wrong offset!");
static_assert(offsetof(GA_MontageEvent_Base_C_ExecuteUbergraph_GA_MontageEvent_Base, CallFunc_FNameIsNone_ReturnValue) == 0x0004C0, "Member 'GA_MontageEvent_Base_C_ExecuteUbergraph_GA_MontageEvent_Base::CallFunc_FNameIsNone_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_MontageEvent_Base_C_ExecuteUbergraph_GA_MontageEvent_Base, K2Node_CreateDelegate_OutputDelegate_4) == 0x0004C4, "Member 'GA_MontageEvent_Base_C_ExecuteUbergraph_GA_MontageEvent_Base::K2Node_CreateDelegate_OutputDelegate_4' has a wrong offset!");
static_assert(offsetof(GA_MontageEvent_Base_C_ExecuteUbergraph_GA_MontageEvent_Base, CallFunc_DoesMontageSectionExist_ReturnValue) == 0x0004D4, "Member 'GA_MontageEvent_Base_C_ExecuteUbergraph_GA_MontageEvent_Base::CallFunc_DoesMontageSectionExist_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_MontageEvent_Base_C_ExecuteUbergraph_GA_MontageEvent_Base, CallFunc_BooleanOR_ReturnValue) == 0x0004D5, "Member 'GA_MontageEvent_Base_C_ExecuteUbergraph_GA_MontageEvent_Base::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");

// Function GA_MontageEvent_Base.GA_MontageEvent_Base_C.GetPlayingMontage
// 0x0010 (0x0010 - 0x0000)
struct GA_MontageEvent_Base_C_GetPlayingMontage final
{
public:
	class FName                                   Param_AnimationName;                               // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Param_MontageSection;                              // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_MontageEvent_Base_C_GetPlayingMontage) == 0x000004, "Wrong alignment on GA_MontageEvent_Base_C_GetPlayingMontage");
static_assert(sizeof(GA_MontageEvent_Base_C_GetPlayingMontage) == 0x000010, "Wrong size on GA_MontageEvent_Base_C_GetPlayingMontage");
static_assert(offsetof(GA_MontageEvent_Base_C_GetPlayingMontage, Param_AnimationName) == 0x000000, "Member 'GA_MontageEvent_Base_C_GetPlayingMontage::Param_AnimationName' has a wrong offset!");
static_assert(offsetof(GA_MontageEvent_Base_C_GetPlayingMontage, Param_MontageSection) == 0x000008, "Member 'GA_MontageEvent_Base_C_GetPlayingMontage::Param_MontageSection' has a wrong offset!");

// Function GA_MontageEvent_Base.GA_MontageEvent_Base_C.GetWasCancelled
// 0x0001 (0x0001 - 0x0000)
struct GA_MontageEvent_Base_C_GetWasCancelled final
{
public:
	bool                                          Param_WasCancelled;                                // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_MontageEvent_Base_C_GetWasCancelled) == 0x000001, "Wrong alignment on GA_MontageEvent_Base_C_GetWasCancelled");
static_assert(sizeof(GA_MontageEvent_Base_C_GetWasCancelled) == 0x000001, "Wrong size on GA_MontageEvent_Base_C_GetWasCancelled");
static_assert(offsetof(GA_MontageEvent_Base_C_GetWasCancelled, Param_WasCancelled) == 0x000000, "Member 'GA_MontageEvent_Base_C_GetWasCancelled::Param_WasCancelled' has a wrong offset!");

// Function GA_MontageEvent_Base.GA_MontageEvent_Base_C.HandleEvent
// 0x00C0 (0x00C0 - 0x0000)
struct GA_MontageEvent_Base_C_HandleEvent final
{
public:
	struct FGameplayTag                           EventTag;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	struct FGameplayEventData                     EventData;                                         // 0x0008(0x00B0)(BlueprintVisible, BlueprintReadOnly, Parm)
	bool                                          GameplayTagsK2Node_SwitchGameplayTag_CmpSuccess;   // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SetMovementBlock_Changed;                 // 0x00B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SetMovementBlock_Changed_1;               // 0x00BA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_MontageEvent_Base_C_HandleEvent) == 0x000008, "Wrong alignment on GA_MontageEvent_Base_C_HandleEvent");
static_assert(sizeof(GA_MontageEvent_Base_C_HandleEvent) == 0x0000C0, "Wrong size on GA_MontageEvent_Base_C_HandleEvent");
static_assert(offsetof(GA_MontageEvent_Base_C_HandleEvent, EventTag) == 0x000000, "Member 'GA_MontageEvent_Base_C_HandleEvent::EventTag' has a wrong offset!");
static_assert(offsetof(GA_MontageEvent_Base_C_HandleEvent, EventData) == 0x000008, "Member 'GA_MontageEvent_Base_C_HandleEvent::EventData' has a wrong offset!");
static_assert(offsetof(GA_MontageEvent_Base_C_HandleEvent, GameplayTagsK2Node_SwitchGameplayTag_CmpSuccess) == 0x0000B8, "Member 'GA_MontageEvent_Base_C_HandleEvent::GameplayTagsK2Node_SwitchGameplayTag_CmpSuccess' has a wrong offset!");
static_assert(offsetof(GA_MontageEvent_Base_C_HandleEvent, CallFunc_SetMovementBlock_Changed) == 0x0000B9, "Member 'GA_MontageEvent_Base_C_HandleEvent::CallFunc_SetMovementBlock_Changed' has a wrong offset!");
static_assert(offsetof(GA_MontageEvent_Base_C_HandleEvent, CallFunc_SetMovementBlock_Changed_1) == 0x0000BA, "Member 'GA_MontageEvent_Base_C_HandleEvent::CallFunc_SetMovementBlock_Changed_1' has a wrong offset!");

// Function GA_MontageEvent_Base.GA_MontageEvent_Base_C.IsAbilityLockedIn
// 0x0001 (0x0001 - 0x0000)
struct GA_MontageEvent_Base_C_IsAbilityLockedIn final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_MontageEvent_Base_C_IsAbilityLockedIn) == 0x000001, "Wrong alignment on GA_MontageEvent_Base_C_IsAbilityLockedIn");
static_assert(sizeof(GA_MontageEvent_Base_C_IsAbilityLockedIn) == 0x000001, "Wrong size on GA_MontageEvent_Base_C_IsAbilityLockedIn");
static_assert(offsetof(GA_MontageEvent_Base_C_IsAbilityLockedIn, ReturnValue) == 0x000000, "Member 'GA_MontageEvent_Base_C_IsAbilityLockedIn::ReturnValue' has a wrong offset!");

// Function GA_MontageEvent_Base.GA_MontageEvent_Base_C.IsShuttingDown
// 0x0001 (0x0001 - 0x0000)
struct GA_MontageEvent_Base_C_IsShuttingDown final
{
public:
	bool                                          NewParam;                                          // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_MontageEvent_Base_C_IsShuttingDown) == 0x000001, "Wrong alignment on GA_MontageEvent_Base_C_IsShuttingDown");
static_assert(sizeof(GA_MontageEvent_Base_C_IsShuttingDown) == 0x000001, "Wrong size on GA_MontageEvent_Base_C_IsShuttingDown");
static_assert(offsetof(GA_MontageEvent_Base_C_IsShuttingDown, NewParam) == 0x000000, "Member 'GA_MontageEvent_Base_C_IsShuttingDown::NewParam' has a wrong offset!");

// Function GA_MontageEvent_Base.GA_MontageEvent_Base_C.K2_OnEndAbility
// 0x0001 (0x0001 - 0x0000)
struct GA_MontageEvent_Base_C_K2_OnEndAbility final
{
public:
	bool                                          bWasCancelled;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_MontageEvent_Base_C_K2_OnEndAbility) == 0x000001, "Wrong alignment on GA_MontageEvent_Base_C_K2_OnEndAbility");
static_assert(sizeof(GA_MontageEvent_Base_C_K2_OnEndAbility) == 0x000001, "Wrong size on GA_MontageEvent_Base_C_K2_OnEndAbility");
static_assert(offsetof(GA_MontageEvent_Base_C_K2_OnEndAbility, bWasCancelled) == 0x000000, "Member 'GA_MontageEvent_Base_C_K2_OnEndAbility::bWasCancelled' has a wrong offset!");

// Function GA_MontageEvent_Base.GA_MontageEvent_Base_C.OnAbilityEnd
// 0x0001 (0x0001 - 0x0000)
struct GA_MontageEvent_Base_C_OnAbilityEnd final
{
public:
	bool                                          CallFunc_SetMovementBlock_Changed;                 // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_MontageEvent_Base_C_OnAbilityEnd) == 0x000001, "Wrong alignment on GA_MontageEvent_Base_C_OnAbilityEnd");
static_assert(sizeof(GA_MontageEvent_Base_C_OnAbilityEnd) == 0x000001, "Wrong size on GA_MontageEvent_Base_C_OnAbilityEnd");
static_assert(offsetof(GA_MontageEvent_Base_C_OnAbilityEnd, CallFunc_SetMovementBlock_Changed) == 0x000000, "Member 'GA_MontageEvent_Base_C_OnAbilityEnd::CallFunc_SetMovementBlock_Changed' has a wrong offset!");

// Function GA_MontageEvent_Base.GA_MontageEvent_Base_C.OnAbilityStart
// 0x0001 (0x0001 - 0x0000)
struct GA_MontageEvent_Base_C_OnAbilityStart final
{
public:
	bool                                          CallFunc_SetMovementBlock_Changed;                 // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_MontageEvent_Base_C_OnAbilityStart) == 0x000001, "Wrong alignment on GA_MontageEvent_Base_C_OnAbilityStart");
static_assert(sizeof(GA_MontageEvent_Base_C_OnAbilityStart) == 0x000001, "Wrong size on GA_MontageEvent_Base_C_OnAbilityStart");
static_assert(offsetof(GA_MontageEvent_Base_C_OnAbilityStart, CallFunc_SetMovementBlock_Changed) == 0x000000, "Member 'GA_MontageEvent_Base_C_OnAbilityStart::CallFunc_SetMovementBlock_Changed' has a wrong offset!");

// Function GA_MontageEvent_Base.GA_MontageEvent_Base_C.OnBlendOut_7FADF818480F78C2A5D48AA0819385E5
// 0x00B8 (0x00B8 - 0x0000)
struct GA_MontageEvent_Base_C_OnBlendOut_7FADF818480F78C2A5D48AA0819385E5 final
{
public:
	struct FGameplayTag                           EventTag;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	struct FGameplayEventData                     EventData;                                         // 0x0008(0x00B0)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(GA_MontageEvent_Base_C_OnBlendOut_7FADF818480F78C2A5D48AA0819385E5) == 0x000008, "Wrong alignment on GA_MontageEvent_Base_C_OnBlendOut_7FADF818480F78C2A5D48AA0819385E5");
static_assert(sizeof(GA_MontageEvent_Base_C_OnBlendOut_7FADF818480F78C2A5D48AA0819385E5) == 0x0000B8, "Wrong size on GA_MontageEvent_Base_C_OnBlendOut_7FADF818480F78C2A5D48AA0819385E5");
static_assert(offsetof(GA_MontageEvent_Base_C_OnBlendOut_7FADF818480F78C2A5D48AA0819385E5, EventTag) == 0x000000, "Member 'GA_MontageEvent_Base_C_OnBlendOut_7FADF818480F78C2A5D48AA0819385E5::EventTag' has a wrong offset!");
static_assert(offsetof(GA_MontageEvent_Base_C_OnBlendOut_7FADF818480F78C2A5D48AA0819385E5, EventData) == 0x000008, "Member 'GA_MontageEvent_Base_C_OnBlendOut_7FADF818480F78C2A5D48AA0819385E5::EventData' has a wrong offset!");

// Function GA_MontageEvent_Base.GA_MontageEvent_Base_C.OnCancelled_7FADF818480F78C2A5D48AA0819385E5
// 0x00B8 (0x00B8 - 0x0000)
struct GA_MontageEvent_Base_C_OnCancelled_7FADF818480F78C2A5D48AA0819385E5 final
{
public:
	struct FGameplayTag                           EventTag;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	struct FGameplayEventData                     EventData;                                         // 0x0008(0x00B0)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(GA_MontageEvent_Base_C_OnCancelled_7FADF818480F78C2A5D48AA0819385E5) == 0x000008, "Wrong alignment on GA_MontageEvent_Base_C_OnCancelled_7FADF818480F78C2A5D48AA0819385E5");
static_assert(sizeof(GA_MontageEvent_Base_C_OnCancelled_7FADF818480F78C2A5D48AA0819385E5) == 0x0000B8, "Wrong size on GA_MontageEvent_Base_C_OnCancelled_7FADF818480F78C2A5D48AA0819385E5");
static_assert(offsetof(GA_MontageEvent_Base_C_OnCancelled_7FADF818480F78C2A5D48AA0819385E5, EventTag) == 0x000000, "Member 'GA_MontageEvent_Base_C_OnCancelled_7FADF818480F78C2A5D48AA0819385E5::EventTag' has a wrong offset!");
static_assert(offsetof(GA_MontageEvent_Base_C_OnCancelled_7FADF818480F78C2A5D48AA0819385E5, EventData) == 0x000008, "Member 'GA_MontageEvent_Base_C_OnCancelled_7FADF818480F78C2A5D48AA0819385E5::EventData' has a wrong offset!");

// Function GA_MontageEvent_Base.GA_MontageEvent_Base_C.OnCompleted_7FADF818480F78C2A5D48AA0819385E5
// 0x00B8 (0x00B8 - 0x0000)
struct GA_MontageEvent_Base_C_OnCompleted_7FADF818480F78C2A5D48AA0819385E5 final
{
public:
	struct FGameplayTag                           EventTag;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	struct FGameplayEventData                     EventData;                                         // 0x0008(0x00B0)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(GA_MontageEvent_Base_C_OnCompleted_7FADF818480F78C2A5D48AA0819385E5) == 0x000008, "Wrong alignment on GA_MontageEvent_Base_C_OnCompleted_7FADF818480F78C2A5D48AA0819385E5");
static_assert(sizeof(GA_MontageEvent_Base_C_OnCompleted_7FADF818480F78C2A5D48AA0819385E5) == 0x0000B8, "Wrong size on GA_MontageEvent_Base_C_OnCompleted_7FADF818480F78C2A5D48AA0819385E5");
static_assert(offsetof(GA_MontageEvent_Base_C_OnCompleted_7FADF818480F78C2A5D48AA0819385E5, EventTag) == 0x000000, "Member 'GA_MontageEvent_Base_C_OnCompleted_7FADF818480F78C2A5D48AA0819385E5::EventTag' has a wrong offset!");
static_assert(offsetof(GA_MontageEvent_Base_C_OnCompleted_7FADF818480F78C2A5D48AA0819385E5, EventData) == 0x000008, "Member 'GA_MontageEvent_Base_C_OnCompleted_7FADF818480F78C2A5D48AA0819385E5::EventData' has a wrong offset!");

// Function GA_MontageEvent_Base.GA_MontageEvent_Base_C.OnInterrupted_7FADF818480F78C2A5D48AA0819385E5
// 0x00B8 (0x00B8 - 0x0000)
struct GA_MontageEvent_Base_C_OnInterrupted_7FADF818480F78C2A5D48AA0819385E5 final
{
public:
	struct FGameplayTag                           EventTag;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	struct FGameplayEventData                     EventData;                                         // 0x0008(0x00B0)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(GA_MontageEvent_Base_C_OnInterrupted_7FADF818480F78C2A5D48AA0819385E5) == 0x000008, "Wrong alignment on GA_MontageEvent_Base_C_OnInterrupted_7FADF818480F78C2A5D48AA0819385E5");
static_assert(sizeof(GA_MontageEvent_Base_C_OnInterrupted_7FADF818480F78C2A5D48AA0819385E5) == 0x0000B8, "Wrong size on GA_MontageEvent_Base_C_OnInterrupted_7FADF818480F78C2A5D48AA0819385E5");
static_assert(offsetof(GA_MontageEvent_Base_C_OnInterrupted_7FADF818480F78C2A5D48AA0819385E5, EventTag) == 0x000000, "Member 'GA_MontageEvent_Base_C_OnInterrupted_7FADF818480F78C2A5D48AA0819385E5::EventTag' has a wrong offset!");
static_assert(offsetof(GA_MontageEvent_Base_C_OnInterrupted_7FADF818480F78C2A5D48AA0819385E5, EventData) == 0x000008, "Member 'GA_MontageEvent_Base_C_OnInterrupted_7FADF818480F78C2A5D48AA0819385E5::EventData' has a wrong offset!");

// Function GA_MontageEvent_Base.GA_MontageEvent_Base_C.OnMontageDone__DelegateSignature
// 0x0001 (0x0001 - 0x0000)
struct GA_MontageEvent_Base_C_OnMontageDone__DelegateSignature final
{
public:
	EMontageEventResult                           Result;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_MontageEvent_Base_C_OnMontageDone__DelegateSignature) == 0x000001, "Wrong alignment on GA_MontageEvent_Base_C_OnMontageDone__DelegateSignature");
static_assert(sizeof(GA_MontageEvent_Base_C_OnMontageDone__DelegateSignature) == 0x000001, "Wrong size on GA_MontageEvent_Base_C_OnMontageDone__DelegateSignature");
static_assert(offsetof(GA_MontageEvent_Base_C_OnMontageDone__DelegateSignature, Result) == 0x000000, "Member 'GA_MontageEvent_Base_C_OnMontageDone__DelegateSignature::Result' has a wrong offset!");

// Function GA_MontageEvent_Base.GA_MontageEvent_Base_C.OnMovementBlockChanged__DelegateSignature
// 0x0001 (0x0001 - 0x0000)
struct GA_MontageEvent_Base_C_OnMovementBlockChanged__DelegateSignature final
{
public:
	bool                                          Param_MovementBlocked;                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_MontageEvent_Base_C_OnMovementBlockChanged__DelegateSignature) == 0x000001, "Wrong alignment on GA_MontageEvent_Base_C_OnMovementBlockChanged__DelegateSignature");
static_assert(sizeof(GA_MontageEvent_Base_C_OnMovementBlockChanged__DelegateSignature) == 0x000001, "Wrong size on GA_MontageEvent_Base_C_OnMovementBlockChanged__DelegateSignature");
static_assert(offsetof(GA_MontageEvent_Base_C_OnMovementBlockChanged__DelegateSignature, Param_MovementBlocked) == 0x000000, "Member 'GA_MontageEvent_Base_C_OnMovementBlockChanged__DelegateSignature::Param_MovementBlocked' has a wrong offset!");

// Function GA_MontageEvent_Base.GA_MontageEvent_Base_C.PlayMontage
// 0x0014 (0x0014 - 0x0000)
struct GA_MontageEvent_Base_C_PlayMontage final
{
public:
	class FName                                   Montage;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Param_MontageSection;                              // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          EndAbilityWhenFinished;                            // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Force__Used_by_child_outro_;                       // 0x0011(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_MontageEvent_Base_C_PlayMontage) == 0x000004, "Wrong alignment on GA_MontageEvent_Base_C_PlayMontage");
static_assert(sizeof(GA_MontageEvent_Base_C_PlayMontage) == 0x000014, "Wrong size on GA_MontageEvent_Base_C_PlayMontage");
static_assert(offsetof(GA_MontageEvent_Base_C_PlayMontage, Montage) == 0x000000, "Member 'GA_MontageEvent_Base_C_PlayMontage::Montage' has a wrong offset!");
static_assert(offsetof(GA_MontageEvent_Base_C_PlayMontage, Param_MontageSection) == 0x000008, "Member 'GA_MontageEvent_Base_C_PlayMontage::Param_MontageSection' has a wrong offset!");
static_assert(offsetof(GA_MontageEvent_Base_C_PlayMontage, EndAbilityWhenFinished) == 0x000010, "Member 'GA_MontageEvent_Base_C_PlayMontage::EndAbilityWhenFinished' has a wrong offset!");
static_assert(offsetof(GA_MontageEvent_Base_C_PlayMontage, Force__Used_by_child_outro_) == 0x000011, "Member 'GA_MontageEvent_Base_C_PlayMontage::Force__Used_by_child_outro_' has a wrong offset!");

// Function GA_MontageEvent_Base.GA_MontageEvent_Base_C.SetAbilityLockedIn
// 0x0001 (0x0001 - 0x0000)
struct GA_MontageEvent_Base_C_SetAbilityLockedIn final
{
public:
	bool                                          Param_LockedIn;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_MontageEvent_Base_C_SetAbilityLockedIn) == 0x000001, "Wrong alignment on GA_MontageEvent_Base_C_SetAbilityLockedIn");
static_assert(sizeof(GA_MontageEvent_Base_C_SetAbilityLockedIn) == 0x000001, "Wrong size on GA_MontageEvent_Base_C_SetAbilityLockedIn");
static_assert(offsetof(GA_MontageEvent_Base_C_SetAbilityLockedIn, Param_LockedIn) == 0x000000, "Member 'GA_MontageEvent_Base_C_SetAbilityLockedIn::Param_LockedIn' has a wrong offset!");

// Function GA_MontageEvent_Base.GA_MontageEvent_Base_C.SetMovementBlock
// 0x000C (0x000C - 0x0000)
struct GA_MontageEvent_Base_C_SetMovementBlock final
{
public:
	bool                                          bLock;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Changed;                                           // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsAbilityLockedIn_ReturnValue;            // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_BoolBool_ReturnValue;            // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FActiveGameplayEffectHandle            CallFunc_BP_ApplyGameplayEffectToOwner_ReturnValue; // 0x0004(0x0008)(NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_MontageEvent_Base_C_SetMovementBlock) == 0x000004, "Wrong alignment on GA_MontageEvent_Base_C_SetMovementBlock");
static_assert(sizeof(GA_MontageEvent_Base_C_SetMovementBlock) == 0x00000C, "Wrong size on GA_MontageEvent_Base_C_SetMovementBlock");
static_assert(offsetof(GA_MontageEvent_Base_C_SetMovementBlock, bLock) == 0x000000, "Member 'GA_MontageEvent_Base_C_SetMovementBlock::bLock' has a wrong offset!");
static_assert(offsetof(GA_MontageEvent_Base_C_SetMovementBlock, Changed) == 0x000001, "Member 'GA_MontageEvent_Base_C_SetMovementBlock::Changed' has a wrong offset!");
static_assert(offsetof(GA_MontageEvent_Base_C_SetMovementBlock, CallFunc_IsAbilityLockedIn_ReturnValue) == 0x000002, "Member 'GA_MontageEvent_Base_C_SetMovementBlock::CallFunc_IsAbilityLockedIn_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_MontageEvent_Base_C_SetMovementBlock, CallFunc_NotEqual_BoolBool_ReturnValue) == 0x000003, "Member 'GA_MontageEvent_Base_C_SetMovementBlock::CallFunc_NotEqual_BoolBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_MontageEvent_Base_C_SetMovementBlock, CallFunc_BP_ApplyGameplayEffectToOwner_ReturnValue) == 0x000004, "Member 'GA_MontageEvent_Base_C_SetMovementBlock::CallFunc_BP_ApplyGameplayEffectToOwner_ReturnValue' has a wrong offset!");

}

