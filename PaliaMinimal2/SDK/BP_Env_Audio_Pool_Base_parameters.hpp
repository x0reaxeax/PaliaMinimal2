#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Env_Audio_Pool_Base

#include "Basic.hpp"

#include "Struct_PoolAudio_structs.hpp"


namespace SDK::Params
{

// Function BP_Env_Audio_Pool_Base.BP_Env_Audio_Pool_Base_C.ExecuteUbergraph_BP_Env_Audio_Pool_Base
// 0x0008 (0x0008 - 0x0000)
struct BP_Env_Audio_Pool_Base_C_ExecuteUbergraph_BP_Env_Audio_Pool_Base final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Env_Audio_Pool_Base_C_ExecuteUbergraph_BP_Env_Audio_Pool_Base) == 0x000004, "Wrong alignment on BP_Env_Audio_Pool_Base_C_ExecuteUbergraph_BP_Env_Audio_Pool_Base");
static_assert(sizeof(BP_Env_Audio_Pool_Base_C_ExecuteUbergraph_BP_Env_Audio_Pool_Base) == 0x000008, "Wrong size on BP_Env_Audio_Pool_Base_C_ExecuteUbergraph_BP_Env_Audio_Pool_Base");
static_assert(offsetof(BP_Env_Audio_Pool_Base_C_ExecuteUbergraph_BP_Env_Audio_Pool_Base, EntryPoint) == 0x000000, "Member 'BP_Env_Audio_Pool_Base_C_ExecuteUbergraph_BP_Env_Audio_Pool_Base::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_Env_Audio_Pool_Base_C_ExecuteUbergraph_BP_Env_Audio_Pool_Base, CallFunc_IsValid_ReturnValue) == 0x000004, "Member 'BP_Env_Audio_Pool_Base_C_ExecuteUbergraph_BP_Env_Audio_Pool_Base::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_Env_Audio_Pool_Base.BP_Env_Audio_Pool_Base_C.SetBillboardVisibility
// 0x0001 (0x0001 - 0x0000)
struct BP_Env_Audio_Pool_Base_C_SetBillboardVisibility final
{
public:
	bool                                          Visible;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Env_Audio_Pool_Base_C_SetBillboardVisibility) == 0x000001, "Wrong alignment on BP_Env_Audio_Pool_Base_C_SetBillboardVisibility");
static_assert(sizeof(BP_Env_Audio_Pool_Base_C_SetBillboardVisibility) == 0x000001, "Wrong size on BP_Env_Audio_Pool_Base_C_SetBillboardVisibility");
static_assert(offsetof(BP_Env_Audio_Pool_Base_C_SetBillboardVisibility, Visible) == 0x000000, "Member 'BP_Env_Audio_Pool_Base_C_SetBillboardVisibility::Visible' has a wrong offset!");

// Function BP_Env_Audio_Pool_Base.BP_Env_Audio_Pool_Base_C.SetRadiusToAttenuation
// 0x0060 (0x0060 - 0x0000)
struct BP_Env_Audio_Pool_Base_C_SetRadiusToAttenuation final
{
public:
	double                                        AkInstectMaxAtten;                                 // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        AkCritterMaxAtten;                                 // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        AkLoopMaxAtten;                                    // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FMax_ReturnValue;                         // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FMax_ReturnValue_1;                       // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetMaxAttenuationRadius_ReturnValue;      // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_45F4[0x3];                                     // 0x0035(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetMaxAttenuationRadius_ReturnValue_1;    // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetMaxAttenuationRadius_ReturnValue_2;    // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_45F5[0x2];                                     // 0x0042(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_SetSphereRadius_InSphereRadius_ImplicitCast; // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_VariableSet_AkInstectMaxAtten_ImplicitCast; // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_VariableSet_AkCritterMaxAtten_ImplicitCast; // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_VariableSet_AkLoopMaxAtten_ImplicitCast;    // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Env_Audio_Pool_Base_C_SetRadiusToAttenuation) == 0x000008, "Wrong alignment on BP_Env_Audio_Pool_Base_C_SetRadiusToAttenuation");
static_assert(sizeof(BP_Env_Audio_Pool_Base_C_SetRadiusToAttenuation) == 0x000060, "Wrong size on BP_Env_Audio_Pool_Base_C_SetRadiusToAttenuation");
static_assert(offsetof(BP_Env_Audio_Pool_Base_C_SetRadiusToAttenuation, AkInstectMaxAtten) == 0x000000, "Member 'BP_Env_Audio_Pool_Base_C_SetRadiusToAttenuation::AkInstectMaxAtten' has a wrong offset!");
static_assert(offsetof(BP_Env_Audio_Pool_Base_C_SetRadiusToAttenuation, AkCritterMaxAtten) == 0x000008, "Member 'BP_Env_Audio_Pool_Base_C_SetRadiusToAttenuation::AkCritterMaxAtten' has a wrong offset!");
static_assert(offsetof(BP_Env_Audio_Pool_Base_C_SetRadiusToAttenuation, AkLoopMaxAtten) == 0x000010, "Member 'BP_Env_Audio_Pool_Base_C_SetRadiusToAttenuation::AkLoopMaxAtten' has a wrong offset!");
static_assert(offsetof(BP_Env_Audio_Pool_Base_C_SetRadiusToAttenuation, CallFunc_FMax_ReturnValue) == 0x000018, "Member 'BP_Env_Audio_Pool_Base_C_SetRadiusToAttenuation::CallFunc_FMax_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Env_Audio_Pool_Base_C_SetRadiusToAttenuation, CallFunc_FMax_ReturnValue_1) == 0x000020, "Member 'BP_Env_Audio_Pool_Base_C_SetRadiusToAttenuation::CallFunc_FMax_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Env_Audio_Pool_Base_C_SetRadiusToAttenuation, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000028, "Member 'BP_Env_Audio_Pool_Base_C_SetRadiusToAttenuation::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Env_Audio_Pool_Base_C_SetRadiusToAttenuation, CallFunc_GetMaxAttenuationRadius_ReturnValue) == 0x000030, "Member 'BP_Env_Audio_Pool_Base_C_SetRadiusToAttenuation::CallFunc_GetMaxAttenuationRadius_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Env_Audio_Pool_Base_C_SetRadiusToAttenuation, CallFunc_IsValid_ReturnValue) == 0x000034, "Member 'BP_Env_Audio_Pool_Base_C_SetRadiusToAttenuation::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Env_Audio_Pool_Base_C_SetRadiusToAttenuation, CallFunc_GetMaxAttenuationRadius_ReturnValue_1) == 0x000038, "Member 'BP_Env_Audio_Pool_Base_C_SetRadiusToAttenuation::CallFunc_GetMaxAttenuationRadius_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Env_Audio_Pool_Base_C_SetRadiusToAttenuation, CallFunc_GetMaxAttenuationRadius_ReturnValue_2) == 0x00003C, "Member 'BP_Env_Audio_Pool_Base_C_SetRadiusToAttenuation::CallFunc_GetMaxAttenuationRadius_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Env_Audio_Pool_Base_C_SetRadiusToAttenuation, CallFunc_IsValid_ReturnValue_1) == 0x000040, "Member 'BP_Env_Audio_Pool_Base_C_SetRadiusToAttenuation::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Env_Audio_Pool_Base_C_SetRadiusToAttenuation, CallFunc_IsValid_ReturnValue_2) == 0x000041, "Member 'BP_Env_Audio_Pool_Base_C_SetRadiusToAttenuation::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Env_Audio_Pool_Base_C_SetRadiusToAttenuation, CallFunc_SetSphereRadius_InSphereRadius_ImplicitCast) == 0x000044, "Member 'BP_Env_Audio_Pool_Base_C_SetRadiusToAttenuation::CallFunc_SetSphereRadius_InSphereRadius_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_Env_Audio_Pool_Base_C_SetRadiusToAttenuation, K2Node_VariableSet_AkInstectMaxAtten_ImplicitCast) == 0x000048, "Member 'BP_Env_Audio_Pool_Base_C_SetRadiusToAttenuation::K2Node_VariableSet_AkInstectMaxAtten_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_Env_Audio_Pool_Base_C_SetRadiusToAttenuation, K2Node_VariableSet_AkCritterMaxAtten_ImplicitCast) == 0x000050, "Member 'BP_Env_Audio_Pool_Base_C_SetRadiusToAttenuation::K2Node_VariableSet_AkCritterMaxAtten_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_Env_Audio_Pool_Base_C_SetRadiusToAttenuation, K2Node_VariableSet_AkLoopMaxAtten_ImplicitCast) == 0x000058, "Member 'BP_Env_Audio_Pool_Base_C_SetRadiusToAttenuation::K2Node_VariableSet_AkLoopMaxAtten_ImplicitCast' has a wrong offset!");

// Function BP_Env_Audio_Pool_Base.BP_Env_Audio_Pool_Base_C.UserConstructionScript
// 0x0050 (0x0050 - 0x0000)
struct BP_Env_Audio_Pool_Base_C_UserConstructionScript final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_45F6[0x2];                                     // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_RandomInteger_ReturnValue;                // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_45F7[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FStruct_PoolAudio                      K2Node_MakeStruct_Struct_PoolAudio;                // 0x0010(0x0040)(NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Env_Audio_Pool_Base_C_UserConstructionScript) == 0x000008, "Wrong alignment on BP_Env_Audio_Pool_Base_C_UserConstructionScript");
static_assert(sizeof(BP_Env_Audio_Pool_Base_C_UserConstructionScript) == 0x000050, "Wrong size on BP_Env_Audio_Pool_Base_C_UserConstructionScript");
static_assert(offsetof(BP_Env_Audio_Pool_Base_C_UserConstructionScript, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'BP_Env_Audio_Pool_Base_C_UserConstructionScript::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Env_Audio_Pool_Base_C_UserConstructionScript, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000001, "Member 'BP_Env_Audio_Pool_Base_C_UserConstructionScript::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Env_Audio_Pool_Base_C_UserConstructionScript, CallFunc_RandomInteger_ReturnValue) == 0x000004, "Member 'BP_Env_Audio_Pool_Base_C_UserConstructionScript::CallFunc_RandomInteger_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Env_Audio_Pool_Base_C_UserConstructionScript, CallFunc_Not_PreBool_ReturnValue) == 0x000008, "Member 'BP_Env_Audio_Pool_Base_C_UserConstructionScript::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Env_Audio_Pool_Base_C_UserConstructionScript, CallFunc_BooleanAND_ReturnValue) == 0x000009, "Member 'BP_Env_Audio_Pool_Base_C_UserConstructionScript::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Env_Audio_Pool_Base_C_UserConstructionScript, CallFunc_LessEqual_IntInt_ReturnValue) == 0x00000A, "Member 'BP_Env_Audio_Pool_Base_C_UserConstructionScript::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Env_Audio_Pool_Base_C_UserConstructionScript, CallFunc_BooleanAND_ReturnValue_1) == 0x00000B, "Member 'BP_Env_Audio_Pool_Base_C_UserConstructionScript::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Env_Audio_Pool_Base_C_UserConstructionScript, K2Node_MakeStruct_Struct_PoolAudio) == 0x000010, "Member 'BP_Env_Audio_Pool_Base_C_UserConstructionScript::K2Node_MakeStruct_Struct_PoolAudio' has a wrong offset!");

}

