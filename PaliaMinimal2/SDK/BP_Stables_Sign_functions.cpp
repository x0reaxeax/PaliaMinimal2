#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Stables_Sign

#include "Basic.hpp"

#include "BP_Stables_Sign_classes.hpp"
#include "BP_Stables_Sign_parameters.hpp"


namespace SDK
{

// Function BP_Stables_Sign.BP_Stables_Sign_C.CheckExperiencePackage
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                          ExperiencePackage                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class UExperiencePackageConfig*         ExpPkg_FTUE                                            (Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class FString                           CallFunc_GetDisplayName_ReturnValue                    (ZeroConstructor, HasGetValueTypeHash)
// class FString                           CallFunc_GetDisplayName_ReturnValue_1                  (ZeroConstructor, HasGetValueTypeHash)
// bool                                    CallFunc_EqualEqual_StriStri_ReturnValue               (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Stables_Sign_C::CheckExperiencePackage(class UObject* ExperiencePackage, class UExperiencePackageConfig* ExpPkg_FTUE, const class FString& CallFunc_GetDisplayName_ReturnValue, const class FString& CallFunc_GetDisplayName_ReturnValue_1, bool CallFunc_EqualEqual_StriStri_ReturnValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Stables_Sign_C", "CheckExperiencePackage");

	Params::BP_Stables_Sign_C_CheckExperiencePackage Parms{};

	Parms.ExperiencePackage = ExperiencePackage;
	Parms.ExpPkg_FTUE = ExpPkg_FTUE;
	Parms.CallFunc_GetDisplayName_ReturnValue = std::move(CallFunc_GetDisplayName_ReturnValue);
	Parms.CallFunc_GetDisplayName_ReturnValue_1 = std::move(CallFunc_GetDisplayName_ReturnValue_1);
	Parms.CallFunc_EqualEqual_StriStri_ReturnValue = CallFunc_EqualEqual_StriStri_ReturnValue;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Stables_Sign.BP_Stables_Sign_C.CurrentExperiencePackage
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UExperiencePackageConfig*         ExpPkg                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_Stables_Sign_C::CurrentExperiencePackage(class UExperiencePackageConfig* ExpPkg)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Stables_Sign_C", "CurrentExperiencePackage");

	Params::BP_Stables_Sign_C_CurrentExperiencePackage Parms{};

	Parms.ExpPkg = ExpPkg;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Stables_Sign.BP_Stables_Sign_C.ExecuteUbergraph_BP_Stables_Sign
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class APlayerController*                CallFunc_GetPlayerController_ReturnValue               (ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class AValeriaPlayerController*         K2Node_DynamicCast_AsValeria_Player_Controller         (ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool                                    K2Node_DynamicCast_bSuccess                            (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TDelegate<void(class UExperiencePackageConfig* ExpPkg)>K2Node_CreateDelegate_OutputDelegate                   (ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class UExperiencePackageConfig*         CallFunc_GetExperiencePackage_ReturnValue              (ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class AValeriaPlayerController*         K2Node_Event_player                                    (ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// struct FServerUseEventParams            K2Node_Event_params                                    (NoDestructor)
// bool                                    CallFunc_IsValid_ReturnValue                           (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UExperiencePackageConfig*         K2Node_CustomEvent_ExpPkg                              (ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_Stables_Sign_C::ExecuteUbergraph_BP_Stables_Sign(int32 EntryPoint, class APlayerController* CallFunc_GetPlayerController_ReturnValue, class AValeriaPlayerController* K2Node_DynamicCast_AsValeria_Player_Controller, bool K2Node_DynamicCast_bSuccess, TDelegate<void(class UExperiencePackageConfig* ExpPkg)> K2Node_CreateDelegate_OutputDelegate, class UExperiencePackageConfig* CallFunc_GetExperiencePackage_ReturnValue, class AValeriaPlayerController* K2Node_Event_player, const struct FServerUseEventParams& K2Node_Event_params, bool CallFunc_IsValid_ReturnValue, class UExperiencePackageConfig* K2Node_CustomEvent_ExpPkg)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Stables_Sign_C", "ExecuteUbergraph_BP_Stables_Sign");

	Params::BP_Stables_Sign_C_ExecuteUbergraph_BP_Stables_Sign Parms{};

	Parms.EntryPoint = EntryPoint;
	Parms.CallFunc_GetPlayerController_ReturnValue = CallFunc_GetPlayerController_ReturnValue;
	Parms.K2Node_DynamicCast_AsValeria_Player_Controller = K2Node_DynamicCast_AsValeria_Player_Controller;
	Parms.K2Node_DynamicCast_bSuccess = K2Node_DynamicCast_bSuccess;
	Parms.K2Node_CreateDelegate_OutputDelegate = K2Node_CreateDelegate_OutputDelegate;
	Parms.CallFunc_GetExperiencePackage_ReturnValue = CallFunc_GetExperiencePackage_ReturnValue;
	Parms.K2Node_Event_player = K2Node_Event_player;
	Parms.K2Node_Event_params = std::move(K2Node_Event_params);
	Parms.CallFunc_IsValid_ReturnValue = CallFunc_IsValid_ReturnValue;
	Parms.K2Node_CustomEvent_ExpPkg = K2Node_CustomEvent_ExpPkg;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Stables_Sign.BP_Stables_Sign_C.FindCostForDestination
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class UTeleportTravelConfigAsset*       DestinationConfig                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// int32                                   GoldCost                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Temp_int_Array_Index_Variable                          (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Temp_int_Loop_Counter_Variable                         (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   CallFunc_Add_IntInt_ReturnValue                        (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   CallFunc_Array_Length_ReturnValue                      (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FTeleportDestinationConfig       CallFunc_Array_Get_Item                                (NoDestructor)
// bool                                    CallFunc_Less_IntInt_ReturnValue                       (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    CallFunc_EqualEqual_ObjectObject_ReturnValue           (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Stables_Sign_C::FindCostForDestination(class UTeleportTravelConfigAsset* DestinationConfig, int32* GoldCost, int32 Temp_int_Array_Index_Variable, int32 Temp_int_Loop_Counter_Variable, int32 CallFunc_Add_IntInt_ReturnValue, int32 CallFunc_Array_Length_ReturnValue, const struct FTeleportDestinationConfig& CallFunc_Array_Get_Item, bool CallFunc_Less_IntInt_ReturnValue, bool CallFunc_EqualEqual_ObjectObject_ReturnValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Stables_Sign_C", "FindCostForDestination");

	Params::BP_Stables_Sign_C_FindCostForDestination Parms{};

	Parms.DestinationConfig = DestinationConfig;
	Parms.Temp_int_Array_Index_Variable = Temp_int_Array_Index_Variable;
	Parms.Temp_int_Loop_Counter_Variable = Temp_int_Loop_Counter_Variable;
	Parms.CallFunc_Add_IntInt_ReturnValue = CallFunc_Add_IntInt_ReturnValue;
	Parms.CallFunc_Array_Length_ReturnValue = CallFunc_Array_Length_ReturnValue;
	Parms.CallFunc_Array_Get_Item = std::move(CallFunc_Array_Get_Item);
	Parms.CallFunc_Less_IntInt_ReturnValue = CallFunc_Less_IntInt_ReturnValue;
	Parms.CallFunc_EqualEqual_ObjectObject_ReturnValue = CallFunc_EqualEqual_ObjectObject_ReturnValue;

	UObject::ProcessEvent(Func, &Parms);

	if (GoldCost != nullptr)
		*GoldCost = Parms.GoldCost;
}


// Function BP_Stables_Sign.BP_Stables_Sign_C.OnClientInteract
// (Event, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UInteractableComponent*           Param_Interactable                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class AValeriaPlayerController*         Player                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// struct FInteractEventParams             Params_0                                               (BlueprintVisible, BlueprintReadOnly, Parm)
// struct FUseEventResult                  ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor)
// bool                                    CallFunc_IsValid_ReturnValue                           (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    CallFunc_EqualEqual_ByteByte_ReturnValue               (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    CallFunc_EqualEqual_ByteByte_ReturnValue_1             (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FUseEventResult                  CallFunc_UseEventResult_HandledAndSentToServer_ReturnValue(NoDestructor)
// bool                                    CallFunc_BooleanAND_ReturnValue                        (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    CallFunc_BooleanAND_ReturnValue_1                      (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UVAL_Subsystem_GameplayUIBridge*  CallFunc_GetLocalPlayerSubSystemFromPlayerController_ReturnValue(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// struct FUseEventResult                  CallFunc_UseEventResult_Unhandled_ReturnValue          (NoDestructor)
// TScriptInterface<class IVAL_GameplayUIBridgeInterface>CallFunc_GetUIInterface_ReturnValue                    (ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)

struct FUseEventResult ABP_Stables_Sign_C::OnClientInteract(class UInteractableComponent* Param_Interactable, class AValeriaPlayerController* Player, const struct FInteractEventParams& Params_0, bool CallFunc_IsValid_ReturnValue, bool CallFunc_EqualEqual_ByteByte_ReturnValue, bool CallFunc_EqualEqual_ByteByte_ReturnValue_1, const struct FUseEventResult& CallFunc_UseEventResult_HandledAndSentToServer_ReturnValue, bool CallFunc_BooleanAND_ReturnValue, bool CallFunc_BooleanAND_ReturnValue_1, class UVAL_Subsystem_GameplayUIBridge* CallFunc_GetLocalPlayerSubSystemFromPlayerController_ReturnValue, const struct FUseEventResult& CallFunc_UseEventResult_Unhandled_ReturnValue, TScriptInterface<class IVAL_GameplayUIBridgeInterface> CallFunc_GetUIInterface_ReturnValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Stables_Sign_C", "OnClientInteract");

	Params::BP_Stables_Sign_C_OnClientInteract Parms{};

	Parms.Param_Interactable = Param_Interactable;
	Parms.Player = Player;
	Parms.Params_0 = std::move(Params_0);
	Parms.CallFunc_IsValid_ReturnValue = CallFunc_IsValid_ReturnValue;
	Parms.CallFunc_EqualEqual_ByteByte_ReturnValue = CallFunc_EqualEqual_ByteByte_ReturnValue;
	Parms.CallFunc_EqualEqual_ByteByte_ReturnValue_1 = CallFunc_EqualEqual_ByteByte_ReturnValue_1;
	Parms.CallFunc_UseEventResult_HandledAndSentToServer_ReturnValue = std::move(CallFunc_UseEventResult_HandledAndSentToServer_ReturnValue);
	Parms.CallFunc_BooleanAND_ReturnValue = CallFunc_BooleanAND_ReturnValue;
	Parms.CallFunc_BooleanAND_ReturnValue_1 = CallFunc_BooleanAND_ReturnValue_1;
	Parms.CallFunc_GetLocalPlayerSubSystemFromPlayerController_ReturnValue = CallFunc_GetLocalPlayerSubSystemFromPlayerController_ReturnValue;
	Parms.CallFunc_UseEventResult_Unhandled_ReturnValue = std::move(CallFunc_UseEventResult_Unhandled_ReturnValue);
	Parms.CallFunc_GetUIInterface_ReturnValue = CallFunc_GetUIInterface_ReturnValue;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_Stables_Sign.BP_Stables_Sign_C.OnClientUsedEquippedOnMe
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AValeriaPlayerController*         Player                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// struct FUseEventParams                  Params_0                                               (BlueprintVisible, BlueprintReadOnly, Parm)
// struct FUseEventResult                  ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor)

struct FUseEventResult ABP_Stables_Sign_C::OnClientUsedEquippedOnMe(class AValeriaPlayerController* Player, const struct FUseEventParams& Params_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Stables_Sign_C", "OnClientUsedEquippedOnMe");

	Params::BP_Stables_Sign_C_OnClientUsedEquippedOnMe Parms{};

	Parms.Player = Player;
	Parms.Params_0 = std::move(Params_0);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_Stables_Sign.BP_Stables_Sign_C.OnServerInteract
// (BlueprintAuthorityOnly, Event, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UInteractableComponent*           Param_Interactable                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class AValeriaCharacter*                Character                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// struct FInteractEventParams             EventParams                                            (BlueprintVisible, BlueprintReadOnly, Parm)
// struct FServerUseEventResult            ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor)
// struct FServerUseEventResult            CallFunc_ServerUseEventResult_Unhandled_ReturnValue    (NoDestructor)
// bool                                    CallFunc_EqualEqual_ByteByte_ReturnValue               (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

struct FServerUseEventResult ABP_Stables_Sign_C::OnServerInteract(class UInteractableComponent* Param_Interactable, class AValeriaCharacter* Character, const struct FInteractEventParams& EventParams, const struct FServerUseEventResult& CallFunc_ServerUseEventResult_Unhandled_ReturnValue, bool CallFunc_EqualEqual_ByteByte_ReturnValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Stables_Sign_C", "OnServerInteract");

	Params::BP_Stables_Sign_C_OnServerInteract Parms{};

	Parms.Param_Interactable = Param_Interactable;
	Parms.Character = Character;
	Parms.EventParams = std::move(EventParams);
	Parms.CallFunc_ServerUseEventResult_Unhandled_ReturnValue = std::move(CallFunc_ServerUseEventResult_Unhandled_ReturnValue);
	Parms.CallFunc_EqualEqual_ByteByte_ReturnValue = CallFunc_EqualEqual_ByteByte_ReturnValue;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_Stables_Sign.BP_Stables_Sign_C.OnServerUsedEquippedOnMe
// (BlueprintAuthorityOnly, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AValeriaPlayerController*         Player                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// struct FServerUseEventParams            Params_0                                               (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)

void ABP_Stables_Sign_C::OnServerUsedEquippedOnMe(class AValeriaPlayerController* Player, const struct FServerUseEventParams& Params_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Stables_Sign_C", "OnServerUsedEquippedOnMe");

	Params::BP_Stables_Sign_C_OnServerUsedEquippedOnMe Parms{};

	Parms.Player = Player;
	Parms.Params_0 = std::move(Params_0);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Stables_Sign.BP_Stables_Sign_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void ABP_Stables_Sign_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Stables_Sign_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Stables_Sign.BP_Stables_Sign_C.GetEventIndexForInputAction
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// class AValeriaCharacter*                Character                                              (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// TSoftObjectPtr<class UInputAction>      InputAction                                            (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, UObjectWrapper, HasGetValueTypeHash)
// EInteractEventIndex                     OutEventIndex                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool ABP_Stables_Sign_C::GetEventIndexForInputAction(class AValeriaCharacter* Character, TSoftObjectPtr<class UInputAction>& InputAction, EInteractEventIndex* OutEventIndex) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Stables_Sign_C", "GetEventIndexForInputAction");

	Params::BP_Stables_Sign_C_GetEventIndexForInputAction Parms{};

	Parms.Character = Character;
	Parms.InputAction = InputAction;

	UObject::ProcessEvent(Func, &Parms);

	if (OutEventIndex != nullptr)
		*OutEventIndex = Parms.OutEventIndex;

	return Parms.ReturnValue;
}


// Function BP_Stables_Sign.BP_Stables_Sign_C.GetInputActionForEventIndex
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// class AValeriaCharacter*                Character                                              (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// EInteractEventIndex                     EventIndex                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TSoftObjectPtr<class UInputAction>      ReturnValue                                            (Parm, OutParm, ReturnParm, UObjectWrapper, HasGetValueTypeHash)

TSoftObjectPtr<class UInputAction> ABP_Stables_Sign_C::GetInputActionForEventIndex(class AValeriaCharacter* Character, EInteractEventIndex EventIndex) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Stables_Sign_C", "GetInputActionForEventIndex");

	Params::BP_Stables_Sign_C_GetInputActionForEventIndex Parms{};

	Parms.Character = Character;
	Parms.EventIndex = EventIndex;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_Stables_Sign.BP_Stables_Sign_C.GetText
// (Event, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// class AValeriaCharacter*                Character                                              (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// EInteractEventIndex                     EventIndex                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FGetTextParams                   Params_0                                               (Parm, OutParm)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    CallFunc_EqualEqual_ByteByte_ReturnValue               (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FGetTextParams                   K2Node_MakeStruct_GetTextParams                        ()

bool ABP_Stables_Sign_C::GetText(class AValeriaCharacter* Character, EInteractEventIndex EventIndex, struct FGetTextParams* Params_0, bool CallFunc_EqualEqual_ByteByte_ReturnValue, const struct FGetTextParams& K2Node_MakeStruct_GetTextParams) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Stables_Sign_C", "GetText");

	Params::BP_Stables_Sign_C_GetText Parms{};

	Parms.Character = Character;
	Parms.EventIndex = EventIndex;
	Parms.CallFunc_EqualEqual_ByteByte_ReturnValue = CallFunc_EqualEqual_ByteByte_ReturnValue;
	Parms.K2Node_MakeStruct_GetTextParams = std::move(K2Node_MakeStruct_GetTextParams);

	UObject::ProcessEvent(Func, &Parms);

	if (Params_0 != nullptr)
		*Params_0 = std::move(Parms.Params_0);

	return Parms.ReturnValue;
}


// Function BP_Stables_Sign.BP_Stables_Sign_C.GetUseableIMC
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// class AValeriaCharacter*                Character                                              (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// EInteractEventIndex                     InteractIndex                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FInputMappingPriorityData        OutMappingData                                         (Parm, OutParm)
// struct FModifyContextOptions            OutOptions                                             (Parm, OutParm, NoDestructor)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool ABP_Stables_Sign_C::GetUseableIMC(class AValeriaCharacter* Character, EInteractEventIndex InteractIndex, struct FInputMappingPriorityData* OutMappingData, struct FModifyContextOptions* OutOptions) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Stables_Sign_C", "GetUseableIMC");

	Params::BP_Stables_Sign_C_GetUseableIMC Parms{};

	Parms.Character = Character;
	Parms.InteractIndex = InteractIndex;

	UObject::ProcessEvent(Func, &Parms);

	if (OutMappingData != nullptr)
		*OutMappingData = std::move(Parms.OutMappingData);

	if (OutOptions != nullptr)
		*OutOptions = std::move(Parms.OutOptions);

	return Parms.ReturnValue;
}


// Function BP_Stables_Sign.BP_Stables_Sign_C.InteractPriority
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// class AValeriaCharacter*                Character                                              (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

int32 ABP_Stables_Sign_C::InteractPriority(class AValeriaCharacter* Character) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Stables_Sign_C", "InteractPriority");

	Params::BP_Stables_Sign_C_InteractPriority Parms{};

	Parms.Character = Character;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_Stables_Sign.BP_Stables_Sign_C.IsInteractable
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// class AValeriaCharacter*                Character                                              (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// struct FInteractEventParams             EventParams                                            (BlueprintVisible, BlueprintReadOnly, Parm)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool ABP_Stables_Sign_C::IsInteractable(class AValeriaCharacter* Character, const struct FInteractEventParams& EventParams) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Stables_Sign_C", "IsInteractable");

	Params::BP_Stables_Sign_C_IsInteractable Parms{};

	Parms.Character = Character;
	Parms.EventParams = std::move(EventParams);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}

}

