#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: S6Persist

#include "Basic.hpp"

#include "S6Persist_classes.hpp"
#include "S6Persist_parameters.hpp"


namespace SDK
{

// Function S6Persist.S6PersistSubsystem.HandlePendingOpSetComplete
// (Final, Native, Private)
// Parameters:
// bool                                    bSuccess                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void US6PersistSubsystem::HandlePendingOpSetComplete(bool bSuccess)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("S6PersistSubsystem", "HandlePendingOpSetComplete");

	Params::S6PersistSubsystem_HandlePendingOpSetComplete Parms{};

	Parms.bSuccess = bSuccess;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function S6Persist.S6PersistSubsystem.ProcessPersistQueue
// (Final, Native, Private)

void US6PersistSubsystem::ProcessPersistQueue()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("S6PersistSubsystem", "ProcessPersistQueue");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}

}

