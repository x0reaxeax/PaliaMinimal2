#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ToolAkComponent

#include "Basic.hpp"

#include "ToolAkComponent_classes.hpp"
#include "ToolAkComponent_parameters.hpp"


namespace SDK
{

// Function ToolAkComponent.ToolAkComponent_C.PlayToolAudioAttached
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UAkAudioEvent*                    AkEvent                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// int32                                   CallFunc_AkEventComponent_ReturnValue                  (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UToolAkComponent_C::PlayToolAudioAttached(class UAkAudioEvent* AkEvent, int32 CallFunc_AkEventComponent_ReturnValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ToolAkComponent_C", "PlayToolAudioAttached");

	Params::ToolAkComponent_C_PlayToolAudioAttached Parms{};

	Parms.AkEvent = AkEvent;
	Parms.CallFunc_AkEventComponent_ReturnValue = CallFunc_AkEventComponent_ReturnValue;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ToolAkComponent.ToolAkComponent_C.StopToolAudioAttached
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   TransitionDurationMs                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// EAkCurveInterpolation                   FadeCurve                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UToolAkComponent_C::StopToolAudioAttached(int32 TransitionDurationMs, EAkCurveInterpolation FadeCurve)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ToolAkComponent_C", "StopToolAudioAttached");

	Params::ToolAkComponent_C_StopToolAudioAttached Parms{};

	Parms.TransitionDurationMs = TransitionDurationMs;
	Parms.FadeCurve = FadeCurve;

	UObject::ProcessEvent(Func, &Parms);
}

}

