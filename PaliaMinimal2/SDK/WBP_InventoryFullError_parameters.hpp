#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_InventoryFullError

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function WBP_InventoryFullError.WBP_InventoryFullError_C.ExecuteUbergraph_WBP_InventoryFullError
// 0x0038 (0x0038 - 0x0000)
struct WBP_InventoryFullError_C_ExecuteUbergraph_WBP_InventoryFullError final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_50FE[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UVALUI_NotificationQueue*               K2Node_Event_NotificationQueue_1;                  // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGuid                                  K2Node_Event_NotificationId_1;                     // 0x0010(0x0010)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UVALUI_NotificationQueue*               K2Node_Event_NotificationQueue;                    // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGuid                                  K2Node_Event_NotificationId;                       // 0x0028(0x0010)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_InventoryFullError_C_ExecuteUbergraph_WBP_InventoryFullError) == 0x000008, "Wrong alignment on WBP_InventoryFullError_C_ExecuteUbergraph_WBP_InventoryFullError");
static_assert(sizeof(WBP_InventoryFullError_C_ExecuteUbergraph_WBP_InventoryFullError) == 0x000038, "Wrong size on WBP_InventoryFullError_C_ExecuteUbergraph_WBP_InventoryFullError");
static_assert(offsetof(WBP_InventoryFullError_C_ExecuteUbergraph_WBP_InventoryFullError, EntryPoint) == 0x000000, "Member 'WBP_InventoryFullError_C_ExecuteUbergraph_WBP_InventoryFullError::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_InventoryFullError_C_ExecuteUbergraph_WBP_InventoryFullError, K2Node_Event_NotificationQueue_1) == 0x000008, "Member 'WBP_InventoryFullError_C_ExecuteUbergraph_WBP_InventoryFullError::K2Node_Event_NotificationQueue_1' has a wrong offset!");
static_assert(offsetof(WBP_InventoryFullError_C_ExecuteUbergraph_WBP_InventoryFullError, K2Node_Event_NotificationId_1) == 0x000010, "Member 'WBP_InventoryFullError_C_ExecuteUbergraph_WBP_InventoryFullError::K2Node_Event_NotificationId_1' has a wrong offset!");
static_assert(offsetof(WBP_InventoryFullError_C_ExecuteUbergraph_WBP_InventoryFullError, K2Node_Event_NotificationQueue) == 0x000020, "Member 'WBP_InventoryFullError_C_ExecuteUbergraph_WBP_InventoryFullError::K2Node_Event_NotificationQueue' has a wrong offset!");
static_assert(offsetof(WBP_InventoryFullError_C_ExecuteUbergraph_WBP_InventoryFullError, K2Node_Event_NotificationId) == 0x000028, "Member 'WBP_InventoryFullError_C_ExecuteUbergraph_WBP_InventoryFullError::K2Node_Event_NotificationId' has a wrong offset!");

// Function WBP_InventoryFullError.WBP_InventoryFullError_C.HandleNotificationDismissed
// 0x0018 (0x0018 - 0x0000)
struct WBP_InventoryFullError_C_HandleNotificationDismissed final
{
public:
	class UVALUI_NotificationQueue*               NotificationQueue;                                 // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGuid                                  NotificationId;                                    // 0x0008(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_InventoryFullError_C_HandleNotificationDismissed) == 0x000008, "Wrong alignment on WBP_InventoryFullError_C_HandleNotificationDismissed");
static_assert(sizeof(WBP_InventoryFullError_C_HandleNotificationDismissed) == 0x000018, "Wrong size on WBP_InventoryFullError_C_HandleNotificationDismissed");
static_assert(offsetof(WBP_InventoryFullError_C_HandleNotificationDismissed, NotificationQueue) == 0x000000, "Member 'WBP_InventoryFullError_C_HandleNotificationDismissed::NotificationQueue' has a wrong offset!");
static_assert(offsetof(WBP_InventoryFullError_C_HandleNotificationDismissed, NotificationId) == 0x000008, "Member 'WBP_InventoryFullError_C_HandleNotificationDismissed::NotificationId' has a wrong offset!");

// Function WBP_InventoryFullError.WBP_InventoryFullError_C.HandleNotificationShown
// 0x0018 (0x0018 - 0x0000)
struct WBP_InventoryFullError_C_HandleNotificationShown final
{
public:
	class UVALUI_NotificationQueue*               NotificationQueue;                                 // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGuid                                  NotificationId;                                    // 0x0008(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_InventoryFullError_C_HandleNotificationShown) == 0x000008, "Wrong alignment on WBP_InventoryFullError_C_HandleNotificationShown");
static_assert(sizeof(WBP_InventoryFullError_C_HandleNotificationShown) == 0x000018, "Wrong size on WBP_InventoryFullError_C_HandleNotificationShown");
static_assert(offsetof(WBP_InventoryFullError_C_HandleNotificationShown, NotificationQueue) == 0x000000, "Member 'WBP_InventoryFullError_C_HandleNotificationShown::NotificationQueue' has a wrong offset!");
static_assert(offsetof(WBP_InventoryFullError_C_HandleNotificationShown, NotificationId) == 0x000008, "Member 'WBP_InventoryFullError_C_HandleNotificationShown::NotificationId' has a wrong offset!");

// Function WBP_InventoryFullError.WBP_InventoryFullError_C.MatchesNotification
// 0x0048 (0x0048 - 0x0000)
struct WBP_InventoryFullError_C_MatchesNotification final
{
public:
	class FText                                   NotificationText;                                  // 0x0000(0x0018)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	TSoftObjectPtr<class UTexture2D>              NotificationIcon;                                  // 0x0018(0x0028)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, UObjectWrapper, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0040(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_InventoryFullError_C_MatchesNotification) == 0x000008, "Wrong alignment on WBP_InventoryFullError_C_MatchesNotification");
static_assert(sizeof(WBP_InventoryFullError_C_MatchesNotification) == 0x000048, "Wrong size on WBP_InventoryFullError_C_MatchesNotification");
static_assert(offsetof(WBP_InventoryFullError_C_MatchesNotification, NotificationText) == 0x000000, "Member 'WBP_InventoryFullError_C_MatchesNotification::NotificationText' has a wrong offset!");
static_assert(offsetof(WBP_InventoryFullError_C_MatchesNotification, NotificationIcon) == 0x000018, "Member 'WBP_InventoryFullError_C_MatchesNotification::NotificationIcon' has a wrong offset!");
static_assert(offsetof(WBP_InventoryFullError_C_MatchesNotification, ReturnValue) == 0x000040, "Member 'WBP_InventoryFullError_C_MatchesNotification::ReturnValue' has a wrong offset!");

// Function WBP_InventoryFullError.WBP_InventoryFullError_C.UpdateText
// 0x0018 (0x0018 - 0x0000)
struct WBP_InventoryFullError_C_UpdateText final
{
public:
	class FText                                   NewText;                                           // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(WBP_InventoryFullError_C_UpdateText) == 0x000008, "Wrong alignment on WBP_InventoryFullError_C_UpdateText");
static_assert(sizeof(WBP_InventoryFullError_C_UpdateText) == 0x000018, "Wrong size on WBP_InventoryFullError_C_UpdateText");
static_assert(offsetof(WBP_InventoryFullError_C_UpdateText, NewText) == 0x000000, "Member 'WBP_InventoryFullError_C_UpdateText::NewText' has a wrong offset!");

}

