#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_EmoteEntry_CM

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "UMG_structs.hpp"
#include "UMG_classes.hpp"
#include "Palia_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_EmoteEntry_CM.WBP_EmoteEntry_CM_C
// 0x0088 (0x0348 - 0x02C0)
class UWBP_EmoteEntry_CM_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02C0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UBorder*                                Border;                                            // 0x02C8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 EmoteImage;                                        // 0x02D0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_Tile_Default;                                // 0x02D8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_Tile_Hover;                                  // 0x02E0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_Tile_Select;                                 // 0x02E8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWidgetSwitcher*                        Switcher_Tile;                                     // 0x02F0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_EmoteItemObject_CM_C*               Emote_Item_Oblect;                                 // 0x02F8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UWBP_EmoteDrag_C*                       DraggedWidget;                                     // 0x0300(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Emote_Image_Icon;                                  // 0x0308(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FGuid                                  Emote_Id;                                          // 0x0310(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	FMulticastInlineDelegateProperty_             OnEmoteEntryFocused;                               // 0x0320(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	bool                                          IsSelected;                                        // 0x0330(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_59B6[0x7];                                     // 0x0331(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	FMulticastInlineDelegateProperty_             OnEmoteEntrySelected;                              // 0x0338(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)

public:
	void BP_OnEntryReleased();
	void BP_OnItemExpansionChanged(bool bIsExpanded);
	void BP_OnItemSelectionChanged(bool bIsSelected);
	void ClearSeleceted();
	void EmoteDropped(int32 CallFunc_AkEventGlobal_ReturnValue);
	void ExecuteUbergraph_WBP_EmoteEntry_CM(int32 EntryPoint, int32 CallFunc_AkEventGlobal_ReturnValue, bool K2Node_Event_bIsExpanded, bool K2Node_Event_bIsSelected, class UObject* K2Node_Event_ListItemObject, class UBP_EmoteItemObject_CM_C* K2Node_DynamicCast_AsBP_Emote_Item_Object_CM, bool K2Node_DynamicCast_bSuccess, class UObject* K2Node_CustomEvent_Loaded, bool Temp_bool_Variable, class UObject* CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue, class UEmoteDataAsset* K2Node_DynamicCast_AsEmote_Data_Asset, bool K2Node_DynamicCast_bSuccess_1, TDelegate<void(class UObject* Loaded)> K2Node_CreateDelegate_OutputDelegate, bool CallFunc_IsValid_ReturnValue, class UObject* Temp_object_Variable, bool CallFunc_IsDragDropping_ReturnValue, class UEmoteDataAsset* K2Node_DynamicCast_AsEmote_Data_Asset_1, bool K2Node_DynamicCast_bSuccess_2, struct FPointerEvent& K2Node_Event_PointerEvent, class UDragDropOperation* K2Node_Event_Operation, const struct FGeometry& K2Node_Event_MyGeometry, struct FPointerEvent& K2Node_Event_MouseEvent_1, struct FPointerEvent& K2Node_Event_MouseEvent, class UWidget* K2Node_Select_Default);
	void OnDragCancelled(struct FPointerEvent& PointerEvent, class UDragDropOperation* Operation);
	void OnDragDetected(const struct FGeometry& MyGeometry, struct FPointerEvent& PointerEvent, class UDragDropOperation** Operation, class UBP_EmoteDrag_C* CallFunc_CreateDragDropOperation_ReturnValue, class UWBP_EmoteDrag_C* CallFunc_Create_ReturnValue, TSoftObjectPtr<class UTexture2D> CallFunc_Conv_ObjectToSoftObjectReference_ReturnValue);
	bool OnDrop(const struct FGeometry& MyGeometry, const struct FPointerEvent& PointerEvent, class UDragDropOperation* Operation, class UBP_EmoteDrag_C* K2Node_DynamicCast_AsBP_Emote_Drag, bool K2Node_DynamicCast_bSuccess, class UWBP_EmoteWheelChoice_CM_C* K2Node_DynamicCast_AsWBP_Emote_Wheel_Choice_CM, bool K2Node_DynamicCast_bSuccess_1);
	void OnEmoteEntryFocused__DelegateSignature(class UWBP_EmoteEntry_CM_C* Emote_Entry);
	void OnEmoteEntrySelected__DelegateSignature(class UWBP_EmoteEntry_CM_C* Emote_Entry);
	struct FEventReply OnFocusReceived(const struct FGeometry& MyGeometry, const struct FFocusEvent& InFocusEvent, const struct FEventReply& CallFunc_Handled_ReturnValue);
	void OnListItemObjectSet(class UObject* ListItemObject);
	void OnLoaded_A1BAA05F46A2EA0DF2DA37995C891D5C(class UObject* Loaded);
	struct FEventReply OnMouseButtonDown(const struct FGeometry& MyGeometry, struct FPointerEvent& MouseEvent, const struct FEventReply& CallFunc_DetectDragIfPressed_ReturnValue);
	void OnMouseEnter(const struct FGeometry& MyGeometry, struct FPointerEvent& MouseEvent);
	void OnMouseLeave(struct FPointerEvent& MouseEvent);
	void RefreshBorder(ESlateVisibility Temp_byte_Variable, EValeriaFuncResult CallFunc_GetValeriaCharacter_OutResult, class AValeriaCharacter* CallFunc_GetValeriaCharacter_ReturnValue, class UValeriaEmoteComponent* CallFunc_GetEmoteComponent_ReturnValue, bool K2Node_SwitchEnum_CmpSuccess, bool CallFunc_IsValid_ReturnValue, ESlateVisibility Temp_byte_Variable_1, bool Temp_bool_Variable, bool CallFunc_IsEmoteEquippedById_ReturnValue, ESlateVisibility K2Node_Select_Default);
	void SelectEntryByGamepad(int32 CallFunc_AkEventGlobal_ReturnValue);
	void SetEmoteItemToWheelChoice(class UWBP_EmoteWheelChoice_CM_C* Wheel_Choice, bool CallFunc_IsValid_ReturnValue);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_EmoteEntry_CM_C">();
	}
	static class UWBP_EmoteEntry_CM_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_EmoteEntry_CM_C>();
	}
};
static_assert(alignof(UWBP_EmoteEntry_CM_C) == 0x000008, "Wrong alignment on UWBP_EmoteEntry_CM_C");
static_assert(sizeof(UWBP_EmoteEntry_CM_C) == 0x000348, "Wrong size on UWBP_EmoteEntry_CM_C");
static_assert(offsetof(UWBP_EmoteEntry_CM_C, UberGraphFrame) == 0x0002C0, "Member 'UWBP_EmoteEntry_CM_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWBP_EmoteEntry_CM_C, Border) == 0x0002C8, "Member 'UWBP_EmoteEntry_CM_C::Border' has a wrong offset!");
static_assert(offsetof(UWBP_EmoteEntry_CM_C, EmoteImage) == 0x0002D0, "Member 'UWBP_EmoteEntry_CM_C::EmoteImage' has a wrong offset!");
static_assert(offsetof(UWBP_EmoteEntry_CM_C, Image_Tile_Default) == 0x0002D8, "Member 'UWBP_EmoteEntry_CM_C::Image_Tile_Default' has a wrong offset!");
static_assert(offsetof(UWBP_EmoteEntry_CM_C, Image_Tile_Hover) == 0x0002E0, "Member 'UWBP_EmoteEntry_CM_C::Image_Tile_Hover' has a wrong offset!");
static_assert(offsetof(UWBP_EmoteEntry_CM_C, Image_Tile_Select) == 0x0002E8, "Member 'UWBP_EmoteEntry_CM_C::Image_Tile_Select' has a wrong offset!");
static_assert(offsetof(UWBP_EmoteEntry_CM_C, Switcher_Tile) == 0x0002F0, "Member 'UWBP_EmoteEntry_CM_C::Switcher_Tile' has a wrong offset!");
static_assert(offsetof(UWBP_EmoteEntry_CM_C, Emote_Item_Oblect) == 0x0002F8, "Member 'UWBP_EmoteEntry_CM_C::Emote_Item_Oblect' has a wrong offset!");
static_assert(offsetof(UWBP_EmoteEntry_CM_C, DraggedWidget) == 0x000300, "Member 'UWBP_EmoteEntry_CM_C::DraggedWidget' has a wrong offset!");
static_assert(offsetof(UWBP_EmoteEntry_CM_C, Emote_Image_Icon) == 0x000308, "Member 'UWBP_EmoteEntry_CM_C::Emote_Image_Icon' has a wrong offset!");
static_assert(offsetof(UWBP_EmoteEntry_CM_C, Emote_Id) == 0x000310, "Member 'UWBP_EmoteEntry_CM_C::Emote_Id' has a wrong offset!");
static_assert(offsetof(UWBP_EmoteEntry_CM_C, OnEmoteEntryFocused) == 0x000320, "Member 'UWBP_EmoteEntry_CM_C::OnEmoteEntryFocused' has a wrong offset!");
static_assert(offsetof(UWBP_EmoteEntry_CM_C, IsSelected) == 0x000330, "Member 'UWBP_EmoteEntry_CM_C::IsSelected' has a wrong offset!");
static_assert(offsetof(UWBP_EmoteEntry_CM_C, OnEmoteEntrySelected) == 0x000338, "Member 'UWBP_EmoteEntry_CM_C::OnEmoteEntrySelected' has a wrong offset!");

}

