#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_MinigameQTE_Base

#include "Basic.hpp"

#include "WBP_MinigameQTE_Base_classes.hpp"
#include "WBP_MinigameQTE_Base_parameters.hpp"


namespace SDK
{

// Function WBP_MinigameQTE_Base.WBP_MinigameQTE_Base_C.BindMinigameInputEvents
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// TDelegate<void(class UMinigameComponentBase* Comp, EMinigameState PrevState, EMinigameState NewState)>K2Node_CreateDelegate_OutputDelegate                   (ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// TDelegate<void(class UMinigameComponentMasterQTE* Comp)>K2Node_CreateDelegate_OutputDelegate_1                 (ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// TDelegate<void(class UMinigameComponentMasterQTE* Comp)>K2Node_CreateDelegate_OutputDelegate_2                 (ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// TDelegate<void(class UMinigameComponentMasterQTE* Comp)>K2Node_CreateDelegate_OutputDelegate_3                 (ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool                                    CallFunc_IsValid_ReturnValue                           (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_MinigameQTE_Base_C::BindMinigameInputEvents(TDelegate<void(class UMinigameComponentBase* Comp, EMinigameState PrevState, EMinigameState NewState)> K2Node_CreateDelegate_OutputDelegate, TDelegate<void(class UMinigameComponentMasterQTE* Comp)> K2Node_CreateDelegate_OutputDelegate_1, TDelegate<void(class UMinigameComponentMasterQTE* Comp)> K2Node_CreateDelegate_OutputDelegate_2, TDelegate<void(class UMinigameComponentMasterQTE* Comp)> K2Node_CreateDelegate_OutputDelegate_3, bool CallFunc_IsValid_ReturnValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_MinigameQTE_Base_C", "BindMinigameInputEvents");

	Params::WBP_MinigameQTE_Base_C_BindMinigameInputEvents Parms{};

	Parms.K2Node_CreateDelegate_OutputDelegate = K2Node_CreateDelegate_OutputDelegate;
	Parms.K2Node_CreateDelegate_OutputDelegate_1 = K2Node_CreateDelegate_OutputDelegate_1;
	Parms.K2Node_CreateDelegate_OutputDelegate_2 = K2Node_CreateDelegate_OutputDelegate_2;
	Parms.K2Node_CreateDelegate_OutputDelegate_3 = K2Node_CreateDelegate_OutputDelegate_3;
	Parms.CallFunc_IsValid_ReturnValue = CallFunc_IsValid_ReturnValue;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_MinigameQTE_Base.WBP_MinigameQTE_Base_C.DisassociateFromMinigame
// (Public, BlueprintCallable, BlueprintEvent)

void UWBP_MinigameQTE_Base_C::DisassociateFromMinigame()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_MinigameQTE_Base_C", "DisassociateFromMinigame");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_MinigameQTE_Base.WBP_MinigameQTE_Base_C.ExecuteUbergraph_WBP_MinigameQTE_Base
// (Final, UbergraphFunction)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_MinigameQTE_Base_C::ExecuteUbergraph_WBP_MinigameQTE_Base(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_MinigameQTE_Base_C", "ExecuteUbergraph_WBP_MinigameQTE_Base");

	Params::WBP_MinigameQTE_Base_C_ExecuteUbergraph_WBP_MinigameQTE_Base Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_MinigameQTE_Base.WBP_MinigameQTE_Base_C.ExpectedInputMissed
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UMinigameComponentMasterQTE*      Comp                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void UWBP_MinigameQTE_Base_C::ExpectedInputMissed(class UMinigameComponentMasterQTE* Comp)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_MinigameQTE_Base_C", "ExpectedInputMissed");

	Params::WBP_MinigameQTE_Base_C_ExpectedInputMissed Parms{};

	Parms.Comp = Comp;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_MinigameQTE_Base.WBP_MinigameQTE_Base_C.FTUE_OnClosing
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UWidget*                          Widget                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void UWBP_MinigameQTE_Base_C::FTUE_OnClosing(class UWidget* Widget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_MinigameQTE_Base_C", "FTUE_OnClosing");

	Params::WBP_MinigameQTE_Base_C_FTUE_OnClosing Parms{};

	Parms.Widget = Widget;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_MinigameQTE_Base.WBP_MinigameQTE_Base_C.HandleOpenTutorialModal
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UUserWidget*                      ModalWidget                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// TArray<class UUserWidget*>              TutorialWidgets                                        (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
// TDelegate<void(class UWidget* Widget)>  K2Node_CreateDelegate_OutputDelegate                   (ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class APlayerController*                CallFunc_GetOwningPlayer_ReturnValue                   (ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class US6UI_ModalWidgetBase*            K2Node_DynamicCast_AsS6UI_Modal_Widget_Base            (ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// bool                                    K2Node_DynamicCast_bSuccess                            (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class US6UI_UIManagerWidgetBase*        CallFunc_GetUIManagerWidget_ReturnValue                (ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// TScriptInterface<class IBP_ModalInterface_Tutorial_C>K2Node_DynamicCast_AsBP_Modal_Interface_Tutorial       (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    K2Node_DynamicCast_bSuccess_1                          (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          CallFunc_LoadAsset_Blocking_ReturnValue                (ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class UVAL_TutorialFlagDefinition*      K2Node_DynamicCast_AsVAL_Tutorial_Flag_Definition      (ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool                                    K2Node_DynamicCast_bSuccess_2                          (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_MinigameQTE_Base_C::HandleOpenTutorialModal(class UUserWidget* ModalWidget, TArray<class UUserWidget*>& TutorialWidgets, TDelegate<void(class UWidget* Widget)> K2Node_CreateDelegate_OutputDelegate, class APlayerController* CallFunc_GetOwningPlayer_ReturnValue, class US6UI_ModalWidgetBase* K2Node_DynamicCast_AsS6UI_Modal_Widget_Base, bool K2Node_DynamicCast_bSuccess, class US6UI_UIManagerWidgetBase* CallFunc_GetUIManagerWidget_ReturnValue, TScriptInterface<class IBP_ModalInterface_Tutorial_C> K2Node_DynamicCast_AsBP_Modal_Interface_Tutorial, bool K2Node_DynamicCast_bSuccess_1, class UObject* CallFunc_LoadAsset_Blocking_ReturnValue, class UVAL_TutorialFlagDefinition* K2Node_DynamicCast_AsVAL_Tutorial_Flag_Definition, bool K2Node_DynamicCast_bSuccess_2)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_MinigameQTE_Base_C", "HandleOpenTutorialModal");

	Params::WBP_MinigameQTE_Base_C_HandleOpenTutorialModal Parms{};

	Parms.ModalWidget = ModalWidget;
	Parms.TutorialWidgets = std::move(TutorialWidgets);
	Parms.K2Node_CreateDelegate_OutputDelegate = K2Node_CreateDelegate_OutputDelegate;
	Parms.CallFunc_GetOwningPlayer_ReturnValue = CallFunc_GetOwningPlayer_ReturnValue;
	Parms.K2Node_DynamicCast_AsS6UI_Modal_Widget_Base = K2Node_DynamicCast_AsS6UI_Modal_Widget_Base;
	Parms.K2Node_DynamicCast_bSuccess = K2Node_DynamicCast_bSuccess;
	Parms.CallFunc_GetUIManagerWidget_ReturnValue = CallFunc_GetUIManagerWidget_ReturnValue;
	Parms.K2Node_DynamicCast_AsBP_Modal_Interface_Tutorial = K2Node_DynamicCast_AsBP_Modal_Interface_Tutorial;
	Parms.K2Node_DynamicCast_bSuccess_1 = K2Node_DynamicCast_bSuccess_1;
	Parms.CallFunc_LoadAsset_Blocking_ReturnValue = CallFunc_LoadAsset_Blocking_ReturnValue;
	Parms.K2Node_DynamicCast_AsVAL_Tutorial_Flag_Definition = K2Node_DynamicCast_AsVAL_Tutorial_Flag_Definition;
	Parms.K2Node_DynamicCast_bSuccess_2 = K2Node_DynamicCast_bSuccess_2;

	UObject::ProcessEvent(Func, &Parms);

	TutorialWidgets = std::move(Parms.TutorialWidgets);
}


// Function WBP_MinigameQTE_Base.WBP_MinigameQTE_Base_C.IsFTUEOpen
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    IsOpen                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_MinigameQTE_Base_C::IsFTUEOpen(bool* IsOpen)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_MinigameQTE_Base_C", "IsFTUEOpen");

	Params::WBP_MinigameQTE_Base_C_IsFTUEOpen Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (IsOpen != nullptr)
		*IsOpen = Parms.IsOpen;
}


// Function WBP_MinigameQTE_Base.WBP_MinigameQTE_Base_C.LinkMinigame
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UMinigameComponentMasterQTE*      NewMinigame                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class UTexture2D*                       DefaultAfterImageTexture                               (Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class UCrafterComponent*                Crafter                                                (Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// bool                                    CallFunc_IsValid_ReturnValue                           (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    CallFunc_IsValid_ReturnValue_1                         (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    CallFunc_IsPlaying_ReturnValue                         (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    CallFunc_TryOpenFTUE_Open                              (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    CallFunc_IsPaused_ReturnValue                          (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    CallFunc_Not_PreBool_ReturnValue                       (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    CallFunc_BooleanAND_ReturnValue                        (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    CallFunc_IsServer_ReturnValue                          (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    CallFunc_Not_PreBool_ReturnValue_1                     (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    CallFunc_EqualEqual_ObjectObject_ReturnValue           (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_MinigameQTE_Base_C::LinkMinigame(class UMinigameComponentMasterQTE* NewMinigame, class UTexture2D* DefaultAfterImageTexture, class UCrafterComponent* Crafter, bool CallFunc_IsValid_ReturnValue, bool CallFunc_IsValid_ReturnValue_1, bool CallFunc_IsPlaying_ReturnValue, bool CallFunc_TryOpenFTUE_Open, bool CallFunc_IsPaused_ReturnValue, bool CallFunc_Not_PreBool_ReturnValue, bool CallFunc_BooleanAND_ReturnValue, bool CallFunc_IsServer_ReturnValue, bool CallFunc_Not_PreBool_ReturnValue_1, bool CallFunc_EqualEqual_ObjectObject_ReturnValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_MinigameQTE_Base_C", "LinkMinigame");

	Params::WBP_MinigameQTE_Base_C_LinkMinigame Parms{};

	Parms.NewMinigame = NewMinigame;
	Parms.DefaultAfterImageTexture = DefaultAfterImageTexture;
	Parms.Crafter = Crafter;
	Parms.CallFunc_IsValid_ReturnValue = CallFunc_IsValid_ReturnValue;
	Parms.CallFunc_IsValid_ReturnValue_1 = CallFunc_IsValid_ReturnValue_1;
	Parms.CallFunc_IsPlaying_ReturnValue = CallFunc_IsPlaying_ReturnValue;
	Parms.CallFunc_TryOpenFTUE_Open = CallFunc_TryOpenFTUE_Open;
	Parms.CallFunc_IsPaused_ReturnValue = CallFunc_IsPaused_ReturnValue;
	Parms.CallFunc_Not_PreBool_ReturnValue = CallFunc_Not_PreBool_ReturnValue;
	Parms.CallFunc_BooleanAND_ReturnValue = CallFunc_BooleanAND_ReturnValue;
	Parms.CallFunc_IsServer_ReturnValue = CallFunc_IsServer_ReturnValue;
	Parms.CallFunc_Not_PreBool_ReturnValue_1 = CallFunc_Not_PreBool_ReturnValue_1;
	Parms.CallFunc_EqualEqual_ObjectObject_ReturnValue = CallFunc_EqualEqual_ObjectObject_ReturnValue;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_MinigameQTE_Base.WBP_MinigameQTE_Base_C.MinigameOnStateChanged
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UMinigameComponentBase*           Comp                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// EMinigameState                          PrevState                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// EMinigameState                          NewState                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    K2Node_SwitchEnum_CmpSuccess                           (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_MinigameQTE_Base_C::MinigameOnStateChanged(class UMinigameComponentBase* Comp, EMinigameState PrevState, EMinigameState NewState, bool K2Node_SwitchEnum_CmpSuccess)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_MinigameQTE_Base_C", "MinigameOnStateChanged");

	Params::WBP_MinigameQTE_Base_C_MinigameOnStateChanged Parms{};

	Parms.Comp = Comp;
	Parms.PrevState = PrevState;
	Parms.NewState = NewState;
	Parms.K2Node_SwitchEnum_CmpSuccess = K2Node_SwitchEnum_CmpSuccess;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_MinigameQTE_Base.WBP_MinigameQTE_Base_C.MistimedInputReceived
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UMinigameComponentMasterQTE*      Comp                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void UWBP_MinigameQTE_Base_C::MistimedInputReceived(class UMinigameComponentMasterQTE* Comp)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_MinigameQTE_Base_C", "MistimedInputReceived");

	Params::WBP_MinigameQTE_Base_C_MistimedInputReceived Parms{};

	Parms.Comp = Comp;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_MinigameQTE_Base.WBP_MinigameQTE_Base_C.OnMinigameLinked
// (Public, BlueprintCallable, BlueprintEvent)

void UWBP_MinigameQTE_Base_C::OnMinigameLinked()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_MinigameQTE_Base_C", "OnMinigameLinked");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_MinigameQTE_Base.WBP_MinigameQTE_Base_C.OnMinigameLinkedAndUIFocus
// (Public, BlueprintCallable, BlueprintEvent)

void UWBP_MinigameQTE_Base_C::OnMinigameLinkedAndUIFocus()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_MinigameQTE_Base_C", "OnMinigameLinkedAndUIFocus");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_MinigameQTE_Base.WBP_MinigameQTE_Base_C.OnStartMinigame
// (BlueprintCallable, BlueprintEvent)

void UWBP_MinigameQTE_Base_C::OnStartMinigame()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_MinigameQTE_Base_C", "OnStartMinigame");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_MinigameQTE_Base.WBP_MinigameQTE_Base_C.StartMinigame
// (Public, BlueprintCallable, BlueprintEvent)

void UWBP_MinigameQTE_Base_C::StartMinigame()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_MinigameQTE_Base_C", "StartMinigame");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_MinigameQTE_Base.WBP_MinigameQTE_Base_C.SuccessfulInputReceived
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UMinigameComponentMasterQTE*      Comp                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void UWBP_MinigameQTE_Base_C::SuccessfulInputReceived(class UMinigameComponentMasterQTE* Comp)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_MinigameQTE_Base_C", "SuccessfulInputReceived");

	Params::WBP_MinigameQTE_Base_C_SuccessfulInputReceived Parms{};

	Parms.Comp = Comp;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_MinigameQTE_Base.WBP_MinigameQTE_Base_C.TryOpenFTUE
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Open                                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class APlayerController*                OwningPlayer                                           (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)
// class APlayerController*                CallFunc_GetPlayerController_ReturnValue               (ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// TDelegate<void(class UUserWidget* ModalWidget, TArray<class UUserWidget*>& TutorialWidgets)>K2Node_CreateDelegate_OutputDelegate                   (ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class US6UI_UIManagerWidgetBase*        CallFunc_GetUIManagerWidget_ReturnValue                (ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// TSoftClassPtr<class UClass>             CallFunc_RedirectModalType_ReturnValue                 (UObjectWrapper, HasGetValueTypeHash)
// TArray<TSoftClassPtr<class UClass>>     K2Node_MakeArray_Array                                 (ReferenceParm)
// bool                                    CallFunc_IsValidSoftClassReference_ReturnValue         (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class APlayerController*                CallFunc_GetOwningPlayer_ReturnValue                   (ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class UObject*                          CallFunc_LoadAsset_Blocking_ReturnValue                (ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class UVAL_TutorialFlagsManager*        CallFunc_GetLocalPlayerSubsystem_ReturnValue           (ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class UVAL_TutorialFlagsManager*        CallFunc_GetLocalPlayerSubsystem_ReturnValue_1         (ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool                                    CallFunc_CanStartTutorialForFlag_ReturnValue           (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_MinigameQTE_Base_C::TryOpenFTUE(bool* Open, class APlayerController* OwningPlayer, class APlayerController* CallFunc_GetPlayerController_ReturnValue, TDelegate<void(class UUserWidget* ModalWidget, TArray<class UUserWidget*>& TutorialWidgets)> K2Node_CreateDelegate_OutputDelegate, class US6UI_UIManagerWidgetBase* CallFunc_GetUIManagerWidget_ReturnValue, TSoftClassPtr<class UClass> CallFunc_RedirectModalType_ReturnValue, TArray<TSoftClassPtr<class UClass>>& K2Node_MakeArray_Array, bool CallFunc_IsValidSoftClassReference_ReturnValue, class APlayerController* CallFunc_GetOwningPlayer_ReturnValue, class UObject* CallFunc_LoadAsset_Blocking_ReturnValue, class UVAL_TutorialFlagsManager* CallFunc_GetLocalPlayerSubsystem_ReturnValue, class UVAL_TutorialFlagsManager* CallFunc_GetLocalPlayerSubsystem_ReturnValue_1, bool CallFunc_CanStartTutorialForFlag_ReturnValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_MinigameQTE_Base_C", "TryOpenFTUE");

	Params::WBP_MinigameQTE_Base_C_TryOpenFTUE Parms{};

	Parms.OwningPlayer = OwningPlayer;
	Parms.CallFunc_GetPlayerController_ReturnValue = CallFunc_GetPlayerController_ReturnValue;
	Parms.K2Node_CreateDelegate_OutputDelegate = K2Node_CreateDelegate_OutputDelegate;
	Parms.CallFunc_GetUIManagerWidget_ReturnValue = CallFunc_GetUIManagerWidget_ReturnValue;
	Parms.CallFunc_RedirectModalType_ReturnValue = CallFunc_RedirectModalType_ReturnValue;
	Parms.K2Node_MakeArray_Array = std::move(K2Node_MakeArray_Array);
	Parms.CallFunc_IsValidSoftClassReference_ReturnValue = CallFunc_IsValidSoftClassReference_ReturnValue;
	Parms.CallFunc_GetOwningPlayer_ReturnValue = CallFunc_GetOwningPlayer_ReturnValue;
	Parms.CallFunc_LoadAsset_Blocking_ReturnValue = CallFunc_LoadAsset_Blocking_ReturnValue;
	Parms.CallFunc_GetLocalPlayerSubsystem_ReturnValue = CallFunc_GetLocalPlayerSubsystem_ReturnValue;
	Parms.CallFunc_GetLocalPlayerSubsystem_ReturnValue_1 = CallFunc_GetLocalPlayerSubsystem_ReturnValue_1;
	Parms.CallFunc_CanStartTutorialForFlag_ReturnValue = CallFunc_CanStartTutorialForFlag_ReturnValue;

	UObject::ProcessEvent(Func, &Parms);

	K2Node_MakeArray_Array = std::move(Parms.K2Node_MakeArray_Array);

	if (Open != nullptr)
		*Open = Parms.Open;
}


// Function WBP_MinigameQTE_Base.WBP_MinigameQTE_Base_C.UnbindMinigameInputEvents
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// TDelegate<void(class UMinigameComponentBase* Comp, EMinigameState PrevState, EMinigameState NewState)>K2Node_CreateDelegate_OutputDelegate                   (ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// TDelegate<void(class UMinigameComponentMasterQTE* Comp)>K2Node_CreateDelegate_OutputDelegate_1                 (ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// TDelegate<void(class UMinigameComponentMasterQTE* Comp)>K2Node_CreateDelegate_OutputDelegate_2                 (ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// TDelegate<void(class UMinigameComponentMasterQTE* Comp)>K2Node_CreateDelegate_OutputDelegate_3                 (ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool                                    CallFunc_IsValid_ReturnValue                           (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_MinigameQTE_Base_C::UnbindMinigameInputEvents(TDelegate<void(class UMinigameComponentBase* Comp, EMinigameState PrevState, EMinigameState NewState)> K2Node_CreateDelegate_OutputDelegate, TDelegate<void(class UMinigameComponentMasterQTE* Comp)> K2Node_CreateDelegate_OutputDelegate_1, TDelegate<void(class UMinigameComponentMasterQTE* Comp)> K2Node_CreateDelegate_OutputDelegate_2, TDelegate<void(class UMinigameComponentMasterQTE* Comp)> K2Node_CreateDelegate_OutputDelegate_3, bool CallFunc_IsValid_ReturnValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_MinigameQTE_Base_C", "UnbindMinigameInputEvents");

	Params::WBP_MinigameQTE_Base_C_UnbindMinigameInputEvents Parms{};

	Parms.K2Node_CreateDelegate_OutputDelegate = K2Node_CreateDelegate_OutputDelegate;
	Parms.K2Node_CreateDelegate_OutputDelegate_1 = K2Node_CreateDelegate_OutputDelegate_1;
	Parms.K2Node_CreateDelegate_OutputDelegate_2 = K2Node_CreateDelegate_OutputDelegate_2;
	Parms.K2Node_CreateDelegate_OutputDelegate_3 = K2Node_CreateDelegate_OutputDelegate_3;
	Parms.CallFunc_IsValid_ReturnValue = CallFunc_IsValid_ReturnValue;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_MinigameQTE_Base.WBP_MinigameQTE_Base_C.UpdatePadding
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           CVarCookingCamera                                      (Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
// class UValeriaGameUserSettings*         CallFunc_GetValeriaGameUserSettings_ReturnValue        (ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool                                    CallFunc_GetShowCookingCamera_ReturnValue              (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    CallFunc_GetConsoleVariableBoolValue_ReturnValue       (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    CallFunc_IsDesktop_ReturnValue                         (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    CallFunc_BooleanAND_ReturnValue                        (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UValeriaGameUserSettings*         CallFunc_GetValeriaGameUserSettings_ReturnValue_1      (ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool                                    CallFunc_GetShowCookingCamera_ReturnValue_1            (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_MinigameQTE_Base_C::UpdatePadding(const class FString& CVarCookingCamera, class UValeriaGameUserSettings* CallFunc_GetValeriaGameUserSettings_ReturnValue, bool CallFunc_GetShowCookingCamera_ReturnValue, bool CallFunc_GetConsoleVariableBoolValue_ReturnValue, bool CallFunc_IsDesktop_ReturnValue, bool CallFunc_BooleanAND_ReturnValue, class UValeriaGameUserSettings* CallFunc_GetValeriaGameUserSettings_ReturnValue_1, bool CallFunc_GetShowCookingCamera_ReturnValue_1)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_MinigameQTE_Base_C", "UpdatePadding");

	Params::WBP_MinigameQTE_Base_C_UpdatePadding Parms{};

	Parms.CVarCookingCamera = std::move(CVarCookingCamera);
	Parms.CallFunc_GetValeriaGameUserSettings_ReturnValue = CallFunc_GetValeriaGameUserSettings_ReturnValue;
	Parms.CallFunc_GetShowCookingCamera_ReturnValue = CallFunc_GetShowCookingCamera_ReturnValue;
	Parms.CallFunc_GetConsoleVariableBoolValue_ReturnValue = CallFunc_GetConsoleVariableBoolValue_ReturnValue;
	Parms.CallFunc_IsDesktop_ReturnValue = CallFunc_IsDesktop_ReturnValue;
	Parms.CallFunc_BooleanAND_ReturnValue = CallFunc_BooleanAND_ReturnValue;
	Parms.CallFunc_GetValeriaGameUserSettings_ReturnValue_1 = CallFunc_GetValeriaGameUserSettings_ReturnValue_1;
	Parms.CallFunc_GetShowCookingCamera_ReturnValue_1 = CallFunc_GetShowCookingCamera_ReturnValue_1;

	UObject::ProcessEvent(Func, &Parms);
}

}

