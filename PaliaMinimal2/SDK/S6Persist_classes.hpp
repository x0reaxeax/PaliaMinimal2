#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: S6Persist

#include "Basic.hpp"

#include "S6Persist_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "DeveloperSettings_classes.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// Class S6Persist.S6PersistConfiguration
// 0x0030 (0x0068 - 0x0038)
class US6PersistConfiguration final : public UDeveloperSettings
{
public:
	ES6PersistConfigurationSerializationFormat    Format;                                            // 0x0038(0x0001)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ES6PersistConfigurationStorageLocation        Location;                                          // 0x0039(0x0001)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1D32[0x2];                                     // 0x003A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         PersistInterval;                                   // 0x003C(0x0004)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         BatchSizeLimitKB;                                  // 0x0040(0x0004)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         MaxSyncRetries;                                    // 0x0044(0x0004)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         OperationsPerBatchLimit;                           // 0x0048(0x0004)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1D33[0x4];                                     // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDirectoryPath                         DiskPersistDirectory;                              // 0x0050(0x0010)(Edit, ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         FlushTimeHardLimitSeconds;                         // 0x0060(0x0004)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1D34[0x4];                                     // 0x0064(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"S6PersistConfiguration">();
	}
	static class US6PersistConfiguration* GetDefaultObj()
	{
		return GetDefaultObjImpl<US6PersistConfiguration>();
	}
};
static_assert(alignof(US6PersistConfiguration) == 0x000008, "Wrong alignment on US6PersistConfiguration");
static_assert(sizeof(US6PersistConfiguration) == 0x000068, "Wrong size on US6PersistConfiguration");
static_assert(offsetof(US6PersistConfiguration, Format) == 0x000038, "Member 'US6PersistConfiguration::Format' has a wrong offset!");
static_assert(offsetof(US6PersistConfiguration, Location) == 0x000039, "Member 'US6PersistConfiguration::Location' has a wrong offset!");
static_assert(offsetof(US6PersistConfiguration, PersistInterval) == 0x00003C, "Member 'US6PersistConfiguration::PersistInterval' has a wrong offset!");
static_assert(offsetof(US6PersistConfiguration, BatchSizeLimitKB) == 0x000040, "Member 'US6PersistConfiguration::BatchSizeLimitKB' has a wrong offset!");
static_assert(offsetof(US6PersistConfiguration, MaxSyncRetries) == 0x000044, "Member 'US6PersistConfiguration::MaxSyncRetries' has a wrong offset!");
static_assert(offsetof(US6PersistConfiguration, OperationsPerBatchLimit) == 0x000048, "Member 'US6PersistConfiguration::OperationsPerBatchLimit' has a wrong offset!");
static_assert(offsetof(US6PersistConfiguration, DiskPersistDirectory) == 0x000050, "Member 'US6PersistConfiguration::DiskPersistDirectory' has a wrong offset!");
static_assert(offsetof(US6PersistConfiguration, FlushTimeHardLimitSeconds) == 0x000060, "Member 'US6PersistConfiguration::FlushTimeHardLimitSeconds' has a wrong offset!");

// Class S6Persist.S6PersistSubsystem
// 0x0180 (0x01B0 - 0x0030)
class US6PersistSubsystem final : public UGameInstanceSubsystem
{
public:
	struct FS6PersistOperationSet                 QueuedOperationSet;                                // 0x0030(0x0078)(NativeAccessSpecifierPrivate)
	struct FS6PersistOperationSet                 PendingOperationSet;                               // 0x00A8(0x0078)(NativeAccessSpecifierPrivate)
	uint8                                         Pad_1D35[0x90];                                    // 0x0120(0x0090)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void HandlePendingOpSetComplete(bool bSuccess);
	void ProcessPersistQueue();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"S6PersistSubsystem">();
	}
	static class US6PersistSubsystem* GetDefaultObj()
	{
		return GetDefaultObjImpl<US6PersistSubsystem>();
	}
};
static_assert(alignof(US6PersistSubsystem) == 0x000008, "Wrong alignment on US6PersistSubsystem");
static_assert(sizeof(US6PersistSubsystem) == 0x0001B0, "Wrong size on US6PersistSubsystem");
static_assert(offsetof(US6PersistSubsystem, QueuedOperationSet) == 0x000030, "Member 'US6PersistSubsystem::QueuedOperationSet' has a wrong offset!");
static_assert(offsetof(US6PersistSubsystem, PendingOperationSet) == 0x0000A8, "Member 'US6PersistSubsystem::PendingOperationSet' has a wrong offset!");

}

