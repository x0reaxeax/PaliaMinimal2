#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_PlayerFacingIndicator

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "SlateCore_structs.hpp"


namespace SDK::Params
{

// Function WBP_PlayerFacingIndicator.WBP_PlayerFacingIndicator_C.ExecuteUbergraph_WBP_PlayerFacingIndicator
// 0x0050 (0x0050 - 0x0000)
struct WBP_PlayerFacingIndicator_C_ExecuteUbergraph_WBP_PlayerFacingIndicator final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGeometry                              K2Node_Event_MyGeometry;                           // 0x0004(0x0038)(IsPlainOldData, NoDestructor)
	float                                         K2Node_Event_InDeltaTime;                          // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetCameraYaw_Rotation;                    // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetRenderTransformAngle_Angle_ImplicitCast; // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_PlayerFacingIndicator_C_ExecuteUbergraph_WBP_PlayerFacingIndicator) == 0x000008, "Wrong alignment on WBP_PlayerFacingIndicator_C_ExecuteUbergraph_WBP_PlayerFacingIndicator");
static_assert(sizeof(WBP_PlayerFacingIndicator_C_ExecuteUbergraph_WBP_PlayerFacingIndicator) == 0x000050, "Wrong size on WBP_PlayerFacingIndicator_C_ExecuteUbergraph_WBP_PlayerFacingIndicator");
static_assert(offsetof(WBP_PlayerFacingIndicator_C_ExecuteUbergraph_WBP_PlayerFacingIndicator, EntryPoint) == 0x000000, "Member 'WBP_PlayerFacingIndicator_C_ExecuteUbergraph_WBP_PlayerFacingIndicator::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_PlayerFacingIndicator_C_ExecuteUbergraph_WBP_PlayerFacingIndicator, K2Node_Event_MyGeometry) == 0x000004, "Member 'WBP_PlayerFacingIndicator_C_ExecuteUbergraph_WBP_PlayerFacingIndicator::K2Node_Event_MyGeometry' has a wrong offset!");
static_assert(offsetof(WBP_PlayerFacingIndicator_C_ExecuteUbergraph_WBP_PlayerFacingIndicator, K2Node_Event_InDeltaTime) == 0x00003C, "Member 'WBP_PlayerFacingIndicator_C_ExecuteUbergraph_WBP_PlayerFacingIndicator::K2Node_Event_InDeltaTime' has a wrong offset!");
static_assert(offsetof(WBP_PlayerFacingIndicator_C_ExecuteUbergraph_WBP_PlayerFacingIndicator, CallFunc_GetCameraYaw_Rotation) == 0x000040, "Member 'WBP_PlayerFacingIndicator_C_ExecuteUbergraph_WBP_PlayerFacingIndicator::CallFunc_GetCameraYaw_Rotation' has a wrong offset!");
static_assert(offsetof(WBP_PlayerFacingIndicator_C_ExecuteUbergraph_WBP_PlayerFacingIndicator, CallFunc_SetRenderTransformAngle_Angle_ImplicitCast) == 0x000048, "Member 'WBP_PlayerFacingIndicator_C_ExecuteUbergraph_WBP_PlayerFacingIndicator::CallFunc_SetRenderTransformAngle_Angle_ImplicitCast' has a wrong offset!");

// Function WBP_PlayerFacingIndicator.WBP_PlayerFacingIndicator_C.GetCameraYaw
// 0x0060 (0x0060 - 0x0000)
struct WBP_PlayerFacingIndicator_C_GetCameraYaw final
{
public:
	double                                        Rotation;                                          // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_GetCameraRotation_ReturnValue;            // 0x0010(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4E00[0x4];                                     // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_NormalizeDegrees_ReturnValue;             // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4E01[0x4];                                     // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_FunctionResult_Rotation_ImplicitCast;       // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_A_ImplicitCast;          // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_NormalizeDegrees_degrees_ImplicitCast;    // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_PlayerFacingIndicator_C_GetCameraYaw) == 0x000008, "Wrong alignment on WBP_PlayerFacingIndicator_C_GetCameraYaw");
static_assert(sizeof(WBP_PlayerFacingIndicator_C_GetCameraYaw) == 0x000060, "Wrong size on WBP_PlayerFacingIndicator_C_GetCameraYaw");
static_assert(offsetof(WBP_PlayerFacingIndicator_C_GetCameraYaw, Rotation) == 0x000000, "Member 'WBP_PlayerFacingIndicator_C_GetCameraYaw::Rotation' has a wrong offset!");
static_assert(offsetof(WBP_PlayerFacingIndicator_C_GetCameraYaw, CallFunc_GetOwningPlayer_ReturnValue) == 0x000008, "Member 'WBP_PlayerFacingIndicator_C_GetCameraYaw::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_PlayerFacingIndicator_C_GetCameraYaw, CallFunc_GetCameraRotation_ReturnValue) == 0x000010, "Member 'WBP_PlayerFacingIndicator_C_GetCameraYaw::CallFunc_GetCameraRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_PlayerFacingIndicator_C_GetCameraYaw, CallFunc_BreakRotator_Roll) == 0x000028, "Member 'WBP_PlayerFacingIndicator_C_GetCameraYaw::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(WBP_PlayerFacingIndicator_C_GetCameraYaw, CallFunc_BreakRotator_Pitch) == 0x00002C, "Member 'WBP_PlayerFacingIndicator_C_GetCameraYaw::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(WBP_PlayerFacingIndicator_C_GetCameraYaw, CallFunc_BreakRotator_Yaw) == 0x000030, "Member 'WBP_PlayerFacingIndicator_C_GetCameraYaw::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(WBP_PlayerFacingIndicator_C_GetCameraYaw, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000038, "Member 'WBP_PlayerFacingIndicator_C_GetCameraYaw::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_PlayerFacingIndicator_C_GetCameraYaw, CallFunc_NormalizeDegrees_ReturnValue) == 0x000040, "Member 'WBP_PlayerFacingIndicator_C_GetCameraYaw::CallFunc_NormalizeDegrees_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_PlayerFacingIndicator_C_GetCameraYaw, K2Node_FunctionResult_Rotation_ImplicitCast) == 0x000048, "Member 'WBP_PlayerFacingIndicator_C_GetCameraYaw::K2Node_FunctionResult_Rotation_ImplicitCast' has a wrong offset!");
static_assert(offsetof(WBP_PlayerFacingIndicator_C_GetCameraYaw, CallFunc_Add_DoubleDouble_A_ImplicitCast) == 0x000050, "Member 'WBP_PlayerFacingIndicator_C_GetCameraYaw::CallFunc_Add_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(WBP_PlayerFacingIndicator_C_GetCameraYaw, CallFunc_NormalizeDegrees_degrees_ImplicitCast) == 0x000058, "Member 'WBP_PlayerFacingIndicator_C_GetCameraYaw::CallFunc_NormalizeDegrees_degrees_ImplicitCast' has a wrong offset!");

// Function WBP_PlayerFacingIndicator.WBP_PlayerFacingIndicator_C.Tick
// 0x003C (0x003C - 0x0000)
struct WBP_PlayerFacingIndicator_C_Tick final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	float                                         InDeltaTime;                                       // 0x0038(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_PlayerFacingIndicator_C_Tick) == 0x000004, "Wrong alignment on WBP_PlayerFacingIndicator_C_Tick");
static_assert(sizeof(WBP_PlayerFacingIndicator_C_Tick) == 0x00003C, "Wrong size on WBP_PlayerFacingIndicator_C_Tick");
static_assert(offsetof(WBP_PlayerFacingIndicator_C_Tick, MyGeometry) == 0x000000, "Member 'WBP_PlayerFacingIndicator_C_Tick::MyGeometry' has a wrong offset!");
static_assert(offsetof(WBP_PlayerFacingIndicator_C_Tick, InDeltaTime) == 0x000038, "Member 'WBP_PlayerFacingIndicator_C_Tick::InDeltaTime' has a wrong offset!");

}

