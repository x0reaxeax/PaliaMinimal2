#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPFL_HousingLibrary

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Palia_structs.hpp"


namespace SDK::Params
{

// Function BPFL_HousingLibrary.BPFL_HousingLibrary_C.Get Permission Options
// 0x00F0 (0x00F0 - 0x0000)
struct BPFL_HousingLibrary_C_Get_Permission_Options final
{
public:
	EHousingPermissionLevel                       UserPermission;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EHousingPermissionLevel                       ThisEntryPermission;                               // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IncludeVisitorOption;                              // 0x0002(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4D5F[0x5];                                     // 0x0003(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<class FText>                           ReturnValue;                                       // 0x0010(0x0010)(Parm, OutParm, ReturnParm)
	int32                                         Selection;                                         // 0x0020(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess_1;                    // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess_2;                    // 0x002A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4D60[0x1];                                     // 0x002B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_1;                               // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_2;                               // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_3;                               // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_4;                               // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_5;                               // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EHousingPermissionLevel                       Temp_byte_Variable;                                // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4D61[0x3];                                     // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_6;                               // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_7;                               // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_8;                               // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_9;                               // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_10;                              // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_11;                              // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_12;                              // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_13;                              // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_14;                              // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_15;                              // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EHousingPermissionLevel                       Temp_byte_Variable_1;                              // 0x006C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4D62[0x3];                                     // 0x006D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Select_Default;                             // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_16;                              // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_17;                              // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_18;                              // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_19;                              // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_20;                              // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_21;                              // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_22;                              // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_23;                              // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_24;                              // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_25;                              // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_26;                              // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Select_Default_1;                           // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4D63[0x4];                                     // 0x00A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FText>                           K2Node_MakeArray_Array;                            // 0x00A8(0x0010)(ReferenceParm)
	TArray<class FText>                           K2Node_MakeArray_Array_1;                          // 0x00B8(0x0010)(ReferenceParm)
	int32                                         Temp_int_Variable_27;                              // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_28;                              // 0x00CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class FText>                           K2Node_MakeArray_Array_2;                          // 0x00D0(0x0010)(ReferenceParm)
	int32                                         Temp_int_Variable_29;                              // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EHousingPermissionLevel                       Temp_byte_Variable_2;                              // 0x00E4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4D64[0x3];                                     // 0x00E5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Select_Default_2;                           // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPFL_HousingLibrary_C_Get_Permission_Options) == 0x000008, "Wrong alignment on BPFL_HousingLibrary_C_Get_Permission_Options");
static_assert(sizeof(BPFL_HousingLibrary_C_Get_Permission_Options) == 0x0000F0, "Wrong size on BPFL_HousingLibrary_C_Get_Permission_Options");
static_assert(offsetof(BPFL_HousingLibrary_C_Get_Permission_Options, UserPermission) == 0x000000, "Member 'BPFL_HousingLibrary_C_Get_Permission_Options::UserPermission' has a wrong offset!");
static_assert(offsetof(BPFL_HousingLibrary_C_Get_Permission_Options, ThisEntryPermission) == 0x000001, "Member 'BPFL_HousingLibrary_C_Get_Permission_Options::ThisEntryPermission' has a wrong offset!");
static_assert(offsetof(BPFL_HousingLibrary_C_Get_Permission_Options, IncludeVisitorOption) == 0x000002, "Member 'BPFL_HousingLibrary_C_Get_Permission_Options::IncludeVisitorOption' has a wrong offset!");
static_assert(offsetof(BPFL_HousingLibrary_C_Get_Permission_Options, __WorldContext) == 0x000008, "Member 'BPFL_HousingLibrary_C_Get_Permission_Options::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPFL_HousingLibrary_C_Get_Permission_Options, ReturnValue) == 0x000010, "Member 'BPFL_HousingLibrary_C_Get_Permission_Options::ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_HousingLibrary_C_Get_Permission_Options, Selection) == 0x000020, "Member 'BPFL_HousingLibrary_C_Get_Permission_Options::Selection' has a wrong offset!");
static_assert(offsetof(BPFL_HousingLibrary_C_Get_Permission_Options, Temp_int_Variable) == 0x000024, "Member 'BPFL_HousingLibrary_C_Get_Permission_Options::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BPFL_HousingLibrary_C_Get_Permission_Options, K2Node_SwitchEnum_CmpSuccess) == 0x000028, "Member 'BPFL_HousingLibrary_C_Get_Permission_Options::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BPFL_HousingLibrary_C_Get_Permission_Options, K2Node_SwitchEnum_CmpSuccess_1) == 0x000029, "Member 'BPFL_HousingLibrary_C_Get_Permission_Options::K2Node_SwitchEnum_CmpSuccess_1' has a wrong offset!");
static_assert(offsetof(BPFL_HousingLibrary_C_Get_Permission_Options, K2Node_SwitchEnum_CmpSuccess_2) == 0x00002A, "Member 'BPFL_HousingLibrary_C_Get_Permission_Options::K2Node_SwitchEnum_CmpSuccess_2' has a wrong offset!");
static_assert(offsetof(BPFL_HousingLibrary_C_Get_Permission_Options, Temp_int_Variable_1) == 0x00002C, "Member 'BPFL_HousingLibrary_C_Get_Permission_Options::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(BPFL_HousingLibrary_C_Get_Permission_Options, Temp_int_Variable_2) == 0x000030, "Member 'BPFL_HousingLibrary_C_Get_Permission_Options::Temp_int_Variable_2' has a wrong offset!");
static_assert(offsetof(BPFL_HousingLibrary_C_Get_Permission_Options, Temp_int_Variable_3) == 0x000034, "Member 'BPFL_HousingLibrary_C_Get_Permission_Options::Temp_int_Variable_3' has a wrong offset!");
static_assert(offsetof(BPFL_HousingLibrary_C_Get_Permission_Options, Temp_int_Variable_4) == 0x000038, "Member 'BPFL_HousingLibrary_C_Get_Permission_Options::Temp_int_Variable_4' has a wrong offset!");
static_assert(offsetof(BPFL_HousingLibrary_C_Get_Permission_Options, Temp_int_Variable_5) == 0x00003C, "Member 'BPFL_HousingLibrary_C_Get_Permission_Options::Temp_int_Variable_5' has a wrong offset!");
static_assert(offsetof(BPFL_HousingLibrary_C_Get_Permission_Options, Temp_byte_Variable) == 0x000040, "Member 'BPFL_HousingLibrary_C_Get_Permission_Options::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BPFL_HousingLibrary_C_Get_Permission_Options, Temp_int_Variable_6) == 0x000044, "Member 'BPFL_HousingLibrary_C_Get_Permission_Options::Temp_int_Variable_6' has a wrong offset!");
static_assert(offsetof(BPFL_HousingLibrary_C_Get_Permission_Options, Temp_int_Variable_7) == 0x000048, "Member 'BPFL_HousingLibrary_C_Get_Permission_Options::Temp_int_Variable_7' has a wrong offset!");
static_assert(offsetof(BPFL_HousingLibrary_C_Get_Permission_Options, Temp_int_Variable_8) == 0x00004C, "Member 'BPFL_HousingLibrary_C_Get_Permission_Options::Temp_int_Variable_8' has a wrong offset!");
static_assert(offsetof(BPFL_HousingLibrary_C_Get_Permission_Options, Temp_int_Variable_9) == 0x000050, "Member 'BPFL_HousingLibrary_C_Get_Permission_Options::Temp_int_Variable_9' has a wrong offset!");
static_assert(offsetof(BPFL_HousingLibrary_C_Get_Permission_Options, Temp_int_Variable_10) == 0x000054, "Member 'BPFL_HousingLibrary_C_Get_Permission_Options::Temp_int_Variable_10' has a wrong offset!");
static_assert(offsetof(BPFL_HousingLibrary_C_Get_Permission_Options, Temp_int_Variable_11) == 0x000058, "Member 'BPFL_HousingLibrary_C_Get_Permission_Options::Temp_int_Variable_11' has a wrong offset!");
static_assert(offsetof(BPFL_HousingLibrary_C_Get_Permission_Options, Temp_int_Variable_12) == 0x00005C, "Member 'BPFL_HousingLibrary_C_Get_Permission_Options::Temp_int_Variable_12' has a wrong offset!");
static_assert(offsetof(BPFL_HousingLibrary_C_Get_Permission_Options, Temp_int_Variable_13) == 0x000060, "Member 'BPFL_HousingLibrary_C_Get_Permission_Options::Temp_int_Variable_13' has a wrong offset!");
static_assert(offsetof(BPFL_HousingLibrary_C_Get_Permission_Options, Temp_int_Variable_14) == 0x000064, "Member 'BPFL_HousingLibrary_C_Get_Permission_Options::Temp_int_Variable_14' has a wrong offset!");
static_assert(offsetof(BPFL_HousingLibrary_C_Get_Permission_Options, Temp_int_Variable_15) == 0x000068, "Member 'BPFL_HousingLibrary_C_Get_Permission_Options::Temp_int_Variable_15' has a wrong offset!");
static_assert(offsetof(BPFL_HousingLibrary_C_Get_Permission_Options, Temp_byte_Variable_1) == 0x00006C, "Member 'BPFL_HousingLibrary_C_Get_Permission_Options::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BPFL_HousingLibrary_C_Get_Permission_Options, K2Node_Select_Default) == 0x000070, "Member 'BPFL_HousingLibrary_C_Get_Permission_Options::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BPFL_HousingLibrary_C_Get_Permission_Options, Temp_int_Variable_16) == 0x000074, "Member 'BPFL_HousingLibrary_C_Get_Permission_Options::Temp_int_Variable_16' has a wrong offset!");
static_assert(offsetof(BPFL_HousingLibrary_C_Get_Permission_Options, Temp_int_Variable_17) == 0x000078, "Member 'BPFL_HousingLibrary_C_Get_Permission_Options::Temp_int_Variable_17' has a wrong offset!");
static_assert(offsetof(BPFL_HousingLibrary_C_Get_Permission_Options, Temp_int_Variable_18) == 0x00007C, "Member 'BPFL_HousingLibrary_C_Get_Permission_Options::Temp_int_Variable_18' has a wrong offset!");
static_assert(offsetof(BPFL_HousingLibrary_C_Get_Permission_Options, Temp_int_Variable_19) == 0x000080, "Member 'BPFL_HousingLibrary_C_Get_Permission_Options::Temp_int_Variable_19' has a wrong offset!");
static_assert(offsetof(BPFL_HousingLibrary_C_Get_Permission_Options, Temp_int_Variable_20) == 0x000084, "Member 'BPFL_HousingLibrary_C_Get_Permission_Options::Temp_int_Variable_20' has a wrong offset!");
static_assert(offsetof(BPFL_HousingLibrary_C_Get_Permission_Options, Temp_int_Variable_21) == 0x000088, "Member 'BPFL_HousingLibrary_C_Get_Permission_Options::Temp_int_Variable_21' has a wrong offset!");
static_assert(offsetof(BPFL_HousingLibrary_C_Get_Permission_Options, Temp_int_Variable_22) == 0x00008C, "Member 'BPFL_HousingLibrary_C_Get_Permission_Options::Temp_int_Variable_22' has a wrong offset!");
static_assert(offsetof(BPFL_HousingLibrary_C_Get_Permission_Options, Temp_int_Variable_23) == 0x000090, "Member 'BPFL_HousingLibrary_C_Get_Permission_Options::Temp_int_Variable_23' has a wrong offset!");
static_assert(offsetof(BPFL_HousingLibrary_C_Get_Permission_Options, Temp_int_Variable_24) == 0x000094, "Member 'BPFL_HousingLibrary_C_Get_Permission_Options::Temp_int_Variable_24' has a wrong offset!");
static_assert(offsetof(BPFL_HousingLibrary_C_Get_Permission_Options, Temp_int_Variable_25) == 0x000098, "Member 'BPFL_HousingLibrary_C_Get_Permission_Options::Temp_int_Variable_25' has a wrong offset!");
static_assert(offsetof(BPFL_HousingLibrary_C_Get_Permission_Options, Temp_int_Variable_26) == 0x00009C, "Member 'BPFL_HousingLibrary_C_Get_Permission_Options::Temp_int_Variable_26' has a wrong offset!");
static_assert(offsetof(BPFL_HousingLibrary_C_Get_Permission_Options, K2Node_Select_Default_1) == 0x0000A0, "Member 'BPFL_HousingLibrary_C_Get_Permission_Options::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(BPFL_HousingLibrary_C_Get_Permission_Options, K2Node_MakeArray_Array) == 0x0000A8, "Member 'BPFL_HousingLibrary_C_Get_Permission_Options::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BPFL_HousingLibrary_C_Get_Permission_Options, K2Node_MakeArray_Array_1) == 0x0000B8, "Member 'BPFL_HousingLibrary_C_Get_Permission_Options::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(BPFL_HousingLibrary_C_Get_Permission_Options, Temp_int_Variable_27) == 0x0000C8, "Member 'BPFL_HousingLibrary_C_Get_Permission_Options::Temp_int_Variable_27' has a wrong offset!");
static_assert(offsetof(BPFL_HousingLibrary_C_Get_Permission_Options, Temp_int_Variable_28) == 0x0000CC, "Member 'BPFL_HousingLibrary_C_Get_Permission_Options::Temp_int_Variable_28' has a wrong offset!");
static_assert(offsetof(BPFL_HousingLibrary_C_Get_Permission_Options, K2Node_MakeArray_Array_2) == 0x0000D0, "Member 'BPFL_HousingLibrary_C_Get_Permission_Options::K2Node_MakeArray_Array_2' has a wrong offset!");
static_assert(offsetof(BPFL_HousingLibrary_C_Get_Permission_Options, Temp_int_Variable_29) == 0x0000E0, "Member 'BPFL_HousingLibrary_C_Get_Permission_Options::Temp_int_Variable_29' has a wrong offset!");
static_assert(offsetof(BPFL_HousingLibrary_C_Get_Permission_Options, Temp_byte_Variable_2) == 0x0000E4, "Member 'BPFL_HousingLibrary_C_Get_Permission_Options::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(BPFL_HousingLibrary_C_Get_Permission_Options, K2Node_Select_Default_2) == 0x0000E8, "Member 'BPFL_HousingLibrary_C_Get_Permission_Options::K2Node_Select_Default_2' has a wrong offset!");

// Function BPFL_HousingLibrary.BPFL_HousingLibrary_C.Permission Enum To Text
// 0x0138 (0x0138 - 0x0000)
struct BPFL_HousingLibrary_C_Permission_Enum_To_Text final
{
public:
	EHousingPermissionLevel                       Permission;                                        // 0x0000(0x0001)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4D65[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FText                                   Text;                                              // 0x0010(0x0018)(Parm, OutParm)
	EHousingPermissionLevel                       Temp_byte_Variable;                                // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4D66[0x7];                                     // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Temp_text_Variable;                                // 0x0030(0x0018)()
	class FText                                   Temp_text_Variable_1;                              // 0x0048(0x0018)()
	class FText                                   Temp_text_Variable_2;                              // 0x0060(0x0018)()
	class FText                                   Temp_text_Variable_3;                              // 0x0078(0x0018)()
	class FText                                   Temp_text_Variable_4;                              // 0x0090(0x0018)()
	class FText                                   Temp_text_Variable_5;                              // 0x00A8(0x0018)()
	class FText                                   Temp_text_Variable_6;                              // 0x00C0(0x0018)()
	class FText                                   Temp_text_Variable_7;                              // 0x00D8(0x0018)()
	class FText                                   Temp_text_Variable_8;                              // 0x00F0(0x0018)()
	class FText                                   Temp_text_Variable_9;                              // 0x0108(0x0018)()
	class FText                                   K2Node_Select_Default;                             // 0x0120(0x0018)()
};
static_assert(alignof(BPFL_HousingLibrary_C_Permission_Enum_To_Text) == 0x000008, "Wrong alignment on BPFL_HousingLibrary_C_Permission_Enum_To_Text");
static_assert(sizeof(BPFL_HousingLibrary_C_Permission_Enum_To_Text) == 0x000138, "Wrong size on BPFL_HousingLibrary_C_Permission_Enum_To_Text");
static_assert(offsetof(BPFL_HousingLibrary_C_Permission_Enum_To_Text, Permission) == 0x000000, "Member 'BPFL_HousingLibrary_C_Permission_Enum_To_Text::Permission' has a wrong offset!");
static_assert(offsetof(BPFL_HousingLibrary_C_Permission_Enum_To_Text, __WorldContext) == 0x000008, "Member 'BPFL_HousingLibrary_C_Permission_Enum_To_Text::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPFL_HousingLibrary_C_Permission_Enum_To_Text, Text) == 0x000010, "Member 'BPFL_HousingLibrary_C_Permission_Enum_To_Text::Text' has a wrong offset!");
static_assert(offsetof(BPFL_HousingLibrary_C_Permission_Enum_To_Text, Temp_byte_Variable) == 0x000028, "Member 'BPFL_HousingLibrary_C_Permission_Enum_To_Text::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BPFL_HousingLibrary_C_Permission_Enum_To_Text, Temp_text_Variable) == 0x000030, "Member 'BPFL_HousingLibrary_C_Permission_Enum_To_Text::Temp_text_Variable' has a wrong offset!");
static_assert(offsetof(BPFL_HousingLibrary_C_Permission_Enum_To_Text, Temp_text_Variable_1) == 0x000048, "Member 'BPFL_HousingLibrary_C_Permission_Enum_To_Text::Temp_text_Variable_1' has a wrong offset!");
static_assert(offsetof(BPFL_HousingLibrary_C_Permission_Enum_To_Text, Temp_text_Variable_2) == 0x000060, "Member 'BPFL_HousingLibrary_C_Permission_Enum_To_Text::Temp_text_Variable_2' has a wrong offset!");
static_assert(offsetof(BPFL_HousingLibrary_C_Permission_Enum_To_Text, Temp_text_Variable_3) == 0x000078, "Member 'BPFL_HousingLibrary_C_Permission_Enum_To_Text::Temp_text_Variable_3' has a wrong offset!");
static_assert(offsetof(BPFL_HousingLibrary_C_Permission_Enum_To_Text, Temp_text_Variable_4) == 0x000090, "Member 'BPFL_HousingLibrary_C_Permission_Enum_To_Text::Temp_text_Variable_4' has a wrong offset!");
static_assert(offsetof(BPFL_HousingLibrary_C_Permission_Enum_To_Text, Temp_text_Variable_5) == 0x0000A8, "Member 'BPFL_HousingLibrary_C_Permission_Enum_To_Text::Temp_text_Variable_5' has a wrong offset!");
static_assert(offsetof(BPFL_HousingLibrary_C_Permission_Enum_To_Text, Temp_text_Variable_6) == 0x0000C0, "Member 'BPFL_HousingLibrary_C_Permission_Enum_To_Text::Temp_text_Variable_6' has a wrong offset!");
static_assert(offsetof(BPFL_HousingLibrary_C_Permission_Enum_To_Text, Temp_text_Variable_7) == 0x0000D8, "Member 'BPFL_HousingLibrary_C_Permission_Enum_To_Text::Temp_text_Variable_7' has a wrong offset!");
static_assert(offsetof(BPFL_HousingLibrary_C_Permission_Enum_To_Text, Temp_text_Variable_8) == 0x0000F0, "Member 'BPFL_HousingLibrary_C_Permission_Enum_To_Text::Temp_text_Variable_8' has a wrong offset!");
static_assert(offsetof(BPFL_HousingLibrary_C_Permission_Enum_To_Text, Temp_text_Variable_9) == 0x000108, "Member 'BPFL_HousingLibrary_C_Permission_Enum_To_Text::Temp_text_Variable_9' has a wrong offset!");
static_assert(offsetof(BPFL_HousingLibrary_C_Permission_Enum_To_Text, K2Node_Select_Default) == 0x000120, "Member 'BPFL_HousingLibrary_C_Permission_Enum_To_Text::K2Node_Select_Default' has a wrong offset!");

// Function BPFL_HousingLibrary.BPFL_HousingLibrary_C.Permission Text Option to Enum
// 0x00C8 (0x00C8 - 0x0000)
struct BPFL_HousingLibrary_C_Permission_Text_Option_to_Enum final
{
public:
	class FText                                   Text;                                              // 0x0000(0x0018)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class UObject*                                __WorldContext;                                    // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	EHousingPermissionLevel                       Permission;                                        // 0x0020(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EHousingPermissionLevel                       Temp_byte_Variable;                                // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EHousingPermissionLevel                       Temp_byte_Variable_1;                              // 0x0023(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EHousingPermissionLevel                       Temp_byte_Variable_2;                              // 0x0025(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x0026(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EHousingPermissionLevel                       Temp_byte_Variable_3;                              // 0x0027(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_3;                              // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EHousingPermissionLevel                       Temp_byte_Variable_4;                              // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EHousingPermissionLevel                       Temp_byte_Variable_5;                              // 0x002A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_4;                              // 0x002B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4D67[0x4];                                     // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_MakeLiteralText_ReturnValue;              // 0x0030(0x0018)()
	class FText                                   CallFunc_MakeLiteralText_ReturnValue_1;            // 0x0048(0x0018)()
	bool                                          CallFunc_EqualEqual_IgnoreCase_TextText_ReturnValue; // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IgnoreCase_TextText_ReturnValue_1; // 0x0061(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EHousingPermissionLevel                       K2Node_Select_Default;                             // 0x0062(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4D68[0x5];                                     // 0x0063(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_MakeLiteralText_ReturnValue_2;            // 0x0068(0x0018)()
	EHousingPermissionLevel                       K2Node_Select_Default_1;                           // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IgnoreCase_TextText_ReturnValue_2; // 0x0081(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4D69[0x6];                                     // 0x0082(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_MakeLiteralText_ReturnValue_3;            // 0x0088(0x0018)()
	bool                                          CallFunc_EqualEqual_IgnoreCase_TextText_ReturnValue_3; // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EHousingPermissionLevel                       K2Node_Select_Default_2;                           // 0x00A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4D6A[0x6];                                     // 0x00A2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_MakeLiteralText_ReturnValue_4;            // 0x00A8(0x0018)()
	EHousingPermissionLevel                       K2Node_Select_Default_3;                           // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IgnoreCase_TextText_ReturnValue_4; // 0x00C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EHousingPermissionLevel                       K2Node_Select_Default_4;                           // 0x00C2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPFL_HousingLibrary_C_Permission_Text_Option_to_Enum) == 0x000008, "Wrong alignment on BPFL_HousingLibrary_C_Permission_Text_Option_to_Enum");
static_assert(sizeof(BPFL_HousingLibrary_C_Permission_Text_Option_to_Enum) == 0x0000C8, "Wrong size on BPFL_HousingLibrary_C_Permission_Text_Option_to_Enum");
static_assert(offsetof(BPFL_HousingLibrary_C_Permission_Text_Option_to_Enum, Text) == 0x000000, "Member 'BPFL_HousingLibrary_C_Permission_Text_Option_to_Enum::Text' has a wrong offset!");
static_assert(offsetof(BPFL_HousingLibrary_C_Permission_Text_Option_to_Enum, __WorldContext) == 0x000018, "Member 'BPFL_HousingLibrary_C_Permission_Text_Option_to_Enum::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPFL_HousingLibrary_C_Permission_Text_Option_to_Enum, Permission) == 0x000020, "Member 'BPFL_HousingLibrary_C_Permission_Text_Option_to_Enum::Permission' has a wrong offset!");
static_assert(offsetof(BPFL_HousingLibrary_C_Permission_Text_Option_to_Enum, Temp_byte_Variable) == 0x000021, "Member 'BPFL_HousingLibrary_C_Permission_Text_Option_to_Enum::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BPFL_HousingLibrary_C_Permission_Text_Option_to_Enum, Temp_bool_Variable) == 0x000022, "Member 'BPFL_HousingLibrary_C_Permission_Text_Option_to_Enum::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BPFL_HousingLibrary_C_Permission_Text_Option_to_Enum, Temp_byte_Variable_1) == 0x000023, "Member 'BPFL_HousingLibrary_C_Permission_Text_Option_to_Enum::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BPFL_HousingLibrary_C_Permission_Text_Option_to_Enum, Temp_bool_Variable_1) == 0x000024, "Member 'BPFL_HousingLibrary_C_Permission_Text_Option_to_Enum::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BPFL_HousingLibrary_C_Permission_Text_Option_to_Enum, Temp_byte_Variable_2) == 0x000025, "Member 'BPFL_HousingLibrary_C_Permission_Text_Option_to_Enum::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(BPFL_HousingLibrary_C_Permission_Text_Option_to_Enum, Temp_bool_Variable_2) == 0x000026, "Member 'BPFL_HousingLibrary_C_Permission_Text_Option_to_Enum::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(BPFL_HousingLibrary_C_Permission_Text_Option_to_Enum, Temp_byte_Variable_3) == 0x000027, "Member 'BPFL_HousingLibrary_C_Permission_Text_Option_to_Enum::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(BPFL_HousingLibrary_C_Permission_Text_Option_to_Enum, Temp_bool_Variable_3) == 0x000028, "Member 'BPFL_HousingLibrary_C_Permission_Text_Option_to_Enum::Temp_bool_Variable_3' has a wrong offset!");
static_assert(offsetof(BPFL_HousingLibrary_C_Permission_Text_Option_to_Enum, Temp_byte_Variable_4) == 0x000029, "Member 'BPFL_HousingLibrary_C_Permission_Text_Option_to_Enum::Temp_byte_Variable_4' has a wrong offset!");
static_assert(offsetof(BPFL_HousingLibrary_C_Permission_Text_Option_to_Enum, Temp_byte_Variable_5) == 0x00002A, "Member 'BPFL_HousingLibrary_C_Permission_Text_Option_to_Enum::Temp_byte_Variable_5' has a wrong offset!");
static_assert(offsetof(BPFL_HousingLibrary_C_Permission_Text_Option_to_Enum, Temp_bool_Variable_4) == 0x00002B, "Member 'BPFL_HousingLibrary_C_Permission_Text_Option_to_Enum::Temp_bool_Variable_4' has a wrong offset!");
static_assert(offsetof(BPFL_HousingLibrary_C_Permission_Text_Option_to_Enum, CallFunc_MakeLiteralText_ReturnValue) == 0x000030, "Member 'BPFL_HousingLibrary_C_Permission_Text_Option_to_Enum::CallFunc_MakeLiteralText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_HousingLibrary_C_Permission_Text_Option_to_Enum, CallFunc_MakeLiteralText_ReturnValue_1) == 0x000048, "Member 'BPFL_HousingLibrary_C_Permission_Text_Option_to_Enum::CallFunc_MakeLiteralText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPFL_HousingLibrary_C_Permission_Text_Option_to_Enum, CallFunc_EqualEqual_IgnoreCase_TextText_ReturnValue) == 0x000060, "Member 'BPFL_HousingLibrary_C_Permission_Text_Option_to_Enum::CallFunc_EqualEqual_IgnoreCase_TextText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_HousingLibrary_C_Permission_Text_Option_to_Enum, CallFunc_EqualEqual_IgnoreCase_TextText_ReturnValue_1) == 0x000061, "Member 'BPFL_HousingLibrary_C_Permission_Text_Option_to_Enum::CallFunc_EqualEqual_IgnoreCase_TextText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPFL_HousingLibrary_C_Permission_Text_Option_to_Enum, K2Node_Select_Default) == 0x000062, "Member 'BPFL_HousingLibrary_C_Permission_Text_Option_to_Enum::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BPFL_HousingLibrary_C_Permission_Text_Option_to_Enum, CallFunc_MakeLiteralText_ReturnValue_2) == 0x000068, "Member 'BPFL_HousingLibrary_C_Permission_Text_Option_to_Enum::CallFunc_MakeLiteralText_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BPFL_HousingLibrary_C_Permission_Text_Option_to_Enum, K2Node_Select_Default_1) == 0x000080, "Member 'BPFL_HousingLibrary_C_Permission_Text_Option_to_Enum::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(BPFL_HousingLibrary_C_Permission_Text_Option_to_Enum, CallFunc_EqualEqual_IgnoreCase_TextText_ReturnValue_2) == 0x000081, "Member 'BPFL_HousingLibrary_C_Permission_Text_Option_to_Enum::CallFunc_EqualEqual_IgnoreCase_TextText_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BPFL_HousingLibrary_C_Permission_Text_Option_to_Enum, CallFunc_MakeLiteralText_ReturnValue_3) == 0x000088, "Member 'BPFL_HousingLibrary_C_Permission_Text_Option_to_Enum::CallFunc_MakeLiteralText_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BPFL_HousingLibrary_C_Permission_Text_Option_to_Enum, CallFunc_EqualEqual_IgnoreCase_TextText_ReturnValue_3) == 0x0000A0, "Member 'BPFL_HousingLibrary_C_Permission_Text_Option_to_Enum::CallFunc_EqualEqual_IgnoreCase_TextText_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BPFL_HousingLibrary_C_Permission_Text_Option_to_Enum, K2Node_Select_Default_2) == 0x0000A1, "Member 'BPFL_HousingLibrary_C_Permission_Text_Option_to_Enum::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(BPFL_HousingLibrary_C_Permission_Text_Option_to_Enum, CallFunc_MakeLiteralText_ReturnValue_4) == 0x0000A8, "Member 'BPFL_HousingLibrary_C_Permission_Text_Option_to_Enum::CallFunc_MakeLiteralText_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BPFL_HousingLibrary_C_Permission_Text_Option_to_Enum, K2Node_Select_Default_3) == 0x0000C0, "Member 'BPFL_HousingLibrary_C_Permission_Text_Option_to_Enum::K2Node_Select_Default_3' has a wrong offset!");
static_assert(offsetof(BPFL_HousingLibrary_C_Permission_Text_Option_to_Enum, CallFunc_EqualEqual_IgnoreCase_TextText_ReturnValue_4) == 0x0000C1, "Member 'BPFL_HousingLibrary_C_Permission_Text_Option_to_Enum::CallFunc_EqualEqual_IgnoreCase_TextText_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BPFL_HousingLibrary_C_Permission_Text_Option_to_Enum, K2Node_Select_Default_4) == 0x0000C2, "Member 'BPFL_HousingLibrary_C_Permission_Text_Option_to_Enum::K2Node_Select_Default_4' has a wrong offset!");

// Function BPFL_HousingLibrary.BPFL_HousingLibrary_C.PIEGetPlayerNameFromCharacterGuid
// 0x0070 (0x0070 - 0x0000)
struct BPFL_HousingLibrary_C_PIEGetPlayerNameFromCharacterGuid final
{
public:
	struct FGuid                                  Character_Id;                                      // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FText                                   ReturnValue;                                       // 0x0018(0x0018)(Parm, OutParm, ReturnParm)
	class UQueryManager*                          CallFunc_GetGameInstanceSubsystem_ReturnValue;     // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AValeriaCharacter*                      CallFunc_FindValeriaCharacterByPlayerGuid_ReturnValue; // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4D6B[0x7];                                     // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0048(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0058(0x0018)()
};
static_assert(alignof(BPFL_HousingLibrary_C_PIEGetPlayerNameFromCharacterGuid) == 0x000008, "Wrong alignment on BPFL_HousingLibrary_C_PIEGetPlayerNameFromCharacterGuid");
static_assert(sizeof(BPFL_HousingLibrary_C_PIEGetPlayerNameFromCharacterGuid) == 0x000070, "Wrong size on BPFL_HousingLibrary_C_PIEGetPlayerNameFromCharacterGuid");
static_assert(offsetof(BPFL_HousingLibrary_C_PIEGetPlayerNameFromCharacterGuid, Character_Id) == 0x000000, "Member 'BPFL_HousingLibrary_C_PIEGetPlayerNameFromCharacterGuid::Character_Id' has a wrong offset!");
static_assert(offsetof(BPFL_HousingLibrary_C_PIEGetPlayerNameFromCharacterGuid, __WorldContext) == 0x000010, "Member 'BPFL_HousingLibrary_C_PIEGetPlayerNameFromCharacterGuid::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPFL_HousingLibrary_C_PIEGetPlayerNameFromCharacterGuid, ReturnValue) == 0x000018, "Member 'BPFL_HousingLibrary_C_PIEGetPlayerNameFromCharacterGuid::ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_HousingLibrary_C_PIEGetPlayerNameFromCharacterGuid, CallFunc_GetGameInstanceSubsystem_ReturnValue) == 0x000030, "Member 'BPFL_HousingLibrary_C_PIEGetPlayerNameFromCharacterGuid::CallFunc_GetGameInstanceSubsystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_HousingLibrary_C_PIEGetPlayerNameFromCharacterGuid, CallFunc_FindValeriaCharacterByPlayerGuid_ReturnValue) == 0x000038, "Member 'BPFL_HousingLibrary_C_PIEGetPlayerNameFromCharacterGuid::CallFunc_FindValeriaCharacterByPlayerGuid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_HousingLibrary_C_PIEGetPlayerNameFromCharacterGuid, CallFunc_IsValid_ReturnValue) == 0x000040, "Member 'BPFL_HousingLibrary_C_PIEGetPlayerNameFromCharacterGuid::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_HousingLibrary_C_PIEGetPlayerNameFromCharacterGuid, CallFunc_Concat_StrStr_ReturnValue) == 0x000048, "Member 'BPFL_HousingLibrary_C_PIEGetPlayerNameFromCharacterGuid::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_HousingLibrary_C_PIEGetPlayerNameFromCharacterGuid, CallFunc_Conv_StringToText_ReturnValue) == 0x000058, "Member 'BPFL_HousingLibrary_C_PIEGetPlayerNameFromCharacterGuid::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");

}

