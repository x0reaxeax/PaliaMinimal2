#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Loot

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_Loot.BP_Loot_C
// 0x0060 (0x0308 - 0x02A8)
class ABP_Loot_C : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02A8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UDespawnTimerComponent*                 DespawnTimer;                                      // 0x02B0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UAkCulledComponent*                     AkCulled;                                          // 0x02B8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UNiagaraComponent*                      NS_idle;                                           // 0x02C0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   StaticMesh;                                        // 0x02C8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class ULootInteractorComponent*               LootInteractor;                                    // 0x02D0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UInteractableComponent*                 Interactable;                                      // 0x02D8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UProximityChecker*                      ProximityChecker;                                  // 0x02E0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USphereComponent*                       InteractableCollider;                              // 0x02E8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UAkAudioEvent*                          Sfx_Pickup;                                        // 0x02F0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UAkAudioEvent*                          SfxIdleLoop;                                       // 0x02F8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AValeriaCharacter*                      PC;                                                // 0x0300(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)

public:
	void AdjustPosition(const struct FVector& InstigatorPosition, const struct FVector& OldPosition, const struct FVector& NewPosition, class APawn* Instigators, const struct FVector& CallFunc_Add_VectorVector_ReturnValue, const struct FVector& CallFunc_K2_GetActorLocation_ReturnValue, bool CallFunc_NotEqual_VectorVector_ReturnValue, TArray<class AActor*>& Temp_object_Variable, const struct FHitResult& CallFunc_LineTraceSingle_OutHit, bool CallFunc_LineTraceSingle_ReturnValue, bool CallFunc_IsValid_ReturnValue, bool CallFunc_BreakHitResult_bBlockingHit, bool CallFunc_BreakHitResult_bInitialOverlap, float CallFunc_BreakHitResult_Time, float CallFunc_BreakHitResult_Distance, const struct FVector& CallFunc_BreakHitResult_Location, const struct FVector& CallFunc_BreakHitResult_ImpactPoint, const struct FVector& CallFunc_BreakHitResult_Normal, const struct FVector& CallFunc_BreakHitResult_ImpactNormal, class UPhysicalMaterial* CallFunc_BreakHitResult_PhysMat, class AActor* CallFunc_BreakHitResult_HitActor, class UPrimitiveComponent* CallFunc_BreakHitResult_HitComponent, class FName CallFunc_BreakHitResult_HitBoneName, class FName CallFunc_BreakHitResult_BoneName, int32 CallFunc_BreakHitResult_HitItem, int32 CallFunc_BreakHitResult_ElementIndex, int32 CallFunc_BreakHitResult_FaceIndex, const struct FVector& CallFunc_BreakHitResult_TraceStart, const struct FVector& CallFunc_BreakHitResult_TraceEnd, const struct FVector& CallFunc_K2_GetActorLocation_ReturnValue_1, const struct FHitResult& CallFunc_K2_SetActorLocation_SweepHitResult, bool CallFunc_K2_SetActorLocation_ReturnValue);
	void BndEvt__BP_Loot_Interactable_K2Node_ComponentBoundEvent_0_InteractableClientInteractDelegate__DelegateSignature(class UInteractableComponent* InteractableComponent, class AValeriaCharacter* Character);
	void BndEvt__BP_ValeriaGatherable_Interactable_K2Node_ComponentBoundEvent_1_InteractableClientInteractDelegate__DelegateSignature(class UInteractableComponent* InteractableComponent, class AValeriaCharacter* Character);
	void BndEvt__BP_ValeriaGatherable_Interactable_K2Node_ComponentBoundEvent_2_InteractableClientInteractDelegate__DelegateSignature(class UInteractableComponent* InteractableComponent, class AValeriaCharacter* Character);
	void Event_ImPickedUp();
	void Event_setMeUp();
	void ExecuteUbergraph_BP_Loot(int32 EntryPoint, EEndPlayReason K2Node_Event_EndPlayReason, bool CallFunc_DisableIfServer_ReturnValue, const struct FVector& CallFunc_K2_GetComponentLocation_ReturnValue, class UNiagaraComponent* CallFunc_SpawnSystemAtLocation_ReturnValue, const struct FVector& CallFunc_GetLocalBounds_Min, const struct FVector& CallFunc_GetLocalBounds_Max, bool CallFunc_IsValid_ReturnValue, double CallFunc_GetMaxElement_ReturnValue, double CallFunc_FClamp_ReturnValue, bool CallFunc_IsServer_ReturnValue, bool CallFunc_IsServer_ReturnValue_1, bool CallFunc_IsValid_ReturnValue_1, const struct FVector& CallFunc_GetLocalBounds_Min_1, const struct FVector& CallFunc_GetLocalBounds_Max_1, bool CallFunc_IsValid_ReturnValue_2, double CallFunc_GetMaxElement_ReturnValue_1, double CallFunc_FClamp_ReturnValue_1, const struct FVector& CallFunc_K2_GetActorLocation_ReturnValue, bool CallFunc_IsValid_ReturnValue_3, class UAkComponent* CallFunc_AkEventLocation_AkComponent, int32 CallFunc_AkEventLocation_Playing_ID, class UInteractableComponent* K2Node_ComponentBoundEvent_InteractableComponent_2, class AValeriaCharacter* K2Node_ComponentBoundEvent_character_2, class UInteractableComponent* K2Node_ComponentBoundEvent_InteractableComponent_1, class AValeriaCharacter* K2Node_ComponentBoundEvent_character_1, class UInteractableComponent* K2Node_ComponentBoundEvent_InteractableComponent, class AValeriaCharacter* K2Node_ComponentBoundEvent_character, bool CallFunc_IsValid_ReturnValue_4, float CallFunc_SetVariableFloat_InValue_ImplicitCast, float CallFunc_SetVariableFloat_InValue_ImplicitCast_1);
	void ReceiveBeginPlay();
	void ReceiveEndPlay(EEndPlayReason EndPlayReason);
	void UserConstructionScript(bool CallFunc_IsValid_ReturnValue);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_Loot_C">();
	}
	static class ABP_Loot_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_Loot_C>();
	}
};
static_assert(alignof(ABP_Loot_C) == 0x000008, "Wrong alignment on ABP_Loot_C");
static_assert(sizeof(ABP_Loot_C) == 0x000308, "Wrong size on ABP_Loot_C");
static_assert(offsetof(ABP_Loot_C, UberGraphFrame) == 0x0002A8, "Member 'ABP_Loot_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_Loot_C, DespawnTimer) == 0x0002B0, "Member 'ABP_Loot_C::DespawnTimer' has a wrong offset!");
static_assert(offsetof(ABP_Loot_C, AkCulled) == 0x0002B8, "Member 'ABP_Loot_C::AkCulled' has a wrong offset!");
static_assert(offsetof(ABP_Loot_C, NS_idle) == 0x0002C0, "Member 'ABP_Loot_C::NS_idle' has a wrong offset!");
static_assert(offsetof(ABP_Loot_C, StaticMesh) == 0x0002C8, "Member 'ABP_Loot_C::StaticMesh' has a wrong offset!");
static_assert(offsetof(ABP_Loot_C, LootInteractor) == 0x0002D0, "Member 'ABP_Loot_C::LootInteractor' has a wrong offset!");
static_assert(offsetof(ABP_Loot_C, Interactable) == 0x0002D8, "Member 'ABP_Loot_C::Interactable' has a wrong offset!");
static_assert(offsetof(ABP_Loot_C, ProximityChecker) == 0x0002E0, "Member 'ABP_Loot_C::ProximityChecker' has a wrong offset!");
static_assert(offsetof(ABP_Loot_C, InteractableCollider) == 0x0002E8, "Member 'ABP_Loot_C::InteractableCollider' has a wrong offset!");
static_assert(offsetof(ABP_Loot_C, Sfx_Pickup) == 0x0002F0, "Member 'ABP_Loot_C::Sfx_Pickup' has a wrong offset!");
static_assert(offsetof(ABP_Loot_C, SfxIdleLoop) == 0x0002F8, "Member 'ABP_Loot_C::SfxIdleLoop' has a wrong offset!");
static_assert(offsetof(ABP_Loot_C, PC) == 0x000300, "Member 'ABP_Loot_C::PC' has a wrong offset!");

}

