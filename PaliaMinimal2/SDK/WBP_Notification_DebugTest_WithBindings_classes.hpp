#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_Notification_DebugTest_WithBindings

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "S6UICore_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_Notification_DebugTest_WithBindings.WBP_Notification_DebugTest_WithBindings_C
// 0x0040 (0x0560 - 0x0520)
class UWBP_Notification_DebugTest_WithBindings_C final : public US6UI_InputActionHandlingUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0520(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UVALUI_Button_Styled*                   Button_A;                                          // 0x0528(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UVALUI_Button_Styled*                   Button_Close;                                      // 0x0530(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_BoundInputActionStateIndicator_C*  WBP_BoundInputActionStateIndicator;                // 0x0538(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_BoundInputActionStateIndicator_C*  WBP_BoundInputActionStateIndicator_210;            // 0x0540(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	struct FGuid                                  Notification_Id;                                   // 0x0548(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UVALUI_NotificationQueue*               Notification_Queue;                                // 0x0558(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)

public:
	void AcceptInvite();
	void BndEvt__Button_A_K2Node_ComponentBoundEvent_0_OnButtonClickedEvent__DelegateSignature();
	void BndEvt__Button_Close_K2Node_ComponentBoundEvent_1_OnButtonClickedEvent__DelegateSignature();
	void Close(bool CallFunc_TryDismissNotification_ReturnValue);
	void ExecuteUbergraph_WBP_Notification_DebugTest_WithBindings(int32 EntryPoint, class UVALUI_NotificationQueue* K2Node_Event_NotificationQueue, struct FGuid& K2Node_Event_NotificationId, bool CallFunc_TryDismissNotification_ReturnValue, bool CallFunc_TryDismissNotification_ReturnValue_1, class UVALUI_NotificationQueue* K2Node_Event_NotificationQueue_1, struct FGuid& K2Node_Event_NotificationId_1, TDelegate<void(const struct FInputActionValue& ActionValue, float ElapsedTime, float TriggeredTime, class UInputAction* SourceAction)> K2Node_CreateDelegate_OutputDelegate, const struct FGuid& CallFunc_RegisterInputActionBinding_ReturnValue, TDelegate<void(const struct FInputActionValue& ActionValue, float ElapsedTime, float TriggeredTime, class UInputAction* SourceAction)> K2Node_CreateDelegate_OutputDelegate_1, const struct FGuid& CallFunc_RegisterInputActionBinding_ReturnValue_1);
	void HandleInputAction_AcceptPartyInvite_Triggered(const struct FInputActionValue& ActionValue, float ElapsedTime, float TriggeredTime, class UInputAction* InputAction);
	void HandleInputAction_DismissNotification_Triggered(const struct FInputActionValue& ActionValue, float ElapsedTime, float TriggeredTime, class UInputAction* InputAction);
	void HandleNotificationDismissed(class UVALUI_NotificationQueue* NotificationQueue, struct FGuid& NotificationId);
	void HandleNotificationShown(class UVALUI_NotificationQueue* NotificationQueue, struct FGuid& NotificationId);
	bool MatchesNotification(class FText& NotificationText, TSoftObjectPtr<class UTexture2D>& NotificationIcon);
	void OnInitialized();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_Notification_DebugTest_WithBindings_C">();
	}
	static class UWBP_Notification_DebugTest_WithBindings_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_Notification_DebugTest_WithBindings_C>();
	}
};
static_assert(alignof(UWBP_Notification_DebugTest_WithBindings_C) == 0x000008, "Wrong alignment on UWBP_Notification_DebugTest_WithBindings_C");
static_assert(sizeof(UWBP_Notification_DebugTest_WithBindings_C) == 0x000560, "Wrong size on UWBP_Notification_DebugTest_WithBindings_C");
static_assert(offsetof(UWBP_Notification_DebugTest_WithBindings_C, UberGraphFrame) == 0x000520, "Member 'UWBP_Notification_DebugTest_WithBindings_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWBP_Notification_DebugTest_WithBindings_C, Button_A) == 0x000528, "Member 'UWBP_Notification_DebugTest_WithBindings_C::Button_A' has a wrong offset!");
static_assert(offsetof(UWBP_Notification_DebugTest_WithBindings_C, Button_Close) == 0x000530, "Member 'UWBP_Notification_DebugTest_WithBindings_C::Button_Close' has a wrong offset!");
static_assert(offsetof(UWBP_Notification_DebugTest_WithBindings_C, WBP_BoundInputActionStateIndicator) == 0x000538, "Member 'UWBP_Notification_DebugTest_WithBindings_C::WBP_BoundInputActionStateIndicator' has a wrong offset!");
static_assert(offsetof(UWBP_Notification_DebugTest_WithBindings_C, WBP_BoundInputActionStateIndicator_210) == 0x000540, "Member 'UWBP_Notification_DebugTest_WithBindings_C::WBP_BoundInputActionStateIndicator_210' has a wrong offset!");
static_assert(offsetof(UWBP_Notification_DebugTest_WithBindings_C, Notification_Id) == 0x000548, "Member 'UWBP_Notification_DebugTest_WithBindings_C::Notification_Id' has a wrong offset!");
static_assert(offsetof(UWBP_Notification_DebugTest_WithBindings_C, Notification_Queue) == 0x000558, "Member 'UWBP_Notification_DebugTest_WithBindings_C::Notification_Queue' has a wrong offset!");

}

