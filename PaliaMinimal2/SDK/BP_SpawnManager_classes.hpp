#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_SpawnManager

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_SpawnManager.BP_SpawnManager_C
// 0x0028 (0x02D0 - 0x02A8)
class ABP_SpawnManager_C final : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02A8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class USphereComponent*                       NavMeshCollision;                                  // 0x02B0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USpawnerComponent*                      Spawner;                                           // 0x02B8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USpawnPointComponent*                   SpawnPoint;                                        // 0x02C0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x02C8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_SpawnManager(int32 EntryPoint);
	void ReceiveBeginPlay();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_SpawnManager_C">();
	}
	static class ABP_SpawnManager_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_SpawnManager_C>();
	}
};
static_assert(alignof(ABP_SpawnManager_C) == 0x000008, "Wrong alignment on ABP_SpawnManager_C");
static_assert(sizeof(ABP_SpawnManager_C) == 0x0002D0, "Wrong size on ABP_SpawnManager_C");
static_assert(offsetof(ABP_SpawnManager_C, UberGraphFrame) == 0x0002A8, "Member 'ABP_SpawnManager_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_SpawnManager_C, NavMeshCollision) == 0x0002B0, "Member 'ABP_SpawnManager_C::NavMeshCollision' has a wrong offset!");
static_assert(offsetof(ABP_SpawnManager_C, Spawner) == 0x0002B8, "Member 'ABP_SpawnManager_C::Spawner' has a wrong offset!");
static_assert(offsetof(ABP_SpawnManager_C, SpawnPoint) == 0x0002C0, "Member 'ABP_SpawnManager_C::SpawnPoint' has a wrong offset!");
static_assert(offsetof(ABP_SpawnManager_C, DefaultSceneRoot) == 0x0002C8, "Member 'ABP_SpawnManager_C::DefaultSceneRoot' has a wrong offset!");

}

