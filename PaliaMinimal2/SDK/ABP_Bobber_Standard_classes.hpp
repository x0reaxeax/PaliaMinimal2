#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ABP_Bobber_Standard

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "AnimGraphRuntime_structs.hpp"
#include "Palia_structs.hpp"


namespace SDK
{

// AnimBlueprintGeneratedClass ABP_Bobber_Standard.ABP_Bobber_Standard_C
// 0x00A0 (0x03F0 - 0x0350)
class UABP_Bobber_Standard_C final : public UAnimInstance
{
public:
	uint8                                         Pad_42EA[0x8];                                     // 0x0348(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0350(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	struct FAnimSubsystemInstance                 AnimBlueprintExtension_PropertyAccess;             // 0x0358(0x0008)()
	struct FAnimSubsystemInstance                 AnimBlueprintExtension_Base;                       // 0x0360(0x0008)()
	struct FAnimNode_Root                         AnimGraphNode_Root;                                // 0x0368(0x0020)()
	struct FAnimNode_Slot                         AnimGraphNode_Slot;                                // 0x0388(0x0048)()
	struct FAnimNode_RefPose                      AnimGraphNode_LocalRefPose;                        // 0x03D0(0x0010)()
	EFishingMiniGameState                         StateCurrent;                                      // 0x03E0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFishingMiniGameState                         StatePrevious;                                     // 0x03E1(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void AnimGraph(struct FPoseLink* Param_AnimGraph);
	void BlueprintBeginPlay();
	void BlueprintInitializeAnimation();
	void ExecuteUbergraph_ABP_Bobber_Standard(int32 EntryPoint, int32 Temp_int_Variable, class UAnimSequenceBase* Temp_object_Variable, class AActor* CallFunc_GetOwningActor_ReturnValue, TDelegate<void(class UFishingViewComponent* FishingView, class UFishingComponent* Source, int32 FishNumber)> K2Node_CreateDelegate_OutputDelegate, bool CallFunc_IsValid_ReturnValue, class AActor* CallFunc_GetOwner_ReturnValue, bool CallFunc_IsValid_ReturnValue_1, class UFishingComponent* CallFunc_GetComponentByClass_ReturnValue, bool CallFunc_IsValid_ReturnValue_2, class UFishingViewComponent* CallFunc_GetComponentByClass_ReturnValue_1, bool CallFunc_IsValid_ReturnValue_3, class UFishingViewComponent* K2Node_CustomEvent_FishingView_2, class UFishingComponent* K2Node_CustomEvent_Source_1, int32 K2Node_CustomEvent_fishNumber, int32 CallFunc_Percent_IntInt_ReturnValue, class UAnimSequenceBase* Temp_object_Variable_1, class UAnimSequenceBase* K2Node_Select_Default, class UAnimMontage* CallFunc_PlaySlotAnimationAsDynamicMontage_ReturnValue, TDelegate<void(class UFishingComponent* Source)> K2Node_CreateDelegate_OutputDelegate_1, class UFishingViewComponent* K2Node_CustomEvent_FishingView_1, bool K2Node_CustomEvent_isBiting, class UFishingViewComponent* K2Node_CustomEvent_FishingView, class AActor* K2Node_CustomEvent_bobble, class UFishingComponent* K2Node_CustomEvent_Source, TDelegate<void(class UFishingViewComponent* FishingView, class AActor* bobble)> K2Node_CreateDelegate_OutputDelegate_2, EFishingState_OLD CallFunc_GetFishingState_ReturnValue, bool CallFunc_EqualEqual_ByteByte_ReturnValue, TDelegate<void(class UFishingViewComponent* FishingView, bool IsBiting)> K2Node_CreateDelegate_OutputDelegate_3, class UAnimMontage* CallFunc_PlaySlotAnimationAsDynamicMontage_ReturnValue_1, class UAnimMontage* CallFunc_PlaySlotAnimationAsDynamicMontage_ReturnValue_2, class AActor* CallFunc_GetOwningActor_ReturnValue_1, class AActor* CallFunc_GetOwner_ReturnValue_1, bool CallFunc_IsValid_ReturnValue_4, bool CallFunc_IsLocallyControlled_ReturnValue);
	void OnFishingBobberWasCreated_Event_0(class UFishingViewComponent* FishingView, class AActor* bobble);
	void OnFishingStateChanged_Event_0(class UFishingComponent* Source);
	void OnFishIsBitingChanged_Event_0(class UFishingViewComponent* FishingView, bool IsBiting);
	void OnNibbled_Event_0(class UFishingViewComponent* FishingView, class UFishingComponent* Source, int32 FishNumber);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"ABP_Bobber_Standard_C">();
	}
	static class UABP_Bobber_Standard_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UABP_Bobber_Standard_C>();
	}
};
static_assert(alignof(UABP_Bobber_Standard_C) == 0x000010, "Wrong alignment on UABP_Bobber_Standard_C");
static_assert(sizeof(UABP_Bobber_Standard_C) == 0x0003F0, "Wrong size on UABP_Bobber_Standard_C");
static_assert(offsetof(UABP_Bobber_Standard_C, UberGraphFrame) == 0x000350, "Member 'UABP_Bobber_Standard_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UABP_Bobber_Standard_C, AnimBlueprintExtension_PropertyAccess) == 0x000358, "Member 'UABP_Bobber_Standard_C::AnimBlueprintExtension_PropertyAccess' has a wrong offset!");
static_assert(offsetof(UABP_Bobber_Standard_C, AnimBlueprintExtension_Base) == 0x000360, "Member 'UABP_Bobber_Standard_C::AnimBlueprintExtension_Base' has a wrong offset!");
static_assert(offsetof(UABP_Bobber_Standard_C, AnimGraphNode_Root) == 0x000368, "Member 'UABP_Bobber_Standard_C::AnimGraphNode_Root' has a wrong offset!");
static_assert(offsetof(UABP_Bobber_Standard_C, AnimGraphNode_Slot) == 0x000388, "Member 'UABP_Bobber_Standard_C::AnimGraphNode_Slot' has a wrong offset!");
static_assert(offsetof(UABP_Bobber_Standard_C, AnimGraphNode_LocalRefPose) == 0x0003D0, "Member 'UABP_Bobber_Standard_C::AnimGraphNode_LocalRefPose' has a wrong offset!");
static_assert(offsetof(UABP_Bobber_Standard_C, StateCurrent) == 0x0003E0, "Member 'UABP_Bobber_Standard_C::StateCurrent' has a wrong offset!");
static_assert(offsetof(UABP_Bobber_Standard_C, StatePrevious) == 0x0003E1, "Member 'UABP_Bobber_Standard_C::StatePrevious' has a wrong offset!");

}

