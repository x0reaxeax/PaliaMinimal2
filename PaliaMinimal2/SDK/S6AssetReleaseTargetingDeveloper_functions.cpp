#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: S6AssetReleaseTargetingDeveloper

#include "Basic.hpp"

#include "S6AssetReleaseTargetingDeveloper_classes.hpp"
#include "S6AssetReleaseTargetingDeveloper_parameters.hpp"


namespace SDK
{

// Function S6AssetReleaseTargetingDeveloper.S6AssetReleaseTargetingLibrary.GetAssetReleaseTargetingInfo_AssetData
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FAssetData                       AssetData                                              (ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FS6AssetReleaseTargetingInfo     ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FS6AssetReleaseTargetingInfo US6AssetReleaseTargetingLibrary::GetAssetReleaseTargetingInfo_AssetData(struct FAssetData& AssetData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("S6AssetReleaseTargetingLibrary", "GetAssetReleaseTargetingInfo_AssetData");

	Params::S6AssetReleaseTargetingLibrary_GetAssetReleaseTargetingInfo_AssetData Parms{};

	Parms.AssetData = std::move(AssetData);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function S6AssetReleaseTargetingDeveloper.S6AssetReleaseTargetingLibrary.GetAssetReleaseTargetingInfo_Object
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          Object                                                 (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FS6AssetReleaseTargetingInfo     ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FS6AssetReleaseTargetingInfo US6AssetReleaseTargetingLibrary::GetAssetReleaseTargetingInfo_Object(class UObject* Object)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("S6AssetReleaseTargetingLibrary", "GetAssetReleaseTargetingInfo_Object");

	Params::S6AssetReleaseTargetingLibrary_GetAssetReleaseTargetingInfo_Object Parms{};

	Parms.Object = Object;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function S6AssetReleaseTargetingDeveloper.S6AssetReleaseTargetingLibrary.GetAssetReleaseTargetingInfo_ObjectPath
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FSoftObjectPath                  SoftObjectPath                                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FS6AssetReleaseTargetingInfo     ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FS6AssetReleaseTargetingInfo US6AssetReleaseTargetingLibrary::GetAssetReleaseTargetingInfo_ObjectPath(struct FSoftObjectPath& SoftObjectPath)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("S6AssetReleaseTargetingLibrary", "GetAssetReleaseTargetingInfo_ObjectPath");

	Params::S6AssetReleaseTargetingLibrary_GetAssetReleaseTargetingInfo_ObjectPath Parms{};

	Parms.SoftObjectPath = std::move(SoftObjectPath);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function S6AssetReleaseTargetingDeveloper.S6AssetReleaseTargetingLibrary.GetAssetReleaseTargetingInfo_PrimaryAssetId
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FPrimaryAssetId                  AssetId                                                (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FS6AssetReleaseTargetingInfo     ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FS6AssetReleaseTargetingInfo US6AssetReleaseTargetingLibrary::GetAssetReleaseTargetingInfo_PrimaryAssetId(struct FPrimaryAssetId& AssetId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("S6AssetReleaseTargetingLibrary", "GetAssetReleaseTargetingInfo_PrimaryAssetId");

	Params::S6AssetReleaseTargetingLibrary_GetAssetReleaseTargetingInfo_PrimaryAssetId Parms{};

	Parms.AssetId = std::move(AssetId);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function S6AssetReleaseTargetingDeveloper.S6AssetReleaseTargetingLibrary.GetAssetReleaseTargetingInfo_SoftObject
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// TSoftObjectPtr<class UObject>           SoftObject                                             (ConstParm, Parm, OutParm, ReferenceParm, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FS6AssetReleaseTargetingInfo     ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FS6AssetReleaseTargetingInfo US6AssetReleaseTargetingLibrary::GetAssetReleaseTargetingInfo_SoftObject(TSoftObjectPtr<class UObject>& SoftObject)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("S6AssetReleaseTargetingLibrary", "GetAssetReleaseTargetingInfo_SoftObject");

	Params::S6AssetReleaseTargetingLibrary_GetAssetReleaseTargetingInfo_SoftObject Parms{};

	Parms.SoftObject = SoftObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}

}

