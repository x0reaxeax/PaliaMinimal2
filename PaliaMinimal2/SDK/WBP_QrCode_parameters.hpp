#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_QrCode

#include "Basic.hpp"

#include "Palia_structs.hpp"
#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function WBP_QrCode.WBP_QrCode_C.ExecuteUbergraph_WBP_QrCode
// 0x0088 (0x0088 - 0x0000)
struct WBP_QrCode_C_ExecuteUbergraph_WBP_QrCode final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EValeriaFuncResult                            CallFunc_GetValeriaPlayerController_OutResult;     // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4DD1[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AValeriaPlayerController*               CallFunc_GetValeriaPlayerController_ReturnValue;   // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4DD2[0x7];                                     // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 K2Node_Event_Link;                                 // 0x0018(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	TArray<uint8>                                 K2Node_Event_QrData;                               // 0x0028(0x0010)(ConstParm, ReferenceParm)
	int32                                         K2Node_Event_Size;                                 // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4DD3[0x4];                                     // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x0040(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCanvas*                                CallFunc_BeginDrawCanvasToRenderTarget_Canvas;     // 0x0050(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_BeginDrawCanvasToRenderTarget_Size;       // 0x0058(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FDrawToRenderTargetContext             CallFunc_BeginDrawCanvasToRenderTarget_Context;    // 0x0068(0x0010)(NoDestructor)
	class FString                                 K2Node_Event_FailReason;                           // 0x0078(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_QrCode_C_ExecuteUbergraph_WBP_QrCode) == 0x000008, "Wrong alignment on WBP_QrCode_C_ExecuteUbergraph_WBP_QrCode");
static_assert(sizeof(WBP_QrCode_C_ExecuteUbergraph_WBP_QrCode) == 0x000088, "Wrong size on WBP_QrCode_C_ExecuteUbergraph_WBP_QrCode");
static_assert(offsetof(WBP_QrCode_C_ExecuteUbergraph_WBP_QrCode, EntryPoint) == 0x000000, "Member 'WBP_QrCode_C_ExecuteUbergraph_WBP_QrCode::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_QrCode_C_ExecuteUbergraph_WBP_QrCode, CallFunc_GetValeriaPlayerController_OutResult) == 0x000004, "Member 'WBP_QrCode_C_ExecuteUbergraph_WBP_QrCode::CallFunc_GetValeriaPlayerController_OutResult' has a wrong offset!");
static_assert(offsetof(WBP_QrCode_C_ExecuteUbergraph_WBP_QrCode, CallFunc_GetValeriaPlayerController_ReturnValue) == 0x000008, "Member 'WBP_QrCode_C_ExecuteUbergraph_WBP_QrCode::CallFunc_GetValeriaPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_QrCode_C_ExecuteUbergraph_WBP_QrCode, K2Node_SwitchEnum_CmpSuccess) == 0x000010, "Member 'WBP_QrCode_C_ExecuteUbergraph_WBP_QrCode::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(WBP_QrCode_C_ExecuteUbergraph_WBP_QrCode, K2Node_Event_Link) == 0x000018, "Member 'WBP_QrCode_C_ExecuteUbergraph_WBP_QrCode::K2Node_Event_Link' has a wrong offset!");
static_assert(offsetof(WBP_QrCode_C_ExecuteUbergraph_WBP_QrCode, K2Node_Event_QrData) == 0x000028, "Member 'WBP_QrCode_C_ExecuteUbergraph_WBP_QrCode::K2Node_Event_QrData' has a wrong offset!");
static_assert(offsetof(WBP_QrCode_C_ExecuteUbergraph_WBP_QrCode, K2Node_Event_Size) == 0x000038, "Member 'WBP_QrCode_C_ExecuteUbergraph_WBP_QrCode::K2Node_Event_Size' has a wrong offset!");
static_assert(offsetof(WBP_QrCode_C_ExecuteUbergraph_WBP_QrCode, CallFunc_MakeVector2D_ReturnValue) == 0x000040, "Member 'WBP_QrCode_C_ExecuteUbergraph_WBP_QrCode::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_QrCode_C_ExecuteUbergraph_WBP_QrCode, CallFunc_BeginDrawCanvasToRenderTarget_Canvas) == 0x000050, "Member 'WBP_QrCode_C_ExecuteUbergraph_WBP_QrCode::CallFunc_BeginDrawCanvasToRenderTarget_Canvas' has a wrong offset!");
static_assert(offsetof(WBP_QrCode_C_ExecuteUbergraph_WBP_QrCode, CallFunc_BeginDrawCanvasToRenderTarget_Size) == 0x000058, "Member 'WBP_QrCode_C_ExecuteUbergraph_WBP_QrCode::CallFunc_BeginDrawCanvasToRenderTarget_Size' has a wrong offset!");
static_assert(offsetof(WBP_QrCode_C_ExecuteUbergraph_WBP_QrCode, CallFunc_BeginDrawCanvasToRenderTarget_Context) == 0x000068, "Member 'WBP_QrCode_C_ExecuteUbergraph_WBP_QrCode::CallFunc_BeginDrawCanvasToRenderTarget_Context' has a wrong offset!");
static_assert(offsetof(WBP_QrCode_C_ExecuteUbergraph_WBP_QrCode, K2Node_Event_FailReason) == 0x000078, "Member 'WBP_QrCode_C_ExecuteUbergraph_WBP_QrCode::K2Node_Event_FailReason' has a wrong offset!");

// Function WBP_QrCode.WBP_QrCode_C.OnLinkReceived__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct WBP_QrCode_C_OnLinkReceived__DelegateSignature final
{
public:
	class FString                                 Link;                                              // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_QrCode_C_OnLinkReceived__DelegateSignature) == 0x000008, "Wrong alignment on WBP_QrCode_C_OnLinkReceived__DelegateSignature");
static_assert(sizeof(WBP_QrCode_C_OnLinkReceived__DelegateSignature) == 0x000010, "Wrong size on WBP_QrCode_C_OnLinkReceived__DelegateSignature");
static_assert(offsetof(WBP_QrCode_C_OnLinkReceived__DelegateSignature, Link) == 0x000000, "Member 'WBP_QrCode_C_OnLinkReceived__DelegateSignature::Link' has a wrong offset!");

// Function WBP_QrCode.WBP_QrCode_C.OnQrFetchFailed
// 0x0010 (0x0010 - 0x0000)
struct WBP_QrCode_C_OnQrFetchFailed final
{
public:
	class FString                                 FailReason;                                        // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_QrCode_C_OnQrFetchFailed) == 0x000008, "Wrong alignment on WBP_QrCode_C_OnQrFetchFailed");
static_assert(sizeof(WBP_QrCode_C_OnQrFetchFailed) == 0x000010, "Wrong size on WBP_QrCode_C_OnQrFetchFailed");
static_assert(offsetof(WBP_QrCode_C_OnQrFetchFailed, FailReason) == 0x000000, "Member 'WBP_QrCode_C_OnQrFetchFailed::FailReason' has a wrong offset!");

// Function WBP_QrCode.WBP_QrCode_C.OnQrReceived
// 0x0028 (0x0028 - 0x0000)
struct WBP_QrCode_C_OnQrReceived final
{
public:
	class FString                                 Link;                                              // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	TArray<uint8>                                 QrData;                                            // 0x0010(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	int32                                         Size;                                              // 0x0020(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_QrCode_C_OnQrReceived) == 0x000008, "Wrong alignment on WBP_QrCode_C_OnQrReceived");
static_assert(sizeof(WBP_QrCode_C_OnQrReceived) == 0x000028, "Wrong size on WBP_QrCode_C_OnQrReceived");
static_assert(offsetof(WBP_QrCode_C_OnQrReceived, Link) == 0x000000, "Member 'WBP_QrCode_C_OnQrReceived::Link' has a wrong offset!");
static_assert(offsetof(WBP_QrCode_C_OnQrReceived, QrData) == 0x000010, "Member 'WBP_QrCode_C_OnQrReceived::QrData' has a wrong offset!");
static_assert(offsetof(WBP_QrCode_C_OnQrReceived, Size) == 0x000020, "Member 'WBP_QrCode_C_OnQrReceived::Size' has a wrong offset!");

}

