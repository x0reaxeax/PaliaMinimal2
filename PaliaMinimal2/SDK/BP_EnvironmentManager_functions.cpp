#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_EnvironmentManager

#include "Basic.hpp"

#include "BP_EnvironmentManager_classes.hpp"
#include "BP_EnvironmentManager_parameters.hpp"


namespace SDK
{

// Function BP_EnvironmentManager.BP_EnvironmentManager_C.UpdateIntensityOfWind
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  WindDelta                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UTimelineComponent*               Timeline                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// bool                                    bSkipWindIntensityUpdate                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  WindScale                                              (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  MaxWindSpeed                                           (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  MinWindSpeed                                           (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  PreviousWindY                                          (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  PreviousWindX                                          (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  WindOffsetUpdateFreq                                   (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  CallFunc_Lerp_ReturnValue                              (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_EnvironmentManager_C::UpdateIntensityOfWind(double WindDelta, class UTimelineComponent* Timeline, bool bSkipWindIntensityUpdate, double WindScale, double MaxWindSpeed, double MinWindSpeed, double PreviousWindY, double PreviousWindX, double WindOffsetUpdateFreq, double CallFunc_Lerp_ReturnValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EnvironmentManager_C", "UpdateIntensityOfWind");

	Params::BP_EnvironmentManager_C_UpdateIntensityOfWind Parms{};

	Parms.WindDelta = WindDelta;
	Parms.Timeline = Timeline;
	Parms.bSkipWindIntensityUpdate = bSkipWindIntensityUpdate;
	Parms.WindScale = WindScale;
	Parms.MaxWindSpeed = MaxWindSpeed;
	Parms.MinWindSpeed = MinWindSpeed;
	Parms.PreviousWindY = PreviousWindY;
	Parms.PreviousWindX = PreviousWindX;
	Parms.WindOffsetUpdateFreq = WindOffsetUpdateFreq;
	Parms.CallFunc_Lerp_ReturnValue = CallFunc_Lerp_ReturnValue;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_EnvironmentManager.BP_EnvironmentManager_C.WindUVTimeline__UpdateFunc
// (BlueprintEvent)

void ABP_EnvironmentManager_C::WindUVTimeline__UpdateFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EnvironmentManager_C", "WindUVTimeline__UpdateFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_EnvironmentManager.BP_EnvironmentManager_C.WindUVTimeline__FinishedFunc
// (BlueprintEvent)

void ABP_EnvironmentManager_C::WindUVTimeline__FinishedFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EnvironmentManager_C", "WindUVTimeline__FinishedFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_EnvironmentManager.BP_EnvironmentManager_C.WindIntensityTimeline__UpdateFunc
// (BlueprintEvent)

void ABP_EnvironmentManager_C::WindIntensityTimeline__UpdateFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EnvironmentManager_C", "WindIntensityTimeline__UpdateFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_EnvironmentManager.BP_EnvironmentManager_C.WindIntensityTimeline__FinishedFunc
// (BlueprintEvent)

void ABP_EnvironmentManager_C::WindIntensityTimeline__FinishedFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EnvironmentManager_C", "WindIntensityTimeline__FinishedFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_EnvironmentManager.BP_EnvironmentManager_C.WeatherPendingChange
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FWeatherStateProperties          PendingState                                           (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm)
// int32                                   CountdownTime                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_EnvironmentManager_C::WeatherPendingChange(struct FWeatherStateProperties& PendingState, int32 CountdownTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EnvironmentManager_C", "WeatherPendingChange");

	Params::BP_EnvironmentManager_C_WeatherPendingChange Parms{};

	Parms.PendingState = std::move(PendingState);
	Parms.CountdownTime = CountdownTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_EnvironmentManager.BP_EnvironmentManager_C.WeatherChangeEvent
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FWeatherStateProperties          PendingState                                           (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// double                                  Time                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FName                             CurrentWeatherStateName                                (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FName                             OverrideName                                           (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  TransitionTime                                         (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    K2Node_SwitchName_CmpSuccess                           (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    CallFunc_NotEqual_NameName_ReturnValue                 (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  CallFunc_Divide_DoubleDouble_ReturnValue               (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UValeriaWeather*                  CallFunc_GetWorldSubsystem_ReturnValue                 (ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool                                    GameplayTagsK2Node_SwitchGameplayTagContainer_CmpSuccess(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FName                             CallFunc_GetWeatherStateOverride_ReturnValue           (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  CallFunc_Divide_DoubleDouble_ReturnValue_1             (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    CallFunc_NotEqual_NameName_ReturnValue_1               (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UValeriaWeather*                  CallFunc_GetWorldSubsystem_ReturnValue_1               (ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// struct FWeatherStateProperties          CallFunc_GetCurrentWorldWeatherState_ReturnValue       ()

void ABP_EnvironmentManager_C::WeatherChangeEvent(struct FWeatherStateProperties& PendingState, double Time, class FName CurrentWeatherStateName, class FName OverrideName, double TransitionTime, bool K2Node_SwitchName_CmpSuccess, bool CallFunc_NotEqual_NameName_ReturnValue, double CallFunc_Divide_DoubleDouble_ReturnValue, class UValeriaWeather* CallFunc_GetWorldSubsystem_ReturnValue, bool GameplayTagsK2Node_SwitchGameplayTagContainer_CmpSuccess, class FName CallFunc_GetWeatherStateOverride_ReturnValue, double CallFunc_Divide_DoubleDouble_ReturnValue_1, bool CallFunc_NotEqual_NameName_ReturnValue_1, class UValeriaWeather* CallFunc_GetWorldSubsystem_ReturnValue_1, const struct FWeatherStateProperties& CallFunc_GetCurrentWorldWeatherState_ReturnValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EnvironmentManager_C", "WeatherChangeEvent");

	Params::BP_EnvironmentManager_C_WeatherChangeEvent Parms{};

	Parms.PendingState = std::move(PendingState);
	Parms.Time = Time;
	Parms.CurrentWeatherStateName = CurrentWeatherStateName;
	Parms.OverrideName = OverrideName;
	Parms.TransitionTime = TransitionTime;
	Parms.K2Node_SwitchName_CmpSuccess = K2Node_SwitchName_CmpSuccess;
	Parms.CallFunc_NotEqual_NameName_ReturnValue = CallFunc_NotEqual_NameName_ReturnValue;
	Parms.CallFunc_Divide_DoubleDouble_ReturnValue = CallFunc_Divide_DoubleDouble_ReturnValue;
	Parms.CallFunc_GetWorldSubsystem_ReturnValue = CallFunc_GetWorldSubsystem_ReturnValue;
	Parms.GameplayTagsK2Node_SwitchGameplayTagContainer_CmpSuccess = GameplayTagsK2Node_SwitchGameplayTagContainer_CmpSuccess;
	Parms.CallFunc_GetWeatherStateOverride_ReturnValue = CallFunc_GetWeatherStateOverride_ReturnValue;
	Parms.CallFunc_Divide_DoubleDouble_ReturnValue_1 = CallFunc_Divide_DoubleDouble_ReturnValue_1;
	Parms.CallFunc_NotEqual_NameName_ReturnValue_1 = CallFunc_NotEqual_NameName_ReturnValue_1;
	Parms.CallFunc_GetWorldSubsystem_ReturnValue_1 = CallFunc_GetWorldSubsystem_ReturnValue_1;
	Parms.CallFunc_GetCurrentWorldWeatherState_ReturnValue = std::move(CallFunc_GetCurrentWorldWeatherState_ReturnValue);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_EnvironmentManager.BP_EnvironmentManager_C.UserConstructionScript
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    CallFunc_IsValid_ReturnValue                           (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    CallFunc_IsValid_ReturnValue_1                         (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    CallFunc_IsValid_ReturnValue_2                         (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_EnvironmentManager_C::UserConstructionScript(bool CallFunc_IsValid_ReturnValue, bool CallFunc_IsValid_ReturnValue_1, bool CallFunc_IsValid_ReturnValue_2)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EnvironmentManager_C", "UserConstructionScript");

	Params::BP_EnvironmentManager_C_UserConstructionScript Parms{};

	Parms.CallFunc_IsValid_ReturnValue = CallFunc_IsValid_ReturnValue;
	Parms.CallFunc_IsValid_ReturnValue_1 = CallFunc_IsValid_ReturnValue_1;
	Parms.CallFunc_IsValid_ReturnValue_2 = CallFunc_IsValid_ReturnValue_2;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_EnvironmentManager.BP_EnvironmentManager_C.UpdateWindUVTargets
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bTargetIsZero                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  WindSpeedMax                                           (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  WindSpeedMin                                           (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   CallFunc_Blueprint_GetSizeY_ReturnValue                (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    CallFunc_NearlyEqual_FloatFloat_ReturnValue            (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    CallFunc_EqualEqual_IntInt_ReturnValue                 (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   CallFunc_Blueprint_GetSizeX_ReturnValue                (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    CallFunc_EqualEqual_IntInt_ReturnValue_1               (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    CallFunc_BooleanOR_ReturnValue                         (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    CallFunc_BooleanOR_ReturnValue_1                       (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   CallFunc_Blueprint_GetSizeY_ReturnValue_1              (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   CallFunc_Blueprint_GetSizeX_ReturnValue_1              (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  CallFunc_Conv_IntToDouble_ReturnValue                  (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  CallFunc_Conv_IntToDouble_ReturnValue_1                (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   CallFunc_GetScalarParameterValue_ReturnValue           (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  CallFunc_Lerp_ReturnValue                              (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  CallFunc_Divide_DoubleDouble_ReturnValue               (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FLinearColor                     CallFunc_GetVectorParameterValue_ReturnValue           (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          CallFunc_Conv_LinearColorToVector_ReturnValue          (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  CallFunc_BreakVector_X                                 (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  CallFunc_BreakVector_Y                                 (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  CallFunc_BreakVector_Z                                 (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  CallFunc_Multiply_DoubleDouble_ReturnValue             (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  CallFunc_Multiply_DoubleDouble_ReturnValue_1           (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  CallFunc_Subtract_DoubleDouble_ReturnValue             (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  CallFunc_Subtract_DoubleDouble_ReturnValue_1           (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  CallFunc_Percent_FloatFloat_ReturnValue                (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  CallFunc_Percent_FloatFloat_ReturnValue_1              (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  CallFunc_Lerp_Alpha_ImplicitCast                       (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_EnvironmentManager_C::UpdateWindUVTargets(bool* bTargetIsZero, double WindSpeedMax, double WindSpeedMin, int32 CallFunc_Blueprint_GetSizeY_ReturnValue, bool CallFunc_NearlyEqual_FloatFloat_ReturnValue, bool CallFunc_EqualEqual_IntInt_ReturnValue, int32 CallFunc_Blueprint_GetSizeX_ReturnValue, bool CallFunc_EqualEqual_IntInt_ReturnValue_1, bool CallFunc_BooleanOR_ReturnValue, bool CallFunc_BooleanOR_ReturnValue_1, int32 CallFunc_Blueprint_GetSizeY_ReturnValue_1, int32 CallFunc_Blueprint_GetSizeX_ReturnValue_1, double CallFunc_Conv_IntToDouble_ReturnValue, double CallFunc_Conv_IntToDouble_ReturnValue_1, float CallFunc_GetScalarParameterValue_ReturnValue, double CallFunc_Lerp_ReturnValue, double CallFunc_Divide_DoubleDouble_ReturnValue, const struct FLinearColor& CallFunc_GetVectorParameterValue_ReturnValue, const struct FVector& CallFunc_Conv_LinearColorToVector_ReturnValue, double CallFunc_BreakVector_X, double CallFunc_BreakVector_Y, double CallFunc_BreakVector_Z, double CallFunc_Multiply_DoubleDouble_ReturnValue, double CallFunc_Multiply_DoubleDouble_ReturnValue_1, double CallFunc_Subtract_DoubleDouble_ReturnValue, double CallFunc_Subtract_DoubleDouble_ReturnValue_1, double CallFunc_Percent_FloatFloat_ReturnValue, double CallFunc_Percent_FloatFloat_ReturnValue_1, double CallFunc_Lerp_Alpha_ImplicitCast)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EnvironmentManager_C", "UpdateWindUVTargets");

	Params::BP_EnvironmentManager_C_UpdateWindUVTargets Parms{};

	Parms.WindSpeedMax = WindSpeedMax;
	Parms.WindSpeedMin = WindSpeedMin;
	Parms.CallFunc_Blueprint_GetSizeY_ReturnValue = CallFunc_Blueprint_GetSizeY_ReturnValue;
	Parms.CallFunc_NearlyEqual_FloatFloat_ReturnValue = CallFunc_NearlyEqual_FloatFloat_ReturnValue;
	Parms.CallFunc_EqualEqual_IntInt_ReturnValue = CallFunc_EqualEqual_IntInt_ReturnValue;
	Parms.CallFunc_Blueprint_GetSizeX_ReturnValue = CallFunc_Blueprint_GetSizeX_ReturnValue;
	Parms.CallFunc_EqualEqual_IntInt_ReturnValue_1 = CallFunc_EqualEqual_IntInt_ReturnValue_1;
	Parms.CallFunc_BooleanOR_ReturnValue = CallFunc_BooleanOR_ReturnValue;
	Parms.CallFunc_BooleanOR_ReturnValue_1 = CallFunc_BooleanOR_ReturnValue_1;
	Parms.CallFunc_Blueprint_GetSizeY_ReturnValue_1 = CallFunc_Blueprint_GetSizeY_ReturnValue_1;
	Parms.CallFunc_Blueprint_GetSizeX_ReturnValue_1 = CallFunc_Blueprint_GetSizeX_ReturnValue_1;
	Parms.CallFunc_Conv_IntToDouble_ReturnValue = CallFunc_Conv_IntToDouble_ReturnValue;
	Parms.CallFunc_Conv_IntToDouble_ReturnValue_1 = CallFunc_Conv_IntToDouble_ReturnValue_1;
	Parms.CallFunc_GetScalarParameterValue_ReturnValue = CallFunc_GetScalarParameterValue_ReturnValue;
	Parms.CallFunc_Lerp_ReturnValue = CallFunc_Lerp_ReturnValue;
	Parms.CallFunc_Divide_DoubleDouble_ReturnValue = CallFunc_Divide_DoubleDouble_ReturnValue;
	Parms.CallFunc_GetVectorParameterValue_ReturnValue = std::move(CallFunc_GetVectorParameterValue_ReturnValue);
	Parms.CallFunc_Conv_LinearColorToVector_ReturnValue = std::move(CallFunc_Conv_LinearColorToVector_ReturnValue);
	Parms.CallFunc_BreakVector_X = CallFunc_BreakVector_X;
	Parms.CallFunc_BreakVector_Y = CallFunc_BreakVector_Y;
	Parms.CallFunc_BreakVector_Z = CallFunc_BreakVector_Z;
	Parms.CallFunc_Multiply_DoubleDouble_ReturnValue = CallFunc_Multiply_DoubleDouble_ReturnValue;
	Parms.CallFunc_Multiply_DoubleDouble_ReturnValue_1 = CallFunc_Multiply_DoubleDouble_ReturnValue_1;
	Parms.CallFunc_Subtract_DoubleDouble_ReturnValue = CallFunc_Subtract_DoubleDouble_ReturnValue;
	Parms.CallFunc_Subtract_DoubleDouble_ReturnValue_1 = CallFunc_Subtract_DoubleDouble_ReturnValue_1;
	Parms.CallFunc_Percent_FloatFloat_ReturnValue = CallFunc_Percent_FloatFloat_ReturnValue;
	Parms.CallFunc_Percent_FloatFloat_ReturnValue_1 = CallFunc_Percent_FloatFloat_ReturnValue_1;
	Parms.CallFunc_Lerp_Alpha_ImplicitCast = CallFunc_Lerp_Alpha_ImplicitCast;

	UObject::ProcessEvent(Func, &Parms);

	if (bTargetIsZero != nullptr)
		*bTargetIsZero = Parms.bTargetIsZero;
}


// Function BP_EnvironmentManager.BP_EnvironmentManager_C.UpdateWindUVOffsets
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   InputPin                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FLinearColor                     CallFunc_GetVectorParameterValue_ReturnValue           (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UNiagaraParameterCollectionInstance*CallFunc_GetNiagaraParameterCollection_ReturnValue     (ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// struct FVector                          CallFunc_Conv_LinearColorToVector_ReturnValue          (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  CallFunc_Lerp_ReturnValue                              (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  CallFunc_Lerp_ReturnValue_1                            (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector2D                        CallFunc_MakeVector2D_ReturnValue                      (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  CallFunc_Lerp_Alpha_ImplicitCast                       (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  CallFunc_Lerp_Alpha_ImplicitCast_1                     (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_1(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_EnvironmentManager_C::UpdateWindUVOffsets(float InputPin, const struct FLinearColor& CallFunc_GetVectorParameterValue_ReturnValue, class UNiagaraParameterCollectionInstance* CallFunc_GetNiagaraParameterCollection_ReturnValue, const struct FVector& CallFunc_Conv_LinearColorToVector_ReturnValue, double CallFunc_Lerp_ReturnValue, double CallFunc_Lerp_ReturnValue_1, const struct FVector2D& CallFunc_MakeVector2D_ReturnValue, double CallFunc_Lerp_Alpha_ImplicitCast, double CallFunc_Lerp_Alpha_ImplicitCast_1, float CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast, float CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_1)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EnvironmentManager_C", "UpdateWindUVOffsets");

	Params::BP_EnvironmentManager_C_UpdateWindUVOffsets Parms{};

	Parms.InputPin = InputPin;
	Parms.CallFunc_GetVectorParameterValue_ReturnValue = std::move(CallFunc_GetVectorParameterValue_ReturnValue);
	Parms.CallFunc_GetNiagaraParameterCollection_ReturnValue = CallFunc_GetNiagaraParameterCollection_ReturnValue;
	Parms.CallFunc_Conv_LinearColorToVector_ReturnValue = std::move(CallFunc_Conv_LinearColorToVector_ReturnValue);
	Parms.CallFunc_Lerp_ReturnValue = CallFunc_Lerp_ReturnValue;
	Parms.CallFunc_Lerp_ReturnValue_1 = CallFunc_Lerp_ReturnValue_1;
	Parms.CallFunc_MakeVector2D_ReturnValue = std::move(CallFunc_MakeVector2D_ReturnValue);
	Parms.CallFunc_Lerp_Alpha_ImplicitCast = CallFunc_Lerp_Alpha_ImplicitCast;
	Parms.CallFunc_Lerp_Alpha_ImplicitCast_1 = CallFunc_Lerp_Alpha_ImplicitCast_1;
	Parms.CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast = CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast;
	Parms.CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_1 = CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_1;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_EnvironmentManager.BP_EnvironmentManager_C.UpdateWindState
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// E_WindStates                            CallFunc_GetWindStateRandomWeighted_ReturnValue        (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_EnvironmentManager_C::UpdateWindState(E_WindStates CallFunc_GetWindStateRandomWeighted_ReturnValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EnvironmentManager_C", "UpdateWindState");

	Params::BP_EnvironmentManager_C_UpdateWindState Parms{};

	Parms.CallFunc_GetWindStateRandomWeighted_ReturnValue = CallFunc_GetWindStateRandomWeighted_ReturnValue;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_EnvironmentManager.BP_EnvironmentManager_C.UpdateEnvMPC
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  Time                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          CallFunc_Conv_DoubleToVector_ReturnValue               (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          CallFunc_GetForwardVector_ReturnValue                  (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          CallFunc_Multiply_VectorVector_ReturnValue             (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          CallFunc_K2_GetComponentLocation_ReturnValue           (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FLinearColor                     CallFunc_Conv_VectorToLinearColor_ReturnValue          (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          CallFunc_K2_GetComponentLocation_ReturnValue_1         (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    CallFunc_InRange_FloatFloat_ReturnValue                (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FLinearColor                     CallFunc_GetLightColor_ReturnValue                     (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          CallFunc_SelectVector_ReturnValue                      (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FLinearColor                     CallFunc_Conv_VectorToLinearColor_ReturnValue_1        (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_EnvironmentManager_C::UpdateEnvMPC(double Time, const struct FVector& CallFunc_Conv_DoubleToVector_ReturnValue, const struct FVector& CallFunc_GetForwardVector_ReturnValue, const struct FVector& CallFunc_Multiply_VectorVector_ReturnValue, const struct FVector& CallFunc_K2_GetComponentLocation_ReturnValue, const struct FLinearColor& CallFunc_Conv_VectorToLinearColor_ReturnValue, const struct FVector& CallFunc_K2_GetComponentLocation_ReturnValue_1, bool CallFunc_InRange_FloatFloat_ReturnValue, const struct FLinearColor& CallFunc_GetLightColor_ReturnValue, const struct FVector& CallFunc_SelectVector_ReturnValue, const struct FLinearColor& CallFunc_Conv_VectorToLinearColor_ReturnValue_1, float CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EnvironmentManager_C", "UpdateEnvMPC");

	Params::BP_EnvironmentManager_C_UpdateEnvMPC Parms{};

	Parms.Time = Time;
	Parms.CallFunc_Conv_DoubleToVector_ReturnValue = std::move(CallFunc_Conv_DoubleToVector_ReturnValue);
	Parms.CallFunc_GetForwardVector_ReturnValue = std::move(CallFunc_GetForwardVector_ReturnValue);
	Parms.CallFunc_Multiply_VectorVector_ReturnValue = std::move(CallFunc_Multiply_VectorVector_ReturnValue);
	Parms.CallFunc_K2_GetComponentLocation_ReturnValue = std::move(CallFunc_K2_GetComponentLocation_ReturnValue);
	Parms.CallFunc_Conv_VectorToLinearColor_ReturnValue = std::move(CallFunc_Conv_VectorToLinearColor_ReturnValue);
	Parms.CallFunc_K2_GetComponentLocation_ReturnValue_1 = std::move(CallFunc_K2_GetComponentLocation_ReturnValue_1);
	Parms.CallFunc_InRange_FloatFloat_ReturnValue = CallFunc_InRange_FloatFloat_ReturnValue;
	Parms.CallFunc_GetLightColor_ReturnValue = std::move(CallFunc_GetLightColor_ReturnValue);
	Parms.CallFunc_SelectVector_ReturnValue = std::move(CallFunc_SelectVector_ReturnValue);
	Parms.CallFunc_Conv_VectorToLinearColor_ReturnValue_1 = std::move(CallFunc_Conv_VectorToLinearColor_ReturnValue_1);
	Parms.CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast = CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_EnvironmentManager.BP_EnvironmentManager_C.UpdateEnvAudio
// (Protected, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  Time                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  WindStrength                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  AudioTimeScale                                         (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  CallFunc_Multiply_DoubleDouble_ReturnValue             (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_EnvironmentManager_C::UpdateEnvAudio(double Time, double WindStrength, double AudioTimeScale, double CallFunc_Multiply_DoubleDouble_ReturnValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EnvironmentManager_C", "UpdateEnvAudio");

	Params::BP_EnvironmentManager_C_UpdateEnvAudio Parms{};

	Parms.Time = Time;
	Parms.WindStrength = WindStrength;
	Parms.AudioTimeScale = AudioTimeScale;
	Parms.CallFunc_Multiply_DoubleDouble_ReturnValue = CallFunc_Multiply_DoubleDouble_ReturnValue;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_EnvironmentManager.BP_EnvironmentManager_C.ToggleStars
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_EnvironmentManager_C::ToggleStars()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EnvironmentManager_C", "ToggleStars");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_EnvironmentManager.BP_EnvironmentManager_C.TestThingy
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_EnvironmentManager_C::TestThingy()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EnvironmentManager_C", "TestThingy");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_EnvironmentManager.BP_EnvironmentManager_C.StartWindTextureUpdate
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_EnvironmentManager_C::StartWindTextureUpdate()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EnvironmentManager_C", "StartWindTextureUpdate");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_EnvironmentManager.BP_EnvironmentManager_C.SetWindIntensity
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  NewIntensity                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UNiagaraParameterCollectionInstance*CallFunc_GetNiagaraParameterCollection_ReturnValue     (ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// float                                   CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   CallFunc_SetFloatParameter_InValue_ImplicitCast        (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_EnvironmentManager_C::SetWindIntensity(double NewIntensity, class UNiagaraParameterCollectionInstance* CallFunc_GetNiagaraParameterCollection_ReturnValue, float CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast, float CallFunc_SetFloatParameter_InValue_ImplicitCast)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EnvironmentManager_C", "SetWindIntensity");

	Params::BP_EnvironmentManager_C_SetWindIntensity Parms{};

	Parms.NewIntensity = NewIntensity;
	Parms.CallFunc_GetNiagaraParameterCollection_ReturnValue = CallFunc_GetNiagaraParameterCollection_ReturnValue;
	Parms.CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast = CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast;
	Parms.CallFunc_SetFloatParameter_InValue_ImplicitCast = CallFunc_SetFloatParameter_InValue_ImplicitCast;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_EnvironmentManager.BP_EnvironmentManager_C.SetInitialMusic
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UBP_MusicManager_C*               CallFunc_GetMusicManager_AsBP_Music_Manager            (ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class UValeriaTimeManager*              CallFunc_GetGameInstanceSubsystem_ReturnValue          (ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// struct FTimeOfDayFilter                 K2Node_MakeStruct_TimeOfDayFilter                      (NoDestructor)
// bool                                    CallFunc_IsWithinTimeOfDayFilter_ReturnValue           (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_EnvironmentManager_C::SetInitialMusic(class UBP_MusicManager_C* CallFunc_GetMusicManager_AsBP_Music_Manager, class UValeriaTimeManager* CallFunc_GetGameInstanceSubsystem_ReturnValue, const struct FTimeOfDayFilter& K2Node_MakeStruct_TimeOfDayFilter, bool CallFunc_IsWithinTimeOfDayFilter_ReturnValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EnvironmentManager_C", "SetInitialMusic");

	Params::BP_EnvironmentManager_C_SetInitialMusic Parms{};

	Parms.CallFunc_GetMusicManager_AsBP_Music_Manager = CallFunc_GetMusicManager_AsBP_Music_Manager;
	Parms.CallFunc_GetGameInstanceSubsystem_ReturnValue = CallFunc_GetGameInstanceSubsystem_ReturnValue;
	Parms.K2Node_MakeStruct_TimeOfDayFilter = std::move(K2Node_MakeStruct_TimeOfDayFilter);
	Parms.CallFunc_IsWithinTimeOfDayFilter_ReturnValue = CallFunc_IsWithinTimeOfDayFilter_ReturnValue;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_EnvironmentManager.BP_EnvironmentManager_C.RotatePlanetMeshes
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  Time                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_EnvironmentManager_C::RotatePlanetMeshes(double Time)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EnvironmentManager_C", "RotatePlanetMeshes");

	Params::BP_EnvironmentManager_C_RotatePlanetMeshes Parms{};

	Parms.Time = Time;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_EnvironmentManager.BP_EnvironmentManager_C.RefreshWindParams
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   CallFunc_GetTimelineLength_ReturnValue                 (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  CallFunc_Get_Wind_State_Value_ReturnValue              (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  CallFunc_Divide_DoubleDouble_ReturnValue               (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  CallFunc_Divide_DoubleDouble_A_ImplicitCast            (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   CallFunc_SetPlayRate_NewRate_ImplicitCast              (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_EnvironmentManager_C::RefreshWindParams(float CallFunc_GetTimelineLength_ReturnValue, double CallFunc_Get_Wind_State_Value_ReturnValue, double CallFunc_Divide_DoubleDouble_ReturnValue, double CallFunc_Divide_DoubleDouble_A_ImplicitCast, float CallFunc_SetPlayRate_NewRate_ImplicitCast)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EnvironmentManager_C", "RefreshWindParams");

	Params::BP_EnvironmentManager_C_RefreshWindParams Parms{};

	Parms.CallFunc_GetTimelineLength_ReturnValue = CallFunc_GetTimelineLength_ReturnValue;
	Parms.CallFunc_Get_Wind_State_Value_ReturnValue = CallFunc_Get_Wind_State_Value_ReturnValue;
	Parms.CallFunc_Divide_DoubleDouble_ReturnValue = CallFunc_Divide_DoubleDouble_ReturnValue;
	Parms.CallFunc_Divide_DoubleDouble_A_ImplicitCast = CallFunc_Divide_DoubleDouble_A_ImplicitCast;
	Parms.CallFunc_SetPlayRate_NewRate_ImplicitCast = CallFunc_SetPlayRate_NewRate_ImplicitCast;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_EnvironmentManager.BP_EnvironmentManager_C.ReceiveTick
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_EnvironmentManager_C::ReceiveTick(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EnvironmentManager_C", "ReceiveTick");

	Params::BP_EnvironmentManager_C_ReceiveTick Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_EnvironmentManager.BP_EnvironmentManager_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void ABP_EnvironmentManager_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EnvironmentManager_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_EnvironmentManager.BP_EnvironmentManager_C.PlayWindTextureUpdate
// (BlueprintCallable, BlueprintEvent)

void ABP_EnvironmentManager_C::PlayWindTextureUpdate()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EnvironmentManager_C", "PlayWindTextureUpdate");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_EnvironmentManager.BP_EnvironmentManager_C.PlayWind
// (BlueprintCallable, BlueprintEvent)

void ABP_EnvironmentManager_C::PlayWind()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EnvironmentManager_C", "PlayWind");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_EnvironmentManager.BP_EnvironmentManager_C.OverrideWindIntensity
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  Intensity                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_EnvironmentManager_C::OverrideWindIntensity(double Intensity)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EnvironmentManager_C", "OverrideWindIntensity");

	Params::BP_EnvironmentManager_C_OverrideWindIntensity Parms{};

	Parms.Intensity = Intensity;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_EnvironmentManager.BP_EnvironmentManager_C.OvercastWeather2
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  TransitionTime                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  Amount                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_EnvironmentManager_C::OvercastWeather2(double TransitionTime, double Amount)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EnvironmentManager_C", "OvercastWeather2");

	Params::BP_EnvironmentManager_C_OvercastWeather2 Parms{};

	Parms.TransitionTime = TransitionTime;
	Parms.Amount = Amount;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_EnvironmentManager.BP_EnvironmentManager_C.Overcast_Transition__UpdateFunc
// (BlueprintEvent)

void ABP_EnvironmentManager_C::Overcast_Transition__UpdateFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EnvironmentManager_C", "Overcast_Transition__UpdateFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_EnvironmentManager.BP_EnvironmentManager_C.Overcast_Transition__FinishedFunc
// (BlueprintEvent)

void ABP_EnvironmentManager_C::Overcast_Transition__FinishedFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EnvironmentManager_C", "Overcast_Transition__FinishedFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_EnvironmentManager.BP_EnvironmentManager_C.OnNight
// (Event, Public, BlueprintEvent)

void ABP_EnvironmentManager_C::OnNight()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EnvironmentManager_C", "OnNight");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_EnvironmentManager.BP_EnvironmentManager_C.OnMorning
// (Event, Public, BlueprintEvent)

void ABP_EnvironmentManager_C::OnMorning()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EnvironmentManager_C", "OnMorning");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_EnvironmentManager.BP_EnvironmentManager_C.OnEvening
// (Event, Public, BlueprintEvent)

void ABP_EnvironmentManager_C::OnEvening()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EnvironmentManager_C", "OnEvening");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_EnvironmentManager.BP_EnvironmentManager_C.OnDay
// (Event, Public, BlueprintEvent)

void ABP_EnvironmentManager_C::OnDay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EnvironmentManager_C", "OnDay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_EnvironmentManager.BP_EnvironmentManager_C.MusicCallback
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           UserCueName                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)

void ABP_EnvironmentManager_C::MusicCallback(const class FString& UserCueName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EnvironmentManager_C", "MusicCallback");

	Params::BP_EnvironmentManager_C_MusicCallback Parms{};

	Parms.UserCueName = std::move(UserCueName);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_EnvironmentManager.BP_EnvironmentManager_C.InitializeEnvAudio
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TDelegate<void(const class FString& UserCueName)>DayNightMusicCallback                                  (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash)
// class UBP_MusicManager_C*               CallFunc_GetMusicManager_AsBP_Music_Manager            (ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool                                    CallFunc_IsValid_ReturnValue                           (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_EnvironmentManager_C::InitializeEnvAudio(TDelegate<void(const class FString& UserCueName)>& DayNightMusicCallback, class UBP_MusicManager_C* CallFunc_GetMusicManager_AsBP_Music_Manager, bool CallFunc_IsValid_ReturnValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EnvironmentManager_C", "InitializeEnvAudio");

	Params::BP_EnvironmentManager_C_InitializeEnvAudio Parms{};

	Parms.DayNightMusicCallback = DayNightMusicCallback;
	Parms.CallFunc_GetMusicManager_AsBP_Music_Manager = CallFunc_GetMusicManager_AsBP_Music_Manager;
	Parms.CallFunc_IsValid_ReturnValue = CallFunc_IsValid_ReturnValue;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_EnvironmentManager.BP_EnvironmentManager_C.IgnoreMusTransition
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    IgnoreDayNightTransition                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UBP_MusicManager_C*               CallFunc_GetMusicManager_AsBP_Music_Manager            (ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool                                    CallFunc_IsValid_ReturnValue                           (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_EnvironmentManager_C::IgnoreMusTransition(bool* IgnoreDayNightTransition, class UBP_MusicManager_C* CallFunc_GetMusicManager_AsBP_Music_Manager, bool CallFunc_IsValid_ReturnValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EnvironmentManager_C", "IgnoreMusTransition");

	Params::BP_EnvironmentManager_C_IgnoreMusTransition Parms{};

	Parms.CallFunc_GetMusicManager_AsBP_Music_Manager = CallFunc_GetMusicManager_AsBP_Music_Manager;
	Parms.CallFunc_IsValid_ReturnValue = CallFunc_IsValid_ReturnValue;

	UObject::ProcessEvent(Func, &Parms);

	if (IgnoreDayNightTransition != nullptr)
		*IgnoreDayNightTransition = Parms.IgnoreDayNightTransition;
}


// Function BP_EnvironmentManager.BP_EnvironmentManager_C.GetWindStateRandomWeighted
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// E_WindStates                            ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  CurrentWeight                                          (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Param_Index                                            (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  Rand                                                   (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// E_WindStates                            Temp_byte_Variable                                     (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// E_WindStates                            Temp_byte_Variable_1                                   (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// E_WindStates                            Temp_byte_Variable_2                                   (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Temp_int_Array_Index_Variable                          (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Temp_int_Loop_Counter_Variable                         (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   CallFunc_Add_IntInt_ReturnValue                        (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    CallFunc_LessEqual_DoubleDouble_ReturnValue            (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Temp_int_Variable                                      (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// E_WindStates                            K2Node_Select_Default                                  (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  CallFunc_Array_Get_Item                                (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   CallFunc_Array_Length_ReturnValue                      (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  CallFunc_Add_DoubleDouble_ReturnValue                  (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    CallFunc_Less_IntInt_ReturnValue                       (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  CallFunc_RandomFloat_ReturnValue                       (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

E_WindStates ABP_EnvironmentManager_C::GetWindStateRandomWeighted(double CurrentWeight, int32 Param_Index, double Rand, E_WindStates Temp_byte_Variable, E_WindStates Temp_byte_Variable_1, E_WindStates Temp_byte_Variable_2, int32 Temp_int_Array_Index_Variable, int32 Temp_int_Loop_Counter_Variable, int32 CallFunc_Add_IntInt_ReturnValue, bool CallFunc_LessEqual_DoubleDouble_ReturnValue, int32 Temp_int_Variable, E_WindStates K2Node_Select_Default, double CallFunc_Array_Get_Item, int32 CallFunc_Array_Length_ReturnValue, double CallFunc_Add_DoubleDouble_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue, double CallFunc_RandomFloat_ReturnValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EnvironmentManager_C", "GetWindStateRandomWeighted");

	Params::BP_EnvironmentManager_C_GetWindStateRandomWeighted Parms{};

	Parms.CurrentWeight = CurrentWeight;
	Parms.Param_Index = Param_Index;
	Parms.Rand = Rand;
	Parms.Temp_byte_Variable = Temp_byte_Variable;
	Parms.Temp_byte_Variable_1 = Temp_byte_Variable_1;
	Parms.Temp_byte_Variable_2 = Temp_byte_Variable_2;
	Parms.Temp_int_Array_Index_Variable = Temp_int_Array_Index_Variable;
	Parms.Temp_int_Loop_Counter_Variable = Temp_int_Loop_Counter_Variable;
	Parms.CallFunc_Add_IntInt_ReturnValue = CallFunc_Add_IntInt_ReturnValue;
	Parms.CallFunc_LessEqual_DoubleDouble_ReturnValue = CallFunc_LessEqual_DoubleDouble_ReturnValue;
	Parms.Temp_int_Variable = Temp_int_Variable;
	Parms.K2Node_Select_Default = K2Node_Select_Default;
	Parms.CallFunc_Array_Get_Item = CallFunc_Array_Get_Item;
	Parms.CallFunc_Array_Length_ReturnValue = CallFunc_Array_Length_ReturnValue;
	Parms.CallFunc_Add_DoubleDouble_ReturnValue = CallFunc_Add_DoubleDouble_ReturnValue;
	Parms.CallFunc_Less_IntInt_ReturnValue = CallFunc_Less_IntInt_ReturnValue;
	Parms.CallFunc_RandomFloat_ReturnValue = CallFunc_RandomFloat_ReturnValue;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_EnvironmentManager.BP_EnvironmentManager_C.GetInitialArrowRotations
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          CallFunc_GetRightVector_ReturnValue                    (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          CallFunc_GetRightVector_ReturnValue_1                  (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          CallFunc_GetForwardVector_ReturnValue                  (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          CallFunc_GetForwardVector_ReturnValue_1                (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          CallFunc_GetForwardVector_ReturnValue_2                (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          CallFunc_GetRightVector_ReturnValue_2                  (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_EnvironmentManager_C::GetInitialArrowRotations(const struct FVector& CallFunc_GetRightVector_ReturnValue, const struct FVector& CallFunc_GetRightVector_ReturnValue_1, const struct FVector& CallFunc_GetForwardVector_ReturnValue, const struct FVector& CallFunc_GetForwardVector_ReturnValue_1, const struct FVector& CallFunc_GetForwardVector_ReturnValue_2, const struct FVector& CallFunc_GetRightVector_ReturnValue_2)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EnvironmentManager_C", "GetInitialArrowRotations");

	Params::BP_EnvironmentManager_C_GetInitialArrowRotations Parms{};

	Parms.CallFunc_GetRightVector_ReturnValue = std::move(CallFunc_GetRightVector_ReturnValue);
	Parms.CallFunc_GetRightVector_ReturnValue_1 = std::move(CallFunc_GetRightVector_ReturnValue_1);
	Parms.CallFunc_GetForwardVector_ReturnValue = std::move(CallFunc_GetForwardVector_ReturnValue);
	Parms.CallFunc_GetForwardVector_ReturnValue_1 = std::move(CallFunc_GetForwardVector_ReturnValue_1);
	Parms.CallFunc_GetForwardVector_ReturnValue_2 = std::move(CallFunc_GetForwardVector_ReturnValue_2);
	Parms.CallFunc_GetRightVector_ReturnValue_2 = std::move(CallFunc_GetRightVector_ReturnValue_2);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_EnvironmentManager.BP_EnvironmentManager_C.Get Wind State Value
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// double                                  ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FS_WindRanges                    EnvWindRanges                                          (Edit, BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// E_WindStates                            Temp_byte_Variable                                     (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  CallFunc_RandomFloatInRange_ReturnValue                (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  CallFunc_RandomFloatInRange_ReturnValue_1              (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  CallFunc_RandomFloatInRange_ReturnValue_2              (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  CallFunc_RandomFloatInRange_ReturnValue_3              (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  K2Node_Select_Default                                  (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  CallFunc_RandomFloatInRange_Max_ImplicitCast           (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  CallFunc_RandomFloatInRange_Max_ImplicitCast_1         (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  CallFunc_RandomFloatInRange_Min_ImplicitCast           (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  CallFunc_RandomFloatInRange_Min_ImplicitCast_1         (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  CallFunc_RandomFloatInRange_Max_ImplicitCast_2         (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  CallFunc_RandomFloatInRange_Max_ImplicitCast_3         (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  CallFunc_RandomFloatInRange_Min_ImplicitCast_2         (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  CallFunc_RandomFloatInRange_Min_ImplicitCast_3         (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

double ABP_EnvironmentManager_C::Get_Wind_State_Value(const struct FS_WindRanges& EnvWindRanges, E_WindStates Temp_byte_Variable, double CallFunc_RandomFloatInRange_ReturnValue, double CallFunc_RandomFloatInRange_ReturnValue_1, double CallFunc_RandomFloatInRange_ReturnValue_2, double CallFunc_RandomFloatInRange_ReturnValue_3, double K2Node_Select_Default, double CallFunc_RandomFloatInRange_Max_ImplicitCast, double CallFunc_RandomFloatInRange_Max_ImplicitCast_1, double CallFunc_RandomFloatInRange_Min_ImplicitCast, double CallFunc_RandomFloatInRange_Min_ImplicitCast_1, double CallFunc_RandomFloatInRange_Max_ImplicitCast_2, double CallFunc_RandomFloatInRange_Max_ImplicitCast_3, double CallFunc_RandomFloatInRange_Min_ImplicitCast_2, double CallFunc_RandomFloatInRange_Min_ImplicitCast_3)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EnvironmentManager_C", "Get Wind State Value");

	Params::BP_EnvironmentManager_C_Get_Wind_State_Value Parms{};

	Parms.EnvWindRanges = std::move(EnvWindRanges);
	Parms.Temp_byte_Variable = Temp_byte_Variable;
	Parms.CallFunc_RandomFloatInRange_ReturnValue = CallFunc_RandomFloatInRange_ReturnValue;
	Parms.CallFunc_RandomFloatInRange_ReturnValue_1 = CallFunc_RandomFloatInRange_ReturnValue_1;
	Parms.CallFunc_RandomFloatInRange_ReturnValue_2 = CallFunc_RandomFloatInRange_ReturnValue_2;
	Parms.CallFunc_RandomFloatInRange_ReturnValue_3 = CallFunc_RandomFloatInRange_ReturnValue_3;
	Parms.K2Node_Select_Default = K2Node_Select_Default;
	Parms.CallFunc_RandomFloatInRange_Max_ImplicitCast = CallFunc_RandomFloatInRange_Max_ImplicitCast;
	Parms.CallFunc_RandomFloatInRange_Max_ImplicitCast_1 = CallFunc_RandomFloatInRange_Max_ImplicitCast_1;
	Parms.CallFunc_RandomFloatInRange_Min_ImplicitCast = CallFunc_RandomFloatInRange_Min_ImplicitCast;
	Parms.CallFunc_RandomFloatInRange_Min_ImplicitCast_1 = CallFunc_RandomFloatInRange_Min_ImplicitCast_1;
	Parms.CallFunc_RandomFloatInRange_Max_ImplicitCast_2 = CallFunc_RandomFloatInRange_Max_ImplicitCast_2;
	Parms.CallFunc_RandomFloatInRange_Max_ImplicitCast_3 = CallFunc_RandomFloatInRange_Max_ImplicitCast_3;
	Parms.CallFunc_RandomFloatInRange_Min_ImplicitCast_2 = CallFunc_RandomFloatInRange_Min_ImplicitCast_2;
	Parms.CallFunc_RandomFloatInRange_Min_ImplicitCast_3 = CallFunc_RandomFloatInRange_Min_ImplicitCast_3;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_EnvironmentManager.BP_EnvironmentManager_C.ForceTickUpdate
// (BlueprintCallable, BlueprintEvent)

void ABP_EnvironmentManager_C::ForceTickUpdate()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EnvironmentManager_C", "ForceTickUpdate");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_EnvironmentManager.BP_EnvironmentManager_C.ExecuteUbergraph_BP_EnvironmentManager
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    CallFunc_IsValid_ReturnValue                           (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    CallFunc_GetIsNightTime_ReturnValue                    (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    CallFunc_GetIsTimeFrozen_ReturnValue                   (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   CallFunc_GetEnvManagerTimeOfDay_ReturnValue            (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Temp_bool_Variable                                     (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    CallFunc_GetIsTimeFrozen_ReturnValue_1                 (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FLinearColor                     K2Node_MakeStruct_LinearColor                          (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FLinearColor                     K2Node_MakeStruct_LinearColor_1                        (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FLinearColor                     K2Node_MakeStruct_LinearColor_2                        (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FLinearColor                     K2Node_MakeStruct_LinearColor_3                        (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Temp_bool_Has_Been_Initd_Variable                      (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   K2Node_Event_DeltaSeconds                              (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Temp_bool_IsClosed_Variable                            (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FWeatherStateProperties          K2Node_CustomEvent_pendingState                        (ConstParm)
// int32                                   K2Node_CustomEvent_countdownTime                       (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  CallFunc_Conv_IntToDouble_ReturnValue                  (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class APlayerController*                CallFunc_GetPlayerController_ReturnValue               (ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// double                                  CallFunc_Divide_DoubleDouble_ReturnValue               (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class APawn*                            CallFunc_K2_GetPawn_ReturnValue                        (ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool                                    CallFunc_IsValid_ReturnValue_1                         (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  K2Node_CustomEvent_TransitionTime_1                    (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  K2Node_CustomEvent_TransitionTime                      (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  K2Node_CustomEvent_Amount                              (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   CallFunc_GetTimelineLength_ReturnValue                 (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  CallFunc_Divide_DoubleDouble_ReturnValue_1             (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   CallFunc_GetScalarParameterValue_ReturnValue           (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TDelegate<void(const class FString& UserCueName)>K2Node_CreateDelegate_OutputDelegate                   (ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// float                                   CallFunc_GetScalarParameterValue_ReturnValue_1         (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   CallFunc_GetTimelineLength_ReturnValue_1               (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UValeriaWeather*                  CallFunc_GetWorldSubsystem_ReturnValue                 (ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// double                                  CallFunc_Divide_DoubleDouble_ReturnValue_2             (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FWeatherPatternConfig            CallFunc_GetCurrentWeatherData_ReturnValue             ()
// double                                  CallFunc_RandomFloatInRange_ReturnValue                (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UValeriaWeather*                  CallFunc_GetWorldSubsystem_ReturnValue_1               (ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// struct FWeatherStateProperties          CallFunc_GetCurrentWorldWeatherState_ReturnValue       ()
// double                                  CallFunc_Lerp_ReturnValue                              (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FString                           K2Node_CustomEvent_UserCueName                         (ZeroConstructor, HasGetValueTypeHash)
// double                                  CallFunc_Lerp_ReturnValue_1                            (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    CallFunc_EqualEqual_StrStr_ReturnValue                 (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TDelegate<void(struct FWeatherStateProperties& PendingState, int32 CountdownTime)>K2Node_CreateDelegate_OutputDelegate_1                 (ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// double                                  CallFunc_RandomFloatInRange_ReturnValue_1              (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  CallFunc_Add_DoubleDouble_ReturnValue                  (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    CallFunc_UpdateWindUVTargets_bTargetIsZero             (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UBP_MusicManager_C*               CallFunc_GetMusicManager_AsBP_Music_Manager            (ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool                                    CallFunc_IsValid_ReturnValue_2                         (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UValeriaWeather*                  CallFunc_GetWorldSubsystem_ReturnValue_2               (ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// struct FWeatherPatternConfig            CallFunc_GetCurrentWeatherData_ReturnValue_1           ()
// class UBP_MusicManager_C*               CallFunc_GetMusicManager_AsBP_Music_Manager_1          (ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// double                                  K2Node_CustomEvent_Time                                (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UAkSwitchValue*                   CallFunc_GetMusAfterDayNightTransition_MusTriggerAfterDayNight(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool                                    CallFunc_IsValid_ReturnValue_3                         (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    CallFunc_IgnoreMusTransition_IgnoreDayNightTransition  (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    CallFunc_IgnoreMusTransition_IgnoreDayNightTransition_1(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    CallFunc_DisableIfServer_ReturnValue                   (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// ERedirectsPlatform                      CallFunc_GetPlatformType_ReturnValue                   (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    K2Node_SwitchEnum_CmpSuccess                           (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   K2Node_Select_Default                                  (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   CallFunc_FreezeLightingAtTime_Time_ImplicitCast        (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   CallFunc_Delay_Duration_ImplicitCast                   (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  CallFunc_Divide_DoubleDouble_A_ImplicitCast            (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   CallFunc_SetPlayRate_NewRate_ImplicitCast              (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   CallFunc_Delay_Duration_ImplicitCast_1                 (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  K2Node_VariableSet_PreviousCloudiness_ImplicitCast     (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  K2Node_VariableSet_PreviousCloudiness_ImplicitCast_1   (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  CallFunc_Divide_DoubleDouble_A_ImplicitCast_1          (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   CallFunc_SetPlayRate_NewRate_ImplicitCast_1            (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  CallFunc_Lerp_Alpha_ImplicitCast                       (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  CallFunc_Lerp_Alpha_ImplicitCast_1                     (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_1(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  CallFunc_UpdateIntensityOfWind_WindDelta_ImplicitCast  (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   CallFunc_Delay_Duration_ImplicitCast_2                 (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   K2Node_Select_Option_1_ImplicitCast                    (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  CallFunc_RotatePlanetMeshes_Time_ImplicitCast          (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  CallFunc_UpdateEnvMPC_Time_ImplicitCast                (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  CallFunc_UpdateEnvAudio_Time_ImplicitCast              (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_EnvironmentManager_C::ExecuteUbergraph_BP_EnvironmentManager(int32 EntryPoint, bool CallFunc_IsValid_ReturnValue, bool CallFunc_GetIsNightTime_ReturnValue, bool CallFunc_GetIsTimeFrozen_ReturnValue, float CallFunc_GetEnvManagerTimeOfDay_ReturnValue, bool Temp_bool_Variable, bool CallFunc_GetIsTimeFrozen_ReturnValue_1, const struct FLinearColor& K2Node_MakeStruct_LinearColor, const struct FLinearColor& K2Node_MakeStruct_LinearColor_1, const struct FLinearColor& K2Node_MakeStruct_LinearColor_2, const struct FLinearColor& K2Node_MakeStruct_LinearColor_3, bool Temp_bool_Has_Been_Initd_Variable, float K2Node_Event_DeltaSeconds, bool Temp_bool_IsClosed_Variable, struct FWeatherStateProperties& K2Node_CustomEvent_pendingState, int32 K2Node_CustomEvent_countdownTime, double CallFunc_Conv_IntToDouble_ReturnValue, class APlayerController* CallFunc_GetPlayerController_ReturnValue, double CallFunc_Divide_DoubleDouble_ReturnValue, class APawn* CallFunc_K2_GetPawn_ReturnValue, bool CallFunc_IsValid_ReturnValue_1, double K2Node_CustomEvent_TransitionTime_1, double K2Node_CustomEvent_TransitionTime, double K2Node_CustomEvent_Amount, float CallFunc_GetTimelineLength_ReturnValue, double CallFunc_Divide_DoubleDouble_ReturnValue_1, float CallFunc_GetScalarParameterValue_ReturnValue, TDelegate<void(const class FString& UserCueName)> K2Node_CreateDelegate_OutputDelegate, float CallFunc_GetScalarParameterValue_ReturnValue_1, float CallFunc_GetTimelineLength_ReturnValue_1, class UValeriaWeather* CallFunc_GetWorldSubsystem_ReturnValue, double CallFunc_Divide_DoubleDouble_ReturnValue_2, const struct FWeatherPatternConfig& CallFunc_GetCurrentWeatherData_ReturnValue, double CallFunc_RandomFloatInRange_ReturnValue, class UValeriaWeather* CallFunc_GetWorldSubsystem_ReturnValue_1, const struct FWeatherStateProperties& CallFunc_GetCurrentWorldWeatherState_ReturnValue, double CallFunc_Lerp_ReturnValue, const class FString& K2Node_CustomEvent_UserCueName, double CallFunc_Lerp_ReturnValue_1, bool CallFunc_EqualEqual_StrStr_ReturnValue, TDelegate<void(struct FWeatherStateProperties& PendingState, int32 CountdownTime)> K2Node_CreateDelegate_OutputDelegate_1, double CallFunc_RandomFloatInRange_ReturnValue_1, double CallFunc_Add_DoubleDouble_ReturnValue, bool CallFunc_UpdateWindUVTargets_bTargetIsZero, class UBP_MusicManager_C* CallFunc_GetMusicManager_AsBP_Music_Manager, bool CallFunc_IsValid_ReturnValue_2, class UValeriaWeather* CallFunc_GetWorldSubsystem_ReturnValue_2, const struct FWeatherPatternConfig& CallFunc_GetCurrentWeatherData_ReturnValue_1, class UBP_MusicManager_C* CallFunc_GetMusicManager_AsBP_Music_Manager_1, double K2Node_CustomEvent_Time, class UAkSwitchValue* CallFunc_GetMusAfterDayNightTransition_MusTriggerAfterDayNight, bool CallFunc_IsValid_ReturnValue_3, bool CallFunc_IgnoreMusTransition_IgnoreDayNightTransition, bool CallFunc_IgnoreMusTransition_IgnoreDayNightTransition_1, bool CallFunc_DisableIfServer_ReturnValue, ERedirectsPlatform CallFunc_GetPlatformType_ReturnValue, bool K2Node_SwitchEnum_CmpSuccess, float K2Node_Select_Default, float CallFunc_FreezeLightingAtTime_Time_ImplicitCast, float CallFunc_Delay_Duration_ImplicitCast, double CallFunc_Divide_DoubleDouble_A_ImplicitCast, float CallFunc_SetPlayRate_NewRate_ImplicitCast, float CallFunc_Delay_Duration_ImplicitCast_1, double K2Node_VariableSet_PreviousCloudiness_ImplicitCast, double K2Node_VariableSet_PreviousCloudiness_ImplicitCast_1, double CallFunc_Divide_DoubleDouble_A_ImplicitCast_1, float CallFunc_SetPlayRate_NewRate_ImplicitCast_1, double CallFunc_Lerp_Alpha_ImplicitCast, float CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast, double CallFunc_Lerp_Alpha_ImplicitCast_1, float CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_1, double CallFunc_UpdateIntensityOfWind_WindDelta_ImplicitCast, float CallFunc_Delay_Duration_ImplicitCast_2, float K2Node_Select_Option_1_ImplicitCast, double CallFunc_RotatePlanetMeshes_Time_ImplicitCast, double CallFunc_UpdateEnvMPC_Time_ImplicitCast, double CallFunc_UpdateEnvAudio_Time_ImplicitCast)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EnvironmentManager_C", "ExecuteUbergraph_BP_EnvironmentManager");

	Params::BP_EnvironmentManager_C_ExecuteUbergraph_BP_EnvironmentManager Parms{};

	Parms.EntryPoint = EntryPoint;
	Parms.CallFunc_IsValid_ReturnValue = CallFunc_IsValid_ReturnValue;
	Parms.CallFunc_GetIsNightTime_ReturnValue = CallFunc_GetIsNightTime_ReturnValue;
	Parms.CallFunc_GetIsTimeFrozen_ReturnValue = CallFunc_GetIsTimeFrozen_ReturnValue;
	Parms.CallFunc_GetEnvManagerTimeOfDay_ReturnValue = CallFunc_GetEnvManagerTimeOfDay_ReturnValue;
	Parms.Temp_bool_Variable = Temp_bool_Variable;
	Parms.CallFunc_GetIsTimeFrozen_ReturnValue_1 = CallFunc_GetIsTimeFrozen_ReturnValue_1;
	Parms.K2Node_MakeStruct_LinearColor = std::move(K2Node_MakeStruct_LinearColor);
	Parms.K2Node_MakeStruct_LinearColor_1 = std::move(K2Node_MakeStruct_LinearColor_1);
	Parms.K2Node_MakeStruct_LinearColor_2 = std::move(K2Node_MakeStruct_LinearColor_2);
	Parms.K2Node_MakeStruct_LinearColor_3 = std::move(K2Node_MakeStruct_LinearColor_3);
	Parms.Temp_bool_Has_Been_Initd_Variable = Temp_bool_Has_Been_Initd_Variable;
	Parms.K2Node_Event_DeltaSeconds = K2Node_Event_DeltaSeconds;
	Parms.Temp_bool_IsClosed_Variable = Temp_bool_IsClosed_Variable;
	Parms.K2Node_CustomEvent_pendingState = std::move(K2Node_CustomEvent_pendingState);
	Parms.K2Node_CustomEvent_countdownTime = K2Node_CustomEvent_countdownTime;
	Parms.CallFunc_Conv_IntToDouble_ReturnValue = CallFunc_Conv_IntToDouble_ReturnValue;
	Parms.CallFunc_GetPlayerController_ReturnValue = CallFunc_GetPlayerController_ReturnValue;
	Parms.CallFunc_Divide_DoubleDouble_ReturnValue = CallFunc_Divide_DoubleDouble_ReturnValue;
	Parms.CallFunc_K2_GetPawn_ReturnValue = CallFunc_K2_GetPawn_ReturnValue;
	Parms.CallFunc_IsValid_ReturnValue_1 = CallFunc_IsValid_ReturnValue_1;
	Parms.K2Node_CustomEvent_TransitionTime_1 = K2Node_CustomEvent_TransitionTime_1;
	Parms.K2Node_CustomEvent_TransitionTime = K2Node_CustomEvent_TransitionTime;
	Parms.K2Node_CustomEvent_Amount = K2Node_CustomEvent_Amount;
	Parms.CallFunc_GetTimelineLength_ReturnValue = CallFunc_GetTimelineLength_ReturnValue;
	Parms.CallFunc_Divide_DoubleDouble_ReturnValue_1 = CallFunc_Divide_DoubleDouble_ReturnValue_1;
	Parms.CallFunc_GetScalarParameterValue_ReturnValue = CallFunc_GetScalarParameterValue_ReturnValue;
	Parms.K2Node_CreateDelegate_OutputDelegate = K2Node_CreateDelegate_OutputDelegate;
	Parms.CallFunc_GetScalarParameterValue_ReturnValue_1 = CallFunc_GetScalarParameterValue_ReturnValue_1;
	Parms.CallFunc_GetTimelineLength_ReturnValue_1 = CallFunc_GetTimelineLength_ReturnValue_1;
	Parms.CallFunc_GetWorldSubsystem_ReturnValue = CallFunc_GetWorldSubsystem_ReturnValue;
	Parms.CallFunc_Divide_DoubleDouble_ReturnValue_2 = CallFunc_Divide_DoubleDouble_ReturnValue_2;
	Parms.CallFunc_GetCurrentWeatherData_ReturnValue = std::move(CallFunc_GetCurrentWeatherData_ReturnValue);
	Parms.CallFunc_RandomFloatInRange_ReturnValue = CallFunc_RandomFloatInRange_ReturnValue;
	Parms.CallFunc_GetWorldSubsystem_ReturnValue_1 = CallFunc_GetWorldSubsystem_ReturnValue_1;
	Parms.CallFunc_GetCurrentWorldWeatherState_ReturnValue = std::move(CallFunc_GetCurrentWorldWeatherState_ReturnValue);
	Parms.CallFunc_Lerp_ReturnValue = CallFunc_Lerp_ReturnValue;
	Parms.K2Node_CustomEvent_UserCueName = std::move(K2Node_CustomEvent_UserCueName);
	Parms.CallFunc_Lerp_ReturnValue_1 = CallFunc_Lerp_ReturnValue_1;
	Parms.CallFunc_EqualEqual_StrStr_ReturnValue = CallFunc_EqualEqual_StrStr_ReturnValue;
	Parms.K2Node_CreateDelegate_OutputDelegate_1 = K2Node_CreateDelegate_OutputDelegate_1;
	Parms.CallFunc_RandomFloatInRange_ReturnValue_1 = CallFunc_RandomFloatInRange_ReturnValue_1;
	Parms.CallFunc_Add_DoubleDouble_ReturnValue = CallFunc_Add_DoubleDouble_ReturnValue;
	Parms.CallFunc_UpdateWindUVTargets_bTargetIsZero = CallFunc_UpdateWindUVTargets_bTargetIsZero;
	Parms.CallFunc_GetMusicManager_AsBP_Music_Manager = CallFunc_GetMusicManager_AsBP_Music_Manager;
	Parms.CallFunc_IsValid_ReturnValue_2 = CallFunc_IsValid_ReturnValue_2;
	Parms.CallFunc_GetWorldSubsystem_ReturnValue_2 = CallFunc_GetWorldSubsystem_ReturnValue_2;
	Parms.CallFunc_GetCurrentWeatherData_ReturnValue_1 = std::move(CallFunc_GetCurrentWeatherData_ReturnValue_1);
	Parms.CallFunc_GetMusicManager_AsBP_Music_Manager_1 = CallFunc_GetMusicManager_AsBP_Music_Manager_1;
	Parms.K2Node_CustomEvent_Time = K2Node_CustomEvent_Time;
	Parms.CallFunc_GetMusAfterDayNightTransition_MusTriggerAfterDayNight = CallFunc_GetMusAfterDayNightTransition_MusTriggerAfterDayNight;
	Parms.CallFunc_IsValid_ReturnValue_3 = CallFunc_IsValid_ReturnValue_3;
	Parms.CallFunc_IgnoreMusTransition_IgnoreDayNightTransition = CallFunc_IgnoreMusTransition_IgnoreDayNightTransition;
	Parms.CallFunc_IgnoreMusTransition_IgnoreDayNightTransition_1 = CallFunc_IgnoreMusTransition_IgnoreDayNightTransition_1;
	Parms.CallFunc_DisableIfServer_ReturnValue = CallFunc_DisableIfServer_ReturnValue;
	Parms.CallFunc_GetPlatformType_ReturnValue = CallFunc_GetPlatformType_ReturnValue;
	Parms.K2Node_SwitchEnum_CmpSuccess = K2Node_SwitchEnum_CmpSuccess;
	Parms.K2Node_Select_Default = K2Node_Select_Default;
	Parms.CallFunc_FreezeLightingAtTime_Time_ImplicitCast = CallFunc_FreezeLightingAtTime_Time_ImplicitCast;
	Parms.CallFunc_Delay_Duration_ImplicitCast = CallFunc_Delay_Duration_ImplicitCast;
	Parms.CallFunc_Divide_DoubleDouble_A_ImplicitCast = CallFunc_Divide_DoubleDouble_A_ImplicitCast;
	Parms.CallFunc_SetPlayRate_NewRate_ImplicitCast = CallFunc_SetPlayRate_NewRate_ImplicitCast;
	Parms.CallFunc_Delay_Duration_ImplicitCast_1 = CallFunc_Delay_Duration_ImplicitCast_1;
	Parms.K2Node_VariableSet_PreviousCloudiness_ImplicitCast = K2Node_VariableSet_PreviousCloudiness_ImplicitCast;
	Parms.K2Node_VariableSet_PreviousCloudiness_ImplicitCast_1 = K2Node_VariableSet_PreviousCloudiness_ImplicitCast_1;
	Parms.CallFunc_Divide_DoubleDouble_A_ImplicitCast_1 = CallFunc_Divide_DoubleDouble_A_ImplicitCast_1;
	Parms.CallFunc_SetPlayRate_NewRate_ImplicitCast_1 = CallFunc_SetPlayRate_NewRate_ImplicitCast_1;
	Parms.CallFunc_Lerp_Alpha_ImplicitCast = CallFunc_Lerp_Alpha_ImplicitCast;
	Parms.CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast = CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast;
	Parms.CallFunc_Lerp_Alpha_ImplicitCast_1 = CallFunc_Lerp_Alpha_ImplicitCast_1;
	Parms.CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_1 = CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_1;
	Parms.CallFunc_UpdateIntensityOfWind_WindDelta_ImplicitCast = CallFunc_UpdateIntensityOfWind_WindDelta_ImplicitCast;
	Parms.CallFunc_Delay_Duration_ImplicitCast_2 = CallFunc_Delay_Duration_ImplicitCast_2;
	Parms.K2Node_Select_Option_1_ImplicitCast = K2Node_Select_Option_1_ImplicitCast;
	Parms.CallFunc_RotatePlanetMeshes_Time_ImplicitCast = CallFunc_RotatePlanetMeshes_Time_ImplicitCast;
	Parms.CallFunc_UpdateEnvMPC_Time_ImplicitCast = CallFunc_UpdateEnvMPC_Time_ImplicitCast;
	Parms.CallFunc_UpdateEnvAudio_Time_ImplicitCast = CallFunc_UpdateEnvAudio_Time_ImplicitCast;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_EnvironmentManager.BP_EnvironmentManager_C.DisableWind
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    CallFunc_K2_IsValidTimerHandle_ReturnValue             (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_EnvironmentManager_C::DisableWind(bool CallFunc_K2_IsValidTimerHandle_ReturnValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EnvironmentManager_C", "DisableWind");

	Params::BP_EnvironmentManager_C_DisableWind Parms{};

	Parms.CallFunc_K2_IsValidTimerHandle_ReturnValue = CallFunc_K2_IsValidTimerHandle_ReturnValue;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_EnvironmentManager.BP_EnvironmentManager_C.CreateNewLightingState
// (Private, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   SuffixCount                                            (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FString                           Suffix                                                 (Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
// class FString                           FullAssetPath                                          (Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
// class FString                           BasePath                                               (Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
// class FString                           Param_Name                                             (Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
// class FString                           Subfolder                                              (Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
// class FString                           CallFunc_Concat_StrStr_ReturnValue                     (ZeroConstructor, HasGetValueTypeHash)
// class FString                           CallFunc_Concat_StrStr_ReturnValue_1                   (ZeroConstructor, HasGetValueTypeHash)
// class ULightingBaseState*               CallFunc_CreateNewLightingStateFromCurrentSettings_ReturnValue(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class FString                           CallFunc_Concat_StrStr_ReturnValue_2                   (ZeroConstructor, HasGetValueTypeHash)
// class FString                           CallFunc_Concat_StrStr_ReturnValue_3                   (ZeroConstructor, HasGetValueTypeHash)
// int32                                   CallFunc_Add_IntInt_ReturnValue                        (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    CallFunc_FileExists_ReturnValue                        (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Temp_int_Variable                                      (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FString                           CallFunc_Conv_IntToString_ReturnValue                  (ZeroConstructor, HasGetValueTypeHash)
// bool                                    CallFunc_IsEmpty_ReturnValue                           (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FString                           CallFunc_Concat_StrStr_ReturnValue_4                   (ZeroConstructor, HasGetValueTypeHash)
// class FString                           CallFunc_MakeValidFileName_ReturnValue                 (ZeroConstructor, HasGetValueTypeHash)
// class FString                           CallFunc_Concat_StrStr_ReturnValue_5                   (ZeroConstructor, HasGetValueTypeHash)
// class FString                           CallFunc_Split_LeftS                                   (ZeroConstructor, HasGetValueTypeHash)
// class FString                           CallFunc_Split_RightS                                  (ZeroConstructor, HasGetValueTypeHash)
// bool                                    CallFunc_Split_ReturnValue                             (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    CallFunc_EqualEqual_StrStr_ReturnValue                 (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FString                           CallFunc_SelectString_ReturnValue                      (ZeroConstructor, HasGetValueTypeHash)
// class FString                           CallFunc_MakeValidFileName_ReturnValue_1               (ZeroConstructor, HasGetValueTypeHash)
// class FString                           CallFunc_Trim_ReturnValue                              (ZeroConstructor, HasGetValueTypeHash)
// bool                                    CallFunc_IsEmpty_ReturnValue_1                         (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FString                           CallFunc_TrimTrailing_ReturnValue                      (ZeroConstructor, HasGetValueTypeHash)
// class FString                           CallFunc_Concat_StrStr_ReturnValue_6                   (ZeroConstructor, HasGetValueTypeHash)
// class FString                           CallFunc_Concat_StrStr_ReturnValue_7                   (ZeroConstructor, HasGetValueTypeHash)
// class FString                           CallFunc_Concat_StrStr_ReturnValue_8                   (ZeroConstructor, HasGetValueTypeHash)
// class FString                           CallFunc_Concat_StrStr_ReturnValue_9                   (ZeroConstructor, HasGetValueTypeHash)
// class FString                           CallFunc_Concat_StrStr_ReturnValue_10                  (ZeroConstructor, HasGetValueTypeHash)
// class FString                           CallFunc_Concat_StrStr_ReturnValue_11                  (ZeroConstructor, HasGetValueTypeHash)

void ABP_EnvironmentManager_C::CreateNewLightingState(int32 SuffixCount, const class FString& Suffix, const class FString& FullAssetPath, const class FString& BasePath, const class FString& Param_Name, const class FString& Subfolder, const class FString& CallFunc_Concat_StrStr_ReturnValue, const class FString& CallFunc_Concat_StrStr_ReturnValue_1, class ULightingBaseState* CallFunc_CreateNewLightingStateFromCurrentSettings_ReturnValue, const class FString& CallFunc_Concat_StrStr_ReturnValue_2, const class FString& CallFunc_Concat_StrStr_ReturnValue_3, int32 CallFunc_Add_IntInt_ReturnValue, bool CallFunc_FileExists_ReturnValue, int32 Temp_int_Variable, const class FString& CallFunc_Conv_IntToString_ReturnValue, bool CallFunc_IsEmpty_ReturnValue, const class FString& CallFunc_Concat_StrStr_ReturnValue_4, const class FString& CallFunc_MakeValidFileName_ReturnValue, const class FString& CallFunc_Concat_StrStr_ReturnValue_5, const class FString& CallFunc_Split_LeftS, const class FString& CallFunc_Split_RightS, bool CallFunc_Split_ReturnValue, bool CallFunc_EqualEqual_StrStr_ReturnValue, const class FString& CallFunc_SelectString_ReturnValue, const class FString& CallFunc_MakeValidFileName_ReturnValue_1, const class FString& CallFunc_Trim_ReturnValue, bool CallFunc_IsEmpty_ReturnValue_1, const class FString& CallFunc_TrimTrailing_ReturnValue, const class FString& CallFunc_Concat_StrStr_ReturnValue_6, const class FString& CallFunc_Concat_StrStr_ReturnValue_7, const class FString& CallFunc_Concat_StrStr_ReturnValue_8, const class FString& CallFunc_Concat_StrStr_ReturnValue_9, const class FString& CallFunc_Concat_StrStr_ReturnValue_10, const class FString& CallFunc_Concat_StrStr_ReturnValue_11)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EnvironmentManager_C", "CreateNewLightingState");

	Params::BP_EnvironmentManager_C_CreateNewLightingState Parms{};

	Parms.SuffixCount = SuffixCount;
	Parms.Suffix = std::move(Suffix);
	Parms.FullAssetPath = std::move(FullAssetPath);
	Parms.BasePath = std::move(BasePath);
	Parms.Param_Name = std::move(Param_Name);
	Parms.Subfolder = std::move(Subfolder);
	Parms.CallFunc_Concat_StrStr_ReturnValue = std::move(CallFunc_Concat_StrStr_ReturnValue);
	Parms.CallFunc_Concat_StrStr_ReturnValue_1 = std::move(CallFunc_Concat_StrStr_ReturnValue_1);
	Parms.CallFunc_CreateNewLightingStateFromCurrentSettings_ReturnValue = CallFunc_CreateNewLightingStateFromCurrentSettings_ReturnValue;
	Parms.CallFunc_Concat_StrStr_ReturnValue_2 = std::move(CallFunc_Concat_StrStr_ReturnValue_2);
	Parms.CallFunc_Concat_StrStr_ReturnValue_3 = std::move(CallFunc_Concat_StrStr_ReturnValue_3);
	Parms.CallFunc_Add_IntInt_ReturnValue = CallFunc_Add_IntInt_ReturnValue;
	Parms.CallFunc_FileExists_ReturnValue = CallFunc_FileExists_ReturnValue;
	Parms.Temp_int_Variable = Temp_int_Variable;
	Parms.CallFunc_Conv_IntToString_ReturnValue = std::move(CallFunc_Conv_IntToString_ReturnValue);
	Parms.CallFunc_IsEmpty_ReturnValue = CallFunc_IsEmpty_ReturnValue;
	Parms.CallFunc_Concat_StrStr_ReturnValue_4 = std::move(CallFunc_Concat_StrStr_ReturnValue_4);
	Parms.CallFunc_MakeValidFileName_ReturnValue = std::move(CallFunc_MakeValidFileName_ReturnValue);
	Parms.CallFunc_Concat_StrStr_ReturnValue_5 = std::move(CallFunc_Concat_StrStr_ReturnValue_5);
	Parms.CallFunc_Split_LeftS = std::move(CallFunc_Split_LeftS);
	Parms.CallFunc_Split_RightS = std::move(CallFunc_Split_RightS);
	Parms.CallFunc_Split_ReturnValue = CallFunc_Split_ReturnValue;
	Parms.CallFunc_EqualEqual_StrStr_ReturnValue = CallFunc_EqualEqual_StrStr_ReturnValue;
	Parms.CallFunc_SelectString_ReturnValue = std::move(CallFunc_SelectString_ReturnValue);
	Parms.CallFunc_MakeValidFileName_ReturnValue_1 = std::move(CallFunc_MakeValidFileName_ReturnValue_1);
	Parms.CallFunc_Trim_ReturnValue = std::move(CallFunc_Trim_ReturnValue);
	Parms.CallFunc_IsEmpty_ReturnValue_1 = CallFunc_IsEmpty_ReturnValue_1;
	Parms.CallFunc_TrimTrailing_ReturnValue = std::move(CallFunc_TrimTrailing_ReturnValue);
	Parms.CallFunc_Concat_StrStr_ReturnValue_6 = std::move(CallFunc_Concat_StrStr_ReturnValue_6);
	Parms.CallFunc_Concat_StrStr_ReturnValue_7 = std::move(CallFunc_Concat_StrStr_ReturnValue_7);
	Parms.CallFunc_Concat_StrStr_ReturnValue_8 = std::move(CallFunc_Concat_StrStr_ReturnValue_8);
	Parms.CallFunc_Concat_StrStr_ReturnValue_9 = std::move(CallFunc_Concat_StrStr_ReturnValue_9);
	Parms.CallFunc_Concat_StrStr_ReturnValue_10 = std::move(CallFunc_Concat_StrStr_ReturnValue_10);
	Parms.CallFunc_Concat_StrStr_ReturnValue_11 = std::move(CallFunc_Concat_StrStr_ReturnValue_11);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_EnvironmentManager.BP_EnvironmentManager_C.ClearWeather2
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  TransitionTime                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_EnvironmentManager_C::ClearWeather2(double TransitionTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EnvironmentManager_C", "ClearWeather2");

	Params::BP_EnvironmentManager_C_ClearWeather2 Parms{};

	Parms.TransitionTime = TransitionTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_EnvironmentManager.BP_EnvironmentManager_C.Clear_Transition__UpdateFunc
// (BlueprintEvent)

void ABP_EnvironmentManager_C::Clear_Transition__UpdateFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EnvironmentManager_C", "Clear_Transition__UpdateFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_EnvironmentManager.BP_EnvironmentManager_C.Clear_Transition__FinishedFunc
// (BlueprintEvent)

void ABP_EnvironmentManager_C::Clear_Transition__FinishedFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EnvironmentManager_C", "Clear_Transition__FinishedFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_EnvironmentManager.BP_EnvironmentManager_C.CinematicFreezeTime
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  Time                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_EnvironmentManager_C::CinematicFreezeTime(double Time)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EnvironmentManager_C", "CinematicFreezeTime");

	Params::BP_EnvironmentManager_C_CinematicFreezeTime Parms{};

	Parms.Time = Time;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_EnvironmentManager.BP_EnvironmentManager_C.CinematicEndFreezeTime
// (BlueprintCallable, BlueprintEvent)

void ABP_EnvironmentManager_C::CinematicEndFreezeTime()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EnvironmentManager_C", "CinematicEndFreezeTime");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_EnvironmentManager.BP_EnvironmentManager_C.CheckWindEnabled
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_EnvironmentManager_C::CheckWindEnabled()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EnvironmentManager_C", "CheckWindEnabled");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_EnvironmentManager.BP_EnvironmentManager_C.BeginWindUpdates
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FTimerHandle                     CallFunc_K2_SetTimer_ReturnValue                       (NoDestructor, HasGetValueTypeHash)
// struct FTimerHandle                     CallFunc_K2_SetTimer_ReturnValue_1                     (NoDestructor, HasGetValueTypeHash)
// float                                   CallFunc_GetScalarParameterValue_ReturnValue           (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TArray<uint8>                           CallFunc_GetValuesFromGrayscaleTexture_ReturnValue     (ReferenceParm)
// double                                  K2Node_VariableSet_WindSize_ImplicitCast               (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_EnvironmentManager_C::BeginWindUpdates(const struct FTimerHandle& CallFunc_K2_SetTimer_ReturnValue, const struct FTimerHandle& CallFunc_K2_SetTimer_ReturnValue_1, float CallFunc_GetScalarParameterValue_ReturnValue, TArray<uint8>& CallFunc_GetValuesFromGrayscaleTexture_ReturnValue, double K2Node_VariableSet_WindSize_ImplicitCast)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EnvironmentManager_C", "BeginWindUpdates");

	Params::BP_EnvironmentManager_C_BeginWindUpdates Parms{};

	Parms.CallFunc_K2_SetTimer_ReturnValue = std::move(CallFunc_K2_SetTimer_ReturnValue);
	Parms.CallFunc_K2_SetTimer_ReturnValue_1 = std::move(CallFunc_K2_SetTimer_ReturnValue_1);
	Parms.CallFunc_GetScalarParameterValue_ReturnValue = CallFunc_GetScalarParameterValue_ReturnValue;
	Parms.CallFunc_GetValuesFromGrayscaleTexture_ReturnValue = std::move(CallFunc_GetValuesFromGrayscaleTexture_ReturnValue);
	Parms.K2Node_VariableSet_WindSize_ImplicitCast = K2Node_VariableSet_WindSize_ImplicitCast;

	UObject::ProcessEvent(Func, &Parms);

	CallFunc_GetValuesFromGrayscaleTexture_ReturnValue = std::move(Parms.CallFunc_GetValuesFromGrayscaleTexture_ReturnValue);
}


// Function BP_EnvironmentManager.BP_EnvironmentManager_C.GetWindIntensityAtPos
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// struct FVector                          Pos                                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          CallFunc_Divide_VectorInt_ReturnValue                  (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   CallFunc_Blueprint_GetSizeY_ReturnValue                (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          CallFunc_Vector_GetAbs_ReturnValue                     (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  CallFunc_Conv_IntToDouble_ReturnValue                  (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  CallFunc_BreakVector_X                                 (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  CallFunc_BreakVector_Y                                 (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  CallFunc_BreakVector_Z                                 (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  CallFunc_Conv_IntToDouble_ReturnValue_1                (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  CallFunc_Percent_FloatFloat_ReturnValue                (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  CallFunc_Percent_FloatFloat_ReturnValue_1              (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  CallFunc_Divide_DoubleDouble_ReturnValue               (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  CallFunc_Divide_DoubleDouble_ReturnValue_1             (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  CallFunc_Multiply_DoubleDouble_ReturnValue             (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    CallFunc_NearlyEqual_FloatFloat_ReturnValue            (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   CallFunc_Blueprint_GetSizeY_ReturnValue_1              (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   CallFunc_Blueprint_GetSizeX_ReturnValue                (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    CallFunc_EqualEqual_IntInt_ReturnValue                 (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    CallFunc_EqualEqual_IntInt_ReturnValue_1               (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    CallFunc_BooleanOR_ReturnValue                         (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    CallFunc_IsValid_ReturnValue                           (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    CallFunc_BooleanOR_ReturnValue_1                       (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   CallFunc_Blueprint_GetSizeX_ReturnValue_1              (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  CallFunc_Multiply_IntFloat_ReturnValue                 (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  CallFunc_Add_DoubleDouble_ReturnValue                  (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  CallFunc_Percent_FloatFloat_ReturnValue_2              (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   CallFunc_Blueprint_GetSizeX_ReturnValue_2              (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   CallFunc_Round_ReturnValue                             (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  CallFunc_Conv_IntToDouble_ReturnValue_2                (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  CallFunc_Multiply_IntFloat_ReturnValue_1               (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  CallFunc_Conv_IntToDouble_ReturnValue_3                (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  CallFunc_Multiply_DoubleDouble_ReturnValue_1           (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  CallFunc_Add_DoubleDouble_ReturnValue_1                (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  CallFunc_Percent_FloatFloat_ReturnValue_3              (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   CallFunc_Round_ReturnValue_1                           (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// uint8                                   CallFunc_GetValueFromFlattened2DArray_ReturnValue      (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  CallFunc_Conv_ByteToDouble_ReturnValue                 (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  CallFunc_Divide_DoubleDouble_ReturnValue_2             (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   K2Node_FunctionResult_ReturnValue_ImplicitCast         (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

float ABP_EnvironmentManager_C::GetWindIntensityAtPos(const struct FVector& Pos, const struct FVector& CallFunc_Divide_VectorInt_ReturnValue, int32 CallFunc_Blueprint_GetSizeY_ReturnValue, const struct FVector& CallFunc_Vector_GetAbs_ReturnValue, double CallFunc_Conv_IntToDouble_ReturnValue, double CallFunc_BreakVector_X, double CallFunc_BreakVector_Y, double CallFunc_BreakVector_Z, double CallFunc_Conv_IntToDouble_ReturnValue_1, double CallFunc_Percent_FloatFloat_ReturnValue, double CallFunc_Percent_FloatFloat_ReturnValue_1, double CallFunc_Divide_DoubleDouble_ReturnValue, double CallFunc_Divide_DoubleDouble_ReturnValue_1, double CallFunc_Multiply_DoubleDouble_ReturnValue, bool CallFunc_NearlyEqual_FloatFloat_ReturnValue, int32 CallFunc_Blueprint_GetSizeY_ReturnValue_1, int32 CallFunc_Blueprint_GetSizeX_ReturnValue, bool CallFunc_EqualEqual_IntInt_ReturnValue, bool CallFunc_EqualEqual_IntInt_ReturnValue_1, bool CallFunc_BooleanOR_ReturnValue, bool CallFunc_IsValid_ReturnValue, bool CallFunc_BooleanOR_ReturnValue_1, int32 CallFunc_Blueprint_GetSizeX_ReturnValue_1, double CallFunc_Multiply_IntFloat_ReturnValue, double CallFunc_Add_DoubleDouble_ReturnValue, double CallFunc_Percent_FloatFloat_ReturnValue_2, int32 CallFunc_Blueprint_GetSizeX_ReturnValue_2, int32 CallFunc_Round_ReturnValue, double CallFunc_Conv_IntToDouble_ReturnValue_2, double CallFunc_Multiply_IntFloat_ReturnValue_1, double CallFunc_Conv_IntToDouble_ReturnValue_3, double CallFunc_Multiply_DoubleDouble_ReturnValue_1, double CallFunc_Add_DoubleDouble_ReturnValue_1, double CallFunc_Percent_FloatFloat_ReturnValue_3, int32 CallFunc_Round_ReturnValue_1, uint8 CallFunc_GetValueFromFlattened2DArray_ReturnValue, double CallFunc_Conv_ByteToDouble_ReturnValue, double CallFunc_Divide_DoubleDouble_ReturnValue_2, float K2Node_FunctionResult_ReturnValue_ImplicitCast) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EnvironmentManager_C", "GetWindIntensityAtPos");

	Params::BP_EnvironmentManager_C_GetWindIntensityAtPos Parms{};

	Parms.Pos = std::move(Pos);
	Parms.CallFunc_Divide_VectorInt_ReturnValue = std::move(CallFunc_Divide_VectorInt_ReturnValue);
	Parms.CallFunc_Blueprint_GetSizeY_ReturnValue = CallFunc_Blueprint_GetSizeY_ReturnValue;
	Parms.CallFunc_Vector_GetAbs_ReturnValue = std::move(CallFunc_Vector_GetAbs_ReturnValue);
	Parms.CallFunc_Conv_IntToDouble_ReturnValue = CallFunc_Conv_IntToDouble_ReturnValue;
	Parms.CallFunc_BreakVector_X = CallFunc_BreakVector_X;
	Parms.CallFunc_BreakVector_Y = CallFunc_BreakVector_Y;
	Parms.CallFunc_BreakVector_Z = CallFunc_BreakVector_Z;
	Parms.CallFunc_Conv_IntToDouble_ReturnValue_1 = CallFunc_Conv_IntToDouble_ReturnValue_1;
	Parms.CallFunc_Percent_FloatFloat_ReturnValue = CallFunc_Percent_FloatFloat_ReturnValue;
	Parms.CallFunc_Percent_FloatFloat_ReturnValue_1 = CallFunc_Percent_FloatFloat_ReturnValue_1;
	Parms.CallFunc_Divide_DoubleDouble_ReturnValue = CallFunc_Divide_DoubleDouble_ReturnValue;
	Parms.CallFunc_Divide_DoubleDouble_ReturnValue_1 = CallFunc_Divide_DoubleDouble_ReturnValue_1;
	Parms.CallFunc_Multiply_DoubleDouble_ReturnValue = CallFunc_Multiply_DoubleDouble_ReturnValue;
	Parms.CallFunc_NearlyEqual_FloatFloat_ReturnValue = CallFunc_NearlyEqual_FloatFloat_ReturnValue;
	Parms.CallFunc_Blueprint_GetSizeY_ReturnValue_1 = CallFunc_Blueprint_GetSizeY_ReturnValue_1;
	Parms.CallFunc_Blueprint_GetSizeX_ReturnValue = CallFunc_Blueprint_GetSizeX_ReturnValue;
	Parms.CallFunc_EqualEqual_IntInt_ReturnValue = CallFunc_EqualEqual_IntInt_ReturnValue;
	Parms.CallFunc_EqualEqual_IntInt_ReturnValue_1 = CallFunc_EqualEqual_IntInt_ReturnValue_1;
	Parms.CallFunc_BooleanOR_ReturnValue = CallFunc_BooleanOR_ReturnValue;
	Parms.CallFunc_IsValid_ReturnValue = CallFunc_IsValid_ReturnValue;
	Parms.CallFunc_BooleanOR_ReturnValue_1 = CallFunc_BooleanOR_ReturnValue_1;
	Parms.CallFunc_Blueprint_GetSizeX_ReturnValue_1 = CallFunc_Blueprint_GetSizeX_ReturnValue_1;
	Parms.CallFunc_Multiply_IntFloat_ReturnValue = CallFunc_Multiply_IntFloat_ReturnValue;
	Parms.CallFunc_Add_DoubleDouble_ReturnValue = CallFunc_Add_DoubleDouble_ReturnValue;
	Parms.CallFunc_Percent_FloatFloat_ReturnValue_2 = CallFunc_Percent_FloatFloat_ReturnValue_2;
	Parms.CallFunc_Blueprint_GetSizeX_ReturnValue_2 = CallFunc_Blueprint_GetSizeX_ReturnValue_2;
	Parms.CallFunc_Round_ReturnValue = CallFunc_Round_ReturnValue;
	Parms.CallFunc_Conv_IntToDouble_ReturnValue_2 = CallFunc_Conv_IntToDouble_ReturnValue_2;
	Parms.CallFunc_Multiply_IntFloat_ReturnValue_1 = CallFunc_Multiply_IntFloat_ReturnValue_1;
	Parms.CallFunc_Conv_IntToDouble_ReturnValue_3 = CallFunc_Conv_IntToDouble_ReturnValue_3;
	Parms.CallFunc_Multiply_DoubleDouble_ReturnValue_1 = CallFunc_Multiply_DoubleDouble_ReturnValue_1;
	Parms.CallFunc_Add_DoubleDouble_ReturnValue_1 = CallFunc_Add_DoubleDouble_ReturnValue_1;
	Parms.CallFunc_Percent_FloatFloat_ReturnValue_3 = CallFunc_Percent_FloatFloat_ReturnValue_3;
	Parms.CallFunc_Round_ReturnValue_1 = CallFunc_Round_ReturnValue_1;
	Parms.CallFunc_GetValueFromFlattened2DArray_ReturnValue = CallFunc_GetValueFromFlattened2DArray_ReturnValue;
	Parms.CallFunc_Conv_ByteToDouble_ReturnValue = CallFunc_Conv_ByteToDouble_ReturnValue;
	Parms.CallFunc_Divide_DoubleDouble_ReturnValue_2 = CallFunc_Divide_DoubleDouble_ReturnValue_2;
	Parms.K2Node_FunctionResult_ReturnValue_ImplicitCast = K2Node_FunctionResult_ReturnValue_ImplicitCast;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}

}

