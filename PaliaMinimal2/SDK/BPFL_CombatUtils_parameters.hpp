#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPFL_CombatUtils

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "EAIBehaviourRange_structs.hpp"
#include "Palia_structs.hpp"


namespace SDK::Params
{

// Function BPFL_CombatUtils.BPFL_CombatUtils_C.SetMaxWalkSpeedOfActor
// 0x0078 (0x0078 - 0x0000)
struct BPFL_CombatUtils_C_SetMaxWalkSpeedOfActor final
{
public:
	class AActor*                                 Owner;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        Speed;                                             // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  TmpActor;                                          // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  K2Node_DynamicCast_AsPawn;                         // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6089[0x6];                                     // 0x002A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AController*                            K2Node_DynamicCast_AsController;                   // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_608A[0x7];                                     // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue;                   // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPawnMovementComponent*                 CallFunc_GetMovementComponent_ReturnValue;         // 0x0048(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UValeriaBaseMovementComponent*          K2Node_DynamicCast_AsValeria_Base_Movement_Component; // 0x0050(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_608B[0x7];                                     // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UCharacterMovementComponent*            K2Node_DynamicCast_AsCharacter_Movement_Component; // 0x0060(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_608C[0x3];                                     // 0x0069(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_VariableSet_MaxWalkSpeed_ImplicitCast;      // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_VariableSet_MaxWalkSpeed_ImplicitCast_1;    // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPFL_CombatUtils_C_SetMaxWalkSpeedOfActor) == 0x000008, "Wrong alignment on BPFL_CombatUtils_C_SetMaxWalkSpeedOfActor");
static_assert(sizeof(BPFL_CombatUtils_C_SetMaxWalkSpeedOfActor) == 0x000078, "Wrong size on BPFL_CombatUtils_C_SetMaxWalkSpeedOfActor");
static_assert(offsetof(BPFL_CombatUtils_C_SetMaxWalkSpeedOfActor, Owner) == 0x000000, "Member 'BPFL_CombatUtils_C_SetMaxWalkSpeedOfActor::Owner' has a wrong offset!");
static_assert(offsetof(BPFL_CombatUtils_C_SetMaxWalkSpeedOfActor, Speed) == 0x000008, "Member 'BPFL_CombatUtils_C_SetMaxWalkSpeedOfActor::Speed' has a wrong offset!");
static_assert(offsetof(BPFL_CombatUtils_C_SetMaxWalkSpeedOfActor, __WorldContext) == 0x000010, "Member 'BPFL_CombatUtils_C_SetMaxWalkSpeedOfActor::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPFL_CombatUtils_C_SetMaxWalkSpeedOfActor, TmpActor) == 0x000018, "Member 'BPFL_CombatUtils_C_SetMaxWalkSpeedOfActor::TmpActor' has a wrong offset!");
static_assert(offsetof(BPFL_CombatUtils_C_SetMaxWalkSpeedOfActor, K2Node_DynamicCast_AsPawn) == 0x000020, "Member 'BPFL_CombatUtils_C_SetMaxWalkSpeedOfActor::K2Node_DynamicCast_AsPawn' has a wrong offset!");
static_assert(offsetof(BPFL_CombatUtils_C_SetMaxWalkSpeedOfActor, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'BPFL_CombatUtils_C_SetMaxWalkSpeedOfActor::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BPFL_CombatUtils_C_SetMaxWalkSpeedOfActor, CallFunc_IsValid_ReturnValue) == 0x000029, "Member 'BPFL_CombatUtils_C_SetMaxWalkSpeedOfActor::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_CombatUtils_C_SetMaxWalkSpeedOfActor, K2Node_DynamicCast_AsController) == 0x000030, "Member 'BPFL_CombatUtils_C_SetMaxWalkSpeedOfActor::K2Node_DynamicCast_AsController' has a wrong offset!");
static_assert(offsetof(BPFL_CombatUtils_C_SetMaxWalkSpeedOfActor, K2Node_DynamicCast_bSuccess_1) == 0x000038, "Member 'BPFL_CombatUtils_C_SetMaxWalkSpeedOfActor::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BPFL_CombatUtils_C_SetMaxWalkSpeedOfActor, CallFunc_K2_GetPawn_ReturnValue) == 0x000040, "Member 'BPFL_CombatUtils_C_SetMaxWalkSpeedOfActor::CallFunc_K2_GetPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_CombatUtils_C_SetMaxWalkSpeedOfActor, CallFunc_GetMovementComponent_ReturnValue) == 0x000048, "Member 'BPFL_CombatUtils_C_SetMaxWalkSpeedOfActor::CallFunc_GetMovementComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_CombatUtils_C_SetMaxWalkSpeedOfActor, K2Node_DynamicCast_AsValeria_Base_Movement_Component) == 0x000050, "Member 'BPFL_CombatUtils_C_SetMaxWalkSpeedOfActor::K2Node_DynamicCast_AsValeria_Base_Movement_Component' has a wrong offset!");
static_assert(offsetof(BPFL_CombatUtils_C_SetMaxWalkSpeedOfActor, K2Node_DynamicCast_bSuccess_2) == 0x000058, "Member 'BPFL_CombatUtils_C_SetMaxWalkSpeedOfActor::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BPFL_CombatUtils_C_SetMaxWalkSpeedOfActor, K2Node_DynamicCast_AsCharacter_Movement_Component) == 0x000060, "Member 'BPFL_CombatUtils_C_SetMaxWalkSpeedOfActor::K2Node_DynamicCast_AsCharacter_Movement_Component' has a wrong offset!");
static_assert(offsetof(BPFL_CombatUtils_C_SetMaxWalkSpeedOfActor, K2Node_DynamicCast_bSuccess_3) == 0x000068, "Member 'BPFL_CombatUtils_C_SetMaxWalkSpeedOfActor::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(BPFL_CombatUtils_C_SetMaxWalkSpeedOfActor, K2Node_VariableSet_MaxWalkSpeed_ImplicitCast) == 0x00006C, "Member 'BPFL_CombatUtils_C_SetMaxWalkSpeedOfActor::K2Node_VariableSet_MaxWalkSpeed_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BPFL_CombatUtils_C_SetMaxWalkSpeedOfActor, K2Node_VariableSet_MaxWalkSpeed_ImplicitCast_1) == 0x000070, "Member 'BPFL_CombatUtils_C_SetMaxWalkSpeedOfActor::K2Node_VariableSet_MaxWalkSpeed_ImplicitCast_1' has a wrong offset!");

// Function BPFL_CombatUtils.BPFL_CombatUtils_C.GetSpeedFromType
// 0x00B8 (0x00B8 - 0x0000)
struct BPFL_CombatUtils_C_GetSpeedFromType final
{
public:
	class AActor*                                 Owner;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FName                                   SpeedType;                                         // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        Speed;                                             // 0x0018(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAICombatStateComponent*                CombatStateComp;                                   // 0x0020(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  TmpActor;                                          // 0x0028(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  K2Node_DynamicCast_AsPawn;                         // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_608D[0x7];                                     // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPawnMovementComponent*                 CallFunc_GetMovementComponent_ReturnValue;         // 0x0040(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetMaxSpeed_ReturnValue;                  // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_608E[0x4];                                     // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UValeriaBaseMovementComponent*          K2Node_DynamicCast_AsValeria_Base_Movement_Component; // 0x0050(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_608F[0x7];                                     // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UCharacterMovementComponent*            K2Node_DynamicCast_AsCharacter_Movement_Component; // 0x0060(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6090[0x7];                                     // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AController*                            K2Node_DynamicCast_AsController;                   // 0x0070(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6091[0x7];                                     // 0x0079(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue;                   // 0x0080(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6092[0x3];                                     // 0x0089(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetSpeed_ReturnValue;                     // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAICombatStateComponent*                CallFunc_GetComponentByClass_ReturnValue;          // 0x0090(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_FunctionResult_Speed_ImplicitCast;          // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_FunctionResult_Speed_ImplicitCast_1;        // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_FunctionResult_Speed_ImplicitCast_2;        // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_FunctionResult_Speed_ImplicitCast_3;        // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPFL_CombatUtils_C_GetSpeedFromType) == 0x000008, "Wrong alignment on BPFL_CombatUtils_C_GetSpeedFromType");
static_assert(sizeof(BPFL_CombatUtils_C_GetSpeedFromType) == 0x0000B8, "Wrong size on BPFL_CombatUtils_C_GetSpeedFromType");
static_assert(offsetof(BPFL_CombatUtils_C_GetSpeedFromType, Owner) == 0x000000, "Member 'BPFL_CombatUtils_C_GetSpeedFromType::Owner' has a wrong offset!");
static_assert(offsetof(BPFL_CombatUtils_C_GetSpeedFromType, SpeedType) == 0x000008, "Member 'BPFL_CombatUtils_C_GetSpeedFromType::SpeedType' has a wrong offset!");
static_assert(offsetof(BPFL_CombatUtils_C_GetSpeedFromType, __WorldContext) == 0x000010, "Member 'BPFL_CombatUtils_C_GetSpeedFromType::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPFL_CombatUtils_C_GetSpeedFromType, Speed) == 0x000018, "Member 'BPFL_CombatUtils_C_GetSpeedFromType::Speed' has a wrong offset!");
static_assert(offsetof(BPFL_CombatUtils_C_GetSpeedFromType, CombatStateComp) == 0x000020, "Member 'BPFL_CombatUtils_C_GetSpeedFromType::CombatStateComp' has a wrong offset!");
static_assert(offsetof(BPFL_CombatUtils_C_GetSpeedFromType, TmpActor) == 0x000028, "Member 'BPFL_CombatUtils_C_GetSpeedFromType::TmpActor' has a wrong offset!");
static_assert(offsetof(BPFL_CombatUtils_C_GetSpeedFromType, K2Node_DynamicCast_AsPawn) == 0x000030, "Member 'BPFL_CombatUtils_C_GetSpeedFromType::K2Node_DynamicCast_AsPawn' has a wrong offset!");
static_assert(offsetof(BPFL_CombatUtils_C_GetSpeedFromType, K2Node_DynamicCast_bSuccess) == 0x000038, "Member 'BPFL_CombatUtils_C_GetSpeedFromType::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BPFL_CombatUtils_C_GetSpeedFromType, CallFunc_GetMovementComponent_ReturnValue) == 0x000040, "Member 'BPFL_CombatUtils_C_GetSpeedFromType::CallFunc_GetMovementComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_CombatUtils_C_GetSpeedFromType, CallFunc_GetMaxSpeed_ReturnValue) == 0x000048, "Member 'BPFL_CombatUtils_C_GetSpeedFromType::CallFunc_GetMaxSpeed_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_CombatUtils_C_GetSpeedFromType, K2Node_DynamicCast_AsValeria_Base_Movement_Component) == 0x000050, "Member 'BPFL_CombatUtils_C_GetSpeedFromType::K2Node_DynamicCast_AsValeria_Base_Movement_Component' has a wrong offset!");
static_assert(offsetof(BPFL_CombatUtils_C_GetSpeedFromType, K2Node_DynamicCast_bSuccess_1) == 0x000058, "Member 'BPFL_CombatUtils_C_GetSpeedFromType::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BPFL_CombatUtils_C_GetSpeedFromType, K2Node_DynamicCast_AsCharacter_Movement_Component) == 0x000060, "Member 'BPFL_CombatUtils_C_GetSpeedFromType::K2Node_DynamicCast_AsCharacter_Movement_Component' has a wrong offset!");
static_assert(offsetof(BPFL_CombatUtils_C_GetSpeedFromType, K2Node_DynamicCast_bSuccess_2) == 0x000068, "Member 'BPFL_CombatUtils_C_GetSpeedFromType::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BPFL_CombatUtils_C_GetSpeedFromType, K2Node_DynamicCast_AsController) == 0x000070, "Member 'BPFL_CombatUtils_C_GetSpeedFromType::K2Node_DynamicCast_AsController' has a wrong offset!");
static_assert(offsetof(BPFL_CombatUtils_C_GetSpeedFromType, K2Node_DynamicCast_bSuccess_3) == 0x000078, "Member 'BPFL_CombatUtils_C_GetSpeedFromType::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(BPFL_CombatUtils_C_GetSpeedFromType, CallFunc_K2_GetPawn_ReturnValue) == 0x000080, "Member 'BPFL_CombatUtils_C_GetSpeedFromType::CallFunc_K2_GetPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_CombatUtils_C_GetSpeedFromType, CallFunc_IsValid_ReturnValue) == 0x000088, "Member 'BPFL_CombatUtils_C_GetSpeedFromType::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_CombatUtils_C_GetSpeedFromType, CallFunc_GetSpeed_ReturnValue) == 0x00008C, "Member 'BPFL_CombatUtils_C_GetSpeedFromType::CallFunc_GetSpeed_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_CombatUtils_C_GetSpeedFromType, CallFunc_GetComponentByClass_ReturnValue) == 0x000090, "Member 'BPFL_CombatUtils_C_GetSpeedFromType::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_CombatUtils_C_GetSpeedFromType, K2Node_FunctionResult_Speed_ImplicitCast) == 0x000098, "Member 'BPFL_CombatUtils_C_GetSpeedFromType::K2Node_FunctionResult_Speed_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BPFL_CombatUtils_C_GetSpeedFromType, K2Node_FunctionResult_Speed_ImplicitCast_1) == 0x0000A0, "Member 'BPFL_CombatUtils_C_GetSpeedFromType::K2Node_FunctionResult_Speed_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(BPFL_CombatUtils_C_GetSpeedFromType, K2Node_FunctionResult_Speed_ImplicitCast_2) == 0x0000A8, "Member 'BPFL_CombatUtils_C_GetSpeedFromType::K2Node_FunctionResult_Speed_ImplicitCast_2' has a wrong offset!");
static_assert(offsetof(BPFL_CombatUtils_C_GetSpeedFromType, K2Node_FunctionResult_Speed_ImplicitCast_3) == 0x0000B0, "Member 'BPFL_CombatUtils_C_GetSpeedFromType::K2Node_FunctionResult_Speed_ImplicitCast_3' has a wrong offset!");

// Function BPFL_CombatUtils.BPFL_CombatUtils_C.GetMaxWalkSpeedOfActor
// 0x0080 (0x0080 - 0x0000)
struct BPFL_CombatUtils_C_GetMaxWalkSpeedOfActor final
{
public:
	class AActor*                                 Owner;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        Speed;                                             // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  TmpActor;                                          // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  K2Node_DynamicCast_AsPawn;                         // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6093[0x7];                                     // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPawnMovementComponent*                 CallFunc_GetMovementComponent_ReturnValue;         // 0x0030(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UValeriaBaseMovementComponent*          K2Node_DynamicCast_AsValeria_Base_Movement_Component; // 0x0038(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6094[0x7];                                     // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UCharacterMovementComponent*            K2Node_DynamicCast_AsCharacter_Movement_Component; // 0x0048(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6095[0x7];                                     // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AController*                            K2Node_DynamicCast_AsController;                   // 0x0058(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6096[0x7];                                     // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue;                   // 0x0068(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_FunctionResult_Speed_ImplicitCast;          // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_FunctionResult_Speed_ImplicitCast_1;        // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPFL_CombatUtils_C_GetMaxWalkSpeedOfActor) == 0x000008, "Wrong alignment on BPFL_CombatUtils_C_GetMaxWalkSpeedOfActor");
static_assert(sizeof(BPFL_CombatUtils_C_GetMaxWalkSpeedOfActor) == 0x000080, "Wrong size on BPFL_CombatUtils_C_GetMaxWalkSpeedOfActor");
static_assert(offsetof(BPFL_CombatUtils_C_GetMaxWalkSpeedOfActor, Owner) == 0x000000, "Member 'BPFL_CombatUtils_C_GetMaxWalkSpeedOfActor::Owner' has a wrong offset!");
static_assert(offsetof(BPFL_CombatUtils_C_GetMaxWalkSpeedOfActor, __WorldContext) == 0x000008, "Member 'BPFL_CombatUtils_C_GetMaxWalkSpeedOfActor::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPFL_CombatUtils_C_GetMaxWalkSpeedOfActor, Speed) == 0x000010, "Member 'BPFL_CombatUtils_C_GetMaxWalkSpeedOfActor::Speed' has a wrong offset!");
static_assert(offsetof(BPFL_CombatUtils_C_GetMaxWalkSpeedOfActor, TmpActor) == 0x000018, "Member 'BPFL_CombatUtils_C_GetMaxWalkSpeedOfActor::TmpActor' has a wrong offset!");
static_assert(offsetof(BPFL_CombatUtils_C_GetMaxWalkSpeedOfActor, K2Node_DynamicCast_AsPawn) == 0x000020, "Member 'BPFL_CombatUtils_C_GetMaxWalkSpeedOfActor::K2Node_DynamicCast_AsPawn' has a wrong offset!");
static_assert(offsetof(BPFL_CombatUtils_C_GetMaxWalkSpeedOfActor, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'BPFL_CombatUtils_C_GetMaxWalkSpeedOfActor::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BPFL_CombatUtils_C_GetMaxWalkSpeedOfActor, CallFunc_GetMovementComponent_ReturnValue) == 0x000030, "Member 'BPFL_CombatUtils_C_GetMaxWalkSpeedOfActor::CallFunc_GetMovementComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_CombatUtils_C_GetMaxWalkSpeedOfActor, K2Node_DynamicCast_AsValeria_Base_Movement_Component) == 0x000038, "Member 'BPFL_CombatUtils_C_GetMaxWalkSpeedOfActor::K2Node_DynamicCast_AsValeria_Base_Movement_Component' has a wrong offset!");
static_assert(offsetof(BPFL_CombatUtils_C_GetMaxWalkSpeedOfActor, K2Node_DynamicCast_bSuccess_1) == 0x000040, "Member 'BPFL_CombatUtils_C_GetMaxWalkSpeedOfActor::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BPFL_CombatUtils_C_GetMaxWalkSpeedOfActor, K2Node_DynamicCast_AsCharacter_Movement_Component) == 0x000048, "Member 'BPFL_CombatUtils_C_GetMaxWalkSpeedOfActor::K2Node_DynamicCast_AsCharacter_Movement_Component' has a wrong offset!");
static_assert(offsetof(BPFL_CombatUtils_C_GetMaxWalkSpeedOfActor, K2Node_DynamicCast_bSuccess_2) == 0x000050, "Member 'BPFL_CombatUtils_C_GetMaxWalkSpeedOfActor::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BPFL_CombatUtils_C_GetMaxWalkSpeedOfActor, K2Node_DynamicCast_AsController) == 0x000058, "Member 'BPFL_CombatUtils_C_GetMaxWalkSpeedOfActor::K2Node_DynamicCast_AsController' has a wrong offset!");
static_assert(offsetof(BPFL_CombatUtils_C_GetMaxWalkSpeedOfActor, K2Node_DynamicCast_bSuccess_3) == 0x000060, "Member 'BPFL_CombatUtils_C_GetMaxWalkSpeedOfActor::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(BPFL_CombatUtils_C_GetMaxWalkSpeedOfActor, CallFunc_K2_GetPawn_ReturnValue) == 0x000068, "Member 'BPFL_CombatUtils_C_GetMaxWalkSpeedOfActor::CallFunc_K2_GetPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_CombatUtils_C_GetMaxWalkSpeedOfActor, K2Node_FunctionResult_Speed_ImplicitCast) == 0x000070, "Member 'BPFL_CombatUtils_C_GetMaxWalkSpeedOfActor::K2Node_FunctionResult_Speed_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BPFL_CombatUtils_C_GetMaxWalkSpeedOfActor, K2Node_FunctionResult_Speed_ImplicitCast_1) == 0x000078, "Member 'BPFL_CombatUtils_C_GetMaxWalkSpeedOfActor::K2Node_FunctionResult_Speed_ImplicitCast_1' has a wrong offset!");

// Function BPFL_CombatUtils.BPFL_CombatUtils_C.GetCombatStateFloatFromActor
// 0x00C8 (0x00C8 - 0x0000)
struct BPFL_CombatUtils_C_GetCombatStateFloatFromActor final
{
public:
	EAIBehaviourRange                             CombatStatePropertyName;                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6097[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 Actor;                                             // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FFloatRange                            CustomValue;                                       // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0020(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FFloatRange                            Output;                                            // 0x0028(0x0010)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAICombatStateComponent*                CombatStateComp;                                   // 0x0038(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	EAIBehaviourRange                             Temp_byte_Variable;                                // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6098[0x7];                                     // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetDisplayName_ReturnValue;               // 0x0048(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class UAICombatStateComponent*                CallFunc_GetComponentByClass_ReturnValue;          // 0x0058(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0060(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FAIBehaviourRanges                     CallFunc_GetBehaviourRanges_ReturnValue;           // 0x0070(0x0040)(NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6099[0x3];                                     // 0x00B1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFloatRange                            K2Node_Select_Default;                             // 0x00B4(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPFL_CombatUtils_C_GetCombatStateFloatFromActor) == 0x000008, "Wrong alignment on BPFL_CombatUtils_C_GetCombatStateFloatFromActor");
static_assert(sizeof(BPFL_CombatUtils_C_GetCombatStateFloatFromActor) == 0x0000C8, "Wrong size on BPFL_CombatUtils_C_GetCombatStateFloatFromActor");
static_assert(offsetof(BPFL_CombatUtils_C_GetCombatStateFloatFromActor, CombatStatePropertyName) == 0x000000, "Member 'BPFL_CombatUtils_C_GetCombatStateFloatFromActor::CombatStatePropertyName' has a wrong offset!");
static_assert(offsetof(BPFL_CombatUtils_C_GetCombatStateFloatFromActor, Actor) == 0x000008, "Member 'BPFL_CombatUtils_C_GetCombatStateFloatFromActor::Actor' has a wrong offset!");
static_assert(offsetof(BPFL_CombatUtils_C_GetCombatStateFloatFromActor, CustomValue) == 0x000010, "Member 'BPFL_CombatUtils_C_GetCombatStateFloatFromActor::CustomValue' has a wrong offset!");
static_assert(offsetof(BPFL_CombatUtils_C_GetCombatStateFloatFromActor, __WorldContext) == 0x000020, "Member 'BPFL_CombatUtils_C_GetCombatStateFloatFromActor::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPFL_CombatUtils_C_GetCombatStateFloatFromActor, Output) == 0x000028, "Member 'BPFL_CombatUtils_C_GetCombatStateFloatFromActor::Output' has a wrong offset!");
static_assert(offsetof(BPFL_CombatUtils_C_GetCombatStateFloatFromActor, CombatStateComp) == 0x000038, "Member 'BPFL_CombatUtils_C_GetCombatStateFloatFromActor::CombatStateComp' has a wrong offset!");
static_assert(offsetof(BPFL_CombatUtils_C_GetCombatStateFloatFromActor, Temp_byte_Variable) == 0x000040, "Member 'BPFL_CombatUtils_C_GetCombatStateFloatFromActor::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BPFL_CombatUtils_C_GetCombatStateFloatFromActor, CallFunc_GetDisplayName_ReturnValue) == 0x000048, "Member 'BPFL_CombatUtils_C_GetCombatStateFloatFromActor::CallFunc_GetDisplayName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_CombatUtils_C_GetCombatStateFloatFromActor, CallFunc_GetComponentByClass_ReturnValue) == 0x000058, "Member 'BPFL_CombatUtils_C_GetCombatStateFloatFromActor::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_CombatUtils_C_GetCombatStateFloatFromActor, CallFunc_Concat_StrStr_ReturnValue) == 0x000060, "Member 'BPFL_CombatUtils_C_GetCombatStateFloatFromActor::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_CombatUtils_C_GetCombatStateFloatFromActor, CallFunc_GetBehaviourRanges_ReturnValue) == 0x000070, "Member 'BPFL_CombatUtils_C_GetCombatStateFloatFromActor::CallFunc_GetBehaviourRanges_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_CombatUtils_C_GetCombatStateFloatFromActor, CallFunc_IsValid_ReturnValue) == 0x0000B0, "Member 'BPFL_CombatUtils_C_GetCombatStateFloatFromActor::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_CombatUtils_C_GetCombatStateFloatFromActor, K2Node_Select_Default) == 0x0000B4, "Member 'BPFL_CombatUtils_C_GetCombatStateFloatFromActor::K2Node_Select_Default' has a wrong offset!");

}

