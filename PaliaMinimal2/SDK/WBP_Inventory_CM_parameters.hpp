#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_Inventory_CM

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "GameplayTags_structs.hpp"
#include "SlateCore_structs.hpp"
#include "UMG_structs.hpp"
#include "Palia_structs.hpp"


namespace SDK::Params
{

// Function WBP_Inventory_CM.WBP_Inventory_CM_C.CreateBagsForBagTypes
// 0x01A8 (0x01A8 - 0x0000)
struct WBP_Inventory_CM_C_CreateBagsForBagTypes final
{
public:
	TArray<struct FGameplayTag>                   BagTypes;                                          // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class UVerticalBox*                           BagsVerticalBox;                                   // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TArray<int32>                                 LastUsedBagIndicesRef;                             // 0x0018(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	int32                                         BagIndex;                                          // 0x0028(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_589F[0x4];                                     // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UWBP_InventorySlot_CM_C*>        InventorySlots;                                    // 0x0030(0x0010)(Edit, BlueprintVisible, ContainsInstancedReference)
	class UWBP_InventoryBag_CM_C*                 FirstInventoryBag;                                 // 0x0040(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetMaxNumBagsAllowedForBagTypes_ReturnValue; // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x005C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_58A0[0x3];                                     // 0x005D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_58A1[0x4];                                     // 0x0064(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_GetLockedRowBackgroundImageSize_ImageSize; // 0x0068(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FMargin                                CallFunc_GetUnlockedRowPadding_Padding;            // 0x0078(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FMargin                                CallFunc_GetLockedRowPadding_Padding;              // 0x0088(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class US6UI_CustomNavigationGroup*            CallFunc_GetNavGroupForIndex_NavGroup;             // 0x0098(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TArray<class UWidget*>                        CallFunc_GetAllChildren_ReturnValue;               // 0x00A0(0x0010)(ReferenceParm, ContainsInstancedReference)
	class UWidget*                                CallFunc_Array_Get_Item;                           // 0x00B0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_58A2[0x4];                                     // 0x00BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_InventoryBag_CM_C*                 K2Node_DynamicCast_AsWBP_Inventory_Bag_CM;         // 0x00C0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_58A3[0x7];                                     // 0x00C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UWBP_InventorySlot_CM_C*>        CallFunc_GetAllSlots_Slots;                        // 0x00D0(0x0010)(ReferenceParm, ContainsInstancedReference)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00E4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_58A4[0x3];                                     // 0x00E5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class UWidget* Widget)>        K2Node_CreateDelegate_OutputDelegate;              // 0x00E8(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UWBP_InventorySlot_CM_C* Slot)> K2Node_CreateDelegate_OutputDelegate_1;            // 0x00F8(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UWBP_InventorySlot_CM_C* Slot, class UWBP_InventoryBag_CM_C* Bag)> K2Node_CreateDelegate_OutputDelegate_2;            // 0x0108(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UWBP_InventorySlot_CM_C* Slot, class UWBP_InventoryBag_CM_C* Bag)> K2Node_CreateDelegate_OutputDelegate_3;            // 0x0118(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0128(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_1;            // 0x012C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<int32>                                 CallFunc_GetBagIndicesMatchingBagTypes_ReturnValue; // 0x0130(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Get_Item_1;                         // 0x0140(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x0144(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_2;            // 0x0148(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Identical_ReturnValue;              // 0x014C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_58A5[0x3];                                     // 0x014D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Max_ReturnValue;                          // 0x0150(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0154(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_58A6[0x3];                                     // 0x0155(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0158(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_58A7[0x4];                                     // 0x015C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_LockedRow_C*                       CallFunc_Create_ReturnValue;                       // 0x0160(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UVerticalBoxSlot*                       CallFunc_AddChildToVerticalBox_ReturnValue;        // 0x0168(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0170(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_58A8[0x3];                                     // 0x0171(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0174(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWBP_InventoryBag_CM_C*                 CallFunc_Create_ReturnValue_1;                     // 0x0178(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UVerticalBoxSlot*                       CallFunc_AddChildToVerticalBox_ReturnValue_1;      // 0x0180(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UWBP_InventoryBag_CM_C* Bag, class UWBP_InventorySlot_CM_C* Slot)> K2Node_CreateDelegate_OutputDelegate_4;            // 0x0188(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UWBP_InventoryBag_CM_C* Bag, class UWBP_InventorySlot_CM_C* Slot)> K2Node_CreateDelegate_OutputDelegate_5;            // 0x0198(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Inventory_CM_C_CreateBagsForBagTypes) == 0x000008, "Wrong alignment on WBP_Inventory_CM_C_CreateBagsForBagTypes");
static_assert(sizeof(WBP_Inventory_CM_C_CreateBagsForBagTypes) == 0x0001A8, "Wrong size on WBP_Inventory_CM_C_CreateBagsForBagTypes");
static_assert(offsetof(WBP_Inventory_CM_C_CreateBagsForBagTypes, BagTypes) == 0x000000, "Member 'WBP_Inventory_CM_C_CreateBagsForBagTypes::BagTypes' has a wrong offset!");
static_assert(offsetof(WBP_Inventory_CM_C_CreateBagsForBagTypes, BagsVerticalBox) == 0x000010, "Member 'WBP_Inventory_CM_C_CreateBagsForBagTypes::BagsVerticalBox' has a wrong offset!");
static_assert(offsetof(WBP_Inventory_CM_C_CreateBagsForBagTypes, LastUsedBagIndicesRef) == 0x000018, "Member 'WBP_Inventory_CM_C_CreateBagsForBagTypes::LastUsedBagIndicesRef' has a wrong offset!");
static_assert(offsetof(WBP_Inventory_CM_C_CreateBagsForBagTypes, BagIndex) == 0x000028, "Member 'WBP_Inventory_CM_C_CreateBagsForBagTypes::BagIndex' has a wrong offset!");
static_assert(offsetof(WBP_Inventory_CM_C_CreateBagsForBagTypes, InventorySlots) == 0x000030, "Member 'WBP_Inventory_CM_C_CreateBagsForBagTypes::InventorySlots' has a wrong offset!");
static_assert(offsetof(WBP_Inventory_CM_C_CreateBagsForBagTypes, FirstInventoryBag) == 0x000040, "Member 'WBP_Inventory_CM_C_CreateBagsForBagTypes::FirstInventoryBag' has a wrong offset!");
static_assert(offsetof(WBP_Inventory_CM_C_CreateBagsForBagTypes, Temp_int_Array_Index_Variable) == 0x000048, "Member 'WBP_Inventory_CM_C_CreateBagsForBagTypes::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Inventory_CM_C_CreateBagsForBagTypes, CallFunc_Array_Length_ReturnValue) == 0x00004C, "Member 'WBP_Inventory_CM_C_CreateBagsForBagTypes::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Inventory_CM_C_CreateBagsForBagTypes, CallFunc_GetMaxNumBagsAllowedForBagTypes_ReturnValue) == 0x000050, "Member 'WBP_Inventory_CM_C_CreateBagsForBagTypes::CallFunc_GetMaxNumBagsAllowedForBagTypes_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Inventory_CM_C_CreateBagsForBagTypes, Temp_int_Variable) == 0x000054, "Member 'WBP_Inventory_CM_C_CreateBagsForBagTypes::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Inventory_CM_C_CreateBagsForBagTypes, CallFunc_Subtract_IntInt_ReturnValue) == 0x000058, "Member 'WBP_Inventory_CM_C_CreateBagsForBagTypes::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Inventory_CM_C_CreateBagsForBagTypes, CallFunc_LessEqual_IntInt_ReturnValue) == 0x00005C, "Member 'WBP_Inventory_CM_C_CreateBagsForBagTypes::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Inventory_CM_C_CreateBagsForBagTypes, CallFunc_Add_IntInt_ReturnValue) == 0x000060, "Member 'WBP_Inventory_CM_C_CreateBagsForBagTypes::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Inventory_CM_C_CreateBagsForBagTypes, CallFunc_GetLockedRowBackgroundImageSize_ImageSize) == 0x000068, "Member 'WBP_Inventory_CM_C_CreateBagsForBagTypes::CallFunc_GetLockedRowBackgroundImageSize_ImageSize' has a wrong offset!");
static_assert(offsetof(WBP_Inventory_CM_C_CreateBagsForBagTypes, CallFunc_GetUnlockedRowPadding_Padding) == 0x000078, "Member 'WBP_Inventory_CM_C_CreateBagsForBagTypes::CallFunc_GetUnlockedRowPadding_Padding' has a wrong offset!");
static_assert(offsetof(WBP_Inventory_CM_C_CreateBagsForBagTypes, CallFunc_GetLockedRowPadding_Padding) == 0x000088, "Member 'WBP_Inventory_CM_C_CreateBagsForBagTypes::CallFunc_GetLockedRowPadding_Padding' has a wrong offset!");
static_assert(offsetof(WBP_Inventory_CM_C_CreateBagsForBagTypes, CallFunc_GetNavGroupForIndex_NavGroup) == 0x000098, "Member 'WBP_Inventory_CM_C_CreateBagsForBagTypes::CallFunc_GetNavGroupForIndex_NavGroup' has a wrong offset!");
static_assert(offsetof(WBP_Inventory_CM_C_CreateBagsForBagTypes, CallFunc_GetAllChildren_ReturnValue) == 0x0000A0, "Member 'WBP_Inventory_CM_C_CreateBagsForBagTypes::CallFunc_GetAllChildren_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Inventory_CM_C_CreateBagsForBagTypes, CallFunc_Array_Get_Item) == 0x0000B0, "Member 'WBP_Inventory_CM_C_CreateBagsForBagTypes::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_Inventory_CM_C_CreateBagsForBagTypes, CallFunc_Array_Length_ReturnValue_1) == 0x0000B8, "Member 'WBP_Inventory_CM_C_CreateBagsForBagTypes::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_Inventory_CM_C_CreateBagsForBagTypes, K2Node_DynamicCast_AsWBP_Inventory_Bag_CM) == 0x0000C0, "Member 'WBP_Inventory_CM_C_CreateBagsForBagTypes::K2Node_DynamicCast_AsWBP_Inventory_Bag_CM' has a wrong offset!");
static_assert(offsetof(WBP_Inventory_CM_C_CreateBagsForBagTypes, K2Node_DynamicCast_bSuccess) == 0x0000C8, "Member 'WBP_Inventory_CM_C_CreateBagsForBagTypes::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_Inventory_CM_C_CreateBagsForBagTypes, CallFunc_GetAllSlots_Slots) == 0x0000D0, "Member 'WBP_Inventory_CM_C_CreateBagsForBagTypes::CallFunc_GetAllSlots_Slots' has a wrong offset!");
static_assert(offsetof(WBP_Inventory_CM_C_CreateBagsForBagTypes, Temp_int_Array_Index_Variable_1) == 0x0000E0, "Member 'WBP_Inventory_CM_C_CreateBagsForBagTypes::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_Inventory_CM_C_CreateBagsForBagTypes, CallFunc_IsValid_ReturnValue) == 0x0000E4, "Member 'WBP_Inventory_CM_C_CreateBagsForBagTypes::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Inventory_CM_C_CreateBagsForBagTypes, K2Node_CreateDelegate_OutputDelegate) == 0x0000E8, "Member 'WBP_Inventory_CM_C_CreateBagsForBagTypes::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WBP_Inventory_CM_C_CreateBagsForBagTypes, K2Node_CreateDelegate_OutputDelegate_1) == 0x0000F8, "Member 'WBP_Inventory_CM_C_CreateBagsForBagTypes::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(WBP_Inventory_CM_C_CreateBagsForBagTypes, K2Node_CreateDelegate_OutputDelegate_2) == 0x000108, "Member 'WBP_Inventory_CM_C_CreateBagsForBagTypes::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(WBP_Inventory_CM_C_CreateBagsForBagTypes, K2Node_CreateDelegate_OutputDelegate_3) == 0x000118, "Member 'WBP_Inventory_CM_C_CreateBagsForBagTypes::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");
static_assert(offsetof(WBP_Inventory_CM_C_CreateBagsForBagTypes, Temp_int_Loop_Counter_Variable) == 0x000128, "Member 'WBP_Inventory_CM_C_CreateBagsForBagTypes::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Inventory_CM_C_CreateBagsForBagTypes, CallFunc_Subtract_IntInt_ReturnValue_1) == 0x00012C, "Member 'WBP_Inventory_CM_C_CreateBagsForBagTypes::CallFunc_Subtract_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_Inventory_CM_C_CreateBagsForBagTypes, CallFunc_GetBagIndicesMatchingBagTypes_ReturnValue) == 0x000130, "Member 'WBP_Inventory_CM_C_CreateBagsForBagTypes::CallFunc_GetBagIndicesMatchingBagTypes_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Inventory_CM_C_CreateBagsForBagTypes, CallFunc_Array_Get_Item_1) == 0x000140, "Member 'WBP_Inventory_CM_C_CreateBagsForBagTypes::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(WBP_Inventory_CM_C_CreateBagsForBagTypes, CallFunc_Array_Length_ReturnValue_2) == 0x000144, "Member 'WBP_Inventory_CM_C_CreateBagsForBagTypes::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_Inventory_CM_C_CreateBagsForBagTypes, CallFunc_Subtract_IntInt_ReturnValue_2) == 0x000148, "Member 'WBP_Inventory_CM_C_CreateBagsForBagTypes::CallFunc_Subtract_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_Inventory_CM_C_CreateBagsForBagTypes, CallFunc_Array_Identical_ReturnValue) == 0x00014C, "Member 'WBP_Inventory_CM_C_CreateBagsForBagTypes::CallFunc_Array_Identical_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Inventory_CM_C_CreateBagsForBagTypes, CallFunc_Max_ReturnValue) == 0x000150, "Member 'WBP_Inventory_CM_C_CreateBagsForBagTypes::CallFunc_Max_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Inventory_CM_C_CreateBagsForBagTypes, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000154, "Member 'WBP_Inventory_CM_C_CreateBagsForBagTypes::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Inventory_CM_C_CreateBagsForBagTypes, Temp_int_Loop_Counter_Variable_1) == 0x000158, "Member 'WBP_Inventory_CM_C_CreateBagsForBagTypes::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_Inventory_CM_C_CreateBagsForBagTypes, CallFunc_Create_ReturnValue) == 0x000160, "Member 'WBP_Inventory_CM_C_CreateBagsForBagTypes::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Inventory_CM_C_CreateBagsForBagTypes, CallFunc_AddChildToVerticalBox_ReturnValue) == 0x000168, "Member 'WBP_Inventory_CM_C_CreateBagsForBagTypes::CallFunc_AddChildToVerticalBox_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Inventory_CM_C_CreateBagsForBagTypes, CallFunc_Less_IntInt_ReturnValue) == 0x000170, "Member 'WBP_Inventory_CM_C_CreateBagsForBagTypes::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Inventory_CM_C_CreateBagsForBagTypes, CallFunc_Add_IntInt_ReturnValue_1) == 0x000174, "Member 'WBP_Inventory_CM_C_CreateBagsForBagTypes::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_Inventory_CM_C_CreateBagsForBagTypes, CallFunc_Create_ReturnValue_1) == 0x000178, "Member 'WBP_Inventory_CM_C_CreateBagsForBagTypes::CallFunc_Create_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_Inventory_CM_C_CreateBagsForBagTypes, CallFunc_AddChildToVerticalBox_ReturnValue_1) == 0x000180, "Member 'WBP_Inventory_CM_C_CreateBagsForBagTypes::CallFunc_AddChildToVerticalBox_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_Inventory_CM_C_CreateBagsForBagTypes, K2Node_CreateDelegate_OutputDelegate_4) == 0x000188, "Member 'WBP_Inventory_CM_C_CreateBagsForBagTypes::K2Node_CreateDelegate_OutputDelegate_4' has a wrong offset!");
static_assert(offsetof(WBP_Inventory_CM_C_CreateBagsForBagTypes, K2Node_CreateDelegate_OutputDelegate_5) == 0x000198, "Member 'WBP_Inventory_CM_C_CreateBagsForBagTypes::K2Node_CreateDelegate_OutputDelegate_5' has a wrong offset!");

// Function WBP_Inventory_CM.WBP_Inventory_CM_C.ExecuteUbergraph_WBP_Inventory_CM
// 0x0170 (0x0170 - 0x0000)
struct WBP_Inventory_CM_C_ExecuteUbergraph_WBP_Inventory_CM final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UInventoryComponent* Inventory)> K2Node_CreateDelegate_OutputDelegate;              // 0x0004(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0015(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_58A9[0x2];                                     // 0x0016(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UInventoryComponent*                    K2Node_CustomEvent_Inventory;                      // 0x0018(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UWBP_InventoryBag_CM_C*                 K2Node_CustomEvent_Bag_2;                          // 0x0020(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UWBP_InventorySlot_CM_C*                K2Node_CustomEvent_Slot_4;                         // 0x0028(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UWBP_InventorySlot_CM_C*                K2Node_CustomEvent_Slot_3;                         // 0x0030(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UWBP_InventoryBag_CM_C*                 K2Node_CustomEvent_Bag_1;                          // 0x0038(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UWBP_InventorySlot_CM_C*                K2Node_CustomEvent_Slot_2;                         // 0x0040(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UWBP_InventoryBag_CM_C*                 K2Node_CustomEvent_Bag;                            // 0x0048(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UWBP_InventorySlot_CM_C*                K2Node_CustomEvent_Slot_1;                         // 0x0050(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UWBP_InventorySlot_CM_C*                K2Node_CustomEvent_Slot;                           // 0x0058(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_58AA[0x7];                                     // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_InventoryBag_CM_C*                 K2Node_CustomEvent_Bag_3;                          // 0x0068(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UWBP_InventorySlot_CM_C*                K2Node_CustomEvent_Slot_5;                         // 0x0070(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UInventoryComponent* Inventory)> K2Node_CreateDelegate_OutputDelegate_1;            // 0x0078(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_58AB[0x3];                                     // 0x0089(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(int32 Tab_Selection)>          K2Node_CreateDelegate_OutputDelegate_2;            // 0x008C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_Tab_Selection;                  // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UVerticalBox*                           CallFunc_GetVerticalBoxByIndex_VBox;               // 0x00A0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(int32 Tab_Selection)>          K2Node_CreateDelegate_OutputDelegate_3;            // 0x00A8(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UWBP_InventoryBag_CM_C*                 CallFunc_Map_Find_Value;                           // 0x00B8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x00C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_58AC[0x6];                                     // 0x00C2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_InventorySlot_CM_C*                CallFunc_GetFirstInventorySlot_FirstSlot;          // 0x00C8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_4;                    // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_58AD[0x3];                                     // 0x00D1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(const struct FValeriaItem& Item)> K2Node_CreateDelegate_OutputDelegate_4;            // 0x00D4(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_58AE[0x4];                                     // 0x00E4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FValeriaItem                           K2Node_CustomEvent_Item;                           // 0x00E8(0x0060)()
	class UObject*                                CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue; // 0x0148(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasMainBag_bMainBag;                      // 0x0150(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_58AF[0x7];                                     // 0x0151(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UVAL_ItemTypeDefinitionAsset*           K2Node_DynamicCast_AsItem_Type_Definition;         // 0x0158(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0160(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_5;                    // 0x0161(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0162(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasQuestBag_bQuestBag;                    // 0x0163(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAmmoBag_bAmmoBag;                      // 0x0164(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_58B0[0x3];                                     // 0x0165(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_InventorySlot_CM_C*                CallFunc_Initialize_Inventory_Focus_Output;        // 0x0168(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Inventory_CM_C_ExecuteUbergraph_WBP_Inventory_CM) == 0x000008, "Wrong alignment on WBP_Inventory_CM_C_ExecuteUbergraph_WBP_Inventory_CM");
static_assert(sizeof(WBP_Inventory_CM_C_ExecuteUbergraph_WBP_Inventory_CM) == 0x000170, "Wrong size on WBP_Inventory_CM_C_ExecuteUbergraph_WBP_Inventory_CM");
static_assert(offsetof(WBP_Inventory_CM_C_ExecuteUbergraph_WBP_Inventory_CM, EntryPoint) == 0x000000, "Member 'WBP_Inventory_CM_C_ExecuteUbergraph_WBP_Inventory_CM::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_Inventory_CM_C_ExecuteUbergraph_WBP_Inventory_CM, K2Node_CreateDelegate_OutputDelegate) == 0x000004, "Member 'WBP_Inventory_CM_C_ExecuteUbergraph_WBP_Inventory_CM::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WBP_Inventory_CM_C_ExecuteUbergraph_WBP_Inventory_CM, CallFunc_IsValid_ReturnValue) == 0x000014, "Member 'WBP_Inventory_CM_C_ExecuteUbergraph_WBP_Inventory_CM::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Inventory_CM_C_ExecuteUbergraph_WBP_Inventory_CM, CallFunc_IsValid_ReturnValue_1) == 0x000015, "Member 'WBP_Inventory_CM_C_ExecuteUbergraph_WBP_Inventory_CM::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_Inventory_CM_C_ExecuteUbergraph_WBP_Inventory_CM, K2Node_CustomEvent_Inventory) == 0x000018, "Member 'WBP_Inventory_CM_C_ExecuteUbergraph_WBP_Inventory_CM::K2Node_CustomEvent_Inventory' has a wrong offset!");
static_assert(offsetof(WBP_Inventory_CM_C_ExecuteUbergraph_WBP_Inventory_CM, K2Node_CustomEvent_Bag_2) == 0x000020, "Member 'WBP_Inventory_CM_C_ExecuteUbergraph_WBP_Inventory_CM::K2Node_CustomEvent_Bag_2' has a wrong offset!");
static_assert(offsetof(WBP_Inventory_CM_C_ExecuteUbergraph_WBP_Inventory_CM, K2Node_CustomEvent_Slot_4) == 0x000028, "Member 'WBP_Inventory_CM_C_ExecuteUbergraph_WBP_Inventory_CM::K2Node_CustomEvent_Slot_4' has a wrong offset!");
static_assert(offsetof(WBP_Inventory_CM_C_ExecuteUbergraph_WBP_Inventory_CM, K2Node_CustomEvent_Slot_3) == 0x000030, "Member 'WBP_Inventory_CM_C_ExecuteUbergraph_WBP_Inventory_CM::K2Node_CustomEvent_Slot_3' has a wrong offset!");
static_assert(offsetof(WBP_Inventory_CM_C_ExecuteUbergraph_WBP_Inventory_CM, K2Node_CustomEvent_Bag_1) == 0x000038, "Member 'WBP_Inventory_CM_C_ExecuteUbergraph_WBP_Inventory_CM::K2Node_CustomEvent_Bag_1' has a wrong offset!");
static_assert(offsetof(WBP_Inventory_CM_C_ExecuteUbergraph_WBP_Inventory_CM, K2Node_CustomEvent_Slot_2) == 0x000040, "Member 'WBP_Inventory_CM_C_ExecuteUbergraph_WBP_Inventory_CM::K2Node_CustomEvent_Slot_2' has a wrong offset!");
static_assert(offsetof(WBP_Inventory_CM_C_ExecuteUbergraph_WBP_Inventory_CM, K2Node_CustomEvent_Bag) == 0x000048, "Member 'WBP_Inventory_CM_C_ExecuteUbergraph_WBP_Inventory_CM::K2Node_CustomEvent_Bag' has a wrong offset!");
static_assert(offsetof(WBP_Inventory_CM_C_ExecuteUbergraph_WBP_Inventory_CM, K2Node_CustomEvent_Slot_1) == 0x000050, "Member 'WBP_Inventory_CM_C_ExecuteUbergraph_WBP_Inventory_CM::K2Node_CustomEvent_Slot_1' has a wrong offset!");
static_assert(offsetof(WBP_Inventory_CM_C_ExecuteUbergraph_WBP_Inventory_CM, K2Node_CustomEvent_Slot) == 0x000058, "Member 'WBP_Inventory_CM_C_ExecuteUbergraph_WBP_Inventory_CM::K2Node_CustomEvent_Slot' has a wrong offset!");
static_assert(offsetof(WBP_Inventory_CM_C_ExecuteUbergraph_WBP_Inventory_CM, CallFunc_IsValid_ReturnValue_2) == 0x000060, "Member 'WBP_Inventory_CM_C_ExecuteUbergraph_WBP_Inventory_CM::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_Inventory_CM_C_ExecuteUbergraph_WBP_Inventory_CM, K2Node_CustomEvent_Bag_3) == 0x000068, "Member 'WBP_Inventory_CM_C_ExecuteUbergraph_WBP_Inventory_CM::K2Node_CustomEvent_Bag_3' has a wrong offset!");
static_assert(offsetof(WBP_Inventory_CM_C_ExecuteUbergraph_WBP_Inventory_CM, K2Node_CustomEvent_Slot_5) == 0x000070, "Member 'WBP_Inventory_CM_C_ExecuteUbergraph_WBP_Inventory_CM::K2Node_CustomEvent_Slot_5' has a wrong offset!");
static_assert(offsetof(WBP_Inventory_CM_C_ExecuteUbergraph_WBP_Inventory_CM, K2Node_CreateDelegate_OutputDelegate_1) == 0x000078, "Member 'WBP_Inventory_CM_C_ExecuteUbergraph_WBP_Inventory_CM::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(WBP_Inventory_CM_C_ExecuteUbergraph_WBP_Inventory_CM, K2Node_Event_IsDesignTime) == 0x000088, "Member 'WBP_Inventory_CM_C_ExecuteUbergraph_WBP_Inventory_CM::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(WBP_Inventory_CM_C_ExecuteUbergraph_WBP_Inventory_CM, K2Node_CreateDelegate_OutputDelegate_2) == 0x00008C, "Member 'WBP_Inventory_CM_C_ExecuteUbergraph_WBP_Inventory_CM::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(WBP_Inventory_CM_C_ExecuteUbergraph_WBP_Inventory_CM, K2Node_CustomEvent_Tab_Selection) == 0x00009C, "Member 'WBP_Inventory_CM_C_ExecuteUbergraph_WBP_Inventory_CM::K2Node_CustomEvent_Tab_Selection' has a wrong offset!");
static_assert(offsetof(WBP_Inventory_CM_C_ExecuteUbergraph_WBP_Inventory_CM, CallFunc_GetVerticalBoxByIndex_VBox) == 0x0000A0, "Member 'WBP_Inventory_CM_C_ExecuteUbergraph_WBP_Inventory_CM::CallFunc_GetVerticalBoxByIndex_VBox' has a wrong offset!");
static_assert(offsetof(WBP_Inventory_CM_C_ExecuteUbergraph_WBP_Inventory_CM, K2Node_CreateDelegate_OutputDelegate_3) == 0x0000A8, "Member 'WBP_Inventory_CM_C_ExecuteUbergraph_WBP_Inventory_CM::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");
static_assert(offsetof(WBP_Inventory_CM_C_ExecuteUbergraph_WBP_Inventory_CM, CallFunc_Map_Find_Value) == 0x0000B8, "Member 'WBP_Inventory_CM_C_ExecuteUbergraph_WBP_Inventory_CM::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(WBP_Inventory_CM_C_ExecuteUbergraph_WBP_Inventory_CM, CallFunc_Map_Find_ReturnValue) == 0x0000C0, "Member 'WBP_Inventory_CM_C_ExecuteUbergraph_WBP_Inventory_CM::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Inventory_CM_C_ExecuteUbergraph_WBP_Inventory_CM, CallFunc_IsValid_ReturnValue_3) == 0x0000C1, "Member 'WBP_Inventory_CM_C_ExecuteUbergraph_WBP_Inventory_CM::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WBP_Inventory_CM_C_ExecuteUbergraph_WBP_Inventory_CM, CallFunc_GetFirstInventorySlot_FirstSlot) == 0x0000C8, "Member 'WBP_Inventory_CM_C_ExecuteUbergraph_WBP_Inventory_CM::CallFunc_GetFirstInventorySlot_FirstSlot' has a wrong offset!");
static_assert(offsetof(WBP_Inventory_CM_C_ExecuteUbergraph_WBP_Inventory_CM, CallFunc_IsValid_ReturnValue_4) == 0x0000D0, "Member 'WBP_Inventory_CM_C_ExecuteUbergraph_WBP_Inventory_CM::CallFunc_IsValid_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(WBP_Inventory_CM_C_ExecuteUbergraph_WBP_Inventory_CM, K2Node_CreateDelegate_OutputDelegate_4) == 0x0000D4, "Member 'WBP_Inventory_CM_C_ExecuteUbergraph_WBP_Inventory_CM::K2Node_CreateDelegate_OutputDelegate_4' has a wrong offset!");
static_assert(offsetof(WBP_Inventory_CM_C_ExecuteUbergraph_WBP_Inventory_CM, K2Node_CustomEvent_Item) == 0x0000E8, "Member 'WBP_Inventory_CM_C_ExecuteUbergraph_WBP_Inventory_CM::K2Node_CustomEvent_Item' has a wrong offset!");
static_assert(offsetof(WBP_Inventory_CM_C_ExecuteUbergraph_WBP_Inventory_CM, CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue) == 0x000148, "Member 'WBP_Inventory_CM_C_ExecuteUbergraph_WBP_Inventory_CM::CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Inventory_CM_C_ExecuteUbergraph_WBP_Inventory_CM, CallFunc_HasMainBag_bMainBag) == 0x000150, "Member 'WBP_Inventory_CM_C_ExecuteUbergraph_WBP_Inventory_CM::CallFunc_HasMainBag_bMainBag' has a wrong offset!");
static_assert(offsetof(WBP_Inventory_CM_C_ExecuteUbergraph_WBP_Inventory_CM, K2Node_DynamicCast_AsItem_Type_Definition) == 0x000158, "Member 'WBP_Inventory_CM_C_ExecuteUbergraph_WBP_Inventory_CM::K2Node_DynamicCast_AsItem_Type_Definition' has a wrong offset!");
static_assert(offsetof(WBP_Inventory_CM_C_ExecuteUbergraph_WBP_Inventory_CM, K2Node_DynamicCast_bSuccess) == 0x000160, "Member 'WBP_Inventory_CM_C_ExecuteUbergraph_WBP_Inventory_CM::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_Inventory_CM_C_ExecuteUbergraph_WBP_Inventory_CM, CallFunc_IsValid_ReturnValue_5) == 0x000161, "Member 'WBP_Inventory_CM_C_ExecuteUbergraph_WBP_Inventory_CM::CallFunc_IsValid_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(WBP_Inventory_CM_C_ExecuteUbergraph_WBP_Inventory_CM, K2Node_SwitchEnum_CmpSuccess) == 0x000162, "Member 'WBP_Inventory_CM_C_ExecuteUbergraph_WBP_Inventory_CM::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(WBP_Inventory_CM_C_ExecuteUbergraph_WBP_Inventory_CM, CallFunc_HasQuestBag_bQuestBag) == 0x000163, "Member 'WBP_Inventory_CM_C_ExecuteUbergraph_WBP_Inventory_CM::CallFunc_HasQuestBag_bQuestBag' has a wrong offset!");
static_assert(offsetof(WBP_Inventory_CM_C_ExecuteUbergraph_WBP_Inventory_CM, CallFunc_HasAmmoBag_bAmmoBag) == 0x000164, "Member 'WBP_Inventory_CM_C_ExecuteUbergraph_WBP_Inventory_CM::CallFunc_HasAmmoBag_bAmmoBag' has a wrong offset!");
static_assert(offsetof(WBP_Inventory_CM_C_ExecuteUbergraph_WBP_Inventory_CM, CallFunc_Initialize_Inventory_Focus_Output) == 0x000168, "Member 'WBP_Inventory_CM_C_ExecuteUbergraph_WBP_Inventory_CM::CallFunc_Initialize_Inventory_Focus_Output' has a wrong offset!");

// Function WBP_Inventory_CM.WBP_Inventory_CM_C.Get Best Default Bag Widget Switcher Index
// 0x0008 (0x0008 - 0x0000)
struct WBP_Inventory_CM_C_Get_Best_Default_Bag_Widget_Switcher_Index final
{
public:
	int32                                         WidgetSwitcherIndex;                               // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasOtherBag_OtherBag;                     // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasQuestBag_bQuestBag;                    // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAmmoBag_bAmmoBag;                      // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasMainBag_bMainBag;                      // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Inventory_CM_C_Get_Best_Default_Bag_Widget_Switcher_Index) == 0x000004, "Wrong alignment on WBP_Inventory_CM_C_Get_Best_Default_Bag_Widget_Switcher_Index");
static_assert(sizeof(WBP_Inventory_CM_C_Get_Best_Default_Bag_Widget_Switcher_Index) == 0x000008, "Wrong size on WBP_Inventory_CM_C_Get_Best_Default_Bag_Widget_Switcher_Index");
static_assert(offsetof(WBP_Inventory_CM_C_Get_Best_Default_Bag_Widget_Switcher_Index, WidgetSwitcherIndex) == 0x000000, "Member 'WBP_Inventory_CM_C_Get_Best_Default_Bag_Widget_Switcher_Index::WidgetSwitcherIndex' has a wrong offset!");
static_assert(offsetof(WBP_Inventory_CM_C_Get_Best_Default_Bag_Widget_Switcher_Index, CallFunc_HasOtherBag_OtherBag) == 0x000004, "Member 'WBP_Inventory_CM_C_Get_Best_Default_Bag_Widget_Switcher_Index::CallFunc_HasOtherBag_OtherBag' has a wrong offset!");
static_assert(offsetof(WBP_Inventory_CM_C_Get_Best_Default_Bag_Widget_Switcher_Index, CallFunc_HasQuestBag_bQuestBag) == 0x000005, "Member 'WBP_Inventory_CM_C_Get_Best_Default_Bag_Widget_Switcher_Index::CallFunc_HasQuestBag_bQuestBag' has a wrong offset!");
static_assert(offsetof(WBP_Inventory_CM_C_Get_Best_Default_Bag_Widget_Switcher_Index, CallFunc_HasAmmoBag_bAmmoBag) == 0x000006, "Member 'WBP_Inventory_CM_C_Get_Best_Default_Bag_Widget_Switcher_Index::CallFunc_HasAmmoBag_bAmmoBag' has a wrong offset!");
static_assert(offsetof(WBP_Inventory_CM_C_Get_Best_Default_Bag_Widget_Switcher_Index, CallFunc_HasMainBag_bMainBag) == 0x000007, "Member 'WBP_Inventory_CM_C_Get_Best_Default_Bag_Widget_Switcher_Index::CallFunc_HasMainBag_bMainBag' has a wrong offset!");

// Function WBP_Inventory_CM.WBP_Inventory_CM_C.GetActiveInventoryDefaultSlot
// 0x0028 (0x0028 - 0x0000)
struct WBP_Inventory_CM_C_GetActiveInventoryDefaultSlot final
{
public:
	class UWBP_InventorySlot_CM_C*                ActiveInventoryDefaultSlot;                        // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetActiveWidgetIndex_ReturnValue;         // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_58B1[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_InventoryBag_CM_C*                 CallFunc_Map_Find_Value;                           // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_58B2[0x6];                                     // 0x001A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_InventorySlot_CM_C*                CallFunc_GetFirstInventorySlot_FirstSlot;          // 0x0020(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Inventory_CM_C_GetActiveInventoryDefaultSlot) == 0x000008, "Wrong alignment on WBP_Inventory_CM_C_GetActiveInventoryDefaultSlot");
static_assert(sizeof(WBP_Inventory_CM_C_GetActiveInventoryDefaultSlot) == 0x000028, "Wrong size on WBP_Inventory_CM_C_GetActiveInventoryDefaultSlot");
static_assert(offsetof(WBP_Inventory_CM_C_GetActiveInventoryDefaultSlot, ActiveInventoryDefaultSlot) == 0x000000, "Member 'WBP_Inventory_CM_C_GetActiveInventoryDefaultSlot::ActiveInventoryDefaultSlot' has a wrong offset!");
static_assert(offsetof(WBP_Inventory_CM_C_GetActiveInventoryDefaultSlot, CallFunc_GetActiveWidgetIndex_ReturnValue) == 0x000008, "Member 'WBP_Inventory_CM_C_GetActiveInventoryDefaultSlot::CallFunc_GetActiveWidgetIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Inventory_CM_C_GetActiveInventoryDefaultSlot, CallFunc_Map_Find_Value) == 0x000010, "Member 'WBP_Inventory_CM_C_GetActiveInventoryDefaultSlot::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(WBP_Inventory_CM_C_GetActiveInventoryDefaultSlot, CallFunc_Map_Find_ReturnValue) == 0x000018, "Member 'WBP_Inventory_CM_C_GetActiveInventoryDefaultSlot::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Inventory_CM_C_GetActiveInventoryDefaultSlot, CallFunc_IsValid_ReturnValue) == 0x000019, "Member 'WBP_Inventory_CM_C_GetActiveInventoryDefaultSlot::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Inventory_CM_C_GetActiveInventoryDefaultSlot, CallFunc_GetFirstInventorySlot_FirstSlot) == 0x000020, "Member 'WBP_Inventory_CM_C_GetActiveInventoryDefaultSlot::CallFunc_GetFirstInventorySlot_FirstSlot' has a wrong offset!");

// Function WBP_Inventory_CM.WBP_Inventory_CM_C.GetAllBagVerticalBoxes
// 0x0030 (0x0030 - 0x0000)
struct WBP_Inventory_CM_C_GetAllBagVerticalBoxes final
{
public:
	TArray<class UVerticalBox*>                   AllBagVerticalBoxes;                               // 0x0000(0x0010)(Parm, OutParm, ContainsInstancedReference)
	TArray<class UVerticalBox*>                   NewBagVerticalBoxes;                               // 0x0010(0x0010)(Edit, BlueprintVisible, ContainsInstancedReference)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_2;                  // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_3;                  // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Inventory_CM_C_GetAllBagVerticalBoxes) == 0x000008, "Wrong alignment on WBP_Inventory_CM_C_GetAllBagVerticalBoxes");
static_assert(sizeof(WBP_Inventory_CM_C_GetAllBagVerticalBoxes) == 0x000030, "Wrong size on WBP_Inventory_CM_C_GetAllBagVerticalBoxes");
static_assert(offsetof(WBP_Inventory_CM_C_GetAllBagVerticalBoxes, AllBagVerticalBoxes) == 0x000000, "Member 'WBP_Inventory_CM_C_GetAllBagVerticalBoxes::AllBagVerticalBoxes' has a wrong offset!");
static_assert(offsetof(WBP_Inventory_CM_C_GetAllBagVerticalBoxes, NewBagVerticalBoxes) == 0x000010, "Member 'WBP_Inventory_CM_C_GetAllBagVerticalBoxes::NewBagVerticalBoxes' has a wrong offset!");
static_assert(offsetof(WBP_Inventory_CM_C_GetAllBagVerticalBoxes, CallFunc_Array_Add_ReturnValue) == 0x000020, "Member 'WBP_Inventory_CM_C_GetAllBagVerticalBoxes::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Inventory_CM_C_GetAllBagVerticalBoxes, CallFunc_Array_Add_ReturnValue_1) == 0x000024, "Member 'WBP_Inventory_CM_C_GetAllBagVerticalBoxes::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_Inventory_CM_C_GetAllBagVerticalBoxes, CallFunc_Array_Add_ReturnValue_2) == 0x000028, "Member 'WBP_Inventory_CM_C_GetAllBagVerticalBoxes::CallFunc_Array_Add_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_Inventory_CM_C_GetAllBagVerticalBoxes, CallFunc_Array_Add_ReturnValue_3) == 0x00002C, "Member 'WBP_Inventory_CM_C_GetAllBagVerticalBoxes::CallFunc_Array_Add_ReturnValue_3' has a wrong offset!");

// Function WBP_Inventory_CM.WBP_Inventory_CM_C.GetAllNavGroups
// 0x0030 (0x0030 - 0x0000)
struct WBP_Inventory_CM_C_GetAllNavGroups final
{
public:
	TArray<class US6UI_CustomNavigationGroup*>    AllNavGroups;                                      // 0x0000(0x0010)(Parm, OutParm, ContainsInstancedReference)
	TArray<class US6UI_CustomNavigationGroup*>    NavGroups;                                         // 0x0010(0x0010)(Edit, BlueprintVisible, ContainsInstancedReference)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_2;                  // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_3;                  // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Inventory_CM_C_GetAllNavGroups) == 0x000008, "Wrong alignment on WBP_Inventory_CM_C_GetAllNavGroups");
static_assert(sizeof(WBP_Inventory_CM_C_GetAllNavGroups) == 0x000030, "Wrong size on WBP_Inventory_CM_C_GetAllNavGroups");
static_assert(offsetof(WBP_Inventory_CM_C_GetAllNavGroups, AllNavGroups) == 0x000000, "Member 'WBP_Inventory_CM_C_GetAllNavGroups::AllNavGroups' has a wrong offset!");
static_assert(offsetof(WBP_Inventory_CM_C_GetAllNavGroups, NavGroups) == 0x000010, "Member 'WBP_Inventory_CM_C_GetAllNavGroups::NavGroups' has a wrong offset!");
static_assert(offsetof(WBP_Inventory_CM_C_GetAllNavGroups, CallFunc_Array_Add_ReturnValue) == 0x000020, "Member 'WBP_Inventory_CM_C_GetAllNavGroups::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Inventory_CM_C_GetAllNavGroups, CallFunc_Array_Add_ReturnValue_1) == 0x000024, "Member 'WBP_Inventory_CM_C_GetAllNavGroups::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_Inventory_CM_C_GetAllNavGroups, CallFunc_Array_Add_ReturnValue_2) == 0x000028, "Member 'WBP_Inventory_CM_C_GetAllNavGroups::CallFunc_Array_Add_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_Inventory_CM_C_GetAllNavGroups, CallFunc_Array_Add_ReturnValue_3) == 0x00002C, "Member 'WBP_Inventory_CM_C_GetAllNavGroups::CallFunc_Array_Add_ReturnValue_3' has a wrong offset!");

// Function WBP_Inventory_CM.WBP_Inventory_CM_C.GetAllSlots
// 0x00A0 (0x00A0 - 0x0000)
struct WBP_Inventory_CM_C_GetAllSlots final
{
public:
	TArray<class UWBP_InventorySlot_CM_C*>        Slots;                                             // 0x0000(0x0010)(Parm, OutParm, ContainsInstancedReference)
	TArray<class UWBP_InventorySlot_CM_C*>        Result;                                            // 0x0010(0x0010)(Edit, BlueprintVisible, ContainsInstancedReference)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UVerticalBox*>                   CallFunc_GetAllBagVerticalBoxes_AllBagVerticalBoxes; // 0x0038(0x0010)(ReferenceParm, ContainsInstancedReference)
	class UVerticalBox*                           CallFunc_Array_Get_Item;                           // 0x0048(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_58B3[0x4];                                     // 0x0054(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UWidget*>                        CallFunc_GetAllChildren_ReturnValue;               // 0x0058(0x0010)(ReferenceParm, ContainsInstancedReference)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_58B4[0x7];                                     // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                CallFunc_Array_Get_Item_1;                         // 0x0070(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UWBP_InventoryBag_CM_C*                 K2Node_DynamicCast_AsWBP_Inventory_Bag_CM;         // 0x0078(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_58B5[0x3];                                     // 0x0081(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UWBP_InventorySlot_CM_C*>        CallFunc_GetAllSlots_Slots;                        // 0x0088(0x0010)(ReferenceParm, ContainsInstancedReference)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Inventory_CM_C_GetAllSlots) == 0x000008, "Wrong alignment on WBP_Inventory_CM_C_GetAllSlots");
static_assert(sizeof(WBP_Inventory_CM_C_GetAllSlots) == 0x0000A0, "Wrong size on WBP_Inventory_CM_C_GetAllSlots");
static_assert(offsetof(WBP_Inventory_CM_C_GetAllSlots, Slots) == 0x000000, "Member 'WBP_Inventory_CM_C_GetAllSlots::Slots' has a wrong offset!");
static_assert(offsetof(WBP_Inventory_CM_C_GetAllSlots, Result) == 0x000010, "Member 'WBP_Inventory_CM_C_GetAllSlots::Result' has a wrong offset!");
static_assert(offsetof(WBP_Inventory_CM_C_GetAllSlots, Temp_int_Loop_Counter_Variable) == 0x000020, "Member 'WBP_Inventory_CM_C_GetAllSlots::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Inventory_CM_C_GetAllSlots, CallFunc_Add_IntInt_ReturnValue) == 0x000024, "Member 'WBP_Inventory_CM_C_GetAllSlots::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Inventory_CM_C_GetAllSlots, Temp_int_Array_Index_Variable) == 0x000028, "Member 'WBP_Inventory_CM_C_GetAllSlots::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Inventory_CM_C_GetAllSlots, Temp_int_Array_Index_Variable_1) == 0x00002C, "Member 'WBP_Inventory_CM_C_GetAllSlots::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_Inventory_CM_C_GetAllSlots, Temp_int_Loop_Counter_Variable_1) == 0x000030, "Member 'WBP_Inventory_CM_C_GetAllSlots::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_Inventory_CM_C_GetAllSlots, CallFunc_Add_IntInt_ReturnValue_1) == 0x000034, "Member 'WBP_Inventory_CM_C_GetAllSlots::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_Inventory_CM_C_GetAllSlots, CallFunc_GetAllBagVerticalBoxes_AllBagVerticalBoxes) == 0x000038, "Member 'WBP_Inventory_CM_C_GetAllSlots::CallFunc_GetAllBagVerticalBoxes_AllBagVerticalBoxes' has a wrong offset!");
static_assert(offsetof(WBP_Inventory_CM_C_GetAllSlots, CallFunc_Array_Get_Item) == 0x000048, "Member 'WBP_Inventory_CM_C_GetAllSlots::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_Inventory_CM_C_GetAllSlots, CallFunc_Array_Length_ReturnValue) == 0x000050, "Member 'WBP_Inventory_CM_C_GetAllSlots::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Inventory_CM_C_GetAllSlots, CallFunc_GetAllChildren_ReturnValue) == 0x000058, "Member 'WBP_Inventory_CM_C_GetAllSlots::CallFunc_GetAllChildren_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Inventory_CM_C_GetAllSlots, CallFunc_Less_IntInt_ReturnValue) == 0x000068, "Member 'WBP_Inventory_CM_C_GetAllSlots::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Inventory_CM_C_GetAllSlots, CallFunc_Array_Get_Item_1) == 0x000070, "Member 'WBP_Inventory_CM_C_GetAllSlots::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(WBP_Inventory_CM_C_GetAllSlots, K2Node_DynamicCast_AsWBP_Inventory_Bag_CM) == 0x000078, "Member 'WBP_Inventory_CM_C_GetAllSlots::K2Node_DynamicCast_AsWBP_Inventory_Bag_CM' has a wrong offset!");
static_assert(offsetof(WBP_Inventory_CM_C_GetAllSlots, K2Node_DynamicCast_bSuccess) == 0x000080, "Member 'WBP_Inventory_CM_C_GetAllSlots::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_Inventory_CM_C_GetAllSlots, CallFunc_Array_Length_ReturnValue_1) == 0x000084, "Member 'WBP_Inventory_CM_C_GetAllSlots::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_Inventory_CM_C_GetAllSlots, CallFunc_GetAllSlots_Slots) == 0x000088, "Member 'WBP_Inventory_CM_C_GetAllSlots::CallFunc_GetAllSlots_Slots' has a wrong offset!");
static_assert(offsetof(WBP_Inventory_CM_C_GetAllSlots, CallFunc_Less_IntInt_ReturnValue_1) == 0x000098, "Member 'WBP_Inventory_CM_C_GetAllSlots::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");

// Function WBP_Inventory_CM.WBP_Inventory_CM_C.GetAllSlotsForBorderNavigationType
// 0x0048 (0x0048 - 0x0000)
struct WBP_Inventory_CM_C_GetAllSlotsForBorderNavigationType final
{
public:
	EUINavigation                                 Param_Navigation;                                  // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_58B6[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UWBP_InventorySlot_CM_C*>        InventorySlots;                                    // 0x0008(0x0010)(Parm, OutParm, ContainsInstancedReference)
	TArray<class UWBP_InventorySlot_CM_C*>        ValidInventorySlots;                               // 0x0018(0x0010)(Edit, BlueprintVisible, ContainsInstancedReference)
	int32                                         Temp_int_Variable;                                 // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UWBP_InventorySlot_CM_C*>        CallFunc_GetSlotsForBorderNavigationTypeAtBagIndex_InventorySlots; // 0x0030(0x0010)(ReferenceParm, ContainsInstancedReference)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Inventory_CM_C_GetAllSlotsForBorderNavigationType) == 0x000008, "Wrong alignment on WBP_Inventory_CM_C_GetAllSlotsForBorderNavigationType");
static_assert(sizeof(WBP_Inventory_CM_C_GetAllSlotsForBorderNavigationType) == 0x000048, "Wrong size on WBP_Inventory_CM_C_GetAllSlotsForBorderNavigationType");
static_assert(offsetof(WBP_Inventory_CM_C_GetAllSlotsForBorderNavigationType, Param_Navigation) == 0x000000, "Member 'WBP_Inventory_CM_C_GetAllSlotsForBorderNavigationType::Param_Navigation' has a wrong offset!");
static_assert(offsetof(WBP_Inventory_CM_C_GetAllSlotsForBorderNavigationType, InventorySlots) == 0x000008, "Member 'WBP_Inventory_CM_C_GetAllSlotsForBorderNavigationType::InventorySlots' has a wrong offset!");
static_assert(offsetof(WBP_Inventory_CM_C_GetAllSlotsForBorderNavigationType, ValidInventorySlots) == 0x000018, "Member 'WBP_Inventory_CM_C_GetAllSlotsForBorderNavigationType::ValidInventorySlots' has a wrong offset!");
static_assert(offsetof(WBP_Inventory_CM_C_GetAllSlotsForBorderNavigationType, Temp_int_Variable) == 0x000028, "Member 'WBP_Inventory_CM_C_GetAllSlotsForBorderNavigationType::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Inventory_CM_C_GetAllSlotsForBorderNavigationType, CallFunc_Add_IntInt_ReturnValue) == 0x00002C, "Member 'WBP_Inventory_CM_C_GetAllSlotsForBorderNavigationType::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Inventory_CM_C_GetAllSlotsForBorderNavigationType, CallFunc_GetSlotsForBorderNavigationTypeAtBagIndex_InventorySlots) == 0x000030, "Member 'WBP_Inventory_CM_C_GetAllSlotsForBorderNavigationType::CallFunc_GetSlotsForBorderNavigationTypeAtBagIndex_InventorySlots' has a wrong offset!");
static_assert(offsetof(WBP_Inventory_CM_C_GetAllSlotsForBorderNavigationType, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000040, "Member 'WBP_Inventory_CM_C_GetAllSlotsForBorderNavigationType::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");

// Function WBP_Inventory_CM.WBP_Inventory_CM_C.GetBagsToDisplay
// 0x0090 (0x0090 - 0x0000)
struct WBP_Inventory_CM_C_GetBagsToDisplay final
{
public:
	TArray<int32>                                 BagIndices;                                        // 0x0000(0x0010)(Parm, OutParm)
	struct FGameplayTag                           CurrentBagType;                                    // 0x0010(0x0008)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash)
	TArray<int32>                                 Result;                                            // 0x0018(0x0010)(Edit, BlueprintVisible)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_2;                   // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           CallFunc_GetBagTypeForBagIndex_ReturnValue;        // 0x0048(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_GameplayTag_ReturnValue;       // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_58B7[0x3];                                     // 0x0051(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_2;                  // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_58B8[0x3];                                     // 0x0061(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           CallFunc_Array_Get_Item;                           // 0x0064(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsEmpty_ReturnValue;                // 0x006C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Set_Contains_ReturnValue;                 // 0x006D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_58B9[0x2];                                     // 0x006E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0074(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_58BA[0x3];                                     // 0x0075(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           CallFunc_GetBagTypeForBagIndex_ReturnValue_1;      // 0x007C(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Set_Contains_ReturnValue_1;               // 0x0084(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_58BB[0x3];                                     // 0x0085(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x008C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Inventory_CM_C_GetBagsToDisplay) == 0x000008, "Wrong alignment on WBP_Inventory_CM_C_GetBagsToDisplay");
static_assert(sizeof(WBP_Inventory_CM_C_GetBagsToDisplay) == 0x000090, "Wrong size on WBP_Inventory_CM_C_GetBagsToDisplay");
static_assert(offsetof(WBP_Inventory_CM_C_GetBagsToDisplay, BagIndices) == 0x000000, "Member 'WBP_Inventory_CM_C_GetBagsToDisplay::BagIndices' has a wrong offset!");
static_assert(offsetof(WBP_Inventory_CM_C_GetBagsToDisplay, CurrentBagType) == 0x000010, "Member 'WBP_Inventory_CM_C_GetBagsToDisplay::CurrentBagType' has a wrong offset!");
static_assert(offsetof(WBP_Inventory_CM_C_GetBagsToDisplay, Result) == 0x000018, "Member 'WBP_Inventory_CM_C_GetBagsToDisplay::Result' has a wrong offset!");
static_assert(offsetof(WBP_Inventory_CM_C_GetBagsToDisplay, Temp_int_Loop_Counter_Variable) == 0x000028, "Member 'WBP_Inventory_CM_C_GetBagsToDisplay::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Inventory_CM_C_GetBagsToDisplay, Temp_int_Array_Index_Variable) == 0x00002C, "Member 'WBP_Inventory_CM_C_GetBagsToDisplay::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Inventory_CM_C_GetBagsToDisplay, CallFunc_Add_IntInt_ReturnValue) == 0x000030, "Member 'WBP_Inventory_CM_C_GetBagsToDisplay::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Inventory_CM_C_GetBagsToDisplay, Temp_int_Array_Index_Variable_1) == 0x000034, "Member 'WBP_Inventory_CM_C_GetBagsToDisplay::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_Inventory_CM_C_GetBagsToDisplay, Temp_int_Loop_Counter_Variable_1) == 0x000038, "Member 'WBP_Inventory_CM_C_GetBagsToDisplay::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_Inventory_CM_C_GetBagsToDisplay, CallFunc_Add_IntInt_ReturnValue_1) == 0x00003C, "Member 'WBP_Inventory_CM_C_GetBagsToDisplay::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_Inventory_CM_C_GetBagsToDisplay, Temp_int_Array_Index_Variable_2) == 0x000040, "Member 'WBP_Inventory_CM_C_GetBagsToDisplay::Temp_int_Array_Index_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_Inventory_CM_C_GetBagsToDisplay, CallFunc_Array_Add_ReturnValue) == 0x000044, "Member 'WBP_Inventory_CM_C_GetBagsToDisplay::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Inventory_CM_C_GetBagsToDisplay, CallFunc_GetBagTypeForBagIndex_ReturnValue) == 0x000048, "Member 'WBP_Inventory_CM_C_GetBagsToDisplay::CallFunc_GetBagTypeForBagIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Inventory_CM_C_GetBagsToDisplay, CallFunc_EqualEqual_GameplayTag_ReturnValue) == 0x000050, "Member 'WBP_Inventory_CM_C_GetBagsToDisplay::CallFunc_EqualEqual_GameplayTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Inventory_CM_C_GetBagsToDisplay, Temp_int_Loop_Counter_Variable_2) == 0x000054, "Member 'WBP_Inventory_CM_C_GetBagsToDisplay::Temp_int_Loop_Counter_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_Inventory_CM_C_GetBagsToDisplay, CallFunc_Array_Length_ReturnValue) == 0x000058, "Member 'WBP_Inventory_CM_C_GetBagsToDisplay::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Inventory_CM_C_GetBagsToDisplay, CallFunc_Add_IntInt_ReturnValue_2) == 0x00005C, "Member 'WBP_Inventory_CM_C_GetBagsToDisplay::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_Inventory_CM_C_GetBagsToDisplay, CallFunc_Less_IntInt_ReturnValue) == 0x000060, "Member 'WBP_Inventory_CM_C_GetBagsToDisplay::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Inventory_CM_C_GetBagsToDisplay, CallFunc_Array_Get_Item) == 0x000064, "Member 'WBP_Inventory_CM_C_GetBagsToDisplay::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_Inventory_CM_C_GetBagsToDisplay, CallFunc_Array_IsEmpty_ReturnValue) == 0x00006C, "Member 'WBP_Inventory_CM_C_GetBagsToDisplay::CallFunc_Array_IsEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Inventory_CM_C_GetBagsToDisplay, CallFunc_Set_Contains_ReturnValue) == 0x00006D, "Member 'WBP_Inventory_CM_C_GetBagsToDisplay::CallFunc_Set_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Inventory_CM_C_GetBagsToDisplay, CallFunc_Array_Length_ReturnValue_1) == 0x000070, "Member 'WBP_Inventory_CM_C_GetBagsToDisplay::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_Inventory_CM_C_GetBagsToDisplay, CallFunc_Less_IntInt_ReturnValue_1) == 0x000074, "Member 'WBP_Inventory_CM_C_GetBagsToDisplay::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_Inventory_CM_C_GetBagsToDisplay, CallFunc_Array_Add_ReturnValue_1) == 0x000078, "Member 'WBP_Inventory_CM_C_GetBagsToDisplay::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_Inventory_CM_C_GetBagsToDisplay, CallFunc_GetBagTypeForBagIndex_ReturnValue_1) == 0x00007C, "Member 'WBP_Inventory_CM_C_GetBagsToDisplay::CallFunc_GetBagTypeForBagIndex_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_Inventory_CM_C_GetBagsToDisplay, CallFunc_Set_Contains_ReturnValue_1) == 0x000084, "Member 'WBP_Inventory_CM_C_GetBagsToDisplay::CallFunc_Set_Contains_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_Inventory_CM_C_GetBagsToDisplay, CallFunc_Array_Length_ReturnValue_2) == 0x000088, "Member 'WBP_Inventory_CM_C_GetBagsToDisplay::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_Inventory_CM_C_GetBagsToDisplay, CallFunc_Less_IntInt_ReturnValue_2) == 0x00008C, "Member 'WBP_Inventory_CM_C_GetBagsToDisplay::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");

// Function WBP_Inventory_CM.WBP_Inventory_CM_C.GetCurrentBagIndex
// 0x0008 (0x0008 - 0x0000)
struct WBP_Inventory_CM_C_GetCurrentBagIndex final
{
public:
	int32                                         Param_Index;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetActiveWidgetIndex_ReturnValue;         // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Inventory_CM_C_GetCurrentBagIndex) == 0x000004, "Wrong alignment on WBP_Inventory_CM_C_GetCurrentBagIndex");
static_assert(sizeof(WBP_Inventory_CM_C_GetCurrentBagIndex) == 0x000008, "Wrong size on WBP_Inventory_CM_C_GetCurrentBagIndex");
static_assert(offsetof(WBP_Inventory_CM_C_GetCurrentBagIndex, Param_Index) == 0x000000, "Member 'WBP_Inventory_CM_C_GetCurrentBagIndex::Param_Index' has a wrong offset!");
static_assert(offsetof(WBP_Inventory_CM_C_GetCurrentBagIndex, CallFunc_GetActiveWidgetIndex_ReturnValue) == 0x000004, "Member 'WBP_Inventory_CM_C_GetCurrentBagIndex::CallFunc_GetActiveWidgetIndex_ReturnValue' has a wrong offset!");

// Function WBP_Inventory_CM.WBP_Inventory_CM_C.GetLockedRowBackgroundImageSize
// 0x0028 (0x0028 - 0x0000)
struct WBP_Inventory_CM_C_GetLockedRowBackgroundImageSize final
{
public:
	struct FVector2D                              ImageSize;                                         // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Map_Find_Value;                           // 0x0010(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Inventory_CM_C_GetLockedRowBackgroundImageSize) == 0x000008, "Wrong alignment on WBP_Inventory_CM_C_GetLockedRowBackgroundImageSize");
static_assert(sizeof(WBP_Inventory_CM_C_GetLockedRowBackgroundImageSize) == 0x000028, "Wrong size on WBP_Inventory_CM_C_GetLockedRowBackgroundImageSize");
static_assert(offsetof(WBP_Inventory_CM_C_GetLockedRowBackgroundImageSize, ImageSize) == 0x000000, "Member 'WBP_Inventory_CM_C_GetLockedRowBackgroundImageSize::ImageSize' has a wrong offset!");
static_assert(offsetof(WBP_Inventory_CM_C_GetLockedRowBackgroundImageSize, CallFunc_Map_Find_Value) == 0x000010, "Member 'WBP_Inventory_CM_C_GetLockedRowBackgroundImageSize::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(WBP_Inventory_CM_C_GetLockedRowBackgroundImageSize, CallFunc_Map_Find_ReturnValue) == 0x000020, "Member 'WBP_Inventory_CM_C_GetLockedRowBackgroundImageSize::CallFunc_Map_Find_ReturnValue' has a wrong offset!");

// Function WBP_Inventory_CM.WBP_Inventory_CM_C.GetLockedRowPadding
// 0x0024 (0x0024 - 0x0000)
struct WBP_Inventory_CM_C_GetLockedRowPadding final
{
public:
	struct FMargin                                Param_Padding;                                     // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FMargin                                CallFunc_Map_Find_Value;                           // 0x0010(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Inventory_CM_C_GetLockedRowPadding) == 0x000004, "Wrong alignment on WBP_Inventory_CM_C_GetLockedRowPadding");
static_assert(sizeof(WBP_Inventory_CM_C_GetLockedRowPadding) == 0x000024, "Wrong size on WBP_Inventory_CM_C_GetLockedRowPadding");
static_assert(offsetof(WBP_Inventory_CM_C_GetLockedRowPadding, Param_Padding) == 0x000000, "Member 'WBP_Inventory_CM_C_GetLockedRowPadding::Param_Padding' has a wrong offset!");
static_assert(offsetof(WBP_Inventory_CM_C_GetLockedRowPadding, CallFunc_Map_Find_Value) == 0x000010, "Member 'WBP_Inventory_CM_C_GetLockedRowPadding::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(WBP_Inventory_CM_C_GetLockedRowPadding, CallFunc_Map_Find_ReturnValue) == 0x000020, "Member 'WBP_Inventory_CM_C_GetLockedRowPadding::CallFunc_Map_Find_ReturnValue' has a wrong offset!");

// Function WBP_Inventory_CM.WBP_Inventory_CM_C.GetNavGroupForIndex
// 0x0020 (0x0020 - 0x0000)
struct WBP_Inventory_CM_C_GetNavGroupForIndex final
{
public:
	int32                                         Param_Index;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_58BC[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class US6UI_CustomNavigationGroup*            NavGroup;                                          // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class US6UI_CustomNavigationGroup*            SelectedNavGroup;                                  // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchInteger_CmpSuccess;                   // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Inventory_CM_C_GetNavGroupForIndex) == 0x000008, "Wrong alignment on WBP_Inventory_CM_C_GetNavGroupForIndex");
static_assert(sizeof(WBP_Inventory_CM_C_GetNavGroupForIndex) == 0x000020, "Wrong size on WBP_Inventory_CM_C_GetNavGroupForIndex");
static_assert(offsetof(WBP_Inventory_CM_C_GetNavGroupForIndex, Param_Index) == 0x000000, "Member 'WBP_Inventory_CM_C_GetNavGroupForIndex::Param_Index' has a wrong offset!");
static_assert(offsetof(WBP_Inventory_CM_C_GetNavGroupForIndex, NavGroup) == 0x000008, "Member 'WBP_Inventory_CM_C_GetNavGroupForIndex::NavGroup' has a wrong offset!");
static_assert(offsetof(WBP_Inventory_CM_C_GetNavGroupForIndex, SelectedNavGroup) == 0x000010, "Member 'WBP_Inventory_CM_C_GetNavGroupForIndex::SelectedNavGroup' has a wrong offset!");
static_assert(offsetof(WBP_Inventory_CM_C_GetNavGroupForIndex, K2Node_SwitchInteger_CmpSuccess) == 0x000018, "Member 'WBP_Inventory_CM_C_GetNavGroupForIndex::K2Node_SwitchInteger_CmpSuccess' has a wrong offset!");

// Function WBP_Inventory_CM.WBP_Inventory_CM_C.GetNumCoreBags
// 0x0024 (0x0024 - 0x0000)
struct WBP_Inventory_CM_C_GetNumCoreBags final
{
public:
	int32                                         NumCoreBags;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         LocalNumCoreBags;                                  // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_2;                               // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasQuestBag_bQuestBag;                    // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAmmoBag_bAmmoBag;                      // 0x0015(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasMainBag_bMainBag;                      // 0x0016(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_58BD[0x1];                                     // 0x0017(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Inventory_CM_C_GetNumCoreBags) == 0x000004, "Wrong alignment on WBP_Inventory_CM_C_GetNumCoreBags");
static_assert(sizeof(WBP_Inventory_CM_C_GetNumCoreBags) == 0x000024, "Wrong size on WBP_Inventory_CM_C_GetNumCoreBags");
static_assert(offsetof(WBP_Inventory_CM_C_GetNumCoreBags, NumCoreBags) == 0x000000, "Member 'WBP_Inventory_CM_C_GetNumCoreBags::NumCoreBags' has a wrong offset!");
static_assert(offsetof(WBP_Inventory_CM_C_GetNumCoreBags, LocalNumCoreBags) == 0x000004, "Member 'WBP_Inventory_CM_C_GetNumCoreBags::LocalNumCoreBags' has a wrong offset!");
static_assert(offsetof(WBP_Inventory_CM_C_GetNumCoreBags, Temp_int_Variable) == 0x000008, "Member 'WBP_Inventory_CM_C_GetNumCoreBags::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Inventory_CM_C_GetNumCoreBags, Temp_int_Variable_1) == 0x00000C, "Member 'WBP_Inventory_CM_C_GetNumCoreBags::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_Inventory_CM_C_GetNumCoreBags, Temp_int_Variable_2) == 0x000010, "Member 'WBP_Inventory_CM_C_GetNumCoreBags::Temp_int_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_Inventory_CM_C_GetNumCoreBags, CallFunc_HasQuestBag_bQuestBag) == 0x000014, "Member 'WBP_Inventory_CM_C_GetNumCoreBags::CallFunc_HasQuestBag_bQuestBag' has a wrong offset!");
static_assert(offsetof(WBP_Inventory_CM_C_GetNumCoreBags, CallFunc_HasAmmoBag_bAmmoBag) == 0x000015, "Member 'WBP_Inventory_CM_C_GetNumCoreBags::CallFunc_HasAmmoBag_bAmmoBag' has a wrong offset!");
static_assert(offsetof(WBP_Inventory_CM_C_GetNumCoreBags, CallFunc_HasMainBag_bMainBag) == 0x000016, "Member 'WBP_Inventory_CM_C_GetNumCoreBags::CallFunc_HasMainBag_bMainBag' has a wrong offset!");
static_assert(offsetof(WBP_Inventory_CM_C_GetNumCoreBags, CallFunc_Add_IntInt_ReturnValue) == 0x000018, "Member 'WBP_Inventory_CM_C_GetNumCoreBags::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Inventory_CM_C_GetNumCoreBags, CallFunc_Add_IntInt_ReturnValue_1) == 0x00001C, "Member 'WBP_Inventory_CM_C_GetNumCoreBags::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_Inventory_CM_C_GetNumCoreBags, CallFunc_Add_IntInt_ReturnValue_2) == 0x000020, "Member 'WBP_Inventory_CM_C_GetNumCoreBags::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");

// Function WBP_Inventory_CM.WBP_Inventory_CM_C.GetOtherBagTypes
// 0x0058 (0x0058 - 0x0000)
struct WBP_Inventory_CM_C_GetOtherBagTypes final
{
public:
	TArray<struct FGameplayTag>                   OtherBagTypes;                                     // 0x0000(0x0010)(Parm, OutParm)
	TArray<struct FGameplayTag>                   NewOtherBagTypes;                                  // 0x0010(0x0010)(Edit, BlueprintVisible)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_58BE[0x4];                                     // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FGameplayTag>                   CallFunc_Set_ToArray_Result;                       // 0x0030(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           CallFunc_Array_Get_Item;                           // 0x0044(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_GameplayTag_ReturnValue;       // 0x004D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_GameplayTag_ReturnValue_1;     // 0x004E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_GameplayTag_ReturnValue_2;     // 0x004F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x0055(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0056(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Inventory_CM_C_GetOtherBagTypes) == 0x000008, "Wrong alignment on WBP_Inventory_CM_C_GetOtherBagTypes");
static_assert(sizeof(WBP_Inventory_CM_C_GetOtherBagTypes) == 0x000058, "Wrong size on WBP_Inventory_CM_C_GetOtherBagTypes");
static_assert(offsetof(WBP_Inventory_CM_C_GetOtherBagTypes, OtherBagTypes) == 0x000000, "Member 'WBP_Inventory_CM_C_GetOtherBagTypes::OtherBagTypes' has a wrong offset!");
static_assert(offsetof(WBP_Inventory_CM_C_GetOtherBagTypes, NewOtherBagTypes) == 0x000010, "Member 'WBP_Inventory_CM_C_GetOtherBagTypes::NewOtherBagTypes' has a wrong offset!");
static_assert(offsetof(WBP_Inventory_CM_C_GetOtherBagTypes, Temp_int_Array_Index_Variable) == 0x000020, "Member 'WBP_Inventory_CM_C_GetOtherBagTypes::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Inventory_CM_C_GetOtherBagTypes, Temp_int_Loop_Counter_Variable) == 0x000024, "Member 'WBP_Inventory_CM_C_GetOtherBagTypes::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Inventory_CM_C_GetOtherBagTypes, CallFunc_Add_IntInt_ReturnValue) == 0x000028, "Member 'WBP_Inventory_CM_C_GetOtherBagTypes::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Inventory_CM_C_GetOtherBagTypes, CallFunc_Set_ToArray_Result) == 0x000030, "Member 'WBP_Inventory_CM_C_GetOtherBagTypes::CallFunc_Set_ToArray_Result' has a wrong offset!");
static_assert(offsetof(WBP_Inventory_CM_C_GetOtherBagTypes, CallFunc_Array_Length_ReturnValue) == 0x000040, "Member 'WBP_Inventory_CM_C_GetOtherBagTypes::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Inventory_CM_C_GetOtherBagTypes, CallFunc_Array_Get_Item) == 0x000044, "Member 'WBP_Inventory_CM_C_GetOtherBagTypes::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_Inventory_CM_C_GetOtherBagTypes, CallFunc_Less_IntInt_ReturnValue) == 0x00004C, "Member 'WBP_Inventory_CM_C_GetOtherBagTypes::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Inventory_CM_C_GetOtherBagTypes, CallFunc_EqualEqual_GameplayTag_ReturnValue) == 0x00004D, "Member 'WBP_Inventory_CM_C_GetOtherBagTypes::CallFunc_EqualEqual_GameplayTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Inventory_CM_C_GetOtherBagTypes, CallFunc_EqualEqual_GameplayTag_ReturnValue_1) == 0x00004E, "Member 'WBP_Inventory_CM_C_GetOtherBagTypes::CallFunc_EqualEqual_GameplayTag_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_Inventory_CM_C_GetOtherBagTypes, CallFunc_EqualEqual_GameplayTag_ReturnValue_2) == 0x00004F, "Member 'WBP_Inventory_CM_C_GetOtherBagTypes::CallFunc_EqualEqual_GameplayTag_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_Inventory_CM_C_GetOtherBagTypes, CallFunc_Array_Add_ReturnValue) == 0x000050, "Member 'WBP_Inventory_CM_C_GetOtherBagTypes::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Inventory_CM_C_GetOtherBagTypes, CallFunc_BooleanOR_ReturnValue) == 0x000054, "Member 'WBP_Inventory_CM_C_GetOtherBagTypes::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Inventory_CM_C_GetOtherBagTypes, CallFunc_BooleanOR_ReturnValue_1) == 0x000055, "Member 'WBP_Inventory_CM_C_GetOtherBagTypes::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_Inventory_CM_C_GetOtherBagTypes, CallFunc_Not_PreBool_ReturnValue) == 0x000056, "Member 'WBP_Inventory_CM_C_GetOtherBagTypes::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function WBP_Inventory_CM.WBP_Inventory_CM_C.GetSlotsForBagIndex
// 0x0080 (0x0080 - 0x0000)
struct WBP_Inventory_CM_C_GetSlotsForBagIndex final
{
public:
	int32                                         Param_Index;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_58BF[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UWBP_InventorySlot_CM_C*>        Slots;                                             // 0x0008(0x0010)(Parm, OutParm, ContainsInstancedReference)
	class UVerticalBox*                           RelevantVerticalBox;                               // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TArray<class UWBP_InventorySlot_CM_C*>        Result;                                            // 0x0020(0x0010)(Edit, BlueprintVisible, ContainsInstancedReference)
	bool                                          K2Node_SwitchInteger_CmpSuccess;                   // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_58C0[0x3];                                     // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UWidget*>                        CallFunc_GetAllChildren_ReturnValue;               // 0x0040(0x0010)(ReferenceParm, ContainsInstancedReference)
	class UWidget*                                CallFunc_Array_Get_Item;                           // 0x0050(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_58C1[0x4];                                     // 0x005C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_InventoryBag_CM_C*                 K2Node_DynamicCast_AsWBP_Inventory_Bag_CM;         // 0x0060(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0069(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_58C2[0x6];                                     // 0x006A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UWBP_InventorySlot_CM_C*>        CallFunc_GetAllSlots_Slots;                        // 0x0070(0x0010)(ReferenceParm, ContainsInstancedReference)
};
static_assert(alignof(WBP_Inventory_CM_C_GetSlotsForBagIndex) == 0x000008, "Wrong alignment on WBP_Inventory_CM_C_GetSlotsForBagIndex");
static_assert(sizeof(WBP_Inventory_CM_C_GetSlotsForBagIndex) == 0x000080, "Wrong size on WBP_Inventory_CM_C_GetSlotsForBagIndex");
static_assert(offsetof(WBP_Inventory_CM_C_GetSlotsForBagIndex, Param_Index) == 0x000000, "Member 'WBP_Inventory_CM_C_GetSlotsForBagIndex::Param_Index' has a wrong offset!");
static_assert(offsetof(WBP_Inventory_CM_C_GetSlotsForBagIndex, Slots) == 0x000008, "Member 'WBP_Inventory_CM_C_GetSlotsForBagIndex::Slots' has a wrong offset!");
static_assert(offsetof(WBP_Inventory_CM_C_GetSlotsForBagIndex, RelevantVerticalBox) == 0x000018, "Member 'WBP_Inventory_CM_C_GetSlotsForBagIndex::RelevantVerticalBox' has a wrong offset!");
static_assert(offsetof(WBP_Inventory_CM_C_GetSlotsForBagIndex, Result) == 0x000020, "Member 'WBP_Inventory_CM_C_GetSlotsForBagIndex::Result' has a wrong offset!");
static_assert(offsetof(WBP_Inventory_CM_C_GetSlotsForBagIndex, K2Node_SwitchInteger_CmpSuccess) == 0x000030, "Member 'WBP_Inventory_CM_C_GetSlotsForBagIndex::K2Node_SwitchInteger_CmpSuccess' has a wrong offset!");
static_assert(offsetof(WBP_Inventory_CM_C_GetSlotsForBagIndex, Temp_int_Array_Index_Variable) == 0x000034, "Member 'WBP_Inventory_CM_C_GetSlotsForBagIndex::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Inventory_CM_C_GetSlotsForBagIndex, Temp_int_Loop_Counter_Variable) == 0x000038, "Member 'WBP_Inventory_CM_C_GetSlotsForBagIndex::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Inventory_CM_C_GetSlotsForBagIndex, CallFunc_Add_IntInt_ReturnValue) == 0x00003C, "Member 'WBP_Inventory_CM_C_GetSlotsForBagIndex::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Inventory_CM_C_GetSlotsForBagIndex, CallFunc_GetAllChildren_ReturnValue) == 0x000040, "Member 'WBP_Inventory_CM_C_GetSlotsForBagIndex::CallFunc_GetAllChildren_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Inventory_CM_C_GetSlotsForBagIndex, CallFunc_Array_Get_Item) == 0x000050, "Member 'WBP_Inventory_CM_C_GetSlotsForBagIndex::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_Inventory_CM_C_GetSlotsForBagIndex, CallFunc_Array_Length_ReturnValue) == 0x000058, "Member 'WBP_Inventory_CM_C_GetSlotsForBagIndex::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Inventory_CM_C_GetSlotsForBagIndex, K2Node_DynamicCast_AsWBP_Inventory_Bag_CM) == 0x000060, "Member 'WBP_Inventory_CM_C_GetSlotsForBagIndex::K2Node_DynamicCast_AsWBP_Inventory_Bag_CM' has a wrong offset!");
static_assert(offsetof(WBP_Inventory_CM_C_GetSlotsForBagIndex, K2Node_DynamicCast_bSuccess) == 0x000068, "Member 'WBP_Inventory_CM_C_GetSlotsForBagIndex::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_Inventory_CM_C_GetSlotsForBagIndex, CallFunc_Less_IntInt_ReturnValue) == 0x000069, "Member 'WBP_Inventory_CM_C_GetSlotsForBagIndex::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Inventory_CM_C_GetSlotsForBagIndex, CallFunc_GetAllSlots_Slots) == 0x000070, "Member 'WBP_Inventory_CM_C_GetSlotsForBagIndex::CallFunc_GetAllSlots_Slots' has a wrong offset!");

// Function WBP_Inventory_CM.WBP_Inventory_CM_C.GetSlotsForBorderNavigationTypeAtBagIndex
// 0x00D8 (0x00D8 - 0x0000)
struct WBP_Inventory_CM_C_GetSlotsForBorderNavigationTypeAtBagIndex final
{
public:
	EUINavigation                                 Param_Navigation;                                  // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_58C3[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         BagIndex;                                          // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UWBP_InventorySlot_CM_C*>        InventorySlots;                                    // 0x0008(0x0010)(Parm, OutParm, ContainsInstancedReference)
	TArray<class UWBP_InventorySlot_CM_C*>        CorrelatedInventorySlots;                          // 0x0018(0x0010)(Edit, BlueprintVisible, ContainsInstancedReference)
	int32                                         NumBags;                                           // 0x0028(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_58C4[0x4];                                     // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UVerticalBox*                           CallFunc_GetVerticalBoxByIndex_VBox;               // 0x0030(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_58C5[0x7];                                     // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UWidget*>                        CallFunc_GetAllChildren_ReturnValue;               // 0x0040(0x0010)(ReferenceParm, ContainsInstancedReference)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWidget*                                CallFunc_Array_Get_Item;                           // 0x0060(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_58C6[0x7];                                     // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_InventoryBag_CM_C*                 K2Node_DynamicCast_AsWBP_Inventory_Bag_CM;         // 0x0070(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_58C7[0x7];                                     // 0x0079(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UWBP_InventorySlot_CM_C*>        CallFunc_GetSlotsForBorderNavigationType_InventorySlots; // 0x0080(0x0010)(ReferenceParm, ContainsInstancedReference)
	TArray<class UWBP_InventorySlot_CM_C*>        CallFunc_GetSlotsForBorderNavigationType_InventorySlots_1; // 0x0090(0x0010)(ReferenceParm, ContainsInstancedReference)
	TArray<class UWBP_InventorySlot_CM_C*>        CallFunc_GetSlotsForBorderNavigationType_InventorySlots_2; // 0x00A0(0x0010)(ReferenceParm, ContainsInstancedReference)
	TArray<class UWBP_InventorySlot_CM_C*>        CallFunc_GetSlotsForBorderNavigationType_InventorySlots_3; // 0x00B0(0x0010)(ReferenceParm, ContainsInstancedReference)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_1;          // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_58C8[0x3];                                     // 0x00C1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_58C9[0x3];                                     // 0x00C9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Inventory_CM_C_GetSlotsForBorderNavigationTypeAtBagIndex) == 0x000008, "Wrong alignment on WBP_Inventory_CM_C_GetSlotsForBorderNavigationTypeAtBagIndex");
static_assert(sizeof(WBP_Inventory_CM_C_GetSlotsForBorderNavigationTypeAtBagIndex) == 0x0000D8, "Wrong size on WBP_Inventory_CM_C_GetSlotsForBorderNavigationTypeAtBagIndex");
static_assert(offsetof(WBP_Inventory_CM_C_GetSlotsForBorderNavigationTypeAtBagIndex, Param_Navigation) == 0x000000, "Member 'WBP_Inventory_CM_C_GetSlotsForBorderNavigationTypeAtBagIndex::Param_Navigation' has a wrong offset!");
static_assert(offsetof(WBP_Inventory_CM_C_GetSlotsForBorderNavigationTypeAtBagIndex, BagIndex) == 0x000004, "Member 'WBP_Inventory_CM_C_GetSlotsForBorderNavigationTypeAtBagIndex::BagIndex' has a wrong offset!");
static_assert(offsetof(WBP_Inventory_CM_C_GetSlotsForBorderNavigationTypeAtBagIndex, InventorySlots) == 0x000008, "Member 'WBP_Inventory_CM_C_GetSlotsForBorderNavigationTypeAtBagIndex::InventorySlots' has a wrong offset!");
static_assert(offsetof(WBP_Inventory_CM_C_GetSlotsForBorderNavigationTypeAtBagIndex, CorrelatedInventorySlots) == 0x000018, "Member 'WBP_Inventory_CM_C_GetSlotsForBorderNavigationTypeAtBagIndex::CorrelatedInventorySlots' has a wrong offset!");
static_assert(offsetof(WBP_Inventory_CM_C_GetSlotsForBorderNavigationTypeAtBagIndex, NumBags) == 0x000028, "Member 'WBP_Inventory_CM_C_GetSlotsForBorderNavigationTypeAtBagIndex::NumBags' has a wrong offset!");
static_assert(offsetof(WBP_Inventory_CM_C_GetSlotsForBorderNavigationTypeAtBagIndex, CallFunc_GetVerticalBoxByIndex_VBox) == 0x000030, "Member 'WBP_Inventory_CM_C_GetSlotsForBorderNavigationTypeAtBagIndex::CallFunc_GetVerticalBoxByIndex_VBox' has a wrong offset!");
static_assert(offsetof(WBP_Inventory_CM_C_GetSlotsForBorderNavigationTypeAtBagIndex, CallFunc_IsValid_ReturnValue) == 0x000038, "Member 'WBP_Inventory_CM_C_GetSlotsForBorderNavigationTypeAtBagIndex::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Inventory_CM_C_GetSlotsForBorderNavigationTypeAtBagIndex, CallFunc_GetAllChildren_ReturnValue) == 0x000040, "Member 'WBP_Inventory_CM_C_GetSlotsForBorderNavigationTypeAtBagIndex::CallFunc_GetAllChildren_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Inventory_CM_C_GetSlotsForBorderNavigationTypeAtBagIndex, CallFunc_Array_Length_ReturnValue) == 0x000050, "Member 'WBP_Inventory_CM_C_GetSlotsForBorderNavigationTypeAtBagIndex::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Inventory_CM_C_GetSlotsForBorderNavigationTypeAtBagIndex, CallFunc_Array_Length_ReturnValue_1) == 0x000054, "Member 'WBP_Inventory_CM_C_GetSlotsForBorderNavigationTypeAtBagIndex::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_Inventory_CM_C_GetSlotsForBorderNavigationTypeAtBagIndex, CallFunc_Subtract_IntInt_ReturnValue) == 0x000058, "Member 'WBP_Inventory_CM_C_GetSlotsForBorderNavigationTypeAtBagIndex::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Inventory_CM_C_GetSlotsForBorderNavigationTypeAtBagIndex, Temp_int_Array_Index_Variable) == 0x00005C, "Member 'WBP_Inventory_CM_C_GetSlotsForBorderNavigationTypeAtBagIndex::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Inventory_CM_C_GetSlotsForBorderNavigationTypeAtBagIndex, CallFunc_Array_Get_Item) == 0x000060, "Member 'WBP_Inventory_CM_C_GetSlotsForBorderNavigationTypeAtBagIndex::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_Inventory_CM_C_GetSlotsForBorderNavigationTypeAtBagIndex, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000068, "Member 'WBP_Inventory_CM_C_GetSlotsForBorderNavigationTypeAtBagIndex::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Inventory_CM_C_GetSlotsForBorderNavigationTypeAtBagIndex, K2Node_DynamicCast_AsWBP_Inventory_Bag_CM) == 0x000070, "Member 'WBP_Inventory_CM_C_GetSlotsForBorderNavigationTypeAtBagIndex::K2Node_DynamicCast_AsWBP_Inventory_Bag_CM' has a wrong offset!");
static_assert(offsetof(WBP_Inventory_CM_C_GetSlotsForBorderNavigationTypeAtBagIndex, K2Node_DynamicCast_bSuccess) == 0x000078, "Member 'WBP_Inventory_CM_C_GetSlotsForBorderNavigationTypeAtBagIndex::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_Inventory_CM_C_GetSlotsForBorderNavigationTypeAtBagIndex, CallFunc_GetSlotsForBorderNavigationType_InventorySlots) == 0x000080, "Member 'WBP_Inventory_CM_C_GetSlotsForBorderNavigationTypeAtBagIndex::CallFunc_GetSlotsForBorderNavigationType_InventorySlots' has a wrong offset!");
static_assert(offsetof(WBP_Inventory_CM_C_GetSlotsForBorderNavigationTypeAtBagIndex, CallFunc_GetSlotsForBorderNavigationType_InventorySlots_1) == 0x000090, "Member 'WBP_Inventory_CM_C_GetSlotsForBorderNavigationTypeAtBagIndex::CallFunc_GetSlotsForBorderNavigationType_InventorySlots_1' has a wrong offset!");
static_assert(offsetof(WBP_Inventory_CM_C_GetSlotsForBorderNavigationTypeAtBagIndex, CallFunc_GetSlotsForBorderNavigationType_InventorySlots_2) == 0x0000A0, "Member 'WBP_Inventory_CM_C_GetSlotsForBorderNavigationTypeAtBagIndex::CallFunc_GetSlotsForBorderNavigationType_InventorySlots_2' has a wrong offset!");
static_assert(offsetof(WBP_Inventory_CM_C_GetSlotsForBorderNavigationTypeAtBagIndex, CallFunc_GetSlotsForBorderNavigationType_InventorySlots_3) == 0x0000B0, "Member 'WBP_Inventory_CM_C_GetSlotsForBorderNavigationTypeAtBagIndex::CallFunc_GetSlotsForBorderNavigationType_InventorySlots_3' has a wrong offset!");
static_assert(offsetof(WBP_Inventory_CM_C_GetSlotsForBorderNavigationTypeAtBagIndex, CallFunc_EqualEqual_IntInt_ReturnValue_1) == 0x0000C0, "Member 'WBP_Inventory_CM_C_GetSlotsForBorderNavigationTypeAtBagIndex::CallFunc_EqualEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_Inventory_CM_C_GetSlotsForBorderNavigationTypeAtBagIndex, Temp_int_Loop_Counter_Variable) == 0x0000C4, "Member 'WBP_Inventory_CM_C_GetSlotsForBorderNavigationTypeAtBagIndex::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Inventory_CM_C_GetSlotsForBorderNavigationTypeAtBagIndex, CallFunc_Less_IntInt_ReturnValue) == 0x0000C8, "Member 'WBP_Inventory_CM_C_GetSlotsForBorderNavigationTypeAtBagIndex::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Inventory_CM_C_GetSlotsForBorderNavigationTypeAtBagIndex, CallFunc_Add_IntInt_ReturnValue) == 0x0000CC, "Member 'WBP_Inventory_CM_C_GetSlotsForBorderNavigationTypeAtBagIndex::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Inventory_CM_C_GetSlotsForBorderNavigationTypeAtBagIndex, K2Node_SwitchEnum_CmpSuccess) == 0x0000D0, "Member 'WBP_Inventory_CM_C_GetSlotsForBorderNavigationTypeAtBagIndex::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function WBP_Inventory_CM.WBP_Inventory_CM_C.GetUnlockedRowPadding
// 0x0024 (0x0024 - 0x0000)
struct WBP_Inventory_CM_C_GetUnlockedRowPadding final
{
public:
	struct FMargin                                Param_Padding;                                     // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FMargin                                CallFunc_Map_Find_Value;                           // 0x0010(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Inventory_CM_C_GetUnlockedRowPadding) == 0x000004, "Wrong alignment on WBP_Inventory_CM_C_GetUnlockedRowPadding");
static_assert(sizeof(WBP_Inventory_CM_C_GetUnlockedRowPadding) == 0x000024, "Wrong size on WBP_Inventory_CM_C_GetUnlockedRowPadding");
static_assert(offsetof(WBP_Inventory_CM_C_GetUnlockedRowPadding, Param_Padding) == 0x000000, "Member 'WBP_Inventory_CM_C_GetUnlockedRowPadding::Param_Padding' has a wrong offset!");
static_assert(offsetof(WBP_Inventory_CM_C_GetUnlockedRowPadding, CallFunc_Map_Find_Value) == 0x000010, "Member 'WBP_Inventory_CM_C_GetUnlockedRowPadding::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(WBP_Inventory_CM_C_GetUnlockedRowPadding, CallFunc_Map_Find_ReturnValue) == 0x000020, "Member 'WBP_Inventory_CM_C_GetUnlockedRowPadding::CallFunc_Map_Find_ReturnValue' has a wrong offset!");

// Function WBP_Inventory_CM.WBP_Inventory_CM_C.GetVerticalBoxByIndex
// 0x0018 (0x0018 - 0x0000)
struct WBP_Inventory_CM_C_GetVerticalBoxByIndex final
{
public:
	int32                                         Param_Index;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_58CA[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UVerticalBox*                           VBox;                                              // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchInteger_CmpSuccess;                   // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Inventory_CM_C_GetVerticalBoxByIndex) == 0x000008, "Wrong alignment on WBP_Inventory_CM_C_GetVerticalBoxByIndex");
static_assert(sizeof(WBP_Inventory_CM_C_GetVerticalBoxByIndex) == 0x000018, "Wrong size on WBP_Inventory_CM_C_GetVerticalBoxByIndex");
static_assert(offsetof(WBP_Inventory_CM_C_GetVerticalBoxByIndex, Param_Index) == 0x000000, "Member 'WBP_Inventory_CM_C_GetVerticalBoxByIndex::Param_Index' has a wrong offset!");
static_assert(offsetof(WBP_Inventory_CM_C_GetVerticalBoxByIndex, VBox) == 0x000008, "Member 'WBP_Inventory_CM_C_GetVerticalBoxByIndex::VBox' has a wrong offset!");
static_assert(offsetof(WBP_Inventory_CM_C_GetVerticalBoxByIndex, K2Node_SwitchInteger_CmpSuccess) == 0x000010, "Member 'WBP_Inventory_CM_C_GetVerticalBoxByIndex::K2Node_SwitchInteger_CmpSuccess' has a wrong offset!");

// Function WBP_Inventory_CM.WBP_Inventory_CM_C.Handle Slot Focused
// 0x0008 (0x0008 - 0x0000)
struct WBP_Inventory_CM_C_Handle_Slot_Focused final
{
public:
	class UWidget*                                Widget;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Inventory_CM_C_Handle_Slot_Focused) == 0x000008, "Wrong alignment on WBP_Inventory_CM_C_Handle_Slot_Focused");
static_assert(sizeof(WBP_Inventory_CM_C_Handle_Slot_Focused) == 0x000008, "Wrong size on WBP_Inventory_CM_C_Handle_Slot_Focused");
static_assert(offsetof(WBP_Inventory_CM_C_Handle_Slot_Focused, Widget) == 0x000000, "Member 'WBP_Inventory_CM_C_Handle_Slot_Focused::Widget' has a wrong offset!");

// Function WBP_Inventory_CM.WBP_Inventory_CM_C.HandleInventoryOpenActionMenu
// 0x0008 (0x0008 - 0x0000)
struct WBP_Inventory_CM_C_HandleInventoryOpenActionMenu final
{
public:
	class UWBP_InventorySlot_CM_C*                Param_Slot;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Inventory_CM_C_HandleInventoryOpenActionMenu) == 0x000008, "Wrong alignment on WBP_Inventory_CM_C_HandleInventoryOpenActionMenu");
static_assert(sizeof(WBP_Inventory_CM_C_HandleInventoryOpenActionMenu) == 0x000008, "Wrong size on WBP_Inventory_CM_C_HandleInventoryOpenActionMenu");
static_assert(offsetof(WBP_Inventory_CM_C_HandleInventoryOpenActionMenu, Param_Slot) == 0x000000, "Member 'WBP_Inventory_CM_C_HandleInventoryOpenActionMenu::Param_Slot' has a wrong offset!");

// Function WBP_Inventory_CM.WBP_Inventory_CM_C.HandleInventorySlotFocus
// 0x0008 (0x0008 - 0x0000)
struct WBP_Inventory_CM_C_HandleInventorySlotFocus final
{
public:
	class UWBP_InventorySlot_CM_C*                Param_Slot;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Inventory_CM_C_HandleInventorySlotFocus) == 0x000008, "Wrong alignment on WBP_Inventory_CM_C_HandleInventorySlotFocus");
static_assert(sizeof(WBP_Inventory_CM_C_HandleInventorySlotFocus) == 0x000008, "Wrong size on WBP_Inventory_CM_C_HandleInventorySlotFocus");
static_assert(offsetof(WBP_Inventory_CM_C_HandleInventorySlotFocus, Param_Slot) == 0x000000, "Member 'WBP_Inventory_CM_C_HandleInventorySlotFocus::Param_Slot' has a wrong offset!");

// Function WBP_Inventory_CM.WBP_Inventory_CM_C.HandleOnItemReceived
// 0x0060 (0x0060 - 0x0000)
struct WBP_Inventory_CM_C_HandleOnItemReceived final
{
public:
	struct FValeriaItem                           Item;                                              // 0x0000(0x0060)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(WBP_Inventory_CM_C_HandleOnItemReceived) == 0x000008, "Wrong alignment on WBP_Inventory_CM_C_HandleOnItemReceived");
static_assert(sizeof(WBP_Inventory_CM_C_HandleOnItemReceived) == 0x000060, "Wrong size on WBP_Inventory_CM_C_HandleOnItemReceived");
static_assert(offsetof(WBP_Inventory_CM_C_HandleOnItemReceived, Item) == 0x000000, "Member 'WBP_Inventory_CM_C_HandleOnItemReceived::Item' has a wrong offset!");

// Function WBP_Inventory_CM.WBP_Inventory_CM_C.HandleSlotGamepadCancel
// 0x0010 (0x0010 - 0x0000)
struct WBP_Inventory_CM_C_HandleSlotGamepadCancel final
{
public:
	class UWBP_InventorySlot_CM_C*                Param_Slot;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UWBP_InventoryBag_CM_C*                 Bag;                                               // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Inventory_CM_C_HandleSlotGamepadCancel) == 0x000008, "Wrong alignment on WBP_Inventory_CM_C_HandleSlotGamepadCancel");
static_assert(sizeof(WBP_Inventory_CM_C_HandleSlotGamepadCancel) == 0x000010, "Wrong size on WBP_Inventory_CM_C_HandleSlotGamepadCancel");
static_assert(offsetof(WBP_Inventory_CM_C_HandleSlotGamepadCancel, Param_Slot) == 0x000000, "Member 'WBP_Inventory_CM_C_HandleSlotGamepadCancel::Param_Slot' has a wrong offset!");
static_assert(offsetof(WBP_Inventory_CM_C_HandleSlotGamepadCancel, Bag) == 0x000008, "Member 'WBP_Inventory_CM_C_HandleSlotGamepadCancel::Bag' has a wrong offset!");

// Function WBP_Inventory_CM.WBP_Inventory_CM_C.HandleSlotGamepadSelect
// 0x0010 (0x0010 - 0x0000)
struct WBP_Inventory_CM_C_HandleSlotGamepadSelect final
{
public:
	class UWBP_InventorySlot_CM_C*                Param_Slot;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UWBP_InventoryBag_CM_C*                 Bag;                                               // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Inventory_CM_C_HandleSlotGamepadSelect) == 0x000008, "Wrong alignment on WBP_Inventory_CM_C_HandleSlotGamepadSelect");
static_assert(sizeof(WBP_Inventory_CM_C_HandleSlotGamepadSelect) == 0x000010, "Wrong size on WBP_Inventory_CM_C_HandleSlotGamepadSelect");
static_assert(offsetof(WBP_Inventory_CM_C_HandleSlotGamepadSelect, Param_Slot) == 0x000000, "Member 'WBP_Inventory_CM_C_HandleSlotGamepadSelect::Param_Slot' has a wrong offset!");
static_assert(offsetof(WBP_Inventory_CM_C_HandleSlotGamepadSelect, Bag) == 0x000008, "Member 'WBP_Inventory_CM_C_HandleSlotGamepadSelect::Bag' has a wrong offset!");

// Function WBP_Inventory_CM.WBP_Inventory_CM_C.HandleSlotLeftClicked
// 0x0010 (0x0010 - 0x0000)
struct WBP_Inventory_CM_C_HandleSlotLeftClicked final
{
public:
	class UWBP_InventoryBag_CM_C*                 Bag;                                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UWBP_InventorySlot_CM_C*                Param_Slot;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Inventory_CM_C_HandleSlotLeftClicked) == 0x000008, "Wrong alignment on WBP_Inventory_CM_C_HandleSlotLeftClicked");
static_assert(sizeof(WBP_Inventory_CM_C_HandleSlotLeftClicked) == 0x000010, "Wrong size on WBP_Inventory_CM_C_HandleSlotLeftClicked");
static_assert(offsetof(WBP_Inventory_CM_C_HandleSlotLeftClicked, Bag) == 0x000000, "Member 'WBP_Inventory_CM_C_HandleSlotLeftClicked::Bag' has a wrong offset!");
static_assert(offsetof(WBP_Inventory_CM_C_HandleSlotLeftClicked, Param_Slot) == 0x000008, "Member 'WBP_Inventory_CM_C_HandleSlotLeftClicked::Param_Slot' has a wrong offset!");

// Function WBP_Inventory_CM.WBP_Inventory_CM_C.HandleSlotRightClicked
// 0x0010 (0x0010 - 0x0000)
struct WBP_Inventory_CM_C_HandleSlotRightClicked final
{
public:
	class UWBP_InventoryBag_CM_C*                 Bag;                                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UWBP_InventorySlot_CM_C*                Param_Slot;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Inventory_CM_C_HandleSlotRightClicked) == 0x000008, "Wrong alignment on WBP_Inventory_CM_C_HandleSlotRightClicked");
static_assert(sizeof(WBP_Inventory_CM_C_HandleSlotRightClicked) == 0x000010, "Wrong size on WBP_Inventory_CM_C_HandleSlotRightClicked");
static_assert(offsetof(WBP_Inventory_CM_C_HandleSlotRightClicked, Bag) == 0x000000, "Member 'WBP_Inventory_CM_C_HandleSlotRightClicked::Bag' has a wrong offset!");
static_assert(offsetof(WBP_Inventory_CM_C_HandleSlotRightClicked, Param_Slot) == 0x000008, "Member 'WBP_Inventory_CM_C_HandleSlotRightClicked::Param_Slot' has a wrong offset!");

// Function WBP_Inventory_CM.WBP_Inventory_CM_C.HasAmmoBag
// 0x0010 (0x0010 - 0x0000)
struct WBP_Inventory_CM_C_HasAmmoBag final
{
public:
	bool                                          bAmmoBag;                                          // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_58CB[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           Temp_struct_Variable;                              // 0x0004(0x0008)(ConstParm, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetConsoleVariableBoolValue_ReturnValue;  // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Set_Contains_ReturnValue;                 // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Inventory_CM_C_HasAmmoBag) == 0x000004, "Wrong alignment on WBP_Inventory_CM_C_HasAmmoBag");
static_assert(sizeof(WBP_Inventory_CM_C_HasAmmoBag) == 0x000010, "Wrong size on WBP_Inventory_CM_C_HasAmmoBag");
static_assert(offsetof(WBP_Inventory_CM_C_HasAmmoBag, bAmmoBag) == 0x000000, "Member 'WBP_Inventory_CM_C_HasAmmoBag::bAmmoBag' has a wrong offset!");
static_assert(offsetof(WBP_Inventory_CM_C_HasAmmoBag, Temp_struct_Variable) == 0x000004, "Member 'WBP_Inventory_CM_C_HasAmmoBag::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Inventory_CM_C_HasAmmoBag, CallFunc_GetConsoleVariableBoolValue_ReturnValue) == 0x00000C, "Member 'WBP_Inventory_CM_C_HasAmmoBag::CallFunc_GetConsoleVariableBoolValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Inventory_CM_C_HasAmmoBag, CallFunc_Set_Contains_ReturnValue) == 0x00000D, "Member 'WBP_Inventory_CM_C_HasAmmoBag::CallFunc_Set_Contains_ReturnValue' has a wrong offset!");

// Function WBP_Inventory_CM.WBP_Inventory_CM_C.HasMainBag
// 0x0010 (0x0010 - 0x0000)
struct WBP_Inventory_CM_C_HasMainBag final
{
public:
	bool                                          bMainBag;                                          // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_58CC[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           Temp_struct_Variable;                              // 0x0004(0x0008)(ConstParm, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Set_Contains_ReturnValue;                 // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Inventory_CM_C_HasMainBag) == 0x000004, "Wrong alignment on WBP_Inventory_CM_C_HasMainBag");
static_assert(sizeof(WBP_Inventory_CM_C_HasMainBag) == 0x000010, "Wrong size on WBP_Inventory_CM_C_HasMainBag");
static_assert(offsetof(WBP_Inventory_CM_C_HasMainBag, bMainBag) == 0x000000, "Member 'WBP_Inventory_CM_C_HasMainBag::bMainBag' has a wrong offset!");
static_assert(offsetof(WBP_Inventory_CM_C_HasMainBag, Temp_struct_Variable) == 0x000004, "Member 'WBP_Inventory_CM_C_HasMainBag::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Inventory_CM_C_HasMainBag, CallFunc_Set_Contains_ReturnValue) == 0x00000C, "Member 'WBP_Inventory_CM_C_HasMainBag::CallFunc_Set_Contains_ReturnValue' has a wrong offset!");

// Function WBP_Inventory_CM.WBP_Inventory_CM_C.HasOtherBag
// 0x0018 (0x0018 - 0x0000)
struct WBP_Inventory_CM_C_HasOtherBag final
{
public:
	bool                                          OtherBag;                                          // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_58CD[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           Temp_struct_Variable;                              // 0x0004(0x0008)(ConstParm, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           Temp_struct_Variable_1;                            // 0x000C(0x0008)(ConstParm, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Set_Contains_ReturnValue;                 // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Set_Contains_ReturnValue_1;               // 0x0015(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0016(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Inventory_CM_C_HasOtherBag) == 0x000004, "Wrong alignment on WBP_Inventory_CM_C_HasOtherBag");
static_assert(sizeof(WBP_Inventory_CM_C_HasOtherBag) == 0x000018, "Wrong size on WBP_Inventory_CM_C_HasOtherBag");
static_assert(offsetof(WBP_Inventory_CM_C_HasOtherBag, OtherBag) == 0x000000, "Member 'WBP_Inventory_CM_C_HasOtherBag::OtherBag' has a wrong offset!");
static_assert(offsetof(WBP_Inventory_CM_C_HasOtherBag, Temp_struct_Variable) == 0x000004, "Member 'WBP_Inventory_CM_C_HasOtherBag::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Inventory_CM_C_HasOtherBag, Temp_struct_Variable_1) == 0x00000C, "Member 'WBP_Inventory_CM_C_HasOtherBag::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_Inventory_CM_C_HasOtherBag, CallFunc_Set_Contains_ReturnValue) == 0x000014, "Member 'WBP_Inventory_CM_C_HasOtherBag::CallFunc_Set_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Inventory_CM_C_HasOtherBag, CallFunc_Set_Contains_ReturnValue_1) == 0x000015, "Member 'WBP_Inventory_CM_C_HasOtherBag::CallFunc_Set_Contains_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_Inventory_CM_C_HasOtherBag, CallFunc_BooleanOR_ReturnValue) == 0x000016, "Member 'WBP_Inventory_CM_C_HasOtherBag::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");

// Function WBP_Inventory_CM.WBP_Inventory_CM_C.HasQuestBag
// 0x0010 (0x0010 - 0x0000)
struct WBP_Inventory_CM_C_HasQuestBag final
{
public:
	bool                                          bQuestBag;                                         // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_58CE[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           Temp_struct_Variable;                              // 0x0004(0x0008)(ConstParm, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Set_Contains_ReturnValue;                 // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Inventory_CM_C_HasQuestBag) == 0x000004, "Wrong alignment on WBP_Inventory_CM_C_HasQuestBag");
static_assert(sizeof(WBP_Inventory_CM_C_HasQuestBag) == 0x000010, "Wrong size on WBP_Inventory_CM_C_HasQuestBag");
static_assert(offsetof(WBP_Inventory_CM_C_HasQuestBag, bQuestBag) == 0x000000, "Member 'WBP_Inventory_CM_C_HasQuestBag::bQuestBag' has a wrong offset!");
static_assert(offsetof(WBP_Inventory_CM_C_HasQuestBag, Temp_struct_Variable) == 0x000004, "Member 'WBP_Inventory_CM_C_HasQuestBag::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Inventory_CM_C_HasQuestBag, CallFunc_Set_Contains_ReturnValue) == 0x00000C, "Member 'WBP_Inventory_CM_C_HasQuestBag::CallFunc_Set_Contains_ReturnValue' has a wrong offset!");

// Function WBP_Inventory_CM.WBP_Inventory_CM_C.Initialize Inventory Focus
// 0x0040 (0x0040 - 0x0000)
struct WBP_Inventory_CM_C_Initialize_Inventory_Focus final
{
public:
	class UWBP_InventorySlot_CM_C*                Output;                                            // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UWidget*                                BagWidget;                                         // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UWBP_InventoryBag_CM_C*                 K2Node_DynamicCast_AsWBP_Inventory_Bag_CM;         // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_58CF[0x6];                                     // 0x001A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UWBP_InventorySlot_CM_C*>        CallFunc_GetAllSlots_Slots;                        // 0x0020(0x0010)(ReferenceParm, ContainsInstancedReference)
	class UWidget*                                CallFunc_GetChildAt_ReturnValue;                   // 0x0030(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UWBP_InventorySlot_CM_C*                CallFunc_Array_Get_Item;                           // 0x0038(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Inventory_CM_C_Initialize_Inventory_Focus) == 0x000008, "Wrong alignment on WBP_Inventory_CM_C_Initialize_Inventory_Focus");
static_assert(sizeof(WBP_Inventory_CM_C_Initialize_Inventory_Focus) == 0x000040, "Wrong size on WBP_Inventory_CM_C_Initialize_Inventory_Focus");
static_assert(offsetof(WBP_Inventory_CM_C_Initialize_Inventory_Focus, Output) == 0x000000, "Member 'WBP_Inventory_CM_C_Initialize_Inventory_Focus::Output' has a wrong offset!");
static_assert(offsetof(WBP_Inventory_CM_C_Initialize_Inventory_Focus, BagWidget) == 0x000008, "Member 'WBP_Inventory_CM_C_Initialize_Inventory_Focus::BagWidget' has a wrong offset!");
static_assert(offsetof(WBP_Inventory_CM_C_Initialize_Inventory_Focus, K2Node_DynamicCast_AsWBP_Inventory_Bag_CM) == 0x000010, "Member 'WBP_Inventory_CM_C_Initialize_Inventory_Focus::K2Node_DynamicCast_AsWBP_Inventory_Bag_CM' has a wrong offset!");
static_assert(offsetof(WBP_Inventory_CM_C_Initialize_Inventory_Focus, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'WBP_Inventory_CM_C_Initialize_Inventory_Focus::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_Inventory_CM_C_Initialize_Inventory_Focus, CallFunc_IsValid_ReturnValue) == 0x000019, "Member 'WBP_Inventory_CM_C_Initialize_Inventory_Focus::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Inventory_CM_C_Initialize_Inventory_Focus, CallFunc_GetAllSlots_Slots) == 0x000020, "Member 'WBP_Inventory_CM_C_Initialize_Inventory_Focus::CallFunc_GetAllSlots_Slots' has a wrong offset!");
static_assert(offsetof(WBP_Inventory_CM_C_Initialize_Inventory_Focus, CallFunc_GetChildAt_ReturnValue) == 0x000030, "Member 'WBP_Inventory_CM_C_Initialize_Inventory_Focus::CallFunc_GetChildAt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Inventory_CM_C_Initialize_Inventory_Focus, CallFunc_Array_Get_Item) == 0x000038, "Member 'WBP_Inventory_CM_C_Initialize_Inventory_Focus::CallFunc_Array_Get_Item' has a wrong offset!");

// Function WBP_Inventory_CM.WBP_Inventory_CM_C.NavigateInventoryTab
// 0x0001 (0x0001 - 0x0000)
struct WBP_Inventory_CM_C_NavigateInventoryTab final
{
public:
	bool                                          bForward;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Inventory_CM_C_NavigateInventoryTab) == 0x000001, "Wrong alignment on WBP_Inventory_CM_C_NavigateInventoryTab");
static_assert(sizeof(WBP_Inventory_CM_C_NavigateInventoryTab) == 0x000001, "Wrong size on WBP_Inventory_CM_C_NavigateInventoryTab");
static_assert(offsetof(WBP_Inventory_CM_C_NavigateInventoryTab, bForward) == 0x000000, "Member 'WBP_Inventory_CM_C_NavigateInventoryTab::bForward' has a wrong offset!");

// Function WBP_Inventory_CM.WBP_Inventory_CM_C.On Tab Selection Changed
// 0x0004 (0x0004 - 0x0000)
struct WBP_Inventory_CM_C_On_Tab_Selection_Changed final
{
public:
	int32                                         Tab_Selection;                                     // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Inventory_CM_C_On_Tab_Selection_Changed) == 0x000004, "Wrong alignment on WBP_Inventory_CM_C_On_Tab_Selection_Changed");
static_assert(sizeof(WBP_Inventory_CM_C_On_Tab_Selection_Changed) == 0x000004, "Wrong size on WBP_Inventory_CM_C_On_Tab_Selection_Changed");
static_assert(offsetof(WBP_Inventory_CM_C_On_Tab_Selection_Changed, Tab_Selection) == 0x000000, "Member 'WBP_Inventory_CM_C_On_Tab_Selection_Changed::Tab_Selection' has a wrong offset!");

// Function WBP_Inventory_CM.WBP_Inventory_CM_C.OnInventoryGamepadCancel__DelegateSignature
// 0x0018 (0x0018 - 0x0000)
struct WBP_Inventory_CM_C_OnInventoryGamepadCancel__DelegateSignature final
{
public:
	class UWBP_Inventory_CM_C*                    Param_Inventory;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UWBP_InventoryBag_CM_C*                 Bag;                                               // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UWBP_InventorySlot_CM_C*                Param_Slot;                                        // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Inventory_CM_C_OnInventoryGamepadCancel__DelegateSignature) == 0x000008, "Wrong alignment on WBP_Inventory_CM_C_OnInventoryGamepadCancel__DelegateSignature");
static_assert(sizeof(WBP_Inventory_CM_C_OnInventoryGamepadCancel__DelegateSignature) == 0x000018, "Wrong size on WBP_Inventory_CM_C_OnInventoryGamepadCancel__DelegateSignature");
static_assert(offsetof(WBP_Inventory_CM_C_OnInventoryGamepadCancel__DelegateSignature, Param_Inventory) == 0x000000, "Member 'WBP_Inventory_CM_C_OnInventoryGamepadCancel__DelegateSignature::Param_Inventory' has a wrong offset!");
static_assert(offsetof(WBP_Inventory_CM_C_OnInventoryGamepadCancel__DelegateSignature, Bag) == 0x000008, "Member 'WBP_Inventory_CM_C_OnInventoryGamepadCancel__DelegateSignature::Bag' has a wrong offset!");
static_assert(offsetof(WBP_Inventory_CM_C_OnInventoryGamepadCancel__DelegateSignature, Param_Slot) == 0x000010, "Member 'WBP_Inventory_CM_C_OnInventoryGamepadCancel__DelegateSignature::Param_Slot' has a wrong offset!");

// Function WBP_Inventory_CM.WBP_Inventory_CM_C.OnInventoryGamepadSelect__DelegateSignature
// 0x0018 (0x0018 - 0x0000)
struct WBP_Inventory_CM_C_OnInventoryGamepadSelect__DelegateSignature final
{
public:
	class UWBP_Inventory_CM_C*                    Param_Inventory;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UWBP_InventoryBag_CM_C*                 Bag;                                               // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UWBP_InventorySlot_CM_C*                Param_Slot;                                        // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Inventory_CM_C_OnInventoryGamepadSelect__DelegateSignature) == 0x000008, "Wrong alignment on WBP_Inventory_CM_C_OnInventoryGamepadSelect__DelegateSignature");
static_assert(sizeof(WBP_Inventory_CM_C_OnInventoryGamepadSelect__DelegateSignature) == 0x000018, "Wrong size on WBP_Inventory_CM_C_OnInventoryGamepadSelect__DelegateSignature");
static_assert(offsetof(WBP_Inventory_CM_C_OnInventoryGamepadSelect__DelegateSignature, Param_Inventory) == 0x000000, "Member 'WBP_Inventory_CM_C_OnInventoryGamepadSelect__DelegateSignature::Param_Inventory' has a wrong offset!");
static_assert(offsetof(WBP_Inventory_CM_C_OnInventoryGamepadSelect__DelegateSignature, Bag) == 0x000008, "Member 'WBP_Inventory_CM_C_OnInventoryGamepadSelect__DelegateSignature::Bag' has a wrong offset!");
static_assert(offsetof(WBP_Inventory_CM_C_OnInventoryGamepadSelect__DelegateSignature, Param_Slot) == 0x000010, "Member 'WBP_Inventory_CM_C_OnInventoryGamepadSelect__DelegateSignature::Param_Slot' has a wrong offset!");

// Function WBP_Inventory_CM.WBP_Inventory_CM_C.OnInventoryOpenActionMenu__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct WBP_Inventory_CM_C_OnInventoryOpenActionMenu__DelegateSignature final
{
public:
	class UWBP_InventorySlot_CM_C*                Param_Slot;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Inventory_CM_C_OnInventoryOpenActionMenu__DelegateSignature) == 0x000008, "Wrong alignment on WBP_Inventory_CM_C_OnInventoryOpenActionMenu__DelegateSignature");
static_assert(sizeof(WBP_Inventory_CM_C_OnInventoryOpenActionMenu__DelegateSignature) == 0x000008, "Wrong size on WBP_Inventory_CM_C_OnInventoryOpenActionMenu__DelegateSignature");
static_assert(offsetof(WBP_Inventory_CM_C_OnInventoryOpenActionMenu__DelegateSignature, Param_Slot) == 0x000000, "Member 'WBP_Inventory_CM_C_OnInventoryOpenActionMenu__DelegateSignature::Param_Slot' has a wrong offset!");

// Function WBP_Inventory_CM.WBP_Inventory_CM_C.OnInventorySlotFocused__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct WBP_Inventory_CM_C_OnInventorySlotFocused__DelegateSignature final
{
public:
	class UWidget*                                Widget;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Inventory_CM_C_OnInventorySlotFocused__DelegateSignature) == 0x000008, "Wrong alignment on WBP_Inventory_CM_C_OnInventorySlotFocused__DelegateSignature");
static_assert(sizeof(WBP_Inventory_CM_C_OnInventorySlotFocused__DelegateSignature) == 0x000008, "Wrong size on WBP_Inventory_CM_C_OnInventorySlotFocused__DelegateSignature");
static_assert(offsetof(WBP_Inventory_CM_C_OnInventorySlotFocused__DelegateSignature, Widget) == 0x000000, "Member 'WBP_Inventory_CM_C_OnInventorySlotFocused__DelegateSignature::Widget' has a wrong offset!");

// Function WBP_Inventory_CM.WBP_Inventory_CM_C.OnSlotItemDropped__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct WBP_Inventory_CM_C_OnSlotItemDropped__DelegateSignature final
{
public:
	class UWBP_Inventory_CM_C*                    Param_Inventory;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UWBP_InventoryBag_CM_C*                 Bag;                                               // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UWBP_InventorySlot_CM_C*                Param_Slot;                                        // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UVALUI_ItemDragDrop*                    Operation;                                         // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Inventory_CM_C_OnSlotItemDropped__DelegateSignature) == 0x000008, "Wrong alignment on WBP_Inventory_CM_C_OnSlotItemDropped__DelegateSignature");
static_assert(sizeof(WBP_Inventory_CM_C_OnSlotItemDropped__DelegateSignature) == 0x000020, "Wrong size on WBP_Inventory_CM_C_OnSlotItemDropped__DelegateSignature");
static_assert(offsetof(WBP_Inventory_CM_C_OnSlotItemDropped__DelegateSignature, Param_Inventory) == 0x000000, "Member 'WBP_Inventory_CM_C_OnSlotItemDropped__DelegateSignature::Param_Inventory' has a wrong offset!");
static_assert(offsetof(WBP_Inventory_CM_C_OnSlotItemDropped__DelegateSignature, Bag) == 0x000008, "Member 'WBP_Inventory_CM_C_OnSlotItemDropped__DelegateSignature::Bag' has a wrong offset!");
static_assert(offsetof(WBP_Inventory_CM_C_OnSlotItemDropped__DelegateSignature, Param_Slot) == 0x000010, "Member 'WBP_Inventory_CM_C_OnSlotItemDropped__DelegateSignature::Param_Slot' has a wrong offset!");
static_assert(offsetof(WBP_Inventory_CM_C_OnSlotItemDropped__DelegateSignature, Operation) == 0x000018, "Member 'WBP_Inventory_CM_C_OnSlotItemDropped__DelegateSignature::Operation' has a wrong offset!");

// Function WBP_Inventory_CM.WBP_Inventory_CM_C.OnSlotLeftClicked__DelegateSignature
// 0x0018 (0x0018 - 0x0000)
struct WBP_Inventory_CM_C_OnSlotLeftClicked__DelegateSignature final
{
public:
	class UWBP_Inventory_CM_C*                    Param_Inventory;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UWBP_InventoryBag_CM_C*                 Bag;                                               // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UWBP_InventorySlot_CM_C*                Param_Slot;                                        // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Inventory_CM_C_OnSlotLeftClicked__DelegateSignature) == 0x000008, "Wrong alignment on WBP_Inventory_CM_C_OnSlotLeftClicked__DelegateSignature");
static_assert(sizeof(WBP_Inventory_CM_C_OnSlotLeftClicked__DelegateSignature) == 0x000018, "Wrong size on WBP_Inventory_CM_C_OnSlotLeftClicked__DelegateSignature");
static_assert(offsetof(WBP_Inventory_CM_C_OnSlotLeftClicked__DelegateSignature, Param_Inventory) == 0x000000, "Member 'WBP_Inventory_CM_C_OnSlotLeftClicked__DelegateSignature::Param_Inventory' has a wrong offset!");
static_assert(offsetof(WBP_Inventory_CM_C_OnSlotLeftClicked__DelegateSignature, Bag) == 0x000008, "Member 'WBP_Inventory_CM_C_OnSlotLeftClicked__DelegateSignature::Bag' has a wrong offset!");
static_assert(offsetof(WBP_Inventory_CM_C_OnSlotLeftClicked__DelegateSignature, Param_Slot) == 0x000010, "Member 'WBP_Inventory_CM_C_OnSlotLeftClicked__DelegateSignature::Param_Slot' has a wrong offset!");

// Function WBP_Inventory_CM.WBP_Inventory_CM_C.OnSlotRightClicked__DelegateSignature
// 0x0018 (0x0018 - 0x0000)
struct WBP_Inventory_CM_C_OnSlotRightClicked__DelegateSignature final
{
public:
	class UWBP_Inventory_CM_C*                    Param_Inventory;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UWBP_InventoryBag_CM_C*                 Bag;                                               // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UWBP_InventorySlot_CM_C*                Param_Slot;                                        // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Inventory_CM_C_OnSlotRightClicked__DelegateSignature) == 0x000008, "Wrong alignment on WBP_Inventory_CM_C_OnSlotRightClicked__DelegateSignature");
static_assert(sizeof(WBP_Inventory_CM_C_OnSlotRightClicked__DelegateSignature) == 0x000018, "Wrong size on WBP_Inventory_CM_C_OnSlotRightClicked__DelegateSignature");
static_assert(offsetof(WBP_Inventory_CM_C_OnSlotRightClicked__DelegateSignature, Param_Inventory) == 0x000000, "Member 'WBP_Inventory_CM_C_OnSlotRightClicked__DelegateSignature::Param_Inventory' has a wrong offset!");
static_assert(offsetof(WBP_Inventory_CM_C_OnSlotRightClicked__DelegateSignature, Bag) == 0x000008, "Member 'WBP_Inventory_CM_C_OnSlotRightClicked__DelegateSignature::Bag' has a wrong offset!");
static_assert(offsetof(WBP_Inventory_CM_C_OnSlotRightClicked__DelegateSignature, Param_Slot) == 0x000010, "Member 'WBP_Inventory_CM_C_OnSlotRightClicked__DelegateSignature::Param_Slot' has a wrong offset!");

// Function WBP_Inventory_CM.WBP_Inventory_CM_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct WBP_Inventory_CM_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Inventory_CM_C_PreConstruct) == 0x000001, "Wrong alignment on WBP_Inventory_CM_C_PreConstruct");
static_assert(sizeof(WBP_Inventory_CM_C_PreConstruct) == 0x000001, "Wrong size on WBP_Inventory_CM_C_PreConstruct");
static_assert(offsetof(WBP_Inventory_CM_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'WBP_Inventory_CM_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function WBP_Inventory_CM.WBP_Inventory_CM_C.RecreateBags
// 0x0070 (0x0070 - 0x0000)
struct WBP_Inventory_CM_C_RecreateBags final
{
public:
	class UInventoryComponent*                    Param_Inventory;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CreatedStorageBagCount;                            // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_58D0[0x2];                                     // 0x000E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_InventorySlot_CM_C*                CallFunc_Initialize_Inventory_Focus_Output;        // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TArray<struct FGameplayTag>                   CallFunc_GetOtherBagTypes_OtherBagTypes;           // 0x0018(0x0010)(ReferenceParm)
	TArray<struct FGameplayTag>                   K2Node_MakeArray_Array;                            // 0x0028(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_58D1[0x4];                                     // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FGameplayTag>                   K2Node_MakeArray_Array_1;                          // 0x0040(0x0010)(ReferenceParm)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_58D2[0x7];                                     // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FGameplayTag>                   K2Node_MakeArray_Array_2;                          // 0x0058(0x0010)(ReferenceParm)
	bool                                          CallFunc_HasQuestBag_bQuestBag;                    // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAmmoBag_bAmmoBag;                      // 0x0069(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasMainBag_bMainBag;                      // 0x006A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Inventory_CM_C_RecreateBags) == 0x000008, "Wrong alignment on WBP_Inventory_CM_C_RecreateBags");
static_assert(sizeof(WBP_Inventory_CM_C_RecreateBags) == 0x000070, "Wrong size on WBP_Inventory_CM_C_RecreateBags");
static_assert(offsetof(WBP_Inventory_CM_C_RecreateBags, Param_Inventory) == 0x000000, "Member 'WBP_Inventory_CM_C_RecreateBags::Param_Inventory' has a wrong offset!");
static_assert(offsetof(WBP_Inventory_CM_C_RecreateBags, CreatedStorageBagCount) == 0x000008, "Member 'WBP_Inventory_CM_C_RecreateBags::CreatedStorageBagCount' has a wrong offset!");
static_assert(offsetof(WBP_Inventory_CM_C_RecreateBags, CallFunc_IsValid_ReturnValue) == 0x00000C, "Member 'WBP_Inventory_CM_C_RecreateBags::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Inventory_CM_C_RecreateBags, CallFunc_IsValid_ReturnValue_1) == 0x00000D, "Member 'WBP_Inventory_CM_C_RecreateBags::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_Inventory_CM_C_RecreateBags, CallFunc_Initialize_Inventory_Focus_Output) == 0x000010, "Member 'WBP_Inventory_CM_C_RecreateBags::CallFunc_Initialize_Inventory_Focus_Output' has a wrong offset!");
static_assert(offsetof(WBP_Inventory_CM_C_RecreateBags, CallFunc_GetOtherBagTypes_OtherBagTypes) == 0x000018, "Member 'WBP_Inventory_CM_C_RecreateBags::CallFunc_GetOtherBagTypes_OtherBagTypes' has a wrong offset!");
static_assert(offsetof(WBP_Inventory_CM_C_RecreateBags, K2Node_MakeArray_Array) == 0x000028, "Member 'WBP_Inventory_CM_C_RecreateBags::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(WBP_Inventory_CM_C_RecreateBags, CallFunc_Array_Length_ReturnValue) == 0x000038, "Member 'WBP_Inventory_CM_C_RecreateBags::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Inventory_CM_C_RecreateBags, K2Node_MakeArray_Array_1) == 0x000040, "Member 'WBP_Inventory_CM_C_RecreateBags::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(WBP_Inventory_CM_C_RecreateBags, CallFunc_Greater_IntInt_ReturnValue) == 0x000050, "Member 'WBP_Inventory_CM_C_RecreateBags::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Inventory_CM_C_RecreateBags, K2Node_MakeArray_Array_2) == 0x000058, "Member 'WBP_Inventory_CM_C_RecreateBags::K2Node_MakeArray_Array_2' has a wrong offset!");
static_assert(offsetof(WBP_Inventory_CM_C_RecreateBags, CallFunc_HasQuestBag_bQuestBag) == 0x000068, "Member 'WBP_Inventory_CM_C_RecreateBags::CallFunc_HasQuestBag_bQuestBag' has a wrong offset!");
static_assert(offsetof(WBP_Inventory_CM_C_RecreateBags, CallFunc_HasAmmoBag_bAmmoBag) == 0x000069, "Member 'WBP_Inventory_CM_C_RecreateBags::CallFunc_HasAmmoBag_bAmmoBag' has a wrong offset!");
static_assert(offsetof(WBP_Inventory_CM_C_RecreateBags, CallFunc_HasMainBag_bMainBag) == 0x00006A, "Member 'WBP_Inventory_CM_C_RecreateBags::CallFunc_HasMainBag_bMainBag' has a wrong offset!");

// Function WBP_Inventory_CM.WBP_Inventory_CM_C.SelectBestDefaultBag
// 0x0038 (0x0038 - 0x0000)
struct WBP_Inventory_CM_C_SelectBestDefaultBag final
{
public:
	bool                                          SetSelected;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_58D3[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetObjectName_ReturnValue;                // 0x0008(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0018(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Get_Best_Default_Bag_Widget_Switcher_Index_WidgetSwitcherIndex; // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_58D4[0x3];                                     // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UVerticalBox*                           CallFunc_GetVerticalBoxByIndex_VBox;               // 0x0030(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Inventory_CM_C_SelectBestDefaultBag) == 0x000008, "Wrong alignment on WBP_Inventory_CM_C_SelectBestDefaultBag");
static_assert(sizeof(WBP_Inventory_CM_C_SelectBestDefaultBag) == 0x000038, "Wrong size on WBP_Inventory_CM_C_SelectBestDefaultBag");
static_assert(offsetof(WBP_Inventory_CM_C_SelectBestDefaultBag, SetSelected) == 0x000000, "Member 'WBP_Inventory_CM_C_SelectBestDefaultBag::SetSelected' has a wrong offset!");
static_assert(offsetof(WBP_Inventory_CM_C_SelectBestDefaultBag, CallFunc_GetObjectName_ReturnValue) == 0x000008, "Member 'WBP_Inventory_CM_C_SelectBestDefaultBag::CallFunc_GetObjectName_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Inventory_CM_C_SelectBestDefaultBag, CallFunc_Concat_StrStr_ReturnValue) == 0x000018, "Member 'WBP_Inventory_CM_C_SelectBestDefaultBag::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Inventory_CM_C_SelectBestDefaultBag, CallFunc_Get_Best_Default_Bag_Widget_Switcher_Index_WidgetSwitcherIndex) == 0x000028, "Member 'WBP_Inventory_CM_C_SelectBestDefaultBag::CallFunc_Get_Best_Default_Bag_Widget_Switcher_Index_WidgetSwitcherIndex' has a wrong offset!");
static_assert(offsetof(WBP_Inventory_CM_C_SelectBestDefaultBag, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x00002C, "Member 'WBP_Inventory_CM_C_SelectBestDefaultBag::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Inventory_CM_C_SelectBestDefaultBag, CallFunc_GetVerticalBoxByIndex_VBox) == 0x000030, "Member 'WBP_Inventory_CM_C_SelectBestDefaultBag::CallFunc_GetVerticalBoxByIndex_VBox' has a wrong offset!");

// Function WBP_Inventory_CM.WBP_Inventory_CM_C.SetCustomLeftNavigation
// 0x0090 (0x0090 - 0x0000)
struct WBP_Inventory_CM_C_SetCustomLeftNavigation final
{
public:
	class UWidget*                                InWidget;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_58D5[0x3];                                     // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_58D6[0x4];                                     // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UVerticalBox*>                   CallFunc_GetAllBagVerticalBoxes_AllBagVerticalBoxes; // 0x0018(0x0010)(ReferenceParm, ContainsInstancedReference)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_58D7[0x3];                                     // 0x0035(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_58D8[0x4];                                     // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UVerticalBox*                           CallFunc_Array_Get_Item;                           // 0x0040(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UWidget*                                CallFunc_GetChildAt_ReturnValue;                   // 0x0048(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetChildrenCount_ReturnValue;             // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_58D9[0x4];                                     // 0x0054(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_InventoryBag_CM_C*                 K2Node_DynamicCast_AsWBP_Inventory_Bag_CM;         // 0x0058(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_58DA[0x3];                                     // 0x0061(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UWBP_InventorySlot_CM_C*>        CallFunc_GetAllSlots_Slots;                        // 0x0068(0x0010)(ReferenceParm, ContainsInstancedReference)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_58DB[0x7];                                     // 0x0079(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_InventorySlot_CM_C*                CallFunc_Array_Get_Item_1;                         // 0x0080(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_1;            // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Inventory_CM_C_SetCustomLeftNavigation) == 0x000008, "Wrong alignment on WBP_Inventory_CM_C_SetCustomLeftNavigation");
static_assert(sizeof(WBP_Inventory_CM_C_SetCustomLeftNavigation) == 0x000090, "Wrong size on WBP_Inventory_CM_C_SetCustomLeftNavigation");
static_assert(offsetof(WBP_Inventory_CM_C_SetCustomLeftNavigation, InWidget) == 0x000000, "Member 'WBP_Inventory_CM_C_SetCustomLeftNavigation::InWidget' has a wrong offset!");
static_assert(offsetof(WBP_Inventory_CM_C_SetCustomLeftNavigation, Temp_int_Variable) == 0x000008, "Member 'WBP_Inventory_CM_C_SetCustomLeftNavigation::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Inventory_CM_C_SetCustomLeftNavigation, CallFunc_IsValid_ReturnValue) == 0x00000C, "Member 'WBP_Inventory_CM_C_SetCustomLeftNavigation::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Inventory_CM_C_SetCustomLeftNavigation, CallFunc_Add_IntInt_ReturnValue) == 0x000010, "Member 'WBP_Inventory_CM_C_SetCustomLeftNavigation::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Inventory_CM_C_SetCustomLeftNavigation, CallFunc_GetAllBagVerticalBoxes_AllBagVerticalBoxes) == 0x000018, "Member 'WBP_Inventory_CM_C_SetCustomLeftNavigation::CallFunc_GetAllBagVerticalBoxes_AllBagVerticalBoxes' has a wrong offset!");
static_assert(offsetof(WBP_Inventory_CM_C_SetCustomLeftNavigation, Temp_int_Loop_Counter_Variable) == 0x000028, "Member 'WBP_Inventory_CM_C_SetCustomLeftNavigation::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Inventory_CM_C_SetCustomLeftNavigation, CallFunc_Array_Length_ReturnValue) == 0x00002C, "Member 'WBP_Inventory_CM_C_SetCustomLeftNavigation::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Inventory_CM_C_SetCustomLeftNavigation, CallFunc_Add_IntInt_ReturnValue_1) == 0x000030, "Member 'WBP_Inventory_CM_C_SetCustomLeftNavigation::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_Inventory_CM_C_SetCustomLeftNavigation, CallFunc_Less_IntInt_ReturnValue) == 0x000034, "Member 'WBP_Inventory_CM_C_SetCustomLeftNavigation::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Inventory_CM_C_SetCustomLeftNavigation, Temp_int_Array_Index_Variable) == 0x000038, "Member 'WBP_Inventory_CM_C_SetCustomLeftNavigation::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Inventory_CM_C_SetCustomLeftNavigation, CallFunc_Array_Get_Item) == 0x000040, "Member 'WBP_Inventory_CM_C_SetCustomLeftNavigation::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_Inventory_CM_C_SetCustomLeftNavigation, CallFunc_GetChildAt_ReturnValue) == 0x000048, "Member 'WBP_Inventory_CM_C_SetCustomLeftNavigation::CallFunc_GetChildAt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Inventory_CM_C_SetCustomLeftNavigation, CallFunc_GetChildrenCount_ReturnValue) == 0x000050, "Member 'WBP_Inventory_CM_C_SetCustomLeftNavigation::CallFunc_GetChildrenCount_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Inventory_CM_C_SetCustomLeftNavigation, K2Node_DynamicCast_AsWBP_Inventory_Bag_CM) == 0x000058, "Member 'WBP_Inventory_CM_C_SetCustomLeftNavigation::K2Node_DynamicCast_AsWBP_Inventory_Bag_CM' has a wrong offset!");
static_assert(offsetof(WBP_Inventory_CM_C_SetCustomLeftNavigation, K2Node_DynamicCast_bSuccess) == 0x000060, "Member 'WBP_Inventory_CM_C_SetCustomLeftNavigation::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_Inventory_CM_C_SetCustomLeftNavigation, CallFunc_Subtract_IntInt_ReturnValue) == 0x000064, "Member 'WBP_Inventory_CM_C_SetCustomLeftNavigation::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Inventory_CM_C_SetCustomLeftNavigation, CallFunc_GetAllSlots_Slots) == 0x000068, "Member 'WBP_Inventory_CM_C_SetCustomLeftNavigation::CallFunc_GetAllSlots_Slots' has a wrong offset!");
static_assert(offsetof(WBP_Inventory_CM_C_SetCustomLeftNavigation, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000078, "Member 'WBP_Inventory_CM_C_SetCustomLeftNavigation::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Inventory_CM_C_SetCustomLeftNavigation, CallFunc_Array_Get_Item_1) == 0x000080, "Member 'WBP_Inventory_CM_C_SetCustomLeftNavigation::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(WBP_Inventory_CM_C_SetCustomLeftNavigation, CallFunc_Subtract_IntInt_ReturnValue_1) == 0x000088, "Member 'WBP_Inventory_CM_C_SetCustomLeftNavigation::CallFunc_Subtract_IntInt_ReturnValue_1' has a wrong offset!");

// Function WBP_Inventory_CM.WBP_Inventory_CM_C.SetCustomUpNavigation
// 0x0088 (0x0088 - 0x0000)
struct WBP_Inventory_CM_C_SetCustomUpNavigation final
{
public:
	int32                                         Param_Index;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_58DC[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                InWidget;                                          // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          IsResetToEscape;                                   // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_58DD[0x2];                                     // 0x0012(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUINavigationRule                             Temp_byte_Variable;                                // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_58DE[0x3];                                     // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_58DF[0x4];                                     // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UVerticalBox*>                   CallFunc_GetAllBagVerticalBoxes_AllBagVerticalBoxes; // 0x0028(0x0010)(ReferenceParm, ContainsInstancedReference)
	EUINavigationRule                             Temp_byte_Variable_1;                              // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_58E0[0x7];                                     // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UVerticalBox*                           CallFunc_Array_Get_Item;                           // 0x0040(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetChildrenCount_ReturnValue;             // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUINavigationRule                             K2Node_Select_Default;                             // 0x0052(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_58E1[0x1];                                     // 0x0053(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWidget*                                CallFunc_GetChildAt_ReturnValue;                   // 0x0058(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UWBP_InventoryBag_CM_C*                 K2Node_DynamicCast_AsWBP_Inventory_Bag_CM;         // 0x0060(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_58E2[0x7];                                     // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UWBP_InventorySlot_CM_C*>        CallFunc_GetAllSlots_Slots;                        // 0x0070(0x0010)(ReferenceParm, ContainsInstancedReference)
	class UWBP_InventorySlot_CM_C*                CallFunc_Array_Get_Item_1;                         // 0x0080(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Inventory_CM_C_SetCustomUpNavigation) == 0x000008, "Wrong alignment on WBP_Inventory_CM_C_SetCustomUpNavigation");
static_assert(sizeof(WBP_Inventory_CM_C_SetCustomUpNavigation) == 0x000088, "Wrong size on WBP_Inventory_CM_C_SetCustomUpNavigation");
static_assert(offsetof(WBP_Inventory_CM_C_SetCustomUpNavigation, Param_Index) == 0x000000, "Member 'WBP_Inventory_CM_C_SetCustomUpNavigation::Param_Index' has a wrong offset!");
static_assert(offsetof(WBP_Inventory_CM_C_SetCustomUpNavigation, InWidget) == 0x000008, "Member 'WBP_Inventory_CM_C_SetCustomUpNavigation::InWidget' has a wrong offset!");
static_assert(offsetof(WBP_Inventory_CM_C_SetCustomUpNavigation, IsResetToEscape) == 0x000010, "Member 'WBP_Inventory_CM_C_SetCustomUpNavigation::IsResetToEscape' has a wrong offset!");
static_assert(offsetof(WBP_Inventory_CM_C_SetCustomUpNavigation, CallFunc_IsValid_ReturnValue) == 0x000011, "Member 'WBP_Inventory_CM_C_SetCustomUpNavigation::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Inventory_CM_C_SetCustomUpNavigation, Temp_int_Array_Index_Variable) == 0x000014, "Member 'WBP_Inventory_CM_C_SetCustomUpNavigation::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Inventory_CM_C_SetCustomUpNavigation, Temp_byte_Variable) == 0x000018, "Member 'WBP_Inventory_CM_C_SetCustomUpNavigation::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Inventory_CM_C_SetCustomUpNavigation, Temp_int_Loop_Counter_Variable) == 0x00001C, "Member 'WBP_Inventory_CM_C_SetCustomUpNavigation::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Inventory_CM_C_SetCustomUpNavigation, CallFunc_Add_IntInt_ReturnValue) == 0x000020, "Member 'WBP_Inventory_CM_C_SetCustomUpNavigation::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Inventory_CM_C_SetCustomUpNavigation, CallFunc_GetAllBagVerticalBoxes_AllBagVerticalBoxes) == 0x000028, "Member 'WBP_Inventory_CM_C_SetCustomUpNavigation::CallFunc_GetAllBagVerticalBoxes_AllBagVerticalBoxes' has a wrong offset!");
static_assert(offsetof(WBP_Inventory_CM_C_SetCustomUpNavigation, Temp_byte_Variable_1) == 0x000038, "Member 'WBP_Inventory_CM_C_SetCustomUpNavigation::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_Inventory_CM_C_SetCustomUpNavigation, CallFunc_Array_Get_Item) == 0x000040, "Member 'WBP_Inventory_CM_C_SetCustomUpNavigation::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_Inventory_CM_C_SetCustomUpNavigation, CallFunc_GetChildrenCount_ReturnValue) == 0x000048, "Member 'WBP_Inventory_CM_C_SetCustomUpNavigation::CallFunc_GetChildrenCount_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Inventory_CM_C_SetCustomUpNavigation, CallFunc_Array_Length_ReturnValue) == 0x00004C, "Member 'WBP_Inventory_CM_C_SetCustomUpNavigation::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Inventory_CM_C_SetCustomUpNavigation, Temp_bool_Variable) == 0x000050, "Member 'WBP_Inventory_CM_C_SetCustomUpNavigation::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Inventory_CM_C_SetCustomUpNavigation, CallFunc_Less_IntInt_ReturnValue) == 0x000051, "Member 'WBP_Inventory_CM_C_SetCustomUpNavigation::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Inventory_CM_C_SetCustomUpNavigation, K2Node_Select_Default) == 0x000052, "Member 'WBP_Inventory_CM_C_SetCustomUpNavigation::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_Inventory_CM_C_SetCustomUpNavigation, CallFunc_Subtract_IntInt_ReturnValue) == 0x000054, "Member 'WBP_Inventory_CM_C_SetCustomUpNavigation::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Inventory_CM_C_SetCustomUpNavigation, CallFunc_GetChildAt_ReturnValue) == 0x000058, "Member 'WBP_Inventory_CM_C_SetCustomUpNavigation::CallFunc_GetChildAt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Inventory_CM_C_SetCustomUpNavigation, K2Node_DynamicCast_AsWBP_Inventory_Bag_CM) == 0x000060, "Member 'WBP_Inventory_CM_C_SetCustomUpNavigation::K2Node_DynamicCast_AsWBP_Inventory_Bag_CM' has a wrong offset!");
static_assert(offsetof(WBP_Inventory_CM_C_SetCustomUpNavigation, K2Node_DynamicCast_bSuccess) == 0x000068, "Member 'WBP_Inventory_CM_C_SetCustomUpNavigation::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_Inventory_CM_C_SetCustomUpNavigation, CallFunc_GetAllSlots_Slots) == 0x000070, "Member 'WBP_Inventory_CM_C_SetCustomUpNavigation::CallFunc_GetAllSlots_Slots' has a wrong offset!");
static_assert(offsetof(WBP_Inventory_CM_C_SetCustomUpNavigation, CallFunc_Array_Get_Item_1) == 0x000080, "Member 'WBP_Inventory_CM_C_SetCustomUpNavigation::CallFunc_Array_Get_Item_1' has a wrong offset!");

// Function WBP_Inventory_CM.WBP_Inventory_CM_C.SetIncludedBagTypes
// 0x0050 (0x0050 - 0x0000)
struct WBP_Inventory_CM_C_SetIncludedBagTypes final
{
public:
	TSet<struct FGameplayTag>                     Param_IncludedBagTypes;                            // 0x0000(0x0050)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(WBP_Inventory_CM_C_SetIncludedBagTypes) == 0x000008, "Wrong alignment on WBP_Inventory_CM_C_SetIncludedBagTypes");
static_assert(sizeof(WBP_Inventory_CM_C_SetIncludedBagTypes) == 0x000050, "Wrong size on WBP_Inventory_CM_C_SetIncludedBagTypes");
static_assert(offsetof(WBP_Inventory_CM_C_SetIncludedBagTypes, Param_IncludedBagTypes) == 0x000000, "Member 'WBP_Inventory_CM_C_SetIncludedBagTypes::Param_IncludedBagTypes' has a wrong offset!");

// Function WBP_Inventory_CM.WBP_Inventory_CM_C.SetInventory
// 0x0008 (0x0008 - 0x0000)
struct WBP_Inventory_CM_C_SetInventory final
{
public:
	class UInventoryComponent*                    Param_Inventory;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Inventory_CM_C_SetInventory) == 0x000008, "Wrong alignment on WBP_Inventory_CM_C_SetInventory");
static_assert(sizeof(WBP_Inventory_CM_C_SetInventory) == 0x000008, "Wrong size on WBP_Inventory_CM_C_SetInventory");
static_assert(offsetof(WBP_Inventory_CM_C_SetInventory, Param_Inventory) == 0x000000, "Member 'WBP_Inventory_CM_C_SetInventory::Param_Inventory' has a wrong offset!");

// Function WBP_Inventory_CM.WBP_Inventory_CM_C.UpdateSellIcon
// 0x0008 (0x0008 - 0x0000)
struct WBP_Inventory_CM_C_UpdateSellIcon final
{
public:
	class UTexture2D*                             SellIcon;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Inventory_CM_C_UpdateSellIcon) == 0x000008, "Wrong alignment on WBP_Inventory_CM_C_UpdateSellIcon");
static_assert(sizeof(WBP_Inventory_CM_C_UpdateSellIcon) == 0x000008, "Wrong size on WBP_Inventory_CM_C_UpdateSellIcon");
static_assert(offsetof(WBP_Inventory_CM_C_UpdateSellIcon, SellIcon) == 0x000000, "Member 'WBP_Inventory_CM_C_UpdateSellIcon::SellIcon' has a wrong offset!");

// Function WBP_Inventory_CM.WBP_Inventory_CM_C.UpdateSellText
// 0x0048 (0x0048 - 0x0000)
struct WBP_Inventory_CM_C_UpdateSellText final
{
public:
	int32                                         Item_Value;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Stack_Value;                                       // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_UpdateVisibility_IsVisible;               // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_UpdateVisibility_IsVisible_1;             // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_58E3[0x2];                                     // 0x000E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x0010(0x0018)()
	class FText                                   CallFunc_Conv_IntToText_ReturnValue_1;             // 0x0028(0x0018)()
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Inventory_CM_C_UpdateSellText) == 0x000008, "Wrong alignment on WBP_Inventory_CM_C_UpdateSellText");
static_assert(sizeof(WBP_Inventory_CM_C_UpdateSellText) == 0x000048, "Wrong size on WBP_Inventory_CM_C_UpdateSellText");
static_assert(offsetof(WBP_Inventory_CM_C_UpdateSellText, Item_Value) == 0x000000, "Member 'WBP_Inventory_CM_C_UpdateSellText::Item_Value' has a wrong offset!");
static_assert(offsetof(WBP_Inventory_CM_C_UpdateSellText, Stack_Value) == 0x000004, "Member 'WBP_Inventory_CM_C_UpdateSellText::Stack_Value' has a wrong offset!");
static_assert(offsetof(WBP_Inventory_CM_C_UpdateSellText, Temp_bool_Variable) == 0x000008, "Member 'WBP_Inventory_CM_C_UpdateSellText::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Inventory_CM_C_UpdateSellText, CallFunc_Greater_IntInt_ReturnValue) == 0x000009, "Member 'WBP_Inventory_CM_C_UpdateSellText::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Inventory_CM_C_UpdateSellText, Temp_byte_Variable) == 0x00000A, "Member 'WBP_Inventory_CM_C_UpdateSellText::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Inventory_CM_C_UpdateSellText, Temp_byte_Variable_1) == 0x00000B, "Member 'WBP_Inventory_CM_C_UpdateSellText::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_Inventory_CM_C_UpdateSellText, CallFunc_UpdateVisibility_IsVisible) == 0x00000C, "Member 'WBP_Inventory_CM_C_UpdateSellText::CallFunc_UpdateVisibility_IsVisible' has a wrong offset!");
static_assert(offsetof(WBP_Inventory_CM_C_UpdateSellText, CallFunc_UpdateVisibility_IsVisible_1) == 0x00000D, "Member 'WBP_Inventory_CM_C_UpdateSellText::CallFunc_UpdateVisibility_IsVisible_1' has a wrong offset!");
static_assert(offsetof(WBP_Inventory_CM_C_UpdateSellText, CallFunc_Conv_IntToText_ReturnValue) == 0x000010, "Member 'WBP_Inventory_CM_C_UpdateSellText::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Inventory_CM_C_UpdateSellText, CallFunc_Conv_IntToText_ReturnValue_1) == 0x000028, "Member 'WBP_Inventory_CM_C_UpdateSellText::CallFunc_Conv_IntToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_Inventory_CM_C_UpdateSellText, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000040, "Member 'WBP_Inventory_CM_C_UpdateSellText::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Inventory_CM_C_UpdateSellText, K2Node_Select_Default) == 0x000041, "Member 'WBP_Inventory_CM_C_UpdateSellText::K2Node_Select_Default' has a wrong offset!");

// Function WBP_Inventory_CM.WBP_Inventory_CM_C.UpdateTabSelector
// 0x0018 (0x0018 - 0x0000)
struct WBP_Inventory_CM_C_UpdateTabSelector final
{
public:
	class UVerticalBoxSlot*                       CallFunc_SlotAsVerticalBoxSlot_ReturnValue;        // 0x0000(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasQuestBag_bQuestBag;                    // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAmmoBag_bAmmoBag;                      // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasMainBag_bMainBag;                      // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetNumCoreBags_NumCoreBags;               // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Inventory_CM_C_UpdateTabSelector) == 0x000008, "Wrong alignment on WBP_Inventory_CM_C_UpdateTabSelector");
static_assert(sizeof(WBP_Inventory_CM_C_UpdateTabSelector) == 0x000018, "Wrong size on WBP_Inventory_CM_C_UpdateTabSelector");
static_assert(offsetof(WBP_Inventory_CM_C_UpdateTabSelector, CallFunc_SlotAsVerticalBoxSlot_ReturnValue) == 0x000000, "Member 'WBP_Inventory_CM_C_UpdateTabSelector::CallFunc_SlotAsVerticalBoxSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Inventory_CM_C_UpdateTabSelector, CallFunc_Not_PreBool_ReturnValue) == 0x000008, "Member 'WBP_Inventory_CM_C_UpdateTabSelector::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Inventory_CM_C_UpdateTabSelector, CallFunc_HasQuestBag_bQuestBag) == 0x000009, "Member 'WBP_Inventory_CM_C_UpdateTabSelector::CallFunc_HasQuestBag_bQuestBag' has a wrong offset!");
static_assert(offsetof(WBP_Inventory_CM_C_UpdateTabSelector, CallFunc_HasAmmoBag_bAmmoBag) == 0x00000A, "Member 'WBP_Inventory_CM_C_UpdateTabSelector::CallFunc_HasAmmoBag_bAmmoBag' has a wrong offset!");
static_assert(offsetof(WBP_Inventory_CM_C_UpdateTabSelector, CallFunc_HasMainBag_bMainBag) == 0x00000B, "Member 'WBP_Inventory_CM_C_UpdateTabSelector::CallFunc_HasMainBag_bMainBag' has a wrong offset!");
static_assert(offsetof(WBP_Inventory_CM_C_UpdateTabSelector, CallFunc_GetNumCoreBags_NumCoreBags) == 0x00000C, "Member 'WBP_Inventory_CM_C_UpdateTabSelector::CallFunc_GetNumCoreBags_NumCoreBags' has a wrong offset!");
static_assert(offsetof(WBP_Inventory_CM_C_UpdateTabSelector, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000010, "Member 'WBP_Inventory_CM_C_UpdateTabSelector::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Inventory_CM_C_UpdateTabSelector, CallFunc_BooleanAND_ReturnValue) == 0x000011, "Member 'WBP_Inventory_CM_C_UpdateTabSelector::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

}

