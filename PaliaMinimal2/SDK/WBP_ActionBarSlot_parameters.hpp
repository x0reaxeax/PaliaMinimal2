#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_ActionBarSlot

#include "Basic.hpp"

#include "SlateCore_structs.hpp"
#include "EnhancedInput_structs.hpp"
#include "Palia_structs.hpp"
#include "UMG_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function WBP_ActionBarSlot.WBP_ActionBarSlot_C.BP_OnHandleBackAction
// 0x0001 (0x0001 - 0x0000)
struct WBP_ActionBarSlot_C_BP_OnHandleBackAction final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ActionBarSlot_C_BP_OnHandleBackAction) == 0x000001, "Wrong alignment on WBP_ActionBarSlot_C_BP_OnHandleBackAction");
static_assert(sizeof(WBP_ActionBarSlot_C_BP_OnHandleBackAction) == 0x000001, "Wrong size on WBP_ActionBarSlot_C_BP_OnHandleBackAction");
static_assert(offsetof(WBP_ActionBarSlot_C_BP_OnHandleBackAction, ReturnValue) == 0x000000, "Member 'WBP_ActionBarSlot_C_BP_OnHandleBackAction::ReturnValue' has a wrong offset!");

// Function WBP_ActionBarSlot.WBP_ActionBarSlot_C.ExecuteUbergraph_WBP_ActionBarSlot
// 0x0108 (0x0108 - 0x0000)
struct WBP_ActionBarSlot_C_ExecuteUbergraph_WBP_ActionBarSlot final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(const struct FInputActionValue& ActionValue, float ElapsedTime, float TriggeredTime, class UInputAction* SourceAction)> K2Node_CreateDelegate_OutputDelegate;              // 0x0004(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5300[0x4];                                     // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FValeriaItem                           K2Node_CustomEvent_Item;                           // 0x0018(0x0060)()
	bool                                          K2Node_CustomEvent_NewHighlighted;                 // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0079(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ItemIsEmpty_ReturnValue;                  // 0x007A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x007B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UWBP_ItemSlot_CM_C* Slot)> K2Node_CreateDelegate_OutputDelegate_1;            // 0x007C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UWBP_ItemSlot_CM_C* Slot)> K2Node_CreateDelegate_OutputDelegate_2;            // 0x008C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x009C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Set_Item_Definition_Displays;             // 0x009D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x009E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EValeriaFuncResult                            CallFunc_GetValeriaCharacter_OutResult;            // 0x009F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AValeriaCharacter*                      CallFunc_GetValeriaCharacter_ReturnValue;          // 0x00A0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPlacementComponent*                    CallFunc_GetPlacement_ReturnValue;                 // 0x00A8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5301[0x3];                                     // 0x00B1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class UPlacementComponent* PC, bool IsPlacing)> K2Node_CreateDelegate_OutputDelegate_3;            // 0x00B4(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5302[0x4];                                     // 0x00C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPlacementComponent*                    K2Node_CustomEvent_PC;                             // 0x00C8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_isPlacing;                      // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5303[0x3];                                     // 0x00D1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(const struct FInputActionValue& ActionValue, float ElapsedTime, float TriggeredTime, class UInputAction* SourceAction)> K2Node_CreateDelegate_OutputDelegate_4;            // 0x00D4(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGuid                                  CallFunc_RegisterInputActionBinding_ReturnValue;   // 0x00E4(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGuid                                  CallFunc_RegisterInputActionBinding_ReturnValue_1; // 0x00F4(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ActionBarSlot_C_ExecuteUbergraph_WBP_ActionBarSlot) == 0x000008, "Wrong alignment on WBP_ActionBarSlot_C_ExecuteUbergraph_WBP_ActionBarSlot");
static_assert(sizeof(WBP_ActionBarSlot_C_ExecuteUbergraph_WBP_ActionBarSlot) == 0x000108, "Wrong size on WBP_ActionBarSlot_C_ExecuteUbergraph_WBP_ActionBarSlot");
static_assert(offsetof(WBP_ActionBarSlot_C_ExecuteUbergraph_WBP_ActionBarSlot, EntryPoint) == 0x000000, "Member 'WBP_ActionBarSlot_C_ExecuteUbergraph_WBP_ActionBarSlot::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_ActionBarSlot_C_ExecuteUbergraph_WBP_ActionBarSlot, K2Node_CreateDelegate_OutputDelegate) == 0x000004, "Member 'WBP_ActionBarSlot_C_ExecuteUbergraph_WBP_ActionBarSlot::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WBP_ActionBarSlot_C_ExecuteUbergraph_WBP_ActionBarSlot, K2Node_CustomEvent_Item) == 0x000018, "Member 'WBP_ActionBarSlot_C_ExecuteUbergraph_WBP_ActionBarSlot::K2Node_CustomEvent_Item' has a wrong offset!");
static_assert(offsetof(WBP_ActionBarSlot_C_ExecuteUbergraph_WBP_ActionBarSlot, K2Node_CustomEvent_NewHighlighted) == 0x000078, "Member 'WBP_ActionBarSlot_C_ExecuteUbergraph_WBP_ActionBarSlot::K2Node_CustomEvent_NewHighlighted' has a wrong offset!");
static_assert(offsetof(WBP_ActionBarSlot_C_ExecuteUbergraph_WBP_ActionBarSlot, Temp_byte_Variable) == 0x000079, "Member 'WBP_ActionBarSlot_C_ExecuteUbergraph_WBP_ActionBarSlot::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_ActionBarSlot_C_ExecuteUbergraph_WBP_ActionBarSlot, CallFunc_ItemIsEmpty_ReturnValue) == 0x00007A, "Member 'WBP_ActionBarSlot_C_ExecuteUbergraph_WBP_ActionBarSlot::CallFunc_ItemIsEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ActionBarSlot_C_ExecuteUbergraph_WBP_ActionBarSlot, Temp_byte_Variable_1) == 0x00007B, "Member 'WBP_ActionBarSlot_C_ExecuteUbergraph_WBP_ActionBarSlot::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_ActionBarSlot_C_ExecuteUbergraph_WBP_ActionBarSlot, K2Node_CreateDelegate_OutputDelegate_1) == 0x00007C, "Member 'WBP_ActionBarSlot_C_ExecuteUbergraph_WBP_ActionBarSlot::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(WBP_ActionBarSlot_C_ExecuteUbergraph_WBP_ActionBarSlot, K2Node_CreateDelegate_OutputDelegate_2) == 0x00008C, "Member 'WBP_ActionBarSlot_C_ExecuteUbergraph_WBP_ActionBarSlot::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(WBP_ActionBarSlot_C_ExecuteUbergraph_WBP_ActionBarSlot, Temp_bool_Variable) == 0x00009C, "Member 'WBP_ActionBarSlot_C_ExecuteUbergraph_WBP_ActionBarSlot::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_ActionBarSlot_C_ExecuteUbergraph_WBP_ActionBarSlot, CallFunc_Set_Item_Definition_Displays) == 0x00009D, "Member 'WBP_ActionBarSlot_C_ExecuteUbergraph_WBP_ActionBarSlot::CallFunc_Set_Item_Definition_Displays' has a wrong offset!");
static_assert(offsetof(WBP_ActionBarSlot_C_ExecuteUbergraph_WBP_ActionBarSlot, K2Node_Select_Default) == 0x00009E, "Member 'WBP_ActionBarSlot_C_ExecuteUbergraph_WBP_ActionBarSlot::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_ActionBarSlot_C_ExecuteUbergraph_WBP_ActionBarSlot, CallFunc_GetValeriaCharacter_OutResult) == 0x00009F, "Member 'WBP_ActionBarSlot_C_ExecuteUbergraph_WBP_ActionBarSlot::CallFunc_GetValeriaCharacter_OutResult' has a wrong offset!");
static_assert(offsetof(WBP_ActionBarSlot_C_ExecuteUbergraph_WBP_ActionBarSlot, CallFunc_GetValeriaCharacter_ReturnValue) == 0x0000A0, "Member 'WBP_ActionBarSlot_C_ExecuteUbergraph_WBP_ActionBarSlot::CallFunc_GetValeriaCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ActionBarSlot_C_ExecuteUbergraph_WBP_ActionBarSlot, CallFunc_GetPlacement_ReturnValue) == 0x0000A8, "Member 'WBP_ActionBarSlot_C_ExecuteUbergraph_WBP_ActionBarSlot::CallFunc_GetPlacement_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ActionBarSlot_C_ExecuteUbergraph_WBP_ActionBarSlot, K2Node_SwitchEnum_CmpSuccess) == 0x0000B0, "Member 'WBP_ActionBarSlot_C_ExecuteUbergraph_WBP_ActionBarSlot::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(WBP_ActionBarSlot_C_ExecuteUbergraph_WBP_ActionBarSlot, K2Node_CreateDelegate_OutputDelegate_3) == 0x0000B4, "Member 'WBP_ActionBarSlot_C_ExecuteUbergraph_WBP_ActionBarSlot::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");
static_assert(offsetof(WBP_ActionBarSlot_C_ExecuteUbergraph_WBP_ActionBarSlot, K2Node_CustomEvent_PC) == 0x0000C8, "Member 'WBP_ActionBarSlot_C_ExecuteUbergraph_WBP_ActionBarSlot::K2Node_CustomEvent_PC' has a wrong offset!");
static_assert(offsetof(WBP_ActionBarSlot_C_ExecuteUbergraph_WBP_ActionBarSlot, K2Node_CustomEvent_isPlacing) == 0x0000D0, "Member 'WBP_ActionBarSlot_C_ExecuteUbergraph_WBP_ActionBarSlot::K2Node_CustomEvent_isPlacing' has a wrong offset!");
static_assert(offsetof(WBP_ActionBarSlot_C_ExecuteUbergraph_WBP_ActionBarSlot, K2Node_CreateDelegate_OutputDelegate_4) == 0x0000D4, "Member 'WBP_ActionBarSlot_C_ExecuteUbergraph_WBP_ActionBarSlot::K2Node_CreateDelegate_OutputDelegate_4' has a wrong offset!");
static_assert(offsetof(WBP_ActionBarSlot_C_ExecuteUbergraph_WBP_ActionBarSlot, CallFunc_RegisterInputActionBinding_ReturnValue) == 0x0000E4, "Member 'WBP_ActionBarSlot_C_ExecuteUbergraph_WBP_ActionBarSlot::CallFunc_RegisterInputActionBinding_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ActionBarSlot_C_ExecuteUbergraph_WBP_ActionBarSlot, CallFunc_RegisterInputActionBinding_ReturnValue_1) == 0x0000F4, "Member 'WBP_ActionBarSlot_C_ExecuteUbergraph_WBP_ActionBarSlot::CallFunc_RegisterInputActionBinding_ReturnValue_1' has a wrong offset!");

// Function WBP_ActionBarSlot.WBP_ActionBarSlot_C.HandleHovered
// 0x0008 (0x0008 - 0x0000)
struct WBP_ActionBarSlot_C_HandleHovered final
{
public:
	class UWBP_ItemSlot_CM_C*                     Param_Slot;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ActionBarSlot_C_HandleHovered) == 0x000008, "Wrong alignment on WBP_ActionBarSlot_C_HandleHovered");
static_assert(sizeof(WBP_ActionBarSlot_C_HandleHovered) == 0x000008, "Wrong size on WBP_ActionBarSlot_C_HandleHovered");
static_assert(offsetof(WBP_ActionBarSlot_C_HandleHovered, Param_Slot) == 0x000000, "Member 'WBP_ActionBarSlot_C_HandleHovered::Param_Slot' has a wrong offset!");

// Function WBP_ActionBarSlot.WBP_ActionBarSlot_C.HandleInputAction_EatActionBarItem
// 0x0048 (0x0048 - 0x0000)
struct WBP_ActionBarSlot_C_HandleInputAction_EatActionBarItem final
{
public:
	struct FInputActionValue                      ActionValue;                                       // 0x0000(0x0020)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	float                                         ElapsedTime;                                       // 0x0020(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         TriggeredTime;                                     // 0x0024(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	const class UInputAction*                     SourceAction;                                      // 0x0028(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	EValeriaFuncResult                            CallFunc_GetValeriaCharacter_OutResult;            // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5304[0x7];                                     // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AValeriaCharacter*                      CallFunc_GetValeriaCharacter_ReturnValue;          // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ActionBarSlot_C_HandleInputAction_EatActionBarItem) == 0x000008, "Wrong alignment on WBP_ActionBarSlot_C_HandleInputAction_EatActionBarItem");
static_assert(sizeof(WBP_ActionBarSlot_C_HandleInputAction_EatActionBarItem) == 0x000048, "Wrong size on WBP_ActionBarSlot_C_HandleInputAction_EatActionBarItem");
static_assert(offsetof(WBP_ActionBarSlot_C_HandleInputAction_EatActionBarItem, ActionValue) == 0x000000, "Member 'WBP_ActionBarSlot_C_HandleInputAction_EatActionBarItem::ActionValue' has a wrong offset!");
static_assert(offsetof(WBP_ActionBarSlot_C_HandleInputAction_EatActionBarItem, ElapsedTime) == 0x000020, "Member 'WBP_ActionBarSlot_C_HandleInputAction_EatActionBarItem::ElapsedTime' has a wrong offset!");
static_assert(offsetof(WBP_ActionBarSlot_C_HandleInputAction_EatActionBarItem, TriggeredTime) == 0x000024, "Member 'WBP_ActionBarSlot_C_HandleInputAction_EatActionBarItem::TriggeredTime' has a wrong offset!");
static_assert(offsetof(WBP_ActionBarSlot_C_HandleInputAction_EatActionBarItem, SourceAction) == 0x000028, "Member 'WBP_ActionBarSlot_C_HandleInputAction_EatActionBarItem::SourceAction' has a wrong offset!");
static_assert(offsetof(WBP_ActionBarSlot_C_HandleInputAction_EatActionBarItem, CallFunc_GetValeriaCharacter_OutResult) == 0x000030, "Member 'WBP_ActionBarSlot_C_HandleInputAction_EatActionBarItem::CallFunc_GetValeriaCharacter_OutResult' has a wrong offset!");
static_assert(offsetof(WBP_ActionBarSlot_C_HandleInputAction_EatActionBarItem, CallFunc_GetValeriaCharacter_ReturnValue) == 0x000038, "Member 'WBP_ActionBarSlot_C_HandleInputAction_EatActionBarItem::CallFunc_GetValeriaCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ActionBarSlot_C_HandleInputAction_EatActionBarItem, K2Node_SwitchEnum_CmpSuccess) == 0x000040, "Member 'WBP_ActionBarSlot_C_HandleInputAction_EatActionBarItem::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function WBP_ActionBarSlot.WBP_ActionBarSlot_C.HandleInputAction_UseActionBarItem
// 0x0048 (0x0048 - 0x0000)
struct WBP_ActionBarSlot_C_HandleInputAction_UseActionBarItem final
{
public:
	struct FInputActionValue                      ActionValue;                                       // 0x0000(0x0020)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	float                                         ElapsedTime;                                       // 0x0020(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         TriggeredTime;                                     // 0x0024(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	const class UInputAction*                     SourceAction;                                      // 0x0028(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	EValeriaFuncResult                            CallFunc_GetValeriaCharacter_OutResult;            // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5305[0x7];                                     // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AValeriaCharacter*                      CallFunc_GetValeriaCharacter_ReturnValue;          // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPlacing_ReturnValue;                    // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0042(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0043(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ActionBarSlot_C_HandleInputAction_UseActionBarItem) == 0x000008, "Wrong alignment on WBP_ActionBarSlot_C_HandleInputAction_UseActionBarItem");
static_assert(sizeof(WBP_ActionBarSlot_C_HandleInputAction_UseActionBarItem) == 0x000048, "Wrong size on WBP_ActionBarSlot_C_HandleInputAction_UseActionBarItem");
static_assert(offsetof(WBP_ActionBarSlot_C_HandleInputAction_UseActionBarItem, ActionValue) == 0x000000, "Member 'WBP_ActionBarSlot_C_HandleInputAction_UseActionBarItem::ActionValue' has a wrong offset!");
static_assert(offsetof(WBP_ActionBarSlot_C_HandleInputAction_UseActionBarItem, ElapsedTime) == 0x000020, "Member 'WBP_ActionBarSlot_C_HandleInputAction_UseActionBarItem::ElapsedTime' has a wrong offset!");
static_assert(offsetof(WBP_ActionBarSlot_C_HandleInputAction_UseActionBarItem, TriggeredTime) == 0x000024, "Member 'WBP_ActionBarSlot_C_HandleInputAction_UseActionBarItem::TriggeredTime' has a wrong offset!");
static_assert(offsetof(WBP_ActionBarSlot_C_HandleInputAction_UseActionBarItem, SourceAction) == 0x000028, "Member 'WBP_ActionBarSlot_C_HandleInputAction_UseActionBarItem::SourceAction' has a wrong offset!");
static_assert(offsetof(WBP_ActionBarSlot_C_HandleInputAction_UseActionBarItem, CallFunc_GetValeriaCharacter_OutResult) == 0x000030, "Member 'WBP_ActionBarSlot_C_HandleInputAction_UseActionBarItem::CallFunc_GetValeriaCharacter_OutResult' has a wrong offset!");
static_assert(offsetof(WBP_ActionBarSlot_C_HandleInputAction_UseActionBarItem, CallFunc_GetValeriaCharacter_ReturnValue) == 0x000038, "Member 'WBP_ActionBarSlot_C_HandleInputAction_UseActionBarItem::CallFunc_GetValeriaCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ActionBarSlot_C_HandleInputAction_UseActionBarItem, K2Node_SwitchEnum_CmpSuccess) == 0x000040, "Member 'WBP_ActionBarSlot_C_HandleInputAction_UseActionBarItem::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(WBP_ActionBarSlot_C_HandleInputAction_UseActionBarItem, CallFunc_IsPlacing_ReturnValue) == 0x000041, "Member 'WBP_ActionBarSlot_C_HandleInputAction_UseActionBarItem::CallFunc_IsPlacing_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ActionBarSlot_C_HandleInputAction_UseActionBarItem, CallFunc_Not_PreBool_ReturnValue) == 0x000042, "Member 'WBP_ActionBarSlot_C_HandleInputAction_UseActionBarItem::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ActionBarSlot_C_HandleInputAction_UseActionBarItem, CallFunc_BooleanAND_ReturnValue) == 0x000043, "Member 'WBP_ActionBarSlot_C_HandleInputAction_UseActionBarItem::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function WBP_ActionBarSlot.WBP_ActionBarSlot_C.HandleUnhovered
// 0x0008 (0x0008 - 0x0000)
struct WBP_ActionBarSlot_C_HandleUnhovered final
{
public:
	class UWBP_ItemSlot_CM_C*                     Param_Slot;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ActionBarSlot_C_HandleUnhovered) == 0x000008, "Wrong alignment on WBP_ActionBarSlot_C_HandleUnhovered");
static_assert(sizeof(WBP_ActionBarSlot_C_HandleUnhovered) == 0x000008, "Wrong size on WBP_ActionBarSlot_C_HandleUnhovered");
static_assert(offsetof(WBP_ActionBarSlot_C_HandleUnhovered, Param_Slot) == 0x000000, "Member 'WBP_ActionBarSlot_C_HandleUnhovered::Param_Slot' has a wrong offset!");

// Function WBP_ActionBarSlot.WBP_ActionBarSlot_C.OnActionBarIsActivated__DelegateSignature
// 0x0001 (0x0001 - 0x0000)
struct WBP_ActionBarSlot_C_OnActionBarIsActivated__DelegateSignature final
{
public:
	bool                                          bIsActionBarActivated;                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ActionBarSlot_C_OnActionBarIsActivated__DelegateSignature) == 0x000001, "Wrong alignment on WBP_ActionBarSlot_C_OnActionBarIsActivated__DelegateSignature");
static_assert(sizeof(WBP_ActionBarSlot_C_OnActionBarIsActivated__DelegateSignature) == 0x000001, "Wrong size on WBP_ActionBarSlot_C_OnActionBarIsActivated__DelegateSignature");
static_assert(offsetof(WBP_ActionBarSlot_C_OnActionBarIsActivated__DelegateSignature, bIsActionBarActivated) == 0x000000, "Member 'WBP_ActionBarSlot_C_OnActionBarIsActivated__DelegateSignature::bIsActionBarActivated' has a wrong offset!");

// Function WBP_ActionBarSlot.WBP_ActionBarSlot_C.OnPlacementChanged
// 0x0010 (0x0010 - 0x0000)
struct WBP_ActionBarSlot_C_OnPlacementChanged final
{
public:
	class UPlacementComponent*                    PC;                                                // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          IsPlacing;                                         // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ActionBarSlot_C_OnPlacementChanged) == 0x000008, "Wrong alignment on WBP_ActionBarSlot_C_OnPlacementChanged");
static_assert(sizeof(WBP_ActionBarSlot_C_OnPlacementChanged) == 0x000010, "Wrong size on WBP_ActionBarSlot_C_OnPlacementChanged");
static_assert(offsetof(WBP_ActionBarSlot_C_OnPlacementChanged, PC) == 0x000000, "Member 'WBP_ActionBarSlot_C_OnPlacementChanged::PC' has a wrong offset!");
static_assert(offsetof(WBP_ActionBarSlot_C_OnPlacementChanged, IsPlacing) == 0x000008, "Member 'WBP_ActionBarSlot_C_OnPlacementChanged::IsPlacing' has a wrong offset!");

// Function WBP_ActionBarSlot.WBP_ActionBarSlot_C.SetSlotNumber
// 0x0020 (0x0020 - 0x0000)
struct WBP_ActionBarSlot_C_SetSlotNumber final
{
public:
	int32                                         Param_SlotNumber;                                  // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x0008(0x0018)()
};
static_assert(alignof(WBP_ActionBarSlot_C_SetSlotNumber) == 0x000008, "Wrong alignment on WBP_ActionBarSlot_C_SetSlotNumber");
static_assert(sizeof(WBP_ActionBarSlot_C_SetSlotNumber) == 0x000020, "Wrong size on WBP_ActionBarSlot_C_SetSlotNumber");
static_assert(offsetof(WBP_ActionBarSlot_C_SetSlotNumber, Param_SlotNumber) == 0x000000, "Member 'WBP_ActionBarSlot_C_SetSlotNumber::Param_SlotNumber' has a wrong offset!");
static_assert(offsetof(WBP_ActionBarSlot_C_SetSlotNumber, CallFunc_Add_IntInt_ReturnValue) == 0x000004, "Member 'WBP_ActionBarSlot_C_SetSlotNumber::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ActionBarSlot_C_SetSlotNumber, CallFunc_Conv_IntToText_ReturnValue) == 0x000008, "Member 'WBP_ActionBarSlot_C_SetSlotNumber::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");

// Function WBP_ActionBarSlot.WBP_ActionBarSlot_C.ToggleHighlight
// 0x0078 (0x0078 - 0x0000)
struct WBP_ActionBarSlot_C_ToggleHighlight final
{
public:
	bool                                          IsHighlighted;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5306[0x5];                                     // 0x0003(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UVALUI_TextBlockStyle*                  Temp_object_Variable;                              // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UVALUI_TextBlockStyle*                  Temp_object_Variable_1;                            // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5307[0x7];                                     // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Temp_real_Variable;                                // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_1;                              // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0032(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0033(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5308[0x4];                                     // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UVALUI_TextBlockStyle*                  K2Node_Select_Default_1;                           // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_BoolBool_ReturnValue;            // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5309[0x7];                                     // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_Select_Default_2;                           // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_SelectColor_ReturnValue;                  // 0x0050(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSlateColor                            K2Node_MakeStruct_SlateColor;                      // 0x0060(0x0014)()
};
static_assert(alignof(WBP_ActionBarSlot_C_ToggleHighlight) == 0x000008, "Wrong alignment on WBP_ActionBarSlot_C_ToggleHighlight");
static_assert(sizeof(WBP_ActionBarSlot_C_ToggleHighlight) == 0x000078, "Wrong size on WBP_ActionBarSlot_C_ToggleHighlight");
static_assert(offsetof(WBP_ActionBarSlot_C_ToggleHighlight, IsHighlighted) == 0x000000, "Member 'WBP_ActionBarSlot_C_ToggleHighlight::IsHighlighted' has a wrong offset!");
static_assert(offsetof(WBP_ActionBarSlot_C_ToggleHighlight, Temp_byte_Variable) == 0x000001, "Member 'WBP_ActionBarSlot_C_ToggleHighlight::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_ActionBarSlot_C_ToggleHighlight, Temp_bool_Variable) == 0x000002, "Member 'WBP_ActionBarSlot_C_ToggleHighlight::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_ActionBarSlot_C_ToggleHighlight, Temp_object_Variable) == 0x000008, "Member 'WBP_ActionBarSlot_C_ToggleHighlight::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(WBP_ActionBarSlot_C_ToggleHighlight, Temp_object_Variable_1) == 0x000010, "Member 'WBP_ActionBarSlot_C_ToggleHighlight::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_ActionBarSlot_C_ToggleHighlight, Temp_bool_Variable_1) == 0x000018, "Member 'WBP_ActionBarSlot_C_ToggleHighlight::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_ActionBarSlot_C_ToggleHighlight, Temp_real_Variable) == 0x000020, "Member 'WBP_ActionBarSlot_C_ToggleHighlight::Temp_real_Variable' has a wrong offset!");
static_assert(offsetof(WBP_ActionBarSlot_C_ToggleHighlight, Temp_real_Variable_1) == 0x000028, "Member 'WBP_ActionBarSlot_C_ToggleHighlight::Temp_real_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_ActionBarSlot_C_ToggleHighlight, Temp_byte_Variable_1) == 0x000030, "Member 'WBP_ActionBarSlot_C_ToggleHighlight::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_ActionBarSlot_C_ToggleHighlight, Temp_bool_Variable_2) == 0x000031, "Member 'WBP_ActionBarSlot_C_ToggleHighlight::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_ActionBarSlot_C_ToggleHighlight, K2Node_Select_Default) == 0x000032, "Member 'WBP_ActionBarSlot_C_ToggleHighlight::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_ActionBarSlot_C_ToggleHighlight, CallFunc_Not_PreBool_ReturnValue) == 0x000033, "Member 'WBP_ActionBarSlot_C_ToggleHighlight::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ActionBarSlot_C_ToggleHighlight, K2Node_Select_Default_1) == 0x000038, "Member 'WBP_ActionBarSlot_C_ToggleHighlight::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(WBP_ActionBarSlot_C_ToggleHighlight, CallFunc_NotEqual_BoolBool_ReturnValue) == 0x000040, "Member 'WBP_ActionBarSlot_C_ToggleHighlight::CallFunc_NotEqual_BoolBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ActionBarSlot_C_ToggleHighlight, K2Node_Select_Default_2) == 0x000048, "Member 'WBP_ActionBarSlot_C_ToggleHighlight::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(WBP_ActionBarSlot_C_ToggleHighlight, CallFunc_SelectColor_ReturnValue) == 0x000050, "Member 'WBP_ActionBarSlot_C_ToggleHighlight::CallFunc_SelectColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ActionBarSlot_C_ToggleHighlight, K2Node_MakeStruct_SlateColor) == 0x000060, "Member 'WBP_ActionBarSlot_C_ToggleHighlight::K2Node_MakeStruct_SlateColor' has a wrong offset!");

// Function WBP_ActionBarSlot.WBP_ActionBarSlot_C.UpdateActionBarSlot
// 0x0068 (0x0068 - 0x0000)
struct WBP_ActionBarSlot_C_UpdateActionBarSlot final
{
public:
	struct FValeriaItem                           Item;                                              // 0x0000(0x0060)(BlueprintVisible, BlueprintReadOnly, Parm)
	bool                                          NewHighlighted;                                    // 0x0060(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ActionBarSlot_C_UpdateActionBarSlot) == 0x000008, "Wrong alignment on WBP_ActionBarSlot_C_UpdateActionBarSlot");
static_assert(sizeof(WBP_ActionBarSlot_C_UpdateActionBarSlot) == 0x000068, "Wrong size on WBP_ActionBarSlot_C_UpdateActionBarSlot");
static_assert(offsetof(WBP_ActionBarSlot_C_UpdateActionBarSlot, Item) == 0x000000, "Member 'WBP_ActionBarSlot_C_UpdateActionBarSlot::Item' has a wrong offset!");
static_assert(offsetof(WBP_ActionBarSlot_C_UpdateActionBarSlot, NewHighlighted) == 0x000060, "Member 'WBP_ActionBarSlot_C_UpdateActionBarSlot::NewHighlighted' has a wrong offset!");

// Function WBP_ActionBarSlot.WBP_ActionBarSlot_C.UpdateErrorBorder
// 0x0005 (0x0005 - 0x0000)
struct WBP_ActionBarSlot_C_UpdateErrorBorder final
{
public:
	bool                                          ShouldBeVisible;                                   // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ActionBarSlot_C_UpdateErrorBorder) == 0x000001, "Wrong alignment on WBP_ActionBarSlot_C_UpdateErrorBorder");
static_assert(sizeof(WBP_ActionBarSlot_C_UpdateErrorBorder) == 0x000005, "Wrong size on WBP_ActionBarSlot_C_UpdateErrorBorder");
static_assert(offsetof(WBP_ActionBarSlot_C_UpdateErrorBorder, ShouldBeVisible) == 0x000000, "Member 'WBP_ActionBarSlot_C_UpdateErrorBorder::ShouldBeVisible' has a wrong offset!");
static_assert(offsetof(WBP_ActionBarSlot_C_UpdateErrorBorder, Temp_bool_Variable) == 0x000001, "Member 'WBP_ActionBarSlot_C_UpdateErrorBorder::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_ActionBarSlot_C_UpdateErrorBorder, Temp_byte_Variable) == 0x000002, "Member 'WBP_ActionBarSlot_C_UpdateErrorBorder::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_ActionBarSlot_C_UpdateErrorBorder, Temp_byte_Variable_1) == 0x000003, "Member 'WBP_ActionBarSlot_C_UpdateErrorBorder::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_ActionBarSlot_C_UpdateErrorBorder, K2Node_Select_Default) == 0x000004, "Member 'WBP_ActionBarSlot_C_UpdateErrorBorder::K2Node_Select_Default' has a wrong offset!");

}

