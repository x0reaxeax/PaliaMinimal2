#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: S6EnhancedInputExtended

#include "Basic.hpp"


namespace SDK
{

// Enum S6EnhancedInputExtended.EPriorityType
// NumValues: 0x0004
enum class EPriorityType : uint8
{
	Automatic                                = 0,
	Replace                                  = 1,
	Configured                               = 2,
	EPriorityType_MAX                        = 3,
};

// ScriptStruct S6EnhancedInputExtended.InputMappingPriorityData
// 0x0038 (0x0038 - 0x0000)
struct FInputMappingPriorityData final
{
public:
	EPriorityType                                 PriorityType;                                      // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1DA3[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UInputMappingContext*                   InputMappingContext;                               // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class US6EnhancedInputCustomPriorities> CustomPriorityDataAsset;                           // 0x0010(0x0028)(Edit, BlueprintVisible, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FInputMappingPriorityData) == 0x000008, "Wrong alignment on FInputMappingPriorityData");
static_assert(sizeof(FInputMappingPriorityData) == 0x000038, "Wrong size on FInputMappingPriorityData");
static_assert(offsetof(FInputMappingPriorityData, PriorityType) == 0x000000, "Member 'FInputMappingPriorityData::PriorityType' has a wrong offset!");
static_assert(offsetof(FInputMappingPriorityData, InputMappingContext) == 0x000008, "Member 'FInputMappingPriorityData::InputMappingContext' has a wrong offset!");
static_assert(offsetof(FInputMappingPriorityData, CustomPriorityDataAsset) == 0x000010, "Member 'FInputMappingPriorityData::CustomPriorityDataAsset' has a wrong offset!");

// ScriptStruct S6EnhancedInputExtended.PreconfiguredInputMappingContextInfo
// 0x0010 (0x0010 - 0x0000)
struct FPreconfiguredInputMappingContextInfo final
{
public:
	int32                                         Priority;                                          // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bAlsoReplace;                                      // 0x0004(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bAllowReplace;                                     // 0x0005(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bAllowAutomaticStacking;                           // 0x0006(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1DA4[0x1];                                     // 0x0007(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class UInputMappingContext*                   InputMappingContext;                               // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FPreconfiguredInputMappingContextInfo) == 0x000008, "Wrong alignment on FPreconfiguredInputMappingContextInfo");
static_assert(sizeof(FPreconfiguredInputMappingContextInfo) == 0x000010, "Wrong size on FPreconfiguredInputMappingContextInfo");
static_assert(offsetof(FPreconfiguredInputMappingContextInfo, Priority) == 0x000000, "Member 'FPreconfiguredInputMappingContextInfo::Priority' has a wrong offset!");
static_assert(offsetof(FPreconfiguredInputMappingContextInfo, bAlsoReplace) == 0x000004, "Member 'FPreconfiguredInputMappingContextInfo::bAlsoReplace' has a wrong offset!");
static_assert(offsetof(FPreconfiguredInputMappingContextInfo, bAllowReplace) == 0x000005, "Member 'FPreconfiguredInputMappingContextInfo::bAllowReplace' has a wrong offset!");
static_assert(offsetof(FPreconfiguredInputMappingContextInfo, bAllowAutomaticStacking) == 0x000006, "Member 'FPreconfiguredInputMappingContextInfo::bAllowAutomaticStacking' has a wrong offset!");
static_assert(offsetof(FPreconfiguredInputMappingContextInfo, InputMappingContext) == 0x000008, "Member 'FPreconfiguredInputMappingContextInfo::InputMappingContext' has a wrong offset!");

}

